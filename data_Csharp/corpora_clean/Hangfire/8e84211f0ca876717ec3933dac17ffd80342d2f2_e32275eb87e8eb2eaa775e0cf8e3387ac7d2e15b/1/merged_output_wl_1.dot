digraph  {
d15 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", color=green, community=0, label="0: Logger.ErrorException(\r\n                        String.Format(\r\n                            ''Failed to process the job '{0}': an exception occurred.'',\r\n                            context.JobId),\r\n                        failedState.Exception)", span="67-71"];
d5 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44"];
d6 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label="var failedState = context.CandidateState as FailedState", span="46-46"];
d14 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label=LogEvents, span="65-65"];
d16 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label="Exit Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44"];
d20 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d21 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="166-166"];
d26 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", color=green, community=0, label="0: Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay),\r\n                    failedState.Exception)", span="97-104"];
d47 [label="Hangfire.AutomaticRetryAttribute", span=""];
d18 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", label="Entry Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82"];
d22 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="84-84"];
d25 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", label=LogEvents, span="95-95"];
d27 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", label="Exit Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82"];
d33 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
d34 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="285-285"];
d35 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", color=green, community=0, label="0: context.CandidateState = new DeletedState\r\n            {\r\n                Reason = String.Format(''Automatic deletion after retry count exceeded {0}'', Attempts)\r\n            }", span="115-118"];
d19 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", label="Entry Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113"];
d36 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", label=LogEvents, span="120-120"];
d39 [cluster="Hangfire.States.DeletedState.DeletedState()", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
d37 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", color=green, community=0, label="0: Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occured. Job was automatically deleted because the retry attempt count exceeded {1}.'',\r\n                        context.JobId,\r\n                        Attempts),\r\n                    failedState.Exception)", span="122-127"];
d38 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", label="Exit Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113"];
d32 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d9 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="53-53"];
d11 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label="ScheduleAgainLater(context, retryAttempt, failedState)", span="57-57"];
d13 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label="TransitionToDeleted(context, failedState)", span="61-61"];
d7 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label="failedState == null", span="47-47"];
d12 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label="retryAttempt > Attempts && OnAttemptsExceeded == AttemptsExceededAction.Delete", span="59-59"];
d8 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label="return;", span="50-50"];
d1 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", label="Attempts = DefaultRetryAttempts", span="22-22"];
d2 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", label="LogEvents = true", span="23-23"];
d3 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", label="OnAttemptsExceeded = AttemptsExceededAction.Fail", span="24-24"];
d10 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", label="retryAttempt <= Attempts", span="55-55"];
d24 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", label="context.CandidateState = new ScheduledState(delay)\r\n            {\r\n                Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n            }", span="90-93"];
d28 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", label="Entry Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132"];
d23 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="86-86"];
d29 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
d17 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54"];
d0 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20"];
d4 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", label="Exit Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20"];
d31 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
d42 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132"];
d40 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", label="var random = new Random()", span="134-134"];
d41 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="135-136"];
d30 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49"];
d43 [cluster="System.Random.Random()", label="Entry System.Random.Random()", span="0-0"];
d44 [cluster="System.Math.Pow(double, double)", label="Entry System.Math.Pow(double, double)", span="0-0"];
d45 [cluster="System.Random.Next(int)", label="Entry System.Random.Next(int)", span="0-0"];
d46 [cluster="System.Math.Round(double)", label="Entry System.Math.Round(double)", span="0-0"];
m0_16 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_57 [cluster="System.Random.Next(int, int)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry System.Random.Next(int, int)", span="0-0"];
m0_53 [cluster="System.Random.Random(int)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry System.Random.Random(int)", span="0-0"];
m0_2 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int)", span="37-37"];
m0_3 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int)", file="AutomaticRetryServerComponentWrapper.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int)", span="37-37"];
m0_18 [cluster="object.GetType()", file="AutomaticRetryServerComponentWrapper.cs", label="Entry object.GetType()", span="0-0"];
m0_39 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m0_40 [cluster="System.Func<T, TResult>.Invoke(T)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_17 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m0_58 [cluster="System.TimeSpan.FromSeconds(double)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m0_20 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="69-69"];
m0_21 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="ExecuteWithAutomaticRetry(cancellationToken)", span="71-71"];
m0_22 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.Execute(System.Threading.CancellationToken)", span="69-69"];
m0_41 [cluster="Hangfire.Logging.ILog.ErrorFormat(string, params object[])", file="AutomaticRetryServerComponentWrapper.cs", label="Entry Hangfire.Logging.ILog.ErrorFormat(string, params object[])", span="158-158"];
m0_0 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32"];
m0_1 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", file="AutomaticRetryServerComponentWrapper.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent)", span="32-32"];
m0_43 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="AutomaticRetryServerComponentWrapper.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m0_23 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="74-74"];
m0_24 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="var i = 0", span="76-76"];
m0_26 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="_innerComponent.Execute(cancellationToken)", span="80-80"];
m0_35 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="cancellationToken.WaitHandle.WaitOne(nextTry)", span="103-103"];
m0_25 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="i <= _maxRetryAttempts", span="76-76"];
m0_31 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="i >= _maxRetryAttempts - 1", span="90-90"];
m0_33 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="var nextTry = _delayCallback(i)", span="92-92"];
m0_34 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", color=red, community=0, file="AutomaticRetryServerComponentWrapper.cs", label="0: _logger.ErrorFormat(\r\n                        ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                        ex,\r\n                        _maxRetryAttempts,\r\n                        i + 1,\r\n                        _maxRetryAttempts,\r\n                        nextTry)", span="94-100"];
m0_37 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="i++", span="76-76"];
m0_27 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="return;", span="81-81"];
m0_28 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label=OperationCanceledException, span="83-83"];
m0_29 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="throw;", span="85-85"];
m0_30 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label=Exception, span="87-87"];
m0_32 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="throw;", span="90-90"];
m0_36 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="104-104"];
m0_38 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", file="AutomaticRetryServerComponentWrapper.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ExecuteWithAutomaticRetry(System.Threading.CancellationToken)", span="74-74"];
m0_44 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="AutomaticRetryServerComponentWrapper.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="109-109"];
m0_45 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="AutomaticRetryServerComponentWrapper.cs", label="return _innerComponent.ToString();", span="111-111"];
m0_46 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", file="AutomaticRetryServerComponentWrapper.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.ToString()", span="109-109"];
m0_19 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="360-360"];
m0_54 [cluster="System.Guid.NewGuid()", file="AutomaticRetryServerComponentWrapper.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m0_55 [cluster="System.Guid.GetHashCode()", file="AutomaticRetryServerComponentWrapper.cs", label="Entry System.Guid.GetHashCode()", span="0-0"];
m0_42 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m0_4 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", span="44-44"];
m0_5 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="innerComponent == null", span="49-49"];
m0_7 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="delayCallback == null", span="50-50"];
m0_9 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="maxRetryAttempts < 0", span="51-51"];
m0_11 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="_innerComponent = innerComponent", span="58-58"];
m0_12 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="_maxRetryAttempts = maxRetryAttempts", span="59-59"];
m0_13 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="_delayCallback = delayCallback", span="60-60"];
m0_6 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="throw new ArgumentNullException(''innerComponent'');", span="49-49"];
m0_8 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="throw new ArgumentNullException(''delayCallback'');", span="50-50"];
m0_10 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="throw new ArgumentOutOfRangeException(\r\n                    ''maxRetryAttempts'',\r\n                    ''MaxRetryAttempts property value must be greater or equal to 0.'');", span="53-55"];
m0_14 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="_logger = LogProvider.GetLogger(_innerComponent.GetType())", span="61-61"];
m0_15 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", file="AutomaticRetryServerComponentWrapper.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.AutomaticRetryServerComponentWrapper(Hangfire.Server.IServerComponent, int, System.Func<int, System.TimeSpan>)", span="44-44"];
m0_48 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="AutomaticRetryServerComponentWrapper.cs", label="Entry Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="114-114"];
m0_49 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="AutomaticRetryServerComponentWrapper.cs", label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="117-117"];
m0_50 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="AutomaticRetryServerComponentWrapper.cs", label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="118-119"];
m0_51 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="AutomaticRetryServerComponentWrapper.cs", label="return TimeSpan.FromSeconds(nextTry);", span="121-121"];
m0_52 [cluster="Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", file="AutomaticRetryServerComponentWrapper.cs", label="Exit Hangfire.Server.AutomaticRetryServerComponentWrapper.GetBackOffMultiplier(int)", span="114-114"];
m0_47 [cluster="object.ToString()", file="AutomaticRetryServerComponentWrapper.cs", label="Entry object.ToString()", span="0-0"];
m0_59 [file="AutomaticRetryServerComponentWrapper.cs", label="Hangfire.Server.AutomaticRetryServerComponentWrapper", span=""];
m1_6 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="var failedState = context.CandidateState as FailedState", span="46-46"];
m1_9 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="var retryAttempt = context.GetJobParameter<int>(''RetryCount'') + 1", span="53-53"];
m1_11 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="ScheduleAgainLater(context, retryAttempt, failedState)", span="57-57"];
m1_13 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="TransitionToDeleted(context, failedState)", span="61-61"];
m1_15 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="Logger.ErrorException(\r\n                        String.Format(\r\n                            ''Failed to process the job '{0}': an exception occurred.'',\r\n                            context.JobId),\r\n                        failedState.Exception)", span="67-71"];
m1_7 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="failedState == null", span="47-47"];
m1_8 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="return;", span="50-50"];
m1_10 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="retryAttempt <= Attempts", span="55-55"];
m1_12 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label="retryAttempt > Attempts && OnAttemptsExceeded == AttemptsExceededAction.Delete", span="59-59"];
m1_14 [cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="BackgroundJobServer.cs", label=LogEvents, span="65-65"];
m1_31 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="BackgroundJobServer.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m1_34 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="285-285"];
m1_28 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="BackgroundJobServer.cs", label="Entry Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132"];
m1_40 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="BackgroundJobServer.cs", label="var random = new Random()", span="134-134"];
m1_41 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="BackgroundJobServer.cs", label="return (int)Math.Round(\r\n                Math.Pow(retryCount - 1, 4) + 15 + (random.Next(30) * (retryCount)));", span="135-136"];
m1_42 [cluster="Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", file="BackgroundJobServer.cs", label="Exit Hangfire.AutomaticRetryAttribute.SecondsToDelay(long)", span="132-132"];
m1_32 [cluster="string.Format(string, object, object)", file="BackgroundJobServer.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m1_17 [cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="BackgroundJobServer.cs", label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="54-54"];
m1_33 [cluster="string.Format(string, params object[])", file="BackgroundJobServer.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m1_43 [cluster="System.Random.Random()", file="BackgroundJobServer.cs", label="Entry System.Random.Random()", span="0-0"];
m1_18 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label="Entry Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82"];
m1_22 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label="var delay = TimeSpan.FromSeconds(SecondsToDelay(retryAttempt))", span="84-84"];
m1_23 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label="context.SetJobParameter(''RetryCount'', retryAttempt)", span="86-86"];
m1_24 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label="context.CandidateState = new ScheduledState(delay)\r\n            {\r\n                Reason = String.Format(''Retry attempt {0} of {1}'', retryAttempt, Attempts)\r\n            }", span="90-93"];
m1_26 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label="Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occurred. Retry attempt {1} of {2} will be performed in {3}.'',\r\n                        context.JobId,\r\n                        retryAttempt,\r\n                        Attempts,\r\n                        delay),\r\n                    failedState.Exception)", span="97-104"];
m1_25 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label=LogEvents, span="95-95"];
m1_27 [cluster="Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label="Exit Hangfire.AutomaticRetryAttribute.ScheduleAgainLater(Hangfire.States.ElectStateContext, int, Hangfire.States.FailedState)", span="82-82"];
m1_21 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="BackgroundJobServer.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="166-166"];
m1_29 [cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundJobServer.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m1_44 [cluster="System.Math.Pow(double, double)", file="BackgroundJobServer.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m1_45 [cluster="System.Random.Next(int)", file="BackgroundJobServer.cs", label="Entry System.Random.Next(int)", span="0-0"];
m1_46 [cluster="System.Math.Round(double)", file="BackgroundJobServer.cs", label="Entry System.Math.Round(double)", span="0-0"];
m1_0 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="BackgroundJobServer.cs", label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20"];
m1_1 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="BackgroundJobServer.cs", label="Attempts = DefaultRetryAttempts", span="22-22"];
m1_2 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="BackgroundJobServer.cs", label="LogEvents = true", span="23-23"];
m1_3 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="BackgroundJobServer.cs", label="OnAttemptsExceeded = AttemptsExceededAction.Fail", span="24-24"];
m1_4 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="BackgroundJobServer.cs", label="Exit Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20"];
m1_20 [cluster="string.Format(string, object)", file="BackgroundJobServer.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_19 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label="Entry Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113"];
m1_35 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label="context.CandidateState = new DeletedState\r\n            {\r\n                Reason = String.Format(''Automatic deletion after retry count exceeded {0}'', Attempts)\r\n            }", span="115-118"];
m1_37 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label="Logger.WarnException(\r\n                    String.Format(\r\n                        ''Failed to process the job '{0}': an exception occured. Job was automatically deleted because the retry attempt count exceeded {1}.'',\r\n                        context.JobId,\r\n                        Attempts),\r\n                    failedState.Exception)", span="122-127"];
m1_36 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label=LogEvents, span="120-120"];
m1_38 [cluster="Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", file="BackgroundJobServer.cs", label="Exit Hangfire.AutomaticRetryAttribute.TransitionToDeleted(Hangfire.States.ElectStateContext, Hangfire.States.FailedState)", span="113-113"];
m1_30 [cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="BackgroundJobServer.cs", label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="49-49"];
m1_39 [cluster="Hangfire.States.DeletedState.DeletedState()", file="BackgroundJobServer.cs", label="Entry Hangfire.States.DeletedState.DeletedState()", span="27-27"];
m1_47 [file="BackgroundJobServer.cs", label="Hangfire.AutomaticRetryAttribute", span=""];
m2_9 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="78-78"];
m2_10 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''Using the following options for Hangfire Server:'')", span="80-80"];
m2_11 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="81-81"];
m2_12 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="82-82"];
m2_13 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="83-83"];
m2_14 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="84-84"];
m2_15 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="78-78"];
m2_7 [cluster="System.Math.Min(int, int)", file="BackgroundJobServerOptions.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m2_16 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="217-217"];
m2_18 [cluster="Unk.Join", file="BackgroundJobServerOptions.cs", label="Entry Unk.Join", span=""];
m2_0 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m2_1 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="WorkerCount = Math.Min(Environment.ProcessorCount * 5, MaxDefaultWorkerCount)", span="34-34"];
m2_2 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="ServerName = Environment.MachineName", span="35-35"];
m2_3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="36-36"];
m2_4 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="37-37"];
m2_5 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="38-38"];
m2_6 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptions.cs", label="Exit Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m2_19 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="82-82"];
m2_20 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="''''' + x + '''''", span="82-82"];
m2_21 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Exit lambda expression", span="82-82"];
m2_17 [cluster="Unk.Select", file="BackgroundJobServerOptions.cs", label="Entry Unk.Select", span=""];
m2_22 [file="BackgroundJobServerOptions.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m3_15 [cluster="Unk.InfoFormat", file="BackgroundJobServerOptionsFacts.cs", label="Entry Unk.InfoFormat", span=""];
m3_8 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.BackgroundJobServerOptions.Log(ILog)", span="59-59"];
m3_13 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", color=green, community=0, file="BackgroundJobServerOptionsFacts.cs", label="0: logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="65-65"];
m3_12 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="BackgroundJobServerOptionsFacts.cs", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="64-64"];
m3_10 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="BackgroundJobServerOptionsFacts.cs", label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="62-62"];
m3_11 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="BackgroundJobServerOptionsFacts.cs", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="63-63"];
m3_9 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="BackgroundJobServerOptionsFacts.cs", label="logger.InfoFormat(''Using the following options for HangFire Server:'')", span="61-61"];
m3_14 [cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.BackgroundJobServerOptions.Log(ILog)", span="59-59"];
m3_0 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptionsFacts.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13"];
m3_1 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptionsFacts.cs", label="WorkerCount = Environment.ProcessorCount * 5", span="15-15"];
m3_2 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptionsFacts.cs", label="ServerName = Environment.MachineName", span="16-16"];
m3_3 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptionsFacts.cs", label="Queues = new[] { EnqueuedState.DefaultQueue }", span="17-17"];
m3_4 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptionsFacts.cs", label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="18-18"];
m3_5 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptionsFacts.cs", label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="19-19"];
m3_6 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="BackgroundJobServerOptionsFacts.cs", label="Exit HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13"];
m3_17 [cluster="Unk.Join", file="BackgroundJobServerOptionsFacts.cs", label="Entry Unk.Join", span=""];
m3_18 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Entry lambda expression", span="63-63"];
m3_19 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="''''' + x + '''''", span="63-63"];
m3_20 [cluster="lambda expression", file="BackgroundJobServerOptionsFacts.cs", label="Exit lambda expression", span="63-63"];
m3_16 [cluster="Unk.Select", file="BackgroundJobServerOptionsFacts.cs", label="Entry Unk.Select", span=""];
m3_21 [file="BackgroundJobServerOptionsFacts.cs", label="HangFire.BackgroundJobServerOptions", span=""];
m4_35 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m4_37 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="RecurringJobScheduler.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer(_options))", span="50-50"];
m4_36 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="RecurringJobScheduler.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="49-49"];
m4_38 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForStorage()", span="47-47"];
m4_4 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="RecurringJobScheduler.cs", label="_serverMock = new Mock<BackgroundJobServer>(_options, _storage.Object)\r\n            {\r\n                CallBase = true\r\n            }", span="21-24"];
m4_5 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="RecurringJobScheduler.cs", label="_serverMock.Setup(x => x.GetServerRunner()).Returns(_runner.Object)", span="25-25"];
m4_83 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="137-137"];
m4_128 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="RecurringJobScheduler.cs", label="return new BackgroundJobServer(_options, _storage.Object);", span="139-139"];
m4_129 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.CreateServer()", span="137-137"];
m4_65 [cluster="Unk.Stop", file="RecurringJobScheduler.cs", label="Entry Unk.Stop", span=""];
m4_22 [cluster="Unk.Equal", file="RecurringJobScheduler.cs", label="Entry Unk.Equal", span=""];
m4_0 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", span="15-15"];
m4_1 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="RecurringJobScheduler.cs", label="_storage = new Mock<JobStorage>()", span="17-17"];
m4_2 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="RecurringJobScheduler.cs", label="_options = new BackgroundJobServerOptions()", span="18-18"];
m4_3 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.BackgroundJobServerFacts()", file="RecurringJobScheduler.cs", label="_runner = new Mock<IServerComponentRunner>()", span="20-20"];
m4_61 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69"];
m4_62 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="RecurringJobScheduler.cs", label="_serverMock.Object.Stop()", span="71-71"];
m4_63 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="RecurringJobScheduler.cs", label="_runner.Verify(x => x.Stop())", span="73-73"];
m4_64 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Stop_StopsTheServerComponentRunner()", span="69-69"];
m4_104 [cluster="object.GetType()", file="RecurringJobScheduler.cs", label="Entry object.GetType()", span="0-0"];
m4_39 [cluster="Unk.DoesNotThrow", file="RecurringJobScheduler.cs", label="Entry Unk.DoesNotThrow", span=""];
m4_69 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m4_71 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", color=green, community=0, file="RecurringJobScheduler.cs", label="0: _runner.Verify(x => x.Dispose())", span="81-81"];
m4_70 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="RecurringJobScheduler.cs", label="_serverMock.Object.Dispose()", span="79-79"];
m4_72 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Dispose_DisposesServerComponentRunner()", span="77-77"];
m4_9 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RecurringJobScheduler.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37"];
m4_21 [cluster="Unk.>", file="RecurringJobScheduler.cs", label="Entry Unk.>", span=""];
m4_112 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", span="118-118"];
m4_114 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="RecurringJobScheduler.cs", label="_storage.Setup(x => x.GetComponents()).Returns(new[] { storageComponent.Object })", span="122-122"];
m4_115 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="RecurringJobScheduler.cs", label="var server = CreateServer()", span="124-124"];
m4_113 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="RecurringJobScheduler.cs", label="var storageComponent = new Mock<IServerComponent>()", span="121-121"];
m4_116 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="RecurringJobScheduler.cs", label="var runners = server.GetServerComponentsRunner()", span="127-127"];
m4_118 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="RecurringJobScheduler.cs", label="Assert.Contains(storageComponent.Object, components)", span="134-134"];
m4_117 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="RecurringJobScheduler.cs", label="var components = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .ToArray()", span="130-132"];
m4_119 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsStorageComponents()", span="118-118"];
m4_6 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="RecurringJobScheduler.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", span="32-32"];
m4_124 [cluster="Unk.GetComponents", file="RecurringJobScheduler.cs", label="Entry Unk.GetComponents", span=""];
m4_44 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m4_45 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="RecurringJobScheduler.cs", label="JobStorage.Current = new Mock<JobStorage>().Object", span="56-56"];
m4_46 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="RecurringJobScheduler.cs", label="Assert.DoesNotThrow(() => new BackgroundJobServer())", span="57-57"];
m4_47 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_HasDefaultValue_ForOptions()", span="54-54"];
m4_77 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85"];
m4_78 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="RecurringJobScheduler.cs", label="var server = CreateServer()", span="87-87"];
m4_79 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="RecurringJobScheduler.cs", label="var runner = server.GetServerRunner()", span="89-89"];
m4_81 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="RecurringJobScheduler.cs", label="Assert.IsType<ServerCore>(((ServerComponentRunner) runner).Component)", span="92-92"];
m4_80 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="RecurringJobScheduler.cs", label="Assert.NotNull(runner)", span="91-91"];
m4_82 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerRunner_ReturnsNonNullResult()", span="85-85"];
m4_100 [cluster="Unk.ToArray", file="RecurringJobScheduler.cs", label="Entry Unk.ToArray", span=""];
m4_7 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueue(IDbConnection)", file="RecurringJobScheduler.cs", label="return _jobQueue;", span="34-34"];
m4_85 [cluster="Unk.NotNull", file="RecurringJobScheduler.cs", label="Entry Unk.NotNull", span=""];
m4_8 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="11-11"];
m4_43 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41"];
m4_11 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RecurringJobScheduler.cs", label="Exit Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", span="37-37"];
m4_51 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer()", file="RecurringJobScheduler.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer()", span="36-36"];
m4_73 [cluster="Unk.Dispose", file="RecurringJobScheduler.cs", label="Entry Unk.Dispose", span=""];
m4_34 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", file="RecurringJobScheduler.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions, HangFire.JobStorage)", span="46-46"];
m4_10 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.GetJobQueueMonitoringApi(IDbConnection)", file="RecurringJobScheduler.cs", label="return _monitoringApi;", span="39-39"];
m4_120 [cluster="Mock<IServerComponent>.cstr", file="RecurringJobScheduler.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m4_52 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61"];
m4_53 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="RecurringJobScheduler.cs", label="_serverMock.Object.Start()", span="63-63"];
m4_54 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="RecurringJobScheduler.cs", label="_runner.Verify(x => x.Start())", span="65-65"];
m4_55 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Start_StartsTheServerComponentRunner()", span="61-61"];
m4_95 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="RecurringJobScheduler.cs", label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="99-99"];
m4_99 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="RecurringJobScheduler.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m4_17 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m4_18 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RecurringJobScheduler.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(null, _storage.Object))", span="31-32"];
m4_19 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RecurringJobScheduler.cs", label="Assert.Equal(''options'', exception.ParamName)", span="34-34"];
m4_20 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="29-29"];
m4_125 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="131-131"];
m4_74 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="81-81"];
m4_75 [cluster="lambda expression", color=green, community=0, file="RecurringJobScheduler.cs", label="0: x.Dispose()", span="81-81"];
m4_76 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="81-81"];
m4_24 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new BackgroundJobServer(null, _storage.Object)", span="32-32"];
m4_32 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new BackgroundJobServer(_options, null)", span="41-41"];
m4_41 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new BackgroundJobServer(_options)", span="50-50"];
m4_13 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="25-25"];
m4_23 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="32-32"];
m4_25 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="32-32"];
m4_31 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="41-41"];
m4_33 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="41-41"];
m4_40 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="50-50"];
m4_42 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="50-50"];
m4_58 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="65-65"];
m4_66 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="73-73"];
m4_121 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="122-122"];
m4_15 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="25-25"];
m4_14 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetServerRunner()", span="25-25"];
m4_59 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.Start()", span="65-65"];
m4_60 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="65-65"];
m4_67 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.Stop()", span="73-73"];
m4_68 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="73-73"];
m4_123 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="122-122"];
m4_122 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetComponents()", span="122-122"];
m4_48 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="57-57"];
m4_101 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="105-105"];
m4_105 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="108-108"];
m4_108 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="109-109"];
m4_50 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="57-57"];
m4_49 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="new BackgroundJobServer()", span="57-57"];
m4_103 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="105-105"];
m4_102 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetType()", span="105-105"];
m4_107 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="108-108"];
m4_106 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.Component", span="108-108"];
m4_110 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="109-109"];
m4_109 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.GetType()", span="109-109"];
m4_126 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.Component", span="131-131"];
m4_127 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="131-131"];
m4_97 [cluster="Unk.Contains", file="RecurringJobScheduler.cs", label="Entry Unk.Contains", span=""];
m4_56 [cluster="Unk.Start", file="RecurringJobScheduler.cs", label="Entry Unk.Start", span=""];
m4_57 [cluster="Unk.Verify", file="RecurringJobScheduler.cs", label="Entry Unk.Verify", span=""];
m4_16 [cluster="Unk.GetServerRunner", file="RecurringJobScheduler.cs", label="Entry Unk.GetServerRunner", span=""];
m4_96 [cluster="Unk.Select", file="RecurringJobScheduler.cs", label="Entry Unk.Select", span=""];
m4_111 [cluster="Unk.GetType", file="RecurringJobScheduler.cs", label="Entry Unk.GetType", span=""];
m4_27 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m4_28 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobScheduler.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobServer(_options, null))", span="40-41"];
m4_29 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobScheduler.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="43-43"];
m4_30 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="38-38"];
m4_98 [cluster="Unk.True", file="RecurringJobScheduler.cs", label="Entry Unk.True", span=""];
m4_84 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="RecurringJobScheduler.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="77-77"];
m4_12 [cluster="Unk.Returns", file="RecurringJobScheduler.cs", label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", span=""];
m4_26 [cluster="BackgroundJobServer.cstr", file="RecurringJobScheduler.cs", label="Entry BackgroundJobServer.cstr", span=""];
m4_86 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RecurringJobScheduler.cs", label="Entry HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96"];
m4_87 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RecurringJobScheduler.cs", label="var server = CreateServer()", span="99-99"];
m4_88 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RecurringJobScheduler.cs", label="var runners = server.GetServerComponentsRunner()", span="102-102"];
m4_89 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RecurringJobScheduler.cs", label="Assert.True(runners.Select(x => x.GetType()).Contains(typeof(WorkerManager)))", span="105-105"];
m4_90 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RecurringJobScheduler.cs", label="var componentTypes = runners.OfType<ServerComponentRunner>()\r\n                .Select(x => x.Component)\r\n                .Select(x => x.GetType())\r\n                .ToArray()", span="107-110"];
m4_93 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RecurringJobScheduler.cs", label="Assert.Contains(typeof(SchedulePoller), componentTypes)", span="114-114"];
m4_91 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RecurringJobScheduler.cs", label="Assert.Contains(typeof(ServerHeartbeat), componentTypes)", span="112-112"];
m4_92 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RecurringJobScheduler.cs", label="Assert.Contains(typeof(ServerWatchdog), componentTypes)", span="113-113"];
m4_94 [cluster="HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", file="RecurringJobScheduler.cs", label="Exit HangFire.Core.Tests.BackgroundJobServerFacts.GetServerComponentsRunner_ContainsDefaultComponents()", span="96-96"];
m4_130 [file="RecurringJobScheduler.cs", label="HangFire.Core.Tests.BackgroundJobServerFacts", span=""];
d15 -> d16  [color=green, key=0, style=solid];
d15 -> d20  [color=green, key=2, style=dotted];
d15 -> d21  [color=green, key=2, style=dotted];
d5 -> d15  [color=green, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
d5 -> d6  [key=0, style=solid];
d5 -> d9  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
d5 -> d11  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
d5 -> d13  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
d6 -> d15  [color=green, key=1, label=failedState, style=dashed];
d6 -> d7  [key=0, style=solid];
d6 -> d11  [color=darkseagreen4, key=1, label=failedState, style=dashed];
d6 -> d13  [color=darkseagreen4, key=1, label=failedState, style=dashed];
d14 -> d15  [color=green, key=0, style=solid];
d14 -> d16  [key=0, style=solid];
d16 -> d5  [color=blue, key=0, style=bold];
d26 -> d27  [color=green, key=0, style=solid];
d26 -> d33  [color=green, key=2, style=dotted];
d26 -> d34  [color=green, key=2, style=dotted];
d47 -> d26  [color=green, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d35  [color=green, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d37  [color=green, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d14  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d1  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d2  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d3  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d10  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d11  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d12  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d13  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d24  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d25  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d47 -> d36  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
d18 -> d26  [color=green, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
d18 -> d5  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ElectStateContext context", style=bold];
d18 -> d6  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.FailedState failedState", style=bold];
d18 -> d22  [key=0, style=solid];
d18 -> d23  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
d18 -> d24  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
d18 -> d9  [color=darkorchid, key=3, label="Parameter variable int retryAttempt", style=bold];
d22 -> d26  [color=green, key=1, label=delay, style=dashed];
d22 -> d23  [key=0, style=solid];
d22 -> d28  [key=2, style=dotted];
d22 -> d29  [key=2, style=dotted];
d22 -> d24  [color=darkseagreen4, key=1, label=delay, style=dashed];
d25 -> d26  [color=green, key=0, style=solid];
d25 -> d27  [key=0, style=solid];
d27 -> d18  [color=blue, key=0, style=bold];
d35 -> d36  [color=green, key=0, style=solid];
d35 -> d39  [color=green, key=2, style=dotted];
d35 -> d20  [color=green, key=2, style=dotted];
d19 -> d35  [color=green, key=0, style=solid];
d19 -> d37  [color=green, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
d19 -> d5  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ElectStateContext context", style=bold];
d19 -> d6  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.FailedState failedState", style=bold];
d36 -> d37  [color=green, key=0, style=solid];
d36 -> d38  [key=0, style=solid];
d37 -> d38  [color=green, key=0, style=solid];
d37 -> d32  [color=green, key=2, style=dotted];
d37 -> d34  [color=green, key=2, style=dotted];
d38 -> d19  [color=blue, key=0, style=bold];
d9 -> d10  [key=0, style=solid];
d9 -> d17  [key=2, style=dotted];
d9 -> d11  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
d9 -> d12  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
d11 -> d16  [key=0, style=solid];
d11 -> d18  [key=2, style=dotted];
d13 -> d16  [key=0, style=solid];
d13 -> d19  [key=2, style=dotted];
d7 -> d9  [key=0, style=solid];
d7 -> d8  [key=0, style=solid];
d12 -> d14  [key=0, style=solid];
d12 -> d13  [key=0, style=solid];
d8 -> d16  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d2 -> d3  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d10 -> d11  [key=0, style=solid];
d10 -> d12  [key=0, style=solid];
d24 -> d25  [key=0, style=solid];
d24 -> d32  [key=2, style=dotted];
d24 -> d31  [key=2, style=dotted];
d28 -> d18  [color=darkorchid, key=3, label="Parameter variable long retryCount", style=bold];
d28 -> d40  [key=0, style=solid];
d28 -> d41  [color=darkseagreen4, key=1, label=long, style=dashed];
d23 -> d24  [key=0, style=solid];
d23 -> d30  [key=2, style=dotted];
d0 -> d1  [key=0, style=solid];
d4 -> d0  [color=blue, key=0, style=bold];
d42 -> d28  [color=blue, key=0, style=bold];
d40 -> d41  [key=0, style=solid];
d40 -> d43  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d41 -> d44  [key=2, style=dotted];
d41 -> d45  [key=2, style=dotted];
d41 -> d46  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [key=2, style=dotted];
m0_22 -> m0_20  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_26  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_23 -> m0_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_23 -> m0_20  [color=darkorchid, key=3, label="Parameter variable System.Threading.CancellationToken cancellationToken", style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_31  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_24 -> m0_33  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_24 -> m0_34  [color=red, key=1, label=i, style=dashed];
m0_24 -> m0_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_24 -> m0_24  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_39  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_42  [key=2, style=dotted];
m0_35 -> m0_35  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_38  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=0, style=solid];
m0_33 -> m0_34  [color=red, key=0, style=solid];
m0_33 -> m0_40  [key=2, style=dotted];
m0_33 -> m0_35  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m0_34 -> m0_35  [color=red, key=0, style=solid];
m0_34 -> m0_41  [color=red, key=2, style=dotted];
m0_37 -> m0_25  [key=0, style=solid];
m0_37 -> m0_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m0_27 -> m0_38  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_38  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_32 -> m0_38  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_43  [key=2, style=dotted];
m0_36 -> m0_36  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m0_38 -> m0_23  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [key=0, style=solid];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [key=2, style=dotted];
m0_46 -> m0_44  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [color=darkseagreen4, key=1, label="System.Func<int, System.TimeSpan>", style=dashed];
m0_4 -> m0_9  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_4 -> m0_11  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m0_4 -> m0_12  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_4 -> m0_13  [color=darkseagreen4, key=1, label="System.Func<int, System.TimeSpan>", style=dashed];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_6 -> m0_15  [key=0, style=solid];
m0_6 -> m0_16  [key=2, style=dotted];
m0_8 -> m0_15  [key=0, style=solid];
m0_8 -> m0_16  [key=2, style=dotted];
m0_10 -> m0_15  [key=0, style=solid];
m0_10 -> m0_17  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_18  [key=2, style=dotted];
m0_14 -> m0_19  [key=2, style=dotted];
m0_15 -> m0_4  [color=blue, key=0, style=bold];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_53  [key=2, style=dotted];
m0_49 -> m0_54  [key=2, style=dotted];
m0_49 -> m0_55  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> d44  [key=2, style=dotted];
m0_50 -> m0_57  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_58  [key=2, style=dotted];
m0_52 -> m0_48  [color=blue, key=0, style=bold];
m0_59 -> m0_11  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m0_59 -> m0_12  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m0_59 -> m0_13  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m0_59 -> m0_14  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m0_59 -> m0_21  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m0_59 -> m0_25  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m0_59 -> m0_26  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m0_59 -> m0_31  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m0_59 -> m0_33  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m0_59 -> m0_34  [color=red, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m0_59 -> m0_45  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryServerComponentWrapper", style=dashed];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_11  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m1_6 -> m1_13  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m1_6 -> m1_15  [color=darkseagreen4, key=1, label=failedState, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_17  [key=2, style=dotted];
m1_9 -> m1_11  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m1_9 -> m1_12  [color=darkseagreen4, key=1, label=retryAttempt, style=dashed];
m1_11 -> d16  [key=0, style=solid];
m1_11 -> m1_18  [key=2, style=dotted];
m1_13 -> d16  [key=0, style=solid];
m1_13 -> m1_19  [key=2, style=dotted];
m1_15 -> d16  [key=0, style=solid];
m1_15 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_21  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_8 -> d16  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> d16  [key=0, style=solid];
m1_28 -> m1_40  [key=0, style=solid];
m1_28 -> m1_41  [color=darkseagreen4, key=1, label=long, style=dashed];
m1_28 -> m1_18  [color=darkorchid, key=3, label="Parameter variable long retryCount", style=bold];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_43  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_44  [key=2, style=dotted];
m1_41 -> m1_45  [key=2, style=dotted];
m1_41 -> m1_46  [key=2, style=dotted];
m1_42 -> m1_28  [color=blue, key=0, style=bold];
m1_18 -> m1_22  [key=0, style=solid];
m1_18 -> m1_23  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_18 -> m1_24  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_18 -> m1_26  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_18 -> d5  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ElectStateContext context", style=bold];
m1_18 -> m1_9  [color=darkorchid, key=3, label="Parameter variable int retryAttempt", style=bold];
m1_18 -> m1_6  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.FailedState failedState", style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_28  [key=2, style=dotted];
m1_22 -> m1_29  [key=2, style=dotted];
m1_22 -> m1_24  [color=darkseagreen4, key=1, label=delay, style=dashed];
m1_22 -> m1_26  [color=darkseagreen4, key=1, label=delay, style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_30  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_31  [key=2, style=dotted];
m1_24 -> m1_32  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_33  [key=2, style=dotted];
m1_26 -> m1_34  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=0, style=solid];
m1_27 -> m1_18  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_19 -> m1_35  [key=0, style=solid];
m1_19 -> m1_37  [color=darkseagreen4, key=1, label="Hangfire.States.ElectStateContext", style=dashed];
m1_19 -> d5  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.ElectStateContext context", style=bold];
m1_19 -> m1_6  [color=darkorchid, key=3, label="Parameter variable Hangfire.States.FailedState failedState", style=bold];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_39  [key=2, style=dotted];
m1_35 -> m1_20  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_32  [key=2, style=dotted];
m1_37 -> m1_34  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=0, style=solid];
m1_38 -> m1_19  [color=blue, key=0, style=bold];
m1_47 -> m1_1  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_2  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_3  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_10  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_11  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_12  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_13  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_14  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_24  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_25  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_26  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_35  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_36  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m1_47 -> m1_37  [color=darkseagreen4, key=1, label="Hangfire.AutomaticRetryAttribute", style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m2_9 -> m2_12  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m2_9 -> m2_13  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m2_9 -> m2_14  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_16  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_16  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_17  [key=2, style=dotted];
m2_12 -> m2_18  [key=2, style=dotted];
m2_12 -> m2_16  [key=2, style=dotted];
m2_12 -> m2_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=2, style=dotted];
m2_15 -> m2_9  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> d29  [key=2, style=dotted];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> d29  [key=2, style=dotted];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_19  [color=blue, key=0, style=bold];
m2_22 -> m2_1  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m2_22 -> m2_2  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m2_22 -> m2_3  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m2_22 -> m2_4  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m2_22 -> m2_5  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m2_22 -> m2_11  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m2_22 -> m2_12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m2_22 -> m2_13  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m2_22 -> m2_14  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m3_8 -> m3_13  [color=green, key=1, label=ILog, style=dashed];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m3_8 -> m3_11  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m3_8 -> m3_12  [color=darkseagreen4, key=1, label=ILog, style=dashed];
m3_13 -> m3_14  [color=green, key=0, style=solid];
m3_13 -> m3_15  [color=green, key=2, style=dotted];
m3_12 -> m3_13  [color=green, key=0, style=solid];
m3_12 -> m3_15  [key=2, style=dotted];
m3_10 -> m3_15  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_15  [key=2, style=dotted];
m3_11 -> m3_16  [key=2, style=dotted];
m3_11 -> m3_17  [key=2, style=dotted];
m3_11 -> m3_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_9 -> m3_15  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_14 -> m3_8  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> d29  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> d29  [key=2, style=dotted];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_20 -> m3_18  [color=blue, key=0, style=bold];
m3_21 -> m3_13  [color=green, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m3_21 -> m3_1  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m3_21 -> m3_2  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m3_21 -> m3_3  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m3_21 -> m3_4  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m3_21 -> m3_5  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m3_21 -> m3_10  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m3_21 -> m3_11  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m3_21 -> m3_12  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServerOptions", style=dashed];
m4_35 -> m4_36  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_39  [key=2, style=dotted];
m4_37 -> m4_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_7  [key=2, style=dotted];
m4_38 -> m4_35  [color=blue, key=0, style=bold];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_10  [key=2, style=dotted];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_11  [key=2, style=dotted];
m4_5 -> m4_12  [key=2, style=dotted];
m4_5 -> m4_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_83 -> m4_128  [key=0, style=solid];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_26  [key=2, style=dotted];
m4_129 -> m4_83  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_4  [key=2, style=dotted];
m4_1 -> m4_7  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_8  [key=2, style=dotted];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_9  [key=2, style=dotted];
m4_61 -> m4_62  [key=0, style=solid];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_65  [key=2, style=dotted];
m4_63 -> m4_57  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_64 -> m4_61  [color=blue, key=0, style=bold];
m4_69 -> m4_70  [key=0, style=solid];
m4_71 -> m4_72  [color=green, key=0, style=solid];
m4_71 -> m4_57  [color=green, key=2, style=dotted];
m4_71 -> m4_74  [color=green, key=1, label="lambda expression", style=dashed];
m4_70 -> m4_71  [color=green, key=0, style=solid];
m4_70 -> m4_73  [key=2, style=dotted];
m4_72 -> m4_69  [color=blue, key=0, style=bold];
m4_9 -> m4_10  [key=0, style=solid];
m4_112 -> m4_113  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_11  [key=2, style=dotted];
m4_114 -> m4_12  [key=2, style=dotted];
m4_114 -> m4_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_115 -> m4_116  [key=0, style=solid];
m4_115 -> m4_83  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_120  [key=2, style=dotted];
m4_113 -> m4_118  [color=darkseagreen4, key=1, label=storageComponent, style=dashed];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_95  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_97  [key=2, style=dotted];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_99  [key=2, style=dotted];
m4_117 -> m4_96  [key=2, style=dotted];
m4_117 -> m4_100  [key=2, style=dotted];
m4_117 -> m4_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_119 -> m4_112  [color=blue, key=0, style=bold];
m4_6 -> m4_0  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_45 -> m4_7  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_46 -> m4_39  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_47 -> m4_44  [color=blue, key=0, style=bold];
m4_77 -> m4_78  [key=0, style=solid];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_83  [key=2, style=dotted];
m4_79 -> m4_80  [key=0, style=solid];
m4_79 -> m4_84  [key=2, style=dotted];
m4_79 -> m4_81  [color=darkseagreen4, key=1, label=runner, style=dashed];
m4_81 -> m4_21  [key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_85  [key=2, style=dotted];
m4_82 -> m4_77  [color=blue, key=0, style=bold];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_6  [color=blue, key=0, style=bold];
m4_11 -> m4_9  [color=blue, key=0, style=bold];
m4_10 -> m4_11  [key=0, style=solid];
m4_52 -> m4_53  [key=0, style=solid];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_56  [key=2, style=dotted];
m4_54 -> m4_57  [key=2, style=dotted];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_55 -> m4_52  [color=blue, key=0, style=bold];
m4_17 -> m4_18  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_21  [key=2, style=dotted];
m4_18 -> m4_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_19 -> m4_28  [color=darkorchid, key=3, label="Field variable Hangfire.JobStorage _storage", style=bold];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_22  [key=2, style=dotted];
m4_20 -> m4_17  [color=blue, key=0, style=bold];
m4_125 -> m4_126  [key=0, style=solid];
m4_74 -> m4_75  [color=green, key=0, style=solid];
m4_75 -> m4_76  [color=green, key=0, style=solid];
m4_75 -> m4_73  [color=green, key=2, style=dotted];
m4_76 -> m4_74  [color=blue, key=0, style=bold];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [key=2, style=dotted];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [key=2, style=dotted];
m4_41 -> m4_42  [key=0, style=solid];
m4_41 -> m4_43  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_23 -> m4_24  [key=0, style=solid];
m4_25 -> m4_23  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_33 -> m4_31  [color=blue, key=0, style=bold];
m4_40 -> m4_41  [key=0, style=solid];
m4_42 -> m4_40  [color=blue, key=0, style=bold];
m4_58 -> m4_59  [key=0, style=solid];
m4_66 -> m4_67  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_15 -> m4_13  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=2, style=dotted];
m4_59 -> m4_56  [key=2, style=dotted];
m4_59 -> m4_60  [key=0, style=solid];
m4_60 -> m4_58  [color=blue, key=0, style=bold];
m4_67 -> m4_65  [key=2, style=dotted];
m4_67 -> m4_68  [key=0, style=solid];
m4_68 -> m4_66  [color=blue, key=0, style=bold];
m4_123 -> m4_121  [color=blue, key=0, style=bold];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_124  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_108 -> m4_109  [key=0, style=solid];
m4_50 -> m4_48  [color=blue, key=0, style=bold];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_51  [key=2, style=dotted];
m4_103 -> m4_101  [color=blue, key=0, style=bold];
m4_102 -> m4_103  [key=0, style=solid];
m4_102 -> m4_104  [key=2, style=dotted];
m4_107 -> m4_105  [color=blue, key=0, style=bold];
m4_106 -> m4_107  [key=0, style=solid];
m4_110 -> m4_108  [color=blue, key=0, style=bold];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_111  [key=2, style=dotted];
m4_126 -> m4_127  [key=0, style=solid];
m4_127 -> m4_125  [color=blue, key=0, style=bold];
m4_27 -> m4_28  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_21  [key=2, style=dotted];
m4_28 -> m4_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_22  [key=2, style=dotted];
m4_30 -> m4_27  [color=blue, key=0, style=bold];
m4_12 -> m4_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m4_12 -> m4_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m4_12 -> m4_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m4_12 -> m4_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider", style=dashed];
m4_86 -> m4_87  [key=0, style=solid];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_83  [key=2, style=dotted];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_95  [key=2, style=dotted];
m4_88 -> m4_90  [color=darkseagreen4, key=1, label=runners, style=dashed];
m4_89 -> m4_90  [key=0, style=solid];
m4_89 -> m4_96  [key=2, style=dotted];
m4_89 -> m4_97  [key=2, style=dotted];
m4_89 -> m4_98  [key=2, style=dotted];
m4_89 -> m4_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_99  [key=2, style=dotted];
m4_90 -> m4_96  [key=2, style=dotted];
m4_90 -> m4_100  [key=2, style=dotted];
m4_90 -> m4_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_90 -> m4_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_90 -> m4_92  [color=darkseagreen4, key=1, label=componentTypes, style=dashed];
m4_90 -> m4_93  [color=darkseagreen4, key=1, label=componentTypes, style=dashed];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_97  [key=2, style=dotted];
m4_91 -> m4_97  [key=2, style=dotted];
m4_91 -> m4_92  [key=0, style=solid];
m4_92 -> m4_93  [key=0, style=solid];
m4_92 -> m4_97  [key=2, style=dotted];
m4_94 -> m4_86  [color=blue, key=0, style=bold];
m4_130 -> m4_71  [color=green, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_18  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_24  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_28  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_32  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_37  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_41  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_54  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_70  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_114  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
m4_130 -> m4_128  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobServerFacts", style=dashed];
}
