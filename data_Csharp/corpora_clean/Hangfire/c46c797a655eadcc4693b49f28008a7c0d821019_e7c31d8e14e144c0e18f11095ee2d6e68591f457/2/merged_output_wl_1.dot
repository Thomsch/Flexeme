digraph  {
n94 [label="Hangfire.Server.DefaultJobPerformanceProcess", span=""];
n95 [label="Hangfire.Server.PerformContext", span=""];
n96 [label="Hangfire.Server.IJobPerformer", span=""];
n97 [label=preContext, span=""];
n98 [label="System.Func<Hangfire.Server.PerformedContext>", span=""];
n99 [label="Hangfire.Server.IServerFilter", span=""];
n0 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess()", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess()", span="29-29"];
n1 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess()", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess()", span="29-29"];
n2 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", span="34-34"];
n3 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator)", span="34-34"];
n4 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", span="39-39"];
n5 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", color=red, community=0, label="0: activator == null", span="43-43"];
n7 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", label="filterProvider == null", span="44-44"];
n9 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", color=red, community=0, label="0: _activator = activator", span="46-46"];
n10 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", label="_filterProvider = filterProvider", span="47-47"];
n6 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", color=red, community=0, label="0: throw new ArgumentNullException(''activator'');", span="43-43"];
n8 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", label="throw new ArgumentNullException(''filterProvider'');", span="44-44"];
n11 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.DefaultJobPerformanceProcess(Hangfire.JobActivator, Hangfire.Common.IJobFilterProvider)", span="39-39"];
n12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n13 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="50-50"];
n14 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="context == null", span="52-52"];
n16 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", color=red, community=0, label="0: performer == null", span="53-53"];
n18 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="var filterInfo = GetFilters(context.Job)", span="55-55"];
n19 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", color=red, community=0, label="0: return PerformJobWithFilters(context, performer, filterInfo.ServerFilters);", span="59-59"];
n23 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="var exceptionContext = new ServerExceptionContext(context, ex)", span="67-67"];
n15 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="throw new ArgumentNullException(''context'');", span="52-52"];
n17 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", color=red, community=0, label="0: throw new ArgumentNullException(''performer'');", span="53-53"];
n29 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.GetFilters(Hangfire.Common.Job)", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.GetFilters(Hangfire.Common.Job)", span="79-79"];
n24 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="InvokeServerExceptionFilters(exceptionContext, filterInfo.ServerExceptionFilters)", span="68-68"];
n20 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label=OperationCanceledException, span="61-61"];
n21 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="throw;", span="63-63"];
n22 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label=Exception, span="65-65"];
n31 [cluster="Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", label="Entry Hangfire.Server.ServerExceptionContext.ServerExceptionContext(Hangfire.Server.PerformContext, System.Exception)", span="26-26"];
n25 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="!exceptionContext.ExceptionHandled", span="70-70"];
n32 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", span="182-182"];
n26 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="throw;", span="72-72"];
n27 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="return null;", span="76-76"];
n28 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="50-50"];
n30 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="84-84"];
n33 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.GetFilters(Hangfire.Common.Job)", label="return new JobFilterInfo(_filterProvider.GetFilters(job));", span="81-81"];
n34 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.GetFilters(Hangfire.Common.Job)", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.GetFilters(Hangfire.Common.Job)", span="79-79"];
n35 [cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40"];
n36 [cluster="Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", label="Entry Hangfire.Common.IJobFilterProvider.GetFilters(Hangfire.Common.Job)", span="32-32"];
n37 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", label="object result = null", span="89-89"];
n38 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", label="var preContext = new PerformingContext(context)", span="91-91"];
n39 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", color=red, community=0, label="0: Func<PerformedContext> continuation = () =>\r\n            {\r\n                result = performer.Perform(_activator, context.CancellationToken);\r\n                return new PerformedContext(context, result, false, null);\r\n            }", span="92-96"];
n49 [cluster="lambda expression", color=red, community=0, label="0: result = performer.Perform(_activator, context.CancellationToken)", span="94-94"];
n50 [cluster="lambda expression", label="return new PerformedContext(context, result, false, null);", span="95-95"];
n40 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokePerformFilter(filter, preContext, next))", span="98-99"];
n44 [cluster="Hangfire.Server.PerformingContext.PerformingContext(Hangfire.Server.PerformContext)", label="Entry Hangfire.Server.PerformingContext.PerformingContext(Hangfire.Server.PerformContext)", span="24-24"];
n57 [cluster="lambda expression", label="InvokePerformFilter(filter, preContext, next)", span="99-99"];
n41 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", label="thunk()", span="101-101"];
n45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
n46 [cluster="Unk.Aggregate", label="Entry Unk.Aggregate", span=""];
n54 [cluster="lambda expression", label="Entry lambda expression", span="99-99"];
n42 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", label="return result;", span="103-103"];
n47 [cluster="Unk.thunk", label="Entry Unk.thunk", span=""];
n43 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.PerformJobWithFilters(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>)", span="84-84"];
n48 [cluster="lambda expression", label="Entry lambda expression", span="92-96"];
n52 [cluster="Hangfire.Server.IJobPerformer.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", label="Entry Hangfire.Server.IJobPerformer.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="20-20"];
n51 [cluster="lambda expression", label="Exit lambda expression", span="92-96"];
n53 [cluster="Hangfire.Server.PerformedContext.PerformedContext(Hangfire.Server.PerformContext, object, bool, System.Exception)", label="Entry Hangfire.Server.PerformedContext.PerformedContext(Hangfire.Server.PerformContext, object, bool, System.Exception)", span="26-26"];
n55 [cluster="lambda expression", label="Exit lambda expression", span="99-99"];
n56 [cluster="lambda expression", label="Entry lambda expression", span="99-99"];
n58 [cluster="lambda expression", label="Exit lambda expression", span="99-99"];
n59 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="Entry Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="106-106"];
n60 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="filter.OnPerforming(preContext)", span="113-113"];
n65 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="preContext.Canceled", span="126-126"];
n66 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="return new PerformedContext(\r\n                    preContext, null, true, null);", span="128-129"];
n69 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="postContext = continuation()", span="136-136"];
n72 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="postContext = new PerformedContext(\r\n                    preContext, null, false, ex)", span="141-142"];
n73 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="filter.OnPerformed(postContext)", span="146-146"];
n79 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="filter.OnPerformed(postContext)", span="165-165"];
n61 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label=OperationCanceledException, span="115-115"];
n63 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label=Exception, span="119-119"];
n86 [cluster="Hangfire.Server.IServerFilter.OnPerforming(Hangfire.Server.PerformingContext)", label="Entry Hangfire.Server.IServerFilter.OnPerforming(Hangfire.Server.PerformingContext)", span="27-27"];
n62 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="throw;", span="117-117"];
n64 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during execution of one of the filters'',\r\n                    filterException);", span="121-123"];
n67 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="var wasError = false", span="132-132"];
n68 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="PerformedContext postContext", span="133-133"];
n70 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label=Exception, span="138-138"];
n78 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="!wasError", span="161-161"];
n88 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
n71 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="wasError = true", span="140-140"];
n76 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="!postContext.ExceptionHandled", span="155-155"];
n84 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="return postContext;", span="179-179"];
n74 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label=Exception, span="148-148"];
n89 [cluster="Hangfire.Server.IServerFilter.OnPerformed(Hangfire.Server.PerformedContext)", label="Entry Hangfire.Server.IServerFilter.OnPerformed(Hangfire.Server.PerformedContext)", span="33-33"];
n75 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="throw new JobPerformanceException(\r\n                        ''An exception occurred during execution of one of the filters'',\r\n                        filterException);", span="150-152"];
n77 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="throw;", span="157-157"];
n80 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label=OperationCanceledException, span="167-167"];
n82 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label=Exception, span="171-171"];
n81 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="throw;", span="169-169"];
n83 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="throw new JobPerformanceException(\r\n                        ''An exception occurred during execution of one of the filters'',\r\n                        filterException);", span="173-175"];
n85 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.InvokePerformFilter(Hangfire.Server.IServerFilter, Hangfire.Server.PerformingContext, System.Func<Hangfire.Server.PerformedContext>)", span="106-106"];
n87 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
n90 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", label="filters.Reverse()", span="186-186"];
n91 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", label="filter.OnServerException(context)", span="188-188"];
n92 [cluster="Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", label="Exit Hangfire.Server.DefaultJobPerformanceProcess.InvokeServerExceptionFilters(Hangfire.Server.ServerExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Server.IServerExceptionFilter>)", span="182-182"];
n93 [cluster="Hangfire.Server.IServerExceptionFilter.OnServerException(Hangfire.Server.ServerExceptionContext)", label="Entry Hangfire.Server.IServerExceptionFilter.OnServerException(Hangfire.Server.ServerExceptionContext)", span="27-27"];
m0_0 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="DefaultJobPerformanceProcessFacts.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m0_1 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="DefaultJobPerformanceProcessFacts.cs", label="InEnqueuedState = true", span="9-9"];
m0_2 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="DefaultJobPerformanceProcessFacts.cs", label="Exit HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m0_3 [file="DefaultJobPerformanceProcessFacts.cs", label="HangFire.Storage.Monitoring.EnqueuedJobDto", span=""];
m1_25 [cluster="Unk.OnScenarioStart", file="IJobPerformanceProcess.cs", label="Entry Unk.OnScenarioStart", span=""];
m1_29 [cluster="Unk.CollectScenarioErrors", file="IJobPerformanceProcess.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m1_21 [cluster="Unk.OnScenarioEnd", file="IJobPerformanceProcess.cs", label="Entry Unk.OnScenarioEnd", span=""];
m1_0 [cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m1_1 [cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="IJobPerformanceProcess.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m1_2 [cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="IJobPerformanceProcess.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobFetcher'', ''\r\n  As a user, I expect that my enqueued jobs will be dequeued by the Server.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m1_3 [cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="IJobPerformanceProcess.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m1_4 [cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m1_41 [cluster="Unk.And", file="IJobPerformanceProcess.cs", label="Entry Unk.And", span=""];
m1_54 [cluster="Unk.But", file="IJobPerformanceProcess.cs", label="Entry Unk.But", span=""];
m1_5 [cluster="Unk.GetTestRunner", file="IJobPerformanceProcess.cs", label="Entry Unk.GetTestRunner", span=""];
m1_9 [cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", span="39-39"];
m1_10 [cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", file="IJobPerformanceProcess.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m1_11 [cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", file="IJobPerformanceProcess.cs", label="testRunner = null", span="42-42"];
m1_12 [cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", span="39-39"];
m1_22 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m1_23 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="IJobPerformanceProcess.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m1_24 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m1_30 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m1_31 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should return the job payload when it dequeues a job'', ((string[])(null)))", span="77-77"];
m1_32 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m1_33 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m1_34 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m1_35 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m1_36 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="testRunner.Then(''the fetcher should return the payload'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m1_37 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="this.ScenarioCleanup()", span="89-89"];
m1_38 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m1_85 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", span="192-192"];
m1_86 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should set the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="194-194"];
m1_87 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="196-196"];
m1_88 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="198-198"];
m1_89 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="200-200"];
m1_90 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="202-202"];
m1_91 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="testRunner.Then(''the job should have the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="204-204"];
m1_92 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="this.ScenarioCleanup()", span="206-206"];
m1_93 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", span="192-192"];
m1_13 [cluster="Unk.OnFeatureEnd", file="IJobPerformanceProcess.cs", label="Entry Unk.OnFeatureEnd", span=""];
m1_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="IJobPerformanceProcess.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m1_42 [cluster="Unk.When", file="IJobPerformanceProcess.cs", label="Entry Unk.When", span=""];
m1_76 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", span="171-171"];
m1_77 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="IJobPerformanceProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should listen only specified queue'', ((string[])(null)))", span="173-173"];
m1_78 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="IJobPerformanceProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="175-175"];
m1_79 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="IJobPerformanceProcess.cs", label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="177-177"];
m1_80 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="IJobPerformanceProcess.cs", label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="179-179"];
m1_81 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="IJobPerformanceProcess.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="181-181"];
m1_82 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="IJobPerformanceProcess.cs", label="testRunner.Then(''the fetcher should not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="183-183"];
m1_83 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="IJobPerformanceProcess.cs", label="this.ScenarioCleanup()", span="185-185"];
m1_84 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", span="171-171"];
m1_14 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", span="46-46"];
m1_15 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="IJobPerformanceProcess.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49"];
m1_16 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="IJobPerformanceProcess.cs", label="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(null)", span="51-51"];
m1_17 [cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", span="46-46"];
m1_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="IJobPerformanceProcess.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m1_44 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="97-97"];
m1_45 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="IJobPerformanceProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should remove the dequeued job from the queue and adds it to the dequeued'' +\r\n                    '' list'', ((string[])(null)))", span="99-100"];
m1_46 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="IJobPerformanceProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="102-102"];
m1_47 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="IJobPerformanceProcess.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="104-104"];
m1_48 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="IJobPerformanceProcess.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="106-106"];
m1_49 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="IJobPerformanceProcess.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="108-108"];
m1_50 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="IJobPerformanceProcess.cs", label="testRunner.Then(''the queue should not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="110-110"];
m1_51 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="IJobPerformanceProcess.cs", label="testRunner.But(''the dequeued jobs list should contain it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="112-112"];
m1_52 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="IJobPerformanceProcess.cs", label="this.ScenarioCleanup()", span="114-114"];
m1_53 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="97-97"];
m1_43 [cluster="Unk.Then", file="IJobPerformanceProcess.cs", label="Entry Unk.Then", span=""];
m1_40 [cluster="Unk.Given", file="IJobPerformanceProcess.cs", label="Entry Unk.Given", span=""];
m1_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="IJobPerformanceProcess.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m1_26 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m1_27 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="IJobPerformanceProcess.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m1_28 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m1_64 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", span="144-144"];
m1_65 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should dequeue jobs in the FIFO order'', ((string[])(null)))", span="146-146"];
m1_66 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="148-148"];
m1_67 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="150-150"];
m1_68 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="152-152"];
m1_69 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="154-154"];
m1_70 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156"];
m1_71 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="testRunner.Then(''the fetcher should return the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158"];
m1_72 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="160-160"];
m1_73 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="testRunner.Then(''the fetcher should return the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="162-162"];
m1_74 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="this.ScenarioCleanup()", span="164-164"];
m1_75 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", span="144-144"];
m1_55 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="122-122"];
m1_56 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="IJobPerformanceProcess.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should not return any job when it tries to dequeue a job from an empty qu'' +\r\n                    ''eue'', ((string[])(null)))", span="124-125"];
m1_57 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="IJobPerformanceProcess.cs", label="this.ScenarioSetup(scenarioInfo)", span="127-127"];
m1_58 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="IJobPerformanceProcess.cs", label="testRunner.Given(''an empty queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="129-129"];
m1_59 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="IJobPerformanceProcess.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="131-131"];
m1_60 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="IJobPerformanceProcess.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="133-133"];
m1_61 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="IJobPerformanceProcess.cs", label="testRunner.Then(''the fetcher should not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="135-135"];
m1_62 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="IJobPerformanceProcess.cs", label="this.ScenarioCleanup()", span="137-137"];
m1_63 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="122-122"];
m1_8 [cluster="Unk.OnFeatureStart", file="IJobPerformanceProcess.cs", label="Entry Unk.OnFeatureStart", span=""];
m1_18 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", file="IJobPerformanceProcess.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m1_19 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", file="IJobPerformanceProcess.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m1_20 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", file="IJobPerformanceProcess.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", span="56-56"];
m1_94 [file="IJobPerformanceProcess.cs", label="HangFire.Tests.Server.JobFetcherFeature", span=""];
m2_1 [cluster="Hangfire.Server.IJobPerformer.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="IJobPerformer.cs", label="Exit Hangfire.Server.IJobPerformer.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="20-20"];
m3_18 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="Entry Hangfire.Common.Job.Validate()", span="208-208"];
m3_76 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="Method.DeclaringType == null", span="210-210"];
m3_78 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="!Method.DeclaringType.IsAssignableFrom(Type)", span="215-215"];
m3_79 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="217-220"];
m3_80 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="!Method.IsPublic", span="223-223"];
m3_82 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="typeof (Task).IsAssignableFrom(Method.ReturnType)", span="228-228"];
m3_84 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="var parameters = Method.GetParameters()", span="233-233"];
m3_85 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="parameters.Length != Arguments.Length", span="235-235"];
m3_77 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="212-212"];
m3_81 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="225-225"];
m3_83 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="throw new NotSupportedException(''Async methods are not supported. Please make them synchronous before using them in background.'');", span="230-230"];
m3_87 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label=parameters, span="240-240"];
m3_86 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="throw new ArgumentException(''Argument count must be equal to method parameter count.'');", span="237-237"];
m3_89 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="248-249"];
m3_91 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="254-255"];
m3_90 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="parameter.ParameterType.IsByRef", span="252-252"];
m3_88 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="parameter.IsOut", span="246-246"];
m3_92 [cluster="Hangfire.Common.Job.Validate()", file="Job.cs", label="Exit Hangfire.Common.Job.Validate()", span="208-208"];
m3_95 [cluster="string.Format(string, object, object)", file="Job.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m3_6 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.cs", label="throw new ArgumentNullException(''method'');", span="72-72"];
m3_165 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="Job.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m3_33 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="Entry Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="282-282"];
m3_113 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="object value", span="294-294"];
m3_107 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="var parameters = Method.GetParameters()", span="286-286"];
m3_115 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="value = cancellationToken", span="298-298"];
m3_108 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="var result = new List<object>(Arguments.Length)", span="287-287"];
m3_112 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="var argument = Arguments[i]", span="292-292"];
m3_114 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="typeof (IJobCancellationToken).IsAssignableFrom(parameter.ParameterType)", span="296-296"];
m3_124 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="return result.ToArray();", span="327-327"];
m3_126 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during arguments deserialization.'',\r\n                    ex);", span="331-333"];
m3_110 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="i < parameters.Length", span="289-289"];
m3_111 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="var parameter = parameters[i]", span="291-291"];
m3_122 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="result.Add(value)", span="324-324"];
m3_109 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="var i = 0", span="289-289"];
m3_116 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="value = argument != null\r\n								? JobHelper.FromJson(argument, parameter.ParameterType)\r\n								: null", span="304-306"];
m3_119 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="value = argument", span="314-314"];
m3_121 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="value = converter.ConvertFromInvariantString(argument)", span="319-319"];
m3_125 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label=Exception, span="329-329"];
m3_123 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="i++", span="289-289"];
m3_118 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="parameter.ParameterType == typeof (object)", span="310-310"];
m3_120 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="318-318"];
m3_117 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label=Exception, span="308-308"];
m3_127 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="Job.cs", label="Exit Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="282-282"];
m3_93 [cluster="System.Type.IsAssignableFrom(System.Type)", file="Job.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m3_47 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="Job.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m3_173 [cluster="Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="Job.cs", label="Entry Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25"];
m3_66 [cluster="object.GetType()", file="Job.cs", label="Entry object.GetType()", span="0-0"];
m3_105 [cluster="string.Format(string, object)", file="Job.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_35 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="Job.cs", label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="122-122"];
m3_36 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="Job.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="124-126"];
m3_37 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="Job.cs", label="Exit Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="122-122"];
m3_32 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.cs", label="Entry Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="260-260"];
m3_97 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.cs", label="var instance = activator.ActivateJob(Type)", span="264-264"];
m3_99 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.cs", label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="268-269"];
m3_100 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.cs", label="return instance;", span="272-272"];
m3_102 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during job activation.'',\r\n                    ex);", span="276-278"];
m3_98 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.cs", label="instance == null", span="266-266"];
m3_101 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.cs", label=Exception, span="274-274"];
m3_103 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="Job.cs", label="Exit Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="260-260"];
m3_2 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="Job.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(5)", span="27-27"];
m3_11 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.cs", label="Type = type", span="80-80"];
m3_12 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.cs", label="Method = method", span="81-81"];
m3_13 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.cs", label="Arguments = arguments", span="82-82"];
m3_14 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.cs", label="Validate()", span="84-84"];
m3_9 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.cs", label="method.ContainsGenericParameters", span="75-75"];
m3_4 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="Job.cs", label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m3_8 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.cs", label="throw new ArgumentNullException(''arguments'');", span="73-73"];
m3_3 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="Job.cs", label="PrepareSchemaIfNecessary = true", span="29-29"];
m3_5 [cluster="System.TimeSpan.FromSeconds(double)", file="Job.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m3_7 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.cs", label="HangFire.SqlServer.SqlServerStorageOptions", span=""];
m3_10 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.cs", label="throw new ArgumentException(''Job method can not contain unassigned generic type parameters.'', ''method'');", span="77-77"];
m3_15 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="Job.cs", label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="69-69"];
m3_46 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="Job.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m3_94 [cluster="System.ArgumentException.ArgumentException(string)", file="Job.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m3_19 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="Entry Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="96-96"];
m3_25 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", color=green, community=0, file="Job.cs", label="0: object result", span="103-103"];
m3_24 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="object instance = null", span="101-101"];
m3_26 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="!Method.IsStatic", span="106-106"];
m3_20 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="activator == null", span="98-98"];
m3_22 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="cancellationToken == null", span="99-99"];
m3_27 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="instance = Activate(activator)", span="108-108"];
m3_28 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="var deserializedArguments = DeserializeArguments(cancellationToken)", span="111-111"];
m3_29 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="result = InvokeMethod(instance, deserializedArguments)", span="112-112"];
m3_21 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="throw new ArgumentNullException(''activator'');", span="98-98"];
m3_23 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="throw new ArgumentNullException(''cancellationToken'');", span="99-99"];
m3_30 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="return result;", span="119-119"];
m3_31 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="Job.cs", label="Exit Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="96-96"];
m3_38 [cluster="Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="Job.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33"];
m3_64 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="Job.cs", label="Entry Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="410-410"];
m3_167 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="Job.cs", label="Debug.Assert(expression != null)", span="412-412"];
m3_168 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="Job.cs", label="var constantExpression = expression as ConstantExpression", span="414-414"];
m3_171 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="Job.cs", label="return CachedExpressionCompiler.Evaluate(expression);", span="421-421"];
m3_169 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="Job.cs", label="constantExpression != null", span="416-416"];
m3_170 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="Job.cs", label="return constantExpression.Value;", span="418-418"];
m3_172 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="Job.cs", label="Exit Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="410-410"];
m3_161 [cluster="System.Diagnostics.Debug.Assert(bool)", file="Job.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m3_163 [cluster="Unk.ToArray", file="Job.cs", label="Entry Unk.ToArray", span=""];
m3_65 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Job.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m3_34 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.cs", label="Entry Hangfire.Common.Job.InvokeMethod(object, object[])", span="337-337"];
m3_134 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.cs", label="return Method.Invoke(instance, deserializedArguments);", span="341-341"];
m3_137 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.cs", label="throw ex.InnerException;", span="350-350"];
m3_138 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="353-355"];
m3_136 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.cs", label="ex.InnerException is OperationCanceledException", span="345-345"];
m3_135 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.cs", label=TargetInvocationException, span="343-343"];
m3_139 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="Job.cs", label="Exit Hangfire.Common.Job.InvokeMethod(object, object[])", span="337-337"];
m3_130 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="Job.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m3_140 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="Job.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m3_67 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="Entry Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="377-377"];
m3_153 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="string value = null", span="386-386"];
m3_152 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label=arguments, span="384-384"];
m3_154 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="argument != null", span="388-388"];
m3_158 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="serializedArguments.Add(value)", span="404-404"];
m3_150 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="var arguments = callExpression.Arguments.Select(GetExpressionValue).ToArray()", span="381-381"];
m3_151 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="var serializedArguments = new List<string>(arguments.Length)", span="383-383"];
m3_159 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="return serializedArguments.ToArray();", span="407-407"];
m3_155 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="argument is DateTime", span="390-390"];
m3_156 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="value = ((DateTime) argument).ToString(''o'', CultureInfo.InvariantCulture)", span="392-392"];
m3_157 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="value = JobHelper.ToJson(argument)", span="396-396"];
m3_149 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="Debug.Assert(callExpression != null)", span="379-379"];
m3_160 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="Job.cs", label="Exit Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="377-377"];
m3_133 [cluster="System.Collections.Generic.List<T>.ToArray()", file="Job.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m3_104 [cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="Job.cs", label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m3_63 [cluster="System.NotSupportedException.NotSupportedException(string)", file="Job.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m3_68 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="192-192"];
m3_70 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.cs", label="throw new ArgumentNullException(''methodCall'');", span="194-194"];
m3_74 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.cs", label="return new Job(\r\n                typeof(T), \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="202-205"];
m3_69 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.cs", label="methodCall == null", span="194-194"];
m3_71 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="196-196"];
m3_72 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.cs", label="callExpression == null", span="197-197"];
m3_73 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="199-199"];
m3_75 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="Job.cs", label="Exit Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="192-192"];
m3_39 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="Job.cs", label="Entry Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="136-136"];
m3_44 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="Job.cs", label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="138-140"];
m3_45 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="Job.cs", label="Exit Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="136-136"];
m3_166 [cluster="Unk.ToJson", file="Job.cs", label="Entry Unk.ToJson", span=""];
m3_43 [cluster="Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="Job.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38"];
m3_162 [cluster="Unk.Select", file="Job.cs", label="Entry Unk.Select", span=""];
m3_128 [cluster="System.Collections.Generic.List<T>.List(int)", file="Job.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m3_17 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Job.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m3_164 [cluster="List<string>.cstr", file="Job.cs", label="Entry List<string>.cstr", span=""];
m3_129 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="Job.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m3_132 [cluster="System.Collections.Generic.List<T>.Add(T)", file="Job.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_106 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="Job.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m3_40 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="Job.cs", label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="129-129"];
m3_41 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="Job.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="131-133"];
m3_42 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="Job.cs", label="Exit Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="129-129"];
m3_0 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="Job.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m3_1 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="Job.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26"];
m3_141 [cluster="Hangfire.Common.Job.Dispose(object)", file="Job.cs", label="Entry Hangfire.Common.Job.Dispose(object)", span="359-359"];
m3_142 [cluster="Hangfire.Common.Job.Dispose(object)", file="Job.cs", label="var disposable = instance as IDisposable", span="363-363"];
m3_143 [cluster="Hangfire.Common.Job.Dispose(object)", file="Job.cs", label="disposable != null", span="364-364"];
m3_144 [cluster="Hangfire.Common.Job.Dispose(object)", file="Job.cs", label="disposable.Dispose()", span="366-366"];
m3_146 [cluster="Hangfire.Common.Job.Dispose(object)", file="Job.cs", label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occurred during disposal.'',\r\n                    ex);", span="371-373"];
m3_145 [cluster="Hangfire.Common.Job.Dispose(object)", file="Job.cs", label=Exception, span="369-369"];
m3_147 [cluster="Hangfire.Common.Job.Dispose(object)", file="Job.cs", label="Exit Hangfire.Common.Job.Dispose(object)", span="359-359"];
m3_131 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="Job.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m3_174 [cluster="Hangfire.Common.Job.ToString()", file="Job.cs", label="Entry Hangfire.Common.Job.ToString()", span="424-424"];
m3_175 [cluster="Hangfire.Common.Job.ToString()", file="Job.cs", label="return String.Format(''{0}.{1}'', Type.ToGenericTypeString(), Method.Name);", span="426-426"];
m3_176 [cluster="Hangfire.Common.Job.ToString()", file="Job.cs", label="Exit Hangfire.Common.Job.ToString()", span="424-424"];
m3_96 [cluster="System.Reflection.MethodBase.GetParameters()", file="Job.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m3_148 [cluster="System.IDisposable.Dispose()", file="Job.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m3_177 [cluster="System.Type.ToGenericTypeString()", file="Job.cs", label="Entry System.Type.ToGenericTypeString()", span="8-8"];
m3_48 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150"];
m3_50 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="throw new ArgumentNullException(''methodCall'');", span="152-152"];
m3_61 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="return new Job(\r\n                type, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="179-182"];
m3_58 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="throw new InvalidOperationException(''Expression object should not be null.'');", span="167-167"];
m3_49 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="methodCall == null", span="152-152"];
m3_51 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="154-154"];
m3_60 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="type = callExpression.Method.DeclaringType", span="174-174"];
m3_59 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="type = objectValue.GetType()", span="170-170"];
m3_53 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="157-157"];
m3_57 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="objectValue == null", span="165-165"];
m3_52 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="callExpression == null", span="155-155"];
m3_55 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="callExpression.Object != null", span="162-162"];
m3_56 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="var objectValue = GetExpressionValue(callExpression.Object)", span="164-164"];
m3_54 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="Type type", span="160-160"];
m3_62 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Job.cs", label="Exit Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150"];
m3_178 [file="Job.cs", label="Hangfire.Common.Job", span=""];
m4_0 [cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="JobActivator.cs", label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m4_1 [cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="JobActivator.cs", label="return Activator.CreateInstance(jobType);", span="44-44"];
m4_2 [cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="JobActivator.cs", label="Exit Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m4_3 [cluster="System.Activator.CreateInstance(System.Type)", file="JobActivator.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m7_189 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.ExceptionMethod()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.ExceptionMethod()", span="320-320"];
m7_251 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.ExceptionMethod()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: throw new InvalidOperationException(''exception'');", span="322-322"];
m7_252 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.ExceptionMethod()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.ExceptionMethod()", span="320-320"];
m7_42 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.InstanceMethod()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.InstanceMethod()", span="253-253"];
m7_220 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.InstanceMethod()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = true", span="255-255"];
m7_221 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.InstanceMethod()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.InstanceMethod()", span="253-253"];
m7_152 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnArgumentsDeserializationFailure()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnArgumentsDeserializationFailure()", span="189-189"];
m7_153 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnArgumentsDeserializationFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var type = typeof(JobFacts)", span="191-191"];
m7_154 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnArgumentsDeserializationFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="192-192"];
m7_155 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnArgumentsDeserializationFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = new Job(type, method, new[] { ''sdfa'' })", span="193-193"];
m7_156 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnArgumentsDeserializationFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="194-194"];
m7_157 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnArgumentsDeserializationFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", span="196-197"];
m7_158 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnArgumentsDeserializationFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.NotNull(exception.InnerException)", span="199-199"];
m7_159 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnArgumentsDeserializationFailure()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnArgumentsDeserializationFailure()", span="189-189"];
m7_90 [cluster="System.DateTime.ToString(string)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m7_64 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithArguments(string, int)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithArguments(string, int)", span="312-312"];
m7_247 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithArguments(string, int)", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = true", span="314-314"];
m7_248 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithArguments(string, int)", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.Equal(''hello'', stringArg)", span="316-316"];
m7_249 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithArguments(string, int)", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.Equal(5, intArg)", span="317-317"];
m7_250 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithArguments(string, int)", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithArguments(string, int)", span="312-312"];
m7_124 [cluster="Unk.Same", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.Same", span=""];
m7_77 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m7_11 [cluster="Unk.Equal", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.Equal", span=""];
m7_179 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WithUnwrappedInnerException()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WithUnwrappedInnerException()", span="217-217"];
m7_180 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WithUnwrappedInnerException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression(() => ExceptionMethod())", span="219-219"];
m7_181 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WithUnwrappedInnerException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="220-220"];
m7_182 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WithUnwrappedInnerException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", span="222-223"];
m7_183 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WithUnwrappedInnerException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="225-225"];
m7_184 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WithUnwrappedInnerException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.Equal(''exception'', thrownException.InnerException.Message)", span="226-226"];
m7_185 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WithUnwrappedInnerException()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WithUnwrappedInnerException()", span="217-217"];
m7_53 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Disposable.Method()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Disposable.Method()", span="260-260"];
m7_222 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Disposable.Method()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = true", span="262-262"];
m7_223 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Disposable.Method()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Disposable.Method()", span="260-260"];
m7_78 [cluster="System.Type.GetMethod(string)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry System.Type.GetMethod(string)", span="0-0"];
m7_79 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="69-69"];
m7_112 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.NullArgumentMethod(string[])", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.NullArgumentMethod(string[])", span="289-289"];
m7_235 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.NullArgumentMethod(string[])", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = true", span="291-291"];
m7_236 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.NullArgumentMethod(string[])", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.Null(argument)", span="292-292"];
m7_237 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.NullArgumentMethod(string[])", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.NullArgumentMethod(string[])", span="289-289"];
m7_121 [cluster="System.InvalidOperationException.InvalidOperationException()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m7_232 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Dispose()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Dispose()", span="284-284"];
m7_233 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Dispose()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _disposed = true", span="286-286"];
m7_234 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Dispose()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Dispose()", span="284-284"];
m7_43 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60"];
m7_44 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _disposed = false", span="62-62"];
m7_45 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression<Disposable>(x => x.Method())", span="63-63"];
m7_46 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="64-64"];
m7_47 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="66-66"];
m7_48 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.True(_disposed)", span="68-68"];
m7_49 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_DisposesDisposableInstance_AfterPerformance()", span="60-60"];
m7_10 [cluster="Unk.>", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.>", span=""];
m7_206 [cluster="Unk.ThrowIfCancellationRequested", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.ThrowIfCancellationRequested", span=""];
m7_25 [cluster="Hangfire.Server.MethodInvokePerformanceProcess.Run(Hangfire.Server.PerformContext)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Server.MethodInvokePerformanceProcess.Run(Hangfire.Server.PerformContext)", span="40-40"];
m7_202 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="295-295"];
m7_239 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: token.ThrowIfCancellationRequested()", span="297-297"];
m7_240 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="295-295"];
m7_16 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeStaticMethods()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeStaticMethods()", span="36-36"];
m7_17 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = false", span="38-38"];
m7_18 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression(() => StaticMethod())", span="39-39"];
m7_19 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="40-40"];
m7_20 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="42-42"];
m7_21 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeStaticMethods()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.True(_methodInvoked)", span="44-44"];
m7_22 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeStaticMethods()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeStaticMethods()", span="36-36"];
m7_229 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.BrokenDispose.Dispose()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.BrokenDispose.Dispose()", span="278-278"];
m7_230 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.BrokenDispose.Dispose()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: throw new InvalidOperationException();", span="280-280"];
m7_231 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.BrokenDispose.Dispose()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.BrokenDispose.Dispose()", span="278-278"];
m7_6 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26"];
m7_7 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=1, file="MethodInvokePerformanceProcessFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new MethodInvokePerformanceProcess(null))", span="28-30"];
m7_8 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.Equal(''activator'', exception.ParamName)", span="32-32"];
m7_9 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26"];
m7_135 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorReturnsNull()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorReturnsNull()", span="176-176"];
m7_136 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorReturnsNull()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="178-178"];
m7_137 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorReturnsNull()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression(() => InstanceMethod())", span="179-179"];
m7_138 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorReturnsNull()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="180-180"];
m7_139 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorReturnsNull()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", span="182-183"];
m7_140 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorReturnsNull()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="185-185"];
m7_141 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorReturnsNull()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorReturnsNull()", span="176-176"];
m7_253 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m7_76 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m7_164 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnDisposalFailure()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnDisposalFailure()", span="203-203"];
m7_165 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnDisposalFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = false", span="205-205"];
m7_166 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnDisposalFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="206-206"];
m7_167 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnDisposalFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="207-207"];
m7_168 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnDisposalFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var exception = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", span="209-210"];
m7_169 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnDisposalFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.True(_methodInvoked)", span="212-212"];
m7_170 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnDisposalFailure()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.NotNull(exception.InnerException)", span="213-213"];
m7_171 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnDisposalFailure()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_OnDisposalFailure()", span="203-203"];
m7_160 [cluster="Unk.NotNull", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.NotNull", span=""];
m7_24 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.CreateProcess()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.CreateProcess()", span="325-325"];
m7_254 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.CreateProcess()", file="MethodInvokePerformanceProcessFacts.cs", label="return new MethodInvokePerformanceProcess(_activator.Object);", span="327-327"];
m7_255 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.CreateProcess()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.CreateProcess()", span="325-325"];
m7_80 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108"];
m7_81 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = false", span="111-111"];
m7_82 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="112-112"];
m7_83 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var type = typeof(MethodInvokeRunanceProcessFacts)", span="114-114"];
m7_85 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = new Job(type, method, new[] { convertedDate })", span="117-117"];
m7_84 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="115-115"];
m7_86 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="118-118"];
m7_87 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="121-121"];
m7_88 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.True(_methodInvoked)", span="124-124"];
m7_89 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108"];
m7_122 [cluster="Unk.Setup", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.Setup", span=""];
m7_123 [cluster="Unk.Throws", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.Throws", span=""];
m7_238 [cluster="Unk.Null", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.Null", span=""];
m7_38 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="192-192"];
m7_101 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", span="300-300"];
m7_242 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = true", span="302-302"];
m7_243 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.Equal(SomeDateTime, argument)", span="304-304"];
m7_244 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodWithDateTimeArgument(System.DateTime)", span="300-300"];
m7_175 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.BrokenDispose.Method()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.BrokenDispose.Method()", span="273-273"];
m7_227 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.BrokenDispose.Method()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = true", span="275-275"];
m7_228 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.BrokenDispose.Method()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.BrokenDispose.Method()", span="273-273"];
m7_31 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeInstanceMethods()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeInstanceMethods()", span="48-48"];
m7_32 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeInstanceMethods()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = false", span="50-50"];
m7_33 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeInstanceMethods()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression<MethodInvokeRunanceProcessFacts>(x => x.InstanceMethod())", span="51-51"];
m7_34 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeInstanceMethods()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="52-52"];
m7_35 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeInstanceMethods()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="54-54"];
m7_36 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeInstanceMethods()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.True(_methodInvoked)", span="56-56"];
m7_37 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeInstanceMethods()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_CanInvokeInstanceMethods()", span="48-48"];
m7_193 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="230-230"];
m7_194 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="233-233"];
m7_195 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="234-234"];
m7_196 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="235-235"];
m7_197 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.Throws<OperationCanceledException>(\r\n                () => process.Run(_context.Object))", span="238-239"];
m7_198 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="230-230"];
m7_15 [cluster="Hangfire.Server.MethodInvokePerformanceProcess.MethodInvokePerformanceProcess(Hangfire.JobActivator)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Server.MethodInvokePerformanceProcess.MethodInvokePerformanceProcess(Hangfire.JobActivator)", span="34-34"];
m7_30 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.StaticMethod()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.StaticMethod()", span="307-307"];
m7_245 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.StaticMethod()", color=green, community=1, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = true", span="309-309"];
m7_246 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.StaticMethod()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.StaticMethod()", span="307-307"];
m7_216 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="245-245"];
m7_12 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="30-30"];
m7_13 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: new MethodInvokePerformanceProcess(null)", span="30-30"];
m7_14 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="30-30"];
m7_27 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="39-39"];
m7_28 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: StaticMethod()", span="39-39"];
m7_29 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="39-39"];
m7_39 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="51-51"];
m7_40 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: x.InstanceMethod()", span="51-51"];
m7_41 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="51-51"];
m7_50 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="63-63"];
m7_51 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: x.Method()", span="63-63"];
m7_52 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="63-63"];
m7_61 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="76-76"];
m7_62 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: MethodWithArguments(''hello'', 5)", span="76-76"];
m7_63 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="76-76"];
m7_98 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="132-132"];
m7_99 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: MethodWithDateTimeArgument(SomeDateTime)", span="132-132"];
m7_100 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="132-132"];
m7_109 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="147-147"];
m7_110 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: NullArgumentMethod(null)", span="147-147"];
m7_111 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="147-147"];
m7_125 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="162-162"];
m7_129 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="164-164"];
m7_133 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="169-169"];
m7_132 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="169-169"];
m7_134 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="169-169"];
m7_126 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: x.ActivateJob(It.IsAny<Type>())", span="162-162"];
m7_127 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="162-162"];
m7_130 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: InstanceMethod()", span="164-164"];
m7_131 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="164-164"];
m7_143 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="178-178"];
m7_146 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="179-179"];
m7_150 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="183-183"];
m7_149 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="183-183"];
m7_151 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="183-183"];
m7_144 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: x.ActivateJob(It.IsNotNull<Type>())", span="178-178"];
m7_145 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="178-178"];
m7_147 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: InstanceMethod()", span="179-179"];
m7_148 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="179-179"];
m7_162 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="197-197"];
m7_161 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="197-197"];
m7_163 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="197-197"];
m7_172 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="206-206"];
m7_177 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="210-210"];
m7_176 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="210-210"];
m7_178 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="210-210"];
m7_173 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: x.Method()", span="206-206"];
m7_174 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="206-206"];
m7_186 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="219-219"];
m7_191 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="223-223"];
m7_190 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="223-223"];
m7_192 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="223-223"];
m7_187 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: ExceptionMethod()", span="219-219"];
m7_188 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="219-219"];
m7_199 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="233-233"];
m7_203 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="234-234"];
m7_208 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="239-239"];
m7_207 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Entry lambda expression", span="239-239"];
m7_209 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="239-239"];
m7_200 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: CancelableJob(JobCancellationToken.Null)", span="233-233"];
m7_201 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="233-233"];
m7_204 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: x.ThrowIfCancellationRequested()", span="234-234"];
m7_205 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="234-234"];
m7_217 [cluster="lambda expression", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: x.FunctionReturningValue()", span="245-245"];
m7_218 [cluster="lambda expression", file="MethodInvokePerformanceProcessFacts.cs", label="Exit lambda expression", span="245-245"];
m7_128 [cluster="Unk.ActivateJob", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.ActivateJob", span=""];
m7_219 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="586-586"];
m7_210 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="243-243"];
m7_211 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="245-245"];
m7_212 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="246-246"];
m7_213 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var result = process.Run(_context.Object)", span="248-248"];
m7_214 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.Equal(''Return value'', result)", span="250-250"];
m7_215 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="243-243"];
m7_4 [cluster="Mock<JobActivator>.cstr", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m7_113 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorThrowsAnException()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorThrowsAnException()", span="158-158"];
m7_114 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorThrowsAnException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var exception = new InvalidOperationException()", span="161-161"];
m7_115 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorThrowsAnException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="162-162"];
m7_119 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorThrowsAnException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.Same(exception, thrownException.InnerException)", span="172-172"];
m7_116 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorThrowsAnException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression(() => InstanceMethod())", span="164-164"];
m7_118 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorThrowsAnException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => process.Run(_context.Object))", span="168-169"];
m7_117 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorThrowsAnException()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="165-165"];
m7_120 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorThrowsAnException()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_ThrowsRunanceException_WhenActivatorThrowsAnException()", span="158-158"];
m7_241 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m7_224 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Disposable.Dispose()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Disposable.Dispose()", span="265-265"];
m7_225 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Disposable.Dispose()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _disposed = true", span="267-267"];
m7_226 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Disposable.Dispose()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Disposable.Dispose()", span="265-265"];
m7_102 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_WorksCorrectly_WithNullValues()", span="143-143"];
m7_103 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_WorksCorrectly_WithNullValues()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = false", span="146-146"];
m7_104 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_WorksCorrectly_WithNullValues()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147"];
m7_105 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_WorksCorrectly_WithNullValues()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="149-149"];
m7_106 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_WorksCorrectly_WithNullValues()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="151-151"];
m7_107 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_WorksCorrectly_WithNullValues()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.True(_methodInvoked)", span="154-154"];
m7_108 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_WorksCorrectly_WithNullValues()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_WorksCorrectly_WithNullValues()", span="143-143"];
m7_256 [cluster="MethodInvokePerformanceProcess.cstr", file="MethodInvokePerformanceProcessFacts.cs", label="Entry MethodInvokePerformanceProcess.cstr", span=""];
m7_91 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTimeArguments()", span="128-128"];
m7_92 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTimeArguments()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = false", span="131-131"];
m7_93 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTimeArguments()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="132-132"];
m7_94 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTimeArguments()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="133-133"];
m7_95 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTimeArguments()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="136-136"];
m7_96 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTimeArguments()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.True(_methodInvoked)", span="139-139"];
m7_97 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTimeArguments()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTimeArguments()", span="128-128"];
m7_26 [cluster="Unk.True", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.True", span=""];
m7_65 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87"];
m7_66 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = false", span="90-90"];
m7_67 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var typeConverter = TypeDescriptor.GetConverter(typeof(DateTime))", span="91-91"];
m7_68 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="92-92"];
m7_69 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var type = typeof(MethodInvokeRunanceProcessFacts)", span="94-94"];
m7_71 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = new Job(type, method, new[] { convertedDate })", span="97-97"];
m7_70 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="95-95"];
m7_72 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="98-98"];
m7_73 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="101-101"];
m7_74 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.True(_methodInvoked)", span="104-104"];
m7_75 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="87-87"];
m7_54 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesArguments_ToACallingMethod()", span="72-72"];
m7_55 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _methodInvoked = false", span="75-75"];
m7_56 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="76-76"];
m7_57 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: var process = CreateProcess()", span="77-77"];
m7_58 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: process.Run(_context.Object)", span="80-80"];
m7_59 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesArguments_ToACallingMethod()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: Assert.True(_methodInvoked)", span="83-83"];
m7_60 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesArguments_ToACallingMethod()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.Run_PassesArguments_ToACallingMethod()", span="72-72"];
m7_142 [cluster="Unk.Returns", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Unk.Returns", span=""];
m7_5 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12"];
m7_0 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodInvokeRunanceProcessFacts()", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodInvokeRunanceProcessFacts()", span="19-19"];
m7_1 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodInvokeRunanceProcessFacts()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _activator = new Mock<JobActivator>() { CallBase = true }", span="21-21"];
m7_2 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodInvokeRunanceProcessFacts()", color=green, community=0, file="MethodInvokePerformanceProcessFacts.cs", label="0: _context = new PerformContextMock()", span="22-22"];
m7_3 [cluster="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodInvokeRunanceProcessFacts()", file="MethodInvokePerformanceProcessFacts.cs", label="Exit Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts.MethodInvokeRunanceProcessFacts()", span="19-19"];
m7_23 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="MethodInvokePerformanceProcessFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150"];
m7_257 [file="MethodInvokePerformanceProcessFacts.cs", label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", span=""];
m7_258 [file="MethodInvokePerformanceProcessFacts.cs", label=process, span=""];
m7_259 [file="MethodInvokePerformanceProcessFacts.cs", label=process, span=""];
m7_260 [file="MethodInvokePerformanceProcessFacts.cs", label=process, span=""];
m7_261 [file="MethodInvokePerformanceProcessFacts.cs", label=process, span=""];
m7_262 [file="MethodInvokePerformanceProcessFacts.cs", label=process, span=""];
m7_263 [file="MethodInvokePerformanceProcessFacts.cs", label=process, span=""];
m9_7 [cluster="Unk.NotNull", file="MsmqJobQueueProviderFacts.cs", label="Entry Unk.NotNull", span=""];
m9_5 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", span="29-29"];
m9_14 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="MsmqJobQueueProviderFacts.cs", label="return new MsmqJobQueueProvider(\r\n                CleanMsmqQueueAttribute.PathPattern,\r\n                Queues,\r\n                MsmqTransactionType.Internal);", span="31-34"];
m9_15 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", file="MsmqJobQueueProviderFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.CreateProvider()", span="29-29"];
m9_0 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="10-10"];
m9_1 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="var provider = CreateProvider()", span="12-12"];
m9_2 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", color=red, community=0, file="MsmqJobQueueProviderFacts.cs", label="0: var jobQueue = provider.GetJobQueue(null)", span="14-14"];
m9_3 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Assert.NotNull(jobQueue)", span="16-16"];
m9_4 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="10-10"];
m9_6 [cluster="Unk.GetJobQueue", file="MsmqJobQueueProviderFacts.cs", label="Entry Unk.GetJobQueue", span=""];
m9_8 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="20-20"];
m9_9 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="var provider = CreateProvider()", span="22-22"];
m9_10 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", color=red, community=0, file="MsmqJobQueueProviderFacts.cs", label="0: var monitoring = provider.GetJobQueueMonitoringApi(null)", span="24-24"];
m9_11 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Assert.NotNull(monitoring)", span="26-26"];
m9_12 [cluster="Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="MsmqJobQueueProviderFacts.cs", label="Exit Hangfire.SqlServer.Msmq.Tests.MsmqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="20-20"];
m9_16 [cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", file="MsmqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="26-26"];
m9_13 [cluster="Unk.GetJobQueueMonitoringApi", file="MsmqJobQueueProviderFacts.cs", label="Entry Unk.GetJobQueueMonitoringApi", span=""];
m10_12 [cluster="Mock<IJobCancellationToken>.cstr", file="PerformContextMock.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m10_9 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="PerformContextMock.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m10_13 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="PerformContextMock.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m10_17 [cluster="Hangfire.Core.Tests.PerformContextMock.SomeMethod()", file="PerformContextMock.cs", label="Entry Hangfire.Core.Tests.PerformContextMock.SomeMethod()", span="37-37"];
m10_22 [cluster="Hangfire.Core.Tests.PerformContextMock.SomeMethod()", file="PerformContextMock.cs", label="Exit Hangfire.Core.Tests.PerformContextMock.SomeMethod()", span="37-37"];
m10_0 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="PerformContextMock.cs", label="Entry Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12"];
m10_1 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", color=green, community=0, file="PerformContextMock.cs", label="0: WorkerContext = new WorkerContextMock()", span="14-14"];
m10_2 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", color=green, community=0, file="PerformContextMock.cs", label="0: Connection = new Mock<IStorageConnection>()", span="15-15"];
m10_3 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", color=green, community=0, file="PerformContextMock.cs", label="0: JobId = ''JobId''", span="16-16"];
m10_4 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", color=green, community=0, file="PerformContextMock.cs", label="0: Job = Job.FromExpression(() => SomeMethod())", span="17-17"];
m10_5 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", color=green, community=0, file="PerformContextMock.cs", label="0: CreatedAt = DateTime.UtcNow", span="18-18"];
m10_6 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", color=green, community=0, file="PerformContextMock.cs", label="0: CancellationToken = new Mock<IJobCancellationToken>()", span="19-19"];
m10_7 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", color=green, community=1, file="PerformContextMock.cs", label="0: _context = new Lazy<PerformContext>(\r\n                () => new PerformContext(WorkerContext.Object, Connection.Object, JobId, Job, CreatedAt, CancellationToken.Object))", span="21-22"];
m10_8 [cluster="Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", file="PerformContextMock.cs", label="Exit Hangfire.Core.Tests.PerformContextMock.PerformContextMock()", span="12-12"];
m10_10 [cluster="Mock<IStorageConnection>.cstr", file="PerformContextMock.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m10_18 [cluster="lambda expression", file="PerformContextMock.cs", label="Entry lambda expression", span="22-22"];
m10_14 [cluster="lambda expression", file="PerformContextMock.cs", label="Entry lambda expression", span="17-17"];
m10_15 [cluster="lambda expression", color=green, community=0, file="PerformContextMock.cs", label="0: SomeMethod()", span="17-17"];
m10_16 [cluster="lambda expression", file="PerformContextMock.cs", label="Exit lambda expression", span="17-17"];
m10_19 [cluster="lambda expression", color=green, community=0, file="PerformContextMock.cs", label="0: new PerformContext(WorkerContext.Object, Connection.Object, JobId, Job, CreatedAt, CancellationToken.Object)", span="22-22"];
m10_20 [cluster="lambda expression", file="PerformContextMock.cs", label="Exit lambda expression", span="22-22"];
m10_11 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="PerformContextMock.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150"];
m10_21 [cluster="PerformContext.cstr", file="PerformContextMock.cs", label="Entry PerformContext.cstr", span=""];
m10_23 [file="PerformContextMock.cs", label="Hangfire.Core.Tests.PerformContextMock", span=""];
m11_56 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="92-92"];
m11_57 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="RabbitMqJobQueueFacts.cs", label="RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id9'')", span="95-95"];
m11_58 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="RabbitMqJobQueueFacts.cs", label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="97-97"];
m11_59 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="RabbitMqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] {''my-queue''}, _token)", span="100-100"];
m11_60 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="RabbitMqJobQueueFacts.cs", label="Assert.NotNull(fetchedJob)", span="103-103"];
m11_61 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="RabbitMqJobQueueFacts.cs", label="var exception = Assert.Throws<TimeoutException>(\r\n                    () => RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1)))", span="105-106"];
m11_62 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="RabbitMqJobQueueFacts.cs", label="Assert.Equal(exception.Message, ''my-queue'')", span="108-108"];
m11_63 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_MakesJobInvisibleForOtherFetchers()", span="92-92"];
m11_41 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="68-68"];
m11_42 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="RabbitMqJobQueueFacts.cs", label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="70-70"];
m11_43 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="RabbitMqJobQueueFacts.cs", label="var token = new CancellationToken(true)", span="72-72"];
m11_44 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="RabbitMqJobQueueFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(new[] {''my-queue''}, token))", span="74-75"];
m11_45 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ThrowsCanceledException_WhenTokenHasBeenCancelled()", span="68-68"];
m11_9 [cluster="Unk.Equal", file="RabbitMqJobQueueFacts.cs", label="Entry Unk.Equal", span=""];
m11_3 [cluster="System.Threading.CancellationToken.CancellationToken()", file="RabbitMqJobQueueFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m11_4 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="17-17"];
m11_5 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RabbitMqJobQueueFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RabbitMqJobQueue(null, null))", span="19-20"];
m11_6 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RabbitMqJobQueueFacts.cs", label="Assert.Equal(''queues'', exception.ParamName)", span="22-22"];
m11_7 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="17-17"];
m11_8 [cluster="Unk.>", file="RabbitMqJobQueueFacts.cs", label="Entry Unk.>", span=""];
m11_70 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="113-113"];
m11_71 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="RabbitMqJobQueueFacts.cs", label="RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="116-116"];
m11_72 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="RabbitMqJobQueueFacts.cs", label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="117-117"];
m11_73 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="RabbitMqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] {''my-queue''}, _token)", span="120-120"];
m11_74 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="RabbitMqJobQueueFacts.cs", label="fetchedJob.RemoveFromQueue()", span="122-122"];
m11_75 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="RabbitMqJobQueueFacts.cs", label="var exception = Assert.Throws<TimeoutException>(\r\n                    () => RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1)))", span="126-127"];
m11_76 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="RabbitMqJobQueueFacts.cs", label="Assert.Equal(exception.Message, ''my-queue'')", span="129-129"];
m11_77 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RemoveFromQueue_OnFetchedJob_RemovesTheJobCompletely()", span="113-113"];
m11_50 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="80-80"];
m11_51 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="RabbitMqJobQueueFacts.cs", label="RabbitMqUtils.EnqueueJobId(''queue-2'', ''job-id'')", span="82-82"];
m11_52 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="RabbitMqJobQueueFacts.cs", label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''queue-1'', ''queue-2'')", span="83-83"];
m11_53 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="RabbitMqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] {''queue-1'', ''queue-2''}, _token)", span="85-85"];
m11_54 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="RabbitMqJobQueueFacts.cs", label="Assert.Equal(''job-id'', fetchedJob.JobId)", span="87-87"];
m11_55 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_FromOtherQueues_IfFirstAreEmpty()", span="80-80"];
m11_0 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RabbitMqJobQueueFacts()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RabbitMqJobQueueFacts()", span="11-11"];
m11_1 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RabbitMqJobQueueFacts()", file="RabbitMqJobQueueFacts.cs", label="_token = new CancellationToken()", span="13-13"];
m11_2 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RabbitMqJobQueueFacts()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.RabbitMqJobQueueFacts()", span="11-11"];
m11_68 [cluster="System.TimeSpan.FromSeconds(double)", file="RabbitMqJobQueueFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m11_33 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="54-54"];
m11_34 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="RabbitMqJobQueueFacts.cs", label="RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="56-56"];
m11_35 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="RabbitMqJobQueueFacts.cs", label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="58-58"];
m11_36 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="RabbitMqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="60-60"];
m11_37 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="RabbitMqJobQueueFacts.cs", label="fetchedJob.RemoveFromQueue()", span="61-61"];
m11_38 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="RabbitMqJobQueueFacts.cs", label="Assert.Equal(''job-id'', fetchedJob.JobId)", span="63-63"];
m11_39 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Dequeue_ReturnsFetchedJob_WithJobId()", span="54-54"];
m11_40 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqUtils.EnqueueJobId(string, string)", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqUtils.EnqueueJobId(string, string)", span="9-9"];
m11_30 [cluster="Unk.Enqueue", file="RabbitMqJobQueueFacts.cs", label="Entry Unk.Enqueue", span=""];
m11_64 [cluster="Unk.NotNull", file="RabbitMqJobQueueFacts.cs", label="Entry Unk.NotNull", span=""];
m11_32 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m11_69 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqUtils.DequeueJobId(string, System.TimeSpan)", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqUtils.DequeueJobId(string, System.TimeSpan)", span="22-22"];
m11_78 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Entry lambda expression", span="127-127"];
m11_10 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Entry lambda expression", span="20-20"];
m11_11 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="new RabbitMqJobQueue(null, null)", span="20-20"];
m11_12 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Exit lambda expression", span="20-20"];
m11_18 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Entry lambda expression", span="29-29"];
m11_19 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="new RabbitMqJobQueue(new[]{''my-queue''}, null)", span="29-29"];
m11_20 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Exit lambda expression", span="29-29"];
m11_48 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="queue.Dequeue(new[] {''my-queue''}, token)", span="75-75"];
m11_47 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Entry lambda expression", span="75-75"];
m11_49 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Exit lambda expression", span="75-75"];
m11_65 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Entry lambda expression", span="106-106"];
m11_66 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1))", span="106-106"];
m11_67 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Exit lambda expression", span="106-106"];
m11_79 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(1))", span="127-127"];
m11_80 [cluster="lambda expression", file="RabbitMqJobQueueFacts.cs", label="Exit lambda expression", span="127-127"];
m11_31 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43"];
m11_46 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="RabbitMqJobQueueFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m11_29 [cluster="Hangfire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.CleanRabbitMqQueueAttribute.GetMessageQueue(params string[])", span="36-36"];
m11_13 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="22-22"];
m11_14 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", span="26-26"];
m11_15 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="RabbitMqJobQueueFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RabbitMqJobQueue(new[]{''my-queue''}, null))", span="28-29"];
m11_16 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="RabbitMqJobQueueFacts.cs", label="Assert.Equal(''factory'', exception.ParamName)", span="31-31"];
m11_17 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", span="26-26"];
m11_89 [cluster="System.IDisposable.Dispose()", file="RabbitMqJobQueueFacts.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m11_90 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", span="152-152"];
m11_91 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="RabbitMqJobQueueFacts.cs", label="RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="155-155"];
m11_92 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="RabbitMqJobQueueFacts.cs", label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="157-157"];
m11_93 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="RabbitMqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="160-160"];
m11_95 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="RabbitMqJobQueueFacts.cs", label="var newFetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="164-164"];
m11_94 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="RabbitMqJobQueueFacts.cs", label="fetchedJob.Dispose()", span="161-161"];
m11_96 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="RabbitMqJobQueueFacts.cs", label="Assert.Equal(''job-id'', newFetchedJob.JobId)", span="166-166"];
m11_97 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_CanBeDequeuedAgain()", span="152-152"];
m11_81 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="134-134"];
m11_82 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="RabbitMqJobQueueFacts.cs", label="RabbitMqUtils.EnqueueJobId(''my-queue'', ''job-id'')", span="137-137"];
m11_83 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="RabbitMqJobQueueFacts.cs", label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="139-139"];
m11_84 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="RabbitMqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] {''my-queue''}, _token)", span="142-142"];
m11_85 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="RabbitMqJobQueueFacts.cs", label="fetchedJob.Dispose()", span="143-143"];
m11_86 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="RabbitMqJobQueueFacts.cs", label="var jobId = RabbitMqUtils.DequeueJobId(''my-queue'', TimeSpan.FromSeconds(5))", span="146-146"];
m11_87 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="RabbitMqJobQueueFacts.cs", label="Assert.Equal(''job-id'', jobId)", span="147-147"];
m11_88 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.DisposeWithoutRemoval_OnFetchedJob_ReturnsTheJobToTheQueue()", span="134-134"];
m11_21 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="RabbitMqJobQueueFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", span="35-35"];
m11_22 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="RabbitMqJobQueueFacts.cs", label="var queue = CleanRabbitMqQueueAttribute.GetMessageQueue(''my-queue'')", span="38-38"];
m11_23 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", color=red, community=0, file="RabbitMqJobQueueFacts.cs", label="0: queue.Enqueue(''my-queue'', ''job-id'')", span="41-41"];
m11_24 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="RabbitMqJobQueueFacts.cs", label="var fetchedJob = queue.Dequeue(new[] { ''my-queue'' }, _token)", span="44-44"];
m11_25 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="RabbitMqJobQueueFacts.cs", label="fetchedJob.RemoveFromQueue()", span="45-45"];
m11_26 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="RabbitMqJobQueueFacts.cs", label="var body = fetchedJob.JobId", span="47-47"];
m11_27 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="RabbitMqJobQueueFacts.cs", label="Assert.Equal(''job-id'', body)", span="49-49"];
m11_28 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", file="RabbitMqJobQueueFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts.Enqueue_SendsTheJobId()", span="35-35"];
m11_98 [file="RabbitMqJobQueueFacts.cs", label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", span=""];
m11_99 [file="RabbitMqJobQueueFacts.cs", label=queue, span=""];
m11_100 [file="RabbitMqJobQueueFacts.cs", label=token, span=""];
m12_7 [cluster="Unk.NotNull", file="RabbitMqJobQueueProviderFacts.cs", label="Entry Unk.NotNull", span=""];
m12_5 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="RabbitMqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", span="32-32"];
m12_14 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="RabbitMqJobQueueProviderFacts.cs", label="ConnectionFactory configuration = new ConnectionFactory { HostName = HostName }", span="34-34"];
m12_15 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="RabbitMqJobQueueProviderFacts.cs", label="return new RabbitMqJobQueueProvider(Queue, configuration);", span="36-36"];
m12_16 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", file="RabbitMqJobQueueProviderFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.CreateProvider()", span="32-32"];
m12_18 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="RabbitMqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m12_8 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="23-23"];
m12_9 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="var provider = CreateProvider()", span="25-25"];
m12_10 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="0: var monitoring = provider.GetJobQueueMonitoringApi(null)", span="27-27"];
m12_11 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Assert.NotNull(monitoring)", span="29-29"];
m12_12 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetMonitoringApi_ReturnsNonNullInstance()", span="23-23"];
m12_6 [cluster="Unk.GetJobQueue", file="RabbitMqJobQueueProviderFacts.cs", label="Entry Unk.GetJobQueue", span=""];
m12_17 [cluster="ConnectionFactory.cstr", file="RabbitMqJobQueueProviderFacts.cs", label="Entry ConnectionFactory.cstr", span=""];
m12_0 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Entry Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="13-13"];
m12_1 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="var provider = CreateProvider()", span="15-15"];
m12_2 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", color=green, community=0, file="RabbitMqJobQueueProviderFacts.cs", label="0: var jobQueue = provider.GetJobQueue(null)", span="17-17"];
m12_3 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Assert.NotNull(jobQueue)", span="19-19"];
m12_4 [cluster="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", file="RabbitMqJobQueueProviderFacts.cs", label="Exit Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueProviderFacts.GetJobQueue_ReturnsNonNullInstance()", span="13-13"];
m12_13 [cluster="Unk.GetJobQueueMonitoringApi", file="RabbitMqJobQueueProviderFacts.cs", label="Entry Unk.GetJobQueueMonitoringApi", span=""];
m13_363 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239"];
m13_622 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889"];
m13_623 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="891-894"];
m13_624 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889"];
m13_155 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m13_621 [cluster="System.Collections.Generic.List<T>.List()", file="SqlServerConnectionFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m13_401 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="286-286"];
m13_57 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="52-52"];
m13_810 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204"];
m13_811 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1206-1208"];
m13_812 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1210-1225"];
m13_813 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204"];
m13_478 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680"];
m13_479 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="682-683"];
m13_480 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680"];
m13_460 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="323-323"];
m13_364 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528"];
m13_365 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="530-531"];
m13_366 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528"];
m13_739 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090"];
m13_740 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1092-1096"];
m13_741 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090"];
m13_667 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968"];
m13_668 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="970-972"];
m13_669 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="974-987"];
m13_670 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968"];
m13_864 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298"];
m13_865 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1300-1302"];
m13_866 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1304-1319"];
m13_867 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298"];
m13_575 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="271-271"];
m13_271 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376"];
m13_272 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="378-384"];
m13_273 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376"];
m13_343 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492"];
m13_344 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="494-501"];
m13_345 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="503-512"];
m13_346 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492"];
m13_905 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="SqlServerConnectionFacts.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m13_304 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435"];
m13_305 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="437-440"];
m13_306 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="442-454"];
m13_307 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435"];
m13_153 [cluster="Unk.ToString", file="SqlServerConnectionFacts.cs", label="Entry Unk.ToString", span=""];
m13_25 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", span="42-42"];
m13_26 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(ConnectionUtils.CreateConnection(), IsolationLevel.Serializable, null))", span="44-45"];
m13_27 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: Assert.Equal(''queueProviders'', exception.ParamName)", span="47-47"];
m13_28 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenProvidersCollectionIsNull()", span="42-42"];
m13_857 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288"];
m13_858 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1290-1294"];
m13_859 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288"];
m13_24 [cluster="SqlServerConnection.cstr", file="SqlServerConnectionFacts.cs", label="Entry SqlServerConnection.cstr", span=""];
m13_209 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249"];
m13_210 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="251-253"];
m13_211 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249"];
m13_883 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332"];
m13_884 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1334-1338"];
m13_885 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332"];
m13_450 [cluster="Unk.NotEqual", file="SqlServerConnectionFacts.cs", label="Entry Unk.NotEqual", span=""];
m13_829 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="473-473"];
m13_719 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055"];
m13_720 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1057-1059"];
m13_721 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1061-1076"];
m13_722 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055"];
m13_281 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388"];
m13_282 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="390-393"];
m13_283 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="395-407"];
m13_284 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388"];
m13_353 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516"];
m13_354 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="518-524"];
m13_355 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516"];
m13_792 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="432-432"];
m13_430 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623"];
m13_431 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="625-626"];
m13_432 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623"];
m13_772 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145"];
m13_773 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1147-1149"];
m13_774 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1151-1166"];
m13_775 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145"];
m13_389 [cluster="Unk.Execute", file="SqlServerConnectionFacts.cs", label="Entry Unk.Execute", span=""];
m13_239 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304"];
m13_240 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="306-318"];
m13_241 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="320-335"];
m13_242 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304"];
m13_658 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943"];
m13_659 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="945-947"];
m13_660 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="949-964"];
m13_661 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943"];
m13_259 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m13_847 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278"];
m13_848 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1280-1284"];
m13_849 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278"];
m13_488 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="335-335"];
m13_6 [cluster="Mock<IPersistentJobQueue>.cstr", file="SqlServerConnectionFacts.cs", label="Entry Mock<IPersistentJobQueue>.cstr", span=""];
m13_402 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580"];
m13_403 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="582-588"];
m13_404 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580"];
m13_764 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="456-456"];
m13_685 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="404-404"];
m13_33 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", span="51-51"];
m13_34 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: var sqlConnection = ConnectionUtils.CreateConnection()", span="53-53"];
m13_35 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers)", span="55-55"];
m13_37 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: Assert.Equal(ConnectionState.Closed, sqlConnection.State)", span="59-59"];
m13_36 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: connection.Dispose()", span="57-57"];
m13_38 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", span="51-51"];
m13_205 [cluster="int.ToString()", file="SqlServerConnectionFacts.cs", label="Entry int.ToString()", span="0-0"];
m13_326 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470"];
m13_327 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="472-478"];
m13_328 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470"];
m13_203 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m13_250 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339"];
m13_251 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="341-344"];
m13_252 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="346-360"];
m13_253 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339"];
m13_650 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="389-389"];
m13_890 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342"];
m13_891 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1344-1346"];
m13_892 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1348-1363"];
m13_893 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342"];
m13_156 [cluster="System.DateTime.AddDays(double)", file="SqlServerConnectionFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m13_439 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="311-311"];
m13_7 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="SqlServerConnectionFacts.cs", label="Entry Mock<IPersistentJobQueueProvider>.cstr", span=""];
m13_154 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m13_566 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802"];
m13_567 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="804-805"];
m13_568 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802"];
m13_511 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718"];
m13_512 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="720-726"];
m13_513 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718"];
m13_219 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257"];
m13_220 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="259-263"];
m13_221 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257"];
m13_576 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809"];
m13_577 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="811-815"];
m13_578 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809"];
m13_440 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630"];
m13_441 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="632-636"];
m13_442 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="638-646"];
m13_443 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630"];
m13_583 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819"];
m13_584 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="821-823"];
m13_585 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="825-843"];
m13_586 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819"];
m13_782 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170"];
m13_783 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1172-1178"];
m13_784 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170"];
m13_712 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045"];
m13_713 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1047-1051"];
m13_714 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045"];
m13_793 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182"];
m13_794 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1184-1190"];
m13_795 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182"];
m13_62 [cluster="Unk.Dequeue", file="SqlServerConnectionFacts.cs", label="Entry Unk.Dequeue", span=""];
m13_894 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1348-1363"];
m13_11 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="26-26"];
m13_12 [cluster="lambda expression", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="26-26"];
m13_13 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="26-26"];
m13_21 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="36-36"];
m13_22 [cluster="lambda expression", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: new SqlServerConnection(null, IsolationLevel.Serializable, _providers)", span="36-36"];
m13_23 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="36-36"];
m13_29 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="45-45"];
m13_30 [cluster="lambda expression", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: new SqlServerConnection(ConnectionUtils.CreateConnection(), IsolationLevel.Serializable, null)", span="45-45"];
m13_31 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="45-45"];
m13_50 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="79-87"];
m13_51 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var token = new CancellationToken()", span="81-81"];
m13_53 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.FetchNextJob(queues, token)", span="84-84"];
m13_52 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var queues = new[] { ''default'' }", span="82-82"];
m13_54 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="_queue.Verify(x => x.Dequeue(queues, token))", span="86-86"];
m13_60 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="x.Dequeue(queues, token)", span="86-86"];
m13_55 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="79-87"];
m13_59 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="86-86"];
m13_61 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="86-86"];
m13_67 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="93-101"];
m13_68 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var token = new CancellationToken()", span="95-95"];
m13_71 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="99-100"];
m13_75 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="100-100"];
m13_69 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="96-96"];
m13_70 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="97-97"];
m13_72 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="93-101"];
m13_74 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="100-100"];
m13_76 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="100-100"];
m13_80 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="107-111"];
m13_81 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var transaction = connection.CreateWriteTransaction()", span="109-109"];
m13_82 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(transaction)", span="110-110"];
m13_83 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="107-111"];
m13_89 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="117-121"];
m13_90 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1))", span="119-119"];
m13_91 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(@lock)", span="120-120"];
m13_92 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="117-121"];
m13_98 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="127-137"];
m13_99 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="129-134"];
m13_103 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="130-134"];
m13_100 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''job'', exception.ParamName)", span="136-136"];
m13_102 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="130-134"];
m13_101 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="127-137"];
m13_104 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="130-134"];
m13_110 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="143-153"];
m13_111 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="145-150"];
m13_115 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="146-150"];
m13_112 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="152-152"];
m13_114 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="146-150"];
m13_113 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="143-153"];
m13_116 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="146-150"];
m13_118 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="147-147"];
m13_119 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="SampleMethod(''hello'')", span="147-147"];
m13_120 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="147-147"];
m13_126 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="159-195"];
m13_127 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var createdAt = new DateTime(2012, 12, 12)", span="161-161"];
m13_128 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="162-166"];
m13_131 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="171-171"];
m13_144 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="188-191"];
m13_133 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="173-173"];
m13_142 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="185-185"];
m13_143 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="186-186"];
m13_129 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(jobId)", span="168-168"];
m13_160 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="163-163"];
m13_130 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotEmpty(jobId)", span="169-169"];
m13_132 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="172-172"];
m13_134 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(null, (int?) sqlJob.StateId)", span="174-174"];
m13_135 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(null, (string) sqlJob.StateName)", span="175-175"];
m13_136 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="177-177"];
m13_137 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="invocationData.Arguments = sqlJob.Arguments", span="178-178"];
m13_138 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var job = invocationData.Deserialize()", span="180-180"];
m13_139 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="181-181"];
m13_140 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="182-182"];
m13_141 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''\''Hello\'''', job.Arguments[0])", span="183-183"];
m13_145 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value1'', parameters[''Key1''])", span="193-193"];
m13_163 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="191-191"];
m13_166 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="191-191"];
m13_146 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value2'', parameters[''Key2''])", span="194-194"];
m13_147 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="159-195"];
m13_161 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="SampleMethod(''Hello'')", span="163-163"];
m13_162 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="163-163"];
m13_164 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(string) x.Name", span="191-191"];
m13_165 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="191-191"];
m13_167 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(string) x.Value", span="191-191"];
m13_168 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="191-191"];
m13_172 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="201-202"];
m13_173 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="201-202"];
m13_176 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetJobData(null)", span="202-202"];
m13_174 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="201-202"];
m13_175 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="202-202"];
m13_177 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="202-202"];
m13_182 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="208-212"];
m13_183 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetJobData(''1'')", span="210-210"];
m13_184 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result)", span="211-211"];
m13_185 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="208-212"];
m13_193 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="227-234"];
m13_191 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="223-245"];
m13_192 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="225-225"];
m13_194 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="236-236"];
m13_206 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="225-225"];
m13_195 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result)", span="238-238"];
m13_196 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result.Job)", span="239-239"];
m13_197 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Succeeded'', result.State)", span="240-240"];
m13_198 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="241-241"];
m13_199 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result.LoadException)", span="242-242"];
m13_200 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="243-243"];
m13_201 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="244-244"];
m13_202 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="223-245"];
m13_207 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="SampleMethod(''wrong'')", span="225-225"];
m13_208 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="225-225"];
m13_212 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="252-253"];
m13_213 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="252-253"];
m13_216 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetStateData(null)", span="253-253"];
m13_214 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="252-253"];
m13_215 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="253-253"];
m13_217 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="253-253"];
m13_222 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="259-263"];
m13_223 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetStateData(''1'')", span="261-261"];
m13_224 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result)", span="262-262"];
m13_225 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="259-263"];
m13_232 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="290-292"];
m13_230 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="283-300"];
m13_231 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="285-288"];
m13_233 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetStateData(jobId.ToString())", span="294-294"];
m13_234 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result)", span="295-295"];
m13_235 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Name'', result.Name)", span="297-297"];
m13_236 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Reason'', result.Reason)", span="298-298"];
m13_237 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="299-299"];
m13_238 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="283-300"];
m13_245 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="327-329"];
m13_243 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="320-335"];
m13_244 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="322-325"];
m13_246 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetStateData(jobId.ToString())", span="331-331"];
m13_247 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result)", span="332-332"];
m13_248 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="334-334"];
m13_249 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="320-335"];
m13_255 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="348-355"];
m13_254 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="346-360"];
m13_256 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="357-357"];
m13_257 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result.LoadException)", span="359-359"];
m13_258 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="346-360"];
m13_263 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="366-372"];
m13_264 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="368-369"];
m13_268 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(null, ''name'', ''value'')", span="369-369"];
m13_265 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''id'', exception.ParamName)", span="371-371"];
m13_267 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="369-369"];
m13_266 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="366-372"];
m13_269 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="369-369"];
m13_274 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="378-384"];
m13_275 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="380-381"];
m13_279 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(''1'', null, ''value'')", span="381-381"];
m13_276 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="383-383"];
m13_278 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="381-381"];
m13_277 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="378-384"];
m13_280 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="381-381"];
m13_286 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var job = sql.Query(arrangeSql).Single()", span="397-397"];
m13_285 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="395-407"];
m13_288 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="400-400"];
m13_289 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="402-404"];
m13_287 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="string jobId = job.Id.ToString()", span="398-398"];
m13_290 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value'', parameter.Value)", span="406-406"];
m13_291 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="395-407"];
m13_297 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var job = sql.Query(arrangeSql).Single()", span="420-420"];
m13_296 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="418-431"];
m13_299 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="423-423"];
m13_300 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="424-424"];
m13_301 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="426-428"];
m13_298 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="string jobId = job.Id.ToString()", span="421-421"];
m13_302 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''AnotherValue'', parameter.Value)", span="430-430"];
m13_303 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="418-431"];
m13_309 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var job = sql.Query(arrangeSql).Single()", span="444-444"];
m13_308 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="442-454"];
m13_311 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetJobParameter(jobId, ''Name'', null)", span="447-447"];
m13_312 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="449-451"];
m13_310 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="string jobId = job.Id.ToString()", span="445-445"];
m13_313 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal((string) null, parameter.Value)", span="453-453"];
m13_314 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="442-454"];
m13_318 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="460-466"];
m13_319 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="462-463"];
m13_323 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetJobParameter(null, ''hello'')", span="463-463"];
m13_320 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''id'', exception.ParamName)", span="465-465"];
m13_322 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="463-463"];
m13_321 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="460-466"];
m13_324 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="463-463"];
m13_329 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="472-478"];
m13_330 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="474-475"];
m13_334 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetJobParameter(''1'', null)", span="475-475"];
m13_331 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="477-477"];
m13_333 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="475-475"];
m13_332 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="472-478"];
m13_335 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="475-475"];
m13_339 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="484-488"];
m13_340 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var value = connection.GetJobParameter(''1'', ''hello'')", span="486-486"];
m13_341 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(value)", span="487-487"];
m13_342 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="484-488"];
m13_348 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="505-507"];
m13_347 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="503-512"];
m13_349 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="509-509"];
m13_350 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''value'', value)", span="511-511"];
m13_351 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="503-512"];
m13_356 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="518-524"];
m13_357 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="520-521"];
m13_361 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="521-521"];
m13_358 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="523-523"];
m13_360 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="521-521"];
m13_359 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="518-524"];
m13_362 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="521-521"];
m13_367 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="530-531"];
m13_368 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="530-531"];
m13_371 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="531-531"];
m13_369 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="530-531"];
m13_370 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="531-531"];
m13_372 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="531-531"];
m13_376 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="537-543"];
m13_377 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="539-540"];
m13_378 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result)", span="542-542"];
m13_379 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="537-543"];
m13_385 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql)", span="559-559"];
m13_384 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="557-564"];
m13_386 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="561-561"];
m13_387 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''-1.0'', result)", span="563-563"];
m13_388 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="557-564"];
m13_393 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="570-576"];
m13_394 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="572-573"];
m13_398 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.AnnounceServer(null, new ServerContext())", span="573-573"];
m13_395 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="575-575"];
m13_397 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="573-573"];
m13_396 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="570-576"];
m13_399 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="573-573"];
m13_405 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="582-588"];
m13_406 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="584-585"];
m13_410 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.AnnounceServer(''server'', null)", span="585-585"];
m13_407 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="587-587"];
m13_409 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="585-585"];
m13_408 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="582-588"];
m13_411 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="585-585"];
m13_415 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="594-619"];
m13_416 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="596-600"];
m13_417 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.AnnounceServer(''server'', context1)", span="601-601"];
m13_418 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="603-603"];
m13_423 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.AnnounceServer(''server'', context2)", span="615-615"];
m13_424 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="616-616"];
m13_419 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''server'', server.Id)", span="604-604"];
m13_420 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="605-607"];
m13_421 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(server.LastHeartbeat)", span="608-608"];
m13_422 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="610-614"];
m13_425 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''server'', sameServer.Id)", span="617-617"];
m13_426 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Contains(''1000'', sameServer.Data)", span="618-618"];
m13_427 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="594-619"];
m13_433 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="625-626"];
m13_434 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="625-626"];
m13_437 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.RemoveServer(null)", span="626-626"];
m13_435 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="625-626"];
m13_436 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="626-626"];
m13_438 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="626-626"];
m13_445 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql)", span="640-640"];
m13_444 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="638-646"];
m13_446 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.RemoveServer(''Server1'')", span="642-642"];
m13_447 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="644-644"];
m13_448 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="645-645"];
m13_449 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="638-646"];
m13_454 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="652-653"];
m13_455 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="652-653"];
m13_458 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.Heartbeat(null)", span="653-653"];
m13_456 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="652-653"];
m13_457 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="653-653"];
m13_459 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="653-653"];
m13_466 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql)", span="667-667"];
m13_465 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="665-676"];
m13_467 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.Heartbeat(''server1'')", span="669-669"];
m13_468 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="671-672"];
m13_469 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotEqual(2012, servers[''server1''].Year)", span="674-674"];
m13_472 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="672-672"];
m13_475 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="672-672"];
m13_470 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2012, servers[''server2''].Year)", span="675-675"];
m13_471 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="665-676"];
m13_473 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(string)x.Id", span="672-672"];
m13_474 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="672-672"];
m13_476 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(DateTime)x.LastHeartbeat", span="672-672"];
m13_477 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="672-672"];
m13_481 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="682-683"];
m13_482 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="682-683"];
m13_485 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="683-683"];
m13_483 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="682-683"];
m13_484 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="683-683"];
m13_486 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="683-683"];
m13_494 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="695-701"];
m13_493 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="693-707"];
m13_495 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="703-703"];
m13_496 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="705-705"];
m13_497 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''server2'', liveServer.Id)", span="706-706"];
m13_498 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="693-707"];
m13_504 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="713-714"];
m13_505 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="714-714"];
m13_508 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetAllItemsFromSet(null)", span="714-714"];
m13_506 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="713-714"];
m13_507 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="714-714"];
m13_509 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="714-714"];
m13_514 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="720-726"];
m13_515 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="722-722"];
m13_516 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result)", span="724-724"];
m13_517 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(0, result.Count)", span="725-725"];
m13_518 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="720-726"];
m13_524 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="739-744"];
m13_523 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="736-753"];
m13_525 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="747-747"];
m13_526 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result.Count)", span="750-750"];
m13_527 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Contains(''1'', result)", span="751-751"];
m13_528 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Contains(''2'', result)", span="752-752"];
m13_529 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="736-753"];
m13_533 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="759-765"];
m13_534 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="761-762"];
m13_538 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="762-762"];
m13_535 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="764-764"];
m13_537 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="762-762"];
m13_536 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="759-765"];
m13_539 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="762-762"];
m13_544 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="771-777"];
m13_545 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="773-774"];
m13_549 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetRangeInHash(''some-hash'', null)", span="774-774"];
m13_546 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="776-776"];
m13_548 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="774-774"];
m13_547 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="771-777"];
m13_550 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="774-774"];
m13_554 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="783-798"];
m13_555 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="785-789"];
m13_556 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="791-794"];
m13_557 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="796-796"];
m13_560 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="794-794"];
m13_563 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="794-794"];
m13_558 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="797-797"];
m13_559 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="783-798"];
m13_561 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(string)x.Field", span="794-794"];
m13_562 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="794-794"];
m13_564 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="(string)x.Value", span="794-794"];
m13_565 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="794-794"];
m13_569 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="804-805"];
m13_570 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="805-805"];
m13_573 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetAllEntriesFromHash(null)", span="805-805"];
m13_571 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="804-805"];
m13_572 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="805-805"];
m13_574 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="805-805"];
m13_579 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="811-815"];
m13_580 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="813-813"];
m13_581 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result)", span="814-814"];
m13_582 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="811-815"];
m13_588 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="828-833"];
m13_587 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="825-843"];
m13_589 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="836-836"];
m13_590 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.NotNull(result)", span="839-839"];
m13_591 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result.Count)", span="840-840"];
m13_592 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="841-841"];
m13_593 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="842-842"];
m13_594 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="825-843"];
m13_598 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="849-853"];
m13_599 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="851-852"];
m13_602 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetSetCount(null)", span="852-852"];
m13_600 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="849-853"];
m13_601 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="852-852"];
m13_603 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="852-852"];
m13_608 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="859-863"];
m13_609 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetSetCount(''my-set'')", span="861-861"];
m13_610 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(0, result)", span="862-862"];
m13_611 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="859-863"];
m13_617 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                })", span="875-880"];
m13_616 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="873-885"];
m13_618 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetSetCount(''set-1'')", span="882-882"];
m13_619 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result)", span="884-884"];
m13_620 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="873-885"];
m13_625 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="891-894"];
m13_626 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="893-893"];
m13_629 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetRangeFromSet(null, 0, 1)", span="893-893"];
m13_627 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="891-894"];
m13_628 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="893-893"];
m13_630 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="893-893"];
m13_637 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="906-914"];
m13_636 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="904-919"];
m13_638 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="916-916"];
m13_639 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="918-918"];
m13_640 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="904-919"];
m13_644 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="925-929"];
m13_645 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="927-928"];
m13_648 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetCounter(null)", span="928-928"];
m13_646 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="925-929"];
m13_647 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="928-928"];
m13_649 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="928-928"];
m13_654 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="935-939"];
m13_655 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetCounter(''my-counter'')", span="937-937"];
m13_656 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(0, result)", span="938-938"];
m13_657 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="935-939"];
m13_663 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="952-957"];
m13_662 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="949-964"];
m13_664 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetCounter(''counter-1'')", span="960-960"];
m13_665 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result)", span="963-963"];
m13_666 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="949-964"];
m13_672 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="977-981"];
m13_671 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="974-987"];
m13_673 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetCounter(''counter-1'')", span="984-984"];
m13_674 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(12, result)", span="986-986"];
m13_675 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="974-987"];
m13_679 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="993-996"];
m13_680 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="995-995"];
m13_683 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetHashCount(null)", span="995-995"];
m13_681 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="993-996"];
m13_682 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="995-995"];
m13_684 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="995-995"];
m13_689 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1002-1006"];
m13_690 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetHashCount(''my-hash'')", span="1004-1004"];
m13_691 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(0, result)", span="1005-1005"];
m13_692 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1002-1006"];
m13_698 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="1019-1024"];
m13_697 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1016-1031"];
m13_699 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetHashCount(''hash-1'')", span="1027-1027"];
m13_700 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result)", span="1030-1030"];
m13_701 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1016-1031"];
m13_705 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1037-1041"];
m13_706 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1039-1040"];
m13_709 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetHashTtl(null)", span="1040-1040"];
m13_707 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1037-1041"];
m13_708 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1040-1040"];
m13_710 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1040-1040"];
m13_715 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1047-1051"];
m13_716 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetHashTtl(''my-hash'')", span="1049-1049"];
m13_717 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.Zero)", span="1050-1050"];
m13_718 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1047-1051"];
m13_724 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1064-1068"];
m13_723 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1061-1076"];
m13_725 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetHashTtl(''hash-1'')", span="1071-1071"];
m13_726 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1074-1074"];
m13_727 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1075-1075"];
m13_728 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1061-1076"];
m13_732 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1082-1086"];
m13_733 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1084-1085"];
m13_736 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetListCount(null)", span="1085-1085"];
m13_734 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1082-1086"];
m13_735 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1085-1085"];
m13_737 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1085-1085"];
m13_742 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1092-1096"];
m13_743 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetListCount(''my-list'')", span="1094-1094"];
m13_744 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(0, result)", span="1095-1095"];
m13_745 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1092-1096"];
m13_751 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1109-1114"];
m13_750 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1106-1121"];
m13_752 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetListCount(''list-1'')", span="1117-1117"];
m13_753 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(2, result)", span="1120-1120"];
m13_754 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1106-1121"];
m13_758 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1127-1131"];
m13_759 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1129-1130"];
m13_762 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetListTtl(null)", span="1130-1130"];
m13_760 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1127-1131"];
m13_761 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1130-1130"];
m13_763 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1130-1130"];
m13_768 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1137-1141"];
m13_769 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetListTtl(''my-list'')", span="1139-1139"];
m13_770 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.Zero)", span="1140-1140"];
m13_771 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1137-1141"];
m13_777 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1154-1158"];
m13_776 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1151-1166"];
m13_778 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetListTtl(''list-1'')", span="1161-1161"];
m13_779 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1164-1164"];
m13_780 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1165-1165"];
m13_781 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1151-1166"];
m13_785 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1172-1178"];
m13_786 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1174-1175"];
m13_790 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetValueFromHash(null, ''name'')", span="1175-1175"];
m13_787 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1177-1177"];
m13_789 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1175-1175"];
m13_788 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1172-1178"];
m13_791 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1175-1175"];
m13_796 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1184-1190"];
m13_797 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1186-1187"];
m13_801 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetValueFromHash(''key'', null)", span="1187-1187"];
m13_798 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''name'', exception.ParamName)", span="1189-1189"];
m13_800 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1187-1187"];
m13_799 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1184-1190"];
m13_802 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1187-1187"];
m13_806 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1196-1200"];
m13_807 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1198-1198"];
m13_808 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Null(result)", span="1199-1199"];
m13_809 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1196-1200"];
m13_815 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1213-1218"];
m13_814 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1210-1225"];
m13_816 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1221-1221"];
m13_817 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''1'', result)", span="1224-1224"];
m13_818 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1210-1225"];
m13_822 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1231-1237"];
m13_823 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1233-1234"];
m13_827 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetRangeFromList(null, 0, 1)", span="1234-1234"];
m13_824 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1236-1236"];
m13_826 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1234-1234"];
m13_825 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1231-1237"];
m13_828 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1234-1234"];
m13_833 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1243-1247"];
m13_834 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1245-1245"];
m13_835 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Empty(result)", span="1246-1246"];
m13_836 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1243-1247"];
m13_843 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1260-1267"];
m13_842 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1257-1274"];
m13_844 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1270-1270"];
m13_845 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1273-1273"];
m13_846 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1257-1274"];
m13_850 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1280-1284"];
m13_851 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1282-1283"];
m13_854 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetAllItemsFromList(null)", span="1283-1283"];
m13_852 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1280-1284"];
m13_853 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1283-1283"];
m13_855 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1283-1283"];
m13_860 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1290-1294"];
m13_861 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllItemsFromList(''my-list'')", span="1292-1292"];
m13_862 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Empty(result)", span="1293-1293"];
m13_863 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1290-1294"];
m13_869 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1307-1312"];
m13_868 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1304-1319"];
m13_870 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetAllItemsFromList(''list-1'')", span="1315-1315"];
m13_871 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1318-1318"];
m13_872 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1304-1319"];
m13_876 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1325-1328"];
m13_877 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1327-1327"];
m13_880 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="connection.GetSetTtl(null)", span="1327-1327"];
m13_878 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1325-1328"];
m13_879 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1327-1327"];
m13_881 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1327-1327"];
m13_886 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Entry lambda expression", span="1334-1338"];
m13_887 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetSetTtl(''my-set'')", span="1336-1336"];
m13_888 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.Zero)", span="1337-1337"];
m13_889 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1334-1338"];
m13_895 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1351-1355"];
m13_896 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="var result = connection.GetSetTtl(''set-1'')", span="1358-1358"];
m13_897 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1361-1361"];
m13_898 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1362-1362"];
m13_899 [cluster="lambda expression", file="SqlServerConnectionFacts.cs", label="Exit lambda expression", span="1348-1363"];
m13_125 [cluster="Unk.UseConnections", file="SqlServerConnectionFacts.cs", label="Entry Unk.UseConnections", span=""];
m13_412 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592"];
m13_413 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="594-619"];
m13_414 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592"];
m13_540 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250"];
m13_84 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="39-39"];
m13_693 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010"];
m13_694 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="1012-1014"];
m13_695 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1016-1031"];
m13_696 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010"];
m13_39 [cluster="Hangfire.Storage.JobStorageConnection.Dispose()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Storage.JobStorageConnection.Dispose()", span="27-27"];
m13_9 [cluster="Unk.Returns", file="SqlServerConnectionFacts.cs", label="Entry Unk.Returns", span=""];
m13_390 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568"];
m13_391 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="570-576"];
m13_392 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568"];
m13_117 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m13_501 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711"];
m13_502 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="713-714"];
m13_503 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711"];
m13_711 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="415-415"];
m13_900 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366"];
m13_901 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1368-1368"];
m13_903 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: action(sqlConnection, connection)", span="1371-1371"];
m13_902 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers)", span="1369-1369"];
m13_904 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366"];
m13_260 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364"];
m13_261 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="366-372"];
m13_262 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364"];
m13_179 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206"];
m13_180 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="208-212"];
m13_181 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206"];
m13_77 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105"];
m13_78 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="107-111"];
m13_79 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105"];
m13_157 [cluster="System.DateTime.AddMinutes(double)", file="SqlServerConnectionFacts.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m13_336 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482"];
m13_337 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="484-488"];
m13_338 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482"];
m13_66 [cluster="Unk.UseConnection", file="SqlServerConnectionFacts.cs", label="Entry Unk.UseConnection", span=""];
m13_20 [cluster="Unk.Equal", file="SqlServerConnectionFacts.cs", label="Entry Unk.Equal", span=""];
m13_121 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386"];
m13_910 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386"];
m13_631 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="356-356"];
m13_729 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080"];
m13_730 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1082-1086"];
m13_731 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080"];
m13_56 [cluster="System.Threading.CancellationToken.CancellationToken()", file="SqlServerConnectionFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m13_530 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757"];
m13_531 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="759-765"];
m13_532 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757"];
m13_0 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21"];
m13_1 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="_queue = new Mock<IPersistentJobQueue>()", span="23-23"];
m13_2 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="var provider = new Mock<IPersistentJobQueueProvider>()", span="25-25"];
m13_3 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: provider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(_queue.Object)", span="26-27"];
m13_4 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="_providers = new PersistentJobQueueProviderCollection(provider.Object)", span="29-29"];
m13_5 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21"];
m13_32 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m13_178 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="125-125"];
m13_94 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="44-44"];
m13_107 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141"];
m13_108 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="143-153"];
m13_109 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141"];
m13_612 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867"];
m13_613 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="869-871"];
m13_614 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="873-885"];
m13_615 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867"];
m13_765 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135"];
m13_766 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1137-1141"];
m13_767 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135"];
m13_151 [cluster="Unk.Query", file="SqlServerConnectionFacts.cs", label="Entry Unk.Query", span=""];
m13_489 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687"];
m13_490 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="689-691"];
m13_491 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="693-707"];
m13_492 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687"];
m13_755 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125"];
m13_756 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1127-1131"];
m13_757 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125"];
m13_909 [cluster="System.Action<T>.Invoke(T)", file="SqlServerConnectionFacts.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m13_226 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267"];
m13_227 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="269-281"];
m13_228 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="283-300"];
m13_229 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267"];
m13_803 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194"];
m13_804 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1196-1200"];
m13_805 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194"];
m13_73 [cluster="Unk.Add", file="SqlServerConnectionFacts.cs", label="Entry Unk.Add", span=""];
m13_85 [cluster="Unk.NotNull", file="SqlServerConnectionFacts.cs", label="Entry Unk.NotNull", span=""];
m13_63 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91"];
m13_64 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="93-101"];
m13_65 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91"];
m13_8 [cluster="Unk.Setup", file="SqlServerConnectionFacts.cs", label="Entry Unk.Setup", span=""];
m13_676 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991"];
m13_677 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="993-996"];
m13_678 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991"];
m13_186 [cluster="Unk.Null", file="SqlServerConnectionFacts.cs", label="Entry Unk.Null", span=""];
m13_46 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="77-77"];
m13_47 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", span="79-87"];
m13_48 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="77-77"];
m13_519 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730"];
m13_520 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="732-734"];
m13_521 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="736-753"];
m13_522 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730"];
m13_10 [cluster="PersistentJobQueueProviderCollection.cstr", file="SqlServerConnectionFacts.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m13_106 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="72-72"];
m13_204 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m13_499 [cluster="System.DateTime.AddHours(double)", file="SqlServerConnectionFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m13_150 [cluster="Unk.NotEmpty", file="SqlServerConnectionFacts.cs", label="Entry Unk.NotEmpty", span=""];
m13_15 [cluster="Unk.GetJobQueue", file="SqlServerConnectionFacts.cs", label="Entry Unk.GetJobQueue", span=""];
m13_837 [cluster="Unk.Empty", file="SqlServerConnectionFacts.cs", label="Entry Unk.Empty", span=""];
m13_541 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769"];
m13_542 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="771-777"];
m13_543 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769"];
m13_686 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000"];
m13_687 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="1002-1006"];
m13_688 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000"];
m13_702 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035"];
m13_703 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1037-1041"];
m13_704 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035"];
m13_49 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375"];
m13_906 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: var connection = new SqlServerConnection( \r\n                ConnectionUtils.CreateConnection(),\r\n                IsolationLevel.Serializable,\r\n                _providers)", span="1377-1380"];
m13_907 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: action(connection)", span="1382-1382"];
m13_908 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375"];
m13_510 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="225-225"];
m13_58 [cluster="Unk.Verify", file="SqlServerConnectionFacts.cs", label="Entry Unk.Verify", span=""];
m13_641 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923"];
m13_642 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="925-929"];
m13_643 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923"];
m13_819 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229"];
m13_820 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1231-1237"];
m13_821 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229"];
m13_315 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458"];
m13_316 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="460-466"];
m13_317 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458"];
m13_428 [cluster="string.StartsWith(string)", file="SqlServerConnectionFacts.cs", label="Entry string.StartsWith(string)", span="0-0"];
m13_487 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerConnectionFacts.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m13_838 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251"];
m13_839 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1253-1255"];
m13_840 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1257-1274"];
m13_841 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251"];
m13_159 [cluster="Unk.ToDictionary", file="SqlServerConnectionFacts.cs", label="Entry Unk.ToDictionary", span=""];
m13_500 [cluster="System.TimeSpan.FromHours(double)", file="SqlServerConnectionFacts.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m13_95 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="125-125"];
m13_96 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="127-137"];
m13_97 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="125-125"];
m13_651 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933"];
m13_652 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="935-939"];
m13_653 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933"];
m13_856 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="489-489"];
m13_873 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323"];
m13_874 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1325-1328"];
m13_875 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323"];
m13_86 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="115-115"];
m13_87 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="117-121"];
m13_88 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="115-115"];
m13_148 [cluster="System.DateTime.DateTime(int, int, int)", file="SqlServerConnectionFacts.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m13_14 [cluster="Unk.>", file="SqlServerConnectionFacts.cs", label="Entry Unk.>", span=""];
m13_270 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="196-196"];
m13_595 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847"];
m13_596 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="849-853"];
m13_597 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847"];
m13_93 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerConnectionFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m13_380 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547"];
m13_381 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="549-555"];
m13_382 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="557-564"];
m13_383 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547"];
m13_632 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898"];
m13_633 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@Key, @Value, 0.0)''", span="900-902"];
m13_634 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="904-919"];
m13_635 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898"];
m13_149 [cluster="System.TimeSpan.FromDays(double)", file="SqlServerConnectionFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m13_292 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411"];
m13_293 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="413-416"];
m13_294 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="418-431"];
m13_295 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411"];
m13_882 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="372-372"];
m13_325 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="214-214"];
m13_400 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="20-20"];
m13_105 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerConnectionFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m13_218 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="165-165"];
m13_352 [cluster="Unk.GetJobParameter", file="SqlServerConnectionFacts.cs", label="Entry Unk.GetJobParameter", span=""];
m13_461 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657"];
m13_462 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="659-663"];
m13_463 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="665-676"];
m13_464 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657"];
m13_830 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241"];
m13_831 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1243-1247"];
m13_832 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241"];
m13_551 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781"];
m13_552 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="783-798"];
m13_553 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781"];
m13_187 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216"];
m13_188 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="218-221"];
m13_189 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="223-245"];
m13_190 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216"];
m13_429 [cluster="Unk.Contains", file="SqlServerConnectionFacts.cs", label="Entry Unk.Contains", span=""];
m13_16 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33"];
m13_17 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null, IsolationLevel.Serializable, _providers))", span="35-36"];
m13_18 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: Assert.Equal(''connection'', exception.ParamName)", span="38-38"];
m13_19 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33"];
m13_451 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650"];
m13_452 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="652-653"];
m13_453 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650"];
m13_746 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100"];
m13_747 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key])\r\nvalues (@key)''", span="1102-1104"];
m13_748 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1106-1121"];
m13_749 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100"];
m13_604 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="347-347"];
m13_152 [cluster="Unk.Single", file="SqlServerConnectionFacts.cs", label="Entry Unk.Single", span=""];
m13_169 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199"];
m13_170 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="201-202"];
m13_171 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199"];
m13_122 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157"];
m13_123 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SqlServerConnectionFacts.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''\''Hello\'''', job.Arguments[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="159-195"];
m13_124 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157"];
m13_158 [cluster="Unk.True", file="SqlServerConnectionFacts.cs", label="Entry Unk.True", span=""];
m13_373 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535"];
m13_374 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="537-543"];
m13_375 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535"];
m13_40 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64"];
m13_41 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: var sqlConnection = ConnectionUtils.CreateConnection()", span="66-66"];
m13_42 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers, ownsConnection: false)", span="68-68"];
m13_44 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: Assert.Equal(ConnectionState.Open, sqlConnection.State)", span="72-72"];
m13_43 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", color=red, community=0, file="SqlServerConnectionFacts.cs", label="0: connection.Dispose()", span="70-70"];
m13_45 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64"];
m13_738 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="445-445"];
m13_605 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857"];
m13_606 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="859-863"];
m13_607 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="SqlServerConnectionFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857"];
m13_911 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span=""];
m13_912 [file="SqlServerConnectionFacts.cs", label=token, span=""];
m13_913 [file="SqlServerConnectionFacts.cs", label=queues, span=""];
m13_914 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_915 [file="SqlServerConnectionFacts.cs", label=token, span=""];
m13_916 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_917 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_918 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_919 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_920 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_921 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_922 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_923 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_924 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_925 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_926 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_927 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_928 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_929 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_930 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_931 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_932 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_933 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_934 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_935 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_936 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_937 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_938 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_939 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_940 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_941 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_942 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_943 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_944 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_945 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_946 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_947 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_948 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_949 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_950 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_951 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_952 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_953 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_954 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_955 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_956 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_957 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_958 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_959 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_960 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_961 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_962 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_963 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_964 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_965 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_966 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_967 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_968 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_969 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_970 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m13_971 [file="SqlServerConnectionFacts.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m13_972 [file="SqlServerConnectionFacts.cs", label=arrangeSql, span=""];
m14_43 [cluster="System.Threading.Thread.Join()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m14_79 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96"];
m14_19 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: UseConnection(sql =>\r\n            {\r\n                // ReSharper disable once UnusedVariable\r\n                var distributedLock = new SqlServerDistributedLock(''hello'', _timeout, sql);\r\n\r\n                var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single();\r\n\r\n                Assert.Equal(''Exclusive'', lockMode);\r\n            })", span="36-45"];
m14_77 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: SqlConnection", span=""];
m14_78 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.CreateStorage(SqlConnection)", span="105-105"];
m14_11 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenResourceIsNullOrEmpty()", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: UseConnection(connection =>\r\n            {\r\n                var storage = CreateStorage(connection);\r\n\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(storage, '''', _timeout));\r\n\r\n                Assert.Equal(''resource'', exception.ParamName);\r\n            })", span="25-33"];
m14_12 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(''hello'', _timeout, null))", span="27-28"];
m14_13 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: Assert.Equal(''connection'', exception.ParamName)", span="30-30"];
m14_14 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="25-25"];
m14_21 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: new SqlServerDistributedLock(storage, '''', _timeout)", span="30-30"];
m14_40 [cluster="System.Threading.Thread.Start()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m14_0 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="14-14"];
m14_1 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(null, ''hello'', _timeout))", span="16-17"];
m14_2 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: Assert.Equal(''storage'', exception.ParamName)", span="19-19"];
m14_3 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="14-14"];
m14_5 [cluster="Unk.Equal", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.Equal", span=""];
m14_39 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: UseConnection(connection2 =>\r\n            {\r\n                var storage = CreateStorage(connection2);\r\n                Assert.Throws<SqlServerDistributedLockException>(\r\n                    () =>\r\n                    {\r\n                        using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                        {\r\n                        }\r\n                    });\r\n            })", span="73-83"];
m14_42 [cluster="System.Threading.ManualResetEventSlim.Set()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m14_72 [cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37"];
m14_10 [cluster="Mock<IDbConnection>.cstr", file="SqlServerDistributedLockFacts.cs", label="Entry Mock<IDbConnection>.cstr", span=""];
m14_4 [cluster="Unk.>", file="SqlServerDistributedLockFacts.cs", label="Entry Unk.>", span=""];
m14_59 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Dispose_ReleasesExclusiveApplicationLock()", span="78-78"];
m14_60 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var storage = CreateStorage(connection2)", span="75-75"];
m14_67 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: Exit lambda expression", span="80-89"];
m14_61 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: Assert.Throws<SqlServerDistributedLockException>(\r\n                    () =>\r\n                    {\r\n                        using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                        {\r\n                        }\r\n                    })", span="76-82"];
m14_73 [cluster="System.Action<T>.Invoke(T)", file="SqlServerDistributedLockFacts.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m14_9 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(Hangfire.SqlServer.SqlServerStorage, string, System.TimeSpan)", span="44-44"];
m14_18 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", span="34-34"];
m14_24 [cluster="lambda expression", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var lockMode = sql.Query<string>(\r\n                    ''select applock_mode('public', 'hello', 'session')'').Single()", span="41-42"];
m14_20 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_AcquiresExclusiveApplicationLock_OnSession()", span="34-34"];
m14_41 [cluster="System.Threading.ManualResetEventSlim.Wait()", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.ManualResetEventSlim.Wait()", span="0-0"];
m14_38 [cluster="System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", file="SqlServerDistributedLockFacts.cs", label="Entry System.Threading.ManualResetEventSlim.ManualResetEventSlim(bool)", span="0-0"];
m14_47 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", span="92-92"];
m14_69 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.UseConnection(System.Action<SqlConnection>)", file="SqlServerDistributedLockFacts.cs", label="var connection = ConnectionUtils.CreateConnection()", span="94-94"];
m14_70 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var storage = CreateStorage(sql)", span="94-94"];
m14_71 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var distributedLock = new SqlServerDistributedLock(storage, ''hello'', _timeout)", span="95-95"];
m14_63 [cluster="lambda expression", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var distributedLock = new SqlServerDistributedLock(''hello'', _timeout, sql)", span="82-82"];
m14_6 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="19-19"];
m14_7 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: new SqlServerDistributedLock(null, ''hello'', _timeout)", span="17-17"];
m14_8 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="19-19"];
m14_15 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var storage = CreateStorage(connection)", span="27-27"];
m14_16 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerDistributedLock(storage, '''', _timeout))", span="29-30"];
m14_17 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: Assert.Equal(''resource'', exception.ParamName)", span="32-32"];
m14_22 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="36-45"];
m14_23 [cluster="lambda expression", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var distributedLock = new SqlServerDistributedLock(''hello'', _timeout, sql)", span="39-39"];
m14_25 [cluster="lambda expression", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: Assert.Equal(''Exclusive'', lockMode)", span="44-44"];
m14_26 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="36-45"];
m14_45 [cluster="lambda expression", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: UseConnection(connection1 =>\r\n                {\r\n                    using (new SqlServerDistributedLock(''exclusive'', _timeout, connection1))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                })", span="57-64"];
m14_51 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="releaseLock.Wait()", span="62-62"];
m14_50 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: UseConnection(connection1 =>\r\n                {\r\n                    var storage = CreateStorage(connection1);\r\n                    using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                })", span="60-68"];
m14_53 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="69-71"];
m14_44 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="57-64"];
m14_46 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="57-64"];
m14_48 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="57-64"];
m14_49 [cluster="lambda expression", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: new SqlServerDistributedLock(''exclusive'', _timeout, connection1)", span="59-59"];
m14_52 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="57-64"];
m14_54 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var storage = CreateStorage(connection1)", span="62-62"];
m14_57 [cluster="lambda expression", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: new SqlServerDistributedLock(''exclusive'', _timeout, connection2)", span="71-71"];
m14_55 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: new SqlServerDistributedLock(storage, ''exclusive'', _timeout)", span="63-63"];
m14_56 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="71-71"];
m14_58 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="71-71"];
m14_62 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Entry lambda expression", span="80-89"];
m14_65 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Exit lambda expression", span="77-82"];
m14_64 [cluster="lambda expression", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: new SqlServerDistributedLock(storage, ''exclusive'', _timeout)", span="79-79"];
m14_66 [cluster="lambda expression", file="SqlServerDistributedLockFacts.cs", label="Assert.Equal(''NoLock'', lockMode)", span="88-88"];
m14_27 [cluster="Unk.Single", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: Entry Unk.Single", span=""];
m14_28 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: Entry Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", span="51-51"];
m14_29 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var releaseLock = new ManualResetEventSlim(false)", span="53-53"];
m14_30 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var lockAcquired = new ManualResetEventSlim(false)", span="54-54"];
m14_31 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var thread = new Thread(\r\n                () => UseConnection(connection1 =>\r\n                {\r\n                    using (new SqlServerDistributedLock(''exclusive'', _timeout, connection1))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                }))", span="56-64"];
m14_35 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="releaseLock.Set()", span="73-73"];
m14_33 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="lockAcquired.Wait()", span="67-67"];
m14_32 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="thread.Start()", span="65-65"];
m14_36 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=green, community=0, file="SqlServerDistributedLockFacts.cs", label="0: var thread = new Thread(\r\n                () => UseConnection(connection1 =>\r\n                {\r\n                    var storage = CreateStorage(connection1);\r\n                    using (new SqlServerDistributedLock(storage, ''exclusive'', _timeout))\r\n                    {\r\n                        lockAcquired.Set();\r\n                        releaseLock.Wait();\r\n                    }\r\n                }))", span="59-68"];
m14_34 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", color=red, community=0, file="SqlServerDistributedLockFacts.cs", label="0: UseConnection(connection2 => \r\n                Assert.Throws<SqlServerDistributedLockException>(\r\n                    () => new SqlServerDistributedLock(''exclusive'', _timeout, connection2)))", span="69-71"];
m14_37 [cluster="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", file="SqlServerDistributedLockFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts.Ctor_ThrowsAnException_IfLockCanNotBeGranted()", span="51-51"];
m14_68 [cluster="Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", file="SqlServerDistributedLockFacts.cs", label="Entry Hangfire.SqlServer.SqlServerDistributedLock.Dispose()", span="83-83"];
m14_74 [file="SqlServerDistributedLockFacts.cs", label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", span=""];
m14_75 [file="SqlServerDistributedLockFacts.cs", label=releaseLock, span=""];
m14_76 [file="SqlServerDistributedLockFacts.cs", label=lockAcquired, span=""];
m14_86 [file="SqlServerDistributedLockFacts.cs", label=storage, span=""];
m14_89 [file="SqlServerDistributedLockFacts.cs", label=storage, span=""];
m15_19 [cluster="Unk.Commit", file="SqlServerFetchedJob.cs", label="Entry Unk.Commit", span=""];
m15_20 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="56-56"];
m15_21 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs", label="_transaction.Rollback()", span="58-58"];
m15_22 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="56-56"];
m15_0 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", span="29-29"];
m15_1 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", color=green, community=0, file="SqlServerFetchedJob.cs", label="0: storage == null", span="36-36"];
m15_3 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="connection == null", span="37-37"];
m15_5 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="transaction == null", span="38-38"];
m15_7 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="jobId == null", span="39-39"];
m15_9 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="queue == null", span="40-40"];
m15_10 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''queue'');", span="40-40"];
m15_11 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", color=green, community=0, file="SqlServerFetchedJob.cs", label="0: _storage = storage", span="42-42"];
m15_12 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="_connection = connection", span="43-43"];
m15_13 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="_transaction = transaction", span="44-44"];
m15_2 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", color=green, community=0, file="SqlServerFetchedJob.cs", label="0: throw new ArgumentNullException(''storage'');", span="36-36"];
m15_4 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''connection'');", span="37-37"];
m15_6 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''transaction'');", span="38-38"];
m15_8 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="throw new ArgumentNullException(''jobId'');", span="39-39"];
m15_14 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="JobId = jobId", span="46-46"];
m15_28 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", color=green, community=0, file="SqlServerFetchedJob.cs", label="0: _storage.ReleaseConnection(_connection)", span="66-66"];
m15_31 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230"];
m15_24 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="61-61"];
m15_25 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="_transaction.Dispose()", span="63-63"];
m15_26 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", color=red, community=0, file="SqlServerFetchedJob.cs", label="0: _connection.Dispose()", span="64-64"];
m15_27 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="61-61"];
m15_16 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", span="29-29"];
m15_17 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs", label="_transaction.Commit()", span="53-53"];
m15_18 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="SqlServerFetchedJob.cs", label="Exit Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="51-51"];
m15_23 [cluster="Unk.Rollback", file="SqlServerFetchedJob.cs", label="Entry Unk.Rollback", span=""];
m15_15 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(Hangfire.SqlServer.SqlServerStorage, IDbConnection, IDbTransaction, string, string)", file="SqlServerFetchedJob.cs", label="Queue = queue", span="47-47"];
m15_29 [file="SqlServerFetchedJob.cs", label="Hangfire.SqlServer.SqlServerFetchedJob", span=""];
m16_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SqlServerFetchedJobFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m16_21 [cluster="Unk.EnqueueItemOnList", file="SqlServerFetchedJobFacts.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m16_20 [cluster="string.Format(string, object)", file="SqlServerFetchedJobFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m16_12 [cluster="Unk.QueueCommand", file="SqlServerFetchedJobFacts.cs", label="Entry Unk.QueueCommand", span=""];
m16_3 [cluster="HangFire.States.EnqueuedState.GetProperties()", file="SqlServerFetchedJobFacts.cs", label="Entry HangFire.States.EnqueuedState.GetProperties()", span="20-20"];
m16_4 [cluster="HangFire.States.EnqueuedState.GetProperties()", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="0: return new Dictionary<string, string>\r\n                {\r\n                    { ''EnqueuedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''Queue'', Queue }\r\n                };", span="22-26"];
m16_5 [cluster="HangFire.States.EnqueuedState.GetProperties()", file="SqlServerFetchedJobFacts.cs", label="Exit HangFire.States.EnqueuedState.GetProperties()", span="20-20"];
m16_16 [cluster="Unk.AddItemToSet", file="SqlServerFetchedJobFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m16_0 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="SqlServerFetchedJobFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m16_1 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="SqlServerFetchedJobFacts.cs", label="Queue = queue", span="13-13"];
m16_2 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="SqlServerFetchedJobFacts.cs", label="Exit HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m16_17 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="32-33"];
m16_13 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Entry lambda expression", span="31-31"];
m16_18 [cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="0: x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), jobId)", span="32-33"];
m16_19 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="32-33"];
m16_14 [cluster="lambda expression", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="0: x.AddItemToSet(''hangfire:queues'', Queue)", span="31-31"];
m16_15 [cluster="lambda expression", file="SqlServerFetchedJobFacts.cs", label="Exit lambda expression", span="31-31"];
m16_7 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerFetchedJobFacts.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="51-51"];
m16_8 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", file="SqlServerFetchedJobFacts.cs", label="Entry HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", span="29-29"];
m16_9 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="0: transaction.QueueCommand(x => x.AddItemToSet(''hangfire:queues'', Queue))", span="31-31"];
m16_10 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", color=green, community=0, file="SqlServerFetchedJobFacts.cs", label="0: transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', Queue), jobId))", span="32-33"];
m16_11 [cluster="HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", file="SqlServerFetchedJobFacts.cs", label="Exit HangFire.States.EnqueuedState.Apply(IRedisTransaction, string)", span="29-29"];
m16_22 [file="SqlServerFetchedJobFacts.cs", label="HangFire.States.EnqueuedState", span=""];
m16_23 [file="SqlServerFetchedJobFacts.cs", label=string, span=""];
m17_46 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="SqlServerJobQueue.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="316-316"];
m17_0 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="33-33"];
m17_6 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerJobQueue.cs", label="0: _options = options", span="39-39"];
m17_4 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs", label="throw new ArgumentNullException(''options'');", span="36-36"];
m17_5 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs", label="_storage = storage", span="38-38"];
m17_7 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="33-33"];
m17_9 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43"];
m17_11 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="throw new ArgumentNullException(''queues'');", span="45-45"];
m17_36 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SqlServerJobQueue.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m17_1 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs", label="storage == null", span="35-35"];
m17_2 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs", label="throw new ArgumentNullException(''storage'');", span="35-35"];
m17_8 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="SqlServerJobQueue.cs", label="WriteLiteral(''\r\n'')", span="85-85"];
m17_10 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="queues == null", span="45-45"];
m17_12 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="queues.Length == 0", span="46-46"];
m17_14 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="FetchedJob fetchedJob = null", span="48-48"];
m17_15 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="SqlConnection connection = null", span="49-49"];
m17_16 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="SqlTransaction transaction = null", span="50-50"];
m17_17 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="string fetchJobSqlTemplate = @''\r\ndelete top (1) from HangFire.JobQueue with (readpast, updlock)\r\noutput DELETED.Id, DELETED.JobId, DELETED.Queue\r\nwhere (FetchedAt is null or FetchedAt < DATEADD(second, @timeout, GETUTCDATE()))\r\nand Queue in @queues''", span="52-56"];
m17_18 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="60-60"];
m17_19 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="connection = _storage.CreateAndOpenConnection()", span="62-62"];
m17_20 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="transaction = connection.BeginTransaction(IsolationLevel.ReadCommitted)", span="63-63"];
m17_22 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label=SqlException, span="73-73"];
m17_23 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="transaction.Dispose()", span="75-75"];
m17_24 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: connection.Dispose()", span="76-76"];
m17_25 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="throw;", span="77-77"];
m17_26 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="fetchedJob == null", span="80-80"];
m17_27 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="transaction.Rollback()", span="82-82"];
m17_29 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: connection.Dispose()", span="84-84"];
m17_30 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="86-86"];
m17_31 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="87-87"];
m17_32 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="fetchedJob == null", span="89-89"];
m17_33 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", color=red, community=0, file="SqlServerJobQueue.cs", label="0: return new SqlServerFetchedJob(\r\n                connection,\r\n                transaction,\r\n                fetchedJob.Id,\r\n                fetchedJob.JobId.ToString(CultureInfo.InvariantCulture),\r\n                fetchedJob.Queue);", span="91-96"];
m17_34 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43"];
m17_35 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerJobQueue.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m17_3 [cluster="Hangfire.SqlServer.SqlServerJobQueue.SqlServerJobQueue(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerJobQueue.cs", label="options == null", span="36-36"];
m17_13 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="46-46"];
m17_21 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="fetchedJob = connection.Query<FetchedJob>(\r\n                               fetchJobSqlTemplate,\r\n                               new { queues = queues, timeout = _options.InvisibilityTimeout.Negate().TotalSeconds },\r\n                               transaction)\r\n                               .SingleOrDefault()", span="67-71"];
m17_28 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueue.cs", label="transaction.Dispose()", span="83-83"];
m17_37 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217"];
m17_50 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", file="SqlServerJobQueue.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueue.Enqueue(IDbConnection, string, string)", span="99-99"];
m17_45 [cluster="Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", file="SqlServerJobQueue.cs", label="Entry Hangfire.SqlServer.SqlServerFetchedJob.SqlServerFetchedJob(SqlConnection, SqlTransaction, int, string, string)", span="29-29"];
m17_54 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SqlServerJobQueue.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="51-51"];
m17_44 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SqlServerJobQueue.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m17_43 [cluster="Unk.Rollback", file="SqlServerJobQueue.cs", label="Entry Unk.Rollback", span=""];
m17_39 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SqlServerJobQueue.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m17_40 [cluster="string.ToUpperInvariant()", file="SqlServerJobQueue.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m17_38 [cluster="Unk.BeginTransaction", file="SqlServerJobQueue.cs", label="Entry Unk.BeginTransaction", span=""];
m17_47 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SqlServerJobQueue.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m17_48 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SqlServerJobQueue.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="73-73"];
m17_49 [cluster="Unk.Write", file="SqlServerJobQueue.cs", label="Entry Unk.Write", span=""];
m17_41 [cluster="Unk.SingleOrDefault", file="SqlServerJobQueue.cs", label="Entry Unk.SingleOrDefault", span=""];
m17_53 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="SqlServerJobQueue.cs", label="Entry HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="34-34"];
m17_42 [cluster="HttpRequestBase.LinkTo(string)", file="SqlServerJobQueue.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m17_51 [cluster="Unk.Execute", file="SqlServerJobQueue.cs", label="Entry Unk.Execute", span=""];
m17_55 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SqlServerJobQueue.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m17_52 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="SqlServerJobQueue.cs", label="Hangfire.SqlServer.SqlServerJobQueue", span=""];
m17_56 [file="SqlServerJobQueue.cs", label="HangFire.Web.Pages.EnqueuedJobsPage", span=""];
m18_201 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerJobQueueFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="242-242"];
m18_202 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerJobQueueFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException() })", span="245-246"];
m18_203 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerJobQueueFacts.cs", label="var worker = CreateWorker()", span="248-248"];
m18_204 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerJobQueueFacts.cs", label="worker.Execute(_token)", span="251-251"];
m18_205 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerJobQueueFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", span="254-257"];
m18_206 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="SqlServerJobQueueFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="242-242"];
m18_0 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25"];
m18_2 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="SqlServerJobQueueFacts.cs", label="0: _storage = _context.SharedContext.Storage", span="28-28"];
m18_1 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_context = new WorkerContextMock()", span="27-27"];
m18_3 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_process = _context.SharedContext.PerformanceProcess", span="29-29"];
m18_173 [cluster="Unk.Throws", file="SqlServerJobQueueFacts.cs", label="Entry Unk.Throws", span=""];
m18_101 [cluster="Unk.InSequence", file="SqlServerJobQueueFacts.cs", label="Entry Unk.InSequence", span=""];
m18_103 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="x.TryToChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", span="102-103"];
m18_102 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="102-103"];
m18_104 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="102-103"];
m18_23 [cluster="Mock<IStateMachine>.cstr", file="SqlServerJobQueueFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m18_93 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.NotNull(payload)", span="137-137"];
m18_5 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33"];
m18_60 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="SqlServerJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldWaitIndefinitely_WhenThereAreNoJobs()", span="75-75"];
m18_72 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", file="SqlServerJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", span="88-88"];
m18_24 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="35-43"];
m18_10 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="43-47"];
m18_94 [cluster="lambda expression", color=green, community=0, file="SqlServerJobQueueFacts.cs", label="0: var jobInQueue = connection.Query(''select * from HangFire.JobQueue'').SingleOrDefault()", span="139-139"];
m18_95 [cluster="lambda expression", color=green, community=0, file="SqlServerJobQueueFacts.cs", label="0: Assert.Null(jobInQueue)", span="140-140"];
m18_96 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="SqlServerJobQueueFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="107-108"];
m18_97 [cluster="Unk.Execute", color=red, community=0, file="SqlServerJobQueueFacts.cs", label="0: Entry Unk.Execute", span=""];
m18_98 [cluster="Unk.NotNull", file="SqlServerJobQueueFacts.cs", label="Entry Unk.NotNull", span=""];
m18_99 [cluster="Unk.SingleOrDefault", file="SqlServerJobQueueFacts.cs", label="Entry Unk.SingleOrDefault", span=""];
m18_100 [cluster="Unk.Null", file="SqlServerJobQueueFacts.cs", label="Entry Unk.Null", span=""];
m18_16 [cluster="lambda expression", color=green, community=0, file="SqlServerJobQueueFacts.cs", label="0: new SqlServerJobQueue(new SqlServerStorage(ConnectionUtils.GetConnectionString()), null)", span="27-27"];
m18_207 [cluster="HangFire.Common.JobLoadException.JobLoadException()", file="SqlServerJobQueueFacts.cs", label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33"];
m18_20 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="SqlServerJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldThrowAnException_WhenQueuesCollectionIsNull()", span="33-33"];
m18_56 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerJobQueueFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="64-64"];
m18_108 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="168-170"];
m18_165 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", file="SqlServerJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", span="289-289"];
m18_166 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="SqlServerJobQueueFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m18_167 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerJobQueueFacts.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m18_170 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateJobQueue(SqlConnection)", color=green, community=0, file="SqlServerJobQueueFacts.cs", label="0: var storage = new SqlServerStorage(connection)", span="299-299"];
m18_168 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="SqlServerJobQueueFacts.cs", label="var worker = CreateWorker()", span="208-208"];
m18_169 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="SqlServerJobQueueFacts.cs", label="worker.Execute(_token)", span="211-211"];
m18_171 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateJobQueue(SqlConnection)", color=green, community=0, file="SqlServerJobQueueFacts.cs", label="0: return new SqlServerJobQueue(storage, new SqlServerStorageOptions());", span="300-300"];
m18_172 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateJobQueue(SqlConnection)", file="SqlServerJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateJobQueue(SqlConnection)", span="297-297"];
m18_68 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="SqlServerJobQueueFacts.cs", label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="79-79"];
m18_191 [cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="SqlServerJobQueueFacts.cs", label=arrangeSql, span=""];
m18_4 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="31-31"];
m18_38 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="49-57"];
m18_47 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="SqlServerJobQueueFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var cts = new CancellationTokenSource();\r\n                cts.Cancel();\r\n                var queue = CreateJobQueue(connection);\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token));\r\n            })", span="63-71"];
m18_216 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="SqlServerJobQueueFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Method()", span="265-265"];
m18_11 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="49-49"];
m18_12 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=green, community=0, file="SqlServerJobQueueFacts.cs", label="0: _context.SharedContext.StateMachineFactory\r\n                .Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="51-53"];
m18_13 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_stateMachine.Setup(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())).Returns(true)", span="55-58"];
m18_14 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_token = new CancellationToken()", span="60-60"];
m18_9 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_connection\r\n                .Setup(x => x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_processingJob.Object)", span="39-41"];
m18_35 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="40-40"];
m18_36 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>())", span="40-40"];
m18_37 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="40-40"];
m18_136 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="SqlServerJobQueueFacts.cs", label="var worker = CreateWorker()", span="163-163"];
m18_138 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="SqlServerJobQueueFacts.cs", label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="169-171"];
m18_137 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="SqlServerJobQueueFacts.cs", label="worker.Execute(_token)", span="166-166"];
m18_139 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="SqlServerJobQueueFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="153-153"];
m18_46 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="46-46"];
m18_48 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="52-52"];
m18_154 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var queue = CreateJobQueue(connection)", span="278-278"];
m18_155 [cluster="lambda expression", color=green, community=0, file="SqlServerJobQueueFacts.cs", label="0: queue.Enqueue(connection, ''default'', ''1'')", span="280-280"];
m18_156 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var record = connection.Query(''select * from HangFire.JobQueue'').Single()", span="282-282"];
m18_157 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Equal(''1'', record.JobId.ToString())", span="283-283"];
m18_158 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Equal(''default'', record.Queue)", span="284-284"];
m18_83 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerJobQueueFacts.cs", label="worker.Execute(_token)", span="88-88"];
m18_21 [cluster="HangFire.Storage.JobData.JobData()", file="SqlServerJobQueueFacts.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m18_22 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SqlServerJobQueueFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116"];
m18_28 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="35-43"];
m18_161 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="193-196"];
m18_18 [cluster="Unk.Setup", file="SqlServerJobQueueFacts.cs", label="Entry Unk.Setup", span=""];
m18_162 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="196-196"];
m18_111 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="111-112"];
m18_184 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerJobQueueFacts.cs", label=queue, span=""];
m18_185 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerJobQueueFacts.cs", label=cts, span=""];
m18_186 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerJobQueueFacts.cs", label=queue, span=""];
m18_189 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerJobQueueFacts.cs", label=arrangeSql, span=""];
m18_187 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerJobQueueFacts.cs", label=arrangeSql, span=""];
m18_188 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerJobQueueFacts.cs", label=arrangeSql, span=""];
m18_190 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="SqlServerJobQueueFacts.cs", label=arrangeSql, span=""];
m18_29 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="36-36"];
m18_123 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="187-209"];
m18_124 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="SqlServerJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", span="213-213"];
m18_125 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", color=red, community=0, file="SqlServerJobQueueFacts.cs", label="0: string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="215-219"];
m18_126 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", color=red, community=0, file="SqlServerJobQueueFacts.cs", label="1: UseConnection(connection =>\r\n            {\r\n                var queue = CreateJobQueue(connection);\r\n\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new { queue = ''critical'', invocationData = '''', arguments = '''' });\r\n                \r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken()));\r\n            })", span="221-233"];
m18_127 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="SqlServerJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchJobs_OnlyFromSpecifiedQueues()", span="213-213"];
m18_6 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_processingJob = new Mock<IProcessingJob>()", span="35-35"];
m18_7 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="new SqlServerJobQueue(null, new SqlServerStorageOptions())", span="18-18"];
m18_8 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="SqlServerJobQueueFacts.cs", label="_processingJob.Setup(x => x.Queue).Returns(Queue)", span="37-37"];
m18_15 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="27-27"];
m18_80 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Equal(''1'', payload.JobId)", span="109-109"];
m18_134 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="queue.Dequeue(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken())", span="230-232"];
m18_135 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="230-232"];
m18_39 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var queue = CreateJobQueue(connection)", span="51-51"];
m18_65 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var queue = CreateJobQueue(connection)", span="80-80"];
m18_66 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token))", span="82-83"];
m18_67 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="77-84"];
m18_69 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="83-83"];
m18_70 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="queue.Dequeue(DefaultQueues, cts.Token)", span="83-83"];
m18_85 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerJobQueueFacts.cs", label="_connection.Verify(x => x.DeleteJobFromQueue(JobId, Queue))", span="94-94"];
m18_87 [cluster="lambda expression", color=green, community=0, file="SqlServerJobQueueFacts.cs", label="1: Entry lambda expression", span="91-91"];
m18_86 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerJobQueueFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="84-84"];
m18_88 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="x.FetchNextJob(_context.SharedContext.Queues, _token)", span="91-91"];
m18_150 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="SqlServerJobQueueFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="175-175"];
m18_151 [cluster="lambda expression", color=green, community=0, file="SqlServerJobQueueFacts.cs", label="0: Entry lambda expression", span="181-183"];
m18_152 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="181-183"];
m18_113 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="SqlServerJobQueueFacts.cs", label="var worker = CreateWorker()", span="127-127"];
m18_115 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="SqlServerJobQueueFacts.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.Object.ServerId),\r\n                It.IsAny<string[]>()))", span="131-134"];
m18_114 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="SqlServerJobQueueFacts.cs", label="worker.Execute(_token)", span="129-129"];
m18_116 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="SqlServerJobQueueFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="125-125"];
m18_55 [cluster="Unk.TryToChangeState", file="SqlServerJobQueueFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m18_64 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var cts = new CancellationTokenSource(200)", span="79-79"];
m18_140 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="157-160"];
m18_25 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var queue = CreateJobQueue(connection)", span="37-37"];
m18_32 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="40-40"];
m18_40 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                    () => queue.Dequeue(new string[0], CreateTimingOutCancellationToken()))", span="53-54"];
m18_44 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="queue.Dequeue(new string[0], CreateTimingOutCancellationToken())", span="54-54"];
m18_52 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var queue = CreateJobQueue(connection)", span="67-67"];
m18_26 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => queue.Dequeue(null, CreateTimingOutCancellationToken()))", span="39-40"];
m18_27 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Equal(''queues'', exception.ParamName)", span="42-42"];
m18_30 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="40-40"];
m18_31 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="queue.Dequeue(null, CreateTimingOutCancellationToken())", span="40-40"];
m18_33 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", file="SqlServerJobQueueFacts.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", span="289-289"];
m18_34 [cluster="Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="SqlServerJobQueueFacts.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="43-43"];
m18_41 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Equal(''queues'', exception.ParamName)", span="56-56"];
m18_42 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="49-57"];
m18_45 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="54-54"];
m18_49 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="63-71"];
m18_50 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var cts = new CancellationTokenSource()", span="65-65"];
m18_53 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token))", span="69-70"];
m18_54 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="63-71"];
m18_61 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="SqlServerJobQueueFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var cts = new CancellationTokenSource(200);\r\n                var queue = CreateJobQueue(connection);\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(DefaultQueues, cts.Token));\r\n            })", span="77-84"];
m18_62 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="SqlServerJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldWaitIndefinitely_WhenThereAreNoJobs()", span="75-75"];
m18_63 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="77-84"];
m18_74 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", file="SqlServerJobQueueFacts.cs", label="UseConnection(connection =>\r\n            {\r\n                var id = (int)connection.Query(\r\n                    arrangeSql,\r\n                    new { jobId = 1, queue = ''default'' }).Single().Id;\r\n                var queue = CreateJobQueue(connection);\r\n\r\n                // Act\r\n                var payload = (SqlServerFetchedJob)queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', payload.JobId);\r\n                Assert.Equal(''default'', payload.Queue);\r\n            })", span="96-111"];
m18_77 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var id = (int)connection.Query(\r\n                    arrangeSql,\r\n                    new { jobId = 1, queue = ''default'' }).Single().Id", span="98-100"];
m18_75 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", file="SqlServerJobQueueFacts.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", span="88-88"];
m18_76 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="96-111"];
m18_78 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var queue = CreateJobQueue(connection)", span="101-101"];
m18_79 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var payload = (SqlServerFetchedJob)queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="104-106"];
m18_90 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new { invocationData = '''', arguments = '''', queue = ''default'' })", span="126-128"];
m18_89 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="124-141"];
m18_91 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var queue = CreateJobQueue(connection)", span="129-129"];
m18_92 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="132-134"];
m18_105 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="154-174"];
m18_109 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.NotEmpty(payload.JobId)", span="173-173"];
m18_106 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        queue = ''default'',\r\n                        fetchedAt = DateTime.UtcNow.AddDays(-1),\r\n                        invocationData = '''',\r\n                        arguments = ''''\r\n                    })", span="156-164"];
m18_107 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var queue = CreateJobQueue(connection)", span="165-165"];
m18_110 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="154-174"];
m18_117 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="187-209"];
m18_118 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' }\r\n                    })", span="189-195"];
m18_119 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var queue = CreateJobQueue(connection)", span="196-196"];
m18_120 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var payload = queue.Dequeue(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="199-201"];
m18_121 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var otherJobFetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId != @id'',\r\n                    new { id = payload.JobId }).Single()", span="204-206"];
m18_122 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Null(otherJobFetchedAt)", span="208-208"];
m18_128 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="221-233"];
m18_129 [cluster="lambda expression", color=red, community=0, file="SqlServerJobQueueFacts.cs", label="0: var queue = CreateJobQueue(connection)", span="223-223"];
m18_130 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new { queue = ''critical'', invocationData = '''', arguments = '''' })", span="225-227"];
m18_131 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => queue.Dequeue(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken()))", span="229-232"];
m18_132 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="221-233"];
m18_133 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="230-232"];
m18_143 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var critical = (SqlServerFetchedJob)queue.Dequeue(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken())", span="257-259"];
m18_141 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''critical'', invocationData = '''', arguments = '''' }\r\n                    })", span="247-253"];
m18_142 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="var queue = CreateJobQueue(connection)", span="255-255"];
m18_144 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.NotNull(critical.JobId)", span="261-261"];
m18_145 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Equal(''critical'', critical.Queue)", span="262-262"];
m18_153 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="276-286"];
m18_159 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Assert.Null(record.FetchedAt)", span="285-285"];
m18_160 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="276-286"];
m18_163 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", file="SqlServerJobQueueFacts.cs", label="var source = new CancellationTokenSource(TimeSpan.FromSeconds(10))", span="291-291"];
m18_164 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.CreateTimingOutCancellationToken()", file="SqlServerJobQueueFacts.cs", label="return source.Token;", span="292-292"];
m18_178 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", span="214-217"];
m18_181 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label=queue, span=""];
m18_174 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="205-205"];
m18_177 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="214-217"];
m18_175 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="205-205"];
m18_176 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="205-205"];
m18_179 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="214-217"];
m18_180 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", span=""];
m18_182 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label=queue, span=""];
m18_196 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", span="235-238"];
m18_199 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="state.Exception == exception && state.Reason == ''hello''", span="237-237"];
m18_192 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label=queue, span=""];
m18_195 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="235-238"];
m18_193 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label=arrangeSql, span=""];
m18_194 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="226-226"];
m18_197 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="235-238"];
m18_198 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="237-237"];
m18_200 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="237-237"];
m18_208 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="245-245"];
m18_211 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Entry lambda expression", span="254-257"];
m18_209 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="x.GetJobData(JobId)", span="245-245"];
m18_210 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="245-245"];
m18_212 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", span="254-257"];
m18_213 [cluster="lambda expression", file="SqlServerJobQueueFacts.cs", label="Exit lambda expression", span="254-257"];
m18_17 [cluster="Mock<IStorageConnection>.cstr", file="SqlServerJobQueueFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m18_81 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerJobQueueFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="84-84"];
m18_148 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="SqlServerJobQueueFacts.cs", label="worker.Execute(_token)", span="179-179"];
m18_82 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="SqlServerJobQueueFacts.cs", label="var worker = CreateWorker()", span="86-86"];
m18_146 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="SqlServerJobQueueFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="175-175"];
m18_147 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="SqlServerJobQueueFacts.cs", label="var worker = CreateWorker()", span="177-177"];
m18_149 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="SqlServerJobQueueFacts.cs", label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="181-183"];
m18_43 [cluster="Unk.GetJobData", file="SqlServerJobQueueFacts.cs", label="Entry Unk.GetJobData", span=""];
m18_57 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerJobQueueFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null))", span="66-67"];
m18_51 [cluster="Unk.Create", file="SqlServerJobQueueFacts.cs", label="Entry Unk.Create", span=""];
m18_58 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerJobQueueFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="69-69"];
m18_59 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="SqlServerJobQueueFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="64-64"];
m18_71 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="SqlServerJobQueueFacts.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="260-260"];
m18_112 [cluster="Unk.NotEmpty", file="SqlServerJobQueueFacts.cs", label="Entry Unk.NotEmpty", span=""];
m18_84 [cluster="Unk.Single", file="SqlServerJobQueueFacts.cs", label="Entry Unk.Single", span=""];
m18_183 [cluster="Unk.Contains", file="SqlServerJobQueueFacts.cs", label=cts, span=""];
m18_214 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="SqlServerJobQueueFacts.cs", label="return new Worker(_context.Object);", span="262-262"];
m18_215 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="SqlServerJobQueueFacts.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="260-260"];
m18_73 [cluster="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts.Dequeue_ShouldFetchAJob_FromTheSpecifiedQueue()", file="SqlServerJobQueueFacts.cs", label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue);\r\nselect scope_identity() as Id;''", span="90-93"];
m18_19 [cluster="Unk.Returns", file="SqlServerJobQueueFacts.cs", label="Entry Unk.Returns", span=""];
m18_217 [file="SqlServerJobQueueFacts.cs", label="HangFire.Core.Tests.Server.WorkerFacts", span=""];
m18_218 [file="SqlServerJobQueueFacts.cs", label=exception, span=""];
m18_219 [file="SqlServerJobQueueFacts.cs", label=exception, span=""];
m19_163 [cluster="Metric.cstr", file="SqlServerStorage.cs", label="Entry Metric.cstr", span=""];
m19_133 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", span="238-238"];
m19_134 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", color=red, community=0, file="SqlServerStorage.cs", label="0: return isolationLevel != null\r\n                ? new TransactionScope(TransactionScopeOption.Required,\r\n                    new TransactionOptions { IsolationLevel = isolationLevel.Value })\r\n                : new TransactionScope();", span="240-243"];
m19_135 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", span="238-238"];
m19_26 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96"];
m19_27 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs", label="existingConnection == null", span="98-98"];
m19_29 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs", label="_existingConnection = existingConnection", span="100-100"];
m19_28 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''existingConnection'');", span="98-98"];
m19_30 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs", label="_options = new SqlServerStorageOptions()", span="101-101"];
m19_31 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs", label="InitializeQueueProviders()", span="103-103"];
m19_32 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96"];
m19_23 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217"];
m19_119 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="_existingConnection != null", span="219-219"];
m19_120 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="return _existingConnection;", span="221-221"];
m19_121 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="var connection = new SqlConnection(_connectionString)", span="224-224"];
m19_122 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="connection.Open()", span="225-225"];
m19_123 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="return connection;", span="227-227"];
m19_124 [cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217"];
m19_145 [cluster="string.Contains(string)", file="SqlServerStorage.cs", label="Entry string.Contains(string)", span="0-0"];
m19_127 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230"];
m19_128 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerStorage.cs", label="connection != null && !ReferenceEquals(connection, _existingConnection)", span="232-232"];
m19_129 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerStorage.cs", label="connection.Dispose()", span="234-234"];
m19_130 [cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230"];
m19_142 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", span="31-31"];
m19_155 [cluster="Hangfire.Dashboard.Metric.Metric(string)", file="SqlServerStorage.cs", label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20"];
m19_76 [cluster="System.Text.StringBuilder.Append(string)", file="SqlServerStorage.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m19_72 [cluster="Unk.ToDictionary", file="SqlServerStorage.cs", label="Entry Unk.ToDictionary", span=""];
m19_42 [cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetComponents()", span="118-118"];
m19_43 [cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new ExpirationManager(this, _options.JobExpirationCheckInterval);", span="120-120"];
m19_44 [cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new CountersAggregator(this, _options.CountersAggregateInterval);", span="121-121"];
m19_45 [cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.GetComponents()", span="118-118"];
m19_33 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m19_22 [cluster="string.Format(string, object)", file="SqlServerStorage.cs", label="Entry string.Format(string, object)", span="0-0"];
m19_75 [cluster="Unk.Append", file="SqlServerStorage.cs", label="Entry Unk.Append", span=""];
m19_161 [cluster="Unk.>", file="SqlServerStorage.cs", label="Entry Unk.>", span=""];
m19_73 [cluster="System.Text.StringBuilder.StringBuilder()", file="SqlServerStorage.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m19_103 [cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerStorage.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m19_38 [cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="113-113"];
m19_39 [cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="return new SqlServerConnection(this);", span="115-115"];
m19_40 [cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="113-113"];
m19_21 [cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerStorage.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m19_48 [cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="124-124"];
m19_49 [cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs", label="logger.Info(''Using the following options for SQL Server job storage:'')", span="126-126"];
m19_50 [cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs", label="logger.InfoFormat(''    Queue poll interval: {0}.'', _options.QueuePollInterval)", span="127-127"];
m19_51 [cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="124-124"];
m19_126 [cluster="Unk.Open", file="SqlServerStorage.cs", label="Entry Unk.Open", span=""];
m19_83 [cluster="Unk.Trim", file="SqlServerStorage.cs", label="Entry Unk.Trim", span=""];
m19_131 [cluster="Unk.ReferenceEquals", file="SqlServerStorage.cs", label="Entry Unk.ReferenceEquals", span=""];
m19_125 [cluster="SqlConnection.cstr", file="SqlServerStorage.cs", label="Entry SqlConnection.cstr", span=""];
m19_90 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m19_91 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerStorage.cs", label="UseConnection(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            })", span="175-179"];
m19_92 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173"];
m19_20 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", span="257-257"];
m19_146 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs", label="var connectionStringSetting = ConfigurationManager.ConnectionStrings[connectionStringName]", span="259-259"];
m19_147 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs", label="return connectionStringSetting != null;", span="261-261"];
m19_148 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", span="257-257"];
m19_98 [cluster="System.Action<T>.Invoke(T)", file="SqlServerStorage.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m19_104 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="197-197"];
m19_105 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerStorage.cs", label="UseTransaction(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            }, null)", span="199-203"];
m19_106 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="197-197"];
m19_136 [cluster="TransactionScope.cstr", file="SqlServerStorage.cs", label="Entry TransactionScope.cstr", span=""];
m19_0 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="40-40"];
m19_1 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="40-40"];
m19_164 [cluster="Unk.ToString", file="SqlServerStorage.cs", label="Entry Unk.ToString", span=""];
m19_141 [cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27"];
m19_118 [cluster="Unk.Complete", file="SqlServerStorage.cs", label="Entry Unk.Complete", span=""];
m19_24 [cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35"];
m19_132 [cluster="Unk.Dispose", file="SqlServerStorage.cs", label="Entry Unk.Dispose", span=""];
m19_37 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36"];
m19_53 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="SqlServerStorage.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m19_70 [cluster="string.Split(char[], System.StringSplitOptions)", file="SqlServerStorage.cs", label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0"];
m19_137 [cluster="TransactionOptions.cstr", file="SqlServerStorage.cs", label="Entry TransactionOptions.cstr", span=""];
m19_46 [cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="47-47"];
m19_171 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="294-305"];
m19_77 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="137-137"];
m19_80 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="138-138"];
m19_84 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="139-139"];
m19_87 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="139-139"];
m19_78 [cluster="lambda expression", file="SqlServerStorage.cs", label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="137-137"];
m19_79 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="137-137"];
m19_81 [cluster="lambda expression", file="SqlServerStorage.cs", label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="138-138"];
m19_82 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="138-138"];
m19_85 [cluster="lambda expression", file="SqlServerStorage.cs", label="x.Key", span="139-139"];
m19_86 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="139-139"];
m19_88 [cluster="lambda expression", file="SqlServerStorage.cs", label="x.Value", span="139-139"];
m19_89 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="139-139"];
m19_95 [cluster="lambda expression", file="SqlServerStorage.cs", label="action(connection)", span="177-177"];
m19_94 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="175-179"];
m19_96 [cluster="lambda expression", file="SqlServerStorage.cs", label="return true;", span="178-178"];
m19_97 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="175-179"];
m19_109 [cluster="lambda expression", file="SqlServerStorage.cs", label="action(connection)", span="201-201"];
m19_108 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="199-203"];
m19_110 [cluster="lambda expression", file="SqlServerStorage.cs", label="return true;", span="202-202"];
m19_111 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="199-203"];
m19_149 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="267-284"];
m19_150 [cluster="lambda expression", file="SqlServerStorage.cs", label="var sqlStorage = page.Storage as SqlServerStorage", span="269-269"];
m19_151 [cluster="lambda expression", file="SqlServerStorage.cs", label="sqlStorage == null", span="270-270"];
m19_153 [cluster="lambda expression", file="SqlServerStorage.cs", label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="272-283"];
m19_152 [cluster="lambda expression", file="SqlServerStorage.cs", label="return new Metric(''???'');", span="270-270"];
m19_154 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="267-284"];
m19_156 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="272-283"];
m19_157 [cluster="lambda expression", file="SqlServerStorage.cs", label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping'''", span="274-276"];
m19_158 [cluster="lambda expression", file="SqlServerStorage.cs", label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="278-280"];
m19_159 [cluster="lambda expression", file="SqlServerStorage.cs", label="return new Metric(value.ToString(''N0''));", span="282-282"];
m19_160 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="272-283"];
m19_165 [cluster="lambda expression", file="SqlServerStorage.cs", label="Entry lambda expression", span="289-306"];
m19_166 [cluster="lambda expression", file="SqlServerStorage.cs", label="var sqlStorage = page.Storage as SqlServerStorage", span="291-291"];
m19_167 [cluster="lambda expression", file="SqlServerStorage.cs", label="sqlStorage == null", span="292-292"];
m19_169 [cluster="lambda expression", file="SqlServerStorage.cs", label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="294-305"];
m19_168 [cluster="lambda expression", file="SqlServerStorage.cs", label="return new Metric(''???'');", span="292-292"];
m19_170 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="289-306"];
m19_172 [cluster="lambda expression", file="SqlServerStorage.cs", label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background'''", span="296-298"];
m19_173 [cluster="lambda expression", file="SqlServerStorage.cs", label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="300-302"];
m19_174 [cluster="lambda expression", file="SqlServerStorage.cs", label="return new Metric(value.ToString(''N0''));", span="304-304"];
m19_175 [cluster="lambda expression", file="SqlServerStorage.cs", label="Exit lambda expression", span="294-305"];
m19_25 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="246-246"];
m19_138 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs", label="var defaultQueueProvider = new SqlServerJobQueueProvider(this, _options)", span="248-248"];
m19_139 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs", label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="249-249"];
m19_140 [cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="246-246"];
m19_34 [cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="108-108"];
m19_35 [cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="return new SqlServerMonitoringApi(this, _options.DashboardJobListLimit);", span="110-110"];
m19_36 [cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="108-108"];
m19_71 [cluster="Unk.Select", file="SqlServerStorage.cs", label="Entry Unk.Select", span=""];
m19_52 [cluster="Hangfire.Logging.ILog.Info(string)", file="SqlServerStorage.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
m19_54 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.ToString()", span="130-130"];
m19_55 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="string canNotParseMessage = ''<Connection string can not be parsed>''", span="132-132"];
m19_56 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value, StringComparer.OrdinalIgnoreCase)", span="136-139"];
m19_66 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="return builder.Length != 0\r\n                    ? String.Format(''SQL Server: {0}'', builder)\r\n                    : canNotParseMessage;", span="163-165"];
m19_68 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="return canNotParseMessage;", span="169-169"];
m19_57 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="var builder = new StringBuilder()", span="141-141"];
m19_59 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="parts.ContainsKey(alias)", span="145-145"];
m19_60 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.Append(parts[alias])", span="147-147"];
m19_64 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="parts.ContainsKey(alias)", span="156-156"];
m19_65 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.Append(parts[alias])", span="158-158"];
m19_58 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="143-143"];
m19_61 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.Length != 0", span="152-152"];
m19_62 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="builder.Append(''@'')", span="152-152"];
m19_63 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="new[] { ''Database'', ''Initial Catalog'' }", span="154-154"];
m19_67 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label=Exception, span="167-167"];
m19_69 [cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.ToString()", span="130-130"];
m19_47 [cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34"];
m19_2 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="57-57"];
m19_3 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="nameOrConnectionString == null", span="59-59"];
m19_5 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="options == null", span="60-60"];
m19_7 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="_options = options", span="62-62"];
m19_8 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="IsConnectionString(nameOrConnectionString)", span="64-64"];
m19_9 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="_connectionString = nameOrConnectionString", span="66-66"];
m19_10 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="IsConnectionStringInConfiguration(nameOrConnectionString)", span="68-68"];
m19_11 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="_connectionString = ConfigurationManager.ConnectionStrings[nameOrConnectionString].ConnectionString", span="70-70"];
m19_12 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="throw new ArgumentException(\r\n                    string.Format(''Could not find connection string with name '{0}' in application config file'',\r\n                                  nameOrConnectionString));", span="74-76"];
m19_13 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="options.PrepareSchemaIfNecessary", span="79-79"];
m19_4 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''nameOrConnectionString'');", span="59-59"];
m19_6 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''options'');", span="60-60"];
m19_14 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="var connection = CreateAndOpenConnection()", span="81-81"];
m19_16 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="InitializeQueueProviders()", span="87-87"];
m19_15 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="SqlServerObjectsInstaller.Install(connection)", span="83-83"];
m19_17 [cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="57-57"];
m19_41 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33"];
m19_162 [cluster="Unk.Single", file="SqlServerStorage.cs", label="Entry Unk.Single", span=""];
m19_93 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="182-182"];
m19_99 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs", label="SqlConnection connection = null", span="184-184"];
m19_101 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs", label="return func(connection);", span="189-189"];
m19_100 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs", label="connection = CreateAndOpenConnection()", span="188-188"];
m19_102 [cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="182-182"];
m19_19 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", span="252-252"];
m19_143 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerStorage.cs", label="return nameOrConnectionString.Contains('';'');", span="254-254"];
m19_144 [cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", span="252-252"];
m19_107 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", span="206-206"];
m19_112 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs", label="var transaction = CreateTransaction(isolationLevel ?? _options.TransactionIsolationLevel)", span="208-208"];
m19_113 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs", label="var result = UseConnection(func)", span="210-210"];
m19_114 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs", label="transaction.Complete()", span="211-211"];
m19_115 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs", label="return result;", span="213-213"];
m19_116 [cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs", label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", span="206-206"];
m19_117 [cluster="Unk.CreateTransaction", file="SqlServerStorage.cs", label="Entry Unk.CreateTransaction", span=""];
m19_74 [cluster="Unk.ContainsKey", file="SqlServerStorage.cs", label="Entry Unk.ContainsKey", span=""];
m19_176 [file="SqlServerStorage.cs", label="Hangfire.SqlServer.SqlServerStorage", span=""];
m19_177 [file="SqlServerStorage.cs", label="System.Action<SqlConnection>", span=""];
m19_178 [file="SqlServerStorage.cs", label="System.Action<SqlConnection>", span=""];
m20_0 [cluster="Hangfire.Dashboard.IDashboardDispatcher.Dispatch(Hangfire.Dashboard.DashboardContext)", file="SqlServerStorageFacts.cs", label="Entry Hangfire.Dashboard.IDashboardDispatcher.Dispatch(Hangfire.Dashboard.DashboardContext)", span="23-23"];
m20_1 [cluster="Hangfire.Dashboard.IDashboardDispatcher.Dispatch(Hangfire.Dashboard.DashboardContext)", file="SqlServerStorageFacts.cs", label="Exit Hangfire.Dashboard.IDashboardDispatcher.Dispatch(Hangfire.Dashboard.DashboardContext)", span="23-23"];
m21_9 [cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerStorageOptions.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m21_10 [cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerStorageOptions.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m21_11 [cluster="System.TimeSpan.FromHours(double)", file="SqlServerStorageOptions.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m21_0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m21_1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="TransactionIsolationLevel = null", span="27-27"];
m21_2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28"];
m21_3 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="29-29"];
m21_4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30"];
m21_5 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31"];
m21_6 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="PrepareSchemaIfNecessary = true", span="32-32"];
m21_7 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs", label="DashboardJobListLimit = 50000", span="33-33"];
m21_8 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=green, community=0, file="SqlServerStorageOptions.cs", label="0: Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25"];
m21_12 [file="SqlServerStorageOptions.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
m22_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Worker.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m22_0 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="Worker.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m22_1 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="Worker.cs", label="ServerId = ''server''", span="14-14"];
m22_2 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="Worker.cs", label="Storage = new Mock<JobStorage>()", span="15-15"];
m22_3 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="Worker.cs", label="Properties = new Dictionary<string, object>()", span="16-16"];
m22_4 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="Worker.cs", label="CancellationTokenSource = new CancellationTokenSource()", span="17-17"];
m22_5 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="Worker.cs", label="_context = new Lazy<BackgroundProcessContext>(\r\n                () => new BackgroundProcessContext(ServerId, Storage.Object, Properties, CancellationTokenSource.Token))", span="19-20"];
m22_6 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="Worker.cs", label="Exit Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m22_10 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="Worker.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m22_14 [cluster="BackgroundProcessContext.cstr", file="Worker.cs", label="Entry BackgroundProcessContext.cstr", span=""];
m22_9 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m22_7 [cluster="Mock<JobStorage>.cstr", file="Worker.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m22_11 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="20-20"];
m22_12 [cluster="lambda expression", file="Worker.cs", label="new BackgroundProcessContext(ServerId, Storage.Object, Properties, CancellationTokenSource.Token)", span="20-20"];
m22_13 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="20-20"];
m22_15 [file="Worker.cs", label="Hangfire.Core.Tests.BackgroundProcessContextMock", span=""];
m23_162 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="178-178"];
m23_163 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="180-180"];
m23_164 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="182-182"];
m23_165 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>()))", span="184-190"];
m23_166 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="178-178"];
m23_17 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="11-11"];
m23_20 [cluster="Mock<IStateMachineFactory>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m23_77 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", span="87-87"];
m23_78 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="WorkerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_workerContext.Object, _process.Object, null))", span="89-90"];
m23_79 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="WorkerFacts.cs", label="Assert.Equal(''stateMachineFactoryFactory'', exception.ParamName)", span="92-92"];
m23_80 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", span="87-87"];
m23_18 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m23_65 [cluster="Unk.Equal", file="WorkerFacts.cs", label="Entry Unk.Equal", span=""];
m23_286 [cluster="System.Exception.Exception()", file="WorkerFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m23_243 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="278-278"];
m23_244 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="281-281"];
m23_245 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", color=red, community=0, file="WorkerFacts.cs", label="0: _process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="282-284"];
m23_248 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="292-296"];
m23_246 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="286-286"];
m23_247 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="289-289"];
m23_249 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="278-278"];
m23_232 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="264-264"];
m23_233 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="266-266"];
m23_234 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="268-268"];
m23_235 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>()))", span="270-274"];
m23_236 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="264-264"];
m23_132 [cluster="Unk.Requeue", file="WorkerFacts.cs", label="Entry Unk.Requeue", span=""];
m23_173 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="194-194"];
m23_174 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<CancellationToken>()))\r\n                .Returns(false)", span="197-203"];
m23_175 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="205-205"];
m23_176 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="208-208"];
m23_177 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", color=red, community=1, file="WorkerFacts.cs", label="0: _process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="211-213"];
m23_178 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="194-194"];
m23_185 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="217-217"];
m23_186 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="219-219"];
m23_187 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="221-221"];
m23_188 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", color=red, community=1, file="WorkerFacts.cs", label="0: _process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="223-225"];
m23_189 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="217-217"];
m23_219 [cluster="Unk.DoesNotThrow", file="WorkerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m23_147 [cluster="Unk.Run", file="WorkerFacts.cs", label="Entry Unk.Run", span=""];
m23_250 [cluster="System.InvalidOperationException.InvalidOperationException()", file="WorkerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m23_39 [cluster="Unk.>", file="WorkerFacts.cs", label="Entry Unk.>", span=""];
m23_113 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="121-121"];
m23_114 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="123-125"];
m23_115 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="127-127"];
m23_116 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => worker.Execute(_context.Object))", span="129-130"];
m23_117 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue(), Times.Never)", span="132-132"];
m23_118 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="133-133"];
m23_119 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="121-121"];
m23_212 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="248-248"];
m23_213 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", color=red, community=1, file="WorkerFacts.cs", label="0: _process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<JobAbortedException>()", span="251-252"];
m23_214 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="254-254"];
m23_215 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Assert.DoesNotThrow(() => worker.Execute(_context.Object))", span="257-257"];
m23_216 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="259-259"];
m23_217 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue(), Times.Never)", span="260-260"];
m23_218 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="248-248"];
m23_90 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="341-341"];
m23_293 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="return new Worker(_workerContext.Object, _process.Object, _stateMachineFactoryFactory.Object);", span="343-343"];
m23_294 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="341-341"];
m23_61 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="69-69"];
m23_62 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null, _process.Object, _stateMachineFactoryFactory.Object))", span="71-72"];
m23_63 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="74-74"];
m23_64 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="69-69"];
m23_60 [cluster="Unk.CreateFactory", file="WorkerFacts.cs", label="Entry Unk.CreateFactory", span=""];
m23_24 [cluster="Mock<IFetchedJob>.cstr", file="WorkerFacts.cs", label="Entry Mock<IFetchedJob>.cstr", span=""];
m23_262 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="300-300"];
m23_263 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="303-303"];
m23_264 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", color=red, community=0, file="WorkerFacts.cs", label="0: _process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="304-306"];
m23_267 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="314-318"];
m23_265 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="308-308"];
m23_266 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="311-311"];
m23_268 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="300-300"];
m23_28 [cluster="Mock<IStateMachineFactoryFactory>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStateMachineFactoryFactory>.cstr", span=""];
m23_32 [cluster="Unk.GetConnection", file="WorkerFacts.cs", label="Entry Unk.GetConnection", span=""];
m23_56 [cluster="Unk.ChangeState", file="WorkerFacts.cs", label="Entry Unk.ChangeState", span=""];
m23_0 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="27-27"];
m23_1 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_context = new BackgroundProcessContextMock()", span="29-29"];
m23_2 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_workerContext = new WorkerContextMock()", span="30-30"];
m23_3 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_process = new Mock<IJobPerformanceProcess>()", span="31-31"];
m23_4 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs", label="0: _stateMachineFactory = new Mock<IStateMachineFactory>()", span="32-32"];
m23_5 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="34-34"];
m23_6 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="35-35"];
m23_7 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_fetchedJob = new Mock<IFetchedJob>()", span="37-37"];
m23_8 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_fetchedJob.Setup(x => x.JobId).Returns(JobId)", span="38-38"];
m23_9 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection\r\n                .Setup(x => x.FetchNextJob(_workerContext.Queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_fetchedJob.Object)", span="40-42"];
m23_10 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="44-48"];
m23_11 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="50-50"];
m23_12 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=1, file="WorkerFacts.cs", label="0: _stateMachineFactory\r\n                .Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="52-54"];
m23_13 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateMachine.Setup(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())).Returns(true)", span="56-60"];
m23_14 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateMachineFactoryFactory = new Mock<IStateMachineFactoryFactory>()", span="62-62"];
m23_15 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=red, community=0, file="WorkerFacts.cs", label="0: _stateMachineFactoryFactory\r\n                .Setup(x => x.CreateFactory(It.IsNotNull<JobStorage>()))\r\n                .Returns(_stateMachineFactory.Object)", span="63-65"];
m23_16 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="27-27"];
m23_140 [cluster="Unk.InSequence", file="WorkerFacts.cs", label="Entry Unk.InSequence", span=""];
m23_22 [cluster="Unk.Setup", file="WorkerFacts.cs", label="Entry Unk.Setup", span=""];
m23_99 [cluster="Unk.Dispose", file="WorkerFacts.cs", label="Entry Unk.Dispose", span=""];
m23_251 [cluster="Unk.Throws", file="WorkerFacts.cs", label="Entry Unk.Throws", span=""];
m23_40 [cluster="Unk.FetchNextJob", file="WorkerFacts.cs", label="Entry Unk.FetchNextJob", span=""];
m23_84 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="96-96"];
m23_85 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="98-98"];
m23_86 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="100-100"];
m23_87 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_context.Storage.Verify(x => x.GetConnection(), Times.Once)", span="102-102"];
m23_88 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="103-103"];
m23_89 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="96-96"];
m23_279 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="322-322"];
m23_280 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException(''asd'', new Exception()) })", span="325-326"];
m23_281 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="328-328"];
m23_282 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="331-331"];
m23_283 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="334-338"];
m23_284 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="322-322"];
m23_112 [cluster="Unk.RemoveFromQueue", file="WorkerFacts.cs", label="Entry Unk.RemoveFromQueue", span=""];
m23_290 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="334-338"];
m23_29 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="35-35"];
m23_33 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="38-38"];
m23_36 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="41-41"];
m23_41 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="44-44"];
m23_45 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="47-47"];
m23_49 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="53-53"];
m23_53 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="56-60"];
m23_57 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="64-64"];
m23_30 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetConnection()", span="35-35"];
m23_31 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="35-35"];
m23_34 [cluster="lambda expression", file="WorkerFacts.cs", label="x.JobId", span="38-38"];
m23_35 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="38-38"];
m23_37 [cluster="lambda expression", file="WorkerFacts.cs", label="x.FetchNextJob(_workerContext.Queues, It.IsNotNull<CancellationToken>())", span="41-41"];
m23_38 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="41-41"];
m23_42 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetJobData(JobId)", span="44-44"];
m23_43 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="44-44"];
m23_46 [cluster="lambda expression", file="WorkerFacts.cs", label="Method()", span="47-47"];
m23_47 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="47-47"];
m23_50 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Create(_connection.Object)", span="53-53"];
m23_51 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="53-53"];
m23_54 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="56-60"];
m23_55 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="56-60"];
m23_58 [cluster="lambda expression", file="WorkerFacts.cs", label="x.CreateFactory(It.IsNotNull<JobStorage>())", span="64-64"];
m23_59 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="64-64"];
m23_66 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="72-72"];
m23_67 [cluster="lambda expression", file="WorkerFacts.cs", label="new Worker(null, _process.Object, _stateMachineFactoryFactory.Object)", span="72-72"];
m23_68 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="72-72"];
m23_74 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="81-81"];
m23_75 [cluster="lambda expression", file="WorkerFacts.cs", label="new Worker(_workerContext.Object, null, _stateMachineFactoryFactory.Object)", span="81-81"];
m23_76 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="81-81"];
m23_81 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="90-90"];
m23_82 [cluster="lambda expression", file="WorkerFacts.cs", label="new Worker(_workerContext.Object, _process.Object, null)", span="90-90"];
m23_83 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="90-90"];
m23_93 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="102-102"];
m23_96 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="103-103"];
m23_94 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetConnection()", span="102-102"];
m23_95 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="102-102"];
m23_97 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Dispose()", span="103-103"];
m23_98 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="103-103"];
m23_106 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="114-114"];
m23_109 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="117-117"];
m23_107 [cluster="lambda expression", file="WorkerFacts.cs", label="x.FetchNextJob(_workerContext.Queues, _context.CancellationTokenSource.Token)", span="114-114"];
m23_108 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="114-114"];
m23_110 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="117-117"];
m23_111 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="117-117"];
m23_120 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="124-124"];
m23_124 [cluster="lambda expression", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="130-130"];
m23_123 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="130-130"];
m23_126 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="132-132"];
m23_129 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="133-133"];
m23_121 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="124-124"];
m23_122 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="124-124"];
m23_125 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="130-130"];
m23_127 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="132-132"];
m23_128 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="132-132"];
m23_130 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="133-133"];
m23_131 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="133-133"];
m23_141 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="141-142"];
m23_144 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="146-146"];
m23_148 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="150-151"];
m23_142 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="141-142"];
m23_143 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="141-142"];
m23_145 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="146-146"];
m23_146 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="146-146"];
m23_149 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="150-151"];
m23_150 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="150-151"];
m23_156 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="170-174"];
m23_157 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.ServerId),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="170-174"];
m23_158 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="170-174"];
m23_159 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="172-172"];
m23_160 [cluster="lambda expression", file="WorkerFacts.cs", label="state.ServerId == _context.ServerId", span="172-172"];
m23_161 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="172-172"];
m23_167 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="184-190"];
m23_168 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>())", span="184-190"];
m23_169 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="184-190"];
m23_170 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="188-189"];
m23_171 [cluster="lambda expression", file="WorkerFacts.cs", label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="188-189"];
m23_172 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="188-189"];
m23_179 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="198-202"];
m23_182 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="212-212"];
m23_180 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<CancellationToken>())", span="198-202"];
m23_181 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="198-202"];
m23_183 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="212-212"];
m23_184 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="212-212"];
m23_190 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="223-225"];
m23_191 [cluster="lambda expression", color=red, community=1, file="WorkerFacts.cs", label="0: x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="223-225"];
m23_192 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="223-225"];
m23_200 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="232-232"];
m23_204 [cluster="lambda expression", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="238-238"];
m23_203 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="238-238"];
m23_206 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="242-242"];
m23_209 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="244-244"];
m23_201 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="232-232"];
m23_202 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="232-232"];
m23_205 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="238-238"];
m23_207 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="242-242"];
m23_208 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="242-242"];
m23_210 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="244-244"];
m23_211 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="244-244"];
m23_220 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="251-251"];
m23_224 [cluster="lambda expression", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="257-257"];
m23_223 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="257-257"];
m23_226 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="259-259"];
m23_229 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="260-260"];
m23_221 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="251-251"];
m23_222 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="251-251"];
m23_225 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="257-257"];
m23_227 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="259-259"];
m23_228 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="259-259"];
m23_230 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="260-260"];
m23_231 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="260-260"];
m23_237 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="270-274"];
m23_238 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>())", span="270-274"];
m23_239 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="270-274"];
m23_240 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="273-273"];
m23_241 [cluster="lambda expression", file="WorkerFacts.cs", label="states.Length == 1 && states[0] == ProcessingState.StateName", span="273-273"];
m23_242 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="273-273"];
m23_256 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="292-296"];
m23_259 [cluster="lambda expression", file="WorkerFacts.cs", label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="294-294"];
m23_252 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="283-283"];
m23_255 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="292-296"];
m23_253 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="283-283"];
m23_254 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="283-283"];
m23_257 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="292-296"];
m23_258 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="294-294"];
m23_260 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="294-294"];
m23_274 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="314-318"];
m23_277 [cluster="lambda expression", file="WorkerFacts.cs", label="state.Exception == exception && state.Reason == ''hello''", span="316-316"];
m23_270 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="305-305"];
m23_273 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="314-318"];
m23_271 [cluster="lambda expression", color=red, community=0, file="WorkerFacts.cs", label="0: x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="305-305"];
m23_272 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="305-305"];
m23_275 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="314-318"];
m23_276 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="316-316"];
m23_278 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="316-316"];
m23_287 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="325-325"];
m23_288 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetJobData(JobId)", span="325-325"];
m23_289 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="325-325"];
m23_291 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="334-338"];
m23_292 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="334-338"];
m23_69 [cluster="Worker.cstr", file="WorkerFacts.cs", label="Entry Worker.cstr", span=""];
m23_151 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="164-164"];
m23_152 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="166-166"];
m23_153 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="168-168"];
m23_154 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.ServerId),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="170-174"];
m23_155 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="164-164"];
m23_25 [cluster="Hangfire.Storage.JobData.JobData()", file="WorkerFacts.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m23_261 [cluster="Unk.Contains", file="WorkerFacts.cs", label="Entry Unk.Contains", span=""];
m23_92 [cluster="Unk.Verify", file="WorkerFacts.cs", label="Entry Unk.Verify", span=""];
m23_133 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="137-137"];
m23_134 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .InSequence()\r\n                .Returns(true)", span="140-144"];
m23_135 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", color=red, community=1, file="WorkerFacts.cs", label="0: _process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="146-147"];
m23_136 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .InSequence()\r\n                .Returns(true)", span="149-153"];
m23_137 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="155-155"];
m23_138 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="158-158"];
m23_139 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="137-137"];
m23_100 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="107-107"];
m23_101 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="109-109"];
m23_102 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="worker.Execute(_context.Object)", span="111-111"];
m23_103 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="_connection.Verify(\r\n                x => x.FetchNextJob(_workerContext.Queues, _context.CancellationTokenSource.Token),\r\n                Times.Once)", span="113-115"];
m23_104 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="117-117"];
m23_105 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="107-107"];
m23_285 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="WorkerFacts.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32"];
m23_27 [cluster="Mock<IStateMachine>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m23_193 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="229-229"];
m23_194 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", color=red, community=1, file="WorkerFacts.cs", label="0: _process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<OperationCanceledException>()", span="232-233"];
m23_195 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="235-235"];
m23_196 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Assert.Throws<OperationCanceledException>(() => worker.Execute(_context.Object))", span="238-238"];
m23_197 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()),\r\n                Times.Never)", span="241-243"];
m23_198 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="244-244"];
m23_199 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="229-229"];
m23_52 [cluster="Unk.Create", file="WorkerFacts.cs", label="Entry Unk.Create", span=""];
m23_23 [cluster="Unk.Returns", file="WorkerFacts.cs", label="Entry Unk.Returns", span=""];
m23_48 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="346-346"];
m23_295 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="346-346"];
m23_91 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="WorkerFacts.cs", label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="59-59"];
m23_21 [cluster="Mock<IStorageConnection>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m23_44 [cluster="Unk.GetJobData", file="WorkerFacts.cs", label="Entry Unk.GetJobData", span=""];
m23_26 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m23_19 [cluster="Mock<IJobPerformanceProcess>.cstr", file="WorkerFacts.cs", label="Entry Mock<IJobPerformanceProcess>.cstr", span=""];
m23_70 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="78-78"];
m23_71 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_workerContext.Object, null, _stateMachineFactoryFactory.Object))", span="80-81"];
m23_72 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs", label="Assert.Equal(''process'', exception.ParamName)", span="83-83"];
m23_73 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="78-78"];
m23_296 [file="WorkerFacts.cs", label="Hangfire.Core.Tests.Server.WorkerFacts", span=""];
m23_297 [file="WorkerFacts.cs", label=worker, span=""];
m23_298 [file="WorkerFacts.cs", label=worker, span=""];
m23_299 [file="WorkerFacts.cs", label=worker, span=""];
m23_300 [file="WorkerFacts.cs", label=exception, span=""];
m23_301 [file="WorkerFacts.cs", label=exception, span=""];
n94 -> n9  [color=red, key=1, label="Hangfire.Server.DefaultJobPerformanceProcess", style=dashed];
n94 -> n10  [color=darkseagreen4, key=1, label="Hangfire.Server.DefaultJobPerformanceProcess", style=dashed];
n94 -> n18  [color=darkseagreen4, key=1, label="Hangfire.Server.DefaultJobPerformanceProcess", style=dashed];
n94 -> n19  [color=red, key=1, label="Hangfire.Server.DefaultJobPerformanceProcess", style=dashed];
n94 -> n33  [color=darkseagreen4, key=1, label="Hangfire.Server.DefaultJobPerformanceProcess", style=dashed];
n94 -> n39  [color=red, key=1, label="Hangfire.Server.DefaultJobPerformanceProcess", style=dashed];
n94 -> n49  [color=red, key=1, label="Hangfire.Server.DefaultJobPerformanceProcess", style=dashed];
n95 -> n49  [color=red, key=1, label="Hangfire.Server.PerformContext", style=dashed];
n95 -> n50  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
n96 -> n49  [color=red, key=1, label="Hangfire.Server.IJobPerformer", style=dashed];
n97 -> n57  [color=darkseagreen4, key=1, label=preContext, style=dashed];
n98 -> n57  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Server.PerformedContext>", style=dashed];
n99 -> n57  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerFilter", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [color=red, key=0, style=solid];
n4 -> n7  [color=darkseagreen4, key=1, label="Hangfire.Common.IJobFilterProvider", style=dashed];
n4 -> n9  [color=red, key=1, label="Hangfire.JobActivator", style=dashed];
n4 -> n10  [color=darkseagreen4, key=1, label="Hangfire.Common.IJobFilterProvider", style=dashed];
n5 -> n6  [color=red, key=0, style=solid];
n5 -> n7  [color=red, key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [color=red, key=0, style=solid];
n9 -> n10  [color=red, key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n6 -> n11  [color=red, key=0, style=solid];
n6 -> n12  [color=red, key=2, style=dotted];
n8 -> n11  [key=0, style=solid];
n8 -> n12  [key=2, style=dotted];
n11 -> n4  [color=blue, key=0, style=bold];
n13 -> n14  [key=0, style=solid];
n13 -> n16  [color=red, key=1, label="Hangfire.Server.IJobPerformer", style=dashed];
n13 -> n18  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
n13 -> n19  [color=red, key=1, label="Hangfire.Server.PerformContext", style=dashed];
n13 -> n23  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
n13 -> n30  [color=darkorchid, key=3, label="method methodReturn object Run", style=bold];
n13 -> n27  [color=darkorchid, key=3, label="method methodReturn object Run", style=bold];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [color=red, key=0, style=solid];
n16 -> n17  [color=red, key=0, style=solid];
n16 -> n18  [color=red, key=0, style=solid];
n18 -> n19  [color=red, key=0, style=solid];
n18 -> n29  [key=2, style=dotted];
n18 -> n24  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
n19 -> n28  [color=red, key=0, style=solid];
n19 -> n30  [color=red, key=2, style=dotted];
n23 -> n24  [key=0, style=solid];
n23 -> n31  [key=2, style=dotted];
n23 -> n25  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
n15 -> n28  [key=0, style=solid];
n15 -> n12  [key=2, style=dotted];
n17 -> n28  [color=red, key=0, style=solid];
n17 -> n12  [color=red, key=2, style=dotted];
n29 -> n33  [key=0, style=solid];
n24 -> n25  [key=0, style=solid];
n24 -> n32  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n21 -> n28  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=0, style=solid];
n32 -> n90  [key=0, style=solid];
n32 -> n91  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerExceptionContext", style=dashed];
n26 -> n28  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n28 -> n13  [color=blue, key=0, style=bold];
n30 -> n37  [key=0, style=solid];
n30 -> n38  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
n30 -> n39  [color=red, key=1, label="Hangfire.Server.PerformContext", style=dashed];
n30 -> n49  [color=red, key=1, label="Hangfire.Server.PerformContext", style=dashed];
n30 -> n50  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformContext", style=dashed];
n30 -> n40  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IServerFilter>", style=dashed];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=2, style=dotted];
n33 -> n36  [key=2, style=dotted];
n34 -> n29  [color=blue, key=0, style=bold];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [color=red, key=1, label=result, style=dashed];
n37 -> n27  [color=darkorchid, key=3, label="Local variable object result", style=bold];
n38 -> n39  [color=red, key=0, style=solid];
n38 -> n44  [key=2, style=dotted];
n38 -> n40  [color=darkseagreen4, key=1, label=preContext, style=dashed];
n38 -> n57  [color=darkseagreen4, key=1, label=preContext, style=dashed];
n39 -> n40  [color=red, key=0, style=solid];
n39 -> n39  [color=red, key=3, label="Local variable System.Func<Hangfire.Server.PerformedContext> continuation", style=bold];
n49 -> n50  [color=red, key=0, style=solid];
n49 -> n52  [color=red, key=2, style=dotted];
n49 -> n39  [color=red, key=1, label=result, style=dashed];
n49 -> n42  [color=red, key=1, label=result, style=dashed];
n49 -> n51  [color=red, key=1, label=result, style=dashed];
n50 -> n51  [key=0, style=solid];
n50 -> n53  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n45  [key=2, style=dotted];
n40 -> n46  [key=2, style=dotted];
n40 -> n54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n47  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n40  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Server.PerformedContext>", style=dashed];
n54 -> n57  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Server.PerformedContext>", style=dashed];
n42 -> n43  [key=0, style=solid];
n43 -> n30  [color=blue, key=0, style=bold];
n48 -> n49  [color=red, key=0, style=solid];
n51 -> n48  [color=blue, key=0, style=bold];
n55 -> n54  [color=blue, key=0, style=bold];
n55 -> n48  [color=green, key=0, style=bold];
n56 -> n57  [key=0, style=solid];
n58 -> n56  [color=blue, key=0, style=bold];
n59 -> n60  [key=0, style=solid];
n59 -> n65  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformingContext", style=dashed];
n59 -> n66  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformingContext", style=dashed];
n59 -> n69  [color=darkseagreen4, key=1, label="System.Func<Hangfire.Server.PerformedContext>", style=dashed];
n59 -> n72  [color=darkseagreen4, key=1, label="Hangfire.Server.PerformingContext", style=dashed];
n59 -> n73  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerFilter", style=dashed];
n59 -> n79  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerFilter", style=dashed];
n59 -> n68  [color=darkorchid, key=3, label="method methodReturn Hangfire.Server.PerformedContext InvokePerformFilter", style=bold];
n60 -> n61  [key=0, style=solid];
n60 -> n63  [key=0, style=solid];
n60 -> n65  [key=0, style=solid];
n60 -> n86  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n67  [key=0, style=solid];
n66 -> n85  [key=0, style=solid];
n66 -> n53  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n78  [key=0, style=solid];
n69 -> n88  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n53  [key=2, style=dotted];
n72 -> n76  [color=darkseagreen4, key=1, label=postContext, style=dashed];
n72 -> n79  [color=darkseagreen4, key=1, label=postContext, style=dashed];
n72 -> n84  [color=darkseagreen4, key=1, label=postContext, style=dashed];
n73 -> n74  [key=0, style=solid];
n73 -> n76  [key=0, style=solid];
n73 -> n89  [key=2, style=dotted];
n79 -> n80  [key=0, style=solid];
n79 -> n82  [key=0, style=solid];
n79 -> n84  [key=0, style=solid];
n79 -> n89  [key=2, style=dotted];
n61 -> n62  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n86 -> n35  [color=darkorchid, key=3, label="Field variable Hangfire.JobActivator _activator", style=bold];
n62 -> n85  [key=0, style=solid];
n64 -> n85  [key=0, style=solid];
n64 -> n87  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n67  [color=darkorchid, key=3, label="Local variable bool wasError", style=bold];
n68 -> n69  [key=0, style=solid];
n70 -> n71  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n78 -> n84  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n78  [color=darkseagreen4, key=1, label=wasError, style=dashed];
n76 -> n77  [key=0, style=solid];
n76 -> n78  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n75 -> n85  [key=0, style=solid];
n75 -> n87  [key=2, style=dotted];
n77 -> n85  [key=0, style=solid];
n80 -> n81  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n81 -> n85  [key=0, style=solid];
n83 -> n85  [key=0, style=solid];
n83 -> n87  [key=2, style=dotted];
n85 -> n59  [color=blue, key=0, style=bold];
n90 -> n91  [key=0, style=solid];
n90 -> n92  [key=0, style=solid];
n90 -> n45  [key=2, style=dotted];
n91 -> n90  [key=0, style=solid];
n91 -> n93  [key=2, style=dotted];
n92 -> n32  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Storage.Monitoring.EnqueuedJobDto", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_16  [color=darkorchid, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_8  [key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_13  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_9  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_31  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_45  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_56  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_65  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_77  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_22 -> m1_86  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=2, style=dotted];
m1_24 -> m1_22  [color=blue, key=0, style=bold];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_39  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_22  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_40  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_41  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_42  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_43  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_26  [key=2, style=dotted];
m1_38 -> m1_30  [color=blue, key=0, style=bold];
m1_85 -> m1_86  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_39  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_22  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_40  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_41  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_42  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_43  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_26  [key=2, style=dotted];
m1_93 -> m1_85  [color=blue, key=0, style=bold];
m1_76 -> m1_77  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_39  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_22  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_40  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_41  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_42  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_43  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_26  [key=2, style=dotted];
m1_84 -> m1_76  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_0  [key=2, style=dotted];
m1_17 -> m1_14  [color=blue, key=0, style=bold];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_39  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_22  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_40  [key=2, style=dotted];
m1_47 -> m1_47  [color=darkorchid, key=3, label="Local variable string insertParameterSql", style=bold];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_41  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_42  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_43  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_54  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_26  [key=2, style=dotted];
m1_52 -> m1_56  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.JobData GetJobData", style=bold];
m1_53 -> m1_44  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=2, style=dotted];
m1_28 -> m1_26  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_39  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_22  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_40  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_41  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_41  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_42  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_43  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_42  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_43  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_26  [key=2, style=dotted];
m1_75 -> m1_64  [color=blue, key=0, style=bold];
m1_55 -> m1_56  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_39  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_22  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_40  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_41  [key=2, style=dotted];
m1_59 -> m1_56  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m1_59 -> m1_62  [color=darkorchid, key=3, label="Local variable HangFire.Common.JobLoadException loadException", style=bold];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_42  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_43  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_26  [key=2, style=dotted];
m1_63 -> m1_55  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_94 -> m1_32  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_37  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_46  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_52  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_57  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_62  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_66  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_74  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_78  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_83  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_87  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m1_94 -> m1_92  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m2_1 -> n52  [color=blue, key=0, style=bold];
m3_18 -> m3_76  [key=0, style=solid];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_78  [key=0, style=solid];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_80  [key=0, style=solid];
m3_78 -> m3_93  [key=2, style=dotted];
m3_79 -> m3_92  [key=0, style=solid];
m3_79 -> m3_94  [key=2, style=dotted];
m3_79 -> m3_95  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_82  [key=0, style=solid];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_84  [key=0, style=solid];
m3_82 -> m3_93  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_96  [key=2, style=dotted];
m3_84 -> m3_87  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_87  [key=0, style=solid];
m3_77 -> m3_92  [key=0, style=solid];
m3_77 -> m3_63  [key=2, style=dotted];
m3_81 -> m3_92  [key=0, style=solid];
m3_81 -> m3_63  [key=2, style=dotted];
m3_83 -> m3_92  [key=0, style=solid];
m3_83 -> m3_63  [key=2, style=dotted];
m3_87 -> m3_92  [key=0, style=solid];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_90  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m3_86 -> m3_92  [key=0, style=solid];
m3_86 -> m3_94  [key=2, style=dotted];
m3_89 -> m3_92  [key=0, style=solid];
m3_89 -> m3_63  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_63  [key=2, style=dotted];
m3_90 -> m3_87  [key=0, style=solid];
m3_90 -> m3_91  [key=0, style=solid];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_90  [key=0, style=solid];
m3_92 -> m3_18  [color=blue, key=0, style=bold];
m3_6 -> n12  [key=2, style=dotted];
m3_6 -> m3_15  [key=0, style=solid];
m3_33 -> m3_19  [color=darkorchid, key=3, label="Parameter variable Hangfire.IJobCancellationToken cancellationToken", style=bold];
m3_33 -> m3_107  [key=0, style=solid];
m3_33 -> m3_115  [color=darkseagreen4, key=1, label="Hangfire.IJobCancellationToken", style=dashed];
m3_113 -> m3_33  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_112  [color=darkorchid, key=3, label="Local variable object value", style=bold];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_96  [key=2, style=dotted];
m3_107 -> m3_110  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_107 -> m3_111  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m3_115 -> m3_122  [key=0, style=solid];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_128  [key=2, style=dotted];
m3_108 -> m3_122  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_108 -> m3_124  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_116  [color=darkseagreen4, key=1, label=argument, style=dashed];
m3_112 -> m3_119  [color=darkseagreen4, key=1, label=argument, style=dashed];
m3_112 -> m3_121  [color=darkseagreen4, key=1, label=argument, style=dashed];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_116  [key=0, style=solid];
m3_114 -> m3_93  [key=2, style=dotted];
m3_124 -> m3_127  [key=0, style=solid];
m3_124 -> m3_133  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_106  [key=2, style=dotted];
m3_110 -> m3_124  [key=0, style=solid];
m3_110 -> m3_110  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m3_110 -> m3_111  [key=0, style=solid];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_114  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m3_111 -> m3_116  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m3_111 -> m3_118  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m3_111 -> m3_120  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_132  [key=2, style=dotted];
m3_109 -> m3_112  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_111  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_109 -> m3_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_116 -> m3_122  [key=0, style=solid];
m3_116 -> m3_117  [key=0, style=solid];
m3_116 -> m3_129  [key=2, style=dotted];
m3_119 -> m3_122  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_131  [key=2, style=dotted];
m3_125 -> m3_126  [key=0, style=solid];
m3_123 -> m3_110  [key=0, style=solid];
m3_123 -> m3_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_120  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_130  [key=2, style=dotted];
m3_117 -> m3_118  [key=0, style=solid];
m3_127 -> m3_33  [color=blue, key=0, style=bold];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=2, style=dotted];
m3_36 -> m3_39  [key=2, style=dotted];
m3_37 -> m3_35  [color=blue, key=0, style=bold];
m3_32 -> m3_19  [color=darkorchid, key=3, label="Parameter variable Hangfire.JobActivator activator", style=bold];
m3_32 -> m3_97  [key=0, style=solid];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_104  [key=2, style=dotted];
m3_97 -> m3_100  [color=darkseagreen4, key=1, label=instance, style=dashed];
m3_99 -> m3_103  [key=0, style=solid];
m3_99 -> m3_65  [key=2, style=dotted];
m3_99 -> m3_105  [key=2, style=dotted];
m3_100 -> m3_103  [key=0, style=solid];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_106  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_100  [key=0, style=solid];
m3_101 -> m3_102  [key=0, style=solid];
m3_103 -> m3_32  [color=blue, key=0, style=bold];
m3_2 -> m3_11  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_2 -> m3_12  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m3_2 -> m3_13  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_5  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m3_2 -> m3_7  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_2 -> m3_9  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m3_2 -> m3_6  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_18  [key=2, style=dotted];
m3_9 -> m3_11  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_4 -> n12  [key=2, style=dotted];
m3_4 -> m3_15  [key=0, style=solid];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_8 -> n12  [key=2, style=dotted];
m3_8 -> m3_15  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=0, style=solid];
m3_7 -> m3_9  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_7 -> m3_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_7 -> m3_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m3_10 -> m3_15  [key=0, style=solid];
m3_10 -> m3_17  [key=2, style=dotted];
m3_15 -> m3_2  [color=blue, key=0, style=bold];
m3_19 -> m3_25  [color=green, key=3, label="method methodReturn object Perform", style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_22  [color=darkseagreen4, key=1, label="Hangfire.IJobCancellationToken", style=dashed];
m3_19 -> m3_27  [color=darkseagreen4, key=1, label="Hangfire.JobActivator", style=dashed];
m3_19 -> m3_28  [color=darkseagreen4, key=1, label="Hangfire.IJobCancellationToken", style=dashed];
m3_25 -> m3_26  [color=green, key=0, style=solid];
m3_25 -> m3_34  [color=green, key=3, label="Local variable object result", style=bold];
m3_24 -> m3_25  [color=green, key=0, style=solid];
m3_24 -> m3_24  [color=darkorchid, key=3, label="Local variable object instance", style=bold];
m3_24 -> m3_29  [color=darkseagreen4, key=1, label=instance, style=dashed];
m3_24 -> m3_32  [color=darkorchid, key=3, label="Local variable object instance", style=bold];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_28  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=0, style=solid];
m3_22 -> m3_24  [key=0, style=solid];
m3_22 -> m3_23  [key=0, style=solid];
m3_27 -> m3_32  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_29  [color=darkseagreen4, key=1, label=instance, style=dashed];
m3_28 -> m3_33  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_29 -> m3_34  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_21 -> m3_31  [key=0, style=solid];
m3_21 -> n12  [key=2, style=dotted];
m3_23 -> m3_31  [key=0, style=solid];
m3_23 -> n12  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_19  [color=blue, key=0, style=bold];
m3_64 -> m3_167  [key=0, style=solid];
m3_64 -> m3_168  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m3_64 -> m3_171  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m3_167 -> m3_161  [key=2, style=dotted];
m3_167 -> m3_168  [key=0, style=solid];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_170  [color=darkseagreen4, key=1, label=constantExpression, style=dashed];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_173  [key=2, style=dotted];
m3_169 -> m3_171  [key=0, style=solid];
m3_169 -> m3_170  [key=0, style=solid];
m3_170 -> m3_172  [key=0, style=solid];
m3_172 -> m3_64  [color=blue, key=0, style=bold];
m3_34 -> m3_24  [color=darkorchid, key=3, label="Parameter variable object instance", style=bold];
m3_34 -> m3_134  [key=0, style=solid];
m3_34 -> m3_28  [color=darkorchid, key=3, label="Parameter variable object[] deserializedArguments", style=bold];
m3_134 -> m3_139  [key=0, style=solid];
m3_134 -> m3_140  [key=2, style=dotted];
m3_137 -> m3_139  [key=0, style=solid];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_106  [key=2, style=dotted];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_138  [key=0, style=solid];
m3_135 -> m3_136  [key=0, style=solid];
m3_139 -> m3_34  [color=blue, key=0, style=bold];
m3_67 -> m3_150  [color=darkseagreen4, key=1, label="System.Linq.Expressions.MethodCallExpression", style=dashed];
m3_67 -> m3_149  [key=0, style=solid];
m3_67 -> m3_51  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.MethodCallExpression callExpression", style=bold];
m3_67 -> m3_71  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.MethodCallExpression callExpression", style=bold];
m3_153 -> m3_24  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_158  [color=darkseagreen4, key=1, label=value, style=dashed];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_159  [key=0, style=solid];
m3_152 -> m3_154  [color=darkseagreen4, key=1, label=argument, style=dashed];
m3_152 -> m3_155  [color=darkseagreen4, key=1, label=argument, style=dashed];
m3_152 -> m3_156  [color=darkseagreen4, key=1, label=argument, style=dashed];
m3_152 -> m3_157  [color=darkseagreen4, key=1, label=argument, style=dashed];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_158  [key=0, style=solid];
m3_158 -> m3_152  [key=0, style=solid];
m3_158 -> m3_132  [key=2, style=dotted];
m3_150 -> m3_152  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_162  [key=2, style=dotted];
m3_150 -> m3_163  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_158  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m3_151 -> m3_164  [key=2, style=dotted];
m3_151 -> m3_159  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m3_159 -> m3_160  [key=0, style=solid];
m3_159 -> m3_133  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_157  [key=0, style=solid];
m3_156 -> m3_158  [key=0, style=solid];
m3_156 -> m3_165  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_166  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_161  [key=2, style=dotted];
m3_160 -> m3_67  [color=blue, key=0, style=bold];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_71  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m3_70 -> n12  [key=2, style=dotted];
m3_70 -> m3_75  [key=0, style=solid];
m3_74 -> m3_2  [key=2, style=dotted];
m3_74 -> m3_67  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_71  [key=0, style=solid];
m3_71 -> m3_74  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m3_71 -> m3_72  [key=0, style=solid];
m3_72 -> m3_74  [key=0, style=solid];
m3_72 -> m3_73  [key=0, style=solid];
m3_73 -> m3_63  [key=2, style=dotted];
m3_73 -> m3_75  [key=0, style=solid];
m3_75 -> m3_68  [color=blue, key=0, style=bold];
m3_39 -> m3_44  [key=0, style=solid];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_46  [key=2, style=dotted];
m3_44 -> m3_47  [key=2, style=dotted];
m3_45 -> m3_39  [color=blue, key=0, style=bold];
m3_40 -> m3_41  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_43  [key=2, style=dotted];
m3_41 -> m3_39  [key=2, style=dotted];
m3_42 -> m3_40  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_5  [key=2, style=dotted];
m3_141 -> m3_24  [color=darkorchid, key=3, label="Parameter variable object instance", style=bold];
m3_141 -> m3_142  [key=0, style=solid];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_144  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m3_143 -> m3_147  [key=0, style=solid];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_145  [key=0, style=solid];
m3_144 -> m3_147  [key=0, style=solid];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_148  [key=2, style=dotted];
m3_146 -> m3_147  [key=0, style=solid];
m3_146 -> m3_106  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_147 -> m3_141  [color=blue, key=0, style=bold];
m3_174 -> m3_175  [key=0, style=solid];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_177  [key=2, style=dotted];
m3_175 -> m3_95  [key=2, style=dotted];
m3_176 -> m3_174  [color=blue, key=0, style=bold];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_51  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m3_50 -> n12  [key=2, style=dotted];
m3_50 -> m3_62  [key=0, style=solid];
m3_61 -> m3_2  [key=2, style=dotted];
m3_61 -> m3_67  [key=2, style=dotted];
m3_61 -> m3_62  [key=0, style=solid];
m3_58 -> m3_65  [key=2, style=dotted];
m3_58 -> m3_62  [key=0, style=solid];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_51  [key=0, style=solid];
m3_51 -> m3_61  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_55  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m3_51 -> m3_56  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m3_51 -> m3_60  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m3_60 -> m3_61  [key=0, style=solid];
m3_59 -> m3_61  [key=0, style=solid];
m3_59 -> m3_66  [key=2, style=dotted];
m3_53 -> m3_63  [key=2, style=dotted];
m3_53 -> m3_62  [key=0, style=solid];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_59  [key=0, style=solid];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_54  [key=0, style=solid];
m3_55 -> m3_60  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_56 -> m3_59  [color=darkseagreen4, key=1, label=objectValue, style=dashed];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_64  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_62 -> m3_48  [color=blue, key=0, style=bold];
m3_178 -> m3_26  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_27  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_28  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_29  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_11  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_12  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_13  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_14  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_36  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_41  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_76  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_78  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_79  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_80  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_82  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_84  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_85  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_97  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_99  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_107  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_108  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_112  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_134  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m3_178 -> m3_175  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m7_189 -> m7_251  [color=green, key=0, style=solid];
m7_251 -> m7_252  [color=green, key=0, style=solid];
m7_251 -> m7_253  [color=green, key=2, style=dotted];
m7_252 -> m7_189  [color=blue, key=0, style=bold];
m7_42 -> m7_220  [color=green, key=0, style=solid];
m7_220 -> m7_221  [color=green, key=0, style=solid];
m7_221 -> m7_42  [color=blue, key=0, style=bold];
m7_152 -> m7_153  [color=green, key=0, style=solid];
m7_153 -> m7_154  [color=green, key=0, style=solid];
m7_153 -> m7_155  [color=green, key=1, label=type, style=dashed];
m7_154 -> m7_155  [color=green, key=0, style=solid];
m7_154 -> m7_78  [color=green, key=2, style=dotted];
m7_155 -> m7_156  [color=green, key=0, style=solid];
m7_155 -> m7_79  [color=green, key=2, style=dotted];
m7_156 -> m7_157  [color=green, key=0, style=solid];
m7_156 -> m7_24  [color=green, key=2, style=dotted];
m7_156 -> m7_162  [color=green, key=1, label=process, style=dashed];
m7_157 -> m7_158  [color=green, key=0, style=solid];
m7_157 -> m7_10  [color=green, key=2, style=dotted];
m7_157 -> m7_161  [color=green, key=1, label="lambda expression", style=dashed];
m7_158 -> m7_159  [color=green, key=0, style=solid];
m7_158 -> m7_160  [color=green, key=2, style=dotted];
m7_159 -> m7_152  [color=blue, key=0, style=bold];
m7_64 -> m7_56  [color=green, key=3, label="Parameter variable int intArg", style=bold];
m7_64 -> m7_247  [color=green, key=0, style=solid];
m7_64 -> m7_248  [color=green, key=1, label=string, style=dashed];
m7_64 -> m7_249  [color=green, key=1, label=int, style=dashed];
m7_247 -> m7_248  [color=green, key=0, style=solid];
m7_248 -> m7_249  [color=green, key=0, style=solid];
m7_248 -> m7_11  [color=green, key=2, style=dotted];
m7_249 -> m7_250  [color=green, key=0, style=solid];
m7_249 -> m7_11  [color=green, key=2, style=dotted];
m7_250 -> m7_64  [color=blue, key=0, style=bold];
m7_179 -> m7_180  [color=green, key=0, style=solid];
m7_180 -> m7_181  [color=green, key=0, style=solid];
m7_180 -> m7_23  [color=green, key=2, style=dotted];
m7_180 -> m7_186  [color=green, key=1, label="lambda expression", style=dashed];
m7_181 -> m7_182  [color=green, key=0, style=solid];
m7_181 -> m7_24  [color=green, key=2, style=dotted];
m7_181 -> m7_191  [color=green, key=1, label=process, style=dashed];
m7_182 -> m7_183  [color=green, key=0, style=solid];
m7_182 -> m7_10  [color=green, key=2, style=dotted];
m7_182 -> m7_190  [color=green, key=1, label="lambda expression", style=dashed];
m7_182 -> m7_184  [color=green, key=1, label=thrownException, style=dashed];
m7_183 -> m7_184  [color=green, key=0, style=solid];
m7_183 -> m7_10  [color=green, key=2, style=dotted];
m7_184 -> m7_185  [color=green, key=0, style=solid];
m7_184 -> m7_11  [color=green, key=2, style=dotted];
m7_185 -> m7_179  [color=blue, key=0, style=bold];
m7_53 -> m7_222  [color=green, key=0, style=solid];
m7_222 -> m7_223  [color=green, key=0, style=solid];
m7_223 -> m7_53  [color=blue, key=0, style=bold];
m7_112 -> m7_104  [color=green, key=3, label="Parameter variable string[] argument", style=bold];
m7_112 -> m7_235  [color=green, key=0, style=solid];
m7_112 -> m7_236  [color=green, key=1, label="string[]", style=dashed];
m7_235 -> m7_236  [color=green, key=0, style=solid];
m7_236 -> m7_237  [color=green, key=0, style=solid];
m7_236 -> m7_238  [color=green, key=2, style=dotted];
m7_237 -> m7_112  [color=blue, key=0, style=bold];
m7_232 -> m7_233  [color=green, key=0, style=solid];
m7_233 -> m7_234  [color=green, key=0, style=solid];
m7_234 -> m7_232  [color=blue, key=0, style=bold];
m7_43 -> m7_44  [color=green, key=0, style=solid];
m7_44 -> m7_45  [color=green, key=0, style=solid];
m7_45 -> m7_46  [color=green, key=0, style=solid];
m7_45 -> m7_38  [color=green, key=2, style=dotted];
m7_45 -> m7_50  [color=green, key=1, label="lambda expression", style=dashed];
m7_46 -> m7_47  [color=green, key=0, style=solid];
m7_46 -> m7_24  [color=green, key=2, style=dotted];
m7_47 -> m7_48  [color=green, key=0, style=solid];
m7_47 -> m7_25  [color=green, key=2, style=dotted];
m7_48 -> m7_49  [color=green, key=0, style=solid];
m7_48 -> m7_26  [color=green, key=2, style=dotted];
m7_49 -> m7_43  [color=blue, key=0, style=bold];
m7_202 -> m7_239  [color=green, key=0, style=solid];
m7_239 -> m7_240  [color=green, key=0, style=solid];
m7_239 -> m7_241  [color=green, key=2, style=dotted];
m7_240 -> m7_202  [color=blue, key=0, style=bold];
m7_16 -> m7_17  [color=green, key=0, style=solid];
m7_17 -> m7_18  [color=green, key=0, style=solid];
m7_18 -> m7_19  [color=green, key=0, style=solid];
m7_18 -> m7_23  [color=green, key=2, style=dotted];
m7_18 -> m7_27  [color=green, key=1, label="lambda expression", style=dashed];
m7_19 -> m7_20  [color=green, key=0, style=solid];
m7_19 -> m7_24  [color=green, key=2, style=dotted];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_20 -> m7_25  [color=green, key=2, style=dotted];
m7_21 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_26  [color=green, key=2, style=dotted];
m7_22 -> m7_16  [color=blue, key=0, style=bold];
m7_229 -> m7_230  [color=green, key=0, style=solid];
m7_230 -> m7_231  [color=green, key=0, style=solid];
m7_230 -> m7_121  [color=green, key=2, style=dotted];
m7_231 -> m7_229  [color=blue, key=0, style=bold];
m7_6 -> m7_7  [color=green, key=0, style=solid];
m7_7 -> m7_8  [color=green, key=0, style=solid];
m7_7 -> m7_10  [color=green, key=2, style=dotted];
m7_7 -> m7_12  [color=green, key=1, label="lambda expression", style=dashed];
m7_8 -> m7_9  [color=green, key=0, style=solid];
m7_8 -> m7_11  [color=green, key=2, style=dotted];
m7_9 -> m7_6  [color=blue, key=0, style=bold];
m7_135 -> m7_136  [color=green, key=0, style=solid];
m7_136 -> m7_137  [color=green, key=0, style=solid];
m7_136 -> m7_122  [color=green, key=2, style=dotted];
m7_136 -> m7_142  [color=green, key=2, style=dotted];
m7_136 -> m7_143  [color=green, key=1, label="lambda expression", style=dashed];
m7_137 -> m7_138  [color=green, key=0, style=solid];
m7_137 -> m7_23  [color=green, key=2, style=dotted];
m7_137 -> m7_146  [color=green, key=1, label="lambda expression", style=dashed];
m7_138 -> m7_139  [color=green, key=0, style=solid];
m7_138 -> m7_24  [color=green, key=2, style=dotted];
m7_138 -> m7_150  [color=green, key=1, label=process, style=dashed];
m7_139 -> m7_140  [color=green, key=0, style=solid];
m7_139 -> m7_10  [color=green, key=2, style=dotted];
m7_139 -> m7_149  [color=green, key=1, label="lambda expression", style=dashed];
m7_140 -> m7_141  [color=green, key=0, style=solid];
m7_140 -> m7_10  [color=green, key=2, style=dotted];
m7_141 -> m7_135  [color=blue, key=0, style=bold];
m7_164 -> m7_165  [color=green, key=0, style=solid];
m7_165 -> m7_166  [color=green, key=0, style=solid];
m7_166 -> m7_167  [color=green, key=0, style=solid];
m7_166 -> m7_38  [color=green, key=2, style=dotted];
m7_166 -> m7_172  [color=green, key=1, label="lambda expression", style=dashed];
m7_167 -> m7_168  [color=green, key=0, style=solid];
m7_167 -> m7_24  [color=green, key=2, style=dotted];
m7_167 -> m7_177  [color=green, key=1, label=process, style=dashed];
m7_168 -> m7_169  [color=green, key=0, style=solid];
m7_168 -> m7_10  [color=green, key=2, style=dotted];
m7_168 -> m7_176  [color=green, key=1, label="lambda expression", style=dashed];
m7_168 -> m7_170  [color=green, key=1, label=exception, style=dashed];
m7_169 -> m7_170  [color=green, key=0, style=solid];
m7_169 -> m7_26  [color=green, key=2, style=dotted];
m7_170 -> m7_171  [color=green, key=0, style=solid];
m7_170 -> m7_160  [color=green, key=2, style=dotted];
m7_171 -> m7_164  [color=blue, key=0, style=bold];
m7_24 -> m7_254  [key=0, style=solid];
m7_254 -> m7_255  [key=0, style=solid];
m7_254 -> m7_256  [key=2, style=dotted];
m7_255 -> m7_24  [color=blue, key=0, style=bold];
m7_80 -> m7_81  [color=green, key=0, style=solid];
m7_81 -> m7_82  [color=green, key=0, style=solid];
m7_82 -> m7_83  [color=green, key=0, style=solid];
m7_82 -> m7_90  [color=green, key=2, style=dotted];
m7_82 -> m7_85  [color=green, key=1, label=convertedDate, style=dashed];
m7_83 -> m7_84  [color=green, key=0, style=solid];
m7_83 -> m7_85  [color=green, key=1, label=type, style=dashed];
m7_85 -> m7_86  [color=green, key=0, style=solid];
m7_85 -> m7_79  [color=green, key=2, style=dotted];
m7_84 -> m7_85  [color=green, key=0, style=solid];
m7_84 -> m7_78  [color=green, key=2, style=dotted];
m7_86 -> m7_87  [color=green, key=0, style=solid];
m7_86 -> m7_24  [color=green, key=2, style=dotted];
m7_87 -> m7_88  [color=green, key=0, style=solid];
m7_87 -> m7_25  [color=green, key=2, style=dotted];
m7_88 -> m7_89  [color=green, key=0, style=solid];
m7_88 -> m7_26  [color=green, key=2, style=dotted];
m7_89 -> m7_80  [color=blue, key=0, style=bold];
m7_101 -> m7_242  [color=green, key=0, style=solid];
m7_101 -> m7_243  [color=green, key=1, label="System.DateTime", style=dashed];
m7_242 -> m7_243  [color=green, key=0, style=solid];
m7_243 -> m7_244  [color=green, key=0, style=solid];
m7_243 -> m7_11  [color=green, key=2, style=dotted];
m7_244 -> m7_101  [color=blue, key=0, style=bold];
m7_175 -> m7_227  [color=green, key=0, style=solid];
m7_227 -> m7_228  [color=green, key=0, style=solid];
m7_228 -> m7_175  [color=blue, key=0, style=bold];
m7_31 -> m7_32  [color=green, key=0, style=solid];
m7_32 -> m7_33  [color=green, key=0, style=solid];
m7_33 -> m7_34  [color=green, key=0, style=solid];
m7_33 -> m7_38  [color=green, key=2, style=dotted];
m7_33 -> m7_39  [color=green, key=1, label="lambda expression", style=dashed];
m7_34 -> m7_35  [color=green, key=0, style=solid];
m7_34 -> m7_24  [color=green, key=2, style=dotted];
m7_35 -> m7_36  [color=green, key=0, style=solid];
m7_35 -> m7_25  [color=green, key=2, style=dotted];
m7_36 -> m7_37  [color=green, key=0, style=solid];
m7_36 -> m7_26  [color=green, key=2, style=dotted];
m7_37 -> m7_31  [color=blue, key=0, style=bold];
m7_193 -> m7_194  [color=green, key=0, style=solid];
m7_194 -> m7_195  [color=green, key=0, style=solid];
m7_194 -> m7_23  [color=green, key=2, style=dotted];
m7_194 -> m7_199  [color=green, key=1, label="lambda expression", style=dashed];
m7_195 -> m7_196  [color=green, key=0, style=solid];
m7_195 -> m7_122  [color=green, key=2, style=dotted];
m7_195 -> m7_10  [color=green, key=2, style=dotted];
m7_195 -> m7_203  [color=green, key=1, label="lambda expression", style=dashed];
m7_196 -> m7_197  [color=green, key=0, style=solid];
m7_196 -> m7_24  [color=green, key=2, style=dotted];
m7_196 -> m7_208  [color=green, key=1, label=process, style=dashed];
m7_197 -> m7_198  [color=green, key=0, style=solid];
m7_197 -> m7_10  [color=green, key=2, style=dotted];
m7_197 -> m7_207  [color=green, key=1, label="lambda expression", style=dashed];
m7_198 -> m7_193  [color=blue, key=0, style=bold];
m7_30 -> m7_245  [color=green, key=0, style=solid];
m7_245 -> m7_246  [color=green, key=0, style=solid];
m7_246 -> m7_30  [color=blue, key=0, style=bold];
m7_216 -> m7_217  [color=green, key=0, style=solid];
m7_12 -> m7_13  [color=green, key=0, style=solid];
m7_13 -> m7_14  [color=green, key=0, style=solid];
m7_13 -> m7_15  [color=green, key=2, style=dotted];
m7_14 -> m7_12  [color=blue, key=0, style=bold];
m7_27 -> m7_28  [color=green, key=0, style=solid];
m7_28 -> m7_29  [color=green, key=0, style=solid];
m7_28 -> m7_30  [color=green, key=2, style=dotted];
m7_29 -> m7_27  [color=blue, key=0, style=bold];
m7_39 -> m7_40  [color=green, key=0, style=solid];
m7_40 -> m7_41  [color=green, key=0, style=solid];
m7_40 -> m7_42  [color=green, key=2, style=dotted];
m7_41 -> m7_39  [color=blue, key=0, style=bold];
m7_50 -> m7_51  [color=green, key=0, style=solid];
m7_51 -> m7_52  [color=green, key=0, style=solid];
m7_51 -> m7_53  [color=green, key=2, style=dotted];
m7_52 -> m7_50  [color=blue, key=0, style=bold];
m7_61 -> m7_62  [color=green, key=0, style=solid];
m7_62 -> m7_63  [color=green, key=0, style=solid];
m7_62 -> m7_64  [color=green, key=2, style=dotted];
m7_63 -> m7_61  [color=blue, key=0, style=bold];
m7_98 -> m7_99  [color=green, key=0, style=solid];
m7_99 -> m7_100  [color=green, key=0, style=solid];
m7_99 -> m7_101  [color=green, key=2, style=dotted];
m7_100 -> m7_98  [color=blue, key=0, style=bold];
m7_109 -> m7_110  [color=green, key=0, style=solid];
m7_110 -> m7_111  [color=green, key=0, style=solid];
m7_110 -> m7_112  [color=green, key=2, style=dotted];
m7_111 -> m7_109  [color=blue, key=0, style=bold];
m7_125 -> m7_126  [color=green, key=0, style=solid];
m7_129 -> m7_130  [color=green, key=0, style=solid];
m7_133 -> m7_134  [color=green, key=0, style=solid];
m7_133 -> m7_25  [color=green, key=2, style=dotted];
m7_132 -> m7_133  [color=green, key=0, style=solid];
m7_134 -> m7_132  [color=blue, key=0, style=bold];
m7_126 -> m7_127  [color=green, key=0, style=solid];
m7_126 -> m7_10  [color=green, key=2, style=dotted];
m7_126 -> m7_128  [color=green, key=2, style=dotted];
m7_127 -> m7_125  [color=blue, key=0, style=bold];
m7_130 -> m7_131  [color=green, key=0, style=solid];
m7_130 -> m7_42  [color=green, key=2, style=dotted];
m7_131 -> m7_129  [color=blue, key=0, style=bold];
m7_143 -> m7_144  [color=green, key=0, style=solid];
m7_146 -> m7_147  [color=green, key=0, style=solid];
m7_150 -> m7_151  [color=green, key=0, style=solid];
m7_150 -> m7_25  [color=green, key=2, style=dotted];
m7_149 -> m7_150  [color=green, key=0, style=solid];
m7_151 -> m7_149  [color=blue, key=0, style=bold];
m7_144 -> m7_145  [color=green, key=0, style=solid];
m7_144 -> m7_10  [color=green, key=2, style=dotted];
m7_144 -> m7_128  [color=green, key=2, style=dotted];
m7_145 -> m7_143  [color=blue, key=0, style=bold];
m7_147 -> m7_148  [color=green, key=0, style=solid];
m7_147 -> m7_42  [color=green, key=2, style=dotted];
m7_148 -> m7_146  [color=blue, key=0, style=bold];
m7_162 -> m7_163  [color=green, key=0, style=solid];
m7_162 -> m7_25  [color=green, key=2, style=dotted];
m7_161 -> m7_162  [color=green, key=0, style=solid];
m7_163 -> m7_161  [color=blue, key=0, style=bold];
m7_172 -> m7_173  [color=green, key=0, style=solid];
m7_177 -> m7_178  [color=green, key=0, style=solid];
m7_177 -> m7_25  [color=green, key=2, style=dotted];
m7_176 -> m7_177  [color=green, key=0, style=solid];
m7_178 -> m7_176  [color=blue, key=0, style=bold];
m7_173 -> m7_174  [color=green, key=0, style=solid];
m7_173 -> m7_175  [color=green, key=2, style=dotted];
m7_174 -> m7_172  [color=blue, key=0, style=bold];
m7_186 -> m7_187  [color=green, key=0, style=solid];
m7_191 -> m7_192  [color=green, key=0, style=solid];
m7_191 -> m7_25  [color=green, key=2, style=dotted];
m7_190 -> m7_191  [color=green, key=0, style=solid];
m7_192 -> m7_190  [color=blue, key=0, style=bold];
m7_187 -> m7_188  [color=green, key=0, style=solid];
m7_187 -> m7_189  [color=green, key=2, style=dotted];
m7_188 -> m7_186  [color=blue, key=0, style=bold];
m7_199 -> m7_200  [color=green, key=0, style=solid];
m7_203 -> m7_204  [color=green, key=0, style=solid];
m7_208 -> m7_209  [color=green, key=0, style=solid];
m7_208 -> m7_25  [color=green, key=2, style=dotted];
m7_207 -> m7_208  [color=green, key=0, style=solid];
m7_209 -> m7_207  [color=blue, key=0, style=bold];
m7_200 -> m7_201  [color=green, key=0, style=solid];
m7_200 -> m7_202  [color=green, key=2, style=dotted];
m7_201 -> m7_199  [color=blue, key=0, style=bold];
m7_204 -> m7_205  [color=green, key=0, style=solid];
m7_204 -> m7_206  [color=green, key=2, style=dotted];
m7_205 -> m7_203  [color=blue, key=0, style=bold];
m7_217 -> m7_218  [color=green, key=0, style=solid];
m7_217 -> m7_219  [color=green, key=2, style=dotted];
m7_218 -> m7_216  [color=blue, key=0, style=bold];
m7_210 -> m7_211  [color=green, key=0, style=solid];
m7_211 -> m7_212  [color=green, key=0, style=solid];
m7_211 -> m7_38  [color=green, key=2, style=dotted];
m7_211 -> m7_216  [color=green, key=1, label="lambda expression", style=dashed];
m7_212 -> m7_213  [color=green, key=0, style=solid];
m7_212 -> m7_24  [color=green, key=2, style=dotted];
m7_213 -> m7_214  [color=green, key=0, style=solid];
m7_213 -> m7_25  [color=green, key=2, style=dotted];
m7_214 -> m7_215  [color=green, key=0, style=solid];
m7_214 -> m7_11  [color=green, key=2, style=dotted];
m7_215 -> m7_210  [color=blue, key=0, style=bold];
m7_113 -> m7_114  [color=green, key=0, style=solid];
m7_114 -> m7_115  [color=green, key=0, style=solid];
m7_114 -> m7_121  [color=green, key=2, style=dotted];
m7_114 -> m7_119  [color=green, key=1, label=exception, style=dashed];
m7_115 -> m7_116  [color=green, key=0, style=solid];
m7_115 -> m7_122  [color=green, key=2, style=dotted];
m7_115 -> m7_123  [color=green, key=2, style=dotted];
m7_115 -> m7_125  [color=green, key=1, label="lambda expression", style=dashed];
m7_119 -> m7_120  [color=green, key=0, style=solid];
m7_119 -> m7_124  [color=green, key=2, style=dotted];
m7_116 -> m7_117  [color=green, key=0, style=solid];
m7_116 -> m7_23  [color=green, key=2, style=dotted];
m7_116 -> m7_129  [color=green, key=1, label="lambda expression", style=dashed];
m7_118 -> m7_119  [color=green, key=0, style=solid];
m7_118 -> m7_10  [color=green, key=2, style=dotted];
m7_118 -> m7_132  [color=green, key=1, label="lambda expression", style=dashed];
m7_117 -> m7_118  [color=green, key=0, style=solid];
m7_117 -> m7_24  [color=green, key=2, style=dotted];
m7_117 -> m7_133  [color=green, key=1, label=process, style=dashed];
m7_120 -> m7_113  [color=blue, key=0, style=bold];
m7_224 -> m7_225  [color=green, key=0, style=solid];
m7_225 -> m7_226  [color=green, key=0, style=solid];
m7_226 -> m7_224  [color=blue, key=0, style=bold];
m7_102 -> m7_103  [color=green, key=0, style=solid];
m7_103 -> m7_104  [color=green, key=0, style=solid];
m7_104 -> m7_105  [color=green, key=0, style=solid];
m7_104 -> m7_23  [color=green, key=2, style=dotted];
m7_104 -> m7_109  [color=green, key=1, label="lambda expression", style=dashed];
m7_105 -> m7_106  [color=green, key=0, style=solid];
m7_105 -> m7_24  [color=green, key=2, style=dotted];
m7_106 -> m7_107  [color=green, key=0, style=solid];
m7_106 -> m7_25  [color=green, key=2, style=dotted];
m7_107 -> m7_108  [color=green, key=0, style=solid];
m7_107 -> m7_26  [color=green, key=2, style=dotted];
m7_108 -> m7_102  [color=blue, key=0, style=bold];
m7_91 -> m7_92  [color=green, key=0, style=solid];
m7_92 -> m7_93  [color=green, key=0, style=solid];
m7_93 -> m7_94  [color=green, key=0, style=solid];
m7_93 -> m7_23  [color=green, key=2, style=dotted];
m7_93 -> m7_98  [color=green, key=1, label="lambda expression", style=dashed];
m7_94 -> m7_95  [color=green, key=0, style=solid];
m7_94 -> m7_24  [color=green, key=2, style=dotted];
m7_95 -> m7_96  [color=green, key=0, style=solid];
m7_95 -> m7_25  [color=green, key=2, style=dotted];
m7_96 -> m7_97  [color=green, key=0, style=solid];
m7_96 -> m7_26  [color=green, key=2, style=dotted];
m7_97 -> m7_91  [color=blue, key=0, style=bold];
m7_65 -> m7_66  [color=green, key=0, style=solid];
m7_66 -> m7_67  [color=green, key=0, style=solid];
m7_67 -> m7_68  [color=green, key=0, style=solid];
m7_67 -> m7_76  [color=green, key=2, style=dotted];
m7_68 -> m7_69  [color=green, key=0, style=solid];
m7_68 -> m7_77  [color=green, key=2, style=dotted];
m7_68 -> m7_71  [color=green, key=1, label=convertedDate, style=dashed];
m7_69 -> m7_70  [color=green, key=0, style=solid];
m7_69 -> m7_71  [color=green, key=1, label=type, style=dashed];
m7_71 -> m7_72  [color=green, key=0, style=solid];
m7_71 -> m7_79  [color=green, key=2, style=dotted];
m7_70 -> m7_71  [color=green, key=0, style=solid];
m7_70 -> m7_78  [color=green, key=2, style=dotted];
m7_72 -> m7_73  [color=green, key=0, style=solid];
m7_72 -> m7_24  [color=green, key=2, style=dotted];
m7_73 -> m7_74  [color=green, key=0, style=solid];
m7_73 -> m7_25  [color=green, key=2, style=dotted];
m7_74 -> m7_75  [color=green, key=0, style=solid];
m7_74 -> m7_26  [color=green, key=2, style=dotted];
m7_75 -> m7_65  [color=blue, key=0, style=bold];
m7_54 -> m7_55  [color=green, key=0, style=solid];
m7_55 -> m7_56  [color=green, key=0, style=solid];
m7_56 -> m7_57  [color=green, key=0, style=solid];
m7_56 -> m7_23  [color=green, key=2, style=dotted];
m7_56 -> m7_61  [color=green, key=1, label="lambda expression", style=dashed];
m7_57 -> m7_58  [color=green, key=0, style=solid];
m7_57 -> m7_24  [color=green, key=2, style=dotted];
m7_58 -> m7_59  [color=green, key=0, style=solid];
m7_58 -> m7_25  [color=green, key=2, style=dotted];
m7_59 -> m7_60  [color=green, key=0, style=solid];
m7_59 -> m7_26  [color=green, key=2, style=dotted];
m7_60 -> m7_54  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_4  [color=green, key=2, style=dotted];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_5  [color=green, key=2, style=dotted];
m7_3 -> m7_0  [color=blue, key=0, style=bold];
m7_257 -> m7_1  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_2  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_18  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_19  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_20  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_33  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_34  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_35  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_45  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_46  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_47  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_56  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_57  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_58  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_62  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_71  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_72  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_73  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_85  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_86  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_87  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_93  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_94  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_95  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_99  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_104  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_105  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_106  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_115  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_116  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_117  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_118  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_133  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_130  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_136  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_137  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_138  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_139  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_150  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_147  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_155  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_156  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_157  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_162  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_166  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_167  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_168  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_177  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_180  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_181  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_182  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_191  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_194  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_195  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_196  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_197  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_208  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_211  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_212  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_213  [color=green, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_257 -> m7_254  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.MethodInvokeRunanceProcessFacts", style=dashed];
m7_258 -> m7_133  [color=green, key=1, label=process, style=dashed];
m7_259 -> m7_150  [color=green, key=1, label=process, style=dashed];
m7_260 -> m7_162  [color=green, key=1, label=process, style=dashed];
m7_261 -> m7_177  [color=green, key=1, label=process, style=dashed];
m7_262 -> m7_191  [color=green, key=1, label=process, style=dashed];
m7_263 -> m7_208  [color=green, key=1, label=process, style=dashed];
m9_5 -> m9_14  [key=0, style=solid];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [key=2, style=dotted];
m9_15 -> m9_5  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [color=red, key=0, style=solid];
m9_1 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_3  [color=red, key=0, style=solid];
m9_2 -> m9_6  [color=red, key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_7  [key=2, style=dotted];
m9_4 -> m9_0  [color=blue, key=0, style=bold];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [color=red, key=0, style=solid];
m9_9 -> m9_5  [key=2, style=dotted];
m9_10 -> m9_11  [color=red, key=0, style=solid];
m9_10 -> m9_13  [color=red, key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_7  [key=2, style=dotted];
m9_12 -> m9_8  [color=blue, key=0, style=bold];
m10_17 -> m10_22  [key=0, style=solid];
m10_22 -> m10_17  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [color=green, key=0, style=solid];
m10_1 -> m10_2  [color=green, key=0, style=solid];
m10_1 -> m10_9  [color=green, key=2, style=dotted];
m10_2 -> m10_3  [color=green, key=0, style=solid];
m10_2 -> m10_10  [color=green, key=2, style=dotted];
m10_3 -> m10_4  [color=green, key=0, style=solid];
m10_4 -> m10_5  [color=green, key=0, style=solid];
m10_4 -> m10_11  [color=green, key=2, style=dotted];
m10_4 -> m10_14  [color=green, key=1, label="lambda expression", style=dashed];
m10_5 -> m10_6  [color=green, key=0, style=solid];
m10_6 -> m10_7  [color=green, key=0, style=solid];
m10_6 -> m10_12  [color=green, key=2, style=dotted];
m10_7 -> m10_8  [color=green, key=0, style=solid];
m10_7 -> m10_13  [color=green, key=2, style=dotted];
m10_8 -> m10_0  [color=blue, key=0, style=bold];
m10_18 -> m10_19  [color=green, key=0, style=solid];
m10_14 -> m10_15  [color=green, key=0, style=solid];
m10_15 -> m10_16  [color=green, key=0, style=solid];
m10_15 -> m10_17  [color=green, key=2, style=dotted];
m10_16 -> m10_14  [color=blue, key=0, style=bold];
m10_19 -> m10_20  [color=green, key=0, style=solid];
m10_19 -> m10_21  [color=green, key=2, style=dotted];
m10_20 -> m10_18  [color=blue, key=0, style=bold];
m10_23 -> m10_1  [color=green, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m10_23 -> m10_2  [color=green, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m10_23 -> m10_3  [color=green, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m10_23 -> m10_4  [color=green, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m10_23 -> m10_5  [color=green, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m10_23 -> m10_6  [color=green, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m10_23 -> m10_7  [color=green, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m10_23 -> m10_19  [color=green, key=1, label="Hangfire.Core.Tests.PerformContextMock", style=dashed];
m11_56 -> m11_57  [key=0, style=solid];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_40  [key=2, style=dotted];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_29  [key=2, style=dotted];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_31  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_64  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_8  [key=2, style=dotted];
m11_61 -> m11_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_9  [key=2, style=dotted];
m11_63 -> m11_56  [color=blue, key=0, style=bold];
m11_41 -> m11_42  [key=0, style=solid];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_29  [key=2, style=dotted];
m11_42 -> m11_44  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_42 -> m11_48  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_46  [key=2, style=dotted];
m11_43 -> m11_48  [color=darkseagreen4, key=1, label=token, style=dashed];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_8  [key=2, style=dotted];
m11_44 -> m11_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_45 -> m11_41  [color=blue, key=0, style=bold];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_8  [key=2, style=dotted];
m11_5 -> m11_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_9  [key=2, style=dotted];
m11_7 -> m11_4  [color=blue, key=0, style=bold];
m11_70 -> m11_71  [key=0, style=solid];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_40  [key=2, style=dotted];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_29  [key=2, style=dotted];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_31  [key=2, style=dotted];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_32  [key=2, style=dotted];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_8  [key=2, style=dotted];
m11_75 -> m11_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_9  [key=2, style=dotted];
m11_77 -> m11_70  [color=blue, key=0, style=bold];
m11_50 -> m11_51  [key=0, style=solid];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_40  [key=2, style=dotted];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_29  [key=2, style=dotted];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_31  [key=2, style=dotted];
m11_54 -> m11_55  [key=0, style=solid];
m11_54 -> m11_9  [key=2, style=dotted];
m11_55 -> m11_50  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_33 -> m11_34  [key=0, style=solid];
m11_34 -> m11_35  [key=0, style=solid];
m11_34 -> m11_40  [key=2, style=dotted];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_29  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_31  [key=2, style=dotted];
m11_36 -> m11_38  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_32  [key=2, style=dotted];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_9  [key=2, style=dotted];
m11_39 -> m11_33  [color=blue, key=0, style=bold];
m11_78 -> m11_79  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_13  [key=2, style=dotted];
m11_12 -> m11_10  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_13  [key=2, style=dotted];
m11_20 -> m11_18  [color=blue, key=0, style=bold];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_31  [key=2, style=dotted];
m11_47 -> m11_48  [key=0, style=solid];
m11_49 -> m11_47  [color=blue, key=0, style=bold];
m11_65 -> m11_66  [key=0, style=solid];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_68  [key=2, style=dotted];
m11_66 -> m11_69  [key=2, style=dotted];
m11_67 -> m11_65  [color=blue, key=0, style=bold];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_68  [key=2, style=dotted];
m11_79 -> m11_69  [key=2, style=dotted];
m11_80 -> m11_78  [color=blue, key=0, style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_8  [key=2, style=dotted];
m11_15 -> m11_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_9  [key=2, style=dotted];
m11_17 -> m11_14  [color=blue, key=0, style=bold];
m11_90 -> m11_91  [key=0, style=solid];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_40  [key=2, style=dotted];
m11_92 -> m11_93  [key=0, style=solid];
m11_92 -> m11_29  [key=2, style=dotted];
m11_92 -> m11_95  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_93 -> m11_94  [key=0, style=solid];
m11_93 -> m11_31  [key=2, style=dotted];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_31  [key=2, style=dotted];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_89  [key=2, style=dotted];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_9  [key=2, style=dotted];
m11_97 -> m11_90  [color=blue, key=0, style=bold];
m11_81 -> m11_82  [key=0, style=solid];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_40  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_29  [key=2, style=dotted];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_31  [key=2, style=dotted];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_89  [key=2, style=dotted];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_68  [key=2, style=dotted];
m11_86 -> m11_69  [key=2, style=dotted];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_9  [key=2, style=dotted];
m11_88 -> m11_81  [color=blue, key=0, style=bold];
m11_21 -> m11_22  [key=0, style=solid];
m11_22 -> m11_23  [color=red, key=0, style=solid];
m11_22 -> m11_29  [key=2, style=dotted];
m11_22 -> m11_24  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_23 -> m11_24  [color=red, key=0, style=solid];
m11_23 -> m11_30  [color=red, key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_31  [key=2, style=dotted];
m11_24 -> m11_26  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_32  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_9  [key=2, style=dotted];
m11_28 -> m11_21  [color=blue, key=0, style=bold];
m11_98 -> m11_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m11_98 -> m11_24  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m11_98 -> m11_36  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m11_98 -> m11_53  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m11_98 -> m11_59  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m11_98 -> m11_73  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m11_98 -> m11_84  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m11_98 -> m11_93  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m11_98 -> m11_95  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMq.Tests.RabbitMqJobQueueFacts", style=dashed];
m11_99 -> m11_48  [color=darkseagreen4, key=1, label=queue, style=dashed];
m11_100 -> m11_48  [color=darkseagreen4, key=1, label=token, style=dashed];
m12_5 -> m12_14  [key=0, style=solid];
m12_14 -> m12_15  [key=0, style=solid];
m12_14 -> m12_17  [key=2, style=dotted];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_18  [key=2, style=dotted];
m12_16 -> m12_5  [color=blue, key=0, style=bold];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [color=green, key=0, style=solid];
m12_9 -> m12_5  [key=2, style=dotted];
m12_10 -> m12_11  [color=green, key=0, style=solid];
m12_10 -> m12_13  [color=green, key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_7  [key=2, style=dotted];
m12_12 -> m12_8  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [color=green, key=0, style=solid];
m12_1 -> m12_5  [key=2, style=dotted];
m12_2 -> m12_3  [color=green, key=0, style=solid];
m12_2 -> m12_6  [color=green, key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_7  [key=2, style=dotted];
m12_4 -> m12_0  [color=blue, key=0, style=bold];
m13_622 -> m13_623  [key=0, style=solid];
m13_623 -> m13_624  [key=0, style=solid];
m13_623 -> m13_66  [key=2, style=dotted];
m13_623 -> m13_625  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_624 -> m13_622  [color=blue, key=0, style=bold];
m13_810 -> m13_811  [key=0, style=solid];
m13_811 -> m13_812  [key=0, style=solid];
m13_811 -> m13_815  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_811 -> m13_584  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_812 -> m13_813  [key=0, style=solid];
m13_812 -> m13_125  [key=2, style=dotted];
m13_812 -> m13_814  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_813 -> m13_810  [color=blue, key=0, style=bold];
m13_478 -> m13_479  [key=0, style=solid];
m13_479 -> m13_480  [key=0, style=solid];
m13_479 -> m13_66  [key=2, style=dotted];
m13_479 -> m13_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_480 -> m13_478  [color=blue, key=0, style=bold];
m13_364 -> m13_365  [key=0, style=solid];
m13_365 -> m13_366  [key=0, style=solid];
m13_365 -> m13_66  [key=2, style=dotted];
m13_365 -> m13_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_366 -> m13_364  [color=blue, key=0, style=bold];
m13_739 -> m13_740  [key=0, style=solid];
m13_740 -> m13_741  [key=0, style=solid];
m13_740 -> m13_66  [key=2, style=dotted];
m13_740 -> m13_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_741 -> m13_739  [color=blue, key=0, style=bold];
m13_667 -> m13_668  [key=0, style=solid];
m13_668 -> m13_669  [key=0, style=solid];
m13_668 -> m13_672  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_668 -> m13_668  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_669 -> m13_670  [key=0, style=solid];
m13_669 -> m13_125  [key=2, style=dotted];
m13_669 -> m13_671  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_670 -> m13_667  [color=blue, key=0, style=bold];
m13_864 -> m13_865  [key=0, style=solid];
m13_865 -> m13_866  [key=0, style=solid];
m13_865 -> m13_869  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_865 -> m13_865  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_866 -> m13_867  [key=0, style=solid];
m13_866 -> m13_125  [key=2, style=dotted];
m13_866 -> m13_868  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_867 -> m13_864  [color=blue, key=0, style=bold];
m13_271 -> m13_272  [key=0, style=solid];
m13_272 -> m13_273  [key=0, style=solid];
m13_272 -> m13_66  [key=2, style=dotted];
m13_272 -> m13_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_273 -> m13_271  [color=blue, key=0, style=bold];
m13_343 -> m13_344  [key=0, style=solid];
m13_344 -> m13_345  [key=0, style=solid];
m13_344 -> m13_348  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_344 -> m13_344  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_345 -> m13_346  [key=0, style=solid];
m13_345 -> m13_125  [key=2, style=dotted];
m13_345 -> m13_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_346 -> m13_343  [color=blue, key=0, style=bold];
m13_304 -> m13_305  [key=0, style=solid];
m13_305 -> m13_306  [key=0, style=solid];
m13_305 -> m13_309  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_305 -> m13_282  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_306 -> m13_307  [key=0, style=solid];
m13_306 -> m13_125  [key=2, style=dotted];
m13_306 -> m13_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_307 -> m13_304  [color=blue, key=0, style=bold];
m13_25 -> m13_26  [color=red, key=0, style=solid];
m13_26 -> m13_27  [color=red, key=0, style=solid];
m13_26 -> m13_14  [color=red, key=2, style=dotted];
m13_26 -> m13_29  [color=red, key=1, label="lambda expression", style=dashed];
m13_27 -> m13_28  [color=red, key=0, style=solid];
m13_27 -> m13_20  [color=red, key=2, style=dotted];
m13_28 -> m13_25  [color=blue, key=0, style=bold];
m13_857 -> m13_858  [key=0, style=solid];
m13_858 -> m13_859  [key=0, style=solid];
m13_858 -> m13_66  [key=2, style=dotted];
m13_858 -> m13_860  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_859 -> m13_857  [color=blue, key=0, style=bold];
m13_209 -> m13_210  [key=0, style=solid];
m13_210 -> m13_211  [key=0, style=solid];
m13_210 -> m13_66  [key=2, style=dotted];
m13_210 -> m13_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_211 -> m13_209  [color=blue, key=0, style=bold];
m13_883 -> m13_884  [key=0, style=solid];
m13_884 -> m13_885  [key=0, style=solid];
m13_884 -> m13_66  [key=2, style=dotted];
m13_884 -> m13_886  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_885 -> m13_883  [color=blue, key=0, style=bold];
m13_719 -> m13_720  [key=0, style=solid];
m13_720 -> m13_721  [key=0, style=solid];
m13_720 -> m13_724  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_720 -> m13_720  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_721 -> m13_722  [key=0, style=solid];
m13_721 -> m13_125  [key=2, style=dotted];
m13_721 -> m13_723  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_722 -> m13_719  [color=blue, key=0, style=bold];
m13_281 -> m13_282  [key=0, style=solid];
m13_282 -> m13_283  [key=0, style=solid];
m13_282 -> m13_286  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_282 -> m13_282  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_283 -> m13_284  [key=0, style=solid];
m13_283 -> m13_125  [key=2, style=dotted];
m13_283 -> m13_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_284 -> m13_281  [color=blue, key=0, style=bold];
m13_353 -> m13_354  [key=0, style=solid];
m13_354 -> m13_355  [key=0, style=solid];
m13_354 -> m13_66  [key=2, style=dotted];
m13_354 -> m13_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_355 -> m13_353  [color=blue, key=0, style=bold];
m13_430 -> m13_431  [key=0, style=solid];
m13_431 -> m13_432  [key=0, style=solid];
m13_431 -> m13_66  [key=2, style=dotted];
m13_431 -> m13_433  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_432 -> m13_430  [color=blue, key=0, style=bold];
m13_772 -> m13_773  [key=0, style=solid];
m13_773 -> m13_774  [key=0, style=solid];
m13_773 -> m13_777  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_773 -> m13_773  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_774 -> m13_775  [key=0, style=solid];
m13_774 -> m13_125  [key=2, style=dotted];
m13_774 -> m13_776  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_775 -> m13_772  [color=blue, key=0, style=bold];
m13_239 -> m13_240  [key=0, style=solid];
m13_240 -> m13_241  [key=0, style=solid];
m13_240 -> m13_245  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_240 -> m13_227  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_241 -> m13_242  [key=0, style=solid];
m13_241 -> m13_125  [key=2, style=dotted];
m13_241 -> m13_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_242 -> m13_239  [color=blue, key=0, style=bold];
m13_658 -> m13_659  [key=0, style=solid];
m13_659 -> m13_660  [key=0, style=solid];
m13_659 -> m13_663  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_659 -> m13_659  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_660 -> m13_661  [key=0, style=solid];
m13_660 -> m13_125  [key=2, style=dotted];
m13_660 -> m13_662  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_661 -> m13_658  [color=blue, key=0, style=bold];
m13_847 -> m13_848  [key=0, style=solid];
m13_848 -> m13_849  [key=0, style=solid];
m13_848 -> m13_66  [key=2, style=dotted];
m13_848 -> m13_850  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_849 -> m13_847  [color=blue, key=0, style=bold];
m13_402 -> m13_403  [key=0, style=solid];
m13_403 -> m13_404  [key=0, style=solid];
m13_403 -> m13_66  [key=2, style=dotted];
m13_403 -> m13_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_404 -> m13_402  [color=blue, key=0, style=bold];
m13_33 -> m13_34  [color=red, key=0, style=solid];
m13_34 -> m13_35  [color=red, key=0, style=solid];
m13_34 -> m13_32  [color=red, key=2, style=dotted];
m13_34 -> m13_37  [color=red, key=1, label=sqlConnection, style=dashed];
m13_35 -> m13_36  [color=red, key=0, style=solid];
m13_35 -> m13_24  [color=red, key=2, style=dotted];
m13_37 -> m13_38  [color=red, key=0, style=solid];
m13_37 -> m13_20  [color=red, key=2, style=dotted];
m13_36 -> m13_37  [color=red, key=0, style=solid];
m13_36 -> m13_39  [color=red, key=2, style=dotted];
m13_38 -> m13_33  [color=blue, key=0, style=bold];
m13_326 -> m13_327  [key=0, style=solid];
m13_327 -> m13_328  [key=0, style=solid];
m13_327 -> m13_66  [key=2, style=dotted];
m13_327 -> m13_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_328 -> m13_326  [color=blue, key=0, style=bold];
m13_250 -> m13_251  [key=0, style=solid];
m13_251 -> m13_252  [key=0, style=solid];
m13_251 -> m13_255  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_251 -> m13_188  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_252 -> m13_253  [key=0, style=solid];
m13_252 -> m13_125  [key=2, style=dotted];
m13_252 -> m13_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_253 -> m13_250  [color=blue, key=0, style=bold];
m13_890 -> m13_891  [key=0, style=solid];
m13_891 -> m13_892  [key=0, style=solid];
m13_891 -> m13_895  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_891 -> m13_891  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_892 -> m13_893  [key=0, style=solid];
m13_892 -> m13_125  [key=2, style=dotted];
m13_892 -> m13_894  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_893 -> m13_890  [color=blue, key=0, style=bold];
m13_566 -> m13_567  [key=0, style=solid];
m13_567 -> m13_568  [key=0, style=solid];
m13_567 -> m13_66  [key=2, style=dotted];
m13_567 -> m13_569  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_568 -> m13_566  [color=blue, key=0, style=bold];
m13_511 -> m13_512  [key=0, style=solid];
m13_512 -> m13_513  [key=0, style=solid];
m13_512 -> m13_66  [key=2, style=dotted];
m13_512 -> m13_514  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_513 -> m13_511  [color=blue, key=0, style=bold];
m13_219 -> m13_220  [key=0, style=solid];
m13_220 -> m13_221  [key=0, style=solid];
m13_220 -> m13_66  [key=2, style=dotted];
m13_220 -> m13_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_221 -> m13_219  [color=blue, key=0, style=bold];
m13_576 -> m13_577  [key=0, style=solid];
m13_577 -> m13_578  [key=0, style=solid];
m13_577 -> m13_66  [key=2, style=dotted];
m13_577 -> m13_579  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_578 -> m13_576  [color=blue, key=0, style=bold];
m13_440 -> m13_441  [key=0, style=solid];
m13_441 -> m13_442  [key=0, style=solid];
m13_441 -> m13_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_441 -> m13_441  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_442 -> m13_443  [key=0, style=solid];
m13_442 -> m13_125  [key=2, style=dotted];
m13_442 -> m13_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_443 -> m13_440  [color=blue, key=0, style=bold];
m13_583 -> m13_584  [key=0, style=solid];
m13_584 -> m13_585  [key=0, style=solid];
m13_584 -> m13_588  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_584 -> m13_584  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_585 -> m13_586  [key=0, style=solid];
m13_585 -> m13_125  [key=2, style=dotted];
m13_585 -> m13_587  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_586 -> m13_583  [color=blue, key=0, style=bold];
m13_782 -> m13_783  [key=0, style=solid];
m13_783 -> m13_784  [key=0, style=solid];
m13_783 -> m13_66  [key=2, style=dotted];
m13_783 -> m13_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_784 -> m13_782  [color=blue, key=0, style=bold];
m13_712 -> m13_713  [key=0, style=solid];
m13_713 -> m13_714  [key=0, style=solid];
m13_713 -> m13_66  [key=2, style=dotted];
m13_713 -> m13_715  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_714 -> m13_712  [color=blue, key=0, style=bold];
m13_793 -> m13_794  [key=0, style=solid];
m13_794 -> m13_795  [key=0, style=solid];
m13_794 -> m13_66  [key=2, style=dotted];
m13_794 -> m13_796  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_795 -> m13_793  [color=blue, key=0, style=bold];
m13_894 -> m13_895  [key=0, style=solid];
m13_894 -> m13_896  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_11 -> m13_12  [color=red, key=0, style=solid];
m13_12 -> m13_13  [color=red, key=0, style=solid];
m13_12 -> m13_14  [color=red, key=2, style=dotted];
m13_12 -> m13_15  [color=red, key=2, style=dotted];
m13_13 -> m13_11  [color=blue, key=0, style=bold];
m13_21 -> m13_22  [color=red, key=0, style=solid];
m13_22 -> m13_23  [color=red, key=0, style=solid];
m13_22 -> m13_24  [color=red, key=2, style=dotted];
m13_23 -> m13_21  [color=blue, key=0, style=bold];
m13_29 -> m13_30  [color=red, key=0, style=solid];
m13_30 -> m13_31  [color=red, key=0, style=solid];
m13_30 -> m13_24  [color=red, key=2, style=dotted];
m13_30 -> m13_32  [color=red, key=2, style=dotted];
m13_31 -> m13_29  [color=blue, key=0, style=bold];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_53  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_56  [key=2, style=dotted];
m13_51 -> m13_53  [color=darkseagreen4, key=1, label=token, style=dashed];
m13_51 -> m13_54  [color=darkseagreen4, key=1, label=token, style=dashed];
m13_51 -> m13_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_57  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_54  [color=darkseagreen4, key=1, label=queues, style=dashed];
m13_52 -> m13_60  [color=darkseagreen4, key=1, label=queues, style=dashed];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_58  [key=2, style=dotted];
m13_54 -> m13_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_60 -> m13_61  [key=0, style=solid];
m13_60 -> m13_62  [key=2, style=dotted];
m13_55 -> m13_50  [color=blue, key=0, style=bold];
m13_59 -> m13_60  [key=0, style=solid];
m13_61 -> m13_59  [color=blue, key=0, style=bold];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_71  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_67 -> m13_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_56  [key=2, style=dotted];
m13_68 -> m13_71  [color=darkseagreen4, key=1, label=token, style=dashed];
m13_68 -> m13_75  [color=darkseagreen4, key=1, label=token, style=dashed];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_14  [key=2, style=dotted];
m13_71 -> m13_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_57  [key=2, style=dotted];
m13_69 -> m13_70  [key=0, style=solid];
m13_69 -> m13_7  [key=2, style=dotted];
m13_70 -> m13_71  [key=0, style=solid];
m13_70 -> m13_73  [key=2, style=dotted];
m13_72 -> m13_67  [color=blue, key=0, style=bold];
m13_74 -> m13_75  [key=0, style=solid];
m13_76 -> m13_74  [color=blue, key=0, style=bold];
m13_80 -> m13_81  [key=0, style=solid];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_84  [key=2, style=dotted];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_85  [key=2, style=dotted];
m13_83 -> m13_80  [color=blue, key=0, style=bold];
m13_89 -> m13_90  [key=0, style=solid];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_93  [key=2, style=dotted];
m13_90 -> m13_94  [key=2, style=dotted];
m13_91 -> m13_92  [key=0, style=solid];
m13_91 -> m13_85  [key=2, style=dotted];
m13_92 -> m13_89  [color=blue, key=0, style=bold];
m13_98 -> m13_99  [key=0, style=solid];
m13_98 -> m13_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_99 -> m13_100  [key=0, style=solid];
m13_99 -> m13_14  [key=2, style=dotted];
m13_99 -> m13_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_103 -> m13_104  [key=0, style=solid];
m13_103 -> m13_105  [key=2, style=dotted];
m13_103 -> m13_106  [key=2, style=dotted];
m13_100 -> m13_101  [key=0, style=solid];
m13_100 -> m13_20  [key=2, style=dotted];
m13_102 -> m13_103  [key=0, style=solid];
m13_101 -> m13_98  [color=blue, key=0, style=bold];
m13_104 -> m13_102  [color=blue, key=0, style=bold];
m13_110 -> m13_111  [key=0, style=solid];
m13_110 -> m13_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_111 -> m13_112  [key=0, style=solid];
m13_111 -> m13_14  [key=2, style=dotted];
m13_111 -> m13_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_115 -> m13_116  [key=0, style=solid];
m13_115 -> m13_117  [key=2, style=dotted];
m13_115 -> m13_106  [key=2, style=dotted];
m13_115 -> m13_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_112 -> m13_113  [key=0, style=solid];
m13_112 -> m13_20  [key=2, style=dotted];
m13_114 -> m13_115  [key=0, style=solid];
m13_113 -> m13_110  [color=blue, key=0, style=bold];
m13_116 -> m13_114  [color=blue, key=0, style=bold];
m13_118 -> m13_119  [key=0, style=solid];
m13_119 -> m13_120  [key=0, style=solid];
m13_119 -> m13_121  [key=2, style=dotted];
m13_120 -> m13_118  [color=blue, key=0, style=bold];
m13_126 -> m13_127  [key=0, style=solid];
m13_126 -> m13_128  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_126 -> m13_131  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_126 -> m13_144  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_127 -> m13_128  [key=0, style=solid];
m13_127 -> m13_148  [key=2, style=dotted];
m13_127 -> m13_133  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m13_127 -> m13_142  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m13_127 -> m13_143  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m13_128 -> m13_129  [key=0, style=solid];
m13_128 -> m13_117  [key=2, style=dotted];
m13_128 -> m13_105  [key=2, style=dotted];
m13_128 -> m13_149  [key=2, style=dotted];
m13_128 -> m13_106  [key=2, style=dotted];
m13_128 -> m13_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_128 -> m13_130  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_128 -> m13_132  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_128 -> m13_144  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_131 -> m13_132  [key=0, style=solid];
m13_131 -> m13_151  [key=2, style=dotted];
m13_131 -> m13_152  [key=2, style=dotted];
m13_131 -> m13_133  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m13_131 -> m13_134  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m13_131 -> m13_135  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m13_131 -> m13_136  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m13_131 -> m13_137  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m13_131 -> m13_142  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m13_131 -> m13_143  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m13_144 -> m13_145  [key=0, style=solid];
m13_144 -> m13_151  [key=2, style=dotted];
m13_144 -> m13_159  [key=2, style=dotted];
m13_144 -> m13_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_144 -> m13_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_144 -> m13_146  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m13_133 -> m13_134  [key=0, style=solid];
m13_133 -> m13_20  [key=2, style=dotted];
m13_142 -> m13_143  [key=0, style=solid];
m13_142 -> m13_156  [key=2, style=dotted];
m13_142 -> m13_157  [key=2, style=dotted];
m13_142 -> m13_158  [key=2, style=dotted];
m13_143 -> m13_144  [key=0, style=solid];
m13_143 -> m13_156  [key=2, style=dotted];
m13_143 -> m13_157  [key=2, style=dotted];
m13_143 -> m13_158  [key=2, style=dotted];
m13_129 -> m13_130  [key=0, style=solid];
m13_129 -> m13_85  [key=2, style=dotted];
m13_160 -> m13_161  [key=0, style=solid];
m13_130 -> m13_131  [key=0, style=solid];
m13_130 -> m13_150  [key=2, style=dotted];
m13_132 -> m13_133  [key=0, style=solid];
m13_132 -> m13_153  [key=2, style=dotted];
m13_132 -> m13_20  [key=2, style=dotted];
m13_134 -> m13_135  [key=0, style=solid];
m13_134 -> m13_20  [key=2, style=dotted];
m13_135 -> m13_136  [key=0, style=solid];
m13_135 -> m13_20  [key=2, style=dotted];
m13_136 -> m13_137  [key=0, style=solid];
m13_136 -> m13_154  [key=2, style=dotted];
m13_136 -> m13_138  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m13_137 -> m13_138  [key=0, style=solid];
m13_138 -> m13_139  [key=0, style=solid];
m13_138 -> m13_155  [key=2, style=dotted];
m13_138 -> m13_140  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_138 -> m13_141  [color=darkseagreen4, key=1, label=job, style=dashed];
m13_139 -> m13_140  [key=0, style=solid];
m13_139 -> m13_20  [key=2, style=dotted];
m13_140 -> m13_141  [key=0, style=solid];
m13_140 -> m13_20  [key=2, style=dotted];
m13_141 -> m13_142  [key=0, style=solid];
m13_141 -> m13_20  [key=2, style=dotted];
m13_145 -> m13_146  [key=0, style=solid];
m13_145 -> m13_20  [key=2, style=dotted];
m13_163 -> m13_164  [key=0, style=solid];
m13_166 -> m13_167  [key=0, style=solid];
m13_146 -> m13_147  [key=0, style=solid];
m13_146 -> m13_20  [key=2, style=dotted];
m13_147 -> m13_126  [color=blue, key=0, style=bold];
m13_161 -> m13_162  [key=0, style=solid];
m13_161 -> m13_121  [key=2, style=dotted];
m13_162 -> m13_160  [color=blue, key=0, style=bold];
m13_164 -> m13_165  [key=0, style=solid];
m13_165 -> m13_163  [color=blue, key=0, style=bold];
m13_167 -> m13_168  [key=0, style=solid];
m13_168 -> m13_166  [color=blue, key=0, style=bold];
m13_172 -> m13_173  [key=0, style=solid];
m13_172 -> m13_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_173 -> m13_174  [key=0, style=solid];
m13_173 -> m13_14  [key=2, style=dotted];
m13_173 -> m13_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_176 -> m13_177  [key=0, style=solid];
m13_176 -> m13_178  [key=2, style=dotted];
m13_174 -> m13_172  [color=blue, key=0, style=bold];
m13_175 -> m13_176  [key=0, style=solid];
m13_177 -> m13_175  [color=blue, key=0, style=bold];
m13_182 -> m13_183  [key=0, style=solid];
m13_183 -> m13_184  [key=0, style=solid];
m13_183 -> m13_178  [key=2, style=dotted];
m13_184 -> m13_185  [key=0, style=solid];
m13_184 -> m13_186  [key=2, style=dotted];
m13_185 -> m13_182  [color=blue, key=0, style=bold];
m13_193 -> m13_194  [key=0, style=solid];
m13_193 -> m13_203  [key=2, style=dotted];
m13_193 -> m13_204  [key=2, style=dotted];
m13_193 -> m13_151  [key=2, style=dotted];
m13_193 -> m13_152  [key=2, style=dotted];
m13_191 -> m13_192  [key=0, style=solid];
m13_191 -> m13_193  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_191 -> m13_194  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_192 -> m13_193  [key=0, style=solid];
m13_192 -> m13_117  [key=2, style=dotted];
m13_192 -> m13_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_194 -> m13_195  [key=0, style=solid];
m13_194 -> m13_205  [key=2, style=dotted];
m13_194 -> m13_178  [key=2, style=dotted];
m13_194 -> m13_196  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_194 -> m13_197  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_194 -> m13_198  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_194 -> m13_199  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_194 -> m13_200  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_194 -> m13_201  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_206 -> m13_207  [key=0, style=solid];
m13_195 -> m13_196  [key=0, style=solid];
m13_195 -> m13_85  [key=2, style=dotted];
m13_196 -> m13_197  [key=0, style=solid];
m13_196 -> m13_85  [key=2, style=dotted];
m13_197 -> m13_198  [key=0, style=solid];
m13_197 -> m13_20  [key=2, style=dotted];
m13_198 -> m13_199  [key=0, style=solid];
m13_198 -> m13_20  [key=2, style=dotted];
m13_199 -> m13_200  [key=0, style=solid];
m13_199 -> m13_186  [key=2, style=dotted];
m13_200 -> m13_201  [key=0, style=solid];
m13_200 -> m13_157  [key=2, style=dotted];
m13_200 -> m13_158  [key=2, style=dotted];
m13_201 -> m13_202  [key=0, style=solid];
m13_201 -> m13_157  [key=2, style=dotted];
m13_201 -> m13_158  [key=2, style=dotted];
m13_202 -> m13_191  [color=blue, key=0, style=bold];
m13_207 -> m13_208  [key=0, style=solid];
m13_207 -> m13_121  [key=2, style=dotted];
m13_208 -> m13_206  [color=blue, key=0, style=bold];
m13_212 -> m13_213  [key=0, style=solid];
m13_212 -> m13_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_213 -> m13_214  [key=0, style=solid];
m13_213 -> m13_14  [key=2, style=dotted];
m13_213 -> m13_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_216 -> m13_217  [key=0, style=solid];
m13_216 -> m13_218  [key=2, style=dotted];
m13_214 -> m13_212  [color=blue, key=0, style=bold];
m13_215 -> m13_216  [key=0, style=solid];
m13_217 -> m13_215  [color=blue, key=0, style=bold];
m13_222 -> m13_223  [key=0, style=solid];
m13_223 -> m13_224  [key=0, style=solid];
m13_223 -> m13_218  [key=2, style=dotted];
m13_224 -> m13_225  [key=0, style=solid];
m13_224 -> m13_186  [key=2, style=dotted];
m13_225 -> m13_222  [color=blue, key=0, style=bold];
m13_232 -> m13_233  [key=0, style=solid];
m13_232 -> m13_204  [key=2, style=dotted];
m13_232 -> m13_151  [key=2, style=dotted];
m13_232 -> m13_152  [key=2, style=dotted];
m13_230 -> m13_231  [key=0, style=solid];
m13_230 -> m13_232  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_230 -> m13_233  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_231 -> m13_232  [key=0, style=solid];
m13_231 -> m13_105  [key=2, style=dotted];
m13_233 -> m13_234  [key=0, style=solid];
m13_233 -> m13_205  [key=2, style=dotted];
m13_233 -> m13_218  [key=2, style=dotted];
m13_233 -> m13_235  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_233 -> m13_236  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_233 -> m13_237  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_234 -> m13_235  [key=0, style=solid];
m13_234 -> m13_85  [key=2, style=dotted];
m13_235 -> m13_236  [key=0, style=solid];
m13_235 -> m13_20  [key=2, style=dotted];
m13_236 -> m13_237  [key=0, style=solid];
m13_236 -> m13_20  [key=2, style=dotted];
m13_237 -> m13_238  [key=0, style=solid];
m13_237 -> m13_20  [key=2, style=dotted];
m13_238 -> m13_230  [color=blue, key=0, style=bold];
m13_245 -> m13_246  [key=0, style=solid];
m13_245 -> m13_204  [key=2, style=dotted];
m13_245 -> m13_151  [key=2, style=dotted];
m13_245 -> m13_152  [key=2, style=dotted];
m13_243 -> m13_244  [key=0, style=solid];
m13_243 -> m13_245  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_243 -> m13_246  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_244 -> m13_245  [key=0, style=solid];
m13_244 -> m13_105  [key=2, style=dotted];
m13_246 -> m13_247  [key=0, style=solid];
m13_246 -> m13_205  [key=2, style=dotted];
m13_246 -> m13_218  [key=2, style=dotted];
m13_246 -> m13_248  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_247 -> m13_248  [key=0, style=solid];
m13_247 -> m13_85  [key=2, style=dotted];
m13_248 -> m13_249  [key=0, style=solid];
m13_248 -> m13_20  [key=2, style=dotted];
m13_249 -> m13_243  [color=blue, key=0, style=bold];
m13_255 -> m13_256  [key=0, style=solid];
m13_255 -> m13_259  [key=2, style=dotted];
m13_255 -> m13_204  [key=2, style=dotted];
m13_255 -> m13_151  [key=2, style=dotted];
m13_255 -> m13_152  [key=2, style=dotted];
m13_254 -> m13_255  [key=0, style=solid];
m13_254 -> m13_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_256 -> m13_257  [key=0, style=solid];
m13_256 -> m13_205  [key=2, style=dotted];
m13_256 -> m13_178  [key=2, style=dotted];
m13_257 -> m13_258  [key=0, style=solid];
m13_257 -> m13_85  [key=2, style=dotted];
m13_258 -> m13_254  [color=blue, key=0, style=bold];
m13_263 -> m13_264  [key=0, style=solid];
m13_263 -> m13_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_264 -> m13_265  [key=0, style=solid];
m13_264 -> m13_14  [key=2, style=dotted];
m13_264 -> m13_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_268 -> m13_269  [key=0, style=solid];
m13_268 -> m13_270  [key=2, style=dotted];
m13_265 -> m13_266  [key=0, style=solid];
m13_265 -> m13_20  [key=2, style=dotted];
m13_267 -> m13_268  [key=0, style=solid];
m13_266 -> m13_263  [color=blue, key=0, style=bold];
m13_269 -> m13_267  [color=blue, key=0, style=bold];
m13_274 -> m13_275  [key=0, style=solid];
m13_274 -> m13_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_275 -> m13_276  [key=0, style=solid];
m13_275 -> m13_14  [key=2, style=dotted];
m13_275 -> m13_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_279 -> m13_280  [key=0, style=solid];
m13_279 -> m13_270  [key=2, style=dotted];
m13_276 -> m13_277  [key=0, style=solid];
m13_276 -> m13_20  [key=2, style=dotted];
m13_278 -> m13_279  [key=0, style=solid];
m13_277 -> m13_274  [color=blue, key=0, style=bold];
m13_280 -> m13_278  [color=blue, key=0, style=bold];
m13_286 -> m13_287  [key=0, style=solid];
m13_286 -> m13_151  [key=2, style=dotted];
m13_286 -> m13_152  [key=2, style=dotted];
m13_285 -> m13_286  [key=0, style=solid];
m13_285 -> m13_288  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_285 -> m13_289  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_288 -> m13_289  [key=0, style=solid];
m13_288 -> m13_270  [key=2, style=dotted];
m13_289 -> m13_290  [key=0, style=solid];
m13_289 -> m13_151  [key=2, style=dotted];
m13_289 -> m13_152  [key=2, style=dotted];
m13_287 -> m13_288  [key=0, style=solid];
m13_287 -> m13_153  [key=2, style=dotted];
m13_287 -> m13_289  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_290 -> m13_291  [key=0, style=solid];
m13_290 -> m13_20  [key=2, style=dotted];
m13_291 -> m13_285  [color=blue, key=0, style=bold];
m13_297 -> m13_298  [key=0, style=solid];
m13_297 -> m13_151  [key=2, style=dotted];
m13_297 -> m13_152  [key=2, style=dotted];
m13_296 -> m13_297  [key=0, style=solid];
m13_296 -> m13_299  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_296 -> m13_300  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_296 -> m13_301  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_299 -> m13_300  [key=0, style=solid];
m13_299 -> m13_270  [key=2, style=dotted];
m13_300 -> m13_301  [key=0, style=solid];
m13_300 -> m13_270  [key=2, style=dotted];
m13_301 -> m13_302  [key=0, style=solid];
m13_301 -> m13_151  [key=2, style=dotted];
m13_301 -> m13_152  [key=2, style=dotted];
m13_298 -> m13_299  [key=0, style=solid];
m13_298 -> m13_153  [key=2, style=dotted];
m13_298 -> m13_300  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_298 -> m13_301  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_302 -> m13_303  [key=0, style=solid];
m13_302 -> m13_20  [key=2, style=dotted];
m13_303 -> m13_296  [color=blue, key=0, style=bold];
m13_309 -> m13_310  [key=0, style=solid];
m13_309 -> m13_151  [key=2, style=dotted];
m13_309 -> m13_152  [key=2, style=dotted];
m13_308 -> m13_309  [key=0, style=solid];
m13_308 -> m13_311  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_308 -> m13_312  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_311 -> m13_312  [key=0, style=solid];
m13_311 -> m13_270  [key=2, style=dotted];
m13_312 -> m13_313  [key=0, style=solid];
m13_312 -> m13_151  [key=2, style=dotted];
m13_312 -> m13_152  [key=2, style=dotted];
m13_310 -> m13_311  [key=0, style=solid];
m13_310 -> m13_153  [key=2, style=dotted];
m13_310 -> m13_312  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m13_313 -> m13_314  [key=0, style=solid];
m13_313 -> m13_20  [key=2, style=dotted];
m13_314 -> m13_308  [color=blue, key=0, style=bold];
m13_318 -> m13_319  [key=0, style=solid];
m13_318 -> m13_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_319 -> m13_320  [key=0, style=solid];
m13_319 -> m13_14  [key=2, style=dotted];
m13_319 -> m13_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_323 -> m13_324  [key=0, style=solid];
m13_323 -> m13_325  [key=2, style=dotted];
m13_320 -> m13_321  [key=0, style=solid];
m13_320 -> m13_20  [key=2, style=dotted];
m13_322 -> m13_323  [key=0, style=solid];
m13_321 -> m13_318  [color=blue, key=0, style=bold];
m13_324 -> m13_322  [color=blue, key=0, style=bold];
m13_329 -> m13_330  [key=0, style=solid];
m13_329 -> m13_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_330 -> m13_331  [key=0, style=solid];
m13_330 -> m13_14  [key=2, style=dotted];
m13_330 -> m13_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_334 -> m13_335  [key=0, style=solid];
m13_334 -> m13_325  [key=2, style=dotted];
m13_331 -> m13_332  [key=0, style=solid];
m13_331 -> m13_20  [key=2, style=dotted];
m13_333 -> m13_334  [key=0, style=solid];
m13_332 -> m13_329  [color=blue, key=0, style=bold];
m13_335 -> m13_333  [color=blue, key=0, style=bold];
m13_339 -> m13_340  [key=0, style=solid];
m13_340 -> m13_341  [key=0, style=solid];
m13_340 -> m13_325  [key=2, style=dotted];
m13_341 -> m13_342  [key=0, style=solid];
m13_341 -> m13_186  [key=2, style=dotted];
m13_342 -> m13_339  [color=blue, key=0, style=bold];
m13_348 -> m13_349  [key=0, style=solid];
m13_348 -> m13_14  [key=2, style=dotted];
m13_348 -> m13_152  [key=2, style=dotted];
m13_347 -> m13_348  [key=0, style=solid];
m13_347 -> m13_349  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_349 -> m13_350  [key=0, style=solid];
m13_349 -> m13_153  [key=2, style=dotted];
m13_349 -> m13_352  [key=2, style=dotted];
m13_350 -> m13_351  [key=0, style=solid];
m13_350 -> m13_20  [key=2, style=dotted];
m13_351 -> m13_347  [color=blue, key=0, style=bold];
m13_356 -> m13_357  [key=0, style=solid];
m13_356 -> m13_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_357 -> m13_358  [key=0, style=solid];
m13_357 -> m13_14  [key=2, style=dotted];
m13_357 -> m13_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_361 -> m13_362  [key=0, style=solid];
m13_361 -> m13_363  [key=2, style=dotted];
m13_358 -> m13_359  [key=0, style=solid];
m13_358 -> m13_20  [key=2, style=dotted];
m13_360 -> m13_361  [key=0, style=solid];
m13_359 -> m13_356  [color=blue, key=0, style=bold];
m13_362 -> m13_360  [color=blue, key=0, style=bold];
m13_367 -> m13_368  [key=0, style=solid];
m13_367 -> m13_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_368 -> m13_369  [key=0, style=solid];
m13_368 -> m13_14  [key=2, style=dotted];
m13_368 -> m13_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_371 -> m13_372  [key=0, style=solid];
m13_371 -> m13_363  [key=2, style=dotted];
m13_369 -> m13_367  [color=blue, key=0, style=bold];
m13_370 -> m13_371  [key=0, style=solid];
m13_372 -> m13_370  [color=blue, key=0, style=bold];
m13_376 -> m13_377  [key=0, style=solid];
m13_377 -> m13_378  [key=0, style=solid];
m13_377 -> m13_363  [key=2, style=dotted];
m13_378 -> m13_379  [key=0, style=solid];
m13_378 -> m13_186  [key=2, style=dotted];
m13_379 -> m13_376  [color=blue, key=0, style=bold];
m13_385 -> m13_386  [key=0, style=solid];
m13_385 -> m13_389  [key=2, style=dotted];
m13_384 -> m13_385  [key=0, style=solid];
m13_384 -> m13_386  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_386 -> m13_387  [key=0, style=solid];
m13_386 -> m13_363  [key=2, style=dotted];
m13_387 -> m13_388  [key=0, style=solid];
m13_387 -> m13_20  [key=2, style=dotted];
m13_388 -> m13_384  [color=blue, key=0, style=bold];
m13_393 -> m13_394  [key=0, style=solid];
m13_393 -> m13_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_394 -> m13_395  [key=0, style=solid];
m13_394 -> m13_14  [key=2, style=dotted];
m13_394 -> m13_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_398 -> m13_399  [key=0, style=solid];
m13_398 -> m13_400  [key=2, style=dotted];
m13_398 -> m13_401  [key=2, style=dotted];
m13_395 -> m13_396  [key=0, style=solid];
m13_395 -> m13_20  [key=2, style=dotted];
m13_397 -> m13_398  [key=0, style=solid];
m13_396 -> m13_393  [color=blue, key=0, style=bold];
m13_399 -> m13_397  [color=blue, key=0, style=bold];
m13_405 -> m13_406  [key=0, style=solid];
m13_405 -> m13_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_406 -> m13_407  [key=0, style=solid];
m13_406 -> m13_14  [key=2, style=dotted];
m13_406 -> m13_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_410 -> m13_411  [key=0, style=solid];
m13_410 -> m13_401  [key=2, style=dotted];
m13_407 -> m13_408  [key=0, style=solid];
m13_407 -> m13_20  [key=2, style=dotted];
m13_409 -> m13_410  [key=0, style=solid];
m13_408 -> m13_405  [color=blue, key=0, style=bold];
m13_411 -> m13_409  [color=blue, key=0, style=bold];
m13_415 -> m13_416  [key=0, style=solid];
m13_415 -> m13_417  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_415 -> m13_418  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_415 -> m13_423  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_415 -> m13_424  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_416 -> m13_417  [key=0, style=solid];
m13_416 -> m13_400  [key=2, style=dotted];
m13_417 -> m13_418  [key=0, style=solid];
m13_417 -> m13_401  [key=2, style=dotted];
m13_418 -> m13_419  [key=0, style=solid];
m13_418 -> m13_151  [key=2, style=dotted];
m13_418 -> m13_152  [key=2, style=dotted];
m13_418 -> m13_420  [color=darkseagreen4, key=1, label=server, style=dashed];
m13_418 -> m13_421  [color=darkseagreen4, key=1, label=server, style=dashed];
m13_423 -> m13_424  [key=0, style=solid];
m13_423 -> m13_401  [key=2, style=dotted];
m13_424 -> m13_425  [key=0, style=solid];
m13_424 -> m13_151  [key=2, style=dotted];
m13_424 -> m13_152  [key=2, style=dotted];
m13_424 -> m13_426  [color=darkseagreen4, key=1, label=sameServer, style=dashed];
m13_419 -> m13_420  [key=0, style=solid];
m13_419 -> m13_20  [key=2, style=dotted];
m13_420 -> m13_421  [key=0, style=solid];
m13_420 -> m13_428  [key=2, style=dotted];
m13_420 -> m13_158  [key=2, style=dotted];
m13_421 -> m13_422  [key=0, style=solid];
m13_421 -> m13_85  [key=2, style=dotted];
m13_422 -> m13_423  [key=0, style=solid];
m13_422 -> m13_400  [key=2, style=dotted];
m13_425 -> m13_426  [key=0, style=solid];
m13_425 -> m13_20  [key=2, style=dotted];
m13_426 -> m13_427  [key=0, style=solid];
m13_426 -> m13_429  [key=2, style=dotted];
m13_427 -> m13_415  [color=blue, key=0, style=bold];
m13_433 -> m13_434  [key=0, style=solid];
m13_433 -> m13_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_434 -> m13_435  [key=0, style=solid];
m13_434 -> m13_14  [key=2, style=dotted];
m13_434 -> m13_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_437 -> m13_438  [key=0, style=solid];
m13_437 -> m13_439  [key=2, style=dotted];
m13_435 -> m13_433  [color=blue, key=0, style=bold];
m13_436 -> m13_437  [key=0, style=solid];
m13_438 -> m13_436  [color=blue, key=0, style=bold];
m13_445 -> m13_446  [key=0, style=solid];
m13_445 -> m13_389  [key=2, style=dotted];
m13_444 -> m13_445  [key=0, style=solid];
m13_444 -> m13_446  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_444 -> m13_447  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_446 -> m13_447  [key=0, style=solid];
m13_446 -> m13_439  [key=2, style=dotted];
m13_447 -> m13_448  [key=0, style=solid];
m13_447 -> m13_151  [key=2, style=dotted];
m13_447 -> m13_152  [key=2, style=dotted];
m13_448 -> m13_449  [key=0, style=solid];
m13_448 -> m13_450  [key=2, style=dotted];
m13_449 -> m13_444  [color=blue, key=0, style=bold];
m13_454 -> m13_455  [key=0, style=solid];
m13_454 -> m13_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_455 -> m13_456  [key=0, style=solid];
m13_455 -> m13_14  [key=2, style=dotted];
m13_455 -> m13_457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_458 -> m13_459  [key=0, style=solid];
m13_458 -> m13_460  [key=2, style=dotted];
m13_456 -> m13_454  [color=blue, key=0, style=bold];
m13_457 -> m13_458  [key=0, style=solid];
m13_459 -> m13_457  [color=blue, key=0, style=bold];
m13_466 -> m13_467  [key=0, style=solid];
m13_466 -> m13_389  [key=2, style=dotted];
m13_465 -> m13_466  [key=0, style=solid];
m13_465 -> m13_467  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_465 -> m13_468  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_467 -> m13_468  [key=0, style=solid];
m13_467 -> m13_460  [key=2, style=dotted];
m13_468 -> m13_469  [key=0, style=solid];
m13_468 -> m13_151  [key=2, style=dotted];
m13_468 -> m13_159  [key=2, style=dotted];
m13_468 -> m13_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_468 -> m13_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_468 -> m13_470  [color=darkseagreen4, key=1, label=servers, style=dashed];
m13_469 -> m13_470  [key=0, style=solid];
m13_469 -> m13_450  [key=2, style=dotted];
m13_472 -> m13_473  [key=0, style=solid];
m13_475 -> m13_476  [key=0, style=solid];
m13_470 -> m13_471  [key=0, style=solid];
m13_470 -> m13_20  [key=2, style=dotted];
m13_471 -> m13_465  [color=blue, key=0, style=bold];
m13_473 -> m13_474  [key=0, style=solid];
m13_474 -> m13_472  [color=blue, key=0, style=bold];
m13_476 -> m13_477  [key=0, style=solid];
m13_477 -> m13_475  [color=blue, key=0, style=bold];
m13_481 -> m13_482  [key=0, style=solid];
m13_481 -> m13_485  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_482 -> m13_483  [key=0, style=solid];
m13_482 -> m13_14  [key=2, style=dotted];
m13_482 -> m13_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_485 -> m13_486  [key=0, style=solid];
m13_485 -> m13_487  [key=2, style=dotted];
m13_485 -> m13_488  [key=2, style=dotted];
m13_483 -> m13_481  [color=blue, key=0, style=bold];
m13_484 -> m13_485  [key=0, style=solid];
m13_486 -> m13_484  [color=blue, key=0, style=bold];
m13_494 -> m13_495  [key=0, style=solid];
m13_494 -> m13_156  [key=2, style=dotted];
m13_494 -> m13_499  [key=2, style=dotted];
m13_494 -> m13_389  [key=2, style=dotted];
m13_493 -> m13_494  [key=0, style=solid];
m13_493 -> m13_495  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_493 -> m13_496  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_495 -> m13_496  [key=0, style=solid];
m13_495 -> m13_500  [key=2, style=dotted];
m13_495 -> m13_488  [key=2, style=dotted];
m13_496 -> m13_497  [key=0, style=solid];
m13_496 -> m13_151  [key=2, style=dotted];
m13_496 -> m13_152  [key=2, style=dotted];
m13_497 -> m13_498  [key=0, style=solid];
m13_497 -> m13_20  [key=2, style=dotted];
m13_498 -> m13_493  [color=blue, key=0, style=bold];
m13_504 -> m13_505  [key=0, style=solid];
m13_504 -> m13_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_505 -> m13_506  [key=0, style=solid];
m13_505 -> m13_14  [key=2, style=dotted];
m13_505 -> m13_507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_508 -> m13_509  [key=0, style=solid];
m13_508 -> m13_510  [key=2, style=dotted];
m13_506 -> m13_504  [color=blue, key=0, style=bold];
m13_507 -> m13_508  [key=0, style=solid];
m13_509 -> m13_507  [color=blue, key=0, style=bold];
m13_514 -> m13_515  [key=0, style=solid];
m13_515 -> m13_516  [key=0, style=solid];
m13_515 -> m13_510  [key=2, style=dotted];
m13_515 -> m13_517  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_516 -> m13_517  [key=0, style=solid];
m13_516 -> m13_85  [key=2, style=dotted];
m13_517 -> m13_518  [key=0, style=solid];
m13_517 -> m13_20  [key=2, style=dotted];
m13_518 -> m13_514  [color=blue, key=0, style=bold];
m13_524 -> m13_525  [key=0, style=solid];
m13_524 -> m13_389  [key=2, style=dotted];
m13_523 -> m13_524  [key=0, style=solid];
m13_523 -> m13_525  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_525 -> m13_526  [key=0, style=solid];
m13_525 -> m13_510  [key=2, style=dotted];
m13_525 -> m13_527  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_525 -> m13_528  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_526 -> m13_527  [key=0, style=solid];
m13_526 -> m13_20  [key=2, style=dotted];
m13_527 -> m13_528  [key=0, style=solid];
m13_527 -> m13_429  [key=2, style=dotted];
m13_528 -> m13_529  [key=0, style=solid];
m13_528 -> m13_429  [key=2, style=dotted];
m13_529 -> m13_523  [color=blue, key=0, style=bold];
m13_533 -> m13_534  [key=0, style=solid];
m13_533 -> m13_538  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_534 -> m13_535  [key=0, style=solid];
m13_534 -> m13_14  [key=2, style=dotted];
m13_534 -> m13_537  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_538 -> m13_539  [key=0, style=solid];
m13_538 -> m13_105  [key=2, style=dotted];
m13_538 -> m13_540  [key=2, style=dotted];
m13_535 -> m13_536  [key=0, style=solid];
m13_535 -> m13_20  [key=2, style=dotted];
m13_537 -> m13_538  [key=0, style=solid];
m13_536 -> m13_533  [color=blue, key=0, style=bold];
m13_539 -> m13_537  [color=blue, key=0, style=bold];
m13_544 -> m13_545  [key=0, style=solid];
m13_544 -> m13_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_545 -> m13_546  [key=0, style=solid];
m13_545 -> m13_14  [key=2, style=dotted];
m13_545 -> m13_548  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_549 -> m13_550  [key=0, style=solid];
m13_549 -> m13_540  [key=2, style=dotted];
m13_546 -> m13_547  [key=0, style=solid];
m13_546 -> m13_20  [key=2, style=dotted];
m13_548 -> m13_549  [key=0, style=solid];
m13_547 -> m13_544  [color=blue, key=0, style=bold];
m13_550 -> m13_548  [color=blue, key=0, style=bold];
m13_554 -> m13_555  [key=0, style=solid];
m13_554 -> m13_556  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m13_555 -> m13_556  [key=0, style=solid];
m13_555 -> m13_105  [key=2, style=dotted];
m13_555 -> m13_540  [key=2, style=dotted];
m13_556 -> m13_557  [key=0, style=solid];
m13_556 -> m13_151  [key=2, style=dotted];
m13_556 -> m13_159  [key=2, style=dotted];
m13_556 -> m13_560  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_556 -> m13_563  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_556 -> m13_558  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_557 -> m13_558  [key=0, style=solid];
m13_557 -> m13_20  [key=2, style=dotted];
m13_560 -> m13_561  [key=0, style=solid];
m13_563 -> m13_564  [key=0, style=solid];
m13_558 -> m13_559  [key=0, style=solid];
m13_558 -> m13_20  [key=2, style=dotted];
m13_559 -> m13_554  [color=blue, key=0, style=bold];
m13_561 -> m13_562  [key=0, style=solid];
m13_562 -> m13_560  [color=blue, key=0, style=bold];
m13_564 -> m13_565  [key=0, style=solid];
m13_565 -> m13_563  [color=blue, key=0, style=bold];
m13_569 -> m13_570  [key=0, style=solid];
m13_569 -> m13_573  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_570 -> m13_571  [key=0, style=solid];
m13_570 -> m13_14  [key=2, style=dotted];
m13_570 -> m13_572  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_573 -> m13_574  [key=0, style=solid];
m13_573 -> m13_575  [key=2, style=dotted];
m13_571 -> m13_569  [color=blue, key=0, style=bold];
m13_572 -> m13_573  [key=0, style=solid];
m13_574 -> m13_572  [color=blue, key=0, style=bold];
m13_579 -> m13_580  [key=0, style=solid];
m13_580 -> m13_581  [key=0, style=solid];
m13_580 -> m13_575  [key=2, style=dotted];
m13_581 -> m13_582  [key=0, style=solid];
m13_581 -> m13_186  [key=2, style=dotted];
m13_582 -> m13_579  [color=blue, key=0, style=bold];
m13_588 -> m13_589  [key=0, style=solid];
m13_588 -> m13_389  [key=2, style=dotted];
m13_587 -> m13_588  [key=0, style=solid];
m13_587 -> m13_589  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_589 -> m13_590  [key=0, style=solid];
m13_589 -> m13_575  [key=2, style=dotted];
m13_589 -> m13_591  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_589 -> m13_592  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_589 -> m13_593  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_590 -> m13_591  [key=0, style=solid];
m13_590 -> m13_85  [key=2, style=dotted];
m13_591 -> m13_592  [key=0, style=solid];
m13_591 -> m13_20  [key=2, style=dotted];
m13_592 -> m13_593  [key=0, style=solid];
m13_592 -> m13_20  [key=2, style=dotted];
m13_593 -> m13_594  [key=0, style=solid];
m13_593 -> m13_20  [key=2, style=dotted];
m13_594 -> m13_587  [color=blue, key=0, style=bold];
m13_598 -> m13_599  [key=0, style=solid];
m13_598 -> m13_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_599 -> m13_600  [key=0, style=solid];
m13_599 -> m13_14  [key=2, style=dotted];
m13_599 -> m13_601  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_602 -> m13_603  [key=0, style=solid];
m13_602 -> m13_604  [key=2, style=dotted];
m13_600 -> m13_598  [color=blue, key=0, style=bold];
m13_601 -> m13_602  [key=0, style=solid];
m13_603 -> m13_601  [color=blue, key=0, style=bold];
m13_608 -> m13_609  [key=0, style=solid];
m13_609 -> m13_610  [key=0, style=solid];
m13_609 -> m13_604  [key=2, style=dotted];
m13_610 -> m13_611  [key=0, style=solid];
m13_610 -> m13_20  [key=2, style=dotted];
m13_611 -> m13_608  [color=blue, key=0, style=bold];
m13_617 -> m13_618  [key=0, style=solid];
m13_617 -> m13_621  [key=2, style=dotted];
m13_617 -> m13_389  [key=2, style=dotted];
m13_616 -> m13_617  [key=0, style=solid];
m13_616 -> m13_618  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_618 -> m13_619  [key=0, style=solid];
m13_618 -> m13_604  [key=2, style=dotted];
m13_619 -> m13_620  [key=0, style=solid];
m13_619 -> m13_20  [key=2, style=dotted];
m13_620 -> m13_616  [color=blue, key=0, style=bold];
m13_625 -> m13_626  [key=0, style=solid];
m13_625 -> m13_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_626 -> m13_627  [key=0, style=solid];
m13_626 -> m13_14  [key=2, style=dotted];
m13_626 -> m13_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_629 -> m13_630  [key=0, style=solid];
m13_629 -> m13_631  [key=2, style=dotted];
m13_627 -> m13_625  [color=blue, key=0, style=bold];
m13_628 -> m13_629  [key=0, style=solid];
m13_630 -> m13_628  [color=blue, key=0, style=bold];
m13_637 -> m13_638  [key=0, style=solid];
m13_637 -> m13_621  [key=2, style=dotted];
m13_637 -> m13_389  [key=2, style=dotted];
m13_636 -> m13_637  [key=0, style=solid];
m13_636 -> m13_638  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_638 -> m13_639  [key=0, style=solid];
m13_638 -> m13_631  [key=2, style=dotted];
m13_639 -> m13_640  [key=0, style=solid];
m13_639 -> m13_20  [key=2, style=dotted];
m13_640 -> m13_636  [color=blue, key=0, style=bold];
m13_644 -> m13_645  [key=0, style=solid];
m13_644 -> m13_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_645 -> m13_646  [key=0, style=solid];
m13_645 -> m13_14  [key=2, style=dotted];
m13_645 -> m13_647  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_648 -> m13_649  [key=0, style=solid];
m13_648 -> m13_650  [key=2, style=dotted];
m13_646 -> m13_644  [color=blue, key=0, style=bold];
m13_647 -> m13_648  [key=0, style=solid];
m13_649 -> m13_647  [color=blue, key=0, style=bold];
m13_654 -> m13_655  [key=0, style=solid];
m13_655 -> m13_656  [key=0, style=solid];
m13_655 -> m13_650  [key=2, style=dotted];
m13_656 -> m13_657  [key=0, style=solid];
m13_656 -> m13_20  [key=2, style=dotted];
m13_657 -> m13_654  [color=blue, key=0, style=bold];
m13_663 -> m13_664  [key=0, style=solid];
m13_663 -> m13_389  [key=2, style=dotted];
m13_662 -> m13_663  [key=0, style=solid];
m13_662 -> m13_664  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_664 -> m13_665  [key=0, style=solid];
m13_664 -> m13_650  [key=2, style=dotted];
m13_665 -> m13_666  [key=0, style=solid];
m13_665 -> m13_20  [key=2, style=dotted];
m13_666 -> m13_662  [color=blue, key=0, style=bold];
m13_672 -> m13_673  [key=0, style=solid];
m13_672 -> m13_389  [key=2, style=dotted];
m13_671 -> m13_672  [key=0, style=solid];
m13_671 -> m13_673  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_673 -> m13_674  [key=0, style=solid];
m13_673 -> m13_650  [key=2, style=dotted];
m13_674 -> m13_675  [key=0, style=solid];
m13_674 -> m13_20  [key=2, style=dotted];
m13_675 -> m13_671  [color=blue, key=0, style=bold];
m13_679 -> m13_680  [key=0, style=solid];
m13_679 -> m13_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_680 -> m13_681  [key=0, style=solid];
m13_680 -> m13_14  [key=2, style=dotted];
m13_680 -> m13_682  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_683 -> m13_684  [key=0, style=solid];
m13_683 -> m13_685  [key=2, style=dotted];
m13_681 -> m13_679  [color=blue, key=0, style=bold];
m13_682 -> m13_683  [key=0, style=solid];
m13_684 -> m13_682  [color=blue, key=0, style=bold];
m13_689 -> m13_690  [key=0, style=solid];
m13_690 -> m13_691  [key=0, style=solid];
m13_690 -> m13_685  [key=2, style=dotted];
m13_691 -> m13_692  [key=0, style=solid];
m13_691 -> m13_20  [key=2, style=dotted];
m13_692 -> m13_689  [color=blue, key=0, style=bold];
m13_698 -> m13_699  [key=0, style=solid];
m13_698 -> m13_389  [key=2, style=dotted];
m13_697 -> m13_698  [key=0, style=solid];
m13_697 -> m13_699  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_699 -> m13_700  [key=0, style=solid];
m13_699 -> m13_685  [key=2, style=dotted];
m13_700 -> m13_701  [key=0, style=solid];
m13_700 -> m13_20  [key=2, style=dotted];
m13_701 -> m13_697  [color=blue, key=0, style=bold];
m13_705 -> m13_706  [key=0, style=solid];
m13_705 -> m13_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_706 -> m13_707  [key=0, style=solid];
m13_706 -> m13_14  [key=2, style=dotted];
m13_706 -> m13_708  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_709 -> m13_710  [key=0, style=solid];
m13_709 -> m13_711  [key=2, style=dotted];
m13_707 -> m13_705  [color=blue, key=0, style=bold];
m13_708 -> m13_709  [key=0, style=solid];
m13_710 -> m13_708  [color=blue, key=0, style=bold];
m13_715 -> m13_716  [key=0, style=solid];
m13_716 -> m13_717  [key=0, style=solid];
m13_716 -> m13_711  [key=2, style=dotted];
m13_717 -> m13_718  [key=0, style=solid];
m13_717 -> m13_158  [key=2, style=dotted];
m13_718 -> m13_715  [color=blue, key=0, style=bold];
m13_724 -> m13_725  [key=0, style=solid];
m13_724 -> m13_499  [key=2, style=dotted];
m13_724 -> m13_389  [key=2, style=dotted];
m13_723 -> m13_724  [key=0, style=solid];
m13_723 -> m13_725  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_725 -> m13_726  [key=0, style=solid];
m13_725 -> m13_711  [key=2, style=dotted];
m13_725 -> m13_727  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_726 -> m13_727  [key=0, style=solid];
m13_726 -> m13_487  [key=2, style=dotted];
m13_726 -> m13_158  [key=2, style=dotted];
m13_727 -> m13_728  [key=0, style=solid];
m13_727 -> m13_487  [key=2, style=dotted];
m13_727 -> m13_158  [key=2, style=dotted];
m13_728 -> m13_723  [color=blue, key=0, style=bold];
m13_732 -> m13_733  [key=0, style=solid];
m13_732 -> m13_736  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_733 -> m13_734  [key=0, style=solid];
m13_733 -> m13_14  [key=2, style=dotted];
m13_733 -> m13_735  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_736 -> m13_737  [key=0, style=solid];
m13_736 -> m13_738  [key=2, style=dotted];
m13_734 -> m13_732  [color=blue, key=0, style=bold];
m13_735 -> m13_736  [key=0, style=solid];
m13_737 -> m13_735  [color=blue, key=0, style=bold];
m13_742 -> m13_743  [key=0, style=solid];
m13_743 -> m13_744  [key=0, style=solid];
m13_743 -> m13_738  [key=2, style=dotted];
m13_744 -> m13_745  [key=0, style=solid];
m13_744 -> m13_20  [key=2, style=dotted];
m13_745 -> m13_742  [color=blue, key=0, style=bold];
m13_751 -> m13_752  [key=0, style=solid];
m13_751 -> m13_389  [key=2, style=dotted];
m13_750 -> m13_751  [key=0, style=solid];
m13_750 -> m13_752  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_752 -> m13_753  [key=0, style=solid];
m13_752 -> m13_738  [key=2, style=dotted];
m13_753 -> m13_754  [key=0, style=solid];
m13_753 -> m13_20  [key=2, style=dotted];
m13_754 -> m13_750  [color=blue, key=0, style=bold];
m13_758 -> m13_759  [key=0, style=solid];
m13_758 -> m13_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_759 -> m13_760  [key=0, style=solid];
m13_759 -> m13_14  [key=2, style=dotted];
m13_759 -> m13_761  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_762 -> m13_763  [key=0, style=solid];
m13_762 -> m13_764  [key=2, style=dotted];
m13_760 -> m13_758  [color=blue, key=0, style=bold];
m13_761 -> m13_762  [key=0, style=solid];
m13_763 -> m13_761  [color=blue, key=0, style=bold];
m13_768 -> m13_769  [key=0, style=solid];
m13_769 -> m13_770  [key=0, style=solid];
m13_769 -> m13_764  [key=2, style=dotted];
m13_770 -> m13_771  [key=0, style=solid];
m13_770 -> m13_158  [key=2, style=dotted];
m13_771 -> m13_768  [color=blue, key=0, style=bold];
m13_777 -> m13_778  [key=0, style=solid];
m13_777 -> m13_499  [key=2, style=dotted];
m13_777 -> m13_389  [key=2, style=dotted];
m13_776 -> m13_777  [key=0, style=solid];
m13_776 -> m13_778  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_778 -> m13_779  [key=0, style=solid];
m13_778 -> m13_764  [key=2, style=dotted];
m13_778 -> m13_780  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_779 -> m13_780  [key=0, style=solid];
m13_779 -> m13_487  [key=2, style=dotted];
m13_779 -> m13_158  [key=2, style=dotted];
m13_780 -> m13_781  [key=0, style=solid];
m13_780 -> m13_487  [key=2, style=dotted];
m13_780 -> m13_158  [key=2, style=dotted];
m13_781 -> m13_776  [color=blue, key=0, style=bold];
m13_785 -> m13_786  [key=0, style=solid];
m13_785 -> m13_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_786 -> m13_787  [key=0, style=solid];
m13_786 -> m13_14  [key=2, style=dotted];
m13_786 -> m13_789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_790 -> m13_791  [key=0, style=solid];
m13_790 -> m13_792  [key=2, style=dotted];
m13_787 -> m13_788  [key=0, style=solid];
m13_787 -> m13_20  [key=2, style=dotted];
m13_789 -> m13_790  [key=0, style=solid];
m13_788 -> m13_785  [color=blue, key=0, style=bold];
m13_791 -> m13_789  [color=blue, key=0, style=bold];
m13_796 -> m13_797  [key=0, style=solid];
m13_796 -> m13_801  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_797 -> m13_798  [key=0, style=solid];
m13_797 -> m13_14  [key=2, style=dotted];
m13_797 -> m13_800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_801 -> m13_802  [key=0, style=solid];
m13_801 -> m13_792  [key=2, style=dotted];
m13_798 -> m13_799  [key=0, style=solid];
m13_798 -> m13_20  [key=2, style=dotted];
m13_800 -> m13_801  [key=0, style=solid];
m13_799 -> m13_796  [color=blue, key=0, style=bold];
m13_802 -> m13_800  [color=blue, key=0, style=bold];
m13_806 -> m13_807  [key=0, style=solid];
m13_807 -> m13_808  [key=0, style=solid];
m13_807 -> m13_792  [key=2, style=dotted];
m13_808 -> m13_809  [key=0, style=solid];
m13_808 -> m13_186  [key=2, style=dotted];
m13_809 -> m13_806  [color=blue, key=0, style=bold];
m13_815 -> m13_816  [key=0, style=solid];
m13_815 -> m13_389  [key=2, style=dotted];
m13_814 -> m13_815  [key=0, style=solid];
m13_814 -> m13_816  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_816 -> m13_817  [key=0, style=solid];
m13_816 -> m13_792  [key=2, style=dotted];
m13_817 -> m13_818  [key=0, style=solid];
m13_817 -> m13_20  [key=2, style=dotted];
m13_818 -> m13_814  [color=blue, key=0, style=bold];
m13_822 -> m13_823  [key=0, style=solid];
m13_822 -> m13_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_823 -> m13_824  [key=0, style=solid];
m13_823 -> m13_14  [key=2, style=dotted];
m13_823 -> m13_826  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_827 -> m13_828  [key=0, style=solid];
m13_827 -> m13_829  [key=2, style=dotted];
m13_824 -> m13_825  [key=0, style=solid];
m13_824 -> m13_20  [key=2, style=dotted];
m13_826 -> m13_827  [key=0, style=solid];
m13_825 -> m13_822  [color=blue, key=0, style=bold];
m13_828 -> m13_826  [color=blue, key=0, style=bold];
m13_833 -> m13_834  [key=0, style=solid];
m13_834 -> m13_835  [key=0, style=solid];
m13_834 -> m13_829  [key=2, style=dotted];
m13_835 -> m13_836  [key=0, style=solid];
m13_835 -> m13_837  [key=2, style=dotted];
m13_836 -> m13_833  [color=blue, key=0, style=bold];
m13_843 -> m13_844  [key=0, style=solid];
m13_843 -> m13_389  [key=2, style=dotted];
m13_842 -> m13_843  [key=0, style=solid];
m13_842 -> m13_844  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_844 -> m13_845  [key=0, style=solid];
m13_844 -> m13_829  [key=2, style=dotted];
m13_845 -> m13_846  [key=0, style=solid];
m13_845 -> m13_20  [key=2, style=dotted];
m13_846 -> m13_842  [color=blue, key=0, style=bold];
m13_850 -> m13_851  [key=0, style=solid];
m13_850 -> m13_854  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_851 -> m13_852  [key=0, style=solid];
m13_851 -> m13_14  [key=2, style=dotted];
m13_851 -> m13_853  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_854 -> m13_855  [key=0, style=solid];
m13_854 -> m13_856  [key=2, style=dotted];
m13_852 -> m13_850  [color=blue, key=0, style=bold];
m13_853 -> m13_854  [key=0, style=solid];
m13_855 -> m13_853  [color=blue, key=0, style=bold];
m13_860 -> m13_861  [key=0, style=solid];
m13_861 -> m13_862  [key=0, style=solid];
m13_861 -> m13_856  [key=2, style=dotted];
m13_862 -> m13_863  [key=0, style=solid];
m13_862 -> m13_837  [key=2, style=dotted];
m13_863 -> m13_860  [color=blue, key=0, style=bold];
m13_869 -> m13_870  [key=0, style=solid];
m13_869 -> m13_389  [key=2, style=dotted];
m13_868 -> m13_869  [key=0, style=solid];
m13_868 -> m13_870  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_870 -> m13_871  [key=0, style=solid];
m13_870 -> m13_856  [key=2, style=dotted];
m13_871 -> m13_872  [key=0, style=solid];
m13_871 -> m13_20  [key=2, style=dotted];
m13_872 -> m13_868  [color=blue, key=0, style=bold];
m13_876 -> m13_877  [key=0, style=solid];
m13_876 -> m13_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_877 -> m13_878  [key=0, style=solid];
m13_877 -> m13_14  [key=2, style=dotted];
m13_877 -> m13_879  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_880 -> m13_881  [key=0, style=solid];
m13_880 -> m13_882  [key=2, style=dotted];
m13_878 -> m13_876  [color=blue, key=0, style=bold];
m13_879 -> m13_880  [key=0, style=solid];
m13_881 -> m13_879  [color=blue, key=0, style=bold];
m13_886 -> m13_887  [key=0, style=solid];
m13_887 -> m13_888  [key=0, style=solid];
m13_887 -> m13_882  [key=2, style=dotted];
m13_888 -> m13_889  [key=0, style=solid];
m13_888 -> m13_158  [key=2, style=dotted];
m13_889 -> m13_886  [color=blue, key=0, style=bold];
m13_895 -> m13_896  [key=0, style=solid];
m13_895 -> m13_157  [key=2, style=dotted];
m13_895 -> m13_389  [key=2, style=dotted];
m13_896 -> m13_897  [key=0, style=solid];
m13_896 -> m13_882  [key=2, style=dotted];
m13_896 -> m13_898  [color=darkseagreen4, key=1, label=result, style=dashed];
m13_897 -> m13_898  [key=0, style=solid];
m13_897 -> m13_487  [key=2, style=dotted];
m13_897 -> m13_158  [key=2, style=dotted];
m13_898 -> m13_899  [key=0, style=solid];
m13_898 -> m13_487  [key=2, style=dotted];
m13_898 -> m13_158  [key=2, style=dotted];
m13_899 -> m13_894  [color=blue, key=0, style=bold];
m13_412 -> m13_413  [key=0, style=solid];
m13_413 -> m13_414  [key=0, style=solid];
m13_413 -> m13_125  [key=2, style=dotted];
m13_413 -> m13_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_414 -> m13_412  [color=blue, key=0, style=bold];
m13_693 -> m13_694  [key=0, style=solid];
m13_694 -> m13_695  [key=0, style=solid];
m13_694 -> m13_698  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_694 -> m13_694  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_695 -> m13_696  [key=0, style=solid];
m13_695 -> m13_125  [key=2, style=dotted];
m13_695 -> m13_697  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_696 -> m13_693  [color=blue, key=0, style=bold];
m13_390 -> m13_391  [key=0, style=solid];
m13_391 -> m13_392  [key=0, style=solid];
m13_391 -> m13_66  [key=2, style=dotted];
m13_391 -> m13_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_392 -> m13_390  [color=blue, key=0, style=bold];
m13_501 -> m13_502  [key=0, style=solid];
m13_502 -> m13_503  [key=0, style=solid];
m13_502 -> m13_66  [key=2, style=dotted];
m13_502 -> m13_504  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_503 -> m13_501  [color=blue, key=0, style=bold];
m13_900 -> m13_901  [key=0, style=solid];
m13_900 -> m13_903  [color=red, key=1, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m13_901 -> m13_902  [color=red, key=0, style=solid];
m13_901 -> m13_32  [key=2, style=dotted];
m13_901 -> m13_903  [color=red, key=1, label=sqlConnection, style=dashed];
m13_903 -> m13_904  [color=red, key=0, style=solid];
m13_903 -> m13_905  [color=red, key=2, style=dotted];
m13_902 -> m13_903  [color=red, key=0, style=solid];
m13_902 -> m13_24  [color=red, key=2, style=dotted];
m13_904 -> m13_900  [color=blue, key=0, style=bold];
m13_260 -> m13_261  [key=0, style=solid];
m13_261 -> m13_262  [key=0, style=solid];
m13_261 -> m13_66  [key=2, style=dotted];
m13_261 -> m13_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_262 -> m13_260  [color=blue, key=0, style=bold];
m13_179 -> m13_180  [key=0, style=solid];
m13_180 -> m13_181  [key=0, style=solid];
m13_180 -> m13_66  [key=2, style=dotted];
m13_180 -> m13_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_181 -> m13_179  [color=blue, key=0, style=bold];
m13_77 -> m13_78  [key=0, style=solid];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_66  [key=2, style=dotted];
m13_78 -> m13_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_79 -> m13_77  [color=blue, key=0, style=bold];
m13_336 -> m13_337  [key=0, style=solid];
m13_337 -> m13_338  [key=0, style=solid];
m13_337 -> m13_66  [key=2, style=dotted];
m13_337 -> m13_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_338 -> m13_336  [color=blue, key=0, style=bold];
m13_121 -> m13_910  [key=0, style=solid];
m13_121 -> m13_108  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m13_121 -> m13_123  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m13_121 -> m13_189  [color=darkorchid, key=3, label="Parameter variable string arg", style=bold];
m13_910 -> m13_121  [color=blue, key=0, style=bold];
m13_729 -> m13_730  [key=0, style=solid];
m13_730 -> m13_731  [key=0, style=solid];
m13_730 -> m13_66  [key=2, style=dotted];
m13_730 -> m13_732  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_731 -> m13_729  [color=blue, key=0, style=bold];
m13_530 -> m13_531  [key=0, style=solid];
m13_531 -> m13_532  [key=0, style=solid];
m13_531 -> m13_66  [key=2, style=dotted];
m13_531 -> m13_533  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_532 -> m13_530  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_6  [key=2, style=dotted];
m13_2 -> m13_3  [color=red, key=0, style=solid];
m13_2 -> m13_7  [key=2, style=dotted];
m13_2 -> m13_4  [color=darkseagreen4, key=1, label=provider, style=dashed];
m13_3 -> m13_4  [color=red, key=0, style=solid];
m13_3 -> m13_8  [color=red, key=2, style=dotted];
m13_3 -> m13_9  [color=red, key=2, style=dotted];
m13_3 -> m13_11  [color=red, key=1, label="lambda expression", style=dashed];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_10  [key=2, style=dotted];
m13_5 -> m13_0  [color=blue, key=0, style=bold];
m13_107 -> m13_108  [key=0, style=solid];
m13_108 -> m13_109  [key=0, style=solid];
m13_108 -> m13_66  [key=2, style=dotted];
m13_108 -> m13_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_109 -> m13_107  [color=blue, key=0, style=bold];
m13_612 -> m13_613  [key=0, style=solid];
m13_613 -> m13_614  [key=0, style=solid];
m13_613 -> m13_617  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_613 -> m13_613  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_614 -> m13_615  [key=0, style=solid];
m13_614 -> m13_125  [key=2, style=dotted];
m13_614 -> m13_616  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_615 -> m13_612  [color=blue, key=0, style=bold];
m13_765 -> m13_766  [key=0, style=solid];
m13_766 -> m13_767  [key=0, style=solid];
m13_766 -> m13_66  [key=2, style=dotted];
m13_766 -> m13_768  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_767 -> m13_765  [color=blue, key=0, style=bold];
m13_489 -> m13_490  [key=0, style=solid];
m13_490 -> m13_491  [key=0, style=solid];
m13_490 -> m13_494  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_490 -> m13_490  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_491 -> m13_492  [key=0, style=solid];
m13_491 -> m13_125  [key=2, style=dotted];
m13_491 -> m13_493  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_492 -> m13_489  [color=blue, key=0, style=bold];
m13_755 -> m13_756  [key=0, style=solid];
m13_756 -> m13_757  [key=0, style=solid];
m13_756 -> m13_66  [key=2, style=dotted];
m13_756 -> m13_758  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_757 -> m13_755  [color=blue, key=0, style=bold];
m13_226 -> m13_227  [key=0, style=solid];
m13_227 -> m13_228  [key=0, style=solid];
m13_227 -> m13_232  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_227 -> m13_227  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_228 -> m13_229  [key=0, style=solid];
m13_228 -> m13_125  [key=2, style=dotted];
m13_228 -> m13_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_229 -> m13_226  [color=blue, key=0, style=bold];
m13_803 -> m13_804  [key=0, style=solid];
m13_804 -> m13_805  [key=0, style=solid];
m13_804 -> m13_66  [key=2, style=dotted];
m13_804 -> m13_806  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_805 -> m13_803  [color=blue, key=0, style=bold];
m13_63 -> m13_64  [key=0, style=solid];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_66  [key=2, style=dotted];
m13_64 -> m13_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_65 -> m13_63  [color=blue, key=0, style=bold];
m13_676 -> m13_677  [key=0, style=solid];
m13_677 -> m13_678  [key=0, style=solid];
m13_677 -> m13_66  [key=2, style=dotted];
m13_677 -> m13_679  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_678 -> m13_676  [color=blue, key=0, style=bold];
m13_46 -> m13_47  [key=0, style=solid];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_49  [key=2, style=dotted];
m13_47 -> m13_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_48 -> m13_46  [color=blue, key=0, style=bold];
m13_519 -> m13_520  [key=0, style=solid];
m13_520 -> m13_521  [key=0, style=solid];
m13_520 -> m13_524  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_520 -> m13_520  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_521 -> m13_522  [key=0, style=solid];
m13_521 -> m13_125  [key=2, style=dotted];
m13_521 -> m13_523  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_522 -> m13_519  [color=blue, key=0, style=bold];
m13_541 -> m13_542  [key=0, style=solid];
m13_542 -> m13_543  [key=0, style=solid];
m13_542 -> m13_66  [key=2, style=dotted];
m13_542 -> m13_544  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_543 -> m13_541  [color=blue, key=0, style=bold];
m13_686 -> m13_687  [key=0, style=solid];
m13_687 -> m13_688  [key=0, style=solid];
m13_687 -> m13_66  [key=2, style=dotted];
m13_687 -> m13_689  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_688 -> m13_686  [color=blue, key=0, style=bold];
m13_702 -> m13_703  [key=0, style=solid];
m13_703 -> m13_704  [key=0, style=solid];
m13_703 -> m13_66  [key=2, style=dotted];
m13_703 -> m13_705  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_704 -> m13_702  [color=blue, key=0, style=bold];
m13_49 -> m13_906  [color=red, key=0, style=solid];
m13_49 -> m13_907  [color=red, key=1, label="System.Action<Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m13_49 -> m13_47  [color=darkorchid, key=3, label="Parameter variable System.Action<Hangfire.SqlServer.SqlServerConnection> action", style=bold];
m13_906 -> m13_907  [color=red, key=0, style=solid];
m13_906 -> m13_24  [color=red, key=2, style=dotted];
m13_906 -> m13_32  [color=red, key=2, style=dotted];
m13_907 -> m13_908  [color=red, key=0, style=solid];
m13_907 -> m13_909  [color=red, key=2, style=dotted];
m13_908 -> m13_49  [color=blue, key=0, style=bold];
m13_641 -> m13_642  [key=0, style=solid];
m13_642 -> m13_643  [key=0, style=solid];
m13_642 -> m13_66  [key=2, style=dotted];
m13_642 -> m13_644  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_643 -> m13_641  [color=blue, key=0, style=bold];
m13_819 -> m13_820  [key=0, style=solid];
m13_820 -> m13_821  [key=0, style=solid];
m13_820 -> m13_66  [key=2, style=dotted];
m13_820 -> m13_822  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_821 -> m13_819  [color=blue, key=0, style=bold];
m13_315 -> m13_316  [key=0, style=solid];
m13_316 -> m13_317  [key=0, style=solid];
m13_316 -> m13_66  [key=2, style=dotted];
m13_316 -> m13_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_317 -> m13_315  [color=blue, key=0, style=bold];
m13_838 -> m13_839  [key=0, style=solid];
m13_839 -> m13_840  [key=0, style=solid];
m13_839 -> m13_843  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_839 -> m13_839  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_840 -> m13_841  [key=0, style=solid];
m13_840 -> m13_125  [key=2, style=dotted];
m13_840 -> m13_842  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_841 -> m13_838  [color=blue, key=0, style=bold];
m13_95 -> m13_96  [key=0, style=solid];
m13_96 -> m13_97  [key=0, style=solid];
m13_96 -> m13_66  [key=2, style=dotted];
m13_96 -> m13_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_97 -> m13_95  [color=blue, key=0, style=bold];
m13_651 -> m13_652  [key=0, style=solid];
m13_652 -> m13_653  [key=0, style=solid];
m13_652 -> m13_66  [key=2, style=dotted];
m13_652 -> m13_654  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_653 -> m13_651  [color=blue, key=0, style=bold];
m13_873 -> m13_874  [key=0, style=solid];
m13_874 -> m13_875  [key=0, style=solid];
m13_874 -> m13_66  [key=2, style=dotted];
m13_874 -> m13_876  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_875 -> m13_873  [color=blue, key=0, style=bold];
m13_86 -> m13_87  [key=0, style=solid];
m13_87 -> m13_88  [key=0, style=solid];
m13_87 -> m13_66  [key=2, style=dotted];
m13_87 -> m13_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_88 -> m13_86  [color=blue, key=0, style=bold];
m13_595 -> m13_596  [key=0, style=solid];
m13_596 -> m13_597  [key=0, style=solid];
m13_596 -> m13_66  [key=2, style=dotted];
m13_596 -> m13_598  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_597 -> m13_595  [color=blue, key=0, style=bold];
m13_380 -> m13_381  [key=0, style=solid];
m13_381 -> m13_382  [key=0, style=solid];
m13_381 -> m13_385  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_381 -> m13_381  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_382 -> m13_383  [key=0, style=solid];
m13_382 -> m13_125  [key=2, style=dotted];
m13_382 -> m13_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_383 -> m13_380  [color=blue, key=0, style=bold];
m13_632 -> m13_633  [key=0, style=solid];
m13_633 -> m13_634  [key=0, style=solid];
m13_633 -> m13_637  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_633 -> m13_633  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_634 -> m13_635  [key=0, style=solid];
m13_634 -> m13_125  [key=2, style=dotted];
m13_634 -> m13_636  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_635 -> m13_632  [color=blue, key=0, style=bold];
m13_292 -> m13_293  [key=0, style=solid];
m13_293 -> m13_294  [key=0, style=solid];
m13_293 -> m13_297  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_293 -> m13_282  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_294 -> m13_295  [key=0, style=solid];
m13_294 -> m13_125  [key=2, style=dotted];
m13_294 -> m13_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_295 -> m13_292  [color=blue, key=0, style=bold];
m13_461 -> m13_462  [key=0, style=solid];
m13_462 -> m13_463  [key=0, style=solid];
m13_462 -> m13_466  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_462 -> m13_462  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_463 -> m13_464  [key=0, style=solid];
m13_463 -> m13_125  [key=2, style=dotted];
m13_463 -> m13_465  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_464 -> m13_461  [color=blue, key=0, style=bold];
m13_830 -> m13_831  [key=0, style=solid];
m13_831 -> m13_832  [key=0, style=solid];
m13_831 -> m13_66  [key=2, style=dotted];
m13_831 -> m13_833  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_832 -> m13_830  [color=blue, key=0, style=bold];
m13_551 -> m13_552  [key=0, style=solid];
m13_552 -> m13_553  [key=0, style=solid];
m13_552 -> m13_125  [key=2, style=dotted];
m13_552 -> m13_554  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_553 -> m13_551  [color=blue, key=0, style=bold];
m13_187 -> m13_188  [key=0, style=solid];
m13_188 -> m13_189  [key=0, style=solid];
m13_188 -> m13_193  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_188 -> m13_188  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_189 -> m13_190  [key=0, style=solid];
m13_189 -> m13_125  [key=2, style=dotted];
m13_189 -> m13_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_190 -> m13_187  [color=blue, key=0, style=bold];
m13_16 -> m13_17  [color=red, key=0, style=solid];
m13_17 -> m13_18  [color=red, key=0, style=solid];
m13_17 -> m13_14  [color=red, key=2, style=dotted];
m13_17 -> m13_21  [color=red, key=1, label="lambda expression", style=dashed];
m13_18 -> m13_19  [color=red, key=0, style=solid];
m13_18 -> m13_20  [color=red, key=2, style=dotted];
m13_19 -> m13_16  [color=blue, key=0, style=bold];
m13_451 -> m13_452  [key=0, style=solid];
m13_452 -> m13_453  [key=0, style=solid];
m13_452 -> m13_66  [key=2, style=dotted];
m13_452 -> m13_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_453 -> m13_451  [color=blue, key=0, style=bold];
m13_746 -> m13_747  [key=0, style=solid];
m13_747 -> m13_748  [key=0, style=solid];
m13_747 -> m13_751  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_747 -> m13_747  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m13_748 -> m13_749  [key=0, style=solid];
m13_748 -> m13_125  [key=2, style=dotted];
m13_748 -> m13_750  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_749 -> m13_746  [color=blue, key=0, style=bold];
m13_169 -> m13_170  [key=0, style=solid];
m13_170 -> m13_171  [key=0, style=solid];
m13_170 -> m13_66  [key=2, style=dotted];
m13_170 -> m13_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_171 -> m13_169  [color=blue, key=0, style=bold];
m13_122 -> m13_123  [key=0, style=solid];
m13_123 -> m13_124  [key=0, style=solid];
m13_123 -> m13_125  [key=2, style=dotted];
m13_123 -> m13_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_124 -> m13_122  [color=blue, key=0, style=bold];
m13_373 -> m13_374  [key=0, style=solid];
m13_374 -> m13_375  [key=0, style=solid];
m13_374 -> m13_66  [key=2, style=dotted];
m13_374 -> m13_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_375 -> m13_373  [color=blue, key=0, style=bold];
m13_40 -> m13_41  [color=red, key=0, style=solid];
m13_41 -> m13_42  [color=red, key=0, style=solid];
m13_41 -> m13_32  [color=red, key=2, style=dotted];
m13_41 -> m13_44  [color=red, key=1, label=sqlConnection, style=dashed];
m13_42 -> m13_43  [color=red, key=0, style=solid];
m13_42 -> m13_24  [color=red, key=2, style=dotted];
m13_44 -> m13_45  [color=red, key=0, style=solid];
m13_44 -> m13_20  [color=red, key=2, style=dotted];
m13_43 -> m13_44  [color=red, key=0, style=solid];
m13_43 -> m13_39  [color=red, key=2, style=dotted];
m13_45 -> m13_40  [color=blue, key=0, style=bold];
m13_605 -> m13_606  [key=0, style=solid];
m13_606 -> m13_607  [key=0, style=solid];
m13_606 -> m13_66  [key=2, style=dotted];
m13_606 -> m13_608  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_607 -> m13_605  [color=blue, key=0, style=bold];
m13_911 -> m13_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_3  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_17  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_22  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_35  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_42  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_47  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_64  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_70  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_78  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_87  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_96  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_108  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_123  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_170  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_180  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_189  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_210  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_220  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_228  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_241  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_252  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_261  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_272  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_283  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_294  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_306  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_316  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_327  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_337  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_345  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_354  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_365  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_374  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_382  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_391  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_403  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_413  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_431  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_442  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_452  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_463  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_479  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_491  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_502  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_512  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_521  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_531  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_542  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_552  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_567  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_577  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_585  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_596  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_606  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_614  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_623  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_634  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_642  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_652  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_660  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_669  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_677  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_687  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_695  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_703  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_713  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_721  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_730  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_740  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_748  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_756  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_766  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_774  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_783  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_794  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_804  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_812  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_820  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_831  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_840  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_848  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_858  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_866  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_874  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_884  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_892  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_902  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_911 -> m13_906  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m13_912 -> m13_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m13_913 -> m13_60  [color=darkseagreen4, key=1, label=queues, style=dashed];
m13_914 -> m13_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_915 -> m13_75  [color=darkseagreen4, key=1, label=token, style=dashed];
m13_916 -> m13_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_917 -> m13_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_918 -> m13_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_919 -> m13_193  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_920 -> m13_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_921 -> m13_232  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_922 -> m13_245  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_923 -> m13_255  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_924 -> m13_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_925 -> m13_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_926 -> m13_286  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_927 -> m13_297  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_928 -> m13_309  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_929 -> m13_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_930 -> m13_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_931 -> m13_348  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_932 -> m13_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_933 -> m13_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_934 -> m13_385  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_935 -> m13_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_936 -> m13_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_937 -> m13_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_938 -> m13_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_939 -> m13_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_940 -> m13_466  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_941 -> m13_485  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_942 -> m13_494  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_943 -> m13_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_944 -> m13_524  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_945 -> m13_538  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_946 -> m13_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_947 -> m13_573  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_948 -> m13_588  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_949 -> m13_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_950 -> m13_617  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_951 -> m13_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_952 -> m13_637  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_953 -> m13_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_954 -> m13_663  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_955 -> m13_672  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_956 -> m13_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_957 -> m13_698  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_958 -> m13_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_959 -> m13_724  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_960 -> m13_736  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_961 -> m13_751  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_962 -> m13_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_963 -> m13_777  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_964 -> m13_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_965 -> m13_801  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_966 -> m13_815  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_967 -> m13_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_968 -> m13_843  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_969 -> m13_854  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_970 -> m13_869  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m13_971 -> m13_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m13_972 -> m13_895  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m14_19 -> m14_11  [color=green, key=3, label="Parameter variable SqlConnection connection", style=bold];
m14_19 -> m14_24  [color=green, key=3, label="Parameter variable SqlConnection connection", style=bold];
m14_19 -> m14_36  [color=green, key=3, label="Parameter variable SqlConnection connection", style=bold];
m14_19 -> m14_39  [color=green, key=3, label="Parameter variable SqlConnection connection", style=bold];
m14_19 -> m14_67  [color=green, key=3, label="Parameter variable SqlConnection connection", style=bold];
m14_19 -> m14_77  [color=green, key=0, style=solid];
m14_19 -> m14_20  [color=red, key=0, style=solid];
m14_19 -> m14_21  [color=red, key=2, style=dotted];
m14_19 -> m14_22  [color=red, key=1, label="lambda expression", style=dashed];
m14_77 -> m14_78  [color=green, key=0, style=solid];
m14_77 -> m14_79  [color=green, key=2, style=dotted];
m14_77 -> m14_57  [color=red, key=1, label=SqlConnection, style=dashed];
m14_78 -> m14_19  [color=blue, key=0, style=bold];
m14_11 -> m14_12  [color=red, key=0, style=solid];
m14_11 -> m14_3  [color=green, key=0, style=solid];
m14_11 -> m14_21  [color=green, key=2, style=dotted];
m14_11 -> m14_15  [color=green, key=1, label="lambda expression", style=dashed];
m14_11 -> m14_19  [color=green, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m14_12 -> m14_13  [color=red, key=0, style=solid];
m14_12 -> m14_4  [color=red, key=2, style=dotted];
m14_12 -> m14_15  [color=red, key=1, label="lambda expression", style=dashed];
m14_13 -> m14_14  [color=red, key=0, style=solid];
m14_13 -> m14_5  [color=red, key=2, style=dotted];
m14_14 -> m14_11  [color=blue, key=0, style=bold];
m14_21 -> m14_26  [color=green, key=0, style=solid];
m14_21 -> m14_9  [color=green, key=2, style=dotted];
m14_0 -> m14_1  [color=green, key=0, style=solid];
m14_0 -> m14_11  [color=green, key=0, style=solid];
m14_1 -> m14_2  [color=green, key=0, style=solid];
m14_1 -> m14_4  [color=green, key=2, style=dotted];
m14_1 -> m14_6  [color=green, key=1, label="lambda expression", style=dashed];
m14_2 -> m14_3  [color=green, key=0, style=solid];
m14_2 -> m14_5  [color=green, key=2, style=dotted];
m14_3 -> m14_0  [color=blue, key=0, style=bold];
m14_39 -> m14_35  [color=green, key=0, style=solid];
m14_39 -> m14_21  [color=green, key=2, style=dotted];
m14_39 -> m14_44  [color=green, key=1, label="lambda expression", style=dashed];
m14_39 -> m14_19  [color=green, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m14_59 -> m14_60  [color=red, key=0, style=solid];
m14_59 -> m14_67  [color=green, key=0, style=solid];
m14_60 -> m14_61  [color=green, key=0, style=solid];
m14_60 -> m14_21  [color=red, key=2, style=dotted];
m14_60 -> m14_62  [color=red, key=1, label="lambda expression", style=dashed];
m14_60 -> m14_19  [color=green, key=2, style=dotted];
m14_60 -> m14_64  [color=green, key=1, label=storage, style=dashed];
m14_67 -> m14_61  [color=green, key=0, style=solid];
m14_67 -> m14_21  [color=green, key=2, style=dotted];
m14_67 -> m14_62  [color=green, key=1, label="lambda expression", style=dashed];
m14_67 -> m14_19  [color=green, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m14_61 -> m14_59  [color=blue, key=0, style=bold];
m14_61 -> m14_58  [color=green, key=0, style=solid];
m14_61 -> m14_4  [color=green, key=2, style=dotted];
m14_61 -> m14_63  [color=green, key=1, label="lambda expression", style=dashed];
m14_18 -> m14_19  [color=red, key=0, style=solid];
m14_18 -> m14_24  [color=green, key=0, style=solid];
m14_24 -> m14_20  [color=green, key=0, style=solid];
m14_24 -> m14_21  [color=green, key=2, style=dotted];
m14_24 -> m14_53  [color=green, key=1, label="lambda expression", style=dashed];
m14_24 -> m14_19  [color=green, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m14_24 -> m14_25  [color=red, key=0, style=solid];
m14_24 -> m14_4  [color=red, key=2, style=dotted];
m14_24 -> m14_27  [color=red, key=2, style=dotted];
m14_20 -> m14_18  [color=blue, key=0, style=bold];
m14_47 -> m14_69  [key=0, style=solid];
m14_47 -> m14_70  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m14_47 -> m14_31  [color=red, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_47 -> m14_36  [color=green, key=3, label="Parameter variable System.Action<SqlConnection> action", style=bold];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_72  [key=2, style=dotted];
m14_70 -> m14_71  [color=green, key=0, style=solid];
m14_70 -> m14_73  [key=2, style=dotted];
m14_70 -> m14_19  [color=green, key=2, style=dotted];
m14_71 -> m14_47  [color=blue, key=0, style=bold];
m14_71 -> m14_64  [color=green, key=0, style=solid];
m14_71 -> m14_9  [color=green, key=2, style=dotted];
m14_63 -> m14_64  [color=red, key=0, style=solid];
m14_63 -> m14_9  [color=red, key=2, style=dotted];
m14_6 -> m14_7  [color=green, key=0, style=solid];
m14_7 -> m14_8  [color=green, key=0, style=solid];
m14_7 -> m14_9  [color=green, key=2, style=dotted];
m14_7 -> m14_10  [color=red, key=2, style=dotted];
m14_8 -> m14_6  [color=blue, key=0, style=bold];
m14_15 -> m14_16  [color=green, key=0, style=solid];
m14_15 -> m14_15  [color=green, key=0, style=solid];
m14_15 -> m14_19  [color=green, key=2, style=dotted];
m14_15 -> m14_21  [color=green, key=1, label=storage, style=dashed];
m14_16 -> m14_17  [color=green, key=0, style=solid];
m14_16 -> m14_9  [color=red, key=2, style=dotted];
m14_16 -> m14_4  [color=green, key=2, style=dotted];
m14_16 -> m14_22  [color=green, key=1, label="lambda expression", style=dashed];
m14_17 -> m14_15  [color=blue, key=0, style=bold];
m14_17 -> m14_17  [color=green, key=0, style=solid];
m14_17 -> m14_5  [color=green, key=2, style=dotted];
m14_22 -> m14_23  [color=red, key=0, style=solid];
m14_22 -> m14_24  [color=red, key=1, label=SqlConnection, style=dashed];
m14_22 -> m14_21  [color=green, key=0, style=solid];
m14_23 -> m14_24  [color=red, key=0, style=solid];
m14_23 -> m14_9  [color=red, key=2, style=dotted];
m14_25 -> m14_26  [color=red, key=0, style=solid];
m14_25 -> m14_5  [color=red, key=2, style=dotted];
m14_26 -> m14_22  [color=blue, key=0, style=bold];
m14_45 -> m14_46  [color=red, key=0, style=solid];
m14_45 -> m14_47  [color=red, key=2, style=dotted];
m14_45 -> m14_48  [color=red, key=1, label="lambda expression", style=dashed];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_41  [key=2, style=dotted];
m14_50 -> m14_51  [key=0, style=solid];
m14_50 -> m14_42  [key=2, style=dotted];
m14_50 -> m14_55  [color=green, key=0, style=solid];
m14_50 -> m14_47  [color=green, key=2, style=dotted];
m14_50 -> m14_56  [color=green, key=1, label="lambda expression", style=dashed];
m14_53 -> m14_54  [color=red, key=0, style=solid];
m14_53 -> m14_57  [color=red, key=1, label=SqlConnection, style=dashed];
m14_53 -> m14_27  [color=green, key=0, style=solid];
m14_53 -> m14_29  [color=green, key=1, label=SqlConnection, style=dashed];
m14_44 -> m14_45  [color=red, key=0, style=solid];
m14_44 -> m14_60  [color=green, key=0, style=solid];
m14_46 -> m14_44  [color=blue, key=0, style=bold];
m14_46 -> m14_53  [color=green, key=0, style=bold];
m14_48 -> m14_49  [color=red, key=0, style=solid];
m14_48 -> m14_50  [color=green, key=0, style=solid];
m14_49 -> m14_50  [color=red, key=0, style=solid];
m14_49 -> m14_9  [color=red, key=2, style=dotted];
m14_52 -> m14_48  [color=blue, key=0, style=bold];
m14_52 -> m14_56  [color=green, key=0, style=bold];
m14_54 -> m14_55  [color=green, key=0, style=solid];
m14_54 -> m14_4  [color=red, key=2, style=dotted];
m14_54 -> m14_56  [color=red, key=1, label="lambda expression", style=dashed];
m14_54 -> m14_19  [color=green, key=2, style=dotted];
m14_57 -> m14_58  [color=red, key=0, style=solid];
m14_57 -> m14_9  [color=red, key=2, style=dotted];
m14_55 -> m14_53  [color=blue, key=0, style=bold];
m14_55 -> m14_48  [color=green, key=0, style=bold];
m14_55 -> m14_50  [color=green, key=0, style=solid];
m14_55 -> m14_9  [color=green, key=2, style=dotted];
m14_56 -> m14_57  [color=red, key=0, style=solid];
m14_56 -> m14_54  [color=green, key=0, style=solid];
m14_58 -> m14_56  [color=blue, key=0, style=bold];
m14_58 -> m14_44  [color=green, key=0, style=bold];
m14_62 -> m14_63  [color=red, key=0, style=solid];
m14_62 -> m14_65  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m14_62 -> m14_70  [color=green, key=0, style=solid];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_4  [key=2, style=dotted];
m14_65 -> m14_27  [key=2, style=dotted];
m14_65 -> m14_63  [color=blue, key=0, style=bold];
m14_64 -> m14_65  [color=green, key=0, style=solid];
m14_64 -> m14_68  [key=2, style=dotted];
m14_64 -> m14_9  [color=green, key=2, style=dotted];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_5  [key=2, style=dotted];
m14_27 -> m14_28  [color=green, key=0, style=solid];
m14_27 -> m14_19  [color=green, key=2, style=dotted];
m14_28 -> m14_29  [color=green, key=0, style=solid];
m14_28 -> m14_9  [color=green, key=2, style=dotted];
m14_29 -> m14_30  [color=green, key=0, style=solid];
m14_29 -> m14_4  [color=green, key=2, style=dotted];
m14_29 -> m14_27  [color=green, key=2, style=dotted];
m14_29 -> m14_38  [key=2, style=dotted];
m14_29 -> m14_31  [color=red, key=1, label=releaseLock, style=dashed];
m14_29 -> m14_45  [color=red, key=1, label=releaseLock, style=dashed];
m14_29 -> m14_51  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m14_29 -> m14_35  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m14_29 -> m14_36  [color=green, key=1, label=releaseLock, style=dashed];
m14_29 -> m14_50  [color=green, key=1, label=releaseLock, style=dashed];
m14_30 -> m14_46  [color=green, key=0, style=solid];
m14_30 -> m14_5  [color=green, key=2, style=dotted];
m14_30 -> m14_31  [color=red, key=0, style=solid];
m14_30 -> m14_38  [key=2, style=dotted];
m14_30 -> m14_45  [color=red, key=1, label=lockAcquired, style=dashed];
m14_30 -> m14_50  [color=green, key=1, label=lockAcquired, style=dashed];
m14_30 -> m14_33  [color=darkseagreen4, key=1, label=lockAcquired, style=dashed];
m14_30 -> m14_36  [color=green, key=0, style=solid];
m14_31 -> m14_32  [color=red, key=0, style=solid];
m14_31 -> m14_39  [color=red, key=2, style=dotted];
m14_31 -> m14_36  [color=red, key=1, label=thread, style=dashed];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_42  [key=2, style=dotted];
m14_33 -> m14_34  [color=red, key=0, style=solid];
m14_33 -> m14_41  [key=2, style=dotted];
m14_33 -> m14_39  [color=green, key=0, style=solid];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_40  [key=2, style=dotted];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_43  [key=2, style=dotted];
m14_36 -> m14_32  [color=green, key=0, style=solid];
m14_36 -> m14_39  [color=green, key=2, style=dotted];
m14_36 -> m14_36  [color=green, key=1, label=thread, style=dashed];
m14_36 -> m14_19  [color=green, key=3, label="Local variable Hangfire.SqlServer.SqlServerStorage storage", style=bold];
m14_34 -> m14_35  [color=red, key=0, style=solid];
m14_34 -> m14_21  [color=red, key=2, style=dotted];
m14_34 -> m14_53  [color=red, key=1, label="lambda expression", style=dashed];
m14_37 -> m14_28  [color=blue, key=0, style=bold];
m14_74 -> m14_1  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_7  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_12  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_16  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_19  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_23  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_31  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_45  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_49  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_34  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_54  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_57  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_60  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_63  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_11  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_15  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_21  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_24  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_27  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_28  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_36  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_50  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_39  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_55  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_61  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_64  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_67  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_70  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_74 -> m14_71  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerDistributedLockFacts", style=dashed];
m14_75 -> m14_45  [color=red, key=1, label=releaseLock, style=dashed];
m14_75 -> m14_51  [color=darkseagreen4, key=1, label=releaseLock, style=dashed];
m14_75 -> m14_50  [color=green, key=1, label=releaseLock, style=dashed];
m14_76 -> m14_45  [color=red, key=1, label=lockAcquired, style=dashed];
m14_76 -> m14_50  [color=green, key=1, label=lockAcquired, style=dashed];
m14_86 -> m14_21  [color=green, key=1, label=storage, style=dashed];
m14_89 -> m14_64  [color=green, key=1, label=storage, style=dashed];
m15_20 -> m15_21  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_23  [key=2, style=dotted];
m15_22 -> m15_20  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [color=green, key=0, style=solid];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m15_0 -> m15_5  [color=darkseagreen4, key=1, label=IDbTransaction, style=dashed];
m15_0 -> m15_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_0 -> m15_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_0 -> m15_10  [color=darkseagreen4, key=1, label=SqlTransaction, style=dashed];
m15_0 -> m15_11  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m15_0 -> m15_12  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m15_0 -> m15_13  [color=darkseagreen4, key=1, label=IDbTransaction, style=dashed];
m15_0 -> m15_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_0 -> m15_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_1 -> m15_2  [color=green, key=0, style=solid];
m15_1 -> m15_3  [color=green, key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_5  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_7  [key=0, style=solid];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_9  [key=0, style=solid];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_11  [color=green, key=0, style=solid];
m15_10 -> m15_11  [color=red, key=0, style=solid];
m15_10 -> m15_16  [key=0, style=solid];
m15_10 -> n12  [key=2, style=dotted];
m15_11 -> m15_12  [color=green, key=0, style=solid];
m15_12 -> m15_13  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_2 -> m15_14  [key=0, style=solid];
m15_2 -> n12  [color=green, key=2, style=dotted];
m15_2 -> m15_16  [color=green, key=0, style=solid];
m15_4 -> m15_14  [key=0, style=solid];
m15_4 -> n12  [key=2, style=dotted];
m15_4 -> m15_16  [key=0, style=solid];
m15_6 -> m15_14  [key=0, style=solid];
m15_6 -> n12  [key=2, style=dotted];
m15_6 -> m15_16  [key=0, style=solid];
m15_8 -> m15_14  [key=0, style=solid];
m15_8 -> n12  [key=2, style=dotted];
m15_8 -> m15_16  [key=0, style=solid];
m15_14 -> m15_0  [color=blue, key=0, style=bold];
m15_14 -> m15_15  [key=0, style=solid];
m15_28 -> m15_27  [color=green, key=0, style=solid];
m15_28 -> m15_31  [color=green, key=2, style=dotted];
m15_24 -> m15_25  [key=0, style=solid];
m15_25 -> m15_26  [color=red, key=0, style=solid];
m15_25 -> m15_28  [key=2, style=dotted];
m15_26 -> m15_27  [color=red, key=0, style=solid];
m15_26 -> m15_28  [color=red, key=2, style=dotted];
m15_27 -> m15_24  [color=blue, key=0, style=bold];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_0  [color=blue, key=0, style=bold];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_19  [key=2, style=dotted];
m15_18 -> m15_16  [color=blue, key=0, style=bold];
m15_15 -> m15_16  [key=0, style=solid];
m15_29 -> m15_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_11  [color=green, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_25  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_26  [color=red, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_28  [color=green, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m15_29 -> m15_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerFetchedJob", style=dashed];
m16_3 -> m16_4  [color=green, key=0, style=solid];
m16_4 -> m16_5  [color=green, key=0, style=solid];
m16_4 -> m16_6  [color=green, key=2, style=dotted];
m16_4 -> m16_7  [color=green, key=2, style=dotted];
m16_5 -> m16_3  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_17 -> m16_18  [color=green, key=0, style=solid];
m16_13 -> m16_14  [color=green, key=0, style=solid];
m16_18 -> m16_19  [color=green, key=0, style=solid];
m16_18 -> m16_20  [color=green, key=2, style=dotted];
m16_18 -> m16_21  [color=green, key=2, style=dotted];
m16_19 -> m16_17  [color=blue, key=0, style=bold];
m16_14 -> m16_15  [color=green, key=0, style=solid];
m16_14 -> m16_16  [color=green, key=2, style=dotted];
m16_15 -> m16_13  [color=blue, key=0, style=bold];
m16_8 -> m16_9  [color=green, key=0, style=solid];
m16_8 -> m16_10  [color=green, key=1, label=IRedisTransaction, style=dashed];
m16_8 -> m16_18  [color=green, key=1, label=string, style=dashed];
m16_9 -> m16_10  [color=green, key=0, style=solid];
m16_9 -> m16_12  [color=green, key=2, style=dotted];
m16_9 -> m16_13  [color=green, key=1, label="lambda expression", style=dashed];
m16_10 -> m16_11  [color=green, key=0, style=solid];
m16_10 -> m16_12  [color=green, key=2, style=dotted];
m16_10 -> m16_17  [color=green, key=1, label="lambda expression", style=dashed];
m16_11 -> m16_8  [color=blue, key=0, style=bold];
m16_22 -> m16_4  [color=green, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m16_22 -> m16_9  [color=green, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m16_22 -> m16_10  [color=green, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m16_22 -> m16_18  [color=green, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m16_22 -> m16_14  [color=green, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m16_22 -> m16_1  [color=darkseagreen4, key=1, label="HangFire.States.EnqueuedState", style=dashed];
m16_23 -> m16_18  [color=green, key=1, label=string, style=dashed];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m17_0 -> m17_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m17_0 -> m17_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m17_6 -> m17_7  [color=green, key=0, style=solid];
m17_6 -> m17_44  [color=green, key=2, style=dotted];
m17_6 -> m17_45  [color=green, key=2, style=dotted];
m17_6 -> m17_42  [color=green, key=2, style=dotted];
m17_6 -> m17_9  [color=green, key=1, label=pager, style=dashed];
m17_6 -> m17_11  [color=green, key=1, label=pager, style=dashed];
m17_6 -> m17_36  [color=green, key=1, label=pager, style=dashed];
m17_4 -> m17_6  [color=green, key=1, label=from, style=dashed];
m17_4 -> m17_5  [key=0, style=solid];
m17_4 -> m17_43  [key=2, style=dotted];
m17_4 -> m17_7  [key=0, style=solid];
m17_4 -> n12  [key=2, style=dotted];
m17_5 -> m17_6  [color=green, key=0, style=solid];
m17_5 -> m17_43  [key=2, style=dotted];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_46  [key=2, style=dotted];
m17_7 -> m17_13  [color=darkseagreen4, key=1, label=enqueuedJobs, style=dashed];
m17_7 -> m17_0  [color=blue, key=0, style=bold];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_11  [key=0, style=solid];
m17_9 -> m17_12  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m17_9 -> m17_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m17_9 -> m17_21  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_47  [key=2, style=dotted];
m17_11 -> m17_48  [key=2, style=dotted];
m17_11 -> m17_49  [key=2, style=dotted];
m17_11 -> m17_34  [key=0, style=solid];
m17_11 -> n12  [key=2, style=dotted];
m17_36 -> m17_37  [key=0, style=solid];
m17_36 -> m17_55  [key=2, style=dotted];
m17_36 -> m17_48  [key=2, style=dotted];
m17_36 -> m17_49  [key=2, style=dotted];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_38  [key=2, style=dotted];
m17_1 -> m17_3  [key=0, style=solid];
m17_2 -> m17_42  [key=2, style=dotted];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_39  [key=2, style=dotted];
m17_2 -> m17_40  [key=2, style=dotted];
m17_2 -> m17_41  [key=2, style=dotted];
m17_2 -> m17_7  [key=0, style=solid];
m17_2 -> n12  [key=2, style=dotted];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_38  [key=2, style=dotted];
m17_10 -> m17_37  [key=0, style=solid];
m17_10 -> m17_38  [key=2, style=dotted];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_12  [key=0, style=solid];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_38  [key=2, style=dotted];
m17_12 -> m17_14  [key=0, style=solid];
m17_14 -> m17_15  [key=0, style=solid];
m17_14 -> m17_38  [key=2, style=dotted];
m17_14 -> m17_14  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue.FetchedJob fetchedJob", style=bold];
m17_15 -> m17_15  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_50  [key=2, style=dotted];
m17_15 -> m17_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_15 -> m17_14  [color=darkorchid, key=3, label="Local variable SqlConnection connection", style=bold];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_38  [key=2, style=dotted];
m17_16 -> m17_14  [color=darkorchid, key=3, label="Local variable SqlTransaction transaction", style=bold];
m17_17 -> m17_42  [key=2, style=dotted];
m17_17 -> m17_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_50  [key=2, style=dotted];
m17_17 -> m17_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_17 -> m17_21  [color=darkseagreen4, key=1, label=fetchJobSqlTemplate, style=dashed];
m17_18 -> m17_19  [key=0, style=solid];
m17_18 -> m17_38  [key=2, style=dotted];
m17_18 -> m17_36  [key=2, style=dotted];
m17_18 -> m17_18  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m17_18 -> m17_30  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m17_19 -> m17_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_51  [key=2, style=dotted];
m17_19 -> m17_49  [key=2, style=dotted];
m17_19 -> m17_21  [color=darkseagreen4, key=1, label=connection, style=dashed];
m17_19 -> m17_37  [key=2, style=dotted];
m17_19 -> m17_24  [color=red, key=1, label=connection, style=dashed];
m17_19 -> m17_29  [color=red, key=1, label=connection, style=dashed];
m17_19 -> m17_33  [color=red, key=1, label=connection, style=dashed];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_38  [key=2, style=dotted];
m17_20 -> m17_23  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m17_20 -> m17_27  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m17_20 -> m17_28  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m17_20 -> m17_33  [color=red, key=1, label=transaction, style=dashed];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_38  [key=2, style=dotted];
m17_23 -> m17_24  [color=red, key=0, style=solid];
m17_23 -> m17_38  [key=2, style=dotted];
m17_23 -> m17_42  [key=2, style=dotted];
m17_24 -> m17_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_24 -> m17_25  [color=red, key=0, style=solid];
m17_24 -> m17_52  [key=2, style=dotted];
m17_24 -> m17_50  [key=2, style=dotted];
m17_24 -> m17_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_24 -> m17_42  [color=red, key=2, style=dotted];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_38  [key=2, style=dotted];
m17_25 -> m17_34  [key=0, style=solid];
m17_26 -> m17_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_26 -> m17_27  [key=0, style=solid];
m17_26 -> m17_53  [key=2, style=dotted];
m17_26 -> m17_50  [key=2, style=dotted];
m17_26 -> m17_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_26 -> m17_32  [key=0, style=solid];
m17_27 -> m17_28  [key=0, style=solid];
m17_27 -> m17_38  [key=2, style=dotted];
m17_27 -> m17_43  [key=2, style=dotted];
m17_29 -> m17_30  [color=red, key=0, style=solid];
m17_29 -> m17_38  [key=2, style=dotted];
m17_29 -> m17_42  [color=red, key=2, style=dotted];
m17_30 -> m17_30  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_54  [key=2, style=dotted];
m17_30 -> m17_50  [key=2, style=dotted];
m17_30 -> m17_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_30 -> m17_44  [key=2, style=dotted];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_38  [key=2, style=dotted];
m17_31 -> m17_36  [key=2, style=dotted];
m17_31 -> m17_31  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m17_32 -> m17_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_32 -> m17_33  [color=red, key=0, style=solid];
m17_32 -> m17_50  [key=2, style=dotted];
m17_32 -> m17_17  [key=0, style=solid];
m17_33 -> m17_34  [color=red, key=0, style=solid];
m17_33 -> m17_38  [key=2, style=dotted];
m17_33 -> m17_45  [color=red, key=2, style=dotted];
m17_33 -> m17_46  [color=red, key=2, style=dotted];
m17_34 -> m17_13  [key=0, style=solid];
m17_34 -> m17_38  [key=2, style=dotted];
m17_34 -> m17_9  [color=blue, key=0, style=bold];
m17_35 -> m17_36  [key=0, style=solid];
m17_35 -> m17_38  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_5  [key=0, style=solid];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_15  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_13 -> m17_35  [key=0, style=solid];
m17_13 -> m17_34  [key=0, style=solid];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_23  [key=0, style=solid];
m17_21 -> m17_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_21 -> m17_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_21 -> m17_26  [key=0, style=solid];
m17_21 -> m17_39  [key=2, style=dotted];
m17_21 -> m17_40  [key=2, style=dotted];
m17_21 -> m17_41  [key=2, style=dotted];
m17_21 -> m17_32  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m17_21 -> m17_33  [color=red, key=1, label=fetchedJob, style=dashed];
m17_28 -> m17_29  [color=red, key=0, style=solid];
m17_28 -> m17_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_28 -> m17_34  [key=0, style=solid];
m17_28 -> m17_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_28 -> m17_42  [key=2, style=dotted];
m17_37 -> m17_0  [color=blue, key=0, style=bold];
m17_50 -> m17_47  [color=blue, key=0, style=bold];
m17_47 -> m17_48  [key=0, style=solid];
m17_47 -> m17_49  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m17_48 -> m17_49  [key=0, style=solid];
m17_48 -> m17_48  [color=darkorchid, key=3, label="Local variable string enqueueJobSql", style=bold];
m17_49 -> m17_50  [key=0, style=solid];
m17_49 -> m17_51  [key=2, style=dotted];
m17_52 -> m17_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m17_52 -> m17_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m17_52 -> m17_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m17_52 -> m17_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m17_52 -> m17_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueue", style=dashed];
m17_56 -> m17_6  [color=green, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m17_56 -> m17_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.EnqueuedJobsPage", style=dashed];
m18_201 -> m18_202  [key=0, style=solid];
m18_202 -> m18_203  [key=0, style=solid];
m18_202 -> m18_18  [key=2, style=dotted];
m18_202 -> m18_21  [key=2, style=dotted];
m18_202 -> m18_207  [key=2, style=dotted];
m18_202 -> m18_19  [key=2, style=dotted];
m18_202 -> m18_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_203 -> m18_204  [key=0, style=solid];
m18_203 -> m18_71  [key=2, style=dotted];
m18_204 -> m18_205  [key=0, style=solid];
m18_204 -> m18_72  [key=2, style=dotted];
m18_205 -> m18_206  [key=0, style=solid];
m18_205 -> m18_73  [key=2, style=dotted];
m18_205 -> m18_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_206 -> m18_201  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_2 -> m18_3  [color=red, key=0, style=solid];
m18_2 -> m18_5  [color=green, key=2, style=dotted];
m18_1 -> m18_2  [color=red, key=0, style=solid];
m18_1 -> m18_4  [key=2, style=dotted];
m18_1 -> m18_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_1 -> m18_16  [key=2, style=dotted];
m18_3 -> m18_0  [color=blue, key=0, style=bold];
m18_3 -> m18_4  [key=0, style=solid];
m18_101 -> m18_102  [key=0, style=solid];
m18_103 -> m18_29  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_103 -> m18_23  [key=2, style=dotted];
m18_103 -> m18_104  [key=0, style=solid];
m18_103 -> m18_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_103 -> m18_38  [key=2, style=dotted];
m18_103 -> m18_55  [key=2, style=dotted];
m18_102 -> m18_103  [key=0, style=solid];
m18_102 -> m18_102  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m18_102 -> m18_106  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_104 -> m18_101  [color=blue, key=0, style=bold];
m18_104 -> m18_102  [color=blue, key=0, style=bold];
m18_93 -> m18_94  [color=green, key=0, style=solid];
m18_93 -> m18_98  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_18  [key=2, style=dotted];
m18_5 -> m18_19  [key=2, style=dotted];
m18_5 -> m18_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_60 -> m18_61  [key=0, style=solid];
m18_72 -> m18_73  [key=0, style=solid];
m18_24 -> m18_25  [key=0, style=solid];
m18_10 -> m18_11  [key=0, style=solid];
m18_10 -> m18_18  [key=2, style=dotted];
m18_10 -> m18_21  [key=2, style=dotted];
m18_10 -> m18_22  [key=2, style=dotted];
m18_10 -> m18_19  [key=2, style=dotted];
m18_10 -> m18_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_10 -> m18_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_94 -> m18_95  [color=green, key=0, style=solid];
m18_94 -> m18_83  [color=green, key=2, style=dotted];
m18_94 -> m18_99  [color=green, key=2, style=dotted];
m18_95 -> m18_96  [key=0, style=solid];
m18_95 -> m18_18  [key=2, style=dotted];
m18_95 -> m18_101  [key=2, style=dotted];
m18_95 -> m18_19  [key=2, style=dotted];
m18_95 -> m18_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_95 -> m18_34  [color=green, key=0, style=solid];
m18_95 -> m18_100  [color=green, key=2, style=dotted];
m18_96 -> m18_97  [color=red, key=0, style=solid];
m18_96 -> m18_18  [key=2, style=dotted];
m18_96 -> m18_101  [key=2, style=dotted];
m18_96 -> m18_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_97 -> m18_98  [color=red, key=0, style=solid];
m18_97 -> m18_18  [color=red, key=2, style=dotted];
m18_97 -> m18_101  [color=red, key=2, style=dotted];
m18_97 -> m18_19  [color=red, key=2, style=dotted];
m18_97 -> m18_109  [color=red, key=1, label="lambda expression", style=dashed];
m18_98 -> m18_99  [key=0, style=solid];
m18_98 -> m18_71  [key=2, style=dotted];
m18_99 -> m18_100  [key=0, style=solid];
m18_99 -> m18_72  [key=2, style=dotted];
m18_100 -> m18_94  [color=blue, key=0, style=bold];
m18_16 -> m18_17  [color=green, key=0, style=solid];
m18_16 -> m18_9  [color=green, key=2, style=dotted];
m18_16 -> m18_18  [color=green, key=2, style=dotted];
m18_16 -> m18_19  [color=green, key=2, style=dotted];
m18_20 -> m18_21  [key=0, style=solid];
m18_56 -> m18_57  [key=0, style=solid];
m18_108 -> m18_109  [key=0, style=solid];
m18_108 -> m18_33  [key=2, style=dotted];
m18_108 -> m18_34  [key=2, style=dotted];
m18_165 -> m18_166  [key=0, style=solid];
m18_165 -> m18_33  [color=blue, key=0, style=bold];
m18_166 -> m18_167  [key=0, style=solid];
m18_166 -> m18_172  [key=2, style=dotted];
m18_166 -> m18_170  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_166 -> m18_178  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_166 -> m18_181  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_167 -> m18_168  [key=0, style=solid];
m18_167 -> m18_18  [key=2, style=dotted];
m18_167 -> m18_173  [key=2, style=dotted];
m18_167 -> m18_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_170 -> m18_171  [color=green, key=0, style=solid];
m18_170 -> m18_73  [key=2, style=dotted];
m18_170 -> m18_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_170 -> m18_173  [color=green, key=2, style=dotted];
m18_168 -> m18_169  [key=0, style=solid];
m18_168 -> m18_71  [key=2, style=dotted];
m18_169 -> m18_170  [key=0, style=solid];
m18_169 -> m18_72  [key=2, style=dotted];
m18_171 -> m18_165  [color=blue, key=0, style=bold];
m18_171 -> m18_172  [color=green, key=0, style=solid];
m18_171 -> m18_9  [color=green, key=2, style=dotted];
m18_171 -> m18_10  [color=green, key=2, style=dotted];
m18_172 -> m18_29  [color=blue, key=0, style=bold];
m18_68 -> m18_69  [key=0, style=solid];
m18_68 -> m18_73  [key=2, style=dotted];
m18_68 -> m18_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_191 -> m18_130  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_17  [key=2, style=dotted];
m18_38 -> m18_39  [key=0, style=solid];
m18_47 -> m18_216  [key=0, style=solid];
m18_47 -> m18_29  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_47 -> m18_23  [key=2, style=dotted];
m18_47 -> m18_48  [key=0, style=solid];
m18_47 -> m18_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_216 -> m18_47  [color=blue, key=0, style=bold];
m18_11 -> m18_12  [color=green, key=0, style=solid];
m18_11 -> m18_23  [key=2, style=dotted];
m18_12 -> m18_13  [color=green, key=0, style=solid];
m18_12 -> m18_4  [color=green, key=2, style=dotted];
m18_12 -> m18_15  [color=green, key=1, label="lambda expression", style=dashed];
m18_12 -> m18_18  [key=2, style=dotted];
m18_12 -> m18_19  [key=2, style=dotted];
m18_12 -> m18_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_13 -> m18_5  [key=2, style=dotted];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_18  [key=2, style=dotted];
m18_13 -> m18_19  [key=2, style=dotted];
m18_13 -> m18_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_14 -> m18_11  [color=blue, key=0, style=bold];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_24  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_18  [key=2, style=dotted];
m18_9 -> m18_19  [key=2, style=dotted];
m18_9 -> m18_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_35 -> m18_36  [key=0, style=solid];
m18_36 -> m18_29  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_36 -> m18_23  [key=2, style=dotted];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_36 -> m18_39  [key=2, style=dotted];
m18_37 -> m18_35  [color=blue, key=0, style=bold];
m18_136 -> m18_137  [key=0, style=solid];
m18_136 -> m18_71  [key=2, style=dotted];
m18_138 -> m18_29  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_138 -> m18_23  [key=2, style=dotted];
m18_138 -> m18_139  [key=0, style=solid];
m18_138 -> m18_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_138 -> m18_73  [key=2, style=dotted];
m18_138 -> m18_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_137 -> m18_86  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m18_137 -> m18_138  [key=0, style=solid];
m18_137 -> m18_141  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_137 -> m18_72  [key=2, style=dotted];
m18_139 -> m18_136  [color=blue, key=0, style=bold];
m18_139 -> m18_134  [color=blue, key=0, style=bold];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_44  [color=blue, key=0, style=bold];
m18_48 -> m18_46  [color=blue, key=0, style=bold];
m18_48 -> m18_49  [key=0, style=solid];
m18_154 -> m18_155  [color=green, key=0, style=solid];
m18_154 -> m18_29  [key=2, style=dotted];
m18_155 -> m18_156  [color=green, key=0, style=solid];
m18_155 -> m18_71  [key=2, style=dotted];
m18_155 -> m18_161  [color=green, key=2, style=dotted];
m18_156 -> m18_157  [key=0, style=solid];
m18_156 -> m18_72  [key=2, style=dotted];
m18_156 -> m18_83  [key=2, style=dotted];
m18_156 -> m18_84  [key=2, style=dotted];
m18_156 -> m18_158  [color=darkseagreen4, key=1, label=record, style=dashed];
m18_156 -> m18_159  [color=darkseagreen4, key=1, label=record, style=dashed];
m18_157 -> m18_158  [key=0, style=solid];
m18_157 -> m18_73  [key=2, style=dotted];
m18_157 -> m18_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_157 -> m18_5  [key=2, style=dotted];
m18_157 -> m18_162  [key=2, style=dotted];
m18_158 -> m18_154  [color=blue, key=0, style=bold];
m18_158 -> m18_5  [key=2, style=dotted];
m18_158 -> m18_159  [key=0, style=solid];
m18_83 -> m18_84  [key=0, style=solid];
m18_83 -> m18_72  [key=2, style=dotted];
m18_21 -> m18_29  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_21 -> m18_23  [key=2, style=dotted];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_22 -> m18_20  [color=blue, key=0, style=bold];
m18_22 -> m18_71  [color=darkorchid, key=3, label="Local variable HangFire.Server.Worker worker", style=bold];
m18_28 -> m18_24  [color=blue, key=0, style=bold];
m18_161 -> m18_159  [color=blue, key=0, style=bold];
m18_162 -> m18_163  [key=0, style=solid];
m18_111 -> m18_109  [color=blue, key=0, style=bold];
m18_184 -> m18_185  [key=0, style=solid];
m18_184 -> m18_58  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_185 -> m18_186  [key=0, style=solid];
m18_185 -> m18_172  [key=2, style=dotted];
m18_185 -> m18_189  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_185 -> m18_196  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_185 -> m18_199  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_185 -> m18_70  [color=darkseagreen4, key=1, label=cts, style=dashed];
m18_186 -> m18_187  [key=0, style=solid];
m18_186 -> m18_18  [key=2, style=dotted];
m18_186 -> m18_191  [key=2, style=dotted];
m18_186 -> m18_173  [key=2, style=dotted];
m18_186 -> m18_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_186 -> m18_70  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_189 -> m18_190  [key=0, style=solid];
m18_189 -> m18_73  [key=2, style=dotted];
m18_189 -> m18_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_189 -> m18_106  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_187 -> m18_188  [key=0, style=solid];
m18_187 -> m18_71  [key=2, style=dotted];
m18_187 -> m18_77  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_188 -> m18_189  [key=0, style=solid];
m18_188 -> m18_72  [key=2, style=dotted];
m18_188 -> m18_90  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_190 -> m18_184  [color=blue, key=0, style=bold];
m18_190 -> m18_118  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_29 -> m18_87  [color=green, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_151  [color=green, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_170  [color=green, key=0, style=solid];
m18_29 -> m18_21  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_36  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_47  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_61  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_74  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_103  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_115  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_126  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_138  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m18_29 -> m18_30  [key=0, style=solid];
m18_123 -> m18_124  [key=0, style=solid];
m18_123 -> m18_117  [color=blue, key=0, style=bold];
m18_124 -> m18_125  [color=red, key=0, style=solid];
m18_124 -> m18_71  [key=2, style=dotted];
m18_125 -> m18_126  [color=red, key=0, style=solid];
m18_125 -> m18_72  [color=red, key=2, style=dotted];
m18_125 -> m18_86  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m18_125 -> m18_130  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_126 -> m18_127  [color=red, key=0, style=solid];
m18_126 -> m18_73  [color=red, key=2, style=dotted];
m18_126 -> m18_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_126 -> m18_29  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_126 -> m18_23  [key=2, style=dotted];
m18_127 -> m18_123  [color=blue, key=0, style=bold];
m18_127 -> m18_124  [color=blue, key=0, style=bold];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_20  [key=2, style=dotted];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_18  [key=2, style=dotted];
m18_7 -> m18_19  [key=2, style=dotted];
m18_7 -> m18_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_7 -> m18_9  [key=2, style=dotted];
m18_7 -> m18_10  [key=2, style=dotted];
m18_7 -> m18_130  [key=0, style=solid];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_18  [key=2, style=dotted];
m18_8 -> m18_19  [key=2, style=dotted];
m18_8 -> m18_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_15 -> m18_0  [color=blue, key=0, style=bold];
m18_15 -> m18_16  [color=green, key=0, style=solid];
m18_80 -> m18_5  [key=2, style=dotted];
m18_80 -> m18_81  [key=0, style=solid];
m18_134 -> m18_135  [key=0, style=solid];
m18_134 -> m18_33  [key=2, style=dotted];
m18_134 -> m18_34  [key=2, style=dotted];
m18_135 -> m18_136  [key=0, style=solid];
m18_135 -> m18_18  [key=2, style=dotted];
m18_135 -> m18_19  [key=2, style=dotted];
m18_135 -> m18_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_135 -> m18_133  [color=blue, key=0, style=bold];
m18_39 -> m18_29  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_44  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_65 -> m18_66  [key=0, style=solid];
m18_65 -> m18_29  [key=2, style=dotted];
m18_65 -> m18_70  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_71  [key=2, style=dotted];
m18_66 -> m18_4  [key=2, style=dotted];
m18_66 -> m18_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_67 -> m18_68  [key=0, style=solid];
m18_67 -> m18_72  [key=2, style=dotted];
m18_67 -> m18_63  [color=blue, key=0, style=bold];
m18_69 -> m18_70  [key=0, style=solid];
m18_69 -> m18_73  [key=2, style=dotted];
m18_69 -> m18_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_70 -> m18_65  [color=blue, key=0, style=bold];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_34  [key=2, style=dotted];
m18_85 -> m18_86  [key=0, style=solid];
m18_85 -> m18_73  [key=2, style=dotted];
m18_85 -> m18_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_87 -> m18_88  [color=green, key=0, style=solid];
m18_87 -> m18_23  [color=green, key=2, style=dotted];
m18_87 -> m18_89  [color=green, key=1, label="lambda expression", style=dashed];
m18_87 -> m18_29  [color=green, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_86 -> m18_87  [color=green, key=0, style=solid];
m18_86 -> m18_86  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m18_86 -> m18_90  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_86 -> m18_81  [color=blue, key=0, style=bold];
m18_88 -> m18_85  [color=blue, key=0, style=bold];
m18_88 -> m18_89  [key=0, style=solid];
m18_88 -> m18_39  [key=2, style=dotted];
m18_150 -> m18_151  [color=green, key=0, style=solid];
m18_150 -> m18_146  [color=blue, key=0, style=bold];
m18_151 -> m18_152  [color=green, key=0, style=solid];
m18_151 -> m18_23  [color=green, key=2, style=dotted];
m18_151 -> m18_153  [color=green, key=1, label="lambda expression", style=dashed];
m18_151 -> m18_29  [color=green, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_152 -> m18_150  [color=blue, key=0, style=bold];
m18_152 -> m18_153  [key=0, style=solid];
m18_152 -> m18_38  [key=2, style=dotted];
m18_152 -> m18_108  [key=2, style=dotted];
m18_113 -> m18_114  [key=0, style=solid];
m18_113 -> m18_71  [key=2, style=dotted];
m18_115 -> m18_29  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_115 -> m18_23  [key=2, style=dotted];
m18_115 -> m18_116  [key=0, style=solid];
m18_115 -> m18_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_115 -> m18_73  [key=2, style=dotted];
m18_114 -> m18_86  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m18_114 -> m18_115  [key=0, style=solid];
m18_114 -> m18_118  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_114 -> m18_72  [key=2, style=dotted];
m18_116 -> m18_113  [color=blue, key=0, style=bold];
m18_116 -> m18_112  [color=blue, key=0, style=bold];
m18_64 -> m18_66  [color=darkseagreen4, key=1, label=cts, style=dashed];
m18_64 -> m18_65  [key=0, style=solid];
m18_64 -> m18_68  [key=2, style=dotted];
m18_64 -> m18_70  [color=darkseagreen4, key=1, label=cts, style=dashed];
m18_140 -> m18_142  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_140 -> m18_141  [key=0, style=solid];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_29  [key=2, style=dotted];
m18_25 -> m18_31  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_30  [color=blue, key=0, style=bold];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_4  [key=2, style=dotted];
m18_40 -> m18_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_44 -> m18_45  [key=0, style=solid];
m18_44 -> m18_33  [key=2, style=dotted];
m18_44 -> m18_34  [key=2, style=dotted];
m18_52 -> m18_53  [key=0, style=solid];
m18_52 -> m18_29  [key=2, style=dotted];
m18_52 -> m18_58  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_28  [key=2, style=dotted];
m18_26 -> m18_4  [key=2, style=dotted];
m18_26 -> m18_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_27 -> m18_25  [color=blue, key=0, style=bold];
m18_27 -> m18_5  [key=2, style=dotted];
m18_27 -> m18_28  [key=0, style=solid];
m18_30 -> m18_31  [key=0, style=solid];
m18_31 -> m18_29  [color=blue, key=0, style=bold];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_33  [key=2, style=dotted];
m18_31 -> m18_34  [key=2, style=dotted];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_163  [key=0, style=solid];
m18_34 -> m18_32  [color=blue, key=0, style=bold];
m18_34 -> m18_89  [color=blue, key=0, style=bold];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_43  [key=2, style=dotted];
m18_41 -> m18_5  [key=2, style=dotted];
m18_42 -> m18_40  [color=blue, key=0, style=bold];
m18_42 -> m18_38  [color=blue, key=0, style=bold];
m18_45 -> m18_46  [key=0, style=solid];
m18_45 -> m18_47  [key=2, style=dotted];
m18_45 -> m18_43  [color=blue, key=0, style=bold];
m18_49 -> m18_50  [key=0, style=solid];
m18_49 -> m18_51  [key=2, style=dotted];
m18_49 -> m18_52  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_50 -> m18_48  [color=blue, key=0, style=bold];
m18_50 -> m18_53  [color=darkseagreen4, key=1, label=cts, style=dashed];
m18_50 -> m18_51  [key=0, style=solid];
m18_50 -> m18_55  [key=2, style=dotted];
m18_50 -> m18_58  [color=darkseagreen4, key=1, label=cts, style=dashed];
m18_53 -> m18_54  [key=0, style=solid];
m18_53 -> m18_38  [key=2, style=dotted];
m18_53 -> m18_55  [key=2, style=dotted];
m18_53 -> m18_4  [key=2, style=dotted];
m18_53 -> m18_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_54 -> m18_52  [color=blue, key=0, style=bold];
m18_54 -> m18_49  [color=blue, key=0, style=bold];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_29  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_61 -> m18_23  [key=2, style=dotted];
m18_61 -> m18_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_64  [key=2, style=dotted];
m18_62 -> m18_60  [color=blue, key=0, style=bold];
m18_63 -> m18_61  [color=blue, key=0, style=bold];
m18_63 -> m18_65  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_63 -> m18_64  [key=0, style=solid];
m18_74 -> m18_75  [key=0, style=solid];
m18_74 -> m18_29  [color=darkorchid, key=3, label="Local variable Hangfire.SqlServer.SqlServerJobQueue queue", style=bold];
m18_74 -> m18_23  [key=2, style=dotted];
m18_74 -> m18_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_77 -> m18_78  [key=0, style=solid];
m18_77 -> m18_83  [key=2, style=dotted];
m18_77 -> m18_84  [key=2, style=dotted];
m18_75 -> m18_76  [key=0, style=solid];
m18_75 -> m18_28  [key=2, style=dotted];
m18_75 -> m18_72  [color=blue, key=0, style=bold];
m18_76 -> m18_74  [color=blue, key=0, style=bold];
m18_76 -> m18_78  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_76 -> m18_77  [key=0, style=solid];
m18_78 -> m18_79  [key=0, style=solid];
m18_78 -> m18_80  [key=2, style=dotted];
m18_78 -> m18_29  [key=2, style=dotted];
m18_79 -> m18_77  [color=blue, key=0, style=bold];
m18_79 -> m18_80  [key=0, style=solid];
m18_79 -> m18_81  [color=darkseagreen4, key=1, label=payload, style=dashed];
m18_79 -> m18_33  [key=2, style=dotted];
m18_79 -> m18_34  [key=2, style=dotted];
m18_90 -> m18_91  [key=0, style=solid];
m18_90 -> m18_97  [key=2, style=dotted];
m18_89 -> m18_87  [color=blue, key=0, style=bold];
m18_89 -> m18_94  [color=green, key=1, label=SqlConnection, style=dashed];
m18_89 -> m18_90  [key=0, style=solid];
m18_89 -> m18_91  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_91 -> m18_92  [key=0, style=solid];
m18_91 -> m18_93  [key=2, style=dotted];
m18_91 -> m18_29  [key=2, style=dotted];
m18_92 -> m18_90  [color=blue, key=0, style=bold];
m18_92 -> m18_93  [key=0, style=solid];
m18_92 -> m18_33  [key=2, style=dotted];
m18_92 -> m18_34  [key=2, style=dotted];
m18_105 -> m18_106  [key=0, style=solid];
m18_105 -> m18_107  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_109 -> m18_110  [key=0, style=solid];
m18_109 -> m18_112  [key=2, style=dotted];
m18_106 -> m18_107  [key=0, style=solid];
m18_106 -> m18_38  [key=2, style=dotted];
m18_106 -> m18_108  [key=2, style=dotted];
m18_106 -> m18_111  [key=2, style=dotted];
m18_106 -> m18_97  [key=2, style=dotted];
m18_107 -> m18_105  [color=blue, key=0, style=bold];
m18_107 -> m18_29  [key=2, style=dotted];
m18_107 -> m18_108  [key=0, style=solid];
m18_110 -> m18_111  [key=0, style=solid];
m18_110 -> m18_38  [key=2, style=dotted];
m18_110 -> m18_55  [key=2, style=dotted];
m18_110 -> m18_105  [color=blue, key=0, style=bold];
m18_117 -> m18_118  [key=0, style=solid];
m18_117 -> m18_121  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_117 -> m18_119  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_118 -> m18_119  [key=0, style=solid];
m18_118 -> m18_38  [key=2, style=dotted];
m18_118 -> m18_55  [key=2, style=dotted];
m18_118 -> m18_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_118 -> m18_97  [key=2, style=dotted];
m18_119 -> m18_117  [color=blue, key=0, style=bold];
m18_119 -> m18_29  [key=2, style=dotted];
m18_119 -> m18_120  [key=0, style=solid];
m18_120 -> m18_121  [key=0, style=solid];
m18_120 -> m18_33  [key=2, style=dotted];
m18_120 -> m18_34  [key=2, style=dotted];
m18_121 -> m18_122  [key=0, style=solid];
m18_121 -> m18_4  [key=2, style=dotted];
m18_121 -> m18_84  [key=2, style=dotted];
m18_122 -> m18_120  [color=blue, key=0, style=bold];
m18_122 -> m18_100  [key=2, style=dotted];
m18_122 -> m18_123  [key=0, style=solid];
m18_128 -> m18_129  [color=red, key=0, style=solid];
m18_128 -> m18_7  [key=0, style=solid];
m18_128 -> m18_130  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_129 -> m18_130  [color=red, key=0, style=solid];
m18_129 -> m18_38  [color=red, key=2, style=dotted];
m18_129 -> m18_55  [color=red, key=2, style=dotted];
m18_129 -> m18_131  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_129 -> m18_29  [key=2, style=dotted];
m18_129 -> m18_134  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_130 -> m18_128  [color=blue, key=0, style=bold];
m18_130 -> m18_131  [key=0, style=solid];
m18_130 -> m18_97  [key=2, style=dotted];
m18_131 -> m18_132  [key=0, style=solid];
m18_131 -> m18_4  [key=2, style=dotted];
m18_131 -> m18_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_132 -> m18_133  [key=0, style=solid];
m18_132 -> m18_128  [color=blue, key=0, style=bold];
m18_133 -> m18_131  [color=blue, key=0, style=bold];
m18_133 -> m18_134  [key=0, style=solid];
m18_143 -> m18_144  [key=0, style=solid];
m18_143 -> m18_145  [color=darkseagreen4, key=1, label=critical, style=dashed];
m18_143 -> m18_33  [key=2, style=dotted];
m18_143 -> m18_34  [key=2, style=dotted];
m18_141 -> m18_142  [key=0, style=solid];
m18_141 -> m18_38  [key=2, style=dotted];
m18_141 -> m18_55  [key=2, style=dotted];
m18_141 -> m18_97  [key=2, style=dotted];
m18_142 -> m18_140  [color=blue, key=0, style=bold];
m18_142 -> m18_29  [key=2, style=dotted];
m18_142 -> m18_143  [key=0, style=solid];
m18_142 -> m18_146  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_144 -> m18_145  [key=0, style=solid];
m18_144 -> m18_38  [key=2, style=dotted];
m18_144 -> m18_108  [key=2, style=dotted];
m18_144 -> m18_98  [key=2, style=dotted];
m18_145 -> m18_143  [color=blue, key=0, style=bold];
m18_145 -> m18_5  [key=2, style=dotted];
m18_145 -> m18_146  [key=0, style=solid];
m18_153 -> m18_151  [color=blue, key=0, style=bold];
m18_153 -> m18_155  [color=green, key=1, label=SqlConnection, style=dashed];
m18_153 -> m18_154  [key=0, style=solid];
m18_153 -> m18_156  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_159 -> m18_160  [key=0, style=solid];
m18_159 -> m18_100  [key=2, style=dotted];
m18_160 -> m18_161  [key=0, style=solid];
m18_160 -> m18_38  [key=2, style=dotted];
m18_160 -> m18_55  [key=2, style=dotted];
m18_160 -> m18_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_160 -> m18_153  [color=blue, key=0, style=bold];
m18_163 -> m18_164  [key=0, style=solid];
m18_163 -> m18_166  [key=2, style=dotted];
m18_163 -> m18_167  [key=2, style=dotted];
m18_164 -> m18_162  [color=blue, key=0, style=bold];
m18_164 -> m18_165  [key=0, style=solid];
m18_178 -> m18_179  [key=0, style=solid];
m18_178 -> m18_38  [key=2, style=dotted];
m18_178 -> m18_55  [key=2, style=dotted];
m18_178 -> m18_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_181 -> m18_182  [key=0, style=solid];
m18_181 -> m18_183  [key=2, style=dotted];
m18_181 -> m18_31  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_174 -> m18_175  [key=0, style=solid];
m18_177 -> m18_178  [key=0, style=solid];
m18_175 -> m18_176  [key=0, style=solid];
m18_175 -> m18_38  [key=2, style=dotted];
m18_175 -> m18_108  [key=2, style=dotted];
m18_176 -> m18_174  [color=blue, key=0, style=bold];
m18_179 -> m18_177  [color=blue, key=0, style=bold];
m18_180 -> m18_181  [key=0, style=solid];
m18_180 -> m18_87  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_180 -> m18_151  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_180 -> m18_21  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_180 -> m18_36  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_180 -> m18_47  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_180 -> m18_61  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_180 -> m18_74  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_180 -> m18_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_180 -> m18_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_180 -> m18_126  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_180 -> m18_138  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerJobQueueFacts", style=dashed];
m18_182 -> m18_180  [color=blue, key=0, style=bold];
m18_182 -> m18_44  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_196 -> m18_197  [key=0, style=solid];
m18_196 -> m18_38  [key=2, style=dotted];
m18_196 -> m18_55  [key=2, style=dotted];
m18_196 -> m18_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_199 -> m18_200  [key=0, style=solid];
m18_192 -> m18_193  [key=0, style=solid];
m18_192 -> m18_134  [color=darkseagreen4, key=1, label=queue, style=dashed];
m18_195 -> m18_196  [key=0, style=solid];
m18_193 -> m18_194  [key=0, style=solid];
m18_193 -> m18_38  [key=2, style=dotted];
m18_193 -> m18_108  [key=2, style=dotted];
m18_193 -> m18_141  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_194 -> m18_192  [color=blue, key=0, style=bold];
m18_197 -> m18_195  [color=blue, key=0, style=bold];
m18_198 -> m18_199  [key=0, style=solid];
m18_200 -> m18_198  [color=blue, key=0, style=bold];
m18_208 -> m18_209  [key=0, style=solid];
m18_211 -> m18_212  [key=0, style=solid];
m18_209 -> m18_210  [key=0, style=solid];
m18_209 -> m18_43  [key=2, style=dotted];
m18_210 -> m18_208  [color=blue, key=0, style=bold];
m18_212 -> m18_213  [key=0, style=solid];
m18_212 -> m18_38  [key=2, style=dotted];
m18_212 -> m18_55  [key=2, style=dotted];
m18_213 -> m18_211  [color=blue, key=0, style=bold];
m18_17 -> m18_15  [color=blue, key=0, style=bold];
m18_81 -> m18_5  [key=2, style=dotted];
m18_81 -> m18_82  [key=0, style=solid];
m18_148 -> m18_5  [key=2, style=dotted];
m18_148 -> m18_149  [key=0, style=solid];
m18_148 -> m18_72  [key=2, style=dotted];
m18_82 -> m18_76  [color=blue, key=0, style=bold];
m18_82 -> m18_83  [key=0, style=solid];
m18_82 -> m18_71  [key=2, style=dotted];
m18_146 -> m18_148  [color=darkseagreen4, key=1, label="@default", style=dashed];
m18_146 -> m18_147  [key=0, style=solid];
m18_146 -> m18_33  [key=2, style=dotted];
m18_146 -> m18_34  [key=2, style=dotted];
m18_147 -> m18_148  [key=0, style=solid];
m18_147 -> m18_98  [key=2, style=dotted];
m18_147 -> m18_71  [key=2, style=dotted];
m18_149 -> m18_140  [color=blue, key=0, style=bold];
m18_149 -> m18_150  [key=0, style=solid];
m18_149 -> m18_73  [key=2, style=dotted];
m18_149 -> m18_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_43 -> m18_44  [key=0, style=solid];
m18_57 -> m18_58  [key=0, style=solid];
m18_57 -> m18_38  [key=2, style=dotted];
m18_57 -> m18_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_51 -> m18_52  [key=0, style=solid];
m18_51 -> m18_56  [key=2, style=dotted];
m18_58 -> m18_59  [key=0, style=solid];
m18_58 -> m18_34  [key=2, style=dotted];
m18_58 -> m18_60  [key=2, style=dotted];
m18_59 -> m18_57  [color=blue, key=0, style=bold];
m18_59 -> m18_56  [color=blue, key=0, style=bold];
m18_71 -> m18_69  [color=blue, key=0, style=bold];
m18_71 -> m18_214  [key=0, style=solid];
m18_112 -> m18_113  [key=0, style=solid];
m18_84 -> m18_85  [key=0, style=solid];
m18_84 -> m18_73  [key=2, style=dotted];
m18_84 -> m18_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_183 -> m18_58  [color=darkseagreen4, key=1, label=cts, style=dashed];
m18_214 -> m18_215  [key=0, style=solid];
m18_214 -> m18_64  [key=2, style=dotted];
m18_215 -> m18_71  [color=blue, key=0, style=bold];
m18_73 -> m18_74  [key=0, style=solid];
m18_73 -> m18_77  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m18_73 -> m18_73  [color=darkorchid, key=3, label="Local variable string arrangeSql", style=bold];
m18_217 -> m18_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_2  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_8  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_9  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_10  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_11  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_12  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_13  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_14  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_68  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_69  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_82  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_83  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_84  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_88  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_85  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_97  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_98  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_99  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_113  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_114  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_118  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_124  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_125  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_126  [color=red, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_136  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_137  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_138  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_147  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_148  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_149  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_155  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_167  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_168  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_169  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_170  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_186  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_187  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_189  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_202  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_203  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_204  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_205  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_217 -> m18_214  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m18_218 -> m18_178  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_218 -> m18_181  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_219 -> m18_196  [color=darkseagreen4, key=1, label=exception, style=dashed];
m18_219 -> m18_199  [color=darkseagreen4, key=1, label=exception, style=dashed];
m19_133 -> m19_134  [color=red, key=0, style=solid];
m19_134 -> m19_135  [color=red, key=0, style=solid];
m19_134 -> m19_136  [color=red, key=2, style=dotted];
m19_134 -> m19_137  [color=red, key=2, style=dotted];
m19_135 -> m19_133  [color=blue, key=0, style=bold];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_29  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_29  [key=0, style=solid];
m19_29 -> m19_30  [key=0, style=solid];
m19_28 -> m19_32  [key=0, style=solid];
m19_28 -> n12  [key=2, style=dotted];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_33  [key=2, style=dotted];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_25  [key=2, style=dotted];
m19_32 -> m19_26  [color=blue, key=0, style=bold];
m19_23 -> m19_119  [key=0, style=solid];
m19_23 -> m19_37  [color=darkorchid, key=3, label="method methodReturn SqlConnection CreateAndOpenConnection", style=bold];
m19_23 -> m19_121  [color=darkorchid, key=3, label="method methodReturn SqlConnection CreateAndOpenConnection", style=bold];
m19_119 -> m19_120  [key=0, style=solid];
m19_119 -> m19_121  [key=0, style=solid];
m19_120 -> m19_124  [key=0, style=solid];
m19_121 -> m19_122  [key=0, style=solid];
m19_121 -> m19_125  [key=2, style=dotted];
m19_121 -> m19_123  [color=darkseagreen4, key=1, label=connection, style=dashed];
m19_122 -> m19_123  [key=0, style=solid];
m19_122 -> m19_126  [key=2, style=dotted];
m19_123 -> m19_124  [key=0, style=solid];
m19_124 -> m19_23  [color=blue, key=0, style=bold];
m19_127 -> m19_128  [key=0, style=solid];
m19_127 -> m19_129  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m19_128 -> m19_129  [key=0, style=solid];
m19_128 -> m19_130  [key=0, style=solid];
m19_128 -> m19_131  [key=2, style=dotted];
m19_129 -> m19_130  [key=0, style=solid];
m19_129 -> m19_132  [key=2, style=dotted];
m19_130 -> m19_127  [color=blue, key=0, style=bold];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_44  [color=crimson, key=0, style=bold];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_46  [key=2, style=dotted];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_47  [key=2, style=dotted];
m19_45 -> m19_42  [color=blue, key=0, style=bold];
m19_38 -> m19_39  [key=0, style=solid];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_41  [key=2, style=dotted];
m19_40 -> m19_38  [color=blue, key=0, style=bold];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_50  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_52  [key=2, style=dotted];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_53  [key=2, style=dotted];
m19_51 -> m19_48  [color=blue, key=0, style=bold];
m19_90 -> m19_91  [key=0, style=solid];
m19_90 -> m19_95  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_93  [key=2, style=dotted];
m19_91 -> m19_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_91 -> m19_91  [color=darkorchid, key=3, label="method methodReturn bool ", style=bold];
m19_92 -> m19_90  [color=blue, key=0, style=bold];
m19_20 -> m19_146  [key=0, style=solid];
m19_20 -> m19_2  [color=darkorchid, key=3, label="Parameter variable string connectionStringName", style=bold];
m19_146 -> m19_147  [key=0, style=solid];
m19_147 -> m19_148  [key=0, style=solid];
m19_148 -> m19_20  [color=blue, key=0, style=bold];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_109  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m19_105 -> m19_106  [key=0, style=solid];
m19_105 -> m19_107  [key=2, style=dotted];
m19_105 -> m19_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_105 -> m19_91  [color=darkorchid, key=3, label="method methodReturn bool ", style=bold];
m19_106 -> m19_104  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [color=blue, key=0, style=bold];
m19_37 -> m19_26  [color=darkorchid, key=3, label="Field variable SqlConnection _existingConnection", style=bold];
m19_53 -> m19_93  [color=darkorchid, key=3, label="Local variable T result", style=bold];
m19_171 -> m19_172  [key=0, style=solid];
m19_171 -> m19_173  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m19_77 -> m19_78  [key=0, style=solid];
m19_80 -> m19_81  [key=0, style=solid];
m19_84 -> m19_85  [key=0, style=solid];
m19_87 -> m19_88  [key=0, style=solid];
m19_78 -> m19_79  [key=0, style=solid];
m19_78 -> m19_70  [key=2, style=dotted];
m19_79 -> m19_77  [color=blue, key=0, style=bold];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_83  [key=2, style=dotted];
m19_82 -> m19_80  [color=blue, key=0, style=bold];
m19_85 -> m19_86  [key=0, style=solid];
m19_86 -> m19_84  [color=blue, key=0, style=bold];
m19_88 -> m19_89  [key=0, style=solid];
m19_89 -> m19_87  [color=blue, key=0, style=bold];
m19_95 -> m19_96  [key=0, style=solid];
m19_95 -> m19_98  [key=2, style=dotted];
m19_94 -> m19_95  [key=0, style=solid];
m19_96 -> m19_97  [key=0, style=solid];
m19_97 -> m19_94  [color=blue, key=0, style=bold];
m19_109 -> m19_110  [key=0, style=solid];
m19_109 -> m19_98  [key=2, style=dotted];
m19_108 -> m19_109  [key=0, style=solid];
m19_110 -> m19_111  [key=0, style=solid];
m19_111 -> m19_108  [color=blue, key=0, style=bold];
m19_149 -> m19_150  [key=0, style=solid];
m19_149 -> m19_93  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.Metric ", style=bold];
m19_149 -> m19_149  [color=darkorchid, key=3, label="Local variable string sqlQuery", style=bold];
m19_150 -> m19_151  [key=0, style=solid];
m19_150 -> m19_153  [color=darkseagreen4, key=1, label=sqlStorage, style=dashed];
m19_151 -> m19_152  [key=0, style=solid];
m19_151 -> m19_153  [key=0, style=solid];
m19_153 -> m19_154  [key=0, style=solid];
m19_153 -> m19_93  [key=2, style=dotted];
m19_153 -> m19_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_152 -> m19_154  [key=0, style=solid];
m19_152 -> m19_155  [key=2, style=dotted];
m19_154 -> m19_149  [color=blue, key=0, style=bold];
m19_156 -> m19_157  [key=0, style=solid];
m19_156 -> m19_158  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m19_157 -> m19_158  [key=0, style=solid];
m19_158 -> m19_159  [key=0, style=solid];
m19_158 -> m19_161  [key=2, style=dotted];
m19_158 -> m19_162  [key=2, style=dotted];
m19_159 -> m19_160  [key=0, style=solid];
m19_159 -> m19_163  [key=2, style=dotted];
m19_159 -> m19_164  [key=2, style=dotted];
m19_160 -> m19_156  [color=blue, key=0, style=bold];
m19_165 -> m19_166  [key=0, style=solid];
m19_165 -> m19_93  [color=darkorchid, key=3, label="method methodReturn Hangfire.Dashboard.Metric ", style=bold];
m19_165 -> m19_165  [color=darkorchid, key=3, label="Local variable string sqlQuery", style=bold];
m19_166 -> m19_167  [key=0, style=solid];
m19_166 -> m19_169  [color=darkseagreen4, key=1, label=sqlStorage, style=dashed];
m19_167 -> m19_168  [key=0, style=solid];
m19_167 -> m19_169  [key=0, style=solid];
m19_169 -> m19_170  [key=0, style=solid];
m19_169 -> m19_93  [key=2, style=dotted];
m19_169 -> m19_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_168 -> m19_170  [key=0, style=solid];
m19_168 -> m19_155  [key=2, style=dotted];
m19_170 -> m19_165  [color=blue, key=0, style=bold];
m19_172 -> m19_173  [key=0, style=solid];
m19_173 -> m19_174  [key=0, style=solid];
m19_173 -> m19_161  [key=2, style=dotted];
m19_173 -> m19_162  [key=2, style=dotted];
m19_174 -> m19_175  [key=0, style=solid];
m19_174 -> m19_163  [key=2, style=dotted];
m19_174 -> m19_164  [key=2, style=dotted];
m19_175 -> m19_171  [color=blue, key=0, style=bold];
m19_25 -> m19_138  [key=0, style=solid];
m19_138 -> m19_139  [key=0, style=solid];
m19_138 -> m19_141  [key=2, style=dotted];
m19_139 -> m19_140  [key=0, style=solid];
m19_139 -> m19_142  [key=2, style=dotted];
m19_140 -> m19_25  [color=blue, key=0, style=bold];
m19_34 -> m19_35  [key=0, style=solid];
m19_35 -> m19_36  [key=0, style=solid];
m19_35 -> m19_37  [key=2, style=dotted];
m19_36 -> m19_34  [color=blue, key=0, style=bold];
m19_54 -> m19_55  [key=0, style=solid];
m19_55 -> m19_56  [key=0, style=solid];
m19_55 -> m19_66  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m19_55 -> m19_68  [color=darkseagreen4, key=1, label=canNotParseMessage, style=dashed];
m19_55 -> m19_55  [color=darkorchid, key=3, label="Local variable string canNotParseMessage", style=bold];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_70  [key=2, style=dotted];
m19_56 -> m19_71  [key=2, style=dotted];
m19_56 -> m19_72  [key=2, style=dotted];
m19_56 -> m19_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_56 -> m19_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_56 -> m19_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_56 -> m19_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_56 -> m19_59  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_56 -> m19_60  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_56 -> m19_64  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_56 -> m19_65  [color=darkseagreen4, key=1, label=parts, style=dashed];
m19_66 -> m19_69  [key=0, style=solid];
m19_66 -> m19_22  [key=2, style=dotted];
m19_68 -> m19_69  [key=0, style=solid];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_73  [key=2, style=dotted];
m19_57 -> m19_60  [color=darkseagreen4, key=1, label=builder, style=dashed];
m19_57 -> m19_61  [color=darkseagreen4, key=1, label=builder, style=dashed];
m19_57 -> m19_62  [color=darkseagreen4, key=1, label=builder, style=dashed];
m19_57 -> m19_65  [color=darkseagreen4, key=1, label=builder, style=dashed];
m19_57 -> m19_66  [color=darkseagreen4, key=1, label=builder, style=dashed];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_58  [key=0, style=solid];
m19_59 -> m19_74  [key=2, style=dotted];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_75  [key=2, style=dotted];
m19_64 -> m19_65  [key=0, style=solid];
m19_64 -> m19_63  [key=0, style=solid];
m19_64 -> m19_74  [key=2, style=dotted];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_75  [key=2, style=dotted];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_61  [key=0, style=solid];
m19_58 -> m19_60  [color=darkseagreen4, key=1, label=alias, style=dashed];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_63  [key=0, style=solid];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_76  [key=2, style=dotted];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_66  [key=0, style=solid];
m19_63 -> m19_65  [color=darkseagreen4, key=1, label=alias, style=dashed];
m19_67 -> m19_68  [key=0, style=solid];
m19_69 -> m19_54  [color=blue, key=0, style=bold];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m19_2 -> m19_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m19_2 -> m19_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_2 -> m19_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_2 -> m19_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_2 -> m19_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_2 -> m19_12  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_2 -> m19_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_5  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_10  [key=0, style=solid];
m19_8 -> m19_19  [key=2, style=dotted];
m19_9 -> m19_13  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_12  [key=0, style=solid];
m19_10 -> m19_20  [key=2, style=dotted];
m19_11 -> m19_13  [key=0, style=solid];
m19_12 -> m19_17  [key=0, style=solid];
m19_12 -> m19_21  [key=2, style=dotted];
m19_12 -> m19_22  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_16  [key=0, style=solid];
m19_4 -> m19_17  [key=0, style=solid];
m19_4 -> n12  [key=2, style=dotted];
m19_6 -> m19_17  [key=0, style=solid];
m19_6 -> n12  [key=2, style=dotted];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_23  [key=2, style=dotted];
m19_16 -> m19_17  [key=0, style=solid];
m19_16 -> m19_25  [key=2, style=dotted];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_24  [key=2, style=dotted];
m19_17 -> m19_2  [color=blue, key=0, style=bold];
m19_93 -> m19_99  [key=0, style=solid];
m19_93 -> m19_101  [color=darkseagreen4, key=1, label="System.Func<SqlConnection, T>", style=dashed];
m19_93 -> m19_91  [color=darkorchid, key=3, label="Parameter variable System.Func<SqlConnection, T> func", style=bold];
m19_93 -> m19_107  [color=darkorchid, key=3, label="Parameter variable System.Func<SqlConnection, T> func", style=bold];
m19_93 -> m19_149  [color=darkorchid, key=3, label="Parameter variable System.Func<SqlConnection, T> func", style=bold];
m19_93 -> m19_165  [color=darkorchid, key=3, label="Parameter variable System.Func<SqlConnection, T> func", style=bold];
m19_99 -> m19_100  [key=0, style=solid];
m19_99 -> m19_99  [color=darkorchid, key=3, label="Local variable SqlConnection connection", style=bold];
m19_99 -> m19_23  [color=darkorchid, key=3, label="Local variable SqlConnection connection", style=bold];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_103  [key=2, style=dotted];
m19_100 -> m19_101  [key=0, style=solid];
m19_100 -> m19_23  [key=2, style=dotted];
m19_102 -> m19_93  [color=blue, key=0, style=bold];
m19_19 -> m19_143  [key=0, style=solid];
m19_19 -> m19_2  [color=darkorchid, key=3, label="Parameter variable string nameOrConnectionString", style=bold];
m19_143 -> m19_144  [key=0, style=solid];
m19_143 -> m19_145  [key=2, style=dotted];
m19_144 -> m19_19  [color=blue, key=0, style=bold];
m19_107 -> m19_112  [key=0, style=solid];
m19_107 -> m19_113  [color=darkseagreen4, key=1, label="System.Func<SqlConnection, T>", style=dashed];
m19_107 -> m19_105  [color=darkorchid, key=3, label="Parameter variable System.Func<SqlConnection, T> func", style=bold];
m19_107 -> m19_99  [color=darkorchid, key=3, label="Parameter variable System.Transactions.IsolationLevel? isolationLevel", style=bold];
m19_107 -> m19_53  [color=darkorchid, key=3, label="method methodReturn T UseTransaction", style=bold];
m19_112 -> m19_113  [key=0, style=solid];
m19_112 -> m19_117  [key=2, style=dotted];
m19_112 -> m19_114  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m19_113 -> m19_114  [key=0, style=solid];
m19_113 -> m19_93  [key=2, style=dotted];
m19_113 -> m19_115  [color=darkseagreen4, key=1, label=result, style=dashed];
m19_114 -> m19_115  [key=0, style=solid];
m19_114 -> m19_118  [key=2, style=dotted];
m19_115 -> m19_116  [key=0, style=solid];
m19_116 -> m19_107  [color=blue, key=0, style=bold];
m19_176 -> m19_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_29  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_39  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_43  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_50  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_56  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_91  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_100  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_105  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_112  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_113  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_119  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_120  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_121  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_128  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_138  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_176 -> m19_139  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m19_177 -> m19_95  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m19_178 -> m19_109  [color=darkseagreen4, key=1, label="System.Action<SqlConnection>", style=dashed];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_2 -> m21_3  [key=0, style=solid];
m21_2 -> m21_9  [key=2, style=dotted];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_10  [key=2, style=dotted];
m21_4 -> m21_5  [key=0, style=solid];
m21_4 -> m21_11  [key=2, style=dotted];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_10  [key=2, style=dotted];
m21_6 -> m21_7  [key=0, style=solid];
m21_7 -> m21_8  [color=green, key=0, style=solid];
m21_8 -> m21_8  [color=green, key=0, style=solid];
m21_8 -> m21_10  [color=green, key=2, style=dotted];
m21_8 -> m21_0  [color=blue, key=0, style=bold];
m21_12 -> m21_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m21_12 -> m21_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m21_12 -> m21_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m21_12 -> m21_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m21_12 -> m21_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m21_12 -> m21_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m21_12 -> m21_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m21_12 -> m21_8  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_7  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_8  [key=2, style=dotted];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_9  [key=2, style=dotted];
m22_5 -> m22_6  [key=0, style=solid];
m22_5 -> m22_10  [key=2, style=dotted];
m22_6 -> m22_0  [color=blue, key=0, style=bold];
m22_11 -> m22_12  [key=0, style=solid];
m22_12 -> m22_13  [key=0, style=solid];
m22_12 -> m22_14  [key=2, style=dotted];
m22_13 -> m22_11  [color=blue, key=0, style=bold];
m22_15 -> m22_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m22_15 -> m22_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m22_15 -> m22_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m22_15 -> m22_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m22_15 -> m22_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m22_15 -> m22_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m23_162 -> m23_163  [key=0, style=solid];
m23_163 -> m23_164  [key=0, style=solid];
m23_163 -> m23_90  [key=2, style=dotted];
m23_164 -> m23_165  [key=0, style=solid];
m23_164 -> m23_91  [key=2, style=dotted];
m23_165 -> m23_166  [key=0, style=solid];
m23_165 -> m23_92  [key=2, style=dotted];
m23_165 -> m23_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_166 -> m23_162  [color=blue, key=0, style=bold];
m23_77 -> m23_78  [key=0, style=solid];
m23_78 -> m23_79  [key=0, style=solid];
m23_78 -> m23_39  [key=2, style=dotted];
m23_78 -> m23_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_79 -> m23_80  [key=0, style=solid];
m23_79 -> m23_65  [key=2, style=dotted];
m23_80 -> m23_77  [color=blue, key=0, style=bold];
m23_243 -> m23_244  [key=0, style=solid];
m23_244 -> m23_245  [color=red, key=0, style=solid];
m23_244 -> m23_250  [key=2, style=dotted];
m23_244 -> m23_248  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_244 -> m23_256  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_244 -> m23_259  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_245 -> m23_246  [color=red, key=0, style=solid];
m23_245 -> m23_22  [color=red, key=2, style=dotted];
m23_245 -> m23_251  [color=red, key=2, style=dotted];
m23_245 -> m23_252  [color=red, key=1, label="lambda expression", style=dashed];
m23_248 -> m23_249  [key=0, style=solid];
m23_248 -> m23_92  [key=2, style=dotted];
m23_248 -> m23_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_246 -> m23_247  [key=0, style=solid];
m23_246 -> m23_90  [key=2, style=dotted];
m23_247 -> m23_248  [key=0, style=solid];
m23_247 -> m23_91  [key=2, style=dotted];
m23_249 -> m23_243  [color=blue, key=0, style=bold];
m23_232 -> m23_233  [key=0, style=solid];
m23_233 -> m23_234  [key=0, style=solid];
m23_233 -> m23_90  [key=2, style=dotted];
m23_234 -> m23_235  [key=0, style=solid];
m23_234 -> m23_91  [key=2, style=dotted];
m23_235 -> m23_236  [key=0, style=solid];
m23_235 -> m23_92  [key=2, style=dotted];
m23_235 -> m23_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_236 -> m23_232  [color=blue, key=0, style=bold];
m23_173 -> m23_174  [key=0, style=solid];
m23_174 -> m23_175  [key=0, style=solid];
m23_174 -> m23_22  [key=2, style=dotted];
m23_174 -> m23_23  [key=2, style=dotted];
m23_174 -> m23_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_175 -> m23_176  [key=0, style=solid];
m23_175 -> m23_90  [key=2, style=dotted];
m23_176 -> m23_177  [color=red, key=0, style=solid];
m23_176 -> m23_91  [key=2, style=dotted];
m23_177 -> m23_178  [color=red, key=0, style=solid];
m23_177 -> m23_92  [color=red, key=2, style=dotted];
m23_177 -> m23_182  [color=red, key=1, label="lambda expression", style=dashed];
m23_178 -> m23_173  [color=blue, key=0, style=bold];
m23_185 -> m23_186  [key=0, style=solid];
m23_186 -> m23_187  [key=0, style=solid];
m23_186 -> m23_90  [key=2, style=dotted];
m23_187 -> m23_188  [color=red, key=0, style=solid];
m23_187 -> m23_91  [key=2, style=dotted];
m23_188 -> m23_189  [color=red, key=0, style=solid];
m23_188 -> m23_92  [color=red, key=2, style=dotted];
m23_188 -> m23_190  [color=red, key=1, label="lambda expression", style=dashed];
m23_189 -> m23_185  [color=blue, key=0, style=bold];
m23_113 -> m23_114  [key=0, style=solid];
m23_114 -> m23_115  [key=0, style=solid];
m23_114 -> m23_22  [key=2, style=dotted];
m23_114 -> m23_39  [key=2, style=dotted];
m23_114 -> m23_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_115 -> m23_116  [key=0, style=solid];
m23_115 -> m23_90  [key=2, style=dotted];
m23_115 -> m23_124  [color=darkseagreen4, key=1, label=worker, style=dashed];
m23_116 -> m23_117  [key=0, style=solid];
m23_116 -> m23_39  [key=2, style=dotted];
m23_116 -> m23_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_117 -> m23_118  [key=0, style=solid];
m23_117 -> m23_92  [key=2, style=dotted];
m23_117 -> m23_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_118 -> m23_119  [key=0, style=solid];
m23_118 -> m23_92  [key=2, style=dotted];
m23_118 -> m23_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_119 -> m23_113  [color=blue, key=0, style=bold];
m23_212 -> m23_213  [color=red, key=0, style=solid];
m23_213 -> m23_214  [color=red, key=0, style=solid];
m23_213 -> m23_22  [color=red, key=2, style=dotted];
m23_213 -> m23_39  [color=red, key=2, style=dotted];
m23_213 -> m23_220  [color=red, key=1, label="lambda expression", style=dashed];
m23_214 -> m23_215  [key=0, style=solid];
m23_214 -> m23_90  [key=2, style=dotted];
m23_214 -> m23_224  [color=darkseagreen4, key=1, label=worker, style=dashed];
m23_215 -> m23_216  [key=0, style=solid];
m23_215 -> m23_219  [key=2, style=dotted];
m23_215 -> m23_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_216 -> m23_217  [key=0, style=solid];
m23_216 -> m23_92  [key=2, style=dotted];
m23_216 -> m23_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_217 -> m23_218  [key=0, style=solid];
m23_217 -> m23_92  [key=2, style=dotted];
m23_217 -> m23_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_218 -> m23_212  [color=blue, key=0, style=bold];
m23_90 -> m23_293  [key=0, style=solid];
m23_293 -> m23_294  [key=0, style=solid];
m23_293 -> m23_69  [key=2, style=dotted];
m23_294 -> m23_90  [color=blue, key=0, style=bold];
m23_61 -> m23_62  [key=0, style=solid];
m23_62 -> m23_63  [key=0, style=solid];
m23_62 -> m23_39  [key=2, style=dotted];
m23_62 -> m23_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_63 -> m23_64  [key=0, style=solid];
m23_63 -> m23_65  [key=2, style=dotted];
m23_64 -> m23_61  [color=blue, key=0, style=bold];
m23_262 -> m23_263  [key=0, style=solid];
m23_263 -> m23_264  [color=red, key=0, style=solid];
m23_263 -> m23_250  [key=2, style=dotted];
m23_263 -> m23_267  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_263 -> m23_274  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_263 -> m23_277  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_264 -> m23_265  [color=red, key=0, style=solid];
m23_264 -> m23_22  [color=red, key=2, style=dotted];
m23_264 -> n87  [color=red, key=2, style=dotted];
m23_264 -> m23_251  [color=red, key=2, style=dotted];
m23_264 -> m23_270  [color=red, key=1, label="lambda expression", style=dashed];
m23_267 -> m23_268  [key=0, style=solid];
m23_267 -> m23_92  [key=2, style=dotted];
m23_267 -> m23_273  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_265 -> m23_266  [key=0, style=solid];
m23_265 -> m23_90  [key=2, style=dotted];
m23_266 -> m23_267  [key=0, style=solid];
m23_266 -> m23_91  [key=2, style=dotted];
m23_268 -> m23_262  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_17  [key=2, style=dotted];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_18  [key=2, style=dotted];
m23_3 -> m23_4  [color=red, key=0, style=solid];
m23_3 -> m23_19  [key=2, style=dotted];
m23_4 -> m23_5  [color=red, key=0, style=solid];
m23_4 -> m23_20  [color=red, key=2, style=dotted];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_21  [key=2, style=dotted];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_22  [key=2, style=dotted];
m23_6 -> m23_23  [key=2, style=dotted];
m23_6 -> m23_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_24  [key=2, style=dotted];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_22  [key=2, style=dotted];
m23_8 -> m23_23  [key=2, style=dotted];
m23_8 -> m23_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_22  [key=2, style=dotted];
m23_9 -> m23_23  [key=2, style=dotted];
m23_9 -> m23_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_22  [key=2, style=dotted];
m23_10 -> m23_25  [key=2, style=dotted];
m23_10 -> m23_26  [key=2, style=dotted];
m23_10 -> m23_23  [key=2, style=dotted];
m23_10 -> m23_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_10 -> m23_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_11 -> m23_12  [color=red, key=0, style=solid];
m23_11 -> m23_27  [key=2, style=dotted];
m23_12 -> m23_13  [color=red, key=0, style=solid];
m23_12 -> m23_22  [color=red, key=2, style=dotted];
m23_12 -> m23_23  [color=red, key=2, style=dotted];
m23_12 -> m23_49  [color=red, key=1, label="lambda expression", style=dashed];
m23_13 -> m23_14  [key=0, style=solid];
m23_13 -> m23_22  [key=2, style=dotted];
m23_13 -> m23_23  [key=2, style=dotted];
m23_13 -> m23_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_14 -> m23_15  [color=red, key=0, style=solid];
m23_14 -> m23_28  [key=2, style=dotted];
m23_15 -> m23_16  [color=red, key=0, style=solid];
m23_15 -> m23_22  [color=red, key=2, style=dotted];
m23_15 -> m23_23  [color=red, key=2, style=dotted];
m23_15 -> m23_57  [color=red, key=1, label="lambda expression", style=dashed];
m23_16 -> m23_0  [color=blue, key=0, style=bold];
m23_84 -> m23_85  [key=0, style=solid];
m23_85 -> m23_86  [key=0, style=solid];
m23_85 -> m23_90  [key=2, style=dotted];
m23_86 -> m23_87  [key=0, style=solid];
m23_86 -> m23_91  [key=2, style=dotted];
m23_87 -> m23_88  [key=0, style=solid];
m23_87 -> m23_92  [key=2, style=dotted];
m23_87 -> m23_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_88 -> m23_89  [key=0, style=solid];
m23_88 -> m23_92  [key=2, style=dotted];
m23_88 -> m23_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_89 -> m23_84  [color=blue, key=0, style=bold];
m23_279 -> m23_280  [key=0, style=solid];
m23_280 -> m23_281  [key=0, style=solid];
m23_280 -> m23_22  [key=2, style=dotted];
m23_280 -> m23_25  [key=2, style=dotted];
m23_280 -> m23_285  [key=2, style=dotted];
m23_280 -> m23_286  [key=2, style=dotted];
m23_280 -> m23_23  [key=2, style=dotted];
m23_280 -> m23_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_281 -> m23_282  [key=0, style=solid];
m23_281 -> m23_90  [key=2, style=dotted];
m23_282 -> m23_283  [key=0, style=solid];
m23_282 -> m23_91  [key=2, style=dotted];
m23_283 -> m23_284  [key=0, style=solid];
m23_283 -> m23_92  [key=2, style=dotted];
m23_283 -> m23_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_284 -> m23_279  [color=blue, key=0, style=bold];
m23_290 -> m23_291  [key=0, style=solid];
m23_29 -> m23_30  [key=0, style=solid];
m23_33 -> m23_34  [key=0, style=solid];
m23_36 -> m23_37  [key=0, style=solid];
m23_41 -> m23_42  [key=0, style=solid];
m23_45 -> m23_46  [key=0, style=solid];
m23_49 -> m23_50  [key=0, style=solid];
m23_53 -> m23_54  [key=0, style=solid];
m23_57 -> m23_58  [key=0, style=solid];
m23_30 -> m23_31  [key=0, style=solid];
m23_30 -> m23_32  [key=2, style=dotted];
m23_31 -> m23_29  [color=blue, key=0, style=bold];
m23_34 -> m23_35  [key=0, style=solid];
m23_35 -> m23_33  [color=blue, key=0, style=bold];
m23_37 -> m23_38  [key=0, style=solid];
m23_37 -> m23_39  [key=2, style=dotted];
m23_37 -> m23_40  [key=2, style=dotted];
m23_38 -> m23_36  [color=blue, key=0, style=bold];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_44  [key=2, style=dotted];
m23_43 -> m23_41  [color=blue, key=0, style=bold];
m23_46 -> m23_47  [key=0, style=solid];
m23_46 -> m23_48  [key=2, style=dotted];
m23_47 -> m23_45  [color=blue, key=0, style=bold];
m23_50 -> m23_51  [key=0, style=solid];
m23_50 -> m23_52  [key=2, style=dotted];
m23_51 -> m23_49  [color=blue, key=0, style=bold];
m23_54 -> m23_55  [key=0, style=solid];
m23_54 -> m23_39  [key=2, style=dotted];
m23_54 -> m23_56  [key=2, style=dotted];
m23_55 -> m23_53  [color=blue, key=0, style=bold];
m23_58 -> m23_59  [key=0, style=solid];
m23_58 -> m23_39  [key=2, style=dotted];
m23_58 -> m23_60  [key=2, style=dotted];
m23_59 -> m23_57  [color=blue, key=0, style=bold];
m23_66 -> m23_67  [key=0, style=solid];
m23_67 -> m23_68  [key=0, style=solid];
m23_67 -> m23_69  [key=2, style=dotted];
m23_68 -> m23_66  [color=blue, key=0, style=bold];
m23_74 -> m23_75  [key=0, style=solid];
m23_75 -> m23_76  [key=0, style=solid];
m23_75 -> m23_69  [key=2, style=dotted];
m23_76 -> m23_74  [color=blue, key=0, style=bold];
m23_81 -> m23_82  [key=0, style=solid];
m23_82 -> m23_83  [key=0, style=solid];
m23_82 -> m23_69  [key=2, style=dotted];
m23_83 -> m23_81  [color=blue, key=0, style=bold];
m23_93 -> m23_94  [key=0, style=solid];
m23_96 -> m23_97  [key=0, style=solid];
m23_94 -> m23_95  [key=0, style=solid];
m23_94 -> m23_32  [key=2, style=dotted];
m23_95 -> m23_93  [color=blue, key=0, style=bold];
m23_97 -> m23_98  [key=0, style=solid];
m23_97 -> m23_99  [key=2, style=dotted];
m23_98 -> m23_96  [color=blue, key=0, style=bold];
m23_106 -> m23_107  [key=0, style=solid];
m23_109 -> m23_110  [key=0, style=solid];
m23_107 -> m23_108  [key=0, style=solid];
m23_107 -> m23_40  [key=2, style=dotted];
m23_108 -> m23_106  [color=blue, key=0, style=bold];
m23_110 -> m23_111  [key=0, style=solid];
m23_110 -> m23_112  [key=2, style=dotted];
m23_111 -> m23_109  [color=blue, key=0, style=bold];
m23_120 -> m23_121  [key=0, style=solid];
m23_124 -> m23_125  [key=0, style=solid];
m23_124 -> m23_91  [key=2, style=dotted];
m23_123 -> m23_124  [key=0, style=solid];
m23_126 -> m23_127  [key=0, style=solid];
m23_129 -> m23_130  [key=0, style=solid];
m23_121 -> m23_122  [key=0, style=solid];
m23_121 -> m23_39  [key=2, style=dotted];
m23_121 -> m23_56  [key=2, style=dotted];
m23_122 -> m23_120  [color=blue, key=0, style=bold];
m23_125 -> m23_123  [color=blue, key=0, style=bold];
m23_127 -> m23_128  [key=0, style=solid];
m23_127 -> m23_112  [key=2, style=dotted];
m23_128 -> m23_126  [color=blue, key=0, style=bold];
m23_130 -> m23_131  [key=0, style=solid];
m23_130 -> m23_132  [key=2, style=dotted];
m23_131 -> m23_129  [color=blue, key=0, style=bold];
m23_141 -> m23_142  [key=0, style=solid];
m23_144 -> m23_145  [color=red, key=0, style=solid];
m23_148 -> m23_149  [key=0, style=solid];
m23_142 -> m23_143  [key=0, style=solid];
m23_142 -> m23_39  [key=2, style=dotted];
m23_142 -> m23_56  [key=2, style=dotted];
m23_143 -> m23_141  [color=blue, key=0, style=bold];
m23_145 -> m23_146  [color=red, key=0, style=solid];
m23_145 -> m23_39  [color=red, key=2, style=dotted];
m23_145 -> m23_147  [color=red, key=2, style=dotted];
m23_146 -> m23_144  [color=blue, key=0, style=bold];
m23_149 -> m23_150  [key=0, style=solid];
m23_149 -> m23_39  [key=2, style=dotted];
m23_149 -> m23_56  [key=2, style=dotted];
m23_150 -> m23_148  [color=blue, key=0, style=bold];
m23_156 -> m23_157  [key=0, style=solid];
m23_157 -> m23_158  [key=0, style=solid];
m23_157 -> m23_39  [key=2, style=dotted];
m23_157 -> m23_56  [key=2, style=dotted];
m23_157 -> m23_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_158 -> m23_156  [color=blue, key=0, style=bold];
m23_159 -> m23_160  [key=0, style=solid];
m23_160 -> m23_161  [key=0, style=solid];
m23_161 -> m23_159  [color=blue, key=0, style=bold];
m23_167 -> m23_168  [key=0, style=solid];
m23_168 -> m23_169  [key=0, style=solid];
m23_168 -> m23_39  [key=2, style=dotted];
m23_168 -> m23_56  [key=2, style=dotted];
m23_168 -> m23_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_169 -> m23_167  [color=blue, key=0, style=bold];
m23_170 -> m23_171  [key=0, style=solid];
m23_171 -> m23_172  [key=0, style=solid];
m23_172 -> m23_170  [color=blue, key=0, style=bold];
m23_179 -> m23_180  [key=0, style=solid];
m23_182 -> m23_183  [color=red, key=0, style=solid];
m23_180 -> m23_181  [key=0, style=solid];
m23_180 -> m23_39  [key=2, style=dotted];
m23_180 -> m23_56  [key=2, style=dotted];
m23_181 -> m23_179  [color=blue, key=0, style=bold];
m23_183 -> m23_184  [color=red, key=0, style=solid];
m23_183 -> m23_39  [color=red, key=2, style=dotted];
m23_183 -> m23_147  [color=red, key=2, style=dotted];
m23_184 -> m23_182  [color=blue, key=0, style=bold];
m23_190 -> m23_191  [color=red, key=0, style=solid];
m23_191 -> m23_192  [color=red, key=0, style=solid];
m23_191 -> m23_39  [color=red, key=2, style=dotted];
m23_191 -> m23_147  [color=red, key=2, style=dotted];
m23_192 -> m23_190  [color=blue, key=0, style=bold];
m23_200 -> m23_201  [color=red, key=0, style=solid];
m23_204 -> m23_205  [key=0, style=solid];
m23_204 -> m23_91  [key=2, style=dotted];
m23_203 -> m23_204  [key=0, style=solid];
m23_206 -> m23_207  [key=0, style=solid];
m23_209 -> m23_210  [key=0, style=solid];
m23_201 -> m23_202  [color=red, key=0, style=solid];
m23_201 -> m23_39  [color=red, key=2, style=dotted];
m23_201 -> m23_147  [color=red, key=2, style=dotted];
m23_202 -> m23_200  [color=blue, key=0, style=bold];
m23_205 -> m23_203  [color=blue, key=0, style=bold];
m23_207 -> m23_208  [key=0, style=solid];
m23_207 -> m23_39  [key=2, style=dotted];
m23_207 -> m23_56  [key=2, style=dotted];
m23_208 -> m23_206  [color=blue, key=0, style=bold];
m23_210 -> m23_211  [key=0, style=solid];
m23_210 -> m23_132  [key=2, style=dotted];
m23_211 -> m23_209  [color=blue, key=0, style=bold];
m23_220 -> m23_221  [color=red, key=0, style=solid];
m23_224 -> m23_225  [key=0, style=solid];
m23_224 -> m23_91  [key=2, style=dotted];
m23_223 -> m23_224  [key=0, style=solid];
m23_226 -> m23_227  [key=0, style=solid];
m23_229 -> m23_230  [key=0, style=solid];
m23_221 -> m23_222  [color=red, key=0, style=solid];
m23_221 -> m23_39  [color=red, key=2, style=dotted];
m23_221 -> m23_147  [color=red, key=2, style=dotted];
m23_222 -> m23_220  [color=blue, key=0, style=bold];
m23_225 -> m23_223  [color=blue, key=0, style=bold];
m23_227 -> m23_228  [key=0, style=solid];
m23_227 -> m23_112  [key=2, style=dotted];
m23_228 -> m23_226  [color=blue, key=0, style=bold];
m23_230 -> m23_231  [key=0, style=solid];
m23_230 -> m23_132  [key=2, style=dotted];
m23_231 -> m23_229  [color=blue, key=0, style=bold];
m23_237 -> m23_238  [key=0, style=solid];
m23_238 -> m23_239  [key=0, style=solid];
m23_238 -> m23_39  [key=2, style=dotted];
m23_238 -> m23_56  [key=2, style=dotted];
m23_238 -> m23_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_239 -> m23_237  [color=blue, key=0, style=bold];
m23_240 -> m23_241  [key=0, style=solid];
m23_241 -> m23_242  [key=0, style=solid];
m23_242 -> m23_240  [color=blue, key=0, style=bold];
m23_256 -> m23_257  [key=0, style=solid];
m23_256 -> m23_39  [key=2, style=dotted];
m23_256 -> m23_56  [key=2, style=dotted];
m23_256 -> m23_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_259 -> m23_260  [key=0, style=solid];
m23_259 -> m23_261  [key=2, style=dotted];
m23_252 -> m23_253  [color=red, key=0, style=solid];
m23_255 -> m23_256  [key=0, style=solid];
m23_253 -> m23_254  [color=red, key=0, style=solid];
m23_253 -> m23_39  [color=red, key=2, style=dotted];
m23_253 -> m23_147  [color=red, key=2, style=dotted];
m23_254 -> m23_252  [color=blue, key=0, style=bold];
m23_257 -> m23_255  [color=blue, key=0, style=bold];
m23_258 -> m23_259  [key=0, style=solid];
m23_260 -> m23_258  [color=blue, key=0, style=bold];
m23_274 -> m23_275  [key=0, style=solid];
m23_274 -> m23_39  [key=2, style=dotted];
m23_274 -> m23_56  [key=2, style=dotted];
m23_274 -> m23_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_277 -> m23_278  [key=0, style=solid];
m23_270 -> m23_271  [color=red, key=0, style=solid];
m23_273 -> m23_274  [key=0, style=solid];
m23_271 -> m23_272  [color=red, key=0, style=solid];
m23_271 -> m23_39  [color=red, key=2, style=dotted];
m23_271 -> m23_147  [color=red, key=2, style=dotted];
m23_272 -> m23_270  [color=blue, key=0, style=bold];
m23_275 -> m23_273  [color=blue, key=0, style=bold];
m23_276 -> m23_277  [key=0, style=solid];
m23_278 -> m23_276  [color=blue, key=0, style=bold];
m23_287 -> m23_288  [key=0, style=solid];
m23_288 -> m23_289  [key=0, style=solid];
m23_288 -> m23_44  [key=2, style=dotted];
m23_289 -> m23_287  [color=blue, key=0, style=bold];
m23_291 -> m23_292  [key=0, style=solid];
m23_291 -> m23_39  [key=2, style=dotted];
m23_291 -> m23_56  [key=2, style=dotted];
m23_292 -> m23_290  [color=blue, key=0, style=bold];
m23_151 -> m23_152  [key=0, style=solid];
m23_152 -> m23_153  [key=0, style=solid];
m23_152 -> m23_90  [key=2, style=dotted];
m23_153 -> m23_154  [key=0, style=solid];
m23_153 -> m23_91  [key=2, style=dotted];
m23_154 -> m23_155  [key=0, style=solid];
m23_154 -> m23_92  [key=2, style=dotted];
m23_154 -> m23_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_155 -> m23_151  [color=blue, key=0, style=bold];
m23_133 -> m23_134  [key=0, style=solid];
m23_134 -> m23_135  [color=red, key=0, style=solid];
m23_134 -> m23_22  [key=2, style=dotted];
m23_134 -> m23_140  [key=2, style=dotted];
m23_134 -> m23_23  [key=2, style=dotted];
m23_134 -> m23_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_135 -> m23_136  [color=red, key=0, style=solid];
m23_135 -> m23_22  [color=red, key=2, style=dotted];
m23_135 -> m23_140  [color=red, key=2, style=dotted];
m23_135 -> m23_144  [color=red, key=1, label="lambda expression", style=dashed];
m23_136 -> m23_137  [key=0, style=solid];
m23_136 -> m23_22  [key=2, style=dotted];
m23_136 -> m23_140  [key=2, style=dotted];
m23_136 -> m23_23  [key=2, style=dotted];
m23_136 -> m23_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_137 -> m23_138  [key=0, style=solid];
m23_137 -> m23_90  [key=2, style=dotted];
m23_138 -> m23_139  [key=0, style=solid];
m23_138 -> m23_91  [key=2, style=dotted];
m23_139 -> m23_133  [color=blue, key=0, style=bold];
m23_100 -> m23_101  [key=0, style=solid];
m23_101 -> m23_102  [key=0, style=solid];
m23_101 -> m23_90  [key=2, style=dotted];
m23_102 -> m23_103  [key=0, style=solid];
m23_102 -> m23_91  [key=2, style=dotted];
m23_103 -> m23_104  [key=0, style=solid];
m23_103 -> m23_92  [key=2, style=dotted];
m23_103 -> m23_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_104 -> m23_105  [key=0, style=solid];
m23_104 -> m23_92  [key=2, style=dotted];
m23_104 -> m23_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_105 -> m23_100  [color=blue, key=0, style=bold];
m23_193 -> m23_194  [color=red, key=0, style=solid];
m23_194 -> m23_195  [color=red, key=0, style=solid];
m23_194 -> m23_22  [color=red, key=2, style=dotted];
m23_194 -> m23_39  [color=red, key=2, style=dotted];
m23_194 -> m23_200  [color=red, key=1, label="lambda expression", style=dashed];
m23_195 -> m23_196  [key=0, style=solid];
m23_195 -> m23_90  [key=2, style=dotted];
m23_195 -> m23_204  [color=darkseagreen4, key=1, label=worker, style=dashed];
m23_196 -> m23_197  [key=0, style=solid];
m23_196 -> m23_39  [key=2, style=dotted];
m23_196 -> m23_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_197 -> m23_198  [key=0, style=solid];
m23_197 -> m23_92  [key=2, style=dotted];
m23_197 -> m23_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_198 -> m23_199  [key=0, style=solid];
m23_198 -> m23_92  [key=2, style=dotted];
m23_198 -> m23_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_199 -> m23_193  [color=blue, key=0, style=bold];
m23_48 -> m23_295  [key=0, style=solid];
m23_295 -> m23_48  [color=blue, key=0, style=bold];
m23_70 -> m23_71  [key=0, style=solid];
m23_71 -> m23_72  [key=0, style=solid];
m23_71 -> m23_39  [key=2, style=dotted];
m23_71 -> m23_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_72 -> m23_73  [key=0, style=solid];
m23_72 -> m23_65  [key=2, style=dotted];
m23_73 -> m23_70  [color=blue, key=0, style=bold];
m23_296 -> m23_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_4  [color=red, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_12  [color=red, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_15  [color=red, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_62  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_85  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_88  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_101  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_102  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_107  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_114  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_124  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_118  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_135  [color=red, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_138  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_152  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_153  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_163  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_174  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_175  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_176  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_177  [color=red, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_186  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_187  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_188  [color=red, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_194  [color=red, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_195  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_196  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_204  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_197  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_198  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_213  [color=red, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_214  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_215  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_224  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_216  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_217  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_233  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_234  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_235  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_245  [color=red, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_246  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_247  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_248  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_264  [color=red, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_265  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_266  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_267  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_280  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_281  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_282  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_283  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_296 -> m23_293  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m23_297 -> m23_124  [color=darkseagreen4, key=1, label=worker, style=dashed];
m23_298 -> m23_204  [color=darkseagreen4, key=1, label=worker, style=dashed];
m23_299 -> m23_224  [color=darkseagreen4, key=1, label=worker, style=dashed];
m23_300 -> m23_256  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_300 -> m23_259  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_301 -> m23_274  [color=darkseagreen4, key=1, label=exception, style=dashed];
m23_301 -> m23_277  [color=darkseagreen4, key=1, label=exception, style=dashed];
}
