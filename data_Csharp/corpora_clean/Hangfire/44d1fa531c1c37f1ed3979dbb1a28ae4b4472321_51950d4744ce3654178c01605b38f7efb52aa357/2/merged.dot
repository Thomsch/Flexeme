digraph  {
n263 [label="Hangfire.SqlServer.SqlServerConnection", span=""];
n0 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection)"];
n1 [label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="36-36", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection)"];
n2 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", span="44-44", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)"];
n3 [label="connection == null", span="50-50", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)"];
n5 [label="queueProviders == null", span="51-51", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)"];
n7 [label="_connection = connection", span="53-53", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)"];
n8 [label="_isolationLevel = isolationLevel", span="54-54", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)"];
n9 [label="_queueProviders = queueProviders", span="55-55", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)"];
n10 [label="OwnsConnection = ownsConnection", span="57-57", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)"];
n4 [label="throw new ArgumentNullException(''connection'');", span="50-50", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)"];
n6 [label="throw new ArgumentNullException(''queueProviders'');", span="51-51", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)"];
n11 [label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", span="44-44", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)"];
n12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n13 [label="Entry Hangfire.SqlServer.SqlServerConnection.Dispose()", span="63-63", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()"];
n14 [label=OwnsConnection, span="65-65", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()"];
n15 [label="_connection.Dispose()", span="67-67", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()"];
n16 [label="Exit Hangfire.SqlServer.SqlServerConnection.Dispose()", span="63-63", cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()"];
n17 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose"];
n18 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="71-71", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()"];
n19 [label="return new SqlServerWriteOnlyTransaction(_connection, _isolationLevel, _queueProviders);", span="73-73", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()"];
n20 [label="Exit Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="71-71", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()"];
n21 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel, Hangfire.SqlServer.PersistentJobQueueProviderCollection)"];
n22 [label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="76-76", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)"];
n23 [label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:{0}'', resource),\r\n                timeout,\r\n                _connection);", span="78-81", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)"];
n24 [label="Exit Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="76-76", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)"];
n25 [label="Entry SqlServerDistributedLock.cstr", span="", cluster="SqlServerDistributedLock.cstr"];
n26 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
n27 [label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="84-84", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
n28 [label="queues == null || queues.Length == 0", span="86-86", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
n30 [label="var providers = queues\r\n                .Select(queue => _queueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="88-91", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
n32 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Multiple provider instances registered for queues: {0}. You should choose only one type of persistent queues per server instance.'',\r\n                    String.Join('', '', queues)));", span="95-97", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
n34 [label="return persistentQueue.Dequeue(queues, cancellationToken);", span="101-101", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
n29 [label="throw new ArgumentNullException(''queues'');", span="86-86", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
n31 [label="providers.Length != 1", span="93-93", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
n36 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n37 [label="Entry Unk.Distinct", span="", cluster="Unk.Distinct"];
n38 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray"];
n43 [label="Entry lambda expression", span="89-89", cluster="lambda expression"];
n33 [label="var persistentQueue = providers[0].GetJobQueue(_connection)", span="100-100", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
n41 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue"];
n35 [label="Exit Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="84-84", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)"];
n42 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue"];
n39 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
n40 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])"];
n44 [label="_queueProviders.GetProvider(queue)", span="89-89", cluster="lambda expression"];
n45 [label="Exit lambda expression", span="89-89", cluster="lambda expression"];
n46 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)"];
n47 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n48 [label="job == null", span="110-110", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n50 [label="parameters == null", span="111-111", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n53 [label="var invocationData = InvocationData.Serialize(job)", span="118-118", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n54 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = createdAt,\r\n                    expireAt = createdAt.Add(expireIn)\r\n                }).Single().ToString()", span="120-128", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n55 [label="parameters.Count > 0", span="130-130", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n56 [label="var parameterArray = new object[parameters.Count]", span="132-132", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n58 [label=parameters, span="134-134", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n49 [label="throw new ArgumentNullException(''job'');", span="110-110", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n51 [label="throw new ArgumentNullException(''parameters'');", span="111-111", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n52 [label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="113-116", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n64 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)"];
n65 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)"];
n66 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)"];
n67 [label="Entry Unk.>", span="", cluster="Unk.>"];
n68 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
n69 [label="Entry Unk.ToString", span="", cluster="Unk.ToString"];
n59 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="136-141", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n62 [label="return jobId;", span="151-151", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n57 [label="int parameterIndex = 0", span="133-133", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n61 [label="_connection.Execute(insertParameterSql, parameterArray)", span="148-148", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n60 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="144-146", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n70 [label="Entry Unk.Execute", span="", cluster="Unk.Execute"];
n63 [label="Exit Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)"];
n71 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n72 [label="id == null", span="156-156", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n75 [label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="161-162", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n73 [label="throw new ArgumentNullException(''id'');", span="156-156", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n74 [label="string sql = \r\n                @''select InvocationData, StateName, Arguments, CreatedAt from HangFire.Job where Id = @id''", span="158-159", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n76 [label="jobData == null", span="164-164", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n87 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault"];
n78 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="167-167", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n79 [label="invocationData.Arguments = jobData.Arguments", span="168-168", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n85 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                CreatedAt = jobData.CreatedAt,\r\n                LoadException = loadException\r\n            };", span="182-188", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n77 [label="return null;", span="164-164", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n82 [label="job = invocationData.Deserialize()", span="175-175", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n80 [label="Job job = null", span="170-170", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n81 [label="JobLoadException loadException = null", span="171-171", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n83 [label=JobLoadException, span="177-177", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n88 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()"];
n84 [label="loadException = ex", span="179-179", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n86 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)"];
n89 [label="Entry Hangfire.Storage.JobData.JobData()", span="21-21", cluster="Hangfire.Storage.JobData.JobData()"];
n90 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)"];
n91 [label="jobId == null", span="193-193", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)"];
n94 [label="var sqlState = _connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault()", span="201-201", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)"];
n92 [label="throw new ArgumentNullException(''jobId'');", span="193-193", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)"];
n93 [label="string sql = @''\r\nselect s.Name, s.Reason, s.Data\r\nfrom HangFire.State s\r\ninner join HangFire.Job j on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="195-199", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)"];
n95 [label="sqlState == null", span="202-202", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)"];
n97 [label="var data = new Dictionary<string, string>(\r\n                JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                StringComparer.OrdinalIgnoreCase)", span="207-209", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)"];
n98 [label="return new StateData\r\n            {\r\n                Name = sqlState.Name,\r\n                Reason = sqlState.Reason,\r\n                Data = data\r\n            };", span="211-216", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)"];
n96 [label="return null;", span="204-204", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)"];
n100 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)"];
n99 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)"];
n101 [label="Entry Hangfire.Storage.StateData.StateData()", span="21-21", cluster="Hangfire.Storage.StateData.StateData()"];
n102 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
n103 [label="id == null", span="221-221", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
n105 [label="name == null", span="222-222", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
n107 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter with (holdlock) as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="224-230", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
n104 [label="throw new ArgumentNullException(''id'');", span="221-221", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
n106 [label="throw new ArgumentNullException(''name'');", span="222-222", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
n108 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)"];
n109 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
n110 [label="id == null", span="235-235", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
n112 [label="name == null", span="236-236", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
n114 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="238-241", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
n111 [label="throw new ArgumentNullException(''id'');", span="235-235", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
n113 [label="throw new ArgumentNullException(''name'');", span="236-236", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
n115 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)"];
n116 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)"];
n117 [label="key == null", span="246-246", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)"];
n119 [label="var result = _connection.Query<string>(\r\n                @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                new { key })", span="248-250", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)"];
n118 [label="throw new ArgumentNullException(''key'');", span="246-246", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)"];
n120 [label="return new HashSet<string>(result);", span="252-252", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)"];
n121 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)"];
n122 [label="Entry HashSet<string>.cstr", span="", cluster="HashSet<string>.cstr"];
n123 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
n124 [label="key == null", span="257-257", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
n126 [label="toScore < fromScore", span="258-258", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
n128 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="260-263", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
n125 [label="throw new ArgumentNullException(''key'');", span="257-257", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
n127 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="258-258", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
n129 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)"];
n130 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)"];
n131 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n132 [label="key == null", span="268-268", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n134 [label="keyValuePairs == null", span="269-269", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n138 [label=keyValuePairs, span="280-280", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n139 [label="_connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value })", span="282-282", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n133 [label="throw new ArgumentNullException(''key'');", span="268-268", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n135 [label="throw new ArgumentNullException(''keyValuePairs'');", span="269-269", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n136 [label="string sql = @''\r\nmerge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="271-276", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n137 [label="var transaction = new TransactionScope()", span="278-278", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n142 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr"];
n140 [label="transaction.Complete()", span="285-285", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n141 [label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)"];
n143 [label="Entry Unk.Complete", span="", cluster="Unk.Complete"];
n144 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)"];
n145 [label="key == null", span="291-291", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)"];
n147 [label="var result = _connection.Query<SqlHash>(\r\n                ''select Field, Value from HangFire.Hash with (forceseek) where [Key] = @key'',\r\n                new { key })\r\n                .ToDictionary(x => x.Field, x => x.Value)", span="293-296", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)"];
n146 [label="throw new ArgumentNullException(''key'');", span="291-291", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)"];
n148 [label="return result.Count != 0 ? result : null;", span="298-298", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)"];
n150 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary"];
n151 [label="Entry lambda expression", span="296-296", cluster="lambda expression"];
n154 [label="Entry lambda expression", span="296-296", cluster="lambda expression"];
n149 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)"];
n152 [label="x.Field", span="296-296", cluster="lambda expression"];
n153 [label="Exit lambda expression", span="296-296", cluster="lambda expression"];
n155 [label="x.Value", span="296-296", cluster="lambda expression"];
n156 [label="Exit lambda expression", span="296-296", cluster="lambda expression"];
n157 [label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)"];
n158 [label="serverId == null", span="303-303", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)"];
n160 [label="context == null", span="304-304", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)"];
n162 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="306-311", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)"];
n163 [label="_connection.Execute(\r\n                @''merge HangFire.Server with (holdlock) as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="313-319", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)"];
n159 [label="throw new ArgumentNullException(''serverId'');", span="303-303", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)"];
n161 [label="throw new ArgumentNullException(''context'');", span="304-304", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)"];
n165 [label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()"];
n164 [label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)"];
n166 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)"];
n167 [label="serverId == null", span="324-324", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)"];
n169 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="326-328", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)"];
n168 [label="throw new ArgumentNullException(''serverId'');", span="324-324", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)"];
n170 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)"];
n171 [label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)"];
n172 [label="serverId == null", span="333-333", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)"];
n174 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="335-337", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)"];
n173 [label="throw new ArgumentNullException(''serverId'');", span="333-333", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)"];
n175 [label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)"];
n176 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
n177 [label="timeOut.Duration() != timeOut", span="342-342", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
n178 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="344-344", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
n179 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="347-349", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
n181 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()"];
n180 [label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)"];
n182 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
n183 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()"];
n184 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)"];
n185 [label="key == null", span="354-354", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)"];
n187 [label="return _connection.Query<int>(\r\n                ''select count([Key]) from HangFire.[Set] where [Key] = @key'',\r\n                new { key = key }).First();", span="356-358", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)"];
n186 [label="throw new ArgumentNullException(''key'');", span="354-354", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)"];
n188 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)"];
n189 [label="Entry Unk.First", span="", cluster="Unk.First"];
n190 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)"];
n191 [label="key == null", span="363-363", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)"];
n194 [label="return _connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList();", span="372-374", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)"];
n192 [label="throw new ArgumentNullException(''key'');", span="363-363", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)"];
n193 [label="var query = @''\r\nselect [Value] from (\r\n	select [Value], row_number() over (order by [Id] ASC) as row_num \r\n	from Hangfire.[Set]\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="365-370", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)"];
n195 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)"];
n196 [label="Entry Unk.ToList", span="", cluster="Unk.ToList"];
n197 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)"];
n198 [label="key == null", span="379-379", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)"];
n201 [label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="385-385", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)"];
n199 [label="throw new ArgumentNullException(''key'');", span="379-379", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)"];
n200 [label="string query = @''\r\nselect min([ExpireAt]) from HangFire.[Set]\r\nwhere [Key] = @key''", span="381-383", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)"];
n202 [label="!result.HasValue", span="386-386", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)"];
n204 [label="return result.Value - DateTime.UtcNow;", span="388-388", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)"];
n203 [label="return TimeSpan.FromSeconds(-1);", span="386-386", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)"];
n205 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)"];
n206 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)"];
n207 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)"];
n208 [label="key == null", span="393-393", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)"];
n211 [label="return _connection.Query<long?>(query, new { key = key }).Single() ?? 0;", span="402-402", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)"];
n209 [label="throw new ArgumentNullException(''key'');", span="393-393", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)"];
n210 [label="string query = @''\r\nselect sum(s.[Value]) from (select sum([Value]) as [Value] from HangFire.Counter\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from HangFire.AggregatedCounter\r\nwhere [Key] = @key) as s''", span="395-400", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)"];
n212 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)"];
n213 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)"];
n214 [label="key == null", span="407-407", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)"];
n217 [label="return _connection.Query<long>(query, new { key = key }).Single();", span="413-413", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)"];
n215 [label="throw new ArgumentNullException(''key'');", span="407-407", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)"];
n216 [label="string query = @''\r\nselect count([Id]) from HangFire.Hash\r\nwhere [Key] = @key''", span="409-411", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)"];
n218 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)"];
n219 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)"];
n220 [label="key == null", span="418-418", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)"];
n223 [label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="424-424", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)"];
n221 [label="throw new ArgumentNullException(''key'');", span="418-418", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)"];
n222 [label="string query = @''\r\nselect min([ExpireAt]) from HangFire.Hash\r\nwhere [Key] = @key''", span="420-422", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)"];
n224 [label="!result.HasValue", span="425-425", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)"];
n226 [label="return result.Value - DateTime.UtcNow;", span="427-427", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)"];
n225 [label="return TimeSpan.FromSeconds(-1);", span="425-425", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)"];
n227 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)"];
n228 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)"];
n229 [label="key == null", span="432-432", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)"];
n231 [label="name == null", span="433-433", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)"];
n234 [label="return _connection.Query<string>(query, new { key = key, field = name }).SingleOrDefault();", span="439-439", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)"];
n230 [label="throw new ArgumentNullException(''key'');", span="432-432", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)"];
n232 [label="throw new ArgumentNullException(''name'');", span="433-433", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)"];
n233 [label="string query = @''\r\nselect [Value] from HangFire.Hash\r\nwhere [Key] = @key and [Field] = @field''", span="435-437", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)"];
n235 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)"];
n236 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)"];
n237 [label="key == null", span="444-444", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)"];
n240 [label="return _connection.Query<long>(query, new { key = key }).Single();", span="450-450", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)"];
n238 [label="throw new ArgumentNullException(''key'');", span="444-444", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)"];
n239 [label="string query = @''\r\nselect count([Id]) from HangFire.List\r\nwhere [Key] = @key''", span="446-448", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)"];
n241 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)"];
n242 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)"];
n243 [label="key == null", span="455-455", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)"];
n246 [label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="461-461", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)"];
n244 [label="throw new ArgumentNullException(''key'');", span="455-455", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)"];
n245 [label="string query = @''\r\nselect min([ExpireAt]) from HangFire.List\r\nwhere [Key] = @key''", span="457-459", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)"];
n247 [label="!result.HasValue", span="462-462", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)"];
n249 [label="return result.Value - DateTime.UtcNow;", span="464-464", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)"];
n248 [label="return TimeSpan.FromSeconds(-1);", span="462-462", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)"];
n250 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)"];
n251 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)"];
n252 [label="key == null", span="469-469", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)"];
n255 [label="return _connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList();", span="478-480", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)"];
n253 [label="throw new ArgumentNullException(''key'');", span="469-469", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)"];
n254 [label="string query = @''\r\nselect [Value] from (\r\n	select [Value], row_number() over (order by [Id] desc) as row_num \r\n	from Hangfire.List\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="471-476", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)"];
n256 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)"];
n257 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)"];
n258 [label="key == null", span="485-485", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)"];
n261 [label="return _connection.Query<string>(query, new { key = key }).ToList();", span="492-492", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)"];
n259 [label="throw new ArgumentNullException(''key'');", span="485-485", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)"];
n260 [label="string query = @''\r\nselect [Value] from Hangfire.List\r\nwhere [Key] = @key\r\norder by [Id] desc''", span="487-490", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)"];
n262 [label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)"];
m0_34 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="BackgroundJobServer.cs"];
m0_74 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="45-45", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="BackgroundJobServer.cs"];
m0_89 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundJobServer.cs"];
m0_33 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="BackgroundJobServer.cs"];
m0_106 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="BackgroundJobServer.cs"];
m0_40 [label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150", cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="BackgroundJobServer.cs"];
m0_41 [label="return GetType().Name;", span="152-152", cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="BackgroundJobServer.cs"];
m0_42 [label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150", cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="BackgroundJobServer.cs"];
m0_83 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="BackgroundJobServer.cs"];
m0_21 [label="var connection = context.Storage.GetConnection()", span="116-116", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_90 [label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61", cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJobServer.cs"];
m0_43 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="BackgroundJobServer.cs"];
m0_92 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="BackgroundJobServer.cs"];
m0_0 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="14-14", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="BackgroundJobServer.cs"];
m0_1 [label="MachineName = Environment.MachineName", span="16-16", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="BackgroundJobServer.cs"];
m0_38 [label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="280-280", cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="BackgroundJobServer.cs"];
m0_77 [label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0", cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="BackgroundJobServer.cs"];
m0_82 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="BackgroundJobServer.cs"];
m0_6 [label="throw new ArgumentNullException(nameof(factory));", span="100-100", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJobServer.cs"];
m0_13 [label="_throttler = throttler", span="106-106", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJobServer.cs"];
m0_4 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=green, community=0, file="BackgroundJobServer.cs"];
m0_3 [label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="BackgroundJobServer.cs"];
m0_2 [label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="BackgroundJobServer.cs"];
m0_5 [label="factory == null", span="100-100", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJobServer.cs"];
m0_85 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobServer.cs"];
m0_16 [label="_server.Dispose()", span="69-69", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m0_32 [label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22", cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m0_12 [label="_instantFactory = instantFactory", span="105-105", cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="BackgroundJobServer.cs"];
m0_79 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobServer.cs"];
m0_88 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="BackgroundJobServer.cs"];
m0_81 [label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime)", span="25-25", cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime)", file="BackgroundJobServer.cs"];
m0_73 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="BackgroundJobServer.cs"];
m0_37 [label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_44 [label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="161-161", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_46 [label="var cron = recurringJob[''Cron'']", span="163-163", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_48 [label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="168-170", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_51 [label="var lastInstant = GetLastInstant(recurringJob, nowInstant)", span="175-175", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_54 [label="recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="180-180", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_55 [label="state.Queue = recurringJob[''Queue'']", span="182-182", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_56 [label="var context = new CreateContext(storage, connection, job, state)", span="185-185", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_57 [label="context.Parameters[''RecurringJobId''] = recurringJobId", span="186-186", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_61 [label="Logger.Debug($''Recurring job '{recurringJobId}' execution at '{nowInstant.NowInstant}' has been canceled.'')", span="193-193", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_64 [label="!recurringJob.ContainsKey(''CreatedAt'')", span="201-201", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_67 [label="connection.SetRangeInHash(\r\n                    $''recurring-job:{recurringJobId}'',\r\n                    changedFields)", span="208-210", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_71 [label="Logger.ErrorException(\r\n                    $''Recurring job '{recurringJobId}' was not triggered: {ex.Message}.'',\r\n                    ex)", span="222-224", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_45 [label="var job = serializedJob.Deserialize()", span="162-162", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_47 [label="var cronSchedule = CrontabSchedule.Parse(cron)", span="164-164", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_49 [label="var nowInstant = _instantFactory(cronSchedule, timeZone)", span="172-172", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_50 [label="var changedFields = new Dictionary<string, string>()", span="173-173", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_52 [label="nowInstant.GetNextInstants(lastInstant).Any()", span="177-177", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_62 [label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(nowInstant.NowInstant))", span="196-196", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_65 [label="changedFields.Add(''CreatedAt'', JobHelper.SerializeDateTime(nowInstant.NowInstant))", span="203-203", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_66 [label="changedFields.Add(''NextExecution'', nowInstant.NextInstant.HasValue ? JobHelper.SerializeDateTime(nowInstant.NextInstant.Value) : null)", span="206-206", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_63 [label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="197-197", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_53 [label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="179-179", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_58 [label="var backgroundJob = _factory.Create(context)", span="188-188", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_59 [label="var jobId = backgroundJob?.Id", span="189-189", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_60 [label="String.IsNullOrEmpty(jobId)", span="191-191", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_68 [label=Exception, span="216-216", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_69 [label="!ex.GetType().Name.Equals(''TimeZoneNotFoundException'')", span="219-219", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_70 [label="throw;", span="219-219", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_72 [label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155", cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="BackgroundJobServer.cs"];
m0_84 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="BackgroundJobServer.cs"];
m0_7 [label="Entry HangFire.BackgroundJobServer.Start()", span="51-51", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_8 [label="_server != null", span="53-53", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_9 [label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="55-55", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_10 [label="_server = new JobServer(MachineName, Queues, WorkersCount, PollInterval, JobActivator)", span="58-58", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs", color=green, community=0];
m0_11 [label="Exit HangFire.BackgroundJobServer.Start()", span="51-51", cluster="HangFire.BackgroundJobServer.Start()", file="BackgroundJobServer.cs"];
m0_14 [label="Entry HangFire.BackgroundJobServer.Stop()", span="65-65", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m0_105 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="BackgroundJobServer.cs"];
m0_22 [label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="117-117", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_23 [label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="119-119", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_24 [label=recurringJobIds, span="121-121", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_15 [label="_server != null", span="67-67", cluster="HangFire.BackgroundJobServer.Stop()", file="BackgroundJobServer.cs"];
m0_17 [label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_19 [label="throw new ArgumentNullException(nameof(context));", span="112-112", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_18 [label="context == null", span="112-112", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_20 [label="_throttler.Throttle(context.CancellationToken)", span="114-114", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_27 [label="TryScheduleJob(context.Storage, connection, recurringJobId, recurringJob)", span="133-133", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_30 [label="_throttler.Delay(context.CancellationToken)", span="146-146", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_25 [label="HangFire.BackgroundJobServer", span="", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_29 [label="Logger.WarnException(\r\n                            $''Recurring job '{recurringJobId}' can not be scheduled due to job load exception.'',\r\n                            ex)", span="137-139", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_26 [label="recurringJob == null", span="126-126", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_28 [label=JobLoadException, span="135-135", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_31 [label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110", cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="BackgroundJobServer.cs"];
m0_39 [label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23", cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="BackgroundJobServer.cs"];
m0_91 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="BackgroundJobServer.cs"];
m0_87 [label="Entry Hangfire.Logging.ILog.Debug(string)", span="116-116", cluster="Hangfire.Logging.ILog.Debug(string)", file="BackgroundJobServer.cs"];
m0_35 [label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="BackgroundJobServer.cs"];
m0_36 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="BackgroundJobServer.cs"];
m0_93 [label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="161-161", cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="BackgroundJobServer.cs"];
m0_76 [label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundJobServer.cs"];
m0_75 [label="Entry NCrontab.CrontabSchedule.Parse(string)", span="93-93", cluster="NCrontab.CrontabSchedule.Parse(string)", file="BackgroundJobServer.cs"];
m0_78 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="BackgroundJobServer.cs"];
m0_80 [label="Entry Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", span="229-229", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_94 [label="DateTime lastInstant", span="231-231", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_95 [label="recurringJob.ContainsKey(''LastExecution'')", span="233-233", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_96 [label="lastInstant = JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])", span="235-235", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_97 [label="recurringJob.ContainsKey(''CreatedAt'')", span="237-237", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_98 [label="lastInstant = JobHelper.DeserializeDateTime(recurringJob[''CreatedAt''])", span="239-239", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_99 [label="recurringJob.ContainsKey(''NextExecution'')", span="241-241", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_100 [label="lastInstant = JobHelper.DeserializeDateTime(recurringJob[''NextExecution''])", span="243-243", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_102 [label="lastInstant = instant.NowInstant.AddSeconds(-1)", span="248-248", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_101 [label="lastInstant = lastInstant.AddSeconds(-1)", span="244-244", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_103 [label="return lastInstant;", span="251-251", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_104 [label="Exit Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", span="229-229", cluster="Hangfire.Server.RecurringJobScheduler.GetLastInstant(System.Collections.Generic.IReadOnlyDictionary<string, string>, Hangfire.Server.IScheduleInstant)", file="BackgroundJobServer.cs"];
m0_86 [label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31", cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="BackgroundJobServer.cs"];
m0_107 [label="Hangfire.Server.RecurringJobScheduler", span="", file="BackgroundJobServer.cs"];
m1_0 [label="Entry Hangfire.Dashboard.Pages.InlineMetric.Execute()", span="29-29", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_1 [label="WriteLiteral(''\r\n'')", span="33-33", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_2 [label="var metric = DashboardMetric.Func(this)", span="41-41", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_3 [label="var className = metric == null ? ''metric-null'' : metric.Style.ToClassName()", span="42-42", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_4 [label="var highlighted = metric != null && metric.Highlighted ? ''highlighted'' : null", span="43-43", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_12 [label="Write(metric?.Value)", span="84-84", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_8 [label="Write(className)", span="64-64", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_5 [label="WriteLiteral(''<span data-metric=\'''')", span="49-49", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_10 [label="Write(highlighted)", span="74-74", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_6 [label="Write(DashboardMetric.Name)", span="54-54", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_7 [label="WriteLiteral(''\'' class=\''metric '')", span="59-59", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_9 [label="WriteLiteral('' '')", span="69-69", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_11 [label="WriteLiteral(''\''>'')", span="79-79", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_13 [label="WriteLiteral(''</span>'')", span="89-89", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_14 [label="Exit Hangfire.Dashboard.Pages.InlineMetric.Execute()", span="29-29", cluster="Hangfire.Dashboard.Pages.InlineMetric.Execute()", file="ClientContext.cs"];
m1_16 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ClientContext.cs"];
m1_15 [label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105", cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="ClientContext.cs"];
m1_17 [label="Entry Hangfire.Dashboard.MetricStyle.ToClassName()", span="43-43", cluster="Hangfire.Dashboard.MetricStyle.ToClassName()", file="ClientContext.cs"];
m1_18 [label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="ClientContext.cs"];
m1_19 [label="Hangfire.Dashboard.Pages.InlineMetric", span="", file="ClientContext.cs"];
m2_7 [label="Entry System.Action.Invoke()", span="0-0", cluster="System.Action.Invoke()", file="ClientJobDescriptor.cs"];
m2_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ClientJobDescriptor.cs"];
m2_32 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ClientJobDescriptor.cs"];
m2_12 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="ClientJobDescriptor.cs"];
m2_13 [label="Entry HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="29-29", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs"];
m2_14 [label="return Job.ContainsKey(name)\r\n                ? JobHelper.FromJson<T>(Job[name])\r\n                : default(T);", span="31-33", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs"];
m2_15 [label="Exit HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", span="29-29", cluster="HangFire.Client.ClientJobDescriptor.GetParameter<T>(string)", file="ClientJobDescriptor.cs"];
m2_17 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37", cluster="HangFire.JobHelper.FromJson<T>(string)", file="ClientJobDescriptor.cs"];
m2_38 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="ClientJobDescriptor.cs"];
m2_34 [label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0", cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="ClientJobDescriptor.cs"];
m2_39 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ClientJobDescriptor.cs"];
m2_37 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="ClientJobDescriptor.cs"];
m2_8 [label="Entry HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="24-24", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs"];
m2_9 [label="Job.Add(name, JobHelper.ToJson(value))", span="26-26", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs"];
m2_10 [label="Exit HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", span="24-24", cluster="HangFire.Client.ClientJobDescriptor.SetParameter(string, object)", file="ClientJobDescriptor.cs"];
m2_0 [label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", span="8-8", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="ClientJobDescriptor.cs"];
m2_1 [label="Job = job", span="10-10", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="ClientJobDescriptor.cs"];
m2_2 [label="JobId = jobId", span="11-11", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="ClientJobDescriptor.cs"];
m2_3 [label="Exit HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", span="8-8", cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(string, System.Collections.Generic.Dictionary<string, string>)", file="ClientJobDescriptor.cs"];
m2_33 [label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="ClientJobDescriptor.cs"];
m2_4 [label="Entry HangFire.Client.ClientJobDescriptor.Enqueue()", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="ClientJobDescriptor.cs"];
m2_5 [label="EnqueueAction()", span="21-21", cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", color=red, community=0, file="ClientJobDescriptor.cs"];
m2_6 [label="Exit HangFire.Client.ClientJobDescriptor.Enqueue()", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="ClientJobDescriptor.cs"];
m2_35 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ClientJobDescriptor.cs"];
m2_11 [label="Entry HangFire.JobHelper.ToJson(object)", span="32-32", cluster="HangFire.JobHelper.ToJson(object)", file="ClientJobDescriptor.cs"];
m2_18 [label="Entry HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_19 [label="var result = new Dictionary<string, string>()", span="38-38", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_20 [label="jobProperties != null", span="39-39", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_21 [label="TypeDescriptor.GetProperties(jobProperties)", span="41-41", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_22 [label="var propertyValue = descriptor.GetValue(jobProperties)", span="43-43", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_29 [label="result.Add(descriptor.Name, value)", span="64-64", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_30 [label="return result;", span="68-68", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_28 [label="throw new InvalidOperationException(\r\n                                String.Format(\r\n                                    ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                    descriptor.Name,\r\n                                    descriptor.PropertyType),\r\n                                ex);", span="55-60", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_23 [label="string value = null", span="44-44", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_24 [label="propertyValue != null", span="46-46", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_25 [label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="50-50", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_26 [label="value = converter.ConvertToInvariantString(propertyValue)", span="51-51", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_27 [label=Exception, span="53-53", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_31 [label="Exit HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", span="36-36", cluster="HangFire.Client.ClientJobDescriptor.SerializeProperties(object)", file="ClientJobDescriptor.cs"];
m2_36 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="ClientJobDescriptor.cs"];
m2_40 [label="HangFire.Client.ClientJobDescriptor", span="", file="ClientJobDescriptor.cs"];
m3_0 [label="Entry HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8", cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobExceptionContext.cs"];
m3_1 [label="Exception = exception", span="11-11", cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobExceptionContext.cs"];
m3_2 [label="Exit HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8", cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobExceptionContext.cs"];
m3_3 [label="HangFire.Filters.ClientJobExceptionContext", span="", file="ClientJobExceptionContext.cs"];
m4_0 [label="Entry HangFire.Client.ClientJobInvoker.ClientJobInvoker()", span="12-12", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker()", file="ClientJobInvoker.cs"];
m4_1 [label="Current = new ClientJobInvoker(\r\n                GlobalJobFilters.Filters.OfType<IClientJobFilter>(),\r\n                GlobalJobFilters.Filters.OfType<IClientJobExceptionFilter>())", span="14-16", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker()", color=red, community=1, file="ClientJobInvoker.cs"];
m4_2 [label="Exit HangFire.Client.ClientJobInvoker.ClientJobInvoker()", span="12-12", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker()", file="ClientJobInvoker.cs"];
m4_13 [label="Entry HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="33-33", cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="ClientJobInvoker.cs"];
m4_14 [label="EnqueueWithFilters(clientContext, jobDescriptor, _clientFilters)", span="37-37", cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_16 [label="var exceptionContext = InvokeClientExceptionFilters(clientContext, _clientExceptionFilters, ex)", span="41-41", cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_15 [label=Exception, span="39-39", cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_17 [label="!exceptionContext.ExceptionHandled", span="42-42", cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_18 [label="throw;", span="44-44", cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_19 [label="Exit HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="33-33", cluster="HangFire.Client.ClientJobInvoker.EnqueueJob(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="ClientJobInvoker.cs"];
m4_20 [label="Entry HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", span="49-49", cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", file="ClientJobInvoker.cs"];
m4_22 [label="var preContext = new JobEnqueueingContext(clientContext, jobDescriptor)", span="54-54", cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_23 [label="Func<JobEnqueuedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Enqueue();\r\n                return new JobEnqueuedContext(clientContext, jobDescriptor, false, null);\r\n            }", span="55-59", cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", color=red, community=1, file="ClientJobInvoker.cs"];
m4_24 [label="Func<JobEnqueuedContext> thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => EnqueueJobFilter(filter, preContext, next))", span="61-62", cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", color=red, community=1, file="ClientJobInvoker.cs"];
m4_25 [label="return thunk();", span="64-64", cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_26 [label="Exit HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", span="49-49", cluster="HangFire.Client.ClientJobInvoker.EnqueueWithFilters(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>)", file="ClientJobInvoker.cs"];
m4_59 [label="Entry HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4", cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="ClientJobInvoker.cs"];
m4_66 [label="Entry HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", span="8-8", cluster="HangFire.Filters.ClientJobExceptionContext.ClientJobExceptionContext(HangFire.Client.ClientContext, System.Exception)", file="ClientJobInvoker.cs"];
m4_3 [label="Entry HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", span="22-22", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", file="ClientJobInvoker.cs"];
m4_5 [label="clientFilters == null", span="26-26", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_7 [label="clientExceptionFilters == null", span="27-27", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_9 [label="_clientFilters = clientFilters", span="29-29", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_10 [label="_clientExceptionFilters = clientExceptionFilters", span="30-30", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_6 [label="throw new ArgumentNullException(''clientFilters'');", span="26-26", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_8 [label="throw new ArgumentNullException(''clientExceptionFilters'');", span="27-27", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_11 [label="Exit HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", span="22-22", cluster="HangFire.Client.ClientJobInvoker.ClientJobInvoker(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>)", file="ClientJobInvoker.cs"];
m4_29 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="ClientJobInvoker.cs"];
m4_27 [label="Entry HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="6-6", cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="ClientJobInvoker.cs"];
m4_36 [label="Entry HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.JobEnqueuedContext.JobEnqueuedContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor, bool, System.Exception)", file="ClientJobInvoker.cs"];
m4_28 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="ClientJobInvoker.cs"];
m4_42 [label="Entry HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", span="67-67", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", file="ClientJobInvoker.cs"];
m4_43 [label="filter.OnJobEnqueueing(preContext)", span="72-72", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_44 [label="preContext.Canceled", span="73-73", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_45 [label="return new JobEnqueuedContext(\r\n                    preContext, preContext.JobDescriptor, true, null);", span="75-76", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=1, file="ClientJobInvoker.cs"];
m4_48 [label="postContext = continuation()", span="83-83", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_51 [label="postContext = new JobEnqueuedContext(\r\n                    preContext, preContext.JobDescriptor, false, ex)", span="88-89", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=1, file="ClientJobInvoker.cs"];
m4_52 [label="filter.OnJobEnqueued(postContext)", span="91-91", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_56 [label="filter.OnJobEnqueued(postContext)", span="101-101", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_46 [label="var wasError = false", span="79-79", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_47 [label="JobEnqueuedContext postContext", span="80-80", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_49 [label=Exception, span="85-85", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_55 [label="!wasError", span="99-99", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_50 [label="wasError = true", span="87-87", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_53 [label="!postContext.ExceptionHandled", span="93-93", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_57 [label="return postContext;", span="104-104", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_54 [label="throw;", span="95-95", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_58 [label="Exit HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", span="67-67", cluster="HangFire.Client.ClientJobInvoker.EnqueueJobFilter(HangFire.Filters.IClientJobFilter, HangFire.Filters.JobEnqueueingContext, System.Func<HangFire.Filters.JobEnqueuedContext>)", file="ClientJobInvoker.cs"];
m4_60 [label="Entry HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="5-5", cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="ClientJobInvoker.cs"];
m4_67 [label="Entry HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", span="4-4", cluster="HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", file="ClientJobInvoker.cs"];
m4_35 [label="Entry HangFire.Client.ClientJobDescriptor.Enqueue()", span="19-19", cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="ClientJobInvoker.cs"];
m4_4 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ClientJobInvoker.cs"];
m4_39 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="ClientJobInvoker.cs"];
m4_32 [label="jobDescriptor.Enqueue()", span="57-57", cluster="lambda expression", color=red, community=0, file="ClientJobInvoker.cs"];
m4_33 [label="return new JobEnqueuedContext(clientContext, jobDescriptor, false, null);", span="58-58", cluster="lambda expression", color=red, community=0, file="ClientJobInvoker.cs"];
m4_40 [label="EnqueueJobFilter(filter, preContext, next)", span="62-62", cluster="lambda expression", color=red, community=0, file="ClientJobInvoker.cs"];
m4_37 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="ClientJobInvoker.cs"];
m4_31 [label="Entry lambda expression", span="55-59", cluster="lambda expression", file="ClientJobInvoker.cs"];
m4_34 [label="Exit lambda expression", span="55-59", cluster="lambda expression", file="ClientJobInvoker.cs"];
m4_38 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="ClientJobInvoker.cs"];
m4_41 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="ClientJobInvoker.cs"];
m4_21 [label="Entry HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", span="107-107", cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", file="ClientJobInvoker.cs"];
m4_61 [label="var context = new ClientJobExceptionContext(clientContext, exception)", span="110-110", cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_62 [label="filters.Reverse()", span="111-111", cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_63 [label="filter.OnClientException(context)", span="113-113", cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_64 [label="return context;", span="116-116", cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", color=red, community=0, file="ClientJobInvoker.cs"];
m4_65 [label="Exit HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", span="107-107", cluster="HangFire.Client.ClientJobInvoker.InvokeClientExceptionFilters(HangFire.Client.ClientContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>, System.Exception)", file="ClientJobInvoker.cs"];
m4_30 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="ClientJobInvoker.cs"];
m4_68 [label="HangFire.Client.ClientJobInvoker", span="", file="ClientJobInvoker.cs"];
m4_69 [label="HangFire.Client.ClientJobDescriptor", span="", file="ClientJobInvoker.cs"];
m4_70 [label="HangFire.Client.ClientContext", span="", file="ClientJobInvoker.cs"];
m4_71 [label=preContext, span="", file="ClientJobInvoker.cs"];
m4_72 [label="System.Func<HangFire.Filters.JobEnqueuedContext>", span="", file="ClientJobInvoker.cs"];
m4_73 [label="HangFire.Filters.IClientJobFilter", span="", file="ClientJobInvoker.cs"];
m5_0 [label="Entry HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", span="6-6", cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", file="CreateContext.cs"];
m5_1 [label="Timeout = 30 * 1000", span="8-8", cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", color=green, community=0, file="CreateContext.cs"];
m5_2 [label="Exit HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", span="6-6", cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", file="CreateContext.cs"];
m7_10 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="DequeuedJobsWatcher.cs"];
m7_2 [label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="31-31", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="DequeuedJobsWatcher.cs"];
m7_3 [label="_heartbeatInterval = heartbeatInterval", span="33-33", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="DequeuedJobsWatcher.cs"];
m7_4 [label="Exit Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", span="31-31", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat(System.TimeSpan)", file="DequeuedJobsWatcher.cs"];
m7_5 [label="Entry Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="36-36", cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs"];
m7_6 [label="var connection = context.Storage.GetConnection()", span="38-38", cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs"];
m7_7 [label="connection.Heartbeat(context.ServerId)", span="40-40", cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs"];
m7_8 [label="context.Sleep(_heartbeatInterval)", span="43-43", cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs"];
m7_9 [label="Exit Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", span="36-36", cluster="Hangfire.Server.ServerHeartbeat.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs"];
m7_12 [label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23", cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", file="DequeuedJobsWatcher.cs"];
m7_13 [label="Entry Hangfire.Server.ServerHeartbeat.ToString()", span="46-46", cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="DequeuedJobsWatcher.cs"];
m7_14 [label="return GetType().Name;", span="48-48", cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="DequeuedJobsWatcher.cs"];
m7_15 [label="Exit Hangfire.Server.ServerHeartbeat.ToString()", span="46-46", cluster="Hangfire.Server.ServerHeartbeat.ToString()", file="DequeuedJobsWatcher.cs"];
m7_16 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="DequeuedJobsWatcher.cs"];
m7_0 [label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", span="26-26", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", file="DequeuedJobsWatcher.cs"];
m7_1 [label="Exit Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", span="26-26", cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", file="DequeuedJobsWatcher.cs"];
m7_11 [label="Entry Hangfire.Storage.IStorageConnection.Heartbeat(string)", span="49-49", cluster="Hangfire.Storage.IStorageConnection.Heartbeat(string)", file="DequeuedJobsWatcher.cs"];
m7_17 [label="Hangfire.Server.ServerHeartbeat", span="", file="DequeuedJobsWatcher.cs"];
m8_26 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="DequeuedJobsWatcher.feature.cs"];
m8_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="DequeuedJobsWatcher.feature.cs"];
m8_28 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioCleanup()", file="DequeuedJobsWatcher.feature.cs"];
m8_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="DequeuedJobsWatcher.feature.cs"];
m8_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="DequeuedJobsWatcher.feature.cs"];
m8_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="DequeuedJobsWatcher.feature.cs"];
m8_22 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="DequeuedJobsWatcher.feature.cs"];
m8_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="DequeuedJobsWatcher.feature.cs"];
m8_24 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="DequeuedJobsWatcher.feature.cs"];
m8_113 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", span="254-254", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs"];
m8_114 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job is being enqueued on it\'s actual queue after timing out'', ((string[])(null)))", span="256-256", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs"];
m8_115 [label="this.ScenarioSetup(scenarioInfo)", span="258-258", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs"];
m8_116 [label="testRunner.And(''a dequeued job from the \'test\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="260-260", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs"];
m8_117 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="262-262", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs"];
m8_118 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="264-264", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs"];
m8_119 [label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="266-266", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs"];
m8_120 [label="this.ScenarioCleanup()", span="268-268", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs"];
m8_121 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", span="254-254", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobIsBeingEnqueuedOnItSActualQueueAfterTimingOut()", file="DequeuedJobsWatcher.feature.cs"];
m8_53 [label="Entry Unk.And", span="", cluster="Unk.And", file="DequeuedJobsWatcher.feature.cs"];
m8_112 [label="Entry Unk.But", span="", cluster="Unk.But", file="DequeuedJobsWatcher.feature.cs"];
m8_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="DequeuedJobsWatcher.feature.cs"];
m8_78 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", span="175-175", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_79 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out jobs at fail point #2 should be re-queued'', ((string[])(null)))", span="177-177", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m8_80 [label="this.ScenarioSetup(scenarioInfo)", span="179-179", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_81 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="181-181", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_82 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="183-183", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_83 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="185-185", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_84 [label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="187-187", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_85 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="189-189", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_86 [label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="191-191", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_87 [label="testRunner.And(''the job does not have the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="193-193", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_88 [label="this.ScenarioCleanup()", span="195-195", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_89 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", span="175-175", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobsAtFailPoint2ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_122 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="276-276", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_123 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When the server could not find the job\'s type, the job is moved to the Failed sta'' +\r\n                    ''te'', ((string[])(null)))", span="278-279", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_124 [label="this.ScenarioSetup(scenarioInfo)", span="281-281", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_125 [label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="283-283", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_126 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="285-285", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_127 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="287-287", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_128 [label="testRunner.Then(''the job moved to the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="289-289", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_129 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="291-291", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_130 [label="this.ScenarioCleanup()", span="293-293", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_131 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", span="276-276", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.WhenTheServerCouldNotFindTheJobSTypeTheJobIsMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_132 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="300-300", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_133 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Succeeded job of non-existing type will not be moved to the failed state'', ((string[])(null)))", span="302-302", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_134 [label="this.ScenarioSetup(scenarioInfo)", span="304-304", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_135 [label="testRunner.Given(''a dequeued job of the \'NonExisting\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="306-306", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_136 [label="testRunner.And(''it\'s state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="308-308", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_137 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="310-310", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_138 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="312-312", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_139 [label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="314-314", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_140 [label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="316-316", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_141 [label="this.ScenarioCleanup()", span="318-318", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_142 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", span="300-300", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.SucceededJobOfNon_ExistingTypeWillNotBeMovedToTheFailedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_30 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.NotCheckedJobsAtFailPoint1ShouldBeMarkedAsChecked()", span="75-75", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.NotCheckedJobsAtFailPoint1ShouldBeMarkedAsChecked()", file="DequeuedJobsWatcher.feature.cs"];
m8_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Not checked jobs at fail point #1 should be marked as checked'', ((string[])(null)))", span="77-77", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.NotCheckedJobsAtFailPoint1ShouldBeMarkedAsChecked()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m8_32 [label="this.ScenarioSetup(scenarioInfo)", span="79-79", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.NotCheckedJobsAtFailPoint1ShouldBeMarkedAsChecked()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m8_33 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.NotCheckedJobsAtFailPoint1ShouldBeMarkedAsChecked()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m8_34 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="83-83", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.NotCheckedJobsAtFailPoint1ShouldBeMarkedAsChecked()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m8_35 [label="testRunner.Then(''it marks the job as \'checked\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="85-85", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.NotCheckedJobsAtFailPoint1ShouldBeMarkedAsChecked()", file="DequeuedJobsWatcher.feature.cs"];
m8_36 [label="this.ScenarioCleanup()", span="87-87", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.NotCheckedJobsAtFailPoint1ShouldBeMarkedAsChecked()", file="DequeuedJobsWatcher.feature.cs"];
m8_37 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.NotCheckedJobsAtFailPoint1ShouldBeMarkedAsChecked()", span="75-75", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.NotCheckedJobsAtFailPoint1ShouldBeMarkedAsChecked()", file="DequeuedJobsWatcher.feature.cs"];
m8_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="DequeuedJobsWatcher.feature.cs"];
m8_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="DequeuedJobsWatcher.feature.cs"];
m8_90 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="203-203", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs"];
m8_91 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Job\'s state is changed to the Enqueued when the job is being timed out after proc'' +\r\n                    ''eeding to the Processing state'', ((string[])(null)))", span="205-206", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m8_92 [label="this.ScenarioSetup(scenarioInfo)", span="208-208", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs"];
m8_93 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="210-210", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs"];
m8_94 [label="testRunner.And(''it\'s state is Processing'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="212-212", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs"];
m8_95 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="214-214", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs"];
m8_96 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="216-216", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs"];
m8_97 [label="testRunner.Then(''the job moved to the Enqueued state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="218-218", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs"];
m8_98 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="220-220", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs"];
m8_99 [label="this.ScenarioCleanup()", span="222-222", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs"];
m8_100 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", span="203-203", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.JobSStateIsChangedToTheEnqueuedWhenTheJobIsBeingTimedOutAfterProceedingToTheProcessingState()", file="DequeuedJobsWatcher.feature.cs"];
m8_40 [label="Entry Unk.When", span="", cluster="Unk.When", file="DequeuedJobsWatcher.feature.cs"];
m8_101 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="229-229", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_102 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Timed out job in the Succeeded state does not move to the Enqueued state'', ((string[])(null)))", span="231-231", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m8_103 [label="this.ScenarioSetup(scenarioInfo)", span="233-233", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_104 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="235-235", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_105 [label="testRunner.And(''it\'s state is Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="237-237", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_106 [label="testRunner.And(''it was fetched a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="239-239", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_107 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="241-241", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_108 [label="testRunner.Then(''the job remains to be in the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="243-243", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_109 [label="testRunner.But(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="245-245", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_110 [label="this.ScenarioCleanup()", span="247-247", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_111 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", span="229-229", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TimedOutJobInTheSucceededStateDoesNotMoveToTheEnqueuedState()", file="DequeuedJobsWatcher.feature.cs"];
m8_0 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="DequeuedJobsWatcher.feature.cs"];
m8_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="DequeuedJobsWatcher.feature.cs"];
m8_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Re-queueing of timed out jobs'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="DequeuedJobsWatcher.feature.cs"];
m8_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="DequeuedJobsWatcher.feature.cs"];
m8_4 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="DequeuedJobsWatcher.feature.cs"];
m8_14 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="DequeuedJobsWatcher.feature.cs"];
m8_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Re-queueing of timed out jobs''))", span="48-49", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="DequeuedJobsWatcher.feature.cs"];
m8_16 [label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="DequeuedJobsWatcher.feature.cs"];
m8_17 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.TestInitialize()", file="DequeuedJobsWatcher.feature.cs"];
m8_38 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="DequeuedJobsWatcher.feature.cs"];
m8_9 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="DequeuedJobsWatcher.feature.cs"];
m8_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="DequeuedJobsWatcher.feature.cs"];
m8_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="DequeuedJobsWatcher.feature.cs"];
m8_12 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.FeatureTearDown()", file="DequeuedJobsWatcher.feature.cs"];
m8_41 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="DequeuedJobsWatcher.feature.cs"];
m8_39 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="DequeuedJobsWatcher.feature.cs"];
m8_54 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", span="119-119", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_55 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Checked and timed out jobs at fail point #1 should be re-queued'', ((string[])(null)))", span="121-121", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m8_56 [label="this.ScenarioSetup(scenarioInfo)", span="123-123", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_57 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="125-125", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_58 [label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="127-127", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_59 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="129-129", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_60 [label="testRunner.Then(''the queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="131-131", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_61 [label="testRunner.And(''the dequeued jobs list does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="133-133", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_62 [label="testRunner.And(''the job does not have the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="135-135", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_63 [label="this.ScenarioCleanup()", span="137-137", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_64 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", span="119-119", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndTimedOutJobsAtFailPoint1ShouldBeRe_Queued()", file="DequeuedJobsWatcher.feature.cs"];
m8_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="DequeuedJobsWatcher.feature.cs"];
m8_18 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", file="DequeuedJobsWatcher.feature.cs"];
m8_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", file="DequeuedJobsWatcher.feature.cs"];
m8_20 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.ScenarioTearDown()", file="DequeuedJobsWatcher.feature.cs"];
m8_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="DequeuedJobsWatcher.feature.cs"];
m8_65 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", span="145-145", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_66 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Only fetched flag value is being considered for the job\'s timeout after fail poin'' +\r\n                    ''t #2'', ((string[])(null)))", span="147-148", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m8_67 [label="this.ScenarioSetup(scenarioInfo)", span="150-150", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_68 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="152-152", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_69 [label="testRunner.And(''it was checked a day ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="154-154", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_70 [label="testRunner.And(''it was fetched a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="156-156", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_71 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_72 [label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="160-160", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_73 [label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="162-162", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_74 [label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="164-164", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_75 [label="testRunner.And(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="166-166", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_76 [label="this.ScenarioCleanup()", span="168-168", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_77 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", span="145-145", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.OnlyFetchedFlagValueIsBeingConsideredForTheJobSTimeoutAfterFailPoint2()", file="DequeuedJobsWatcher.feature.cs"];
m8_42 [label="Entry HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", span="94-94", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", file="DequeuedJobsWatcher.feature.cs"];
m8_43 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Checked and not timed out jobs at fail point #1 should be leaved as is'', ((string[])(null)))", span="96-96", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs"];
m8_44 [label="this.ScenarioSetup(scenarioInfo)", span="98-98", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", file="DequeuedJobsWatcher.feature.cs"];
m8_45 [label="testRunner.Given(''a dequeued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="100-100", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", file="DequeuedJobsWatcher.feature.cs"];
m8_46 [label="testRunner.And(''it was checked a millisecond ago'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="102-102", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", file="DequeuedJobsWatcher.feature.cs"];
m8_47 [label="testRunner.When(''the watcher runs'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="104-104", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", file="DequeuedJobsWatcher.feature.cs"];
m8_48 [label="testRunner.Then(''the dequeued jobs list still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="106-106", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", file="DequeuedJobsWatcher.feature.cs"];
m8_49 [label="testRunner.And(''the queue does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="108-108", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", file="DequeuedJobsWatcher.feature.cs"];
m8_50 [label="testRunner.And(''the job has the \'checked\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="110-110", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", file="DequeuedJobsWatcher.feature.cs"];
m8_51 [label="this.ScenarioCleanup()", span="112-112", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", file="DequeuedJobsWatcher.feature.cs"];
m8_52 [label="Exit HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", span="94-94", cluster="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature.CheckedAndNotTimedOutJobsAtFailPoint1ShouldBeLeavedAsIs()", file="DequeuedJobsWatcher.feature.cs"];
m8_143 [label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature", span="", file="DequeuedJobsWatcher.feature.cs"];
m9_6 [label="Entry HangFire.PreserveCultureFilter.PreserveCultureFilter()", span="8-8", cluster="HangFire.PreserveCultureFilter.PreserveCultureFilter()", file="HangFireConfig.cs"];
m9_45 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_46 [label="var collection = CreateCollection()", span="57-57", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_47 [label="collection.Dispose()", span="59-59", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_48 [label="_runner1.Verify(x => x.Dispose())", span="61-61", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_49 [label="_runner2.Verify(x => x.Dispose())", span="62-62", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_50 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_98 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="HangFireConfig.cs"];
m9_99 [label="var runner = new Mock<IServerComponentRunner>()", span="120-120", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="HangFireConfig.cs"];
m9_100 [label="var collection = CreateCollection()", span="121-121", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="HangFireConfig.cs"];
m9_101 [label="collection.Add(runner.Object)", span="122-122", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="HangFireConfig.cs"];
m9_102 [label="collection.Remove(runner.Object)", span="124-124", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="HangFireConfig.cs"];
m9_103 [label="Assert.False(collection.Contains(runner.Object))", span="126-126", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="HangFireConfig.cs"];
m9_104 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="HangFireConfig.cs"];
m9_118 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="HangFireConfig.cs"];
m9_106 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", file="HangFireConfig.cs"];
m9_107 [label="var collection = CreateCollection()", span="132-132", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", file="HangFireConfig.cs"];
m9_108 [label="Assert.False(collection.IsReadOnly)", span="134-134", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", file="HangFireConfig.cs"];
m9_109 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", span="130-130", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.IsReadOnly_ReturnsFalse()", file="HangFireConfig.cs"];
m9_75 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="HangFireConfig.cs"];
m9_41 [label="Entry Unk.Stop", span="", cluster="Unk.Stop", file="HangFireConfig.cs"];
m9_5 [label="Entry Mock<IServerComponentRunner>.cstr", span="", cluster="Mock<IServerComponentRunner>.cstr", file="HangFireConfig.cs"];
m9_82 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="HangFireConfig.cs"];
m9_83 [label="var collection = CreateCollection()", span="97-97", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="HangFireConfig.cs"];
m9_84 [label="collection.Clear()", span="99-99", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="HangFireConfig.cs"];
m9_85 [label="Assert.Equal(0, collection.Count)", span="101-101", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="HangFireConfig.cs"];
m9_86 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="HangFireConfig.cs"];
m9_7 [label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="17-17", cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="HangFireConfig.cs"];
m9_8 [label="Assert.Throws<ArgumentNullException>(() => new ServerComponentRunnerCollection(null))", span="29-29", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="HangFireConfig.cs"];
m9_9 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="HangFireConfig.cs"];
m9_88 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="HangFireConfig.cs"];
m9_89 [label="var element = new Mock<IServerComponentRunner>()", span="107-107", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="HangFireConfig.cs"];
m9_90 [label="var collection = CreateCollection()", span="108-108", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="HangFireConfig.cs"];
m9_91 [label="Assert.False(collection.Contains(element.Object))", span="110-110", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="HangFireConfig.cs"];
m9_92 [label="collection.Add(element.Object)", span="112-112", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="HangFireConfig.cs"];
m9_93 [label="Assert.True(collection.Contains(element.Object))", span="114-114", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="HangFireConfig.cs"];
m9_94 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="HangFireConfig.cs"];
m9_117 [label="Entry HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", span="87-87", cluster="HangFire.Server.ServerComponentRunnerCollection.CopyTo(HangFire.Server.IServerComponentRunner[], int)", file="HangFireConfig.cs"];
m9_37 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44", cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="HangFireConfig.cs"];
m9_96 [label="Entry Unk.False", span="", cluster="Unk.False", file="HangFireConfig.cs"];
m9_21 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="149-149", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="HangFireConfig.cs"];
m9_119 [label="return new ServerComponentRunnerCollection(_runners);", span="151-151", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="HangFireConfig.cs"];
m9_120 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="149-149", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="HangFireConfig.cs"];
m9_0 [label="Entry MvcSample.HangFireConfig.Start()", span="16-16", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m9_1 [label="RedisFactory.Db = 3", span="20-20", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m9_2 [label="_server = new AspNetBackgroundJobServer\r\n            {\r\n                MachineName = Environment.MachineName,\r\n                Queue = ''default'',\r\n                WorkersCount = Environment.ProcessorCount * 2\r\n            }", span="22-27", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs", color=green, community=1];
m9_3 [label="GlobalJobFilters.Filters.Add(new PreserveCultureFilter())", span="29-29", cluster="MvcSample.HangFireConfig.Start()", color=red, community=0, file="HangFireConfig.cs"];
m9_4 [label="Exit MvcSample.HangFireConfig.Start()", span="16-16", cluster="MvcSample.HangFireConfig.Start()", file="HangFireConfig.cs"];
m9_76 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="HangFireConfig.cs"];
m9_77 [label="var collection = CreateCollection()", span="87-87", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="HangFireConfig.cs"];
m9_78 [label="collection.Add(new Mock<IServerComponentRunner>().Object)", span="89-89", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="HangFireConfig.cs"];
m9_79 [label="Assert.Equal(3, collection.Count)", span="91-91", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="HangFireConfig.cs"];
m9_80 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="HangFireConfig.cs"];
m9_81 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="HangFireConfig.cs"];
m9_22 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="HangFireConfig.cs"];
m9_87 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77", cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="HangFireConfig.cs"];
m9_15 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_16 [label="var collection = CreateCollection()", span="35-35", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_17 [label="collection.Start()", span="37-37", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_18 [label="_runner1.Verify(x => x.Start())", span="39-39", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_19 [label="_runner2.Verify(x => x.Start())", span="40-40", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_20 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_55 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="HangFireConfig.cs"];
m9_105 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="HangFireConfig.cs"];
m9_68 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="HangFireConfig.cs"];
m9_11 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="HangFireConfig.cs"];
m9_12 [label="new ServerComponentRunnerCollection(null)", span="29-29", cluster="lambda expression", file="HangFireConfig.cs"];
m9_13 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="HangFireConfig.cs"];
m9_24 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="HangFireConfig.cs"];
m9_28 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="HangFireConfig.cs"];
m9_25 [label="x.Start()", span="39-39", cluster="lambda expression", file="HangFireConfig.cs"];
m9_26 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="HangFireConfig.cs"];
m9_29 [label="x.Start()", span="40-40", cluster="lambda expression", file="HangFireConfig.cs"];
m9_30 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="HangFireConfig.cs"];
m9_38 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="HangFireConfig.cs"];
m9_42 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="HangFireConfig.cs"];
m9_39 [label="x.Stop()", span="50-50", cluster="lambda expression", file="HangFireConfig.cs"];
m9_40 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="HangFireConfig.cs"];
m9_43 [label="x.Stop()", span="51-51", cluster="lambda expression", file="HangFireConfig.cs"];
m9_44 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="HangFireConfig.cs"];
m9_52 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="HangFireConfig.cs"];
m9_56 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="HangFireConfig.cs"];
m9_53 [label="x.Dispose()", span="61-61", cluster="lambda expression", file="HangFireConfig.cs"];
m9_54 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="HangFireConfig.cs"];
m9_57 [label="x.Dispose()", span="62-62", cluster="lambda expression", file="HangFireConfig.cs"];
m9_58 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="HangFireConfig.cs"];
m9_65 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="HangFireConfig.cs"];
m9_66 [label="x.Stop()", span="72-72", cluster="lambda expression", file="HangFireConfig.cs"];
m9_67 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="HangFireConfig.cs"];
m9_69 [label="x.Stop()", span="73-73", cluster="lambda expression", file="HangFireConfig.cs"];
m9_70 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="HangFireConfig.cs"];
m9_95 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="HangFireConfig.cs"];
m9_14 [label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="HangFireConfig.cs"];
m9_27 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="HangFireConfig.cs"];
m9_31 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_32 [label="var collection = CreateCollection()", span="46-46", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_33 [label="collection.Stop()", span="48-48", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_34 [label="_runner1.Verify(x => x.Stop())", span="50-50", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_35 [label="_runner2.Verify(x => x.Stop())", span="51-51", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_36 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_97 [label="Entry Unk.True", span="", cluster="Unk.True", file="HangFireConfig.cs"];
m9_51 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="HangFireConfig.cs"];
m9_71 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="HangFireConfig.cs"];
m9_72 [label="var collection = CreateCollection()", span="79-79", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="HangFireConfig.cs"];
m9_73 [label="Assert.Equal(2, collection.Count)", span="81-81", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="HangFireConfig.cs"];
m9_74 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="HangFireConfig.cs"];
m9_59 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_60 [label="var collection = CreateCollection()", span="68-68", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_61 [label="collection.Dispose()", span="70-70", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_62 [label="_runner1.Verify(x => x.Stop())", span="72-72", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_63 [label="_runner2.Verify(x => x.Stop())", span="73-73", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_64 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="HangFireConfig.cs"];
m9_23 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="HangFireConfig.cs"];
m9_110 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", span="138-138", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="HangFireConfig.cs"];
m9_111 [label="var collection = CreateCollection()", span="140-140", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="HangFireConfig.cs"];
m9_112 [label="var array = new IServerComponentRunner[3]", span="141-141", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="HangFireConfig.cs"];
m9_113 [label="collection.CopyTo(array, 1)", span="143-143", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="HangFireConfig.cs"];
m9_114 [label="Assert.Same(_runner1.Object, array[1])", span="145-145", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="HangFireConfig.cs"];
m9_115 [label="Assert.Same(_runner2.Object, array[2])", span="146-146", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="HangFireConfig.cs"];
m9_116 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", span="138-138", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CopyTo_WorksAsExpected()", file="HangFireConfig.cs"];
m9_121 [label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", span="", file="HangFireConfig.cs"];
m10_0 [label="Entry HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", span="6-6", cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", file="HistoryStatisticsFilter.cs"];
m10_1 [label="Timeout = 30 * 1000", span="8-8", cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", file="HistoryStatisticsFilter.cs"];
m10_2 [label="Exit HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", span="6-6", cluster="HangFire.Core.Tests.PossibleHangingFactAttribute.PossibleHangingFactAttribute()", file="HistoryStatisticsFilter.cs"];
m13_0 [label="Entry HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", span="4-4", cluster="HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", file="IClientJobExceptionFilter.cs"];
m13_1 [label="Exit HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", span="4-4", cluster="HangFire.Filters.IClientJobExceptionFilter.OnClientException(HangFire.Filters.ClientJobExceptionContext)", file="IClientJobExceptionFilter.cs"];
m14_2 [label="Entry HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="5-5", cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="IClientJobFilter.cs"];
m14_3 [label="Exit HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="5-5", cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="IClientJobFilter.cs"];
m14_0 [label="Entry HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4", cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="IClientJobFilter.cs"];
m14_1 [label="Exit HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4", cluster="HangFire.Filters.IClientJobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="IClientJobFilter.cs"];
m15_2 [label="Entry HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9", cluster="HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="IJobStateAppliedFilter.cs"];
m15_3 [label="Exit HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", span="9-9", cluster="HangFire.IJobStateAppliedFilter.OnStateUnapplied(IRedisTransaction, string)", file="IJobStateAppliedFilter.cs"];
m15_0 [label="Entry HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8", cluster="HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="IJobStateAppliedFilter.cs"];
m15_1 [label="Exit HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", span="8-8", cluster="HangFire.IJobStateAppliedFilter.OnStateApplied(IRedisTransaction, HangFire.States.JobState)", file="IJobStateAppliedFilter.cs"];
m16_0 [label="Entry HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8", cluster="HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="IJobStateChangingFilter.cs"];
m16_1 [label="Exit HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="8-8", cluster="HangFire.IJobStateChangingFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="IJobStateChangingFilter.cs"];
m19_0 [label="Entry HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", span="4-4", cluster="HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", file="IServerJobExceptionFilter.cs"];
m19_1 [label="Exit HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", span="4-4", cluster="HangFire.Filters.IServerJobExceptionFilter.OnServerException(HangFire.Filters.ServerJobExceptionContext)", file="IServerJobExceptionFilter.cs"];
m20_0 [label="Entry HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="4-4", cluster="HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="IServerJobFilter.cs"];
m20_1 [label="Exit HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="4-4", cluster="HangFire.Filters.IServerJobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="IServerJobFilter.cs"];
m20_2 [label="Entry HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="5-5", cluster="HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="IServerJobFilter.cs"];
m20_3 [label="Exit HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="5-5", cluster="HangFire.Filters.IServerJobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="IServerJobFilter.cs"];
m23_0 [label="Entry Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6", cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="JobEnqueuedContext.cs"];
m23_1 [label="Exit Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", span="6-6", cluster="Hangfire.Storage.DistributedLockTimeoutException.DistributedLockTimeoutException(string)", file="JobEnqueuedContext.cs"];
m24_0 [label="Entry HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="6-6", cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="JobEnqueueingContext.cs"];
m24_1 [label="JobDescriptor = jobDescriptor", span="11-11", cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", color=red, community=0, file="JobEnqueueingContext.cs"];
m24_2 [label="Exit HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", span="6-6", cluster="HangFire.Filters.JobEnqueueingContext.JobEnqueueingContext(HangFire.Client.ClientContext, HangFire.Client.ClientJobDescriptor)", file="JobEnqueueingContext.cs"];
m24_3 [label="HangFire.Filters.JobEnqueueingContext", span="", file="JobEnqueueingContext.cs"];
m25_7 [label="var jobId = _redis.BlockingPopAndPushItemBetweenLists(\r\n                    String.Format(''hangfire:queue:{0}'', _queue),\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', _queue),\r\n                    _fetchTimeout)", span="22-25", cluster="HangFire.Server.JobFetcher.DequeueJobId()", file="JobFetcher.cs", color=red, community=0];
m25_8 [label="!String.IsNullOrEmpty(jobId)", span="31-31", cluster="HangFire.Server.JobFetcher.DequeueJobId()", color=red, community=0, file="JobFetcher.cs"];
m25_9 [label="_redis.SetEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="33-35", cluster="HangFire.Server.JobFetcher.DequeueJobId()", file="JobFetcher.cs", color=red, community=1];
m25_16 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobFetcher.cs"];
m25_17 [label="Entry Unk.SetEntry", span="", cluster="Unk.SetEntry", color=green, community=0, file="JobFetcher.cs"];
m25_18 [label="HangFire.Server.JobFetcher", span="", cluster="HangFire.Web.AspNetBackgroundJobServer.Stop(bool)", file="JobFetcher.cs"];
m25_6 [label="Exit HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="JobFetcher.cs"];
m25_10 [label="Entry HangFire.Web.AspNetBackgroundJobServer.Dispose()", span="63-63", cluster="HangFire.Web.AspNetBackgroundJobServer.Dispose()", color=red, community=0, file="JobFetcher.cs"];
m25_11 [label="base.Dispose()", span="65-65", cluster="HangFire.Web.AspNetBackgroundJobServer.Dispose()", file="JobFetcher.cs", color=green, community=0];
m25_4 [label="Exit HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", span="12-12", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", file="JobFetcher.cs"];
m25_5 [label="HostingEnvironment.RegisterObject(this)", span="44-44", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer(HangFire.BackgroundJobServerOptions)", color=green, community=0, file="JobFetcher.cs"];
m25_12 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", color=green, community=0, file="JobFetcher.cs"];
m25_13 [label="Entry Unk.BlockingPopAndPushItemBetweenLists", span="", cluster="Unk.BlockingPopAndPushItemBetweenLists", file="JobFetcher.cs"];
m25_14 [label="Entry HangFire.BackgroundJobServer.Dispose()", span="76-76", cluster="HangFire.BackgroundJobServer.Dispose()", file="JobFetcher.cs"];
m25_3 [label="_fetchTimeout = fetchTimeout ?? TimeSpan.FromSeconds(5)", span="17-17", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", file="JobFetcher.cs"];
m25_15 [label="Entry Unk.UnregisterObject", span="", cluster="Unk.UnregisterObject", file="JobFetcher.cs"];
m25_0 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", span="12-12", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", file="JobFetcher.cs"];
m25_1 [label="_redis = redis", span="14-14", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", file="JobFetcher.cs"];
m25_2 [label="_queue = queue", span="15-15", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, string, System.TimeSpan?)", file="JobFetcher.cs", color=red, community=0];
m25_19 [label="HangFire.Web.AspNetBackgroundJobServer", span="", file="JobFetcher.cs"];
m26_4 [label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24", cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="JobFetcher.feature.cs"];
m26_6 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="JobFetcher.feature.cs"];
m26_7 [label="options.MaxRetryAttempts = -1", span="14-14", cluster="lambda expression", file="JobFetcher.feature.cs"];
m26_8 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="JobFetcher.feature.cs"];
m26_0 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", span="9-9", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", file="JobFetcher.feature.cs"];
m26_1 [label="var options = new ServerComponentRunnerOptions()", span="11-11", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", file="JobFetcher.feature.cs"];
m26_2 [label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.MaxRetryAttempts = -1)", span="13-14", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", file="JobFetcher.feature.cs"];
m26_3 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", span="9-9", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerOptionsFacts.MaxRetryAttempts_Set_ThrowsAnException_OnNegativeValues()", file="JobFetcher.feature.cs"];
m26_9 [label=options, span="", file="JobFetcher.feature.cs"];
m27_9 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="JobFetcherSteps.cs"];
m27_18 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="29-29", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs"];
m27_19 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", color=red, community=0, file="JobFetcherSteps.cs"];
m27_48 [label="Assert.IsNull(_jobId)", span="78-78", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsNull()", color=green, community=0, file="JobFetcherSteps.cs"];
m27_20 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="JobFetcherSteps.cs"];
m27_51 [label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="82-82", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs"];
m27_52 [label=_queues, span="84-84", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", color=green, community=0, file="JobFetcherSteps.cs"];
m27_53 [label="Then(String.Format(''the '{0}' queue is empty'', queue))", span="86-86", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", color=green, community=0, file="JobFetcherSteps.cs"];
m27_54 [label="Exit HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="82-82", cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs"];
m27_11 [label="_jobId = _fetcher.DequeueJobId()", span="28-28", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs", color=red, community=0];
m27_12 [label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="26-26", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", color=green, community=0, file="JobFetcherSteps.cs"];
m27_14 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="32-32", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", color=green, community=0, file="JobFetcherSteps.cs"];
m27_13 [label="Entry HangFire.Server.JobFetcher.DequeueJobId()", span="20-20", cluster="HangFire.Server.JobFetcher.DequeueJobId()", color=green, community=0, file="JobFetcherSteps.cs"];
m27_17 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", color=green, community=0, file="JobFetcherSteps.cs"];
m27_15 [label="Assert.AreEqual(JobSteps.DefaultJobId, _jobId)", span="34-34", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", color=red, community=0, file="JobFetcherSteps.cs"];
m27_16 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="32-32", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", color=green, community=0, file="JobFetcherSteps.cs"];
m27_8 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", span="14-14", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobFetcherSteps.cs"];
m27_0 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="14-14", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="JobFetcherSteps.cs"];
m27_1 [label="Given(String.Format(''the fetcher listening the '{0}' queue'', QueueSteps.DefaultQueue))", span="16-16", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="JobFetcherSteps.cs"];
m27_2 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="14-14", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="JobFetcherSteps.cs"];
m27_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="JobFetcherSteps.cs"];
m27_5 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="20-20", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs"];
m27_6 [label="_fetcher = new JobFetcher(Redis.Client, new List<string> { queue }, TimeSpan.FromSeconds(1))", span="25-25", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", color=green, community=0, file="JobFetcherSteps.cs"];
m27_7 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="20-20", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs"];
m27_39 [label="Entry Unk.When", span="", cluster="Unk.When", file="JobFetcherSteps.cs"];
m27_44 [label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="70-70", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs"];
m27_45 [label="Assert.AreEqual(jobId, _jobId)", span="72-72", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", color=green, community=0, file="JobFetcherSteps.cs"];
m27_46 [label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="70-70", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs"];
m27_26 [label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningThem()", span="43-43", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningThem()", file="JobFetcherSteps.cs"];
m27_27 [label="_fetcher = new JobFetcher(Redis.Client, _queues, TimeSpan.FromSeconds(1))", span="45-45", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningThem()", color=green, community=0, file="JobFetcherSteps.cs"];
m27_28 [label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningThem()", span="43-43", cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningThem()", file="JobFetcherSteps.cs"];
m27_10 [label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="26-26", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs"];
m27_30 [label="_jobId = _fetcher.DequeueJobId()", span="51-51", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", color=green, community=0, file="JobFetcherSteps.cs"];
m27_23 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="JobFetcherSteps.cs"];
m27_24 [label="x[''Queue'']", span="39-39", cluster="lambda expression", color=green, community=0, file="JobFetcherSteps.cs"];
m27_25 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="JobFetcherSteps.cs"];
m27_55 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="JobFetcherSteps.cs"];
m27_4 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="JobFetcherSteps.cs"];
m27_33 [label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="55-55", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs"];
m27_34 [label="var i = 0", span="57-57", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", color=green, community=0, file="JobFetcherSteps.cs"];
m27_35 [label="i < count", span="57-57", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", color=green, community=0, file="JobFetcherSteps.cs"];
m27_37 [label="i++", span="57-57", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", color=green, community=0, file="JobFetcherSteps.cs"];
m27_36 [label="When(''it dequeues a job'')", span="59-59", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", color=green, community=0, file="JobFetcherSteps.cs"];
m27_38 [label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="55-55", cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs"];
m27_41 [label="Assert.AreEqual(JobSteps.DefaultJobId, _jobId)", span="66-66", cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", color=green, community=0, file="JobFetcherSteps.cs"];
m27_22 [label="HangFire.Tests.JobFetcherSteps", span="", cluster="Unk.ToList", file="JobFetcherSteps.cs"];
m28_4 [label="Entry HangFire.Filters.JobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="12-12", cluster="HangFire.Filters.JobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="JobFilter.cs"];
m28_5 [label="Exit HangFire.Filters.JobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", span="12-12", cluster="HangFire.Filters.JobFilter.OnJobPerforming(HangFire.Filters.JobPerformingContext)", file="JobFilter.cs"];
m28_0 [label="Entry HangFire.Filters.JobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4", cluster="HangFire.Filters.JobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="JobFilter.cs"];
m28_1 [label="Exit HangFire.Filters.JobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", span="4-4", cluster="HangFire.Filters.JobFilter.OnJobEnqueueing(HangFire.Filters.JobEnqueueingContext)", file="JobFilter.cs"];
m28_6 [label="Entry HangFire.Filters.JobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="16-16", cluster="HangFire.Filters.JobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="JobFilter.cs"];
m28_7 [label="Exit HangFire.Filters.JobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", span="16-16", cluster="HangFire.Filters.JobFilter.OnJobPerformed(HangFire.Filters.JobPerformedContext)", file="JobFilter.cs"];
m28_2 [label="Entry HangFire.Filters.JobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="8-8", cluster="HangFire.Filters.JobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="JobFilter.cs"];
m28_3 [label="Exit HangFire.Filters.JobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", span="8-8", cluster="HangFire.Filters.JobFilter.OnJobEnqueued(HangFire.Filters.JobEnqueuedContext)", file="JobFilter.cs"];
m29_0 [label="Entry HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs"];
m29_1 [label="Performed = true", span="185-185", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs"];
m29_2 [label="Exit HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", span="183-183", cluster="HangFire.Tests.JobInvokerTests.CorrectJob.Perform()", file="JobInvokerTests.cs"];
m29_7 [label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="JobInvokerTests.cs"];
m29_8 [label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", span="205-205", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Perform()", file="JobInvokerTests.cs"];
m29_3 [label="Entry HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs"];
m29_4 [label="A = a", span="196-196", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs"];
m29_5 [label="B = b", span="197-197", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs"];
m29_6 [label="Exit HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", span="194-194", cluster="HangFire.Tests.JobInvokerTests.ArgumentsJob.Perform(int, string)", file="JobInvokerTests.cs"];
m29_9 [label="Entry HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs"];
m29_10 [label="Disposed = true", span="211-211", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs"];
m29_11 [label="Exit HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", span="209-209", cluster="HangFire.Tests.JobInvokerTests.DisposableJob.Dispose()", file="JobInvokerTests.cs"];
m29_12 [label="HangFire.Tests.JobInvokerTests.CorrectJob", span="", file="JobInvokerTests.cs"];
m29_13 [label="HangFire.Tests.JobInvokerTests.ArgumentsJob", span="", file="JobInvokerTests.cs"];
m29_14 [label="HangFire.Tests.JobInvokerTests.DisposableJob", span="", file="JobInvokerTests.cs"];
m31_0 [label="Entry HangFire.Filters.JobPerformedContext.JobPerformedContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.JobPerformedContext.JobPerformedContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, bool, System.Exception)", file="JobPerformedContext.cs"];
m31_1 [label="JobDescriptor = jobDescriptor", span="14-14", cluster="HangFire.Filters.JobPerformedContext.JobPerformedContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, bool, System.Exception)", color=red, community=0, file="JobPerformedContext.cs"];
m31_2 [label="Canceled = canceled", span="15-15", cluster="HangFire.Filters.JobPerformedContext.JobPerformedContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, bool, System.Exception)", color=red, community=0, file="JobPerformedContext.cs"];
m31_3 [label="Exception = exception", span="16-16", cluster="HangFire.Filters.JobPerformedContext.JobPerformedContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, bool, System.Exception)", color=red, community=0, file="JobPerformedContext.cs"];
m31_4 [label="Exit HangFire.Filters.JobPerformedContext.JobPerformedContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, bool, System.Exception)", span="8-8", cluster="HangFire.Filters.JobPerformedContext.JobPerformedContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, bool, System.Exception)", file="JobPerformedContext.cs"];
m31_5 [label="HangFire.Filters.JobPerformedContext", span="", file="JobPerformedContext.cs"];
m32_44 [label="Entry HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", span="68-68", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs"];
m32_45 [label="filter.OnPerforming(preContext)", span="73-73", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_46 [label="preContext.Canceled", span="74-74", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_47 [label="return new PerformedContext(\r\n                    preContext, true, null);", span="76-77", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=1, file="JobPerformer.cs"];
m32_48 [label="var wasError = false", span="80-80", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_50 [label="postContext = continuation()", span="84-84", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_49 [label="PerformedContext postContext", span="81-81", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_51 [label=Exception, span="86-86", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_57 [label="!wasError", span="99-99", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_53 [label="postContext = new PerformedContext(\r\n                    preContext, false, ex)", span="89-90", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=1, file="JobPerformer.cs"];
m32_52 [label="wasError = true", span="88-88", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_54 [label="filter.OnPerformed(postContext)", span="91-91", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_55 [label="!postContext.ExceptionHandled", span="93-93", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_58 [label="filter.OnPerformed(postContext)", span="101-101", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_59 [label="return postContext;", span="104-104", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_56 [label="throw;", span="95-95", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", color=green, community=0, file="JobPerformer.cs"];
m32_60 [label="Exit HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", span="68-68", cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs"];
m32_13 [label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="JobPerformer.cs"];
m32_14 [label="PerformJobWithFilters(context, _serverFilters)", span="37-37", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", color=green, community=0, file="JobPerformer.cs"];
m32_15 [label=Exception, span="39-39", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", color=green, community=0, file="JobPerformer.cs"];
m32_16 [label="var exceptionContext = new ServerExceptionContext(context, ex)", span="41-41", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", color=green, community=0, file="JobPerformer.cs"];
m32_17 [label="InvokeServerExceptionFilters(exceptionContext, _serverExceptionFilters)", span="42-42", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", color=green, community=0, file="JobPerformer.cs"];
m32_18 [label="!exceptionContext.ExceptionHandled", span="44-44", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", color=green, community=0, file="JobPerformer.cs"];
m32_19 [label="throw;", span="46-46", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", color=green, community=0, file="JobPerformer.cs"];
m32_20 [label="Exit HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="JobPerformer.cs"];
m32_21 [label="Entry HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", span="51-51", cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", file="JobPerformer.cs"];
m32_24 [label="var preContext = new PerformingContext(context)", span="55-55", cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", color=green, community=0, file="JobPerformer.cs"];
m32_25 [label="Func<PerformedContext> continuation = () =>\r\n            {\r\n                context.JobDescriptor.Perform();\r\n                return new PerformedContext(context, false, null);\r\n            }", span="56-60", cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", color=green, community=1, file="JobPerformer.cs"];
m32_26 [label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokePerformFilter(filter, preContext, next))", span="62-63", cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", color=green, community=1, file="JobPerformer.cs"];
m32_27 [label="thunk()", span="65-65", cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", color=green, community=0, file="JobPerformer.cs"];
m32_28 [label="Exit HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", span="51-51", cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", file="JobPerformer.cs"];
m32_38 [label="Entry HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6", cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="JobPerformer.cs"];
m32_30 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobPerformer.cs"];
m32_32 [label="Entry Unk.thunk", span="", cluster="Unk.thunk", file="JobPerformer.cs"];
m32_67 [label="Entry HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="4-4", cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="JobPerformer.cs"];
m32_29 [label="Entry HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", span="4-4", cluster="HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", file="JobPerformer.cs"];
m32_63 [label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5", cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="JobPerformer.cs"];
m32_22 [label="Entry HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6", cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="JobPerformer.cs"];
m32_23 [label="Entry HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", span="107-107", cluster="HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs"];
m32_64 [label="filters.Reverse()", span="111-111", cluster="HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", color=green, community=0, file="JobPerformer.cs"];
m32_65 [label="filter.OnServerException(context)", span="113-113", cluster="HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", color=green, community=0, file="JobPerformer.cs"];
m32_66 [label="Exit HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", span="107-107", cluster="HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs"];
m32_4 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobPerformer.cs"];
m32_41 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="JobPerformer.cs"];
m32_42 [label="InvokePerformFilter(filter, preContext, next)", span="63-63", cluster="lambda expression", color=green, community=0, file="JobPerformer.cs"];
m32_34 [label="context.JobDescriptor.Perform()", span="58-58", cluster="lambda expression", color=green, community=0, file="JobPerformer.cs"];
m32_33 [label="Entry lambda expression", span="56-60", cluster="lambda expression", file="JobPerformer.cs"];
m32_35 [label="return new PerformedContext(context, false, null);", span="59-59", cluster="lambda expression", color=green, community=0, file="JobPerformer.cs"];
m32_36 [label="Exit lambda expression", span="56-60", cluster="lambda expression", file="JobPerformer.cs"];
m32_39 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="JobPerformer.cs"];
m32_43 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="JobPerformer.cs"];
m32_40 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="JobPerformer.cs"];
m32_37 [label="Entry HangFire.Server.ServerJobDescriptor.Perform()", span="58-58", cluster="HangFire.Server.ServerJobDescriptor.Perform()", file="JobPerformer.cs"];
m32_31 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="JobPerformer.cs"];
m32_61 [label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4", cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="JobPerformer.cs"];
m32_3 [label="Entry HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", span="22-22", cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs"];
m32_5 [label="serverFilters == null", span="26-26", cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", color=green, community=0, file="JobPerformer.cs"];
m32_6 [label="throw new ArgumentNullException(''serverFilters'');", span="26-26", cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", color=green, community=0, file="JobPerformer.cs"];
m32_7 [label="serverExceptionFilters == null", span="27-27", cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", color=green, community=0, file="JobPerformer.cs"];
m32_8 [label="throw new ArgumentNullException(''serverExceptionFilters'');", span="27-27", cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", color=green, community=0, file="JobPerformer.cs"];
m32_9 [label="_serverFilters = serverFilters", span="29-29", cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", color=green, community=0, file="JobPerformer.cs"];
m32_10 [label="_serverExceptionFilters = serverExceptionFilters", span="30-30", cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", color=green, community=0, file="JobPerformer.cs"];
m32_11 [label="Exit HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", span="22-22", cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs"];
m32_62 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="JobPerformer.cs"];
m32_0 [label="Entry HangFire.Server.JobPerformer.JobPerformer()", span="10-10", cluster="HangFire.Server.JobPerformer.JobPerformer()", file="JobPerformer.cs"];
m32_1 [label="Current = new JobPerformer(\r\n                GlobalJobFilters.Filters.OfType<IServerFilter>(),\r\n                GlobalJobFilters.Filters.OfType<IServerExceptionFilter>())", span="12-14", cluster="HangFire.Server.JobPerformer.JobPerformer()", color=green, community=1, file="JobPerformer.cs"];
m32_2 [label="Exit HangFire.Server.JobPerformer.JobPerformer()", span="10-10", cluster="HangFire.Server.JobPerformer.JobPerformer()", file="JobPerformer.cs"];
m32_68 [label="HangFire.Server.JobPerformer", span="", file="JobPerformer.cs"];
m32_69 [label="HangFire.Filters.PerformContext", span="", file="JobPerformer.cs"];
m32_70 [label=preContext, span="", file="JobPerformer.cs"];
m32_71 [label="System.Func<HangFire.Filters.PerformedContext>", span="", file="JobPerformer.cs"];
m32_72 [label="HangFire.Filters.IServerFilter", span="", file="JobPerformer.cs"];
m33_0 [label="Entry HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="6-6", cluster="HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="JobPerformingContext.cs"];
m33_1 [label="JobDescriptor = jobDescriptor", span="11-11", cluster="HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", color=red, community=0, file="JobPerformingContext.cs"];
m33_2 [label="Exit HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="6-6", cluster="HangFire.Filters.JobPerformingContext.JobPerformingContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="JobPerformingContext.cs"];
m33_3 [label="HangFire.Filters.JobPerformingContext", span="", file="JobPerformingContext.cs"];
m35_30 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="JobSteps.cs"];
m35_110 [label="Entry Unk.OnClientException", span="", cluster="Unk.OnClientException", file="JobSteps.cs"];
m35_17 [label="options.WorkerCount = 0", span="25-25", cluster="lambda expression", file="JobSteps.cs", color=green, community=0];
m35_15 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="JobSteps.cs"];
m35_200 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", span="218-218", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_201 [label="var filter = new Mock<IClientFilter>()", span="221-221", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_202 [label="_filters.Add(filter.Object)", span="222-222", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_203 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext x) => x.Canceled = true)", span="224-225", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_208 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="239-239", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_204 [label="var process = CreateProcess()", span="227-227", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_205 [label="var jobId = process.Run(_context.Object)", span="230-230", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_206 [label="Assert.Null(jobId)", span="233-233", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_207 [label="_innerProcess.Verify(\r\n                x => x.Run(It.IsAny<CreateContext>()), \r\n                Times.Never)", span="235-237", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_209 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", span="218-218", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCallBoth_CreateJob_And_OnCreated_WhenFilterCancelsThis_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_26 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="38-38", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="JobSteps.cs"];
m35_363 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", span="381-381", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.TestMethod()", file="JobSteps.cs"];
m35_9 [label="_innerProcess = new Mock<IJobCreationProcess>()", span="38-38", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobSteps.cs"];
m35_44 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="JobSteps.cs"];
m35_75 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", span="84-84", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", file="JobSteps.cs"];
m35_76 [label="var process = CreateProcess()", span="86-86", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", file="JobSteps.cs"];
m35_77 [label="var result = process.Run(_context.Object)", span="88-88", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", file="JobSteps.cs"];
m35_78 [label="Assert.Equal(JobId, result)", span="90-90", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", file="JobSteps.cs"];
m35_79 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", span="84-84", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ReturnsJobIdentifier()", file="JobSteps.cs"];
m35_311 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", span="334-334", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_312 [label="var filter = new Mock<IClientFilter>()", span="337-337", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_313 [label="_filters.Add(filter.Object)", span="338-338", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_316 [label="filter.Setup(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="344-345", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_314 [label="var exception = new InvalidOperationException()", span="340-340", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_315 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws(exception)", span="341-342", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_317 [label="var process = CreateProcess()", span="347-347", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_318 [label="var jobId = process.Run(_context.Object)", span="350-350", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_319 [label="Assert.Null(jobId)", span="353-353", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_320 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", span="334-334", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotThrow_HandledExceptions_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_222 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="243-243", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobSteps.cs"];
m35_223 [label="var outerFilter = new Mock<IClientFilter>()", span="246-246", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobSteps.cs"];
m35_224 [label="var innerFilter = new Mock<IClientFilter>()", span="247-247", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobSteps.cs"];
m35_225 [label="_filters.Add(outerFilter.Object)", span="249-249", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobSteps.cs"];
m35_230 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Canceled)))", span="261-261", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobSteps.cs"];
m35_226 [label="_filters.Add(innerFilter.Object)", span="250-250", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobSteps.cs"];
m35_227 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Callback((CreatingContext context) => context.Canceled = true)", span="252-253", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobSteps.cs"];
m35_228 [label="var process = CreateProcess()", span="255-255", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobSteps.cs"];
m35_229 [label="process.Run(_context.Object)", span="258-258", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobSteps.cs"];
m35_231 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", span="243-243", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_AboutTheCancellationOfCreation()", file="JobSteps.cs"];
m35_16 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="JobSteps.cs"];
m35_333 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="357-357", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_334 [label="var outerFilter = new Mock<IClientFilter>()", span="360-360", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_335 [label="var innerFilter = new Mock<IClientFilter>()", span="361-361", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_336 [label="_filters.Add(outerFilter.Object)", span="363-363", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_342 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null)))", span="378-378", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_337 [label="_filters.Add(innerFilter.Object)", span="364-364", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_339 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>()))\r\n                .Callback((CreatedContext x) => x.ExceptionHandled = true)", span="369-370", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_338 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="366-367", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_340 [label="var process = CreateProcess()", span="372-372", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_341 [label="Assert.DoesNotThrow(() => process.Run(_context.Object))", span="375-375", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_343 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", span="357-357", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilter_EvenAboutHandledException()", file="JobSteps.cs"];
m35_22 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="29-29", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="JobSteps.cs"];
m35_344 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="JobSteps.cs"];
m35_39 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="JobSteps.cs"];
m35_7 [label="_filterProvider = new Mock<IJobFilterProvider>()", span="34-34", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobSteps.cs"];
m35_45 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="JobSteps.cs"];
m35_46 [label="new JobCreationProcess(null, _innerProcess.Object)", span="46-46", cluster="lambda expression", file="JobSteps.cs"];
m35_49 [label=options, span="", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="JobSteps.cs"];
m35_50 [label=options, span="", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="JobSteps.cs"];
m35_51 [label=options, span="", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="JobSteps.cs"];
m35_52 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", span="52-52", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Ctor_ThrowsAnException_WhenInnerProcessIsNull()", file="JobSteps.cs"];
m35_274 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="JobSteps.cs"];
m35_99 [label="Entry Mock<IClientExceptionFilter>.cstr", span="", cluster="Mock<IClientExceptionFilter>.cstr", file="JobSteps.cs"];
m35_40 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", span="56-56", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="JobSteps.cs"];
m35_41 [label="var options = CreateOptions()", span="58-58", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="JobSteps.cs"];
m35_42 [label="Assert.NotNull(options.ServerWatchdogOptions)", span="60-60", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="JobSteps.cs"];
m35_43 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", span="56-56", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="JobSteps.cs"];
m35_8 [label="_filterProvider.Setup(x => x.GetFilters(It.IsNotNull<Job>())).Returns(\r\n                _filters.Select(f => new JobFilter(f, JobFilterScope.Type, null)))", span="35-36", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.JobCreationProcessFacts()", file="JobSteps.cs"];
m35_61 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="385-385", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobSteps.cs"];
m35_364 [label="return new JobCreationProcess(_filterProvider.Object, _innerProcess.Object);", span="387-387", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobSteps.cs"];
m35_365 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", span="385-385", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.CreateProcess()", file="JobSteps.cs"];
m35_176 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="195-195", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_177 [label="var outerFilter = new Mock<IClientFilter>()", span="198-198", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_178 [label="var innerFilter = new Mock<IClientFilter>()", span="199-199", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_179 [label="_filters.Add(outerFilter.Object)", span="201-201", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_181 [label="outerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="204-204", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_184 [label="outerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="207-207", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_180 [label="_filters.Add(innerFilter.Object)", span="202-202", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_182 [label="innerFilter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>())).InSequence()", span="205-205", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_183 [label="innerFilter.Setup(x => x.OnCreated(It.IsAny<CreatedContext>())).InSequence()", span="206-206", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_185 [label="var process = CreateProcess()", span="209-209", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_186 [label="process.Run(_context.Object)", span="212-212", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_187 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", span="195-195", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_WrapsFilterCalls_OneIntoAnother()", file="JobSteps.cs"];
m35_27 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="JobSteps.cs"];
m35_28 [label="x.GetFilters(It.IsNotNull<Job>())", span="35-35", cluster="lambda expression", file="JobSteps.cs"];
m35_29 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="JobSteps.cs"];
m35_175 [label="Entry Unk.OnCreated", span="", cluster="Unk.OnCreated", file="JobSteps.cs"];
m35_91 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="105-105", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobSteps.cs"];
m35_92 [label="var filter = new Mock<IClientExceptionFilter>()", span="108-108", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobSteps.cs"];
m35_93 [label="_filters.Add(filter.Object)", span="109-109", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobSteps.cs"];
m35_97 [label="filter.Verify(x => x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>()))", span="121-122", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobSteps.cs"];
m35_94 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="111-112", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobSteps.cs"];
m35_95 [label="var process = CreateProcess()", span="114-114", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobSteps.cs"];
m35_96 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="117-118", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobSteps.cs"];
m35_98 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", span="105-105", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilter_OnException()", file="JobSteps.cs"];
m35_265 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="289-289", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobSteps.cs"];
m35_266 [label="var filter = new Mock<IClientFilter>()", span="292-292", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobSteps.cs"];
m35_267 [label="_filters.Add(filter.Object)", span="293-293", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobSteps.cs"];
m35_272 [label="filter.Verify(x => x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception)))", span="306-307", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobSteps.cs"];
m35_268 [label="var exception = new InvalidOperationException()", span="295-295", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobSteps.cs"];
m35_269 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws(exception)", span="296-297", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobSteps.cs"];
m35_270 [label="var process = CreateProcess()", span="299-299", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobSteps.cs"];
m35_271 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="302-303", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobSteps.cs"];
m35_273 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", span="289-289", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsFiltersAboutException_WhenItIsOccured_DuringTheCreationOfAJob()", file="JobSteps.cs"];
m35_288 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_289 [label="var outerFilter = new Mock<IClientFilter>()", span="314-314", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_290 [label="var innerFilter = new Mock<IClientFilter>()", span="315-315", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_291 [label="_filters.Add(outerFilter.Object)", span="317-317", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_297 [label="outerFilter.Verify(x => x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception)))", span="330-330", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_292 [label="_filters.Add(innerFilter.Object)", span="318-318", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_293 [label="var exception = new InvalidOperationException()", span="320-320", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_294 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws(exception)", span="321-322", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_295 [label="var process = CreateProcess()", span="324-324", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_296 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="327-328", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_298 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", span="311-311", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_TellsOuterFilters_AboutAllExceptions()", file="JobSteps.cs"];
m35_18 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="JobSteps.cs"];
m35_100 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="JobSteps.cs"];
m35_0 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="JobSteps.cs"];
m35_1 [label="var options = CreateOptions()", span="11-11", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="JobSteps.cs"];
m35_2 [label="Assert.Equal(Math.Min(Environment.ProcessorCount * 5, 40), options.WorkerCount)", span="13-13", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=red, community=0, file="JobSteps.cs"];
m35_5 [label="Assert.True(options.SchedulePollingInterval > TimeSpan.Zero)", span="16-16", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="JobSteps.cs"];
m35_3 [label="Assert.Equal(EnqueuedState.DefaultQueue, options.Queues[0])", span="14-14", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="JobSteps.cs"];
m35_4 [label="Assert.True(options.ShutdownTimeout > TimeSpan.Zero)", span="15-15", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="JobSteps.cs"];
m35_6 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="JobSteps.cs"];
m35_10 [label="Entry Unk.True", span="", cluster="Unk.True", file="JobSteps.cs"];
m35_11 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="20-20", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="JobSteps.cs"];
m35_122 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="JobSteps.cs"];
m35_244 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="265-265", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobSteps.cs"];
m35_245 [label="var filter = new Mock<IClientFilter>()", span="268-268", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobSteps.cs"];
m35_246 [label="_filters.Add(filter.Object)", span="269-269", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobSteps.cs"];
m35_247 [label="filter.Setup(x => x.OnCreating(It.IsAny<CreatingContext>()))\r\n                .Throws<InvalidOperationException>()", span="271-272", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobSteps.cs"];
m35_251 [label="filter.Verify(x => x.OnCreated(It.IsAny<CreatedContext>()), Times.Never)", span="285-285", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobSteps.cs"];
m35_248 [label="var process = CreateProcess()", span="274-274", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobSteps.cs"];
m35_249 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="277-278", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobSteps.cs"];
m35_250 [label="_innerProcess.Verify(\r\n                x => x.Run(It.IsAny<CreateContext>()), \r\n                Times.Never)", span="281-283", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobSteps.cs"];
m35_252 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", span="265-265", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCall_CreateJob_And_OnCreated_WhenExceptionOccured_DuringCreatingPhase()", file="JobSteps.cs"];
m35_12 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", color=green, community=0, file="JobSteps.cs"];
m35_13 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", color=green, community=0, file="JobSteps.cs"];
m35_14 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="183-183", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="JobSteps.cs"];
m35_48 [label=options, span="", cluster="JobCreationProcess.cstr", file="JobSteps.cs"];
m35_65 [label="Entry Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", span="51-51", cluster="Hangfire.Client.JobCreationProcess.Run(Hangfire.Client.CreateContext)", file="JobSteps.cs"];
m35_19 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="29-29", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="JobSteps.cs"];
m35_275 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="JobSteps.cs"];
m35_145 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="JobSteps.cs"];
m35_111 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="126-126", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_112 [label="var filter1 = new Mock<IClientExceptionFilter>()", span="129-129", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_113 [label="var filter2 = new Mock<IClientExceptionFilter>()", span="130-130", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_115 [label="filter1.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="133-133", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_116 [label="_filters.Add(filter1.Object)", span="135-135", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_114 [label="filter2.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>())).InSequence()", span="132-132", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_117 [label="_filters.Add(filter2.Object)", span="136-136", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_118 [label="_innerProcess\r\n                .Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="138-140", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_119 [label="var process = CreateProcess()", span="142-142", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_120 [label="Assert.Throws<InvalidOperationException>(\r\n                () => process.Run(_context.Object))", span="145-146", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_121 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", span="126-126", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsExceptionFilters_InReverseOrder()", file="JobSteps.cs"];
m35_47 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="JobSteps.cs"];
m35_37 [label="x.Run((_context.Object))", span="39-39", cluster="lambda expression", file="JobSteps.cs"];
m35_23 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="JobSteps.cs"];
m35_32 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="JobSteps.cs"];
m35_36 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="47-47", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="JobSteps.cs"];
m35_24 [label="options.WorkerCount = -1", span="34-34", cluster="lambda expression", file="JobSteps.cs"];
m35_25 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="JobSteps.cs"];
m35_33 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="47-47", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="JobSteps.cs"];
m35_34 [label="var options = CreateOptions()", span="49-49", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="JobSteps.cs"];
m35_38 [label="options.Queues = new string[0]", span="52-52", cluster="lambda expression", file="JobSteps.cs"];
m35_53 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="JobSteps.cs"];
m35_54 [label="new JobCreationProcess(_filterProvider.Object, null)", span="55-55", cluster="lambda expression", file="JobSteps.cs"];
m35_55 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="JobSteps.cs"];
m35_63 [label="process.Run(null)", span="66-66", cluster="lambda expression", file="JobSteps.cs"];
m35_62 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="JobSteps.cs"];
m35_64 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="JobSteps.cs"];
m35_72 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="JobSteps.cs"];
m35_73 [label="x.Run(_context.Object)", span="79-79", cluster="lambda expression", file="JobSteps.cs"];
m35_74 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="JobSteps.cs"];
m35_85 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="JobSteps.cs"];
m35_89 [label="process.Run(_context.Object)", span="101-101", cluster="lambda expression", file="JobSteps.cs"];
m35_88 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="JobSteps.cs"];
m35_86 [label="x.Run(It.IsAny<CreateContext>())", span="96-96", cluster="lambda expression", file="JobSteps.cs"];
m35_87 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="JobSteps.cs"];
m35_90 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="JobSteps.cs"];
m35_101 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="JobSteps.cs"];
m35_105 [label="process.Run(_context.Object)", span="118-118", cluster="lambda expression", file="JobSteps.cs"];
m35_104 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="JobSteps.cs"];
m35_107 [label="Entry lambda expression", span="121-122", cluster="lambda expression", file="JobSteps.cs"];
m35_102 [label="x.Run(It.IsAny<CreateContext>())", span="111-111", cluster="lambda expression", file="JobSteps.cs"];
m35_103 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="JobSteps.cs"];
m35_106 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="JobSteps.cs"];
m35_108 [label="x.OnClientException(\r\n                It.IsNotNull<ClientExceptionContext>())", span="121-122", cluster="lambda expression", file="JobSteps.cs"];
m35_109 [label="Exit lambda expression", span="121-122", cluster="lambda expression", file="JobSteps.cs"];
m35_123 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="JobSteps.cs"];
m35_126 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="JobSteps.cs"];
m35_129 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="JobSteps.cs"];
m35_133 [label="process.Run(_context.Object)", span="146-146", cluster="lambda expression", file="JobSteps.cs"];
m35_132 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="JobSteps.cs"];
m35_124 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="132-132", cluster="lambda expression", file="JobSteps.cs"];
m35_125 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="JobSteps.cs"];
m35_127 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="133-133", cluster="lambda expression", file="JobSteps.cs"];
m35_128 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="JobSteps.cs"];
m35_130 [label="x.Run(It.IsAny<CreateContext>())", span="139-139", cluster="lambda expression", file="JobSteps.cs"];
m35_131 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="JobSteps.cs"];
m35_134 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="JobSteps.cs"];
m35_146 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="JobSteps.cs"];
m35_149 [label="Entry lambda expression", span="159-159", cluster="lambda expression", file="JobSteps.cs"];
m35_152 [label="Entry lambda expression", span="160-160", cluster="lambda expression", file="JobSteps.cs"];
m35_147 [label="x.Run(It.IsAny<CreateContext>())", span="155-155", cluster="lambda expression", file="JobSteps.cs"];
m35_148 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="JobSteps.cs"];
m35_150 [label="x.OnClientException(It.IsAny<ClientExceptionContext>())", span="159-159", cluster="lambda expression", file="JobSteps.cs"];
m35_151 [label="Exit lambda expression", span="159-159", cluster="lambda expression", file="JobSteps.cs"];
m35_153 [label="x.ExceptionHandled = true", span="160-160", cluster="lambda expression", file="JobSteps.cs"];
m35_154 [label="Exit lambda expression", span="160-160", cluster="lambda expression", file="JobSteps.cs"];
m35_165 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="JobSteps.cs"];
m35_169 [label="Entry lambda expression", span="181-181", cluster="lambda expression", file="JobSteps.cs"];
m35_172 [label="Entry lambda expression", span="184-184", cluster="lambda expression", file="JobSteps.cs"];
m35_166 [label="x.OnCreating(It.IsNotNull<CreatingContext>())", span="179-179", cluster="lambda expression", file="JobSteps.cs"];
m35_167 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="JobSteps.cs"];
m35_170 [label="x.Run(It.IsAny<CreateContext>())", span="181-181", cluster="lambda expression", file="JobSteps.cs"];
m35_171 [label="Exit lambda expression", span="181-181", cluster="lambda expression", file="JobSteps.cs"];
m35_173 [label="x.OnCreated(It.IsNotNull<CreatedContext>())", span="184-184", cluster="lambda expression", file="JobSteps.cs"];
m35_174 [label="Exit lambda expression", span="184-184", cluster="lambda expression", file="JobSteps.cs"];
m35_188 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="JobSteps.cs"];
m35_191 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="JobSteps.cs"];
m35_194 [label="Entry lambda expression", span="206-206", cluster="lambda expression", file="JobSteps.cs"];
m35_197 [label="Entry lambda expression", span="207-207", cluster="lambda expression", file="JobSteps.cs"];
m35_189 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="204-204", cluster="lambda expression", file="JobSteps.cs"];
m35_190 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="JobSteps.cs"];
m35_192 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="205-205", cluster="lambda expression", file="JobSteps.cs"];
m35_193 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="JobSteps.cs"];
m35_195 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="206-206", cluster="lambda expression", file="JobSteps.cs"];
m35_196 [label="Exit lambda expression", span="206-206", cluster="lambda expression", file="JobSteps.cs"];
m35_198 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="207-207", cluster="lambda expression", file="JobSteps.cs"];
m35_199 [label="Exit lambda expression", span="207-207", cluster="lambda expression", file="JobSteps.cs"];
m35_210 [label="Entry lambda expression", span="224-224", cluster="lambda expression", file="JobSteps.cs"];
m35_213 [label="Entry lambda expression", span="225-225", cluster="lambda expression", file="JobSteps.cs"];
m35_216 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="JobSteps.cs"];
m35_219 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="JobSteps.cs"];
m35_211 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="224-224", cluster="lambda expression", file="JobSteps.cs"];
m35_212 [label="Exit lambda expression", span="224-224", cluster="lambda expression", file="JobSteps.cs"];
m35_214 [label="x.Canceled = true", span="225-225", cluster="lambda expression", file="JobSteps.cs"];
m35_215 [label="Exit lambda expression", span="225-225", cluster="lambda expression", file="JobSteps.cs"];
m35_217 [label="x.Run(It.IsAny<CreateContext>())", span="236-236", cluster="lambda expression", file="JobSteps.cs"];
m35_218 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="JobSteps.cs"];
m35_220 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="239-239", cluster="lambda expression", file="JobSteps.cs"];
m35_221 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="JobSteps.cs"];
m35_232 [label="Entry lambda expression", span="252-252", cluster="lambda expression", file="JobSteps.cs"];
m35_235 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="JobSteps.cs"];
m35_238 [label="Entry lambda expression", span="261-261", cluster="lambda expression", file="JobSteps.cs"];
m35_233 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="252-252", cluster="lambda expression", file="JobSteps.cs"];
m35_234 [label="Exit lambda expression", span="252-252", cluster="lambda expression", file="JobSteps.cs"];
m35_236 [label="context.Canceled = true", span="253-253", cluster="lambda expression", file="JobSteps.cs"];
m35_237 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="JobSteps.cs"];
m35_239 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Canceled))", span="261-261", cluster="lambda expression", file="JobSteps.cs"];
m35_240 [label="Exit lambda expression", span="261-261", cluster="lambda expression", file="JobSteps.cs"];
m35_241 [label="Entry lambda expression", span="261-261", cluster="lambda expression", file="JobSteps.cs"];
m35_242 [label="context.Canceled", span="261-261", cluster="lambda expression", file="JobSteps.cs"];
m35_243 [label="Exit lambda expression", span="261-261", cluster="lambda expression", file="JobSteps.cs"];
m35_253 [label="Entry lambda expression", span="271-271", cluster="lambda expression", file="JobSteps.cs"];
m35_257 [label="process.Run(_context.Object)", span="278-278", cluster="lambda expression", file="JobSteps.cs"];
m35_256 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="JobSteps.cs"];
m35_259 [label="Entry lambda expression", span="282-282", cluster="lambda expression", file="JobSteps.cs"];
m35_262 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="JobSteps.cs"];
m35_254 [label="x.OnCreating(It.IsAny<CreatingContext>())", span="271-271", cluster="lambda expression", file="JobSteps.cs"];
m35_255 [label="Exit lambda expression", span="271-271", cluster="lambda expression", file="JobSteps.cs"];
m35_258 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="JobSteps.cs"];
m35_260 [label="x.Run(It.IsAny<CreateContext>())", span="282-282", cluster="lambda expression", file="JobSteps.cs"];
m35_261 [label="Exit lambda expression", span="282-282", cluster="lambda expression", file="JobSteps.cs"];
m35_263 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="285-285", cluster="lambda expression", file="JobSteps.cs"];
m35_264 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="JobSteps.cs"];
m35_283 [label="x.OnCreated(It.Is<CreatedContext>(\r\n                context => context.Exception == exception))", span="306-307", cluster="lambda expression", file="JobSteps.cs"];
m35_286 [label="context.Exception == exception", span="307-307", cluster="lambda expression", file="JobSteps.cs"];
m35_276 [label="Entry lambda expression", span="296-296", cluster="lambda expression", file="JobSteps.cs"];
m35_280 [label="process.Run(_context.Object)", span="303-303", cluster="lambda expression", file="JobSteps.cs"];
m35_279 [label="Entry lambda expression", span="303-303", cluster="lambda expression", file="JobSteps.cs"];
m35_282 [label="Entry lambda expression", span="306-307", cluster="lambda expression", file="JobSteps.cs"];
m35_277 [label="x.Run(It.IsAny<CreateContext>())", span="296-296", cluster="lambda expression", file="JobSteps.cs"];
m35_278 [label="Exit lambda expression", span="296-296", cluster="lambda expression", file="JobSteps.cs"];
m35_281 [label="Exit lambda expression", span="303-303", cluster="lambda expression", file="JobSteps.cs"];
m35_284 [label="Exit lambda expression", span="306-307", cluster="lambda expression", file="JobSteps.cs"];
m35_285 [label="Entry lambda expression", span="307-307", cluster="lambda expression", file="JobSteps.cs"];
m35_287 [label="Exit lambda expression", span="307-307", cluster="lambda expression", file="JobSteps.cs"];
m35_306 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="330-330", cluster="lambda expression", file="JobSteps.cs"];
m35_309 [label="context.Exception == exception", span="330-330", cluster="lambda expression", file="JobSteps.cs"];
m35_299 [label="Entry lambda expression", span="321-321", cluster="lambda expression", file="JobSteps.cs"];
m35_303 [label="process.Run(_context.Object)", span="328-328", cluster="lambda expression", file="JobSteps.cs"];
m35_302 [label="Entry lambda expression", span="328-328", cluster="lambda expression", file="JobSteps.cs"];
m35_305 [label="Entry lambda expression", span="330-330", cluster="lambda expression", file="JobSteps.cs"];
m35_300 [label="x.Run(It.IsAny<CreateContext>())", span="321-321", cluster="lambda expression", file="JobSteps.cs"];
m35_301 [label="Exit lambda expression", span="321-321", cluster="lambda expression", file="JobSteps.cs"];
m35_304 [label="Exit lambda expression", span="328-328", cluster="lambda expression", file="JobSteps.cs"];
m35_307 [label="Exit lambda expression", span="330-330", cluster="lambda expression", file="JobSteps.cs"];
m35_308 [label="Entry lambda expression", span="330-330", cluster="lambda expression", file="JobSteps.cs"];
m35_310 [label="Exit lambda expression", span="330-330", cluster="lambda expression", file="JobSteps.cs"];
m35_325 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception == exception))", span="344-344", cluster="lambda expression", file="JobSteps.cs"];
m35_328 [label="context.Exception == exception", span="344-344", cluster="lambda expression", file="JobSteps.cs"];
m35_321 [label="Entry lambda expression", span="341-341", cluster="lambda expression", file="JobSteps.cs"];
m35_324 [label="Entry lambda expression", span="344-344", cluster="lambda expression", file="JobSteps.cs"];
m35_330 [label="Entry lambda expression", span="345-345", cluster="lambda expression", file="JobSteps.cs"];
m35_322 [label="x.Run(It.IsAny<CreateContext>())", span="341-341", cluster="lambda expression", file="JobSteps.cs"];
m35_323 [label="Exit lambda expression", span="341-341", cluster="lambda expression", file="JobSteps.cs"];
m35_326 [label="Exit lambda expression", span="344-344", cluster="lambda expression", file="JobSteps.cs"];
m35_327 [label="Entry lambda expression", span="344-344", cluster="lambda expression", file="JobSteps.cs"];
m35_329 [label="Exit lambda expression", span="344-344", cluster="lambda expression", file="JobSteps.cs"];
m35_331 [label="x.ExceptionHandled = true", span="345-345", cluster="lambda expression", file="JobSteps.cs"];
m35_332 [label="Exit lambda expression", span="345-345", cluster="lambda expression", file="JobSteps.cs"];
m35_345 [label="Entry lambda expression", span="366-366", cluster="lambda expression", file="JobSteps.cs"];
m35_348 [label="Entry lambda expression", span="369-369", cluster="lambda expression", file="JobSteps.cs"];
m35_351 [label="Entry lambda expression", span="370-370", cluster="lambda expression", file="JobSteps.cs"];
m35_355 [label="process.Run(_context.Object)", span="375-375", cluster="lambda expression", file="JobSteps.cs"];
m35_354 [label="Entry lambda expression", span="375-375", cluster="lambda expression", file="JobSteps.cs"];
m35_357 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="JobSteps.cs"];
m35_346 [label="x.Run(It.IsAny<CreateContext>())", span="366-366", cluster="lambda expression", file="JobSteps.cs"];
m35_347 [label="Exit lambda expression", span="366-366", cluster="lambda expression", file="JobSteps.cs"];
m35_349 [label="x.OnCreated(It.IsAny<CreatedContext>())", span="369-369", cluster="lambda expression", file="JobSteps.cs"];
m35_350 [label="Exit lambda expression", span="369-369", cluster="lambda expression", file="JobSteps.cs"];
m35_352 [label="x.ExceptionHandled = true", span="370-370", cluster="lambda expression", file="JobSteps.cs"];
m35_353 [label="Exit lambda expression", span="370-370", cluster="lambda expression", file="JobSteps.cs"];
m35_356 [label="Exit lambda expression", span="375-375", cluster="lambda expression", file="JobSteps.cs"];
m35_358 [label="x.OnCreated(It.Is<CreatedContext>(context => context.Exception != null))", span="378-378", cluster="lambda expression", file="JobSteps.cs"];
m35_359 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="JobSteps.cs"];
m35_360 [label="Entry lambda expression", span="378-378", cluster="lambda expression", file="JobSteps.cs"];
m35_361 [label="context.Exception != null", span="378-378", cluster="lambda expression", file="JobSteps.cs"];
m35_362 [label="Exit lambda expression", span="378-378", cluster="lambda expression", file="JobSteps.cs"];
m35_31 [label="Entry Unk.GetFilters", span="", cluster="Unk.GetFilters", file="JobSteps.cs"];
m35_20 [label="var options = CreateOptions()", span="31-31", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="JobSteps.cs", color=green, community=0];
m35_71 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="JobSteps.cs"];
m35_135 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", span="152-152", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_136 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="155-156", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_137 [label="var filter = new Mock<IClientExceptionFilter>()", span="158-158", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_138 [label="filter.Setup(x => x.OnClientException(It.IsAny<ClientExceptionContext>()))\r\n                .Callback((ClientExceptionContext x) => x.ExceptionHandled = true)", span="159-160", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_139 [label="_filters.Add(filter.Object)", span="162-162", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_140 [label="var process = CreateProcess()", span="164-164", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_141 [label="var jobId = process.Run(_context.Object)", span="167-167", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_142 [label="Assert.Null(jobId)", span="169-169", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_143 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", span="152-152", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_EatsException_WhenItWasHandlerByFilter_AndReturnsNullJobIdentifier()", file="JobSteps.cs"];
m35_21 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", color=green, community=0, file="JobSteps.cs"];
m35_35 [label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38", cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="JobSteps.cs"];
m35_80 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="94-94", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobSteps.cs"];
m35_81 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="96-97", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobSteps.cs"];
m35_82 [label="var process = CreateProcess()", span="99-99", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobSteps.cs"];
m35_83 [label="Assert.Throws<InvalidOperationException>(() => process.Run(_context.Object))", span="101-101", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobSteps.cs"];
m35_84 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", span="94-94", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_DoesNotCatchExceptions()", file="JobSteps.cs"];
m35_168 [label="Entry Unk.OnCreating", span="", cluster="Unk.OnCreating", file="JobSteps.cs"];
m35_56 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobSteps.cs"];
m35_57 [label="var process = CreateProcess()", span="63-63", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobSteps.cs"];
m35_58 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => process.Run(null))", span="65-66", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobSteps.cs"];
m35_59 [label="Assert.Equal(''context'', exception.ParamName)", span="68-68", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobSteps.cs"];
m35_60 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", span="61-61", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_ThrowsAnException_WhenContextIsNull()", file="JobSteps.cs"];
m35_66 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", span="72-72", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="JobSteps.cs"];
m35_67 [label="var process = CreateProcess()", span="74-74", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="JobSteps.cs"];
m35_68 [label="process.Run(_context.Object)", span="76-76", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="JobSteps.cs"];
m35_69 [label="_innerProcess.Verify(\r\n                x => x.Run(_context.Object), \r\n                Times.Once)", span="78-80", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="JobSteps.cs"];
m35_70 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", span="72-72", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsInnerProcess_ToCreateAJob()", file="JobSteps.cs"];
m35_144 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="JobSteps.cs"];
m35_155 [label="Entry Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="173-173", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobSteps.cs"];
m35_156 [label="var filter = new Mock<IClientFilter>()", span="176-176", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobSteps.cs"];
m35_157 [label="_filters.Add(filter.Object)", span="177-177", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobSteps.cs"];
m35_158 [label="filter.Setup(x => x.OnCreating(It.IsNotNull<CreatingContext>())).InSequence()", span="179-179", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobSteps.cs"];
m35_160 [label="filter.Setup(x => x.OnCreated(It.IsNotNull<CreatedContext>())).InSequence()", span="184-184", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobSteps.cs"];
m35_159 [label="_innerProcess.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .InSequence()", span="181-182", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobSteps.cs"];
m35_161 [label="var process = CreateProcess()", span="186-186", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobSteps.cs"];
m35_162 [label="process.Run(_context.Object)", span="189-189", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobSteps.cs"];
m35_163 [label="Exit Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", span="173-173", cluster="Hangfire.Core.Tests.Client.JobCreationProcessFacts.Run_CallsClientFilters_BeforeAndAfterTheCreationOfAJob()", file="JobSteps.cs"];
m35_164 [label="Entry Mock<IClientFilter>.cstr", span="", cluster="Mock<IClientFilter>.cstr", file="JobSteps.cs"];
m35_366 [label="Hangfire.Core.Tests.Client.JobCreationProcessFacts", span="", file="JobSteps.cs"];
m35_367 [label=process, span="", file="JobSteps.cs"];
m35_368 [label=process, span="", file="JobSteps.cs"];
m35_369 [label=process, span="", file="JobSteps.cs"];
m35_370 [label=process, span="", file="JobSteps.cs"];
m35_371 [label=process, span="", file="JobSteps.cs"];
m35_372 [label=process, span="", file="JobSteps.cs"];
m35_373 [label=exception, span="", file="JobSteps.cs"];
m35_374 [label=process, span="", file="JobSteps.cs"];
m35_375 [label=exception, span="", file="JobSteps.cs"];
m35_376 [label=exception, span="", file="JobSteps.cs"];
m35_377 [label=process, span="", file="JobSteps.cs"];
m36_9 [label="Exit HangFire.Perform.Async(System.Type)", span="24-24", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m36_16 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="42-42", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs"];
m36_17 [label="return In(interval, typeof(TJob), args);", span="45-45", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs"];
m36_18 [label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="42-42", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs"];
m36_3 [label="JsConfig.With(emitCamelCaseNames: true)", span="30-30", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Perform.cs"];
m36_4 [label="var serialized = JsonSerializer.SerializeToString(response)", span="32-32", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Perform.cs", color=green, community=0];
m36_5 [label="Response.ContentType = ''application/json''", span="33-33", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Perform.cs", color=green, community=0];
m36_25 [label="Entry HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="46-46", cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="Perform.cs"];
m36_6 [label="Response.ContentEncoding = Encoding.UTF8", span="34-34", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Perform.cs", color=green, community=0];
m36_10 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", span="18-18", cluster="HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", color=red, community=0, file="Perform.cs"];
m36_11 [label="Entry Unk.With", span="", cluster="Unk.With", file="Perform.cs"];
m36_12 [label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="12-12", cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="Perform.cs"];
m36_20 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="48-48", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs"];
m36_21 [label="return In(interval, jobType, null);", span="50-50", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs"];
m36_22 [label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="48-48", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs"];
m36_0 [label="Entry HangFire.Web.JsonStats.ProcessRequest()", span="24-24", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Perform.cs"];
m36_1 [label="var monitoring = JobStorage.Current.CreateMonitoring()", span="26-26", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Perform.cs"];
m36_2 [label="var response = monitoring.GetStatistics()", span="28-28", cluster="HangFire.Web.JsonStats.ProcessRequest()", file="Perform.cs"];
m36_7 [label="Entry HangFire.Perform.Async(System.Type)", span="24-24", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m36_8 [label="return Async(jobType, null);", span="26-26", cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs"];
m36_19 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="53-53", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs"];
m36_23 [label="return Client.In(interval, jobType, args);", span="55-55", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="Perform.cs"];
m36_24 [label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="53-53", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs"];
m36_13 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="35-35", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs"];
m36_14 [label="HangFire.Web.JsonStats", span="", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs"];
m36_15 [label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="35-35", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs"];
m40_0 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="PreserveCultureFilter.cs"];
m40_1 [label="exception == null", span="77-77", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="PreserveCultureFilter.cs"];
m40_4 [label="Exception = exception", span="80-80", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="PreserveCultureFilter.cs"];
m40_2 [label="throw new ArgumentNullException(''exception'');", span="77-77", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="PreserveCultureFilter.cs"];
m40_3 [label="FailedAt = DateTime.UtcNow", span="79-79", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="PreserveCultureFilter.cs"];
m40_5 [label="Exit Hangfire.States.FailedState.FailedState(System.Exception)", span="75-75", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="PreserveCultureFilter.cs"];
m40_10 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PreserveCultureFilter.cs"];
m40_11 [label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68", cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="PreserveCultureFilter.cs"];
m40_13 [label="Entry System.Exception.ToString()", span="0-0", cluster="System.Exception.ToString()", file="PreserveCultureFilter.cs"];
m40_7 [label="Entry Hangfire.States.FailedState.SerializeData()", span="159-159", cluster="Hangfire.States.FailedState.SerializeData()", file="PreserveCultureFilter.cs"];
m40_8 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="161-167", cluster="Hangfire.States.FailedState.SerializeData()", file="PreserveCultureFilter.cs"];
m40_9 [label="Exit Hangfire.States.FailedState.SerializeData()", span="159-159", cluster="Hangfire.States.FailedState.SerializeData()", file="PreserveCultureFilter.cs"];
m40_12 [label="Entry System.Exception.GetType()", span="0-0", cluster="System.Exception.GetType()", file="PreserveCultureFilter.cs"];
m40_14 [label="Hangfire.States.FailedState", span="", file="PreserveCultureFilter.cs"];
m41_0 [label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26", cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="Program.cs"];
m41_1 [label="_command = command", span="28-28", cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="Program.cs"];
m41_2 [label="Exit HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26", cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="Program.cs"];
m41_3 [label="Entry HangFire.Web.CommandHandler.ProcessRequest()", span="31-31", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="Program.cs"];
m41_4 [label="Request.HttpMethod != WebRequestMethods.Http.Post", span="33-33", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="Program.cs"];
m41_5 [label="throw new HttpException((int)HttpStatusCode.MethodNotAllowed, ''Wrong HTTP method.'');", span="35-35", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="Program.cs"];
m41_6 [label="_command()", span="38-38", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="Program.cs"];
m41_7 [label="Response.StatusCode = (int)HttpStatusCode.NoContent", span="40-40", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="Program.cs"];
m41_8 [label="Response.StatusCode = 422", span="44-44", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="Program.cs"];
m41_9 [label="Exit HangFire.Web.CommandHandler.ProcessRequest()", span="31-31", cluster="HangFire.Web.CommandHandler.ProcessRequest()", file="Program.cs"];
m41_11 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="Program.cs"];
m41_10 [label="Entry HttpException.cstr", span="", cluster="HttpException.cstr", file="Program.cs"];
m41_12 [label="HangFire.Web.CommandHandler", span="", file="Program.cs"];
m42_11 [label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="19-19", cluster="lambda expression", file="QueueSteps.cs"];
m42_60 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="67-67", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="QueueSteps.cs"];
m42_62 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.PersistJob(jobId));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.ExpireAt);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.NotNull(anotherJob.ExpireAt);\r\n            })", span="74-86", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", color=green, community=0, file="QueueSteps.cs"];
m42_61 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues ('', '', getutcdate(), getutcdate())\r\nselect scope_identity() as Id''", span="69-72", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="QueueSteps.cs"];
m42_63 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", span="67-67", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.PersistJob_ClearsTheJobExpirationData()", file="QueueSteps.cs"];
m42_153 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="161-161", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="QueueSteps.cs"];
m42_154 [label="UseConnection(sql =>\r\n            {\r\n                var correctJobQueue = new Mock<IPersistentJobQueue>();\r\n                var correctProvider = new Mock<IPersistentJobQueueProvider>();\r\n                correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object);\r\n\r\n                _queueProviders.Add(correctProvider.Object, new [] { ''default'' });\r\n\r\n                Commit(sql, x => x.AddToQueue(''default'', ''1''));\r\n\r\n                correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''));\r\n            })", span="163-175", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="QueueSteps.cs"];
m42_155 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", span="161-161", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToQueue_CallsEnqueue_OnTargetPersistentQueue()", file="QueueSteps.cs"];
m42_212 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="221-221", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="QueueSteps.cs"];
m42_213 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(2, recordCount);\r\n            })", span="223-234", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="QueueSteps.cs"];
m42_214 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", span="221-221", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExistingKey_AddsAnotherRecord()", file="QueueSteps.cs"];
m42_419 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="488-488", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="QueueSteps.cs"];
m42_420 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="490-501", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="QueueSteps.cs"];
m42_421 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", span="488-488", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameValue_ButDifferentKey()", file="QueueSteps.cs"];
m42_449 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="195-195", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="QueueSteps.cs"];
m42_527 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="621-621", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="QueueSteps.cs"];
m42_528 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="623-638", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="QueueSteps.cs"];
m42_529 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", span="621-621", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_MergesAllRecords()", file="QueueSteps.cs"];
m42_267 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="290-290", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="QueueSteps.cs"];
m42_268 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(0.0, record.Score, 2);\r\n            })", span="292-301", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="QueueSteps.cs"];
m42_269 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", span="290-290", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_IfThereIsNo_SuchKeyAndValue()", file="QueueSteps.cs"];
m42_368 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="422-422", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="QueueSteps.cs"];
m42_369 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.InsertToList(''my-key'', ''my-value''));\r\n\r\n                var record = sql.Query(''select * from HangFire.List'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n            })", span="424-432", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="QueueSteps.cs"];
m42_370 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", span="422-422", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsARecord_WithGivenValues()", file="QueueSteps.cs"];
m42_331 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="371-371", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="QueueSteps.cs"];
m42_332 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="373-384", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="QueueSteps.cs"];
m42_333 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", span="371-371", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_RemovesARecord_WithGivenKeyAndValue()", file="QueueSteps.cs"];
m42_152 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="QueueSteps.cs"];
m42_343 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="174-174", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="QueueSteps.cs"];
m42_305 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="339-339", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="QueueSteps.cs"];
m42_306 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2));\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(''my-value'', record.Value);\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="341-350", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="QueueSteps.cs"];
m42_307 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", span="339-339", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_AddsARecordWithScore_WhenBothKeyAndValueAreNotExist()", file="QueueSteps.cs"];
m42_431 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="505-505", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="QueueSteps.cs"];
m42_432 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                });\r\n\r\n                var records = sql.Query(''select * from HangFire.List'').ToArray();\r\n\r\n                Assert.Equal(2, records.Length);\r\n                Assert.Equal(''1'', records[0].Value);\r\n                Assert.Equal(''2'', records[1].Value);\r\n            })", span="507-523", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="QueueSteps.cs"];
m42_433 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", span="505-505", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_TrimsAList_ToASpecifiedRange()", file="QueueSteps.cs"];
m42_406 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="188-188", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="QueueSteps.cs"];
m42_49 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="649-649", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="QueueSteps.cs"];
m42_551 [label="var transaction = new SqlServerWriteOnlyTransaction(connection, _queueProviders)", span="653-653", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="QueueSteps.cs"];
m42_552 [label="action(transaction)", span="655-655", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="QueueSteps.cs"];
m42_553 [label="transaction.Commit()", span="656-656", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="QueueSteps.cs"];
m42_554 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", span="649-649", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Commit(SqlConnection, System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>)", file="QueueSteps.cs"];
m42_16 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(null, _queueProviders))", span="28-29", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="QueueSteps.cs"];
m42_17 [label="Assert.Equal(''connection'', exception.ParamName)", span="31-31", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="QueueSteps.cs"];
m42_18 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", span="26-26", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfConnectionIsNull()", file="QueueSteps.cs"];
m42_19 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="QueueSteps.cs"];
m42_407 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="471-471", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="QueueSteps.cs"];
m42_408 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="473-484", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="QueueSteps.cs"];
m42_409 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", span="471-471", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_DoesNotRemoveRecords_WithSameKey_ButDifferentValue()", file="QueueSteps.cs"];
m42_6 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="QueueSteps.cs"];
m42_31 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="QueueSteps.cs"];
m42_255 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="273-273", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="QueueSteps.cs"];
m42_256 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="275-286", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="QueueSteps.cs"];
m42_257 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", span="273-273", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExistingKey_AddsAnotherRecord()", file="QueueSteps.cs"];
m42_119 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="128-128", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="QueueSteps.cs"];
m42_121 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.AddJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Null(job.StateName);\r\n                Assert.Null(job.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="135-157", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="QueueSteps.cs"];
m42_120 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="130-133", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="QueueSteps.cs"];
m42_122 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", span="128-128", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddJobState_JustAddsANewRecordInATable()", file="QueueSteps.cs"];
m42_15 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="QueueSteps.cs"];
m42_293 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="322-322", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="QueueSteps.cs"];
m42_294 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n                \r\n                Assert.Equal(1, recordCount);\r\n            })", span="324-335", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="QueueSteps.cs"];
m42_295 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", span="322-322", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_DoesNotAddARecord_WhenBothKeyAndValueAreExist()", file="QueueSteps.cs"];
m42_50 [label="Entry Unk.GetTestJob", span="", cluster="Unk.GetTestJob", file="QueueSteps.cs"];
m42_7 [label="Entry HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", span="23-23", cluster="HangFire.Tests.QueueSteps.GivenAJobInTheQueue(string)", file="QueueSteps.cs"];
m42_280 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="QueueSteps.cs"];
m42_32 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="44-44", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="QueueSteps.cs"];
m42_34 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1));\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.ExpireAt);\r\n            })", span="51-63", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="QueueSteps.cs"];
m42_33 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="46-49", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", color=green, community=0, file="QueueSteps.cs"];
m42_35 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", span="44-44", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.ExpireJob_SetsJobExpirationData()", file="QueueSteps.cs"];
m42_500 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="597-597", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="QueueSteps.cs"];
m42_501 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="599-605", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="QueueSteps.cs"];
m42_502 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="597-597", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="QueueSteps.cs"];
m42_344 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="388-388", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="QueueSteps.cs"];
m42_345 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="390-401", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="QueueSteps.cs"];
m42_346 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", span="388-388", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameKey_AndDifferentValue()", file="QueueSteps.cs"];
m42_224 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="238-238", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="QueueSteps.cs"];
m42_225 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="240-249", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="QueueSteps.cs"];
m42_226 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", span="238-238", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_AddsRecordToCounterTable_WithNegativeValue()", file="QueueSteps.cs"];
m42_356 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="405-405", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="QueueSteps.cs"];
m42_357 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="407-418", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="QueueSteps.cs"];
m42_358 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", span="405-405", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromSet_DoesNotRemoveRecord_WithSameValue_AndDifferentKey()", file="QueueSteps.cs"];
m42_319 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="354-354", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="QueueSteps.cs"];
m42_320 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                });\r\n\r\n                var record = sql.Query(''select * from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(3.2, record.Score, 3);\r\n            })", span="356-367", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="QueueSteps.cs"];
m42_321 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", span="354-354", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_WithScore_UpdatesAScore_WhenBothKeyAndValueAreExist()", file="QueueSteps.cs"];
m42_441 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="QueueSteps.cs"];
m42_52 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="QueueSteps.cs"];
m42_25 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerWriteOnlyTransaction(ConnectionUtils.CreateConnection(), null))", span="37-38", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="QueueSteps.cs", color=green, community=0];
m42_26 [label="Assert.Equal(''queueProviders'', exception.ParamName)", span="40-40", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="QueueSteps.cs", color=green, community=0];
m42_27 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="35-35", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="QueueSteps.cs"];
m42_28 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="QueueSteps.cs"];
m42_5 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="QueueSteps.cs"];
m42_8 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="QueueSteps.cs"];
m42_9 [label="Entry PersistentJobQueueProviderCollection.cstr", span="", cluster="PersistentJobQueueProviderCollection.cstr", file="QueueSteps.cs"];
m42_10 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="QueueSteps.cs"];
m42_555 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="50-50", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="QueueSteps.cs"];
m42_143 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="QueueSteps.cs"];
m42_29 [label="Entry Unk.DoesNotContain", span="", cluster="Unk.DoesNotContain", color=green, community=0, file="QueueSteps.cs"];
m42_30 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="QueueSteps.cs"];
m42_38 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="53-53", cluster="lambda expression", file="QueueSteps.cs"];
m42_39 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="54-54", cluster="lambda expression", file="QueueSteps.cs"];
m42_64 [label="Entry lambda expression", span="74-86", cluster="lambda expression", file="QueueSteps.cs"];
m42_68 [label="var job = GetTestJob(sql, jobId)", span="81-81", cluster="lambda expression", color=green, community=0, file="QueueSteps.cs"];
m42_65 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="76-76", cluster="lambda expression", file="QueueSteps.cs"];
m42_67 [label="Commit(sql, x => x.PersistJob(jobId))", span="79-79", cluster="lambda expression", file="QueueSteps.cs"];
m42_69 [label="Assert.Null(job.ExpireAt)", span="82-82", cluster="lambda expression", color=green, community=0, file="QueueSteps.cs"];
m42_70 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="84-84", cluster="lambda expression", color=green, community=0, file="QueueSteps.cs"];
m42_66 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="77-77", cluster="lambda expression", file="QueueSteps.cs"];
m42_71 [label="Assert.NotNull(anotherJob.ExpireAt)", span="85-85", cluster="lambda expression", color=green, community=0, file="QueueSteps.cs"];
m42_72 [label="Exit lambda expression", span="74-86", cluster="lambda expression", file="QueueSteps.cs"];
m42_83 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="99-99", cluster="lambda expression", file="QueueSteps.cs"];
m42_84 [label="var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString()", span="100-100", cluster="lambda expression", file="QueueSteps.cs"];
m42_167 [label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="167-167", cluster="lambda expression", file="QueueSteps.cs"];
m42_217 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="231-231", cluster="lambda expression", file="QueueSteps.cs"];
m42_260 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.Counter'').Single()", span="283-283", cluster="lambda expression", file="QueueSteps.cs"];
m42_286 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="315-315", cluster="lambda expression", file="QueueSteps.cs"];
m42_298 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="332-332", cluster="lambda expression", file="QueueSteps.cs"];
m42_336 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="381-381", cluster="lambda expression", file="QueueSteps.cs"];
m42_349 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="398-398", cluster="lambda expression", file="QueueSteps.cs"];
m42_361 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single()", span="415-415", cluster="lambda expression", file="QueueSteps.cs"];
m42_386 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="446-446", cluster="lambda expression", file="QueueSteps.cs"];
m42_398 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="464-464", cluster="lambda expression", file="QueueSteps.cs"];
m42_412 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="481-481", cluster="lambda expression", file="QueueSteps.cs"];
m42_424 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="498-498", cluster="lambda expression", file="QueueSteps.cs"];
m42_455 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="539-539", cluster="lambda expression", file="QueueSteps.cs"];
m42_469 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="556-556", cluster="lambda expression", file="QueueSteps.cs"];
m42_481 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="573-573", cluster="lambda expression", file="QueueSteps.cs"];
m42_493 [label="var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single()", span="590-590", cluster="lambda expression", file="QueueSteps.cs"];
m42_504 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>())))", span="601-602", cluster="lambda expression", file="QueueSteps.cs"];
m42_518 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)))", span="613-614", cluster="lambda expression", file="QueueSteps.cs"];
m42_97 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="119-119", cluster="lambda expression", file="QueueSteps.cs"];
m42_91 [label="Assert.Equal(''State'', job.StateName)", span="111-111", cluster="lambda expression", file="QueueSteps.cs"];
m42_98 [label="Assert.Equal(''State'', jobState.Name)", span="120-120", cluster="lambda expression", file="QueueSteps.cs"];
m42_99 [label="Assert.Equal(''Reason'', jobState.Reason)", span="121-121", cluster="lambda expression", file="QueueSteps.cs"];
m42_101 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="123-123", cluster="lambda expression", file="QueueSteps.cs"];
m42_134 [label="Assert.Equal((string)jobId, jobState.JobId.ToString())", span="152-152", cluster="lambda expression", file="QueueSteps.cs"];
m42_135 [label="Assert.Equal(''State'', jobState.Name)", span="153-153", cluster="lambda expression", file="QueueSteps.cs"];
m42_136 [label="Assert.Equal(''Reason'', jobState.Reason)", span="154-154", cluster="lambda expression", file="QueueSteps.cs"];
m42_138 [label="Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data)", span="156-156", cluster="lambda expression", file="QueueSteps.cs"];
m42_186 [label="Assert.Equal(''my-key'', record.Key)", span="194-194", cluster="lambda expression", file="QueueSteps.cs"];
m42_187 [label="Assert.Equal(1, record.Value)", span="195-195", cluster="lambda expression", file="QueueSteps.cs"];
m42_188 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="196-196", cluster="lambda expression", file="QueueSteps.cs"];
m42_200 [label="Assert.Equal(''my-key'', record.Key)", span="209-209", cluster="lambda expression", file="QueueSteps.cs"];
m42_201 [label="Assert.Equal(1, record.Value)", span="210-210", cluster="lambda expression", file="QueueSteps.cs"];
m42_218 [label="Assert.Equal(2, recordCount)", span="233-233", cluster="lambda expression", file="QueueSteps.cs"];
m42_230 [label="Assert.Equal(''my-key'', record.Key)", span="246-246", cluster="lambda expression", file="QueueSteps.cs"];
m42_231 [label="Assert.Equal(-1, record.Value)", span="247-247", cluster="lambda expression", file="QueueSteps.cs"];
m42_232 [label="Assert.Equal((DateTime?)null, record.ExpireAt)", span="248-248", cluster="lambda expression", file="QueueSteps.cs"];
m42_244 [label="Assert.Equal(''my-key'', record.Key)", span="261-261", cluster="lambda expression", file="QueueSteps.cs"];
m42_245 [label="Assert.Equal(-1, record.Value)", span="262-262", cluster="lambda expression", file="QueueSteps.cs"];
m42_261 [label="Assert.Equal(2, recordCount)", span="285-285", cluster="lambda expression", file="QueueSteps.cs"];
m42_273 [label="Assert.Equal(''my-key'', record.Key)", span="298-298", cluster="lambda expression", file="QueueSteps.cs"];
m42_274 [label="Assert.Equal(''my-value'', record.Value)", span="299-299", cluster="lambda expression", file="QueueSteps.cs"];
m42_275 [label="Assert.Equal(0.0, record.Score, 2)", span="300-300", cluster="lambda expression", file="QueueSteps.cs"];
m42_287 [label="Assert.Equal(2, recordCount)", span="317-317", cluster="lambda expression", file="QueueSteps.cs"];
m42_299 [label="Assert.Equal(1, recordCount)", span="334-334", cluster="lambda expression", file="QueueSteps.cs"];
m42_311 [label="Assert.Equal(''my-key'', record.Key)", span="347-347", cluster="lambda expression", file="QueueSteps.cs"];
m42_312 [label="Assert.Equal(''my-value'', record.Value)", span="348-348", cluster="lambda expression", file="QueueSteps.cs"];
m42_313 [label="Assert.Equal(3.2, record.Score, 3)", span="349-349", cluster="lambda expression", file="QueueSteps.cs"];
m42_325 [label="Assert.Equal(3.2, record.Score, 3)", span="366-366", cluster="lambda expression", file="QueueSteps.cs"];
m42_337 [label="Assert.Equal(0, recordCount)", span="383-383", cluster="lambda expression", file="QueueSteps.cs"];
m42_350 [label="Assert.Equal(1, recordCount)", span="400-400", cluster="lambda expression", file="QueueSteps.cs"];
m42_362 [label="Assert.Equal(1, recordCount)", span="417-417", cluster="lambda expression", file="QueueSteps.cs"];
m42_374 [label="Assert.Equal(''my-key'', record.Key)", span="430-430", cluster="lambda expression", file="QueueSteps.cs"];
m42_375 [label="Assert.Equal(''my-value'', record.Value)", span="431-431", cluster="lambda expression", file="QueueSteps.cs"];
m42_387 [label="Assert.Equal(2, recordCount)", span="448-448", cluster="lambda expression", file="QueueSteps.cs"];
m42_399 [label="Assert.Equal(0, recordCount)", span="466-466", cluster="lambda expression", file="QueueSteps.cs"];
m42_413 [label="Assert.Equal(1, recordCount)", span="483-483", cluster="lambda expression", file="QueueSteps.cs"];
m42_425 [label="Assert.Equal(1, recordCount)", span="500-500", cluster="lambda expression", file="QueueSteps.cs"];
m42_437 [label="Assert.Equal(2, records.Length)", span="520-520", cluster="lambda expression", file="QueueSteps.cs"];
m42_438 [label="Assert.Equal(''1'', records[0].Value)", span="521-521", cluster="lambda expression", file="QueueSteps.cs"];
m42_439 [label="Assert.Equal(''2'', records[1].Value)", span="522-522", cluster="lambda expression", file="QueueSteps.cs"];
m42_456 [label="Assert.Equal(2, recordCount)", span="541-541", cluster="lambda expression", file="QueueSteps.cs"];
m42_470 [label="Assert.Equal(0, recordCount)", span="558-558", cluster="lambda expression", file="QueueSteps.cs"];
m42_482 [label="Assert.Equal(0, recordCount)", span="575-575", cluster="lambda expression", file="QueueSteps.cs"];
m42_494 [label="Assert.Equal(1, recordCount)", span="592-592", cluster="lambda expression", file="QueueSteps.cs"];
m42_505 [label="Assert.Equal(''key'', exception.ParamName)", span="604-604", cluster="lambda expression", file="QueueSteps.cs"];
m42_519 [label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="616-616", cluster="lambda expression", file="QueueSteps.cs"];
m42_533 [label="Assert.Equal(''Value1'', result[''Key1''])", span="636-636", cluster="lambda expression", file="QueueSteps.cs"];
m42_534 [label="Assert.Equal(''Value2'', result[''Key2''])", span="637-637", cluster="lambda expression", file="QueueSteps.cs"];
m42_37 [label="Entry lambda expression", span="51-63", cluster="lambda expression", file="QueueSteps.cs"];
m42_21 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="QueueSteps.cs"];
m42_40 [label="Commit(sql, x => x.ExpireJob(jobId, TimeSpan.FromDays(1)))", span="56-56", cluster="lambda expression", file="QueueSteps.cs"];
m42_56 [label="x.ExpireJob(jobId, TimeSpan.FromDays(1))", span="56-56", cluster="lambda expression", file="QueueSteps.cs"];
m42_41 [label="var job = GetTestJob(sql, jobId)", span="58-58", cluster="lambda expression", file="QueueSteps.cs"];
m42_43 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="61-61", cluster="lambda expression", file="QueueSteps.cs"];
m42_89 [label="Commit(sql, x => x.SetJobState(jobId, state.Object))", span="108-108", cluster="lambda expression", file="QueueSteps.cs"];
m42_90 [label="var job = GetTestJob(sql, jobId)", span="110-110", cluster="lambda expression", file="QueueSteps.cs"];
m42_93 [label="var anotherJob = GetTestJob(sql, anotherJobId)", span="114-114", cluster="lambda expression", file="QueueSteps.cs"];
m42_129 [label="Commit(sql, x => x.AddJobState(jobId, state.Object))", span="145-145", cluster="lambda expression", file="QueueSteps.cs"];
m42_130 [label="var job = GetTestJob(sql, jobId)", span="147-147", cluster="lambda expression", file="QueueSteps.cs"];
m42_160 [label="_queueProviders.Add(correctProvider.Object, new [] { ''default'' })", span="170-170", cluster="lambda expression", file="QueueSteps.cs"];
m42_161 [label="Commit(sql, x => x.AddToQueue(''default'', ''1''))", span="172-172", cluster="lambda expression", file="QueueSteps.cs"];
m42_184 [label="Commit(sql, x => x.IncrementCounter(''my-key''))", span="190-190", cluster="lambda expression", file="QueueSteps.cs"];
m42_198 [label="Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="205-205", cluster="lambda expression", file="QueueSteps.cs"];
m42_216 [label="Commit(sql, x =>\r\n                {\r\n                    x.IncrementCounter(''my-key'');\r\n                    x.IncrementCounter(''my-key'');\r\n                })", span="225-229", cluster="lambda expression", file="QueueSteps.cs"];
m42_228 [label="Commit(sql, x => x.DecrementCounter(''my-key''))", span="242-242", cluster="lambda expression", file="QueueSteps.cs"];
m42_242 [label="Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)))", span="257-257", cluster="lambda expression", file="QueueSteps.cs"];
m42_259 [label="Commit(sql, x =>\r\n                {\r\n                    x.DecrementCounter(''my-key'');\r\n                    x.DecrementCounter(''my-key'');\r\n                })", span="277-281", cluster="lambda expression", file="QueueSteps.cs"];
m42_271 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value''))", span="294-294", cluster="lambda expression", file="QueueSteps.cs"];
m42_285 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                })", span="309-313", cluster="lambda expression", file="QueueSteps.cs"];
m42_297 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                })", span="326-330", cluster="lambda expression", file="QueueSteps.cs"];
m42_309 [label="Commit(sql, x => x.AddToSet(''my-key'', ''my-value'', 3.2))", span="343-343", cluster="lambda expression", file="QueueSteps.cs"];
m42_323 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''my-value'', 3.2);\r\n                })", span="358-362", cluster="lambda expression", file="QueueSteps.cs"];
m42_335 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''my-value'');\r\n                })", span="375-379", cluster="lambda expression", file="QueueSteps.cs"];
m42_348 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''my-key'', ''different-value'');\r\n                })", span="392-396", cluster="lambda expression", file="QueueSteps.cs"];
m42_360 [label="Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.RemoveFromSet(''different-key'', ''my-value'');\r\n                })", span="409-413", cluster="lambda expression", file="QueueSteps.cs"];
m42_372 [label="Commit(sql, x => x.InsertToList(''my-key'', ''my-value''))", span="426-426", cluster="lambda expression", file="QueueSteps.cs"];
m42_385 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                })", span="440-444", cluster="lambda expression", file="QueueSteps.cs"];
m42_397 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                })", span="457-462", cluster="lambda expression", file="QueueSteps.cs"];
m42_411 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''different-value'');\r\n                })", span="475-479", cluster="lambda expression", file="QueueSteps.cs"];
m42_423 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''different-key'', ''my-value'');\r\n                })", span="492-496", cluster="lambda expression", file="QueueSteps.cs"];
m42_435 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.InsertToList(''my-key'', ''3'');\r\n                    x.TrimList(''my-key'', 1, 2);\r\n                })", span="509-516", cluster="lambda expression", file="QueueSteps.cs"];
m42_454 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="531-537", cluster="lambda expression", file="QueueSteps.cs"];
m42_468 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                })", span="550-554", cluster="lambda expression", file="QueueSteps.cs"];
m42_480 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                })", span="567-571", cluster="lambda expression", file="QueueSteps.cs"];
m42_492 [label="Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                })", span="584-588", cluster="lambda expression", file="QueueSteps.cs"];
m42_508 [label="Commit(sql, x => x.SetRangeInHash(null, new Dictionary<string, string>()))", span="602-602", cluster="lambda expression", file="QueueSteps.cs"];
m42_522 [label="Commit(sql, x => x.SetRangeInHash(''some-hash'', null))", span="614-614", cluster="lambda expression", file="QueueSteps.cs"];
m42_531 [label="Commit(sql, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="625-629", cluster="lambda expression", file="QueueSteps.cs"];
m42_75 [label="x.PersistJob(jobId)", span="79-79", cluster="lambda expression", file="QueueSteps.cs"];
m42_74 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="QueueSteps.cs"];
m42_44 [label="Assert.Null(anotherJob.ExpireAt)", span="62-62", cluster="lambda expression", file="QueueSteps.cs"];
m42_94 [label="Assert.Null(anotherJob.StateName)", span="115-115", cluster="lambda expression", file="QueueSteps.cs"];
m42_95 [label="Assert.Null(anotherJob.StateId)", span="116-116", cluster="lambda expression", file="QueueSteps.cs"];
m42_131 [label="Assert.Null(job.StateName)", span="148-148", cluster="lambda expression", file="QueueSteps.cs"];
m42_132 [label="Assert.Null(job.StateId)", span="149-149", cluster="lambda expression", file="QueueSteps.cs"];
m42_92 [label="Assert.NotNull(job.StateId)", span="112-112", cluster="lambda expression", file="QueueSteps.cs"];
m42_100 [label="Assert.NotNull(jobState.CreatedAt)", span="122-122", cluster="lambda expression", file="QueueSteps.cs"];
m42_137 [label="Assert.NotNull(jobState.CreatedAt)", span="155-155", cluster="lambda expression", file="QueueSteps.cs"];
m42_202 [label="Assert.NotNull(record.ExpireAt)", span="211-211", cluster="lambda expression", file="QueueSteps.cs"];
m42_246 [label="Assert.NotNull(record.ExpireAt)", span="263-263", cluster="lambda expression", file="QueueSteps.cs"];
m42_82 [label="Entry lambda expression", span="97-124", cluster="lambda expression", file="QueueSteps.cs"];
m42_116 [label="x.SetJobState(jobId, state.Object)", span="108-108", cluster="lambda expression", file="QueueSteps.cs"];
m42_85 [label="var state = new Mock<IState>()", span="102-102", cluster="lambda expression", file="QueueSteps.cs"];
m42_12 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="33-33", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="QueueSteps.cs"];
m42_20 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="QueueSteps.cs"];
m42_166 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="QueueSteps.cs"];
m42_168 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="QueueSteps.cs"];
m42_215 [label="Entry lambda expression", span="223-234", cluster="lambda expression", file="QueueSteps.cs"];
m42_258 [label="Entry lambda expression", span="275-286", cluster="lambda expression", file="QueueSteps.cs"];
m42_284 [label="Entry lambda expression", span="307-318", cluster="lambda expression", file="QueueSteps.cs"];
m42_296 [label="Entry lambda expression", span="324-335", cluster="lambda expression", file="QueueSteps.cs"];
m42_334 [label="Entry lambda expression", span="373-384", cluster="lambda expression", file="QueueSteps.cs"];
m42_347 [label="Entry lambda expression", span="390-401", cluster="lambda expression", file="QueueSteps.cs"];
m42_359 [label="Entry lambda expression", span="407-418", cluster="lambda expression", file="QueueSteps.cs"];
m42_384 [label="Entry lambda expression", span="438-449", cluster="lambda expression", file="QueueSteps.cs"];
m42_396 [label="Entry lambda expression", span="455-467", cluster="lambda expression", file="QueueSteps.cs"];
m42_410 [label="Entry lambda expression", span="473-484", cluster="lambda expression", file="QueueSteps.cs"];
m42_422 [label="Entry lambda expression", span="490-501", cluster="lambda expression", file="QueueSteps.cs"];
m42_453 [label="Entry lambda expression", span="529-542", cluster="lambda expression", file="QueueSteps.cs"];
m42_467 [label="Entry lambda expression", span="548-559", cluster="lambda expression", file="QueueSteps.cs"];
m42_479 [label="Entry lambda expression", span="565-576", cluster="lambda expression", file="QueueSteps.cs"];
m42_491 [label="Entry lambda expression", span="582-593", cluster="lambda expression", file="QueueSteps.cs"];
m42_503 [label="Entry lambda expression", span="599-605", cluster="lambda expression", file="QueueSteps.cs"];
m42_507 [label="Entry lambda expression", span="602-602", cluster="lambda expression", file="QueueSteps.cs"];
m42_517 [label="Entry lambda expression", span="611-617", cluster="lambda expression", file="QueueSteps.cs"];
m42_521 [label="Entry lambda expression", span="614-614", cluster="lambda expression", file="QueueSteps.cs"];
m42_96 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="118-118", cluster="lambda expression", file="QueueSteps.cs"];
m42_102 [label="Exit lambda expression", span="97-124", cluster="lambda expression", file="QueueSteps.cs"];
m42_124 [label="var jobId = sql.Query(arrangeSql).Single().Id.ToString()", span="137-137", cluster="lambda expression", file="QueueSteps.cs"];
m42_133 [label="var jobState = sql.Query(''select * from HangFire.State'').Single()", span="151-151", cluster="lambda expression", file="QueueSteps.cs"];
m42_139 [label="Exit lambda expression", span="135-157", cluster="lambda expression", file="QueueSteps.cs"];
m42_185 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="192-192", cluster="lambda expression", file="QueueSteps.cs"];
m42_189 [label="Exit lambda expression", span="188-197", cluster="lambda expression", file="QueueSteps.cs"];
m42_199 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="207-207", cluster="lambda expression", file="QueueSteps.cs"];
m42_219 [label="Exit lambda expression", span="223-234", cluster="lambda expression", file="QueueSteps.cs"];
m42_229 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="244-244", cluster="lambda expression", file="QueueSteps.cs"];
m42_233 [label="Exit lambda expression", span="240-249", cluster="lambda expression", file="QueueSteps.cs"];
m42_243 [label="var record = sql.Query(''select * from HangFire.Counter'').Single()", span="259-259", cluster="lambda expression", file="QueueSteps.cs"];
m42_262 [label="Exit lambda expression", span="275-286", cluster="lambda expression", file="QueueSteps.cs"];
m42_272 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="296-296", cluster="lambda expression", file="QueueSteps.cs"];
m42_276 [label="Exit lambda expression", span="292-301", cluster="lambda expression", file="QueueSteps.cs"];
m42_288 [label="Exit lambda expression", span="307-318", cluster="lambda expression", file="QueueSteps.cs"];
m42_300 [label="Exit lambda expression", span="324-335", cluster="lambda expression", file="QueueSteps.cs"];
m42_310 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="345-345", cluster="lambda expression", file="QueueSteps.cs"];
m42_314 [label="Exit lambda expression", span="341-350", cluster="lambda expression", file="QueueSteps.cs"];
m42_324 [label="var record = sql.Query(''select * from HangFire.[Set]'').Single()", span="364-364", cluster="lambda expression", file="QueueSteps.cs"];
m42_326 [label="Exit lambda expression", span="356-367", cluster="lambda expression", file="QueueSteps.cs"];
m42_338 [label="Exit lambda expression", span="373-384", cluster="lambda expression", file="QueueSteps.cs"];
m42_351 [label="Exit lambda expression", span="390-401", cluster="lambda expression", file="QueueSteps.cs"];
m42_363 [label="Exit lambda expression", span="407-418", cluster="lambda expression", file="QueueSteps.cs"];
m42_373 [label="var record = sql.Query(''select * from HangFire.List'').Single()", span="428-428", cluster="lambda expression", file="QueueSteps.cs"];
m42_376 [label="Exit lambda expression", span="424-432", cluster="lambda expression", file="QueueSteps.cs"];
m42_388 [label="Exit lambda expression", span="438-449", cluster="lambda expression", file="QueueSteps.cs"];
m42_400 [label="Exit lambda expression", span="455-467", cluster="lambda expression", file="QueueSteps.cs"];
m42_414 [label="Exit lambda expression", span="473-484", cluster="lambda expression", file="QueueSteps.cs"];
m42_426 [label="Exit lambda expression", span="490-501", cluster="lambda expression", file="QueueSteps.cs"];
m42_436 [label="var records = sql.Query(''select * from HangFire.List'').ToArray()", span="518-518", cluster="lambda expression", file="QueueSteps.cs"];
m42_440 [label="Exit lambda expression", span="507-523", cluster="lambda expression", file="QueueSteps.cs"];
m42_457 [label="Exit lambda expression", span="529-542", cluster="lambda expression", file="QueueSteps.cs"];
m42_471 [label="Exit lambda expression", span="548-559", cluster="lambda expression", file="QueueSteps.cs"];
m42_483 [label="Exit lambda expression", span="565-576", cluster="lambda expression", file="QueueSteps.cs"];
m42_495 [label="Exit lambda expression", span="582-593", cluster="lambda expression", file="QueueSteps.cs"];
m42_506 [label="Exit lambda expression", span="599-605", cluster="lambda expression", file="QueueSteps.cs"];
m42_520 [label="Exit lambda expression", span="611-617", cluster="lambda expression", file="QueueSteps.cs"];
m42_532 [label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="631-634", cluster="lambda expression", file="QueueSteps.cs"];
m42_535 [label="Exit lambda expression", span="623-638", cluster="lambda expression", file="QueueSteps.cs"];
m42_45 [label="Exit lambda expression", span="51-63", cluster="lambda expression", file="QueueSteps.cs"];
m42_22 [label="Entry HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", span="49-49", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="QueueSteps.cs"];
m42_55 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="QueueSteps.cs"];
m42_57 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="QueueSteps.cs"];
m42_42 [label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < job.ExpireAt && job.ExpireAt <= DateTime.UtcNow.AddDays(1))", span="59-59", cluster="lambda expression", file="QueueSteps.cs"];
m42_88 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="105-106", cluster="lambda expression", file="QueueSteps.cs"];
m42_115 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="QueueSteps.cs"];
m42_123 [label="Entry lambda expression", span="135-157", cluster="lambda expression", file="QueueSteps.cs"];
m42_125 [label="var state = new Mock<IState>()", span="139-139", cluster="lambda expression", file="QueueSteps.cs"];
m42_128 [label="state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="142-143", cluster="lambda expression", file="QueueSteps.cs"];
m42_149 [label="Entry lambda expression", span="145-145", cluster="lambda expression", file="QueueSteps.cs"];
m42_156 [label="Entry lambda expression", span="163-175", cluster="lambda expression", file="QueueSteps.cs"];
m42_158 [label="var correctProvider = new Mock<IPersistentJobQueueProvider>()", span="166-166", cluster="lambda expression", file="QueueSteps.cs"];
m42_159 [label="correctProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                    .Returns(correctJobQueue.Object)", span="167-168", cluster="lambda expression", file="QueueSteps.cs"];
m42_162 [label="correctJobQueue.Verify(x => x.Enqueue(''default'', ''1''))", span="174-174", cluster="lambda expression", file="QueueSteps.cs"];
m42_169 [label="Entry lambda expression", span="172-172", cluster="lambda expression", file="QueueSteps.cs"];
m42_183 [label="Entry lambda expression", span="188-197", cluster="lambda expression", file="QueueSteps.cs"];
m42_190 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="QueueSteps.cs"];
m42_197 [label="Entry lambda expression", span="203-217", cluster="lambda expression", file="QueueSteps.cs"];
m42_208 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="QueueSteps.cs"];
m42_220 [label="Entry lambda expression", span="225-229", cluster="lambda expression", file="QueueSteps.cs"];
m42_227 [label="Entry lambda expression", span="240-249", cluster="lambda expression", file="QueueSteps.cs"];
m42_234 [label="Entry lambda expression", span="242-242", cluster="lambda expression", file="QueueSteps.cs"];
m42_241 [label="Entry lambda expression", span="255-269", cluster="lambda expression", file="QueueSteps.cs"];
m42_251 [label="Entry lambda expression", span="257-257", cluster="lambda expression", file="QueueSteps.cs"];
m42_263 [label="Entry lambda expression", span="277-281", cluster="lambda expression", file="QueueSteps.cs"];
m42_270 [label="Entry lambda expression", span="292-301", cluster="lambda expression", file="QueueSteps.cs"];
m42_277 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="QueueSteps.cs"];
m42_289 [label="Entry lambda expression", span="309-313", cluster="lambda expression", file="QueueSteps.cs"];
m42_301 [label="Entry lambda expression", span="326-330", cluster="lambda expression", file="QueueSteps.cs"];
m42_308 [label="Entry lambda expression", span="341-350", cluster="lambda expression", file="QueueSteps.cs"];
m42_315 [label="Entry lambda expression", span="343-343", cluster="lambda expression", file="QueueSteps.cs"];
m42_322 [label="Entry lambda expression", span="356-367", cluster="lambda expression", file="QueueSteps.cs"];
m42_327 [label="Entry lambda expression", span="358-362", cluster="lambda expression", file="QueueSteps.cs"];
m42_339 [label="Entry lambda expression", span="375-379", cluster="lambda expression", file="QueueSteps.cs"];
m42_352 [label="Entry lambda expression", span="392-396", cluster="lambda expression", file="QueueSteps.cs"];
m42_364 [label="Entry lambda expression", span="409-413", cluster="lambda expression", file="QueueSteps.cs"];
m42_371 [label="Entry lambda expression", span="424-432", cluster="lambda expression", file="QueueSteps.cs"];
m42_377 [label="Entry lambda expression", span="426-426", cluster="lambda expression", file="QueueSteps.cs"];
m42_389 [label="Entry lambda expression", span="440-444", cluster="lambda expression", file="QueueSteps.cs"];
m42_401 [label="Entry lambda expression", span="457-462", cluster="lambda expression", file="QueueSteps.cs"];
m42_415 [label="Entry lambda expression", span="475-479", cluster="lambda expression", file="QueueSteps.cs"];
m42_427 [label="Entry lambda expression", span="492-496", cluster="lambda expression", file="QueueSteps.cs"];
m42_434 [label="Entry lambda expression", span="507-523", cluster="lambda expression", file="QueueSteps.cs"];
m42_442 [label="Entry lambda expression", span="509-516", cluster="lambda expression", file="QueueSteps.cs"];
m42_458 [label="Entry lambda expression", span="531-537", cluster="lambda expression", file="QueueSteps.cs"];
m42_472 [label="Entry lambda expression", span="550-554", cluster="lambda expression", file="QueueSteps.cs"];
m42_484 [label="Entry lambda expression", span="567-571", cluster="lambda expression", file="QueueSteps.cs"];
m42_496 [label="Entry lambda expression", span="584-588", cluster="lambda expression", file="QueueSteps.cs"];
m42_509 [label="Exit lambda expression", span="602-602", cluster="lambda expression", file="QueueSteps.cs"];
m42_510 [label="Entry lambda expression", span="602-602", cluster="lambda expression", file="QueueSteps.cs"];
m42_523 [label="Exit lambda expression", span="614-614", cluster="lambda expression", file="QueueSteps.cs"];
m42_524 [label="Entry lambda expression", span="614-614", cluster="lambda expression", file="QueueSteps.cs"];
m42_530 [label="Entry lambda expression", span="623-638", cluster="lambda expression", file="QueueSteps.cs"];
m42_537 [label="Entry lambda expression", span="625-629", cluster="lambda expression", file="QueueSteps.cs"];
m42_76 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="QueueSteps.cs"];
m42_203 [label="var expireAt = (DateTime) record.ExpireAt", span="213-213", cluster="lambda expression", file="QueueSteps.cs"];
m42_247 [label="var expireAt = (DateTime)record.ExpireAt", span="265-265", cluster="lambda expression", file="QueueSteps.cs"];
m42_117 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="QueueSteps.cs"];
m42_86 [label="state.Setup(x => x.Name).Returns(''State'')", span="103-103", cluster="lambda expression", file="QueueSteps.cs"];
m42_87 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="104-104", cluster="lambda expression", file="QueueSteps.cs"];
m42_150 [label="x.AddJobState(jobId, state.Object)", span="145-145", cluster="lambda expression", file="QueueSteps.cs"];
m42_540 [label="Entry lambda expression", span="634-634", cluster="lambda expression", file="QueueSteps.cs"];
m42_543 [label="Entry lambda expression", span="634-634", cluster="lambda expression", file="QueueSteps.cs"];
m42_209 [label="x.IncrementCounter(''my-key'', TimeSpan.FromDays(1))", span="205-205", cluster="lambda expression", file="QueueSteps.cs"];
m42_252 [label="x.DecrementCounter(''my-key'', TimeSpan.FromDays(1))", span="257-257", cluster="lambda expression", file="QueueSteps.cs"];
m42_111 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="QueueSteps.cs"];
m42_126 [label="state.Setup(x => x.Name).Returns(''State'')", span="140-140", cluster="lambda expression", file="QueueSteps.cs"];
m42_127 [label="state.Setup(x => x.Reason).Returns(''Reason'')", span="141-141", cluster="lambda expression", file="QueueSteps.cs"];
m42_146 [label="Entry lambda expression", span="142-142", cluster="lambda expression", file="QueueSteps.cs"];
m42_151 [label="Exit lambda expression", span="145-145", cluster="lambda expression", file="QueueSteps.cs"];
m42_163 [label="Exit lambda expression", span="163-175", cluster="lambda expression", file="QueueSteps.cs"];
m42_157 [label="var correctJobQueue = new Mock<IPersistentJobQueue>()", span="165-165", cluster="lambda expression", file="QueueSteps.cs"];
m42_173 [label="Entry lambda expression", span="174-174", cluster="lambda expression", file="QueueSteps.cs"];
m42_171 [label="Exit lambda expression", span="172-172", cluster="lambda expression", file="QueueSteps.cs"];
m42_170 [label="x.AddToQueue(''default'', ''1'')", span="172-172", cluster="lambda expression", file="QueueSteps.cs"];
m42_192 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="QueueSteps.cs"];
m42_191 [label="x.IncrementCounter(''my-key'')", span="190-190", cluster="lambda expression", file="QueueSteps.cs"];
m42_206 [label="Exit lambda expression", span="203-217", cluster="lambda expression", file="QueueSteps.cs"];
m42_210 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="QueueSteps.cs"];
m42_223 [label="Exit lambda expression", span="225-229", cluster="lambda expression", file="QueueSteps.cs"];
m42_221 [label="x.IncrementCounter(''my-key'')", span="227-227", cluster="lambda expression", file="QueueSteps.cs"];
m42_222 [label="x.IncrementCounter(''my-key'')", span="228-228", cluster="lambda expression", file="QueueSteps.cs"];
m42_236 [label="Exit lambda expression", span="242-242", cluster="lambda expression", file="QueueSteps.cs"];
m42_235 [label="x.DecrementCounter(''my-key'')", span="242-242", cluster="lambda expression", file="QueueSteps.cs"];
m42_250 [label="Exit lambda expression", span="255-269", cluster="lambda expression", file="QueueSteps.cs"];
m42_253 [label="Exit lambda expression", span="257-257", cluster="lambda expression", file="QueueSteps.cs"];
m42_266 [label="Exit lambda expression", span="277-281", cluster="lambda expression", file="QueueSteps.cs"];
m42_264 [label="x.DecrementCounter(''my-key'')", span="279-279", cluster="lambda expression", file="QueueSteps.cs"];
m42_265 [label="x.DecrementCounter(''my-key'')", span="280-280", cluster="lambda expression", file="QueueSteps.cs"];
m42_279 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="QueueSteps.cs"];
m42_278 [label="x.AddToSet(''my-key'', ''my-value'')", span="294-294", cluster="lambda expression", file="QueueSteps.cs"];
m42_292 [label="Exit lambda expression", span="309-313", cluster="lambda expression", file="QueueSteps.cs"];
m42_290 [label="x.AddToSet(''my-key'', ''my-value'')", span="311-311", cluster="lambda expression", file="QueueSteps.cs"];
m42_291 [label="x.AddToSet(''my-key'', ''another-value'')", span="312-312", cluster="lambda expression", file="QueueSteps.cs"];
m42_304 [label="Exit lambda expression", span="326-330", cluster="lambda expression", file="QueueSteps.cs"];
m42_302 [label="x.AddToSet(''my-key'', ''my-value'')", span="328-328", cluster="lambda expression", file="QueueSteps.cs"];
m42_303 [label="x.AddToSet(''my-key'', ''my-value'')", span="329-329", cluster="lambda expression", file="QueueSteps.cs"];
m42_317 [label="Exit lambda expression", span="343-343", cluster="lambda expression", file="QueueSteps.cs"];
m42_316 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="343-343", cluster="lambda expression", file="QueueSteps.cs"];
m42_330 [label="Exit lambda expression", span="358-362", cluster="lambda expression", file="QueueSteps.cs"];
m42_328 [label="x.AddToSet(''my-key'', ''my-value'')", span="360-360", cluster="lambda expression", file="QueueSteps.cs"];
m42_329 [label="x.AddToSet(''my-key'', ''my-value'', 3.2)", span="361-361", cluster="lambda expression", file="QueueSteps.cs"];
m42_342 [label="Exit lambda expression", span="375-379", cluster="lambda expression", file="QueueSteps.cs"];
m42_340 [label="x.AddToSet(''my-key'', ''my-value'')", span="377-377", cluster="lambda expression", file="QueueSteps.cs"];
m42_341 [label="x.RemoveFromSet(''my-key'', ''my-value'')", span="378-378", cluster="lambda expression", file="QueueSteps.cs"];
m42_355 [label="Exit lambda expression", span="392-396", cluster="lambda expression", file="QueueSteps.cs"];
m42_353 [label="x.AddToSet(''my-key'', ''my-value'')", span="394-394", cluster="lambda expression", file="QueueSteps.cs"];
m42_354 [label="x.RemoveFromSet(''my-key'', ''different-value'')", span="395-395", cluster="lambda expression", file="QueueSteps.cs"];
m42_367 [label="Exit lambda expression", span="409-413", cluster="lambda expression", file="QueueSteps.cs"];
m42_365 [label="x.AddToSet(''my-key'', ''my-value'')", span="411-411", cluster="lambda expression", file="QueueSteps.cs"];
m42_366 [label="x.RemoveFromSet(''different-key'', ''my-value'')", span="412-412", cluster="lambda expression", file="QueueSteps.cs"];
m42_379 [label="Exit lambda expression", span="426-426", cluster="lambda expression", file="QueueSteps.cs"];
m42_378 [label="x.InsertToList(''my-key'', ''my-value'')", span="426-426", cluster="lambda expression", file="QueueSteps.cs"];
m42_392 [label="Exit lambda expression", span="440-444", cluster="lambda expression", file="QueueSteps.cs"];
m42_390 [label="x.InsertToList(''my-key'', ''my-value'')", span="442-442", cluster="lambda expression", file="QueueSteps.cs"];
m42_391 [label="x.InsertToList(''my-key'', ''my-value'')", span="443-443", cluster="lambda expression", file="QueueSteps.cs"];
m42_405 [label="Exit lambda expression", span="457-462", cluster="lambda expression", file="QueueSteps.cs"];
m42_402 [label="x.InsertToList(''my-key'', ''my-value'')", span="459-459", cluster="lambda expression", file="QueueSteps.cs"];
m42_403 [label="x.InsertToList(''my-key'', ''my-value'')", span="460-460", cluster="lambda expression", file="QueueSteps.cs"];
m42_404 [label="x.RemoveFromList(''my-key'', ''my-value'')", span="461-461", cluster="lambda expression", file="QueueSteps.cs"];
m42_418 [label="Exit lambda expression", span="475-479", cluster="lambda expression", file="QueueSteps.cs"];
m42_416 [label="x.InsertToList(''my-key'', ''my-value'')", span="477-477", cluster="lambda expression", file="QueueSteps.cs"];
m42_417 [label="x.RemoveFromList(''my-key'', ''different-value'')", span="478-478", cluster="lambda expression", file="QueueSteps.cs"];
m42_430 [label="Exit lambda expression", span="492-496", cluster="lambda expression", file="QueueSteps.cs"];
m42_428 [label="x.InsertToList(''my-key'', ''my-value'')", span="494-494", cluster="lambda expression", file="QueueSteps.cs"];
m42_429 [label="x.RemoveFromList(''different-key'', ''my-value'')", span="495-495", cluster="lambda expression", file="QueueSteps.cs"];
m42_448 [label="Exit lambda expression", span="509-516", cluster="lambda expression", file="QueueSteps.cs"];
m42_443 [label="x.InsertToList(''my-key'', ''0'')", span="511-511", cluster="lambda expression", file="QueueSteps.cs"];
m42_444 [label="x.InsertToList(''my-key'', ''1'')", span="512-512", cluster="lambda expression", file="QueueSteps.cs"];
m42_445 [label="x.InsertToList(''my-key'', ''2'')", span="513-513", cluster="lambda expression", file="QueueSteps.cs"];
m42_446 [label="x.InsertToList(''my-key'', ''3'')", span="514-514", cluster="lambda expression", file="QueueSteps.cs"];
m42_447 [label="x.TrimList(''my-key'', 1, 2)", span="515-515", cluster="lambda expression", file="QueueSteps.cs"];
m42_463 [label="Exit lambda expression", span="531-537", cluster="lambda expression", file="QueueSteps.cs"];
m42_459 [label="x.InsertToList(''my-key'', ''0'')", span="533-533", cluster="lambda expression", file="QueueSteps.cs"];
m42_460 [label="x.InsertToList(''my-key'', ''1'')", span="534-534", cluster="lambda expression", file="QueueSteps.cs"];
m42_461 [label="x.InsertToList(''my-key'', ''2'')", span="535-535", cluster="lambda expression", file="QueueSteps.cs"];
m42_462 [label="x.TrimList(''my-key'', 1, 100)", span="536-536", cluster="lambda expression", file="QueueSteps.cs"];
m42_475 [label="Exit lambda expression", span="550-554", cluster="lambda expression", file="QueueSteps.cs"];
m42_473 [label="x.InsertToList(''my-key'', ''0'')", span="552-552", cluster="lambda expression", file="QueueSteps.cs"];
m42_474 [label="x.TrimList(''my-key'', 1, 100)", span="553-553", cluster="lambda expression", file="QueueSteps.cs"];
m42_487 [label="Exit lambda expression", span="567-571", cluster="lambda expression", file="QueueSteps.cs"];
m42_485 [label="x.InsertToList(''my-key'', ''0'')", span="569-569", cluster="lambda expression", file="QueueSteps.cs"];
m42_486 [label="x.TrimList(''my-key'', 1, 0)", span="570-570", cluster="lambda expression", file="QueueSteps.cs"];
m42_499 [label="Exit lambda expression", span="584-588", cluster="lambda expression", file="QueueSteps.cs"];
m42_497 [label="x.InsertToList(''my-key'', ''0'')", span="586-586", cluster="lambda expression", file="QueueSteps.cs"];
m42_498 [label="x.TrimList(''another-key'', 1, 0)", span="587-587", cluster="lambda expression", file="QueueSteps.cs"];
m42_512 [label="Exit lambda expression", span="602-602", cluster="lambda expression", file="QueueSteps.cs"];
m42_511 [label="x.SetRangeInHash(null, new Dictionary<string, string>())", span="602-602", cluster="lambda expression", file="QueueSteps.cs"];
m42_526 [label="Exit lambda expression", span="614-614", cluster="lambda expression", file="QueueSteps.cs"];
m42_525 [label="x.SetRangeInHash(''some-hash'', null)", span="614-614", cluster="lambda expression", file="QueueSteps.cs"];
m42_539 [label="Exit lambda expression", span="625-629", cluster="lambda expression", file="QueueSteps.cs"];
m42_538 [label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="625-629", cluster="lambda expression", file="QueueSteps.cs"];
m42_204 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="215-215", cluster="lambda expression", file="QueueSteps.cs"];
m42_205 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="216-216", cluster="lambda expression", file="QueueSteps.cs"];
m42_248 [label="Assert.True(DateTime.UtcNow.AddHours(23) < expireAt)", span="267-267", cluster="lambda expression", file="QueueSteps.cs"];
m42_249 [label="Assert.True(expireAt < DateTime.UtcNow.AddHours(25))", span="268-268", cluster="lambda expression", file="QueueSteps.cs"];
m42_105 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="QueueSteps.cs"];
m42_108 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="QueueSteps.cs"];
m42_542 [label="Exit lambda expression", span="634-634", cluster="lambda expression", file="QueueSteps.cs"];
m42_541 [label="(string)x.Field", span="634-634", cluster="lambda expression", file="QueueSteps.cs"];
m42_545 [label="Exit lambda expression", span="634-634", cluster="lambda expression", file="QueueSteps.cs"];
m42_544 [label="(string)x.Value", span="634-634", cluster="lambda expression", file="QueueSteps.cs"];
m42_113 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="QueueSteps.cs"];
m42_112 [label="x.SerializeData()", span="105-105", cluster="lambda expression", file="QueueSteps.cs"];
m42_140 [label="Entry lambda expression", span="140-140", cluster="lambda expression", file="QueueSteps.cs"];
m42_148 [label="Exit lambda expression", span="142-142", cluster="lambda expression", file="QueueSteps.cs"];
m42_147 [label="x.SerializeData()", span="142-142", cluster="lambda expression", file="QueueSteps.cs"];
m42_175 [label="Exit lambda expression", span="174-174", cluster="lambda expression", file="QueueSteps.cs"];
m42_174 [label="x.Enqueue(''default'', ''1'')", span="174-174", cluster="lambda expression", file="QueueSteps.cs"];
m42_107 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="QueueSteps.cs"];
m42_106 [label="x.Name", span="103-103", cluster="lambda expression", file="QueueSteps.cs"];
m42_110 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="QueueSteps.cs"];
m42_109 [label="x.Reason", span="104-104", cluster="lambda expression", file="QueueSteps.cs"];
m42_142 [label="Exit lambda expression", span="140-140", cluster="lambda expression", file="QueueSteps.cs"];
m42_141 [label="x.Name", span="140-140", cluster="lambda expression", file="QueueSteps.cs"];
m42_144 [label="x.Reason", span="141-141", cluster="lambda expression", file="QueueSteps.cs"];
m42_145 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="QueueSteps.cs"];
m42_172 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="119-119", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="QueueSteps.cs"];
m42_177 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="178-178", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="QueueSteps.cs"];
m42_178 [label="return connection\r\n                .Query(''select * from HangFire.Job where id = @id'', new { id = jobId })\r\n                .Single();", span="180-182", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="QueueSteps.cs"];
m42_179 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", span="178-178", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.GetTestJob(IDbConnection, string)", file="QueueSteps.cs"];
m42_0 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="16-16", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="QueueSteps.cs"];
m42_1 [label="var defaultProvider = new Mock<IPersistentJobQueueProvider>()", span="18-18", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="QueueSteps.cs"];
m42_103 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="QueueSteps.cs"];
m42_51 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="QueueSteps.cs"];
m42_393 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="453-453", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="QueueSteps.cs"];
m42_394 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.RemoveFromList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="455-467", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="QueueSteps.cs"];
m42_395 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", span="453-453", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.RemoveFromList_RemovesAllRecords_WithGivenKeyAndValue()", file="QueueSteps.cs"];
m42_36 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="QueueSteps.cs"];
m42_318 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="160-160", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="QueueSteps.cs"];
m42_211 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="134-134", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="QueueSteps.cs"];
m42_118 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="QueueSteps.cs"];
m42_2 [label="defaultProvider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(new Mock<IPersistentJobQueue>().Object)", span="19-20", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="QueueSteps.cs"];
m42_3 [label="_queueProviders = new PersistentJobQueueProviderCollection(defaultProvider.Object)", span="22-22", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="QueueSteps.cs"];
m42_4 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", span="16-16", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SqlServerWriteOnlyTransactionFacts()", file="QueueSteps.cs"];
m42_464 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="546-546", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="QueueSteps.cs"];
m42_465 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="548-559", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="QueueSteps.cs"];
m42_466 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", span="546-546", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_WhenStartingFromValue_GreaterThanMaxElementIndex()", file="QueueSteps.cs"];
m42_59 [label="Entry Unk.ExpireJob", span="", cluster="Unk.ExpireJob", file="QueueSteps.cs"];
m42_476 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="563-563", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="QueueSteps.cs"];
m42_477 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''my-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(0, recordCount);\r\n            })", span="565-576", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="QueueSteps.cs"];
m42_478 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", span="563-563", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesAllRecords_IfStartFromGreaterThanEndingAt()", file="QueueSteps.cs"];
m42_46 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="QueueSteps.cs"];
m42_550 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="QueueSteps.cs"];
m42_164 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="QueueSteps.cs"];
m42_73 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="QueueSteps.cs"];
m42_54 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="QueueSteps.cs"];
m42_281 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="305-305", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="QueueSteps.cs"];
m42_282 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.AddToSet(''my-key'', ''my-value'');\r\n                    x.AddToSet(''my-key'', ''another-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.[Set]'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="307-318", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="QueueSteps.cs"];
m42_283 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", span="305-305", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.AddToSet_AddsARecord_WhenKeyIsExists_ButValuesAreDifferent()", file="QueueSteps.cs"];
m42_207 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="QueueSteps.cs"];
m42_488 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="580-580", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="QueueSteps.cs"];
m42_489 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.TrimList(''another-key'', 1, 0);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(1, recordCount);\r\n            })", span="582-593", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="QueueSteps.cs"];
m42_490 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", span="580-580", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecords_OnlyOfAGivenKey()", file="QueueSteps.cs"];
m42_14 [label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="33-33", cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="QueueSteps.cs"];
m42_193 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="127-127", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="QueueSteps.cs"];
m42_165 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="QueueSteps.cs"];
m42_13 [label="Entry Unk.>", span="", cluster="Unk.>", file="QueueSteps.cs"];
m42_380 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="181-181", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="QueueSteps.cs"];
m42_536 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="QueueSteps.cs"];
m42_513 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="207-207", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="QueueSteps.cs"];
m42_78 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="90-90", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="QueueSteps.cs"];
m42_79 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="92-95", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", color=green, community=0, file="QueueSteps.cs"];
m42_80 [label="UseConnection(sql =>\r\n            {\r\n                var jobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n                var anotherJobId = sql.Query(arrangeSql).Single().Id.ToString();\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''State'');\r\n                state.Setup(x => x.Reason).Returns(''Reason'');\r\n                state.Setup(x => x.SerializeData())\r\n                    .Returns(new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                Commit(sql, x => x.SetJobState(jobId, state.Object));\r\n\r\n                var job = GetTestJob(sql, jobId);\r\n                Assert.Equal(''State'', job.StateName);\r\n                Assert.NotNull(job.StateId);\r\n\r\n                var anotherJob = GetTestJob(sql, anotherJobId);\r\n                Assert.Null(anotherJob.StateName);\r\n                Assert.Null(anotherJob.StateId);\r\n\r\n                var jobState = sql.Query(''select * from HangFire.State'').Single();\r\n                Assert.Equal((string)jobId, jobState.JobId.ToString());\r\n                Assert.Equal(''State'', jobState.Name);\r\n                Assert.Equal(''Reason'', jobState.Reason);\r\n                Assert.NotNull(jobState.CreatedAt);\r\n                Assert.Equal(''{\''Name\'':\''Value\''}'', jobState.Data);\r\n            })", span="97-124", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="QueueSteps.cs"];
m42_81 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", span="90-90", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetJobState_AppendsAStateAndSetItToTheJob()", file="QueueSteps.cs"];
m42_194 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="201-201", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="QueueSteps.cs"];
m42_195 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime) record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="203-217", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="QueueSteps.cs"];
m42_196 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="201-201", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="QueueSteps.cs"];
m42_23 [label="Then(String.Format(''the '{0}' queue does not contain the job'', DefaultQueue))", span="51-51", cluster="HangFire.Tests.QueueSteps.ThenTheQueueDoesNotContainTheJob()", file="QueueSteps.cs"];
m42_546 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="641-641", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="QueueSteps.cs"];
m42_547 [label="var connection = ConnectionUtils.CreateConnection()", span="643-643", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="QueueSteps.cs"];
m42_548 [label="action(connection)", span="645-645", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="QueueSteps.cs"];
m42_549 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", span="641-641", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.UseConnection(System.Action<SqlConnection>)", file="QueueSteps.cs"];
m42_514 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="609-609", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="QueueSteps.cs"];
m42_515 [label="UseConnection(sql =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(sql, x => x.SetRangeInHash(''some-hash'', null)));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="611-617", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="QueueSteps.cs"];
m42_516 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="609-609", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="QueueSteps.cs"];
m42_58 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="QueueSteps.cs"];
m42_254 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="148-148", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="QueueSteps.cs"];
m42_176 [label="Entry Unk.Enqueue", span="", cluster="Unk.Enqueue", file="QueueSteps.cs"];
m42_237 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="141-141", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="QueueSteps.cs"];
m42_104 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="QueueSteps.cs"];
m42_24 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", span="35-35", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.Ctor_ThrowsAnException_IfProvidersCollectionIsNull()", file="QueueSteps.cs"];
m42_114 [label="Entry Unk.SerializeData", span="", cluster="Unk.SerializeData", file="QueueSteps.cs"];
m42_450 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="527-527", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="QueueSteps.cs"];
m42_451 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''0'');\r\n                    x.InsertToList(''my-key'', ''1'');\r\n                    x.InsertToList(''my-key'', ''2'');\r\n                    x.TrimList(''my-key'', 1, 100);\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="529-542", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="QueueSteps.cs"];
m42_452 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", span="527-527", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.TrimList_RemovesRecordsToEnd_IfKeepAndingAt_GreaterThanMaxElementIndex()", file="QueueSteps.cs"];
m42_238 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="253-253", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="QueueSteps.cs"];
m42_239 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.DecrementCounter(''my-key'', TimeSpan.FromDays(1)));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n\r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(-1, record.Value);\r\n                Assert.NotNull(record.ExpireAt);\r\n\r\n                var expireAt = (DateTime)record.ExpireAt;\r\n\r\n                Assert.True(DateTime.UtcNow.AddHours(23) < expireAt);\r\n                Assert.True(expireAt < DateTime.UtcNow.AddHours(25));\r\n            })", span="255-269", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="QueueSteps.cs"];
m42_240 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", span="253-253", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_AddsARecord_WithExpirationTimeSet()", file="QueueSteps.cs"];
m42_180 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="186-186", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="QueueSteps.cs"];
m42_181 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x => x.IncrementCounter(''my-key''));\r\n\r\n                var record = sql.Query(''select * from HangFire.Counter'').Single();\r\n                \r\n                Assert.Equal(''my-key'', record.Key);\r\n                Assert.Equal(1, record.Value);\r\n                Assert.Equal((DateTime?)null, record.ExpireAt);\r\n            })", span="188-197", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="QueueSteps.cs"];
m42_182 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", span="186-186", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.IncrementCounter_AddsRecordToCounterTable_WithPositiveValue()", file="QueueSteps.cs"];
m42_47 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="QueueSteps.cs"];
m42_53 [label="Entry Unk.True", span="", cluster="Unk.True", file="QueueSteps.cs"];
m42_77 [label="Entry Unk.PersistJob", span="", cluster="Unk.PersistJob", file="QueueSteps.cs"];
m42_381 [label="Entry HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="436-436", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="QueueSteps.cs"];
m42_382 [label="UseConnection(sql =>\r\n            {\r\n                Commit(sql, x =>\r\n                {\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                    x.InsertToList(''my-key'', ''my-value'');\r\n                });\r\n\r\n                var recordCount = sql.Query<int>(''select count(*) from HangFire.List'').Single();\r\n\r\n                Assert.Equal(2, recordCount);\r\n            })", span="438-449", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="QueueSteps.cs"];
m42_383 [label="Exit HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", span="436-436", cluster="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts.InsertToList_AddsAnotherRecord_WhenBothKeyAndValueAreExist()", file="QueueSteps.cs"];
m42_556 [label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts", span="", file="QueueSteps.cs"];
m42_557 [label=arrangeSql, span="", file="QueueSteps.cs"];
m42_559 [label=arrangeSql, span="", file="QueueSteps.cs"];
m42_561 [label=arrangeSql, span="", file="QueueSteps.cs"];
m42_558 [label=jobId, span="", file="QueueSteps.cs"];
m42_567 [label=SqlConnection, span="", file="QueueSteps.cs"];
m42_568 [label=SqlConnection, span="", file="QueueSteps.cs"];
m42_560 [label=jobId, span="", file="QueueSteps.cs"];
m42_562 [label=jobId, span="", file="QueueSteps.cs"];
m42_563 [label=state, span="", file="QueueSteps.cs"];
m42_564 [label=arrangeSql, span="", file="QueueSteps.cs"];
m42_565 [label=jobId, span="", file="QueueSteps.cs"];
m42_566 [label=state, span="", file="QueueSteps.cs"];
m43_20 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="RecurringJobsFilter.cs"];
m43_21 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="RecurringJobsFilter.cs"];
m43_19 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="RecurringJobsFilter.cs"];
m43_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="RecurringJobsFilter.cs"];
m43_24 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="RecurringJobsFilter.cs"];
m43_3 [label="Entry HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="20-20", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_4 [label="redis == null", span="22-22", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_6 [label="state == null", span="23-23", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_8 [label="state.StateName != SucceededState.Name", span="25-25", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_9 [label="return state;", span="27-27", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_10 [label="var jobType = redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', state.JobId),\r\n                ''Type'')", span="30-32", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_14 [label="return new ScheduledState(\r\n                    state.JobId, \r\n                    ''Scheduled as a recurring job.'',\r\n                    DateTime.UtcNow.AddSeconds(recurringAttribute.Seconds));", span="40-43", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_15 [label="return state;", span="46-46", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_5 [label="throw new ArgumentNullException(''redis'');", span="22-22", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_7 [label="throw new ArgumentNullException(''state'');", span="23-23", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_11 [label="var type = Type.GetType(jobType)", span="33-33", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_12 [label="var recurringAttribute = type.GetCustomAttributes(true).OfType<RecurringAttribute>().SingleOrDefault()", span="36-36", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_13 [label="recurringAttribute != null", span="38-38", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_16 [label="Exit HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="20-20", cluster="HangFire.RecurringJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="RecurringJobsFilter.cs"];
m43_25 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="RecurringJobsFilter.cs"];
m43_22 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="RecurringJobsFilter.cs"];
m43_18 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobsFilter.cs"];
m43_0 [label="Entry HangFire.RecurringAttribute.RecurringAttribute(int)", span="10-10", cluster="HangFire.RecurringAttribute.RecurringAttribute(int)", file="RecurringJobsFilter.cs"];
m43_1 [label="Seconds = seconds", span="12-12", cluster="HangFire.RecurringAttribute.RecurringAttribute(int)", file="RecurringJobsFilter.cs"];
m43_2 [label="Exit HangFire.RecurringAttribute.RecurringAttribute(int)", span="10-10", cluster="HangFire.RecurringAttribute.RecurringAttribute(int)", file="RecurringJobsFilter.cs"];
m43_26 [label="HangFire.RecurringAttribute", span="", file="RecurringJobsFilter.cs"];
m45_6 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ServerContext.cs"];
m45_45 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_46 [label="var collection = CreateCollection()", span="57-57", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_48 [label="_runner1.Verify(x => x.Dispose())", span="61-61", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_49 [label="_runner2.Verify(x => x.Dispose())", span="62-62", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_47 [label="collection.Dispose()", span="59-59", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_50 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", span="55-55", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_InvokesDisposeMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_98 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerContext.cs"];
m45_100 [label="var collection = CreateCollection()", span="121-121", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerContext.cs"];
m45_99 [label="var runner = new Mock<IServerComponentRunner>()", span="120-120", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerContext.cs"];
m45_101 [label="collection.Add(runner.Object)", span="122-122", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerContext.cs"];
m45_102 [label="collection.Remove(runner.Object)", span="124-124", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerContext.cs"];
m45_103 [label="Assert.False(collection.Contains(runner.Object))", span="126-126", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerContext.cs"];
m45_104 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", span="118-118", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Remove_RemovesGivenElementFromCollection()", file="ServerContext.cs"];
m45_75 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ServerContext.cs"];
m45_41 [label="Entry Unk.Stop", span="", cluster="Unk.Stop", file="ServerContext.cs"];
m45_82 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerContext.cs"];
m45_83 [label="var collection = CreateCollection()", span="97-97", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerContext.cs"];
m45_84 [label="collection.Clear()", span="99-99", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerContext.cs"];
m45_85 [label="Assert.Equal(0, collection.Count)", span="101-101", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerContext.cs"];
m45_86 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", span="95-95", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Clear_RemovesAllElements_FromCollection()", file="ServerContext.cs"];
m45_0 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", span="14-14", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerContext.cs"];
m45_1 [label="_runner1 = new Mock<IServerComponentRunner>()", span="16-16", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerContext.cs", color=green, community=0];
m45_2 [label="_runner2 = new Mock<IServerComponentRunner>()", span="17-17", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", color=red, community=0, file="ServerContext.cs"];
m45_3 [label="_runners = new List<IServerComponentRunner>\r\n            {\r\n                _runner1.Object,\r\n                _runner2.Object\r\n            }", span="19-23", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerContext.cs", color=green, community=0];
m45_4 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", span="14-14", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.ServerComponentRunnerCollectionFacts()", file="ServerContext.cs"];
m45_7 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="ServerContext.cs"];
m45_8 [label="Assert.Throws<ArgumentNullException>(() => new ServerComponentRunnerCollection(null))", span="29-29", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", color=green, community=0, file="ServerContext.cs"];
m45_9 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", span="27-27", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Ctor_ThrowsAnException_WhenRunnersValueIsNull()", file="ServerContext.cs"];
m45_5 [label="HangFire.Server.ServerContext", span="", cluster="Mock<IServerComponentRunner>.cstr", file="ServerContext.cs"];
m45_88 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerContext.cs"];
m45_90 [label="var collection = CreateCollection()", span="108-108", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerContext.cs"];
m45_89 [label="var element = new Mock<IServerComponentRunner>()", span="107-107", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerContext.cs"];
m45_91 [label="Assert.False(collection.Contains(element.Object))", span="110-110", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerContext.cs"];
m45_92 [label="collection.Add(element.Object)", span="112-112", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerContext.cs"];
m45_93 [label="Assert.True(collection.Contains(element.Object))", span="114-114", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerContext.cs"];
m45_94 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", span="105-105", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Contains_ReturnsWhetherElementIsInCollection()", file="ServerContext.cs"];
m45_37 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Stop()", span="44-44", cluster="HangFire.Server.ServerComponentRunnerCollection.Stop()", file="ServerContext.cs"];
m45_96 [label="Entry Unk.False", span="", cluster="Unk.False", file="ServerContext.cs"];
m45_21 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="129-129", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ServerContext.cs"];
m45_106 [label="return new ServerComponentRunnerCollection(_runners);", span="131-131", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ServerContext.cs"];
m45_107 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", span="129-129", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.CreateCollection()", file="ServerContext.cs"];
m45_76 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerContext.cs"];
m45_77 [label="var collection = CreateCollection()", span="87-87", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerContext.cs"];
m45_78 [label="collection.Add(new Mock<IServerComponentRunner>().Object)", span="89-89", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerContext.cs"];
m45_79 [label="Assert.Equal(3, collection.Count)", span="91-91", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerContext.cs"];
m45_80 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", span="85-85", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Add_AddsNewElement()", file="ServerContext.cs"];
m45_81 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="ServerContext.cs"];
m45_22 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Start()", span="36-36", cluster="HangFire.Server.ServerComponentRunnerCollection.Start()", file="ServerContext.cs"];
m45_87 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Clear()", span="77-77", cluster="HangFire.Server.ServerComponentRunnerCollection.Clear()", file="ServerContext.cs"];
m45_15 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_16 [label="var collection = CreateCollection()", span="35-35", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_18 [label="_runner1.Verify(x => x.Start())", span="39-39", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_19 [label="_runner2.Verify(x => x.Start())", span="40-40", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_17 [label="collection.Start()", span="37-37", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_20 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", span="33-33", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Start_ExecutesStartMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_55 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="ServerContext.cs"];
m45_105 [label="Entry Unk.Remove", span="", cluster="Unk.Remove", file="ServerContext.cs"];
m45_68 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="ServerContext.cs"];
m45_11 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="ServerContext.cs"];
m45_12 [label="new ServerComponentRunnerCollection(null)", span="29-29", cluster="lambda expression", color=green, community=0, file="ServerContext.cs"];
m45_13 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="ServerContext.cs"];
m45_24 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="ServerContext.cs"];
m45_28 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="ServerContext.cs"];
m45_38 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="ServerContext.cs"];
m45_42 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="ServerContext.cs"];
m45_52 [label="Entry lambda expression", span="61-61", cluster="lambda expression", file="ServerContext.cs"];
m45_56 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="ServerContext.cs"];
m45_65 [label="Entry lambda expression", span="72-72", cluster="lambda expression", file="ServerContext.cs"];
m45_26 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ServerContext.cs"];
m45_25 [label="x.Start()", span="39-39", cluster="lambda expression", file="ServerContext.cs"];
m45_30 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="ServerContext.cs"];
m45_29 [label="x.Start()", span="40-40", cluster="lambda expression", file="ServerContext.cs"];
m45_40 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="ServerContext.cs"];
m45_39 [label="x.Stop()", span="50-50", cluster="lambda expression", file="ServerContext.cs"];
m45_44 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="ServerContext.cs"];
m45_43 [label="x.Stop()", span="51-51", cluster="lambda expression", file="ServerContext.cs"];
m45_54 [label="Exit lambda expression", span="61-61", cluster="lambda expression", file="ServerContext.cs"];
m45_53 [label="x.Dispose()", span="61-61", cluster="lambda expression", file="ServerContext.cs"];
m45_58 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="ServerContext.cs"];
m45_57 [label="x.Dispose()", span="62-62", cluster="lambda expression", file="ServerContext.cs"];
m45_67 [label="Exit lambda expression", span="72-72", cluster="lambda expression", file="ServerContext.cs"];
m45_66 [label="x.Stop()", span="72-72", cluster="lambda expression", file="ServerContext.cs"];
m45_69 [label="x.Stop()", span="73-73", cluster="lambda expression", file="ServerContext.cs"];
m45_70 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="ServerContext.cs"];
m45_95 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ServerContext.cs"];
m45_14 [label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26", cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ServerContext.cs"];
m45_27 [label="Entry Unk.Start", span="", cluster="Unk.Start", file="ServerContext.cs"];
m45_31 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_32 [label="var collection = CreateCollection()", span="46-46", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_34 [label="_runner1.Verify(x => x.Stop())", span="50-50", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_35 [label="_runner2.Verify(x => x.Stop())", span="51-51", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_33 [label="collection.Stop()", span="48-48", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_36 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", span="44-44", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Stop_ExecutesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_97 [label="Entry Unk.True", span="", cluster="Unk.True", file="ServerContext.cs"];
m45_51 [label="Entry HangFire.Server.ServerComponentRunnerCollection.Dispose()", span="52-52", cluster="HangFire.Server.ServerComponentRunnerCollection.Dispose()", file="ServerContext.cs"];
m45_71 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerContext.cs"];
m45_72 [label="var collection = CreateCollection()", span="79-79", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerContext.cs"];
m45_73 [label="Assert.Equal(2, collection.Count)", span="81-81", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerContext.cs"];
m45_74 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", span="77-77", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Count_ReturnsTheNumberOfElements()", file="ServerContext.cs"];
m45_59 [label="Entry HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_60 [label="var collection = CreateCollection()", span="68-68", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_62 [label="_runner1.Verify(x => x.Stop())", span="72-72", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_63 [label="_runner2.Verify(x => x.Stop())", span="73-73", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_61 [label="collection.Dispose()", span="70-70", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_64 [label="Exit HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", span="66-66", cluster="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts.Dispose_AlsoInvokesStopMethod_OnAllRegisteredComponents()", file="ServerContext.cs"];
m45_23 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ServerContext.cs"];
m45_108 [label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts", span="", file="ServerContext.cs"];
m46_0 [label="Entry HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6", cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="ServerExceptionContext.cs"];
m46_1 [label="Exception = exception", span="11-11", cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", color=green, community=0, file="ServerExceptionContext.cs"];
m46_2 [label="Exit HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6", cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="ServerExceptionContext.cs"];
m46_3 [label="HangFire.Filters.ServerExceptionContext", span="", file="ServerExceptionContext.cs"];
m47_292 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="173-173", cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="ServerJobDescriptor.cs"];
m47_36 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", span="44-44", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", file="ServerJobDescriptor.cs"];
m47_34 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", span="44-44", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", file="ServerJobDescriptor.cs"];
m47_35 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>());\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var hash = redis.GetAllEntriesFromHash(''hangfire:job:my-job'');\r\n                Assert.Equal(''my-state'', hash[''State'']);\r\n            })", span="46-59", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_ModifiesJobEntry()", file="ServerJobDescriptor.cs"];
m47_26 [label="Entry Unk.GetTimeToLive", span="", cluster="Unk.GetTimeToLive", file="ServerJobDescriptor.cs"];
m47_183 [label="Entry Unk.EnqueueItemOnList", span="", cluster="Unk.EnqueueItemOnList", file="ServerJobDescriptor.cs"];
m47_241 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="149-149", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="ServerJobDescriptor.cs"];
m47_45 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ServerJobDescriptor.cs"];
m47_249 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="ServerJobDescriptor.cs"];
m47_202 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.IncrementCounter(''entry'', TimeSpan.FromDays(1)));\r\n\r\n                var entryTtl = redis.GetTimeToLive(''hangfire:entry'');\r\n                Assert.Equal(''4'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25));\r\n            })", span="198-207", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", file="ServerJobDescriptor.cs"];
m47_201 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", span="196-196", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", file="ServerJobDescriptor.cs"];
m47_203 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", span="196-196", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_WithExpiry_IncrementsValueAndSetsExpirationDate()", file="ServerJobDescriptor.cs"];
m47_214 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="138-138", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="ServerJobDescriptor.cs"];
m47_11 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="ServerJobDescriptor.cs"];
m47_324 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="185-185", cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="ServerJobDescriptor.cs"];
m47_49 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="ServerJobDescriptor.cs"];
m47_50 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ServerJobDescriptor.cs"];
m47_27 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="ServerJobDescriptor.cs"];
m47_369 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="ServerJobDescriptor.cs"];
m47_78 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="ServerJobDescriptor.cs"];
m47_79 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="ServerJobDescriptor.cs"];
m47_61 [label="Entry Unk.SetJobState", span="", cluster="Unk.SetJobState", file="ServerJobDescriptor.cs"];
m47_175 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", span="169-169", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="ServerJobDescriptor.cs"];
m47_176 [label="UseConnection(redis =>\r\n            {\r\n                redis.EnqueueItemOnList(''hangfire:queue:critical'', ''another-job'');\r\n\r\n                Commit(redis, x => x.AddToQueue(''critical'', ''my-job''));\r\n\r\n                Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0));\r\n            })", span="171-178", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="ServerJobDescriptor.cs"];
m47_177 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", span="169-169", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_PrependsListWithJob()", file="ServerJobDescriptor.cs"];
m47_9 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntry(''hangfire:job:my-job'', ''job'');\r\n                redis.SetEntry(''hangfire:job:my-job:state'', ''state'');\r\n                redis.SetEntry(''hangfire:job:my-job:history'', ''history'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.ExpireJob(''my-job'', TimeSpan.FromDays(1)));\r\n\r\n                // Assert\r\n                var jobEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job'');\r\n                var stateEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'');\r\n                var historyEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'');\r\n\r\n                Assert.True(TimeSpan.FromHours(23) < jobEntryTtl && jobEntryTtl < TimeSpan.FromHours(25));\r\n                Assert.True(TimeSpan.FromHours(23) < stateEntryTtl && stateEntryTtl < TimeSpan.FromHours(25));\r\n                Assert.True(TimeSpan.FromHours(23) < historyEntryTtl && historyEntryTtl < TimeSpan.FromHours(25));\r\n            })", span="22-40", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", color=red, community=0, file="ServerJobDescriptor.cs"];
m47_8 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", span="20-20", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="ServerJobDescriptor.cs"];
m47_10 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", span="20-20", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.ExpireJob_SetsExpirationDateForAllRelatedKeys()", file="ServerJobDescriptor.cs"];
m47_64 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", span="63-63", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", file="ServerJobDescriptor.cs"];
m47_62 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", span="63-63", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", file="ServerJobDescriptor.cs"];
m47_63 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntryInHash(''hangfire:job:my-job:state'', ''OldName'', ''OldValue'');\r\n\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''Name'', ''Value'' }\r\n                    });\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.Reason).Returns(''my-reason'');\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var stateHash = redis.GetAllEntriesFromHash(''hangfire:job:my-job:state'');\r\n                Assert.False(stateHash.ContainsKey(''OldName''));\r\n                Assert.Equal(''my-state'', stateHash[''State'']);\r\n                Assert.Equal(''my-reason'', stateHash[''Reason'']);\r\n                Assert.Equal(''Value'', stateHash[''Name'']);\r\n            })", span="65-88", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_RewritesStateEntry()", file="ServerJobDescriptor.cs"];
m47_24 [label="Entry Unk.SetEntry", span="", cluster="Unk.SetEntry", file="ServerJobDescriptor.cs"];
m47_267 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", span="263-263", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="ServerJobDescriptor.cs"];
m47_268 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToSortedSet(''hangfire:my-set'', ''my-value'');\r\n\r\n                Commit(redis, x => x.RemoveFromSet(''my-set'', ''my-value''));\r\n\r\n                Assert.False(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n            })", span="265-272", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="ServerJobDescriptor.cs"];
m47_269 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", span="263-263", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromSet_RemoveSpecifiedItemFromSortedSet()", file="ServerJobDescriptor.cs"];
m47_25 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", span="363-363", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="ServerJobDescriptor.cs"];
m47_364 [label="var transaction = new RedisWriteOnlyTransaction(redis.CreateTransaction())", span="365-365", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="ServerJobDescriptor.cs"];
m47_365 [label="action(transaction)", span="367-367", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="ServerJobDescriptor.cs"];
m47_366 [label="transaction.Commit()", span="368-368", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="ServerJobDescriptor.cs"];
m47_367 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", span="363-363", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Commit(IRedisClient, System.Action<HangFire.Redis.RedisWriteOnlyTransaction>)", file="ServerJobDescriptor.cs"];
m47_372 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", span="372-372", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="ServerJobDescriptor.cs"];
m47_373 [label="var redis = RedisUtils.CreateClient()", span="374-374", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="ServerJobDescriptor.cs"];
m47_374 [label="action(redis)", span="376-376", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="ServerJobDescriptor.cs"];
m47_375 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", span="372-372", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.UseConnection(System.Action<IRedisClient>)", file="ServerJobDescriptor.cs"];
m47_162 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", span="157-157", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", file="ServerJobDescriptor.cs"];
m47_163 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToQueue(''critical'', ''my-job''));\r\n\r\n                Assert.True(redis.SetContainsItem(''hangfire:queues'', ''critical''));\r\n                Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0));\r\n            })", span="159-165", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", file="ServerJobDescriptor.cs"];
m47_164 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", span="157-157", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToQueue_AddsSpecifiedJobToTheQueue()", file="ServerJobDescriptor.cs"];
m47_148 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="ServerJobDescriptor.cs"];
m47_262 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="ServerJobDescriptor.cs"];
m47_80 [label="Entry Unk.False", span="", cluster="Unk.False", file="ServerJobDescriptor.cs"];
m47_128 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77", cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="ServerJobDescriptor.cs"];
m47_293 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", span="289-289", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="ServerJobDescriptor.cs"];
m47_294 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n                redis.AddItemToList(''hangfire:list'', ''another-value'');\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n\r\n                Commit(redis, x => x.RemoveFromList(''list'', ''value''));\r\n\r\n                Assert.Equal(1, redis.GetListCount(''hangfire:list''));\r\n                Assert.Equal(''another-value'', redis.GetItemFromList(''hangfire:list'', 0));\r\n            })", span="291-301", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="ServerJobDescriptor.cs"];
m47_295 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", span="289-289", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.RemoveFromList_RemovesAllGivenValuesFromList()", file="ServerJobDescriptor.cs"];
m47_339 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="335-335", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="ServerJobDescriptor.cs"];
m47_340 [label="UseConnection(redis =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(redis, x => x.SetRangeInHash(''some-hash'', null)));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="337-343", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="ServerJobDescriptor.cs"];
m47_341 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="335-335", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="ServerJobDescriptor.cs"];
m47_229 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.DecrementCounter(''entry'', TimeSpan.FromDays(1)));\r\n\r\n                var entryTtl = redis.GetTimeToLive(''hangfire:entry'');\r\n                Assert.Equal(''2'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25));\r\n            })", span="227-236", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="ServerJobDescriptor.cs"];
m47_228 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", span="225-225", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="ServerJobDescriptor.cs"];
m47_230 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", span="225-225", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_WithExpiry_DecrementsTheValueAndSetsExpirationDate()", file="ServerJobDescriptor.cs"];
m47_0 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="13-13", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="ServerJobDescriptor.cs"];
m47_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new RedisWriteOnlyTransaction(null))", span="15-16", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="ServerJobDescriptor.cs"];
m47_2 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="13-13", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="ServerJobDescriptor.cs"];
m47_275 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="ServerJobDescriptor.cs"];
m47_227 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="144-144", cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="ServerJobDescriptor.cs"];
m47_103 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="ServerJobDescriptor.cs"];
m47_253 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="155-155", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="ServerJobDescriptor.cs"];
m47_32 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="ServerJobDescriptor.cs"];
m47_217 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", span="211-211", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="ServerJobDescriptor.cs"];
m47_215 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", span="211-211", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="ServerJobDescriptor.cs"];
m47_216 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.DecrementCounter(''entry''));\r\n\r\n                Assert.Equal(''2'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(redis.GetTimeToLive(''entry'') < TimeSpan.Zero);\r\n            })", span="213-221", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.DecrementCounter_DecrementsTheValueEntry()", file="ServerJobDescriptor.cs"];
m47_370 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="ServerJobDescriptor.cs"];
m47_146 [label="Entry Unk.GetItemFromList", span="", cluster="Unk.GetItemFromList", file="ServerJobDescriptor.cs"];
m47_279 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="167-167", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="ServerJobDescriptor.cs"];
m47_280 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", span="276-276", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="ServerJobDescriptor.cs"];
m47_281 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''value'');\r\n\r\n                Commit(redis, x => x.InsertToList(''list'', ''new-value''));\r\n\r\n                Assert.Equal(''new-value'', redis.GetItemFromList(''hangfire:list'', 0));\r\n            })", span="278-285", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="ServerJobDescriptor.cs"];
m47_282 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", span="276-276", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.InsertToList_PrependsListWithSpecifiedValue()", file="ServerJobDescriptor.cs"];
m47_93 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", span="92-92", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="ServerJobDescriptor.cs"];
m47_94 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>());\r\n\r\n                // Act\r\n                Commit(redis, x => x.SetJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                Assert.Equal(1, redis.GetListCount(''hangfire:job:my-job:history''));\r\n            })", span="94-106", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="ServerJobDescriptor.cs"];
m47_95 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", span="92-92", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetJobState_AppendsJobHistoryList()", file="ServerJobDescriptor.cs"];
m47_131 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", span="130-130", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="ServerJobDescriptor.cs"];
m47_129 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", span="130-130", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="ServerJobDescriptor.cs"];
m47_130 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                var state = new Mock<IState>();\r\n                state.Setup(x => x.Name).Returns(''my-state'');\r\n                state.Setup(x => x.Reason).Returns(''my-reason'');\r\n                state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string> { { ''Name'', ''Value'' } });\r\n\r\n                // Act\r\n                Commit(redis, x => x.AddJobState(''my-job'', state.Object));\r\n\r\n                // Assert\r\n                var serializedEntry = redis.GetItemFromList(''hangfire:job:my-job:history'', 0);\r\n                Assert.NotNull(serializedEntry);\r\n\r\n                var entry = JobHelper.FromJson<Dictionary<string, string>>(serializedEntry);\r\n                Assert.Equal(''my-state'', entry[''State'']);\r\n                Assert.Equal(''my-reason'', entry[''Reason'']);\r\n                Assert.Equal(''Value'', entry[''Name'']);\r\n                Assert.True(entry.ContainsKey(''CreatedAt''));\r\n            })", span="132-153", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddJobState_AddsJobHistoryEntry_AsJsonObject()", file="ServerJobDescriptor.cs"];
m47_161 [label="Entry Unk.AddJobState", span="", cluster="Unk.AddJobState", file="ServerJobDescriptor.cs"];
m47_114 [label="UseConnection(redis =>\r\n            {\r\n                // Arrange\r\n                redis.SetEntry(''hangfire:job:my-job'', ''job'', TimeSpan.FromDays(1));\r\n                redis.SetEntry(''hangfire:job:my-job:state'', ''state'', TimeSpan.FromDays(1));\r\n                redis.SetEntry(''hangfire:job:my-job:history'', ''history'', TimeSpan.FromDays(1));\r\n\r\n                // Act\r\n                Commit(redis, x => x.PersistJob(''my-job''));\r\n\r\n                // Assert\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job'') < TimeSpan.Zero);\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:state'') < TimeSpan.Zero);\r\n                Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:history'') < TimeSpan.Zero);\r\n            })", span="112-126", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="ServerJobDescriptor.cs"];
m47_113 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", span="110-110", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="ServerJobDescriptor.cs"];
m47_115 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", span="110-110", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.PersistJob_RemovesExpirationDatesForAllRelatedKeys()", file="ServerJobDescriptor.cs"];
m47_147 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="ServerJobDescriptor.cs"];
m47_47 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerJobDescriptor.cs"];
m47_242 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", span="240-240", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="ServerJobDescriptor.cs"];
m47_243 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToSet(''my-set'', ''my-value''));\r\n\r\n                Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n            })", span="242-247", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="ServerJobDescriptor.cs"];
m47_244 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", span="240-240", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_AddsItemToSortedSet()", file="ServerJobDescriptor.cs"];
m47_368 [label="Entry RedisWriteOnlyTransaction.cstr", span="", cluster="RedisWriteOnlyTransaction.cstr", file="ServerJobDescriptor.cs"];
m47_352 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", span="347-347", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", file="ServerJobDescriptor.cs"];
m47_353 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }));\r\n\r\n                var hash = redis.GetAllEntriesFromHash(''hangfire:some-hash'');\r\n                Assert.Equal(''Value1'', hash[''Key1'']);\r\n                Assert.Equal(''Value2'', hash[''Key2'']);\r\n            })", span="349-360", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", file="ServerJobDescriptor.cs"];
m47_354 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", span="347-347", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_SetsAllGivenKeyPairs()", file="ServerJobDescriptor.cs"];
m47_46 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ServerJobDescriptor.cs"];
m47_288 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="ServerJobDescriptor.cs"];
m47_54 [label="Entry Unk.SerializeData", span="", cluster="Unk.SerializeData", file="ServerJobDescriptor.cs"];
m47_371 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41", cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="ServerJobDescriptor.cs"];
m47_361 [label="Entry lambda expression", span="351-355", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_5 [label="new RedisWriteOnlyTransaction(null)", span="16-16", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_12 [label="Entry lambda expression", span="22-40", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_13 [label="redis.SetEntry(''hangfire:job:my-job'', ''job'')", span="25-25", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_14 [label="redis.SetEntry(''hangfire:job:my-job:state'', ''state'')", span="26-26", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_15 [label="redis.SetEntry(''hangfire:job:my-job:history'', ''history'')", span="27-27", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_16 [label="Commit(redis, x => x.ExpireJob(''my-job'', TimeSpan.FromDays(1)))", span="30-30", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_17 [label="var jobEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job'')", span="33-33", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_18 [label="var stateEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'')", span="34-34", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_19 [label="var historyEntryTtl = redis.GetTimeToLive(''hangfire:job:my-job:state'')", span="35-35", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_29 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_20 [label="Assert.True(TimeSpan.FromHours(23) < jobEntryTtl && jobEntryTtl < TimeSpan.FromHours(25))", span="37-37", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_21 [label="Assert.True(TimeSpan.FromHours(23) < stateEntryTtl && stateEntryTtl < TimeSpan.FromHours(25))", span="38-38", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_22 [label="Assert.True(TimeSpan.FromHours(23) < historyEntryTtl && historyEntryTtl < TimeSpan.FromHours(25))", span="39-39", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_23 [label="Exit lambda expression", span="22-40", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_30 [label="x.ExpireJob(''my-job'', TimeSpan.FromDays(1))", span="30-30", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_31 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_37 [label="Entry lambda expression", span="46-59", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_38 [label="var state = new Mock<IState>()", span="49-49", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_41 [label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", span="54-54", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_42 [label="var hash = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="57-57", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_39 [label="state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>())", span="50-50", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_40 [label="state.Setup(x => x.Name).Returns(''my-state'')", span="51-51", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_59 [label="x.SetJobState(''my-job'', state.Object)", span="54-54", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_51 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_55 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_58 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_43 [label="Assert.Equal(''my-state'', hash[''State''])", span="58-58", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_44 [label="Exit lambda expression", span="46-59", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_52 [label="x.SerializeData()", span="50-50", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_53 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_56 [label="x.Name", span="51-51", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_57 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_60 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_65 [label="Entry lambda expression", span="65-88", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_66 [label="redis.SetEntryInHash(''hangfire:job:my-job:state'', ''OldName'', ''OldValue'')", span="68-68", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_71 [label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", span="80-80", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_72 [label="var stateHash = redis.GetAllEntriesFromHash(''hangfire:job:my-job:state'')", span="83-83", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_67 [label="var state = new Mock<IState>()", span="70-70", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_68 [label="state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''Name'', ''Value'' }\r\n                    })", span="71-75", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_69 [label="state.Setup(x => x.Name).Returns(''my-state'')", span="76-76", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_70 [label="state.Setup(x => x.Reason).Returns(''my-reason'')", span="77-77", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_91 [label="x.SetJobState(''my-job'', state.Object)", span="80-80", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_81 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_84 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_87 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_90 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_73 [label="Assert.False(stateHash.ContainsKey(''OldName''))", span="84-84", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_74 [label="Assert.Equal(''my-state'', stateHash[''State''])", span="85-85", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_75 [label="Assert.Equal(''my-reason'', stateHash[''Reason''])", span="86-86", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_76 [label="Assert.Equal(''Value'', stateHash[''Name''])", span="87-87", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_77 [label="Exit lambda expression", span="65-88", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_82 [label="x.SerializeData()", span="71-71", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_83 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_85 [label="x.Name", span="76-76", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_86 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_88 [label="x.Reason", span="77-77", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_89 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_92 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_96 [label="Entry lambda expression", span="94-106", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_97 [label="var state = new Mock<IState>()", span="97-97", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_100 [label="Commit(redis, x => x.SetJobState(''my-job'', state.Object))", span="102-102", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_101 [label="Assert.Equal(1, redis.GetListCount(''hangfire:job:my-job:history''))", span="105-105", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_98 [label="state.Setup(x => x.Name).Returns(''my-state'')", span="98-98", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_99 [label="state.Setup(x => x.SerializeData()).Returns(new Dictionary<string, string>())", span="99-99", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_111 [label="x.SetJobState(''my-job'', state.Object)", span="102-102", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_104 [label="Entry lambda expression", span="98-98", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_107 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_110 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_102 [label="Exit lambda expression", span="94-106", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_105 [label="x.Name", span="98-98", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_106 [label="Exit lambda expression", span="98-98", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_108 [label="x.SerializeData()", span="99-99", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_109 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_112 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_116 [label="Entry lambda expression", span="112-126", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_117 [label="redis.SetEntry(''hangfire:job:my-job'', ''job'', TimeSpan.FromDays(1))", span="115-115", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_118 [label="redis.SetEntry(''hangfire:job:my-job:state'', ''state'', TimeSpan.FromDays(1))", span="116-116", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_119 [label="redis.SetEntry(''hangfire:job:my-job:history'', ''history'', TimeSpan.FromDays(1))", span="117-117", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_120 [label="Commit(redis, x => x.PersistJob(''my-job''))", span="120-120", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_121 [label="Assert.True(redis.GetTimeToLive(''hangfire:job:my-job'') < TimeSpan.Zero)", span="123-123", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_122 [label="Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:state'') < TimeSpan.Zero)", span="124-124", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_123 [label="Assert.True(redis.GetTimeToLive(''hangfire:job:my-job:history'') < TimeSpan.Zero)", span="125-125", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_125 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_124 [label="Exit lambda expression", span="112-126", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_126 [label="x.PersistJob(''my-job'')", span="120-120", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_127 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_132 [label="Entry lambda expression", span="132-153", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_133 [label="var state = new Mock<IState>()", span="135-135", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_137 [label="Commit(redis, x => x.AddJobState(''my-job'', state.Object))", span="142-142", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_138 [label="var serializedEntry = redis.GetItemFromList(''hangfire:job:my-job:history'', 0)", span="145-145", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_134 [label="state.Setup(x => x.Name).Returns(''my-state'')", span="136-136", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_135 [label="state.Setup(x => x.Reason).Returns(''my-reason'')", span="137-137", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_136 [label="state.Setup(x => x.SerializeData()).Returns(\r\n                    new Dictionary<string, string> { { ''Name'', ''Value'' } })", span="138-139", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_159 [label="x.AddJobState(''my-job'', state.Object)", span="142-142", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_149 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_152 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_155 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_158 [label="Entry lambda expression", span="142-142", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_139 [label="Assert.NotNull(serializedEntry)", span="146-146", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_140 [label="var entry = JobHelper.FromJson<Dictionary<string, string>>(serializedEntry)", span="148-148", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_141 [label="Assert.Equal(''my-state'', entry[''State''])", span="149-149", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_142 [label="Assert.Equal(''my-reason'', entry[''Reason''])", span="150-150", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_143 [label="Assert.Equal(''Value'', entry[''Name''])", span="151-151", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_144 [label="Assert.True(entry.ContainsKey(''CreatedAt''))", span="152-152", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_145 [label="Exit lambda expression", span="132-153", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_150 [label="x.Name", span="136-136", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_151 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_153 [label="x.Reason", span="137-137", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_154 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_156 [label="x.SerializeData()", span="138-138", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_157 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_160 [label="Exit lambda expression", span="142-142", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_165 [label="Entry lambda expression", span="159-165", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_166 [label="Commit(redis, x => x.AddToQueue(''critical'', ''my-job''))", span="161-161", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_167 [label="Assert.True(redis.SetContainsItem(''hangfire:queues'', ''critical''))", span="163-163", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_168 [label="Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0))", span="164-164", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_171 [label="Entry lambda expression", span="161-161", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_169 [label="Exit lambda expression", span="159-165", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_172 [label="x.AddToQueue(''critical'', ''my-job'')", span="161-161", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_173 [label="Exit lambda expression", span="161-161", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_178 [label="Entry lambda expression", span="171-178", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_179 [label="redis.EnqueueItemOnList(''hangfire:queue:critical'', ''another-job'')", span="173-173", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_180 [label="Commit(redis, x => x.AddToQueue(''critical'', ''my-job''))", span="175-175", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_181 [label="Assert.Equal(''my-job'', redis.GetItemFromList(''hangfire:queue:critical'', 0))", span="177-177", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_184 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_182 [label="Exit lambda expression", span="171-178", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_185 [label="x.AddToQueue(''critical'', ''my-job'')", span="175-175", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_186 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_190 [label="Entry lambda expression", span="184-192", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_191 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="186-186", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_192 [label="Commit(redis, x => x.IncrementCounter(''entry''))", span="188-188", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_193 [label="Assert.Equal(''4'', redis.GetValue(''hangfire:entry''))", span="190-190", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_194 [label="Assert.True(redis.GetTimeToLive(''hangfire:entry'') < TimeSpan.Zero)", span="191-191", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_197 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_195 [label="Exit lambda expression", span="184-192", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_198 [label="x.IncrementCounter(''entry'')", span="188-188", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_199 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_204 [label="Entry lambda expression", span="198-207", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_205 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="200-200", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_206 [label="Commit(redis, x => x.IncrementCounter(''entry'', TimeSpan.FromDays(1)))", span="202-202", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_207 [label="var entryTtl = redis.GetTimeToLive(''hangfire:entry'')", span="204-204", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_208 [label="Assert.Equal(''4'', redis.GetValue(''hangfire:entry''))", span="205-205", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_211 [label="Entry lambda expression", span="202-202", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_209 [label="Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25))", span="206-206", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_210 [label="Exit lambda expression", span="198-207", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_212 [label="x.IncrementCounter(''entry'', TimeSpan.FromDays(1))", span="202-202", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_213 [label="Exit lambda expression", span="202-202", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_218 [label="Entry lambda expression", span="213-221", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_219 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="215-215", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_220 [label="Commit(redis, x => x.DecrementCounter(''entry''))", span="217-217", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_221 [label="Assert.Equal(''2'', redis.GetValue(''hangfire:entry''))", span="219-219", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_222 [label="Assert.True(redis.GetTimeToLive(''entry'') < TimeSpan.Zero)", span="220-220", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_224 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_223 [label="Exit lambda expression", span="213-221", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_225 [label="x.DecrementCounter(''entry'')", span="217-217", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_226 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_231 [label="Entry lambda expression", span="227-236", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_232 [label="redis.SetEntry(''hangfire:entry'', ''3'')", span="229-229", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_233 [label="Commit(redis, x => x.DecrementCounter(''entry'', TimeSpan.FromDays(1)))", span="231-231", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_234 [label="var entryTtl = redis.GetTimeToLive(''hangfire:entry'')", span="233-233", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_235 [label="Assert.Equal(''2'', redis.GetValue(''hangfire:entry''))", span="234-234", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_238 [label="Entry lambda expression", span="231-231", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_236 [label="Assert.True(TimeSpan.FromHours(23) < entryTtl && entryTtl < TimeSpan.FromHours(25))", span="235-235", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_237 [label="Exit lambda expression", span="227-236", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_239 [label="x.DecrementCounter(''entry'', TimeSpan.FromDays(1))", span="231-231", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_240 [label="Exit lambda expression", span="231-231", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_245 [label="Entry lambda expression", span="242-247", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_246 [label="Commit(redis, x => x.AddToSet(''my-set'', ''my-value''))", span="244-244", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_247 [label="Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="246-246", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_250 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_248 [label="Exit lambda expression", span="242-247", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_251 [label="x.AddToSet(''my-set'', ''my-value'')", span="244-244", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_252 [label="Exit lambda expression", span="244-244", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_257 [label="Entry lambda expression", span="253-259", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_258 [label="Commit(redis, x => x.AddToSet(''my-set'', ''my-value'', 3.2))", span="255-255", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_259 [label="Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="257-257", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_260 [label="Assert.Equal(3.2, redis.GetItemScoreInSortedSet(''hangfire:my-set'', ''my-value''), 3)", span="258-258", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_263 [label="Entry lambda expression", span="255-255", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_261 [label="Exit lambda expression", span="253-259", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_264 [label="x.AddToSet(''my-set'', ''my-value'', 3.2)", span="255-255", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_265 [label="Exit lambda expression", span="255-255", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_270 [label="Entry lambda expression", span="265-272", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_271 [label="redis.AddItemToSortedSet(''hangfire:my-set'', ''my-value'')", span="267-267", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_272 [label="Commit(redis, x => x.RemoveFromSet(''my-set'', ''my-value''))", span="269-269", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_273 [label="Assert.False(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''))", span="271-271", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_276 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_274 [label="Exit lambda expression", span="265-272", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_277 [label="x.RemoveFromSet(''my-set'', ''my-value'')", span="269-269", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_278 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_283 [label="Entry lambda expression", span="278-285", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_284 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="280-280", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_285 [label="Commit(redis, x => x.InsertToList(''list'', ''new-value''))", span="282-282", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_286 [label="Assert.Equal(''new-value'', redis.GetItemFromList(''hangfire:list'', 0))", span="284-284", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_289 [label="Entry lambda expression", span="282-282", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_287 [label="Exit lambda expression", span="278-285", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_290 [label="x.InsertToList(''list'', ''new-value'')", span="282-282", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_291 [label="Exit lambda expression", span="282-282", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_296 [label="Entry lambda expression", span="291-301", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_297 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="293-293", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_298 [label="redis.AddItemToList(''hangfire:list'', ''another-value'')", span="294-294", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_299 [label="redis.AddItemToList(''hangfire:list'', ''value'')", span="295-295", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_300 [label="Commit(redis, x => x.RemoveFromList(''list'', ''value''))", span="297-297", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_301 [label="Assert.Equal(1, redis.GetListCount(''hangfire:list''))", span="299-299", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_302 [label="Assert.Equal(''another-value'', redis.GetItemFromList(''hangfire:list'', 0))", span="300-300", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_304 [label="Entry lambda expression", span="297-297", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_303 [label="Exit lambda expression", span="291-301", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_305 [label="x.RemoveFromList(''list'', ''value'')", span="297-297", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_306 [label="Exit lambda expression", span="297-297", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_311 [label="Entry lambda expression", span="307-319", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_312 [label="redis.AddItemToList(''hangfire:list'', ''1'')", span="309-309", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_313 [label="redis.AddItemToList(''hangfire:list'', ''2'')", span="310-310", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_314 [label="redis.AddItemToList(''hangfire:list'', ''3'')", span="311-311", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_315 [label="redis.AddItemToList(''hangfire:list'', ''4'')", span="312-312", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_316 [label="Commit(redis, x => x.TrimList(''list'', 1, 2))", span="314-314", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_317 [label="Assert.Equal(2, redis.GetListCount(''hangfire:list''))", span="316-316", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_318 [label="Assert.Equal(''2'', redis.GetItemFromList(''hangfire:list'', 0))", span="317-317", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_319 [label="Assert.Equal(''3'', redis.GetItemFromList(''hangfire:list'', 1))", span="318-318", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_321 [label="Entry lambda expression", span="314-314", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_320 [label="Exit lambda expression", span="307-319", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_322 [label="x.TrimList(''list'', 1, 2)", span="314-314", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_323 [label="Exit lambda expression", span="314-314", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_328 [label="Entry lambda expression", span="325-331", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_329 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(redis, x => x.SetRangeInHash(null, new Dictionary<string, string>())))", span="327-328", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_333 [label="Commit(redis, x => x.SetRangeInHash(null, new Dictionary<string, string>()))", span="328-328", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_330 [label="Assert.Equal(''key'', exception.ParamName)", span="330-330", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_332 [label="Entry lambda expression", span="328-328", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_331 [label="Exit lambda expression", span="325-331", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_334 [label="Exit lambda expression", span="328-328", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_335 [label="Entry lambda expression", span="328-328", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_336 [label="x.SetRangeInHash(null, new Dictionary<string, string>())", span="328-328", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_337 [label="Exit lambda expression", span="328-328", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_342 [label="Entry lambda expression", span="337-343", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_343 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(redis, x => x.SetRangeInHash(''some-hash'', null)))", span="339-340", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_347 [label="Commit(redis, x => x.SetRangeInHash(''some-hash'', null))", span="340-340", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_344 [label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="342-342", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_346 [label="Entry lambda expression", span="340-340", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_345 [label="Exit lambda expression", span="337-343", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_348 [label="Exit lambda expression", span="340-340", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_349 [label="Entry lambda expression", span="340-340", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_350 [label="x.SetRangeInHash(''some-hash'', null)", span="340-340", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_351 [label="Exit lambda expression", span="340-340", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_355 [label="Entry lambda expression", span="349-360", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_356 [label="Commit(redis, x => x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                }))", span="351-355", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_357 [label="var hash = redis.GetAllEntriesFromHash(''hangfire:some-hash'')", span="357-357", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_358 [label="Assert.Equal(''Value1'', hash[''Key1''])", span="358-358", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_359 [label="Assert.Equal(''Value2'', hash[''Key2''])", span="359-359", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_360 [label="Exit lambda expression", span="349-360", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_362 [label="x.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="351-355", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_363 [label="Exit lambda expression", span="351-355", cluster="lambda expression", file="ServerJobDescriptor.cs"];
m47_170 [label="Entry Unk.SetContainsItem", span="", cluster="Unk.SetContainsItem", file="ServerJobDescriptor.cs"];
m47_266 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="161-161", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="ServerJobDescriptor.cs"];
m47_376 [label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15", cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="ServerJobDescriptor.cs"];
m47_200 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="133-133", cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="ServerJobDescriptor.cs"];
m47_33 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62", cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="ServerJobDescriptor.cs"];
m47_174 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="124-124", cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="ServerJobDescriptor.cs"];
m47_338 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="192-192", cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerJobDescriptor.cs"];
m47_196 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="ServerJobDescriptor.cs"];
m47_28 [label="Entry Unk.True", span="", cluster="Unk.True", file="ServerJobDescriptor.cs"];
m47_254 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", span="251-251", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="ServerJobDescriptor.cs"];
m47_255 [label="UseConnection(redis =>\r\n            {\r\n                Commit(redis, x => x.AddToSet(''my-set'', ''my-value'', 3.2));\r\n\r\n                Assert.True(redis.SortedSetContainsItem(''hangfire:my-set'', ''my-value''));\r\n                Assert.Equal(3.2, redis.GetItemScoreInSortedSet(''hangfire:my-set'', ''my-value''), 3);\r\n            })", span="253-259", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="ServerJobDescriptor.cs"];
m47_256 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", span="251-251", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.AddToSet_WithScore_AddsItemToSortedSetWithScore()", file="ServerJobDescriptor.cs"];
m47_189 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", span="182-182", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="ServerJobDescriptor.cs"];
m47_187 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", span="182-182", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="ServerJobDescriptor.cs"];
m47_188 [label="UseConnection(redis =>\r\n            {\r\n                redis.SetEntry(''hangfire:entry'', ''3'');\r\n\r\n                Commit(redis, x => x.IncrementCounter(''entry''));\r\n\r\n                Assert.Equal(''4'', redis.GetValue(''hangfire:entry''));\r\n                Assert.True(redis.GetTimeToLive(''hangfire:entry'') < TimeSpan.Zero);\r\n            })", span="184-192", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.IncrementCounter_IncrementValueEntry()", file="ServerJobDescriptor.cs"];
m47_48 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ServerJobDescriptor.cs"];
m47_325 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="323-323", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="ServerJobDescriptor.cs"];
m47_326 [label="UseConnection(redis =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => Commit(redis, x => x.SetRangeInHash(null, new Dictionary<string, string>())));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="325-331", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="ServerJobDescriptor.cs"];
m47_327 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="323-323", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="ServerJobDescriptor.cs"];
m47_307 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="179-179", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="ServerJobDescriptor.cs"];
m47_308 [label="Entry HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", span="305-305", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="ServerJobDescriptor.cs"];
m47_309 [label="UseConnection(redis =>\r\n            {\r\n                redis.AddItemToList(''hangfire:list'', ''1'');\r\n                redis.AddItemToList(''hangfire:list'', ''2'');\r\n                redis.AddItemToList(''hangfire:list'', ''3'');\r\n                redis.AddItemToList(''hangfire:list'', ''4'');\r\n\r\n                Commit(redis, x => x.TrimList(''list'', 1, 2));\r\n\r\n                Assert.Equal(2, redis.GetListCount(''hangfire:list''));\r\n                Assert.Equal(''2'', redis.GetItemFromList(''hangfire:list'', 0));\r\n                Assert.Equal(''3'', redis.GetItemFromList(''hangfire:list'', 1));\r\n            })", span="307-319", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="ServerJobDescriptor.cs"];
m47_310 [label="Exit HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", span="305-305", cluster="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts.TrimList_TrimsListToASpecifiedRange()", file="ServerJobDescriptor.cs"];
m47_7 [label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29", cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="ServerJobDescriptor.cs"];
m47_377 [label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts", span="", file="ServerJobDescriptor.cs"];
m47_378 [label=state, span="", file="ServerJobDescriptor.cs"];
m47_379 [label=state, span="", file="ServerJobDescriptor.cs"];
m47_380 [label=state, span="", file="ServerJobDescriptor.cs"];
m47_381 [label=state, span="", file="ServerJobDescriptor.cs"];
m47_382 [label=IRedisClient, span="", file="ServerJobDescriptor.cs"];
m47_383 [label=IRedisClient, span="", file="ServerJobDescriptor.cs"];
m48_0 [label="Entry HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", span="8-8", cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", file="ServerJobExceptionContext.cs"];
m48_1 [label="JobDescriptor = jobDescriptor", span="14-14", cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", color=red, community=0, file="ServerJobExceptionContext.cs"];
m48_2 [label="Exception = exception", span="15-15", cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", color=red, community=0, file="ServerJobExceptionContext.cs"];
m48_3 [label="Exit HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", span="8-8", cluster="HangFire.Filters.ServerJobExceptionContext.ServerJobExceptionContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor, System.Exception)", file="ServerJobExceptionContext.cs"];
m48_4 [label="HangFire.Filters.ServerJobExceptionContext", span="", file="ServerJobExceptionContext.cs"];
m49_76 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", span="31-31", cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", file="ServerJobInvoker.cs"];
m49_82 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="ServerJobInvoker.cs"];
m49_89 [label="Entry HangFire.Web.HtmlHelper.MarkupStackTrace(string)", span="110-110", cluster="HangFire.Web.HtmlHelper.MarkupStackTrace(string)", file="ServerJobInvoker.cs"];
m49_87 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="ServerJobInvoker.cs"];
m49_85 [label="Entry HangFire.Web.HtmlHelper.QueueLabel(HangFire.Common.JobMethod)", span="90-90", cluster="HangFire.Web.HtmlHelper.QueueLabel(HangFire.Common.JobMethod)", file="ServerJobInvoker.cs"];
m49_0 [label="Entry HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_1 [label="WriteLiteral(''\r\n'')", span="56-56", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_2 [label="Layout = new LayoutPage { Title = ''Failed Jobs'' }", span="68-68", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_3 [label="int from, perPage", span="70-70", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="72-72", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="73-73", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_9 [label="pager = new Pager(from, perPage, monitor.FailedCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/failed'')\r\n        }", span="80-83", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_6 [label="Pager pager", span="75-75", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_7 [label="JobList<FailedJobDto> failedJobs", span="76-76", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_8 [label="var monitor = JobStorage.Current.CreateMonitoring()", span="78-78", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_10 [label="failedJobs = monitor\r\n            .FailedJobs(pager.FromRecord, pager.RecordsPerPage)", span="85-86", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_12 [label="pager.TotalPageCount == 0", span="98-98", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_14 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="119-119", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_69 [label="Write(RenderPartial(new Paginator(pager)))", span="469-469", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_11 [label="WriteLiteral(''\r\n'')", span="93-93", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_17 [label=failedJobs, span="156-156", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_13 [label="WriteLiteral(''    <div class=\''alert alert-success\''>\r\n        You have no failed jobs at the mom'' +\r\n''ent.\r\n    </div>\r\n'')", span="104-105", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=red, community=0, file="ServerJobInvoker.cs"];
m49_15 [label="WriteLiteral(@''    <table class=''''table failed-table''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Id</th>\r\n                <th>Failed</th>\r\n                <th>Queue</th>\r\n                <th>Job type</th>\r\n                <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="132-143", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_16 [label="var index = 0", span="148-148", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_57 [label="Write(index++ == 0 ? ''display: block;'' : null)", span="389-389", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_18 [label="WriteLiteral(''                <tr class=\'''')", span="162-162", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_68 [label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="457-457", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_19 [label="Write(!job.Value.InFailedState ? ''obsolete-data'' : null)", span="167-167", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_20 [label="WriteLiteral(''\''>\r\n                    <td rowspan=\'''')", span="172-172", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_21 [label="Write(job.Value.InFailedState ? ''2'' : ''1'')", span="177-177", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_22 [label="WriteLiteral(''\''>\r\n                        <a href=\'''')", span="182-182", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_23 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="187-187", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_24 [label="WriteLiteral(''\''>\r\n                            '')", span="192-192", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_25 [label="Write(HtmlHelper.JobId(job.Key))", span="197-197", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_26 [label="WriteLiteral(''\r\n                        </a>\r\n'')", span="202-202", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_27 [label="!job.Value.InFailedState", span="207-207", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_28 [label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="213-214", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_29 [label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="224-224", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_30 [label="job.Value.FailedAt.HasValue", span="229-229", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_31 [label="WriteLiteral(''                            <span data-moment=\'''')", span="235-235", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_36 [label="WriteLiteral(''                    </td>\r\n                    <td>'')", span="265-265", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_32 [label="Write(JobHelper.ToStringTimestamp(job.Value.FailedAt.Value))", span="240-240", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_37 [label="Write(HtmlHelper.QueueLabel(job.Value.Method))", span="270-270", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_33 [label="WriteLiteral(''\''>\r\n                                '')", span="245-245", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_34 [label="Write(job.Value.FailedAt)", span="250-250", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_35 [label="WriteLiteral(''        \r\n                            </span>\r\n'')", span="255-255", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_38 [label="WriteLiteral(''</td>\r\n                    <td class=\'''')", span="275-275", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_39 [label="Write(job.Value.InFailedState ? ''expander'' : null)", span="280-280", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_40 [label="WriteLiteral(''\''>\r\n                        <div>\r\n                            <span title=\'''')", span="285-285", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_41 [label="Write(HtmlHelper.DisplayMethodHint(job.Value.Method))", span="290-290", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_42 [label="WriteLiteral(''\''>\r\n                                '')", span="295-295", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_43 [label="Write(HtmlHelper.DisplayMethod(job.Value.Method))", span="300-300", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_44 [label="WriteLiteral(''\r\n                            </span>\r\n                        </div>\r\n'')", span="305-305", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_45 [label="!String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="310-310", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_46 [label="WriteLiteral(''                            <div style=\''color: #888;\''>\r\n                         '' +\r\n''       '')", span="316-317", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_49 [label="WriteLiteral(''                    </td>\r\n                    <td>\r\n'')", span="337-337", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_47 [label="Write(job.Value.ExceptionMessage)", span="322-322", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_50 [label="job.Value.InFailedState", span="342-342", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_48 [label="WriteLiteral('' <span class=\''caret\''></span>\r\n                            </div>\r\n'')", span="327-327", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_51 [label="WriteLiteral(''                            <div class=\''pull-right\''>\r\n                           '' +\r\n''     <button class=\''btn btn-primary btn-sm\'' data-ajax=\'''')", span="348-349", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_54 [label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="372-372", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_52 [label="Write(Request.LinkTo(''/failed/retry/'' + job.Key))", span="354-354", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_55 [label="job.Value.InFailedState", span="377-377", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_53 [label="WriteLiteral(''\'' data-loading-text=\''Retrying...\''>\r\n                                    <span cla'' +\r\n''ss=\''glyphicon glyphicon-repeat\''></span>\r\n                                    Ret'' +\r\n''ry\r\n                                </button>\r\n                            </div'' +\r\n''>\r\n'')", span="359-362", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_56 [label="WriteLiteral(''                    <tr>\r\n                        <td colspan=\''4\'' class=\''failed-j'' +\r\n''ob-details\''>\r\n                            <div class=\''expandable\'' style=\'''')", span="383-384", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_59 [label="Write(job.Value.ExceptionType)", span="399-399", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_58 [label="WriteLiteral(''\''>\r\n                                <h4>'')", span="394-394", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_60 [label="WriteLiteral(''</h4>\r\n                                <p>\r\n                                    '')", span="404-404", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_61 [label="Write(job.Value.ExceptionMessage)", span="409-409", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_62 [label="WriteLiteral(''\r\n                                </p>\r\n                        \r\n'')", span="414-414", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_63 [label="!String.IsNullOrEmpty(job.Value.ExceptionDetails)", span="419-419", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_64 [label="WriteLiteral(''                                    <pre class=\''stack-trace\''>'')", span="425-425", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_67 [label="WriteLiteral(''                            </div>\r\n                        </td>\r\n              '' +\r\n''      </tr>\r\n'')", span="445-446", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_65 [label="Write(HtmlHelper.MarkupStackTrace(job.Value.ExceptionDetails))", span="430-430", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_66 [label="WriteLiteral(''</pre>\r\n'')", span="435-435", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_70 [label="Exit HangFire.Web.Pages.FailedJobsPage.Execute()", span="52-52", cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="ServerJobInvoker.cs"];
m49_75 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ServerJobInvoker.cs"];
m49_74 [label="Entry HangFire.JobStorage.CreateMonitoring()", span="43-43", cluster="HangFire.JobStorage.CreateMonitoring()", file="ServerJobInvoker.cs"];
m49_73 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="ServerJobInvoker.cs"];
m49_71 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServerJobInvoker.cs"];
m49_80 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ServerJobInvoker.cs"];
m49_88 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ServerJobInvoker.cs"];
m49_86 [label="Entry HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", span="45-45", cluster="HangFire.Web.HtmlHelper.DisplayMethodHint(HangFire.Common.JobMethod)", file="ServerJobInvoker.cs"];
m49_79 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ServerJobInvoker.cs"];
m49_78 [label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", span="26-26", cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", file="ServerJobInvoker.cs"];
m49_84 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServerJobInvoker.cs"];
m49_81 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="ServerJobInvoker.cs"];
m49_83 [label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="55-55", cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerJobInvoker.cs"];
m49_72 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServerJobInvoker.cs"];
m49_77 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="ServerJobInvoker.cs"];
m49_90 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ServerJobInvoker.cs"];
m49_91 [label="HangFire.Web.Pages.FailedJobsPage", span="", file="ServerJobInvoker.cs"];
m50_4 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="Worker.cs"];
m50_0 [label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="Worker.cs"];
m50_1 [label="ServerTimeout = TimeSpan.FromMinutes(5)", span="24-24", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="Worker.cs"];
m50_2 [label="CheckInterval = TimeSpan.FromMinutes(5)", span="25-25", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="Worker.cs"];
m50_3 [label="Exit Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22", cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="Worker.cs"];
m50_5 [label="Hangfire.Server.ServerWatchdogOptions", span="", file="Worker.cs"];
m51_12 [label="throw new ArgumentNullException(''action'');", span="31-31", cluster="HangFire.Server.WorkerContext.Redis(System.Action<IRedisClient>)", file="WorkerContext.cs", color=red, community=0];
m51_13 [label=_redis, span="33-33", cluster="HangFire.Server.WorkerContext.Redis(System.Action<IRedisClient>)", file="WorkerContext.cs", color=red, community=0];
m51_0 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="10-10", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="WorkerContext.cs"];
m51_3 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", span="16-16", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", color=green, community=0, file="WorkerContext.cs"];
m51_1 [label="Items = workerContext.Items", span="13-13", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="WorkerContext.cs", color=red, community=0];
m51_2 [label="Exit HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="10-10", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="WorkerContext.cs"];
m51_4 [label="_redis = redis", span="18-18", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", file="WorkerContext.cs", color=red, community=0];
m51_5 [label="ServerContext = serverContext", span="19-19", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", file="WorkerContext.cs", color=red, community=0];
m51_6 [label="WorkerNumber = workerNumber", span="20-20", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", file="WorkerContext.cs"];
m51_7 [label="Items = new Dictionary<string, object>()", span="22-22", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", file="WorkerContext.cs", color=red, community=0];
m51_8 [label="Exit HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", span="16-16", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", file="WorkerContext.cs"];
m51_56 [label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="291-291", cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="WorkerContext.cs"];
m51_63 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", span="153-153", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", file="WorkerContext.cs"];
m51_94 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", span="153-153", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method()", file="WorkerContext.cs"];
m51_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="WorkerContext.cs"];
m51_14 [label="action(_redis)", span="35-35", cluster="HangFire.Server.WorkerContext.Redis(System.Action<IRedisClient>)", file="WorkerContext.cs", color=red, community=0];
m51_15 [label="Exit HangFire.Server.WorkerContext.Redis(System.Action<IRedisClient>)", span="29-29", cluster="HangFire.Server.WorkerContext.Redis(System.Action<IRedisClient>)", file="WorkerContext.cs"];
m51_16 [label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="36-37", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_WrapsAnException_WithTheJobLoadException()", file="WorkerContext.cs"];
m51_17 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="WorkerContext.cs"];
m51_49 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="143-143", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", file="WorkerContext.cs"];
m51_91 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", span="143-143", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Sample(string)", file="WorkerContext.cs"];
m51_29 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="54-54", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="WorkerContext.cs"];
m51_30 [label="var serializedData = new InvocationData(\r\n                typeof(InvocationDataFacts).AssemblyQualifiedName,\r\n                ''NonExistingMethod'',\r\n                JobHelper.ToJson(new [] { typeof(string) }),\r\n                '''')", span="56-60", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="WorkerContext.cs"];
m51_31 [label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="62-63", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="WorkerContext.cs"];
m51_32 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", span="54-54", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenMethodCanNotBeFound()", file="WorkerContext.cs"];
m51_64 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", span="92-92", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="WorkerContext.cs"];
m51_66 [label="var job = serializedData.Deserialize()", span="97-97", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="WorkerContext.cs"];
m51_65 [label="var serializedData = InvocationData.Serialize(\r\n                Job.FromExpression<GenericType<string>>(x => x.Method(''asd'', 123)))", span="94-95", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="WorkerContext.cs"];
m51_67 [label="Assert.False(job.Method.ContainsGenericParameters)", span="99-99", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="WorkerContext.cs"];
m51_68 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", span="92-92", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericMethods_WithOpenTypeParameters()", file="WorkerContext.cs"];
m51_18 [label="HangFire.Server.WorkerContext", span="", cluster="Unk.>", file="WorkerContext.cs"];
m51_73 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", span="103-103", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="WorkerContext.cs"];
m51_74 [label="var serializedData = new InvocationData(\r\n                typeof(IParent).AssemblyQualifiedName,\r\n                ''Method'',\r\n                JobHelper.ToJson(new Type[0]),\r\n                JobHelper.ToJson(new string[0]))", span="105-109", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="WorkerContext.cs"];
m51_75 [label="var job = serializedData.Deserialize()", span="111-111", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="WorkerContext.cs"];
m51_76 [label="Assert.Equal(typeof(IParent), job.Type)", span="113-113", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="WorkerContext.cs"];
m51_77 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", span="103-103", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInInterfaces()", file="WorkerContext.cs"];
m51_58 [label="Entry Unk.False", span="", cluster="Unk.False", file="WorkerContext.cs"];
m51_72 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", span="154-154", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", file="WorkerContext.cs"];
m51_95 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", span="154-154", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.GenericType<T1>.Method<T2>(T1, T2)", file="WorkerContext.cs"];
m51_45 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="70-70", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="WorkerContext.cs"];
m51_36 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="67-67", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="WorkerContext.cs"];
m51_41 [label="Assert.Equal(JobHelper.ToJson(new[] { typeof(string) }), invocationData.ParameterTypes)", span="75-75", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="WorkerContext.cs"];
m51_42 [label="Assert.Equal(JobHelper.ToJson(new[] { ''\''Hello\'''' }), invocationData.Arguments)", span="76-76", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="WorkerContext.cs"];
m51_38 [label="var invocationData = InvocationData.Serialize(job)", span="71-71", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="WorkerContext.cs"];
m51_40 [label="Assert.Equal(''Sample'', invocationData.Method)", span="74-74", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="WorkerContext.cs"];
m51_39 [label="Assert.Equal(typeof(InvocationDataFacts).AssemblyQualifiedName, invocationData.Type)", span="73-73", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="WorkerContext.cs"];
m51_37 [label="var job = Job.FromExpression(() => Sample(''Hello''))", span="69-69", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="WorkerContext.cs"];
m51_43 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", span="67-67", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Serialize_CorrectlySerializesTheData()", file="WorkerContext.cs"];
m51_50 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", span="80-80", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="WorkerContext.cs"];
m51_52 [label="var job = serializedData.Deserialize()", span="85-85", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="WorkerContext.cs"];
m51_54 [label="Assert.Equal(typeof(string), job.Type.GetGenericArguments()[0])", span="88-88", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="WorkerContext.cs"];
m51_51 [label="var serializedData = InvocationData.Serialize(\r\n                Job.FromExpression<GenericType<string>>(x => x.Method()))", span="82-83", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="WorkerContext.cs"];
m51_53 [label="Assert.False(job.Type.GetTypeInfo().ContainsGenericParameters)", span="87-87", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="WorkerContext.cs"];
m51_55 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", span="80-80", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesGenericTypes()", file="WorkerContext.cs"];
m51_59 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="WorkerContext.cs"];
m51_11 [label="action == null", span="31-31", cluster="HangFire.Server.WorkerContext.Redis(System.Action<IRedisClient>)", file="WorkerContext.cs", color=red, community=0];
m51_69 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="WorkerContext.cs"];
m51_47 [label="Sample(''Hello'')", span="69-69", cluster="lambda expression", file="WorkerContext.cs"];
m51_46 [label="Entry lambda expression", span="69-69", cluster="lambda expression", file="WorkerContext.cs"];
m51_48 [label="Exit lambda expression", span="69-69", cluster="lambda expression", file="WorkerContext.cs"];
m51_20 [label="serializedData.Deserialize()", span="37-37", cluster="lambda expression", file="WorkerContext.cs"];
m51_27 [label="serializedData.Deserialize()", span="50-50", cluster="lambda expression", file="WorkerContext.cs"];
m51_34 [label="serializedData.Deserialize()", span="63-63", cluster="lambda expression", file="WorkerContext.cs"];
m51_89 [label="serializedData.Deserialize()", span="139-139", cluster="lambda expression", file="WorkerContext.cs"];
m51_19 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="WorkerContext.cs"];
m51_21 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="WorkerContext.cs"];
m51_26 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="WorkerContext.cs"];
m51_28 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="WorkerContext.cs"];
m51_33 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="WorkerContext.cs"];
m51_35 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="WorkerContext.cs"];
m51_88 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="WorkerContext.cs"];
m51_90 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="WorkerContext.cs"];
m51_60 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="WorkerContext.cs"];
m51_62 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="WorkerContext.cs"];
m51_61 [label="x.Method()", span="83-83", cluster="lambda expression", file="WorkerContext.cs"];
m51_70 [label="x.Method(''asd'', 123)", span="95-95", cluster="lambda expression", file="WorkerContext.cs"];
m51_71 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="WorkerContext.cs"];
m51_57 [label="Entry System.Type.GetTypeInfo()", span="0-0", cluster="System.Type.GetTypeInfo()", file="WorkerContext.cs"];
m51_22 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="41-41", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="WorkerContext.cs"];
m51_23 [label="var serializedData = new InvocationData(\r\n                ''NonExistingType'',\r\n                ''Perform'',\r\n                '''',\r\n                '''')", span="43-47", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="WorkerContext.cs"];
m51_24 [label="Assert.Throws<JobLoadException>(\r\n                () => serializedData.Deserialize())", span="49-50", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="WorkerContext.cs"];
m51_25 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", span="41-41", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_ThrowsAnException_WhenTypeCanNotBeFound()", file="WorkerContext.cs"];
m51_83 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", span="131-131", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="WorkerContext.cs"];
m51_84 [label="var serializedData = new InvocationData(\r\n                typeof(InvocationDataFacts).AssemblyQualifiedName,\r\n                ''ListMethod'',\r\n                JobHelper.ToJson(new [] { typeof(IList<string>) }),\r\n                JobHelper.ToJson(new [] { ''asdfasdf'' }))", span="133-137", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="WorkerContext.cs"];
m51_85 [label="var exception = Assert.Throws<JobLoadException>(() => serializedData.Deserialize())", span="139-139", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="WorkerContext.cs"];
m51_86 [label="Assert.IsType<JsonReaderException>(exception.InnerException)", span="140-140", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="WorkerContext.cs"];
m51_87 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", span="131-131", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_RethrowsJsonException_InsteadOfNullValue_WhenReferenceConverterChosen()", file="WorkerContext.cs"];
m51_10 [label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="31-31", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="WorkerContext.cs"];
m51_78 [label="Entry Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", span="117-117", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="WorkerContext.cs"];
m51_79 [label="var serializedData = new InvocationData(\r\n                typeof(IChild).AssemblyQualifiedName,\r\n                ''Method'',\r\n                JobHelper.ToJson(new Type[0]),\r\n                JobHelper.ToJson(new string[0]))", span="119-123", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="WorkerContext.cs"];
m51_80 [label="var job = serializedData.Deserialize()", span="125-125", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="WorkerContext.cs"];
m51_81 [label="Assert.Equal(typeof(IChild), job.Type)", span="127-127", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="WorkerContext.cs"];
m51_82 [label="Exit Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", span="117-117", cluster="Hangfire.Core.Tests.Storage.InvocationDataFacts.Deserialize_HandlesMethodsDefinedInParentInterfaces()", file="WorkerContext.cs"];
m51_44 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="233-233", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerContext.cs"];
m51_98 [label=serializedData, span="", file="WorkerContext.cs"];
m51_99 [label=serializedData, span="", file="WorkerContext.cs"];
m51_100 [label=serializedData, span="", file="WorkerContext.cs"];
m51_101 [label=serializedData, span="", file="WorkerContext.cs"];
m52_9 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="WorkerPool.cs"];
m52_10 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="WorkerPool.cs"];
m52_0 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="WorkerPool.cs"];
m52_1 [label="TransactionIsolationLevel = IsolationLevel.Serializable", span="27-27", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="WorkerPool.cs"];
m52_2 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="WorkerPool.cs"];
m52_3 [label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="29-29", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="WorkerPool.cs"];
m52_4 [label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=red, community=0, file="WorkerPool.cs"];
m52_5 [label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=red, community=0, file="WorkerPool.cs"];
m52_6 [label="PrepareSchemaIfNecessary = true", span="32-32", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", color=red, community=0, file="WorkerPool.cs"];
m52_7 [label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="WorkerPool.cs"];
m52_11 [label="Hangfire.SqlServer.SqlServerStorageOptions", span="", file="WorkerPool.cs"];
n263 -> n7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n187  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n201  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n211  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n217  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n223  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n240  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n246  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n255  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n263 -> n261  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n2 -> n5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
n2 -> n7  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
n2 -> n8  [key=1, style=dashed, color=darkseagreen4, label=IsolationLevel];
n2 -> n9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
n2 -> n10  [key=1, style=dashed, color=darkseagreen4, label=bool];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=0, style=solid];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n10 -> n11  [key=0, style=solid];
n4 -> n11  [key=0, style=solid];
n4 -> n12  [key=2, style=dotted];
n6 -> n11  [key=0, style=solid];
n6 -> n12  [key=2, style=dotted];
n11 -> n2  [key=0, style=bold, color=blue];
n13 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=2, style=dotted];
n16 -> n13  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n20 -> n18  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=2, style=dotted];
n23 -> n26  [key=2, style=dotted];
n24 -> n22  [key=0, style=bold, color=blue];
n27 -> n28  [key=0, style=solid];
n27 -> n30  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n27 -> n32  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n27 -> n34  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n36  [key=2, style=dotted];
n30 -> n37  [key=2, style=dotted];
n30 -> n38  [key=2, style=dotted];
n30 -> n43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n30 -> n33  [key=1, style=dashed, color=darkseagreen4, label=providers];
n32 -> n35  [key=0, style=solid];
n32 -> n39  [key=2, style=dotted];
n32 -> n40  [key=2, style=dotted];
n32 -> n26  [key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n42  [key=2, style=dotted];
n29 -> n35  [key=0, style=solid];
n29 -> n12  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n41  [key=2, style=dotted];
n35 -> n27  [key=0, style=bold, color=blue];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [key=2, style=dotted];
n45 -> n43  [key=0, style=bold, color=blue];
n47 -> n48  [key=0, style=solid];
n47 -> n50  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
n47 -> n53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
n47 -> n54  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
n47 -> n55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
n47 -> n56  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
n47 -> n58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
n48 -> n49  [key=0, style=solid];
n48 -> n50  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n50 -> n52  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n64  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n65  [key=2, style=dotted];
n54 -> n66  [key=2, style=dotted];
n54 -> n67  [key=2, style=dotted];
n54 -> n68  [key=2, style=dotted];
n54 -> n69  [key=2, style=dotted];
n54 -> n59  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n54 -> n62  [key=1, style=dashed, color=darkseagreen4, label=jobId];
n55 -> n56  [key=0, style=solid];
n55 -> n62  [key=0, style=solid];
n56 -> n57  [key=0, style=solid];
n56 -> n59  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
n56 -> n61  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
n58 -> n59  [key=0, style=solid];
n58 -> n60  [key=0, style=solid];
n49 -> n63  [key=0, style=solid];
n49 -> n12  [key=2, style=dotted];
n51 -> n63  [key=0, style=solid];
n51 -> n12  [key=2, style=dotted];
n52 -> n53  [key=0, style=solid];
n52 -> n54  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
n59 -> n58  [key=0, style=solid];
n59 -> n59  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
n62 -> n63  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n57 -> n59  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
n61 -> n62  [key=0, style=solid];
n61 -> n70  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n63 -> n47  [key=0, style=bold, color=blue];
n71 -> n72  [key=0, style=solid];
n71 -> n75  [key=1, style=dashed, color=darkseagreen4, label=string];
n72 -> n73  [key=0, style=solid];
n72 -> n74  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n75 -> n67  [key=2, style=dotted];
n75 -> n87  [key=2, style=dotted];
n75 -> n78  [key=1, style=dashed, color=darkseagreen4, label=jobData];
n75 -> n79  [key=1, style=dashed, color=darkseagreen4, label=jobData];
n75 -> n85  [key=1, style=dashed, color=darkseagreen4, label=jobData];
n73 -> n86  [key=0, style=solid];
n73 -> n12  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n76 -> n77  [key=0, style=solid];
n76 -> n78  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n78 -> n67  [key=2, style=dotted];
n78 -> n82  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
n79 -> n80  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n85 -> n89  [key=2, style=dotted];
n77 -> n86  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n82 -> n85  [key=0, style=solid];
n82 -> n88  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n86 -> n71  [key=0, style=bold, color=blue];
n90 -> n91  [key=0, style=solid];
n90 -> n94  [key=1, style=dashed, color=darkseagreen4, label=string];
n91 -> n92  [key=0, style=solid];
n91 -> n93  [key=0, style=solid];
n94 -> n95  [key=0, style=solid];
n94 -> n67  [key=2, style=dotted];
n94 -> n87  [key=2, style=dotted];
n94 -> n97  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
n94 -> n98  [key=1, style=dashed, color=darkseagreen4, label=sqlState];
n92 -> n99  [key=0, style=solid];
n92 -> n12  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n95 -> n97  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n100  [key=2, style=dotted];
n97 -> n67  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n101  [key=2, style=dotted];
n96 -> n99  [key=0, style=solid];
n99 -> n90  [key=0, style=bold, color=blue];
n102 -> n103  [key=0, style=solid];
n102 -> n105  [key=1, style=dashed, color=darkseagreen4, label=string];
n102 -> n107  [key=1, style=dashed, color=darkseagreen4, label=string];
n103 -> n104  [key=0, style=solid];
n103 -> n105  [key=0, style=solid];
n105 -> n106  [key=0, style=solid];
n105 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n70  [key=2, style=dotted];
n104 -> n108  [key=0, style=solid];
n104 -> n12  [key=2, style=dotted];
n106 -> n108  [key=0, style=solid];
n106 -> n12  [key=2, style=dotted];
n108 -> n102  [key=0, style=bold, color=blue];
n109 -> n110  [key=0, style=solid];
n109 -> n112  [key=1, style=dashed, color=darkseagreen4, label=string];
n109 -> n114  [key=1, style=dashed, color=darkseagreen4, label=string];
n110 -> n111  [key=0, style=solid];
n110 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n112 -> n114  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n114 -> n67  [key=2, style=dotted];
n114 -> n87  [key=2, style=dotted];
n111 -> n115  [key=0, style=solid];
n111 -> n12  [key=2, style=dotted];
n113 -> n115  [key=0, style=solid];
n113 -> n12  [key=2, style=dotted];
n115 -> n109  [key=0, style=bold, color=blue];
n116 -> n117  [key=0, style=solid];
n116 -> n119  [key=1, style=dashed, color=darkseagreen4, label=string];
n117 -> n118  [key=0, style=solid];
n117 -> n119  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n67  [key=2, style=dotted];
n118 -> n121  [key=0, style=solid];
n118 -> n12  [key=2, style=dotted];
n120 -> n121  [key=0, style=solid];
n120 -> n122  [key=2, style=dotted];
n121 -> n116  [key=0, style=bold, color=blue];
n123 -> n124  [key=0, style=solid];
n123 -> n126  [key=1, style=dashed, color=darkseagreen4, label=double];
n123 -> n128  [key=1, style=dashed, color=darkseagreen4, label=string];
n124 -> n125  [key=0, style=solid];
n124 -> n126  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n128 -> n67  [key=2, style=dotted];
n128 -> n87  [key=2, style=dotted];
n125 -> n129  [key=0, style=solid];
n125 -> n12  [key=2, style=dotted];
n127 -> n129  [key=0, style=solid];
n127 -> n130  [key=2, style=dotted];
n129 -> n123  [key=0, style=bold, color=blue];
n131 -> n132  [key=0, style=solid];
n131 -> n134  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
n131 -> n138  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
n131 -> n139  [key=1, style=dashed, color=darkseagreen4, label=string];
n132 -> n133  [key=0, style=solid];
n132 -> n134  [key=0, style=solid];
n134 -> n135  [key=0, style=solid];
n134 -> n136  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n138 -> n140  [key=0, style=solid];
n139 -> n138  [key=0, style=solid];
n139 -> n70  [key=2, style=dotted];
n139 -> n139  [key=1, style=dashed, color=darkseagreen4, label=keyValuePair];
n133 -> n141  [key=0, style=solid];
n133 -> n12  [key=2, style=dotted];
n135 -> n141  [key=0, style=solid];
n135 -> n12  [key=2, style=dotted];
n136 -> n137  [key=0, style=solid];
n136 -> n139  [key=1, style=dashed, color=darkseagreen4, label=sql];
n137 -> n138  [key=0, style=solid];
n137 -> n142  [key=2, style=dotted];
n137 -> n140  [key=1, style=dashed, color=darkseagreen4, label=transaction];
n140 -> n141  [key=0, style=solid];
n140 -> n143  [key=2, style=dotted];
n141 -> n131  [key=0, style=bold, color=blue];
n144 -> n145  [key=0, style=solid];
n144 -> n147  [key=1, style=dashed, color=darkseagreen4, label=string];
n145 -> n146  [key=0, style=solid];
n145 -> n147  [key=0, style=solid];
n147 -> n148  [key=0, style=solid];
n147 -> n67  [key=2, style=dotted];
n147 -> n150  [key=2, style=dotted];
n147 -> n151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n147 -> n154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n146 -> n149  [key=0, style=solid];
n146 -> n12  [key=2, style=dotted];
n148 -> n149  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n154 -> n155  [key=0, style=solid];
n149 -> n144  [key=0, style=bold, color=blue];
n152 -> n153  [key=0, style=solid];
n153 -> n151  [key=0, style=bold, color=blue];
n155 -> n156  [key=0, style=solid];
n156 -> n154  [key=0, style=bold, color=blue];
n157 -> n158  [key=0, style=solid];
n157 -> n160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
n157 -> n162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerContext"];
n157 -> n163  [key=1, style=dashed, color=darkseagreen4, label=string];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [key=0, style=solid];
n160 -> n161  [key=0, style=solid];
n160 -> n162  [key=0, style=solid];
n162 -> n163  [key=0, style=solid];
n162 -> n165  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n163 -> n65  [key=2, style=dotted];
n163 -> n70  [key=2, style=dotted];
n159 -> n164  [key=0, style=solid];
n159 -> n12  [key=2, style=dotted];
n161 -> n164  [key=0, style=solid];
n161 -> n12  [key=2, style=dotted];
n164 -> n157  [key=0, style=bold, color=blue];
n166 -> n167  [key=0, style=solid];
n166 -> n169  [key=1, style=dashed, color=darkseagreen4, label=string];
n167 -> n168  [key=0, style=solid];
n167 -> n169  [key=0, style=solid];
n169 -> n170  [key=0, style=solid];
n169 -> n70  [key=2, style=dotted];
n168 -> n170  [key=0, style=solid];
n168 -> n12  [key=2, style=dotted];
n170 -> n166  [key=0, style=bold, color=blue];
n171 -> n172  [key=0, style=solid];
n171 -> n174  [key=1, style=dashed, color=darkseagreen4, label=string];
n172 -> n173  [key=0, style=solid];
n172 -> n174  [key=0, style=solid];
n174 -> n175  [key=0, style=solid];
n174 -> n70  [key=2, style=dotted];
n173 -> n175  [key=0, style=solid];
n173 -> n12  [key=2, style=dotted];
n175 -> n171  [key=0, style=bold, color=blue];
n176 -> n177  [key=0, style=solid];
n177 -> n178  [key=0, style=solid];
n177 -> n179  [key=0, style=solid];
n177 -> n181  [key=2, style=dotted];
n177 -> n177  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n178 -> n180  [key=0, style=solid];
n178 -> n182  [key=2, style=dotted];
n179 -> n180  [key=0, style=solid];
n179 -> n183  [key=2, style=dotted];
n179 -> n66  [key=2, style=dotted];
n179 -> n70  [key=2, style=dotted];
n179 -> n179  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
n180 -> n176  [key=0, style=bold, color=blue];
n184 -> n185  [key=0, style=solid];
n184 -> n187  [key=1, style=dashed, color=darkseagreen4, label=string];
n185 -> n186  [key=0, style=solid];
n185 -> n187  [key=0, style=solid];
n187 -> n188  [key=0, style=solid];
n187 -> n67  [key=2, style=dotted];
n187 -> n189  [key=2, style=dotted];
n186 -> n188  [key=0, style=solid];
n186 -> n12  [key=2, style=dotted];
n188 -> n184  [key=0, style=bold, color=blue];
n190 -> n191  [key=0, style=solid];
n190 -> n194  [key=1, style=dashed, color=darkseagreen4, label=string];
n191 -> n192  [key=0, style=solid];
n191 -> n193  [key=0, style=solid];
n194 -> n195  [key=0, style=solid];
n194 -> n67  [key=2, style=dotted];
n194 -> n196  [key=2, style=dotted];
n192 -> n195  [key=0, style=solid];
n192 -> n12  [key=2, style=dotted];
n193 -> n194  [key=0, style=solid];
n195 -> n190  [key=0, style=bold, color=blue];
n197 -> n198  [key=0, style=solid];
n197 -> n201  [key=1, style=dashed, color=darkseagreen4, label=string];
n198 -> n199  [key=0, style=solid];
n198 -> n200  [key=0, style=solid];
n201 -> n202  [key=0, style=solid];
n201 -> n67  [key=2, style=dotted];
n201 -> n68  [key=2, style=dotted];
n201 -> n204  [key=1, style=dashed, color=darkseagreen4, label=result];
n199 -> n205  [key=0, style=solid];
n199 -> n12  [key=2, style=dotted];
n200 -> n201  [key=0, style=solid];
n202 -> n203  [key=0, style=solid];
n202 -> n204  [key=0, style=solid];
n204 -> n205  [key=0, style=solid];
n203 -> n205  [key=0, style=solid];
n203 -> n206  [key=2, style=dotted];
n205 -> n197  [key=0, style=bold, color=blue];
n207 -> n208  [key=0, style=solid];
n207 -> n211  [key=1, style=dashed, color=darkseagreen4, label=string];
n208 -> n209  [key=0, style=solid];
n208 -> n210  [key=0, style=solid];
n211 -> n212  [key=0, style=solid];
n211 -> n67  [key=2, style=dotted];
n211 -> n68  [key=2, style=dotted];
n209 -> n212  [key=0, style=solid];
n209 -> n12  [key=2, style=dotted];
n210 -> n211  [key=0, style=solid];
n212 -> n207  [key=0, style=bold, color=blue];
n213 -> n214  [key=0, style=solid];
n213 -> n217  [key=1, style=dashed, color=darkseagreen4, label=string];
n214 -> n215  [key=0, style=solid];
n214 -> n216  [key=0, style=solid];
n217 -> n218  [key=0, style=solid];
n217 -> n67  [key=2, style=dotted];
n217 -> n68  [key=2, style=dotted];
n215 -> n218  [key=0, style=solid];
n215 -> n12  [key=2, style=dotted];
n216 -> n217  [key=0, style=solid];
n218 -> n213  [key=0, style=bold, color=blue];
n219 -> n220  [key=0, style=solid];
n219 -> n223  [key=1, style=dashed, color=darkseagreen4, label=string];
n220 -> n221  [key=0, style=solid];
n220 -> n222  [key=0, style=solid];
n223 -> n224  [key=0, style=solid];
n223 -> n67  [key=2, style=dotted];
n223 -> n68  [key=2, style=dotted];
n223 -> n226  [key=1, style=dashed, color=darkseagreen4, label=result];
n221 -> n227  [key=0, style=solid];
n221 -> n12  [key=2, style=dotted];
n222 -> n223  [key=0, style=solid];
n224 -> n225  [key=0, style=solid];
n224 -> n226  [key=0, style=solid];
n226 -> n227  [key=0, style=solid];
n225 -> n227  [key=0, style=solid];
n225 -> n206  [key=2, style=dotted];
n227 -> n219  [key=0, style=bold, color=blue];
n228 -> n229  [key=0, style=solid];
n228 -> n231  [key=1, style=dashed, color=darkseagreen4, label=string];
n228 -> n234  [key=1, style=dashed, color=darkseagreen4, label=string];
n229 -> n230  [key=0, style=solid];
n229 -> n231  [key=0, style=solid];
n231 -> n232  [key=0, style=solid];
n231 -> n233  [key=0, style=solid];
n234 -> n235  [key=0, style=solid];
n234 -> n67  [key=2, style=dotted];
n234 -> n87  [key=2, style=dotted];
n230 -> n235  [key=0, style=solid];
n230 -> n12  [key=2, style=dotted];
n232 -> n235  [key=0, style=solid];
n232 -> n12  [key=2, style=dotted];
n233 -> n234  [key=0, style=solid];
n235 -> n228  [key=0, style=bold, color=blue];
n236 -> n237  [key=0, style=solid];
n236 -> n240  [key=1, style=dashed, color=darkseagreen4, label=string];
n237 -> n238  [key=0, style=solid];
n237 -> n239  [key=0, style=solid];
n240 -> n241  [key=0, style=solid];
n240 -> n67  [key=2, style=dotted];
n240 -> n68  [key=2, style=dotted];
n238 -> n241  [key=0, style=solid];
n238 -> n12  [key=2, style=dotted];
n239 -> n240  [key=0, style=solid];
n241 -> n236  [key=0, style=bold, color=blue];
n242 -> n243  [key=0, style=solid];
n242 -> n246  [key=1, style=dashed, color=darkseagreen4, label=string];
n243 -> n244  [key=0, style=solid];
n243 -> n245  [key=0, style=solid];
n246 -> n247  [key=0, style=solid];
n246 -> n67  [key=2, style=dotted];
n246 -> n68  [key=2, style=dotted];
n246 -> n249  [key=1, style=dashed, color=darkseagreen4, label=result];
n244 -> n250  [key=0, style=solid];
n244 -> n12  [key=2, style=dotted];
n245 -> n246  [key=0, style=solid];
n247 -> n248  [key=0, style=solid];
n247 -> n249  [key=0, style=solid];
n249 -> n250  [key=0, style=solid];
n248 -> n250  [key=0, style=solid];
n248 -> n206  [key=2, style=dotted];
n250 -> n242  [key=0, style=bold, color=blue];
n251 -> n252  [key=0, style=solid];
n251 -> n255  [key=1, style=dashed, color=darkseagreen4, label=string];
n252 -> n253  [key=0, style=solid];
n252 -> n254  [key=0, style=solid];
n255 -> n256  [key=0, style=solid];
n255 -> n67  [key=2, style=dotted];
n255 -> n196  [key=2, style=dotted];
n253 -> n256  [key=0, style=solid];
n253 -> n12  [key=2, style=dotted];
n254 -> n255  [key=0, style=solid];
n256 -> n251  [key=0, style=bold, color=blue];
n257 -> n258  [key=0, style=solid];
n257 -> n261  [key=1, style=dashed, color=darkseagreen4, label=string];
n258 -> n259  [key=0, style=solid];
n258 -> n260  [key=0, style=solid];
n261 -> n262  [key=0, style=solid];
n261 -> n67  [key=2, style=dotted];
n261 -> n196  [key=2, style=dotted];
n259 -> n262  [key=0, style=solid];
n259 -> n12  [key=2, style=dotted];
n260 -> n261  [key=0, style=solid];
n262 -> n257  [key=0, style=bold, color=blue];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=2, style=dotted];
m0_42 -> m0_40  [key=0, style=bold, color=blue];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_33  [key=2, style=dotted];
m0_21 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_21 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_21 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=connection];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_4  [key=1, style=dashed, color=green, label="params string[]"];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_1 -> m0_2  [key=0, style=solid];
m0_6 -> m0_14  [key=0, style=solid];
m0_6 -> n12  [key=2, style=dotted];
m0_6 -> m0_16  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IBackgroundJobFactory"];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>"];
m0_4 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>"];
m0_4 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m0_4 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m0_4 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IBackgroundJobFactory"];
m0_4 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.Func<NCrontab.CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>"];
m0_4 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IThrottler"];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_21  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_37 -> m0_44  [key=0, style=solid];
m0_37 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_37 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_37 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_37 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_37 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_37 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m0_37 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_37 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_37 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_37 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m0_37 -> m0_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_73  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_76  [key=2, style=dotted];
m0_48 -> m0_77  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_80  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_56  [key=0, style=solid];
m0_54 -> m0_76  [key=2, style=dotted];
m0_54 -> m0_84  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_85  [key=2, style=dotted];
m0_56 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_57 -> m0_58  [key=0, style=solid];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_87  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_66  [key=0, style=solid];
m0_64 -> m0_76  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_72  [key=0, style=solid];
m0_67 -> m0_90  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_93  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_74  [key=2, style=dotted];
m0_45 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=job];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_75  [key=2, style=dotted];
m0_47 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=cronSchedule];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_78  [key=2, style=dotted];
m0_49 -> m0_51  [key=1, style=dashed, color=darkseagreen4, label=nowInstant];
m0_49 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label=nowInstant];
m0_49 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=nowInstant];
m0_49 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=nowInstant];
m0_49 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=nowInstant];
m0_49 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=nowInstant];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_79  [key=2, style=dotted];
m0_50 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m0_50 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m0_50 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m0_50 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m0_50 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=changedFields];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_64  [key=0, style=solid];
m0_52 -> m0_81  [key=2, style=dotted];
m0_52 -> m0_82  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_88  [key=2, style=dotted];
m0_62 -> m0_89  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_88  [key=2, style=dotted];
m0_65 -> m0_89  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_88  [key=2, style=dotted];
m0_66 -> m0_89  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_89  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_83  [key=2, style=dotted];
m0_53 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_53 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=state];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_86  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_62  [key=0, style=solid];
m0_60 -> m0_84  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [key=0, style=solid];
m0_69 -> m0_91  [key=2, style=dotted];
m0_69 -> m0_92  [key=2, style=dotted];
m0_70 -> m0_72  [key=0, style=solid];
m0_72 -> m0_37  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_8 -> m0_14  [key=0, style=solid];
m0_8 -> n12  [key=2, style=dotted];
m0_8 -> m0_16  [key=2, style=dotted];
m0_8 -> m0_10  [key=0, style=solid, color=green];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_12  [key=2, style=dotted];
m0_10 -> m0_14  [key=0, style=solid];
m0_10 -> n12  [key=2, style=dotted];
m0_10 -> m0_16  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid, color=green];
m0_10 -> m0_13  [key=2, style=dotted, color=green];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_7  [key=0, style=bold, color=blue];
m0_14 -> m0_4  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_18  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Stop"];
m0_14 -> m0_19  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Stop"];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_34  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_14  [key=2, style=dotted];
m0_23 -> m0_35  [key=2, style=dotted];
m0_24 -> m0_22  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_30  [key=0, style=solid];
m0_24 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m0_24 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label=recurringJobId];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_17 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_17 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_17 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_17 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_31  [key=0, style=solid];
m0_19 -> n12  [key=2, style=dotted];
m0_19 -> m0_16  [key=2, style=dotted];
m0_18 -> m0_20  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_20 -> m0_14  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_32  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_24  [key=0, style=solid];
m0_27 -> m0_37  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_39  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_36  [key=2, style=dotted];
m0_25 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m0_25 -> m0_4  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_10  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_25 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServer"];
m0_29 -> m0_24  [key=0, style=solid];
m0_29 -> m0_38  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_24  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_31 -> m0_17  [key=0, style=bold, color=blue];
m0_80 -> m0_94  [key=0, style=solid];
m0_80 -> m0_95  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_80 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_80 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_80 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_80 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_80 -> m0_100  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IReadOnlyDictionary<string, string>"];
m0_80 -> m0_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IScheduleInstant"];
m0_80 -> m0_49  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.Server.IScheduleInstant instant"];
m0_94 -> m0_95  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_97  [key=0, style=solid];
m0_95 -> m0_76  [key=2, style=dotted];
m0_96 -> m0_103  [key=0, style=solid];
m0_96 -> m0_105  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_99  [key=0, style=solid];
m0_97 -> m0_76  [key=2, style=dotted];
m0_98 -> m0_103  [key=0, style=solid];
m0_98 -> m0_105  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_102  [key=0, style=solid];
m0_99 -> m0_76  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_105  [key=2, style=dotted];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_106  [key=2, style=dotted];
m0_101 -> m0_103  [key=0, style=solid];
m0_101 -> m0_106  [key=2, style=dotted];
m0_101 -> m0_101  [key=1, style=dashed, color=darkseagreen4, label=lastInstant];
m0_103 -> m0_104  [key=0, style=solid];
m0_104 -> m0_80  [key=0, style=bold, color=blue];
m0_107 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_107 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_107 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_107 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_107 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_107 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_107 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_107 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m0_107 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.RecurringJobScheduler"];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_15  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_16  [key=2, style=dotted];
m1_2 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label=metric];
m1_2 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label=metric];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_17  [key=2, style=dotted];
m1_3 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=className];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=highlighted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_18  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_18  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_15  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_18  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_18  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_15  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_15  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_15  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=2, style=dotted];
m1_14 -> m1_0  [key=0, style=bold, color=blue];
m1_19 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m1_19 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m1_19 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m1_19 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m1_19 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m1_19 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m1_19 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m1_19 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m1_19 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m1_19 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m1_19 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.Pages.InlineMetric"];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_17  [key=2, style=dotted];
m2_15 -> m2_13  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_9 -> m2_12  [key=2, style=dotted];
m2_10 -> m2_8  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid, color=red];
m2_5 -> m2_6  [key=0, style=solid, color=red];
m2_5 -> m2_7  [key=2, style=dotted, color=red];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_18 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_18 -> m2_22  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_32  [key=2, style=dotted];
m2_19 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_19 -> m2_30  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_30  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_30  [key=0, style=solid];
m2_21 -> m2_33  [key=2, style=dotted];
m2_21 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m2_21 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=descriptor];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_34  [key=2, style=dotted];
m2_22 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m2_22 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m2_22 -> m2_26  [key=1, style=dashed, color=darkseagreen4, label=propertyValue];
m2_29 -> m2_21  [key=0, style=solid];
m2_29 -> m2_12  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_28 -> m2_31  [key=0, style=solid];
m2_28 -> m2_38  [key=2, style=dotted];
m2_28 -> m2_39  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=value];
m2_23 -> m2_23  [key=3, color=darkorchid, style=bold, label="Local variable string value"];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_29  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_35  [key=2, style=dotted];
m2_25 -> m2_36  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_29  [key=0, style=solid];
m2_26 -> m2_37  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_31 -> m2_18  [key=0, style=bold, color=blue];
m2_40 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m2_40 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m2_40 -> m2_5  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m2_40 -> m2_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m2_40 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Client.ClientJobDescriptor"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Filters.ClientJobExceptionContext"];
m4_0 -> m4_1  [key=0, style=solid, color=red];
m4_1 -> m4_2  [key=0, style=solid, color=red];
m4_1 -> m4_3  [key=2, style=dotted, color=red];
m4_1 -> m4_4  [key=2, style=dotted, color=red];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_13 -> m4_14  [key=0, style=solid, color=red];
m4_13 -> m4_16  [key=1, style=dashed, color=red, label="HangFire.Client.ClientContext"];
m4_14 -> m4_15  [key=0, style=solid, color=red];
m4_14 -> m4_19  [key=0, style=solid, color=red];
m4_14 -> m4_20  [key=2, style=dotted, color=red];
m4_16 -> m4_17  [key=0, style=solid, color=red];
m4_16 -> m4_21  [key=2, style=dotted, color=red];
m4_15 -> m4_16  [key=0, style=solid, color=red];
m4_17 -> m4_18  [key=0, style=solid, color=red];
m4_17 -> m4_19  [key=0, style=solid, color=red];
m4_18 -> m4_19  [key=0, style=solid, color=red];
m4_19 -> m4_13  [key=0, style=bold, color=blue];
m4_20 -> m4_22  [key=0, style=solid, color=red];
m4_20 -> m4_23  [key=1, style=dashed, color=red, label="HangFire.Client.ClientContext"];
m4_20 -> m4_32  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m4_20 -> m4_33  [key=1, style=dashed, color=red, label="HangFire.Client.ClientContext"];
m4_20 -> m4_24  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>"];
m4_22 -> m4_23  [key=0, style=solid, color=red];
m4_22 -> m4_27  [key=2, style=dotted, color=red];
m4_22 -> m4_24  [key=1, style=dashed, color=red, label=preContext];
m4_22 -> m4_40  [key=1, style=dashed, color=red, label=preContext];
m4_23 -> m4_24  [key=0, style=solid, color=red];
m4_23 -> m4_23  [key=3, color=red, style=bold, label="Local variable System.Func<HangFire.Filters.JobEnqueuedContext> continuation"];
m4_24 -> m4_25  [key=0, style=solid, color=red];
m4_24 -> m4_28  [key=2, style=dotted, color=red];
m4_24 -> m4_29  [key=2, style=dotted, color=red];
m4_24 -> m4_37  [key=1, style=dashed, color=red, label="lambda expression"];
m4_25 -> m4_26  [key=0, style=solid, color=red];
m4_25 -> m4_30  [key=2, style=dotted, color=red];
m4_26 -> m4_20  [key=0, style=bold, color=blue];
m4_3 -> m4_5  [key=0, style=solid, color=red];
m4_3 -> m4_7  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>"];
m4_3 -> m4_9  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobFilter>"];
m4_3 -> m4_10  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>"];
m4_5 -> m4_6  [key=0, style=solid, color=red];
m4_5 -> m4_7  [key=0, style=solid, color=red];
m4_7 -> m4_8  [key=0, style=solid, color=red];
m4_7 -> m4_9  [key=0, style=solid, color=red];
m4_9 -> m4_10  [key=0, style=solid, color=red];
m4_10 -> m4_11  [key=0, style=solid, color=red];
m4_6 -> m4_11  [key=0, style=solid, color=red];
m4_6 -> n12  [key=2, style=dotted, color=red];
m4_8 -> m4_11  [key=0, style=solid, color=red];
m4_8 -> n12  [key=2, style=dotted, color=red];
m4_11 -> m4_3  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid, color=red];
m4_42 -> m4_44  [key=1, style=dashed, color=red, label="HangFire.Filters.JobEnqueueingContext"];
m4_42 -> m4_45  [key=1, style=dashed, color=red, label="HangFire.Filters.JobEnqueueingContext"];
m4_42 -> m4_48  [key=1, style=dashed, color=red, label="System.Func<HangFire.Filters.JobEnqueuedContext>"];
m4_42 -> m4_51  [key=1, style=dashed, color=red, label="HangFire.Filters.JobEnqueueingContext"];
m4_42 -> m4_52  [key=1, style=dashed, color=red, label="HangFire.Filters.IClientJobFilter"];
m4_42 -> m4_56  [key=1, style=dashed, color=red, label="HangFire.Filters.IClientJobFilter"];
m4_42 -> m4_47  [key=3, color=red, style=bold, label="method methodReturn HangFire.Filters.JobEnqueuedContext EnqueueJobFilter"];
m4_43 -> m4_44  [key=0, style=solid, color=red];
m4_43 -> m4_59  [key=2, style=dotted, color=red];
m4_44 -> m4_45  [key=0, style=solid, color=red];
m4_44 -> m4_46  [key=0, style=solid, color=red];
m4_45 -> m4_58  [key=0, style=solid, color=red];
m4_45 -> m4_36  [key=2, style=dotted, color=red];
m4_48 -> m4_49  [key=0, style=solid, color=red];
m4_48 -> m4_55  [key=0, style=solid, color=red];
m4_48 -> m4_30  [key=2, style=dotted, color=red];
m4_51 -> m4_52  [key=0, style=solid, color=red];
m4_51 -> m4_36  [key=2, style=dotted, color=red];
m4_51 -> m4_53  [key=1, style=dashed, color=red, label=postContext];
m4_51 -> m4_56  [key=1, style=dashed, color=red, label=postContext];
m4_51 -> m4_57  [key=1, style=dashed, color=red, label=postContext];
m4_52 -> m4_53  [key=0, style=solid, color=red];
m4_52 -> m4_60  [key=2, style=dotted, color=red];
m4_56 -> m4_57  [key=0, style=solid, color=red];
m4_56 -> m4_60  [key=2, style=dotted, color=red];
m4_46 -> m4_47  [key=0, style=solid, color=red];
m4_46 -> m4_46  [key=3, color=red, style=bold, label="Local variable bool wasError"];
m4_47 -> m4_48  [key=0, style=solid, color=red];
m4_49 -> m4_50  [key=0, style=solid, color=red];
m4_55 -> m4_56  [key=0, style=solid, color=red];
m4_55 -> m4_57  [key=0, style=solid, color=red];
m4_50 -> m4_51  [key=0, style=solid, color=red];
m4_50 -> m4_55  [key=1, style=dashed, color=red, label=wasError];
m4_53 -> m4_54  [key=0, style=solid, color=red];
m4_53 -> m4_55  [key=0, style=solid, color=red];
m4_57 -> m4_58  [key=0, style=solid, color=red];
m4_54 -> m4_58  [key=0, style=solid, color=red];
m4_58 -> m4_42  [key=0, style=bold, color=blue];
m4_39 -> m4_40  [key=0, style=solid, color=red];
m4_32 -> m4_33  [key=0, style=solid, color=red];
m4_32 -> m4_35  [key=2, style=dotted, color=red];
m4_33 -> m4_34  [key=0, style=solid, color=red];
m4_33 -> m4_36  [key=2, style=dotted, color=red];
m4_40 -> m4_41  [key=0, style=solid, color=red];
m4_40 -> m4_42  [key=2, style=dotted, color=red];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_24  [key=1, style=dashed, color=red, label="System.Func<HangFire.Filters.JobEnqueuedContext>"];
m4_37 -> m4_40  [key=1, style=dashed, color=red, label="System.Func<HangFire.Filters.JobEnqueuedContext>"];
m4_31 -> m4_32  [key=0, style=solid, color=red];
m4_34 -> m4_31  [key=0, style=bold, color=blue];
m4_38 -> m4_37  [key=0, style=bold, color=blue];
m4_41 -> m4_39  [key=0, style=bold, color=blue];
m4_21 -> m4_61  [key=0, style=solid, color=red];
m4_21 -> m4_62  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientJobExceptionFilter>"];
m4_61 -> m4_62  [key=0, style=solid, color=red];
m4_61 -> m4_66  [key=2, style=dotted, color=red];
m4_61 -> m4_63  [key=1, style=dashed, color=red, label=context];
m4_61 -> m4_64  [key=1, style=dashed, color=red, label=context];
m4_62 -> m4_63  [key=0, style=solid, color=red];
m4_62 -> m4_64  [key=0, style=solid, color=red];
m4_62 -> m4_28  [key=2, style=dotted, color=red];
m4_63 -> m4_62  [key=0, style=solid, color=red];
m4_63 -> m4_67  [key=2, style=dotted, color=red];
m4_64 -> m4_65  [key=0, style=solid, color=red];
m4_65 -> m4_21  [key=0, style=bold, color=blue];
m4_68 -> m4_9  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobInvoker"];
m4_68 -> m4_10  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobInvoker"];
m4_68 -> m4_14  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobInvoker"];
m4_68 -> m4_16  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobInvoker"];
m4_69 -> m4_32  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m4_69 -> m4_33  [key=1, style=dashed, color=red, label="HangFire.Client.ClientJobDescriptor"];
m4_70 -> m4_33  [key=1, style=dashed, color=red, label="HangFire.Client.ClientContext"];
m4_71 -> m4_40  [key=1, style=dashed, color=red, label=preContext];
m4_72 -> m4_40  [key=1, style=dashed, color=red, label="System.Func<HangFire.Filters.JobEnqueuedContext>"];
m4_73 -> m4_40  [key=1, style=dashed, color=red, label="HangFire.Filters.IClientJobFilter"];
m5_0 -> m5_1  [key=0, style=solid, color=green];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_2 -> m5_0  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_2  [key=0, style=bold, color=blue];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m7_5 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.BackgroundProcessContext"];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_10  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_11  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_12  [key=2, style=dotted];
m7_9 -> m7_5  [key=0, style=bold, color=blue];
m7_13 -> m7_14  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_16  [key=2, style=dotted];
m7_15 -> m7_13  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m7_17 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerHeartbeat"];
m7_17 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerHeartbeat"];
m7_17 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerHeartbeat"];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=2, style=dotted];
m8_28 -> m8_26  [key=0, style=bold, color=blue];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_31  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_43  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_55  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_66  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_79  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_91  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_102  [key=3, color=red, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_114  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_123  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_133  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=2, style=dotted];
m8_24 -> m8_22  [key=0, style=bold, color=blue];
m8_113 -> m8_114  [key=0, style=solid];
m8_114 -> m8_115  [key=0, style=solid];
m8_114 -> m8_38  [key=2, style=dotted];
m8_115 -> m8_116  [key=0, style=solid];
m8_115 -> m8_22  [key=2, style=dotted];
m8_116 -> m8_117  [key=0, style=solid];
m8_116 -> m8_53  [key=2, style=dotted];
m8_117 -> m8_118  [key=0, style=solid];
m8_117 -> m8_53  [key=2, style=dotted];
m8_118 -> m8_119  [key=0, style=solid];
m8_118 -> m8_40  [key=2, style=dotted];
m8_119 -> m8_120  [key=0, style=solid];
m8_119 -> m8_41  [key=2, style=dotted];
m8_120 -> m8_121  [key=0, style=solid];
m8_120 -> m8_26  [key=2, style=dotted];
m8_121 -> m8_113  [key=0, style=bold, color=blue];
m8_78 -> m8_79  [key=0, style=solid, color=red];
m8_79 -> m8_80  [key=0, style=solid, color=red];
m8_79 -> m8_38  [key=2, style=dotted, color=red];
m8_80 -> m8_81  [key=0, style=solid];
m8_80 -> m8_22  [key=2, style=dotted];
m8_81 -> m8_82  [key=0, style=solid];
m8_81 -> m8_39  [key=2, style=dotted];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_53  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_40  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_41  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_53  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_53  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_53  [key=2, style=dotted];
m8_88 -> m8_89  [key=0, style=solid];
m8_88 -> m8_26  [key=2, style=dotted];
m8_89 -> m8_78  [key=0, style=bold, color=blue];
m8_122 -> m8_123  [key=0, style=solid];
m8_123 -> m8_124  [key=0, style=solid];
m8_123 -> m8_38  [key=2, style=dotted];
m8_124 -> m8_125  [key=0, style=solid];
m8_124 -> m8_22  [key=2, style=dotted];
m8_125 -> m8_126  [key=0, style=solid];
m8_125 -> m8_39  [key=2, style=dotted];
m8_126 -> m8_127  [key=0, style=solid];
m8_126 -> m8_53  [key=2, style=dotted];
m8_127 -> m8_128  [key=0, style=solid];
m8_127 -> m8_40  [key=2, style=dotted];
m8_128 -> m8_129  [key=0, style=solid];
m8_128 -> m8_41  [key=2, style=dotted];
m8_129 -> m8_130  [key=0, style=solid];
m8_129 -> m8_53  [key=2, style=dotted];
m8_130 -> m8_131  [key=0, style=solid];
m8_130 -> m8_26  [key=2, style=dotted];
m8_131 -> m8_122  [key=0, style=bold, color=blue];
m8_132 -> m8_133  [key=0, style=solid];
m8_133 -> m8_134  [key=0, style=solid];
m8_133 -> m8_38  [key=2, style=dotted];
m8_134 -> m8_135  [key=0, style=solid];
m8_134 -> m8_22  [key=2, style=dotted];
m8_135 -> m8_136  [key=0, style=solid];
m8_135 -> m8_39  [key=2, style=dotted];
m8_136 -> m8_137  [key=0, style=solid];
m8_136 -> m8_53  [key=2, style=dotted];
m8_137 -> m8_138  [key=0, style=solid];
m8_137 -> m8_53  [key=2, style=dotted];
m8_138 -> m8_139  [key=0, style=solid];
m8_138 -> m8_40  [key=2, style=dotted];
m8_139 -> m8_140  [key=0, style=solid];
m8_139 -> m8_41  [key=2, style=dotted];
m8_140 -> m8_141  [key=0, style=solid];
m8_140 -> m8_112  [key=2, style=dotted];
m8_141 -> m8_142  [key=0, style=solid];
m8_141 -> m8_26  [key=2, style=dotted];
m8_142 -> m8_132  [key=0, style=bold, color=blue];
m8_30 -> m8_31  [key=0, style=solid, color=red];
m8_31 -> m8_32  [key=0, style=solid, color=red];
m8_31 -> m8_38  [key=2, style=dotted, color=red];
m8_32 -> m8_33  [key=0, style=solid, color=red];
m8_32 -> m8_22  [key=2, style=dotted, color=red];
m8_33 -> m8_34  [key=0, style=solid, color=red];
m8_33 -> m8_39  [key=2, style=dotted, color=red];
m8_34 -> m8_35  [key=0, style=solid, color=red];
m8_34 -> m8_40  [key=2, style=dotted, color=red];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_41  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_26  [key=2, style=dotted];
m8_37 -> m8_30  [key=0, style=bold, color=blue];
m8_90 -> m8_91  [key=0, style=solid, color=red];
m8_91 -> m8_92  [key=0, style=solid, color=red];
m8_91 -> m8_38  [key=2, style=dotted, color=red];
m8_92 -> m8_93  [key=0, style=solid];
m8_92 -> m8_22  [key=2, style=dotted];
m8_93 -> m8_94  [key=0, style=solid];
m8_93 -> m8_39  [key=2, style=dotted];
m8_94 -> m8_95  [key=0, style=solid];
m8_94 -> m8_53  [key=2, style=dotted];
m8_95 -> m8_96  [key=0, style=solid];
m8_95 -> m8_53  [key=2, style=dotted];
m8_96 -> m8_97  [key=0, style=solid];
m8_96 -> m8_40  [key=2, style=dotted];
m8_97 -> m8_98  [key=0, style=solid];
m8_97 -> m8_41  [key=2, style=dotted];
m8_98 -> m8_99  [key=0, style=solid];
m8_98 -> m8_53  [key=2, style=dotted];
m8_99 -> m8_100  [key=0, style=solid];
m8_99 -> m8_26  [key=2, style=dotted];
m8_100 -> m8_90  [key=0, style=bold, color=blue];
m8_101 -> m8_102  [key=0, style=solid, color=red];
m8_102 -> m8_103  [key=0, style=solid, color=red];
m8_102 -> m8_38  [key=2, style=dotted, color=red];
m8_103 -> m8_104  [key=0, style=solid];
m8_103 -> m8_22  [key=2, style=dotted];
m8_104 -> m8_105  [key=0, style=solid];
m8_104 -> m8_39  [key=2, style=dotted];
m8_105 -> m8_106  [key=0, style=solid];
m8_105 -> m8_53  [key=2, style=dotted];
m8_106 -> m8_107  [key=0, style=solid];
m8_106 -> m8_53  [key=2, style=dotted];
m8_107 -> m8_108  [key=0, style=solid];
m8_107 -> m8_40  [key=2, style=dotted];
m8_108 -> m8_109  [key=0, style=solid];
m8_108 -> m8_41  [key=2, style=dotted];
m8_109 -> m8_110  [key=0, style=solid];
m8_109 -> m8_112  [key=2, style=dotted];
m8_110 -> m8_111  [key=0, style=solid];
m8_110 -> m8_26  [key=2, style=dotted];
m8_111 -> m8_101  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_5  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_6  [key=2, style=dotted];
m8_2 -> m8_7  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_8  [key=2, style=dotted];
m8_4 -> m8_0  [key=0, style=bold, color=blue];
m8_14 -> m8_15  [key=0, style=solid];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=0, style=solid];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_0  [key=2, style=dotted];
m8_17 -> m8_14  [key=0, style=bold, color=blue];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=2, style=dotted];
m8_11 -> m8_12  [key=0, style=solid];
m8_12 -> m8_9  [key=0, style=bold, color=blue];
m8_54 -> m8_55  [key=0, style=solid, color=red];
m8_55 -> m8_56  [key=0, style=solid, color=red];
m8_55 -> m8_38  [key=2, style=dotted, color=red];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_22  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_39  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_53  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_40  [key=2, style=dotted];
m8_60 -> m8_61  [key=0, style=solid];
m8_60 -> m8_41  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_53  [key=2, style=dotted];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_53  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_26  [key=2, style=dotted];
m8_64 -> m8_54  [key=0, style=bold, color=blue];
m8_18 -> m8_19  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_19 -> m8_21  [key=2, style=dotted];
m8_20 -> m8_18  [key=0, style=bold, color=blue];
m8_65 -> m8_66  [key=0, style=solid, color=red];
m8_66 -> m8_67  [key=0, style=solid, color=red];
m8_66 -> m8_38  [key=2, style=dotted, color=red];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_22  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_39  [key=2, style=dotted];
m8_69 -> m8_70  [key=0, style=solid];
m8_69 -> m8_53  [key=2, style=dotted];
m8_70 -> m8_71  [key=0, style=solid];
m8_70 -> m8_53  [key=2, style=dotted];
m8_71 -> m8_72  [key=0, style=solid];
m8_71 -> m8_40  [key=2, style=dotted];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_41  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_53  [key=2, style=dotted];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_53  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_53  [key=2, style=dotted];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_26  [key=2, style=dotted];
m8_77 -> m8_65  [key=0, style=bold, color=blue];
m8_42 -> m8_43  [key=0, style=solid, color=red];
m8_43 -> m8_44  [key=0, style=solid, color=red];
m8_43 -> m8_38  [key=2, style=dotted, color=red];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_22  [key=2, style=dotted];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_39  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_53  [key=2, style=dotted];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_40  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_41  [key=2, style=dotted];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_53  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_53  [key=2, style=dotted];
m8_51 -> m8_52  [key=0, style=solid];
m8_51 -> m8_26  [key=2, style=dotted];
m8_52 -> m8_42  [key=0, style=bold, color=blue];
m8_143 -> m8_32  [key=1, style=dashed, color=red, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m8_143 -> m8_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Re_QueueingOfTimedOutJobsFeature"];
m9_45 -> m9_46  [key=0, style=solid];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_21  [key=2, style=dotted];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_51  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_23  [key=2, style=dotted];
m9_48 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_23  [key=2, style=dotted];
m9_49 -> m9_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_50 -> m9_45  [key=0, style=bold, color=blue];
m9_98 -> m9_99  [key=0, style=solid];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_5  [key=2, style=dotted];
m9_99 -> m9_101  [key=1, style=dashed, color=darkseagreen4, label=runner];
m9_99 -> m9_102  [key=1, style=dashed, color=darkseagreen4, label=runner];
m9_99 -> m9_103  [key=1, style=dashed, color=darkseagreen4, label=runner];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_21  [key=2, style=dotted];
m9_100 -> m9_102  [key=1, style=dashed, color=darkseagreen4, label=collection];
m9_100 -> m9_103  [key=1, style=dashed, color=darkseagreen4, label=collection];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_81  [key=2, style=dotted];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_105  [key=2, style=dotted];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_95  [key=2, style=dotted];
m9_103 -> m9_96  [key=2, style=dotted];
m9_104 -> m9_98  [key=0, style=bold, color=blue];
m9_106 -> m9_107  [key=0, style=solid];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_21  [key=2, style=dotted];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_96  [key=2, style=dotted];
m9_109 -> m9_106  [key=0, style=bold, color=blue];
m9_82 -> m9_83  [key=0, style=solid];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_21  [key=2, style=dotted];
m9_83 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label=collection];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_87  [key=2, style=dotted];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_75  [key=2, style=dotted];
m9_86 -> m9_82  [key=0, style=bold, color=blue];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> n67  [key=2, style=dotted];
m9_8 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_9 -> m9_7  [key=0, style=bold, color=blue];
m9_88 -> m9_89  [key=0, style=solid];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_5  [key=2, style=dotted];
m9_89 -> m9_91  [key=1, style=dashed, color=darkseagreen4, label=element];
m9_89 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label=element];
m9_89 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label=element];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_21  [key=2, style=dotted];
m9_90 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label=collection];
m9_90 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label=collection];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_95  [key=2, style=dotted];
m9_91 -> m9_96  [key=2, style=dotted];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_81  [key=2, style=dotted];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_95  [key=2, style=dotted];
m9_93 -> m9_97  [key=2, style=dotted];
m9_94 -> m9_88  [key=0, style=bold, color=blue];
m9_21 -> m9_119  [key=0, style=solid];
m9_119 -> m9_120  [key=0, style=solid];
m9_119 -> m9_14  [key=2, style=dotted];
m9_120 -> m9_21  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid, color=green];
m9_1 -> m9_5  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid, color=green];
m9_2 -> m9_5  [key=2, style=dotted, color=green];
m9_3 -> m9_4  [key=0, style=solid, color=red];
m9_3 -> m9_6  [key=2, style=dotted, color=red];
m9_3 -> m9_7  [key=2, style=dotted];
m9_4 -> m9_0  [key=0, style=bold, color=blue];
m9_76 -> m9_77  [key=0, style=solid];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_21  [key=2, style=dotted];
m9_77 -> m9_79  [key=1, style=dashed, color=darkseagreen4, label=collection];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_5  [key=2, style=dotted];
m9_78 -> m9_81  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_75  [key=2, style=dotted];
m9_80 -> m9_76  [key=0, style=bold, color=blue];
m9_15 -> m9_16  [key=0, style=solid];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_21  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_22  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_23  [key=2, style=dotted];
m9_18 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_23  [key=2, style=dotted];
m9_19 -> m9_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_20 -> m9_15  [key=0, style=bold, color=blue];
m9_68 -> m9_69  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_14  [key=2, style=dotted];
m9_13 -> m9_11  [key=0, style=bold, color=blue];
m9_24 -> m9_25  [key=0, style=solid];
m9_28 -> m9_29  [key=0, style=solid];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=2, style=dotted];
m9_26 -> m9_24  [key=0, style=bold, color=blue];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_27  [key=2, style=dotted];
m9_30 -> m9_28  [key=0, style=bold, color=blue];
m9_38 -> m9_39  [key=0, style=solid];
m9_42 -> m9_43  [key=0, style=solid];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_41  [key=2, style=dotted];
m9_40 -> m9_38  [key=0, style=bold, color=blue];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_41  [key=2, style=dotted];
m9_44 -> m9_42  [key=0, style=bold, color=blue];
m9_52 -> m9_53  [key=0, style=solid];
m9_56 -> m9_57  [key=0, style=solid];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_55  [key=2, style=dotted];
m9_54 -> m9_52  [key=0, style=bold, color=blue];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_55  [key=2, style=dotted];
m9_58 -> m9_56  [key=0, style=bold, color=blue];
m9_65 -> m9_66  [key=0, style=solid];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_41  [key=2, style=dotted];
m9_67 -> m9_65  [key=0, style=bold, color=blue];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_41  [key=2, style=dotted];
m9_70 -> m9_68  [key=0, style=bold, color=blue];
m9_31 -> m9_32  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_21  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_37  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_23  [key=2, style=dotted];
m9_34 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_23  [key=2, style=dotted];
m9_35 -> m9_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_36 -> m9_31  [key=0, style=bold, color=blue];
m9_71 -> m9_72  [key=0, style=solid];
m9_72 -> m9_73  [key=0, style=solid];
m9_72 -> m9_21  [key=2, style=dotted];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_75  [key=2, style=dotted];
m9_74 -> m9_71  [key=0, style=bold, color=blue];
m9_59 -> m9_60  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_21  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_51  [key=2, style=dotted];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_23  [key=2, style=dotted];
m9_62 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_23  [key=2, style=dotted];
m9_63 -> m9_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_64 -> m9_59  [key=0, style=bold, color=blue];
m9_110 -> m9_111  [key=0, style=solid];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_21  [key=2, style=dotted];
m9_111 -> m9_113  [key=1, style=dashed, color=darkseagreen4, label=collection];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_114  [key=1, style=dashed, color=darkseagreen4, label=array];
m9_112 -> m9_115  [key=1, style=dashed, color=darkseagreen4, label=array];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_117  [key=2, style=dotted];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_118  [key=2, style=dotted];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_118  [key=2, style=dotted];
m9_116 -> m9_110  [key=0, style=bold, color=blue];
m9_121 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_3  [key=1, style=dashed, color=red, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_111  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m9_121 -> m9_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_1  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.States.JobState OnStateChanged"];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_2  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_2  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [key=0, style=bold, color=blue];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_2  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_0  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid, color=red];
m24_1 -> m24_2  [key=0, style=solid, color=red];
m24_2 -> m24_0  [key=0, style=bold, color=blue];
m24_3 -> m24_1  [key=1, style=dashed, color=red, label="HangFire.Filters.JobEnqueueingContext"];
m25_7 -> m25_8  [key=0, style=solid, color=red];
m25_7 -> m25_12  [key=2, style=dotted, color=red];
m25_7 -> m25_13  [key=2, style=dotted, color=red];
m25_7 -> m25_9  [key=1, style=dashed, color=red, label=jobId];
m25_7 -> m25_10  [key=1, style=dashed, color=red, label=jobId];
m25_8 -> m25_9  [key=0, style=solid, color=red];
m25_8 -> m25_3  [key=2, style=dotted, color=green];
m25_8 -> m25_10  [key=0, style=solid, color=red];
m25_8 -> m25_14  [key=2, style=dotted, color=red];
m25_9 -> m25_7  [key=0, style=bold, color=blue];
m25_9 -> m25_10  [key=0, style=solid, color=red];
m25_9 -> m25_15  [key=2, style=dotted, color=red];
m25_9 -> m25_16  [key=2, style=dotted, color=red];
m25_9 -> m25_17  [key=2, style=dotted, color=red];
m25_16 -> m25_17  [key=0, style=solid, color=green];
m25_17 -> m25_18  [key=0, style=solid, color=green];
m25_17 -> m25_10  [key=2, style=dotted, color=green];
m25_18 -> m25_16  [key=0, style=bold, color=blue];
m25_18 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m25_18 -> m25_2  [key=1, style=dashed, color=red, label="HangFire.Server.JobFetcher"];
m25_18 -> m25_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobFetcher"];
m25_18 -> m25_7  [key=1, style=dashed, color=red, label="HangFire.Server.JobFetcher"];
m25_18 -> m25_9  [key=1, style=dashed, color=red, label="HangFire.Server.JobFetcher"];
m25_6 -> m25_7  [key=0, style=solid, color=red];
m25_6 -> m25_4  [key=0, style=bold, color=blue];
m25_10 -> m25_11  [key=0, style=solid, color=green];
m25_11 -> m25_6  [key=0, style=bold, color=blue];
m25_11 -> m25_12  [key=0, style=solid, color=green];
m25_11 -> m25_14  [key=2, style=dotted, color=green];
m25_4 -> m25_5  [key=0, style=solid, color=green];
m25_4 -> m25_0  [key=0, style=bold, color=blue];
m25_5 -> m25_6  [key=0, style=solid, color=green];
m25_5 -> m25_3  [key=2, style=dotted, color=green];
m25_12 -> m25_13  [key=0, style=solid, color=green];
m25_12 -> m25_15  [key=2, style=dotted, color=green];
m25_13 -> m25_10  [key=0, style=bold, color=blue];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> n206  [key=2, style=dotted];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_2  [key=1, style=dashed, color=red, label=string];
m25_0 -> m25_3  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan?"];
m25_1 -> m25_3  [key=2, style=dotted];
m25_1 -> m25_2  [key=0, style=solid, color=red];
m25_2 -> m25_0  [key=0, style=bold, color=blue];
m25_2 -> m25_3  [key=0, style=solid, color=red];
m25_19 -> m25_5  [key=1, style=dashed, color=green, label="HangFire.Web.AspNetBackgroundJobServer"];
m25_19 -> m25_8  [key=1, style=dashed, color=green, label="HangFire.Web.AspNetBackgroundJobServer"];
m25_19 -> m25_11  [key=1, style=dashed, color=green, label="HangFire.Web.AspNetBackgroundJobServer"];
m25_19 -> m25_12  [key=1, style=dashed, color=green, label="HangFire.Web.AspNetBackgroundJobServer"];
m25_19 -> m25_17  [key=1, style=dashed, color=green, label="HangFire.Web.AspNetBackgroundJobServer"];
m25_19 -> m25_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.AspNetBackgroundJobServer"];
m26_6 -> m26_7  [key=0, style=solid];
m26_7 -> m26_8  [key=0, style=solid];
m26_8 -> m26_6  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_4  [key=2, style=dotted];
m26_1 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label=options];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> n67  [key=2, style=dotted];
m26_2 -> m26_6  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_3 -> m26_0  [key=0, style=bold, color=blue];
m26_9 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label=options];
m27_18 -> m27_19  [key=0, style=solid, color=red];
m27_18 -> m27_48  [key=0, style=solid, color=green];
m27_18 -> m27_11  [key=0, style=bold, color=blue];
m27_19 -> m27_20  [key=0, style=solid, color=red];
m27_19 -> m27_21  [key=2, style=dotted, color=red];
m27_48 -> m27_20  [key=0, style=solid, color=green];
m27_48 -> m27_21  [key=2, style=dotted, color=green];
m27_20 -> m27_18  [key=0, style=bold, color=blue];
m27_51 -> m27_52  [key=0, style=solid, color=green];
m27_52 -> m27_53  [key=0, style=solid, color=green];
m27_52 -> m27_54  [key=0, style=solid, color=green];
m27_53 -> m27_52  [key=0, style=solid, color=green];
m27_53 -> n26  [key=2, style=dotted, color=green];
m27_53 -> m27_55  [key=2, style=dotted, color=green];
m27_54 -> m27_51  [key=0, style=bold, color=blue];
m27_11 -> m27_12  [key=0, style=solid, color=red];
m27_11 -> m27_17  [key=1, style=dashed, color=green, label=Table];
m27_11 -> m27_13  [key=2, style=dotted, color=red];
m27_12 -> m27_13  [key=0, style=solid, color=green];
m27_12 -> m27_17  [key=0, style=solid, color=green];
m27_12 -> m27_14  [key=1, style=dashed, color=green, label=row];
m27_12 -> m27_15  [key=1, style=dashed, color=green, label=row];
m27_12 -> m27_10  [key=0, style=bold, color=blue];
m27_14 -> m27_12  [key=0, style=solid, color=green];
m27_14 -> m27_15  [key=0, style=solid, color=red];
m27_14 -> m27_19  [key=2, style=dotted, color=green];
m27_14 -> m27_41  [key=0, style=solid, color=green];
m27_13 -> m27_14  [key=0, style=solid, color=green];
m27_13 -> m27_16  [key=1, style=dashed, color=green, label=i];
m27_17 -> m27_18  [key=0, style=solid, color=green];
m27_17 -> m27_21  [key=2, style=dotted, color=green];
m27_17 -> m27_22  [key=2, style=dotted, color=green];
m27_17 -> m27_23  [key=1, style=dashed, color=green, label="lambda expression"];
m27_15 -> m27_16  [key=0, style=solid, color=red];
m27_15 -> m27_20  [key=2, style=dotted, color=green];
m27_15 -> m27_4  [key=2, style=dotted, color=green];
m27_15 -> m27_17  [key=2, style=dotted, color=red];
m27_16 -> m27_14  [key=0, style=bold, color=blue];
m27_16 -> m27_16  [key=1, style=dashed, color=green, label=i];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> n26  [key=2, style=dotted];
m27_1 -> m27_4  [key=2, style=dotted];
m27_2 -> m27_0  [key=0, style=bold, color=blue];
m27_5 -> m27_6  [key=0, style=solid, color=green];
m27_6 -> m27_7  [key=0, style=solid, color=green];
m27_6 -> m27_8  [key=2, style=dotted, color=green];
m27_6 -> m27_9  [key=2, style=dotted, color=green];
m27_7 -> m27_5  [key=0, style=bold, color=blue];
m27_44 -> m27_45  [key=0, style=solid, color=green];
m27_45 -> m27_46  [key=0, style=solid, color=green];
m27_45 -> m27_17  [key=2, style=dotted, color=green];
m27_46 -> m27_44  [key=0, style=bold, color=blue];
m27_26 -> m27_27  [key=0, style=solid, color=green];
m27_27 -> m27_28  [key=0, style=solid, color=green];
m27_27 -> m27_8  [key=2, style=dotted, color=green];
m27_27 -> m27_9  [key=2, style=dotted, color=green];
m27_28 -> m27_26  [key=0, style=bold, color=blue];
m27_10 -> m27_11  [key=0, style=solid, color=red];
m27_10 -> m27_30  [key=0, style=solid, color=green];
m27_30 -> m27_12  [key=0, style=solid, color=green];
m27_30 -> m27_13  [key=2, style=dotted, color=green];
m27_23 -> m27_24  [key=0, style=solid, color=green];
m27_24 -> m27_25  [key=0, style=solid, color=green];
m27_25 -> m27_23  [key=0, style=bold, color=blue];
m27_33 -> m27_34  [key=0, style=solid, color=green];
m27_33 -> m27_35  [key=1, style=dashed, color=green, label=int];
m27_34 -> m27_35  [key=0, style=solid, color=green];
m27_34 -> m27_37  [key=1, style=dashed, color=green, label=i];
m27_35 -> m27_36  [key=0, style=solid, color=green];
m27_35 -> m27_38  [key=0, style=solid, color=green];
m27_37 -> m27_35  [key=0, style=solid, color=green];
m27_37 -> m27_37  [key=1, style=dashed, color=green, label=i];
m27_36 -> m27_37  [key=0, style=solid, color=green];
m27_36 -> m27_39  [key=2, style=dotted, color=green];
m27_38 -> m27_33  [key=0, style=bold, color=blue];
m27_41 -> m27_16  [key=0, style=solid, color=green];
m27_41 -> m27_17  [key=2, style=dotted, color=green];
m27_22 -> m27_6  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m27_22 -> m27_11  [key=1, style=dashed, color=red, label="HangFire.Tests.JobFetcherSteps"];
m27_22 -> m27_15  [key=1, style=dashed, color=red, label="HangFire.Tests.JobFetcherSteps"];
m27_22 -> m27_19  [key=1, style=dashed, color=red, label="HangFire.Tests.JobFetcherSteps"];
m27_22 -> m27_17  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m27_22 -> m27_27  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m27_22 -> m27_30  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m27_22 -> m27_41  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m27_22 -> m27_45  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m27_22 -> m27_48  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m27_22 -> m27_52  [key=1, style=dashed, color=green, label="HangFire.Tests.JobFetcherSteps"];
m28_4 -> m28_5  [key=0, style=solid];
m28_5 -> m28_4  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_0  [key=0, style=bold, color=blue];
m28_6 -> m28_7  [key=0, style=solid];
m28_7 -> m28_6  [key=0, style=bold, color=blue];
m28_2 -> m28_3  [key=0, style=solid];
m28_3 -> m28_2  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_2 -> m29_0  [key=0, style=bold, color=blue];
m29_7 -> m29_8  [key=0, style=solid];
m29_8 -> m29_7  [key=0, style=bold, color=blue];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m29_4 -> m29_5  [key=0, style=solid];
m29_5 -> m29_6  [key=0, style=solid];
m29_6 -> m29_3  [key=0, style=bold, color=blue];
m29_9 -> m29_10  [key=0, style=solid];
m29_10 -> m29_11  [key=0, style=solid];
m29_11 -> m29_9  [key=0, style=bold, color=blue];
m29_12 -> m29_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.CorrectJob"];
m29_13 -> m29_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.ArgumentsJob"];
m29_13 -> m29_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.ArgumentsJob"];
m29_14 -> m29_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.JobInvokerTests.DisposableJob"];
m31_0 -> m31_1  [key=0, style=solid, color=red];
m31_0 -> m31_2  [key=1, style=dashed, color=red, label=bool];
m31_0 -> m31_3  [key=1, style=dashed, color=red, label="System.Exception"];
m31_1 -> m31_2  [key=0, style=solid, color=red];
m31_2 -> m31_3  [key=0, style=solid, color=red];
m31_3 -> m31_4  [key=0, style=solid, color=red];
m31_4 -> m31_0  [key=0, style=bold, color=blue];
m31_5 -> m31_1  [key=1, style=dashed, color=red, label="HangFire.Filters.JobPerformedContext"];
m31_5 -> m31_2  [key=1, style=dashed, color=red, label="HangFire.Filters.JobPerformedContext"];
m31_5 -> m31_3  [key=1, style=dashed, color=red, label="HangFire.Filters.JobPerformedContext"];
m32_44 -> m32_45  [key=0, style=solid, color=green];
m32_44 -> m32_46  [key=1, style=dashed, color=green, label="HangFire.Filters.PerformingContext"];
m32_44 -> m32_47  [key=1, style=dashed, color=green, label="HangFire.Filters.PerformingContext"];
m32_44 -> m32_50  [key=1, style=dashed, color=green, label="System.Func<HangFire.Filters.PerformedContext>"];
m32_44 -> m32_53  [key=1, style=dashed, color=green, label="HangFire.Filters.PerformingContext"];
m32_44 -> m32_54  [key=1, style=dashed, color=green, label="HangFire.Filters.IServerFilter"];
m32_44 -> m32_58  [key=1, style=dashed, color=green, label="HangFire.Filters.IServerFilter"];
m32_44 -> m32_49  [key=3, color=green, style=bold, label="method methodReturn HangFire.Filters.PerformedContext InvokePerformFilter"];
m32_45 -> m32_46  [key=0, style=solid, color=green];
m32_45 -> m32_61  [key=2, style=dotted, color=green];
m32_46 -> m32_47  [key=0, style=solid, color=green];
m32_46 -> m32_48  [key=0, style=solid, color=green];
m32_47 -> m32_60  [key=0, style=solid, color=green];
m32_47 -> m32_38  [key=2, style=dotted, color=green];
m32_48 -> m32_48  [key=3, color=green, style=bold, label="Local variable bool wasError"];
m32_48 -> m32_49  [key=0, style=solid, color=green];
m32_50 -> m32_51  [key=0, style=solid, color=green];
m32_50 -> m32_57  [key=0, style=solid, color=green];
m32_50 -> m32_62  [key=2, style=dotted, color=green];
m32_49 -> m32_50  [key=0, style=solid, color=green];
m32_51 -> m32_52  [key=0, style=solid, color=green];
m32_57 -> m32_58  [key=0, style=solid, color=green];
m32_57 -> m32_59  [key=0, style=solid, color=green];
m32_53 -> m32_54  [key=0, style=solid, color=green];
m32_53 -> m32_38  [key=2, style=dotted, color=green];
m32_53 -> m32_55  [key=1, style=dashed, color=green, label=postContext];
m32_53 -> m32_58  [key=1, style=dashed, color=green, label=postContext];
m32_53 -> m32_59  [key=1, style=dashed, color=green, label=postContext];
m32_52 -> m32_53  [key=0, style=solid, color=green];
m32_52 -> m32_57  [key=1, style=dashed, color=green, label=wasError];
m32_54 -> m32_55  [key=0, style=solid, color=green];
m32_54 -> m32_63  [key=2, style=dotted, color=green];
m32_55 -> m32_57  [key=0, style=solid, color=green];
m32_55 -> m32_56  [key=0, style=solid, color=green];
m32_58 -> m32_59  [key=0, style=solid, color=green];
m32_58 -> m32_63  [key=2, style=dotted, color=green];
m32_59 -> m32_60  [key=0, style=solid, color=green];
m32_56 -> m32_60  [key=0, style=solid, color=green];
m32_60 -> m32_44  [key=0, style=bold, color=blue];
m32_13 -> m32_14  [key=0, style=solid, color=green];
m32_13 -> m32_16  [key=1, style=dashed, color=green, label="HangFire.Filters.PerformContext"];
m32_14 -> m32_15  [key=0, style=solid, color=green];
m32_14 -> m32_20  [key=0, style=solid, color=green];
m32_14 -> m32_21  [key=2, style=dotted, color=green];
m32_15 -> m32_16  [key=0, style=solid, color=green];
m32_16 -> m32_17  [key=0, style=solid, color=green];
m32_16 -> m32_22  [key=2, style=dotted, color=green];
m32_16 -> m32_18  [key=1, style=dashed, color=green, label=exceptionContext];
m32_17 -> m32_18  [key=0, style=solid, color=green];
m32_17 -> m32_23  [key=2, style=dotted, color=green];
m32_18 -> m32_19  [key=0, style=solid, color=green];
m32_18 -> m32_20  [key=0, style=solid, color=green];
m32_19 -> m32_20  [key=0, style=solid, color=green];
m32_20 -> m32_13  [key=0, style=bold, color=blue];
m32_21 -> m32_24  [key=0, style=solid, color=green];
m32_21 -> m32_25  [key=1, style=dashed, color=green, label="HangFire.Filters.PerformContext"];
m32_21 -> m32_34  [key=1, style=dashed, color=green, label="HangFire.Filters.PerformContext"];
m32_21 -> m32_35  [key=1, style=dashed, color=green, label="HangFire.Filters.PerformContext"];
m32_21 -> m32_26  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>"];
m32_24 -> m32_25  [key=0, style=solid, color=green];
m32_24 -> m32_29  [key=2, style=dotted, color=green];
m32_24 -> m32_26  [key=1, style=dashed, color=green, label=preContext];
m32_24 -> m32_42  [key=1, style=dashed, color=green, label=preContext];
m32_25 -> m32_25  [key=3, color=green, style=bold, label="Local variable System.Func<HangFire.Filters.PerformedContext> continuation"];
m32_25 -> m32_26  [key=0, style=solid, color=green];
m32_26 -> m32_27  [key=0, style=solid, color=green];
m32_26 -> m32_30  [key=2, style=dotted, color=green];
m32_26 -> m32_31  [key=2, style=dotted, color=green];
m32_26 -> m32_39  [key=1, style=dashed, color=green, label="lambda expression"];
m32_27 -> m32_28  [key=0, style=solid, color=green];
m32_27 -> m32_32  [key=2, style=dotted, color=green];
m32_28 -> m32_21  [key=0, style=bold, color=blue];
m32_23 -> m32_64  [key=0, style=solid, color=green];
m32_23 -> m32_65  [key=1, style=dashed, color=green, label="HangFire.Filters.ServerExceptionContext"];
m32_64 -> m32_65  [key=0, style=solid, color=green];
m32_64 -> m32_66  [key=0, style=solid, color=green];
m32_64 -> m32_30  [key=2, style=dotted, color=green];
m32_65 -> m32_64  [key=0, style=solid, color=green];
m32_65 -> m32_67  [key=2, style=dotted, color=green];
m32_66 -> m32_23  [key=0, style=bold, color=blue];
m32_41 -> m32_42  [key=0, style=solid, color=green];
m32_42 -> m32_43  [key=0, style=solid, color=green];
m32_42 -> m32_44  [key=2, style=dotted, color=green];
m32_34 -> m32_35  [key=0, style=solid, color=green];
m32_34 -> m32_37  [key=2, style=dotted, color=green];
m32_33 -> m32_34  [key=0, style=solid, color=green];
m32_35 -> m32_36  [key=0, style=solid, color=green];
m32_35 -> m32_38  [key=2, style=dotted, color=green];
m32_36 -> m32_33  [key=0, style=bold, color=blue];
m32_39 -> m32_26  [key=1, style=dashed, color=green, label="System.Func<HangFire.Filters.PerformedContext>"];
m32_39 -> m32_42  [key=1, style=dashed, color=green, label="System.Func<HangFire.Filters.PerformedContext>"];
m32_39 -> m32_40  [key=0, style=solid];
m32_43 -> m32_41  [key=0, style=bold, color=blue];
m32_40 -> m32_39  [key=0, style=bold, color=blue];
m32_3 -> m32_5  [key=0, style=solid, color=green];
m32_3 -> m32_7  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>"];
m32_3 -> m32_9  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>"];
m32_3 -> m32_10  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>"];
m32_5 -> m32_6  [key=0, style=solid, color=green];
m32_5 -> m32_7  [key=0, style=solid, color=green];
m32_6 -> m32_11  [key=0, style=solid, color=green];
m32_6 -> n12  [key=2, style=dotted, color=green];
m32_7 -> m32_8  [key=0, style=solid, color=green];
m32_7 -> m32_9  [key=0, style=solid, color=green];
m32_8 -> m32_11  [key=0, style=solid, color=green];
m32_8 -> n12  [key=2, style=dotted, color=green];
m32_9 -> m32_10  [key=0, style=solid, color=green];
m32_10 -> m32_11  [key=0, style=solid, color=green];
m32_11 -> m32_3  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid, color=green];
m32_1 -> m32_2  [key=0, style=solid, color=green];
m32_1 -> m32_3  [key=2, style=dotted, color=green];
m32_1 -> m32_4  [key=2, style=dotted, color=green];
m32_2 -> m32_0  [key=0, style=bold, color=blue];
m32_68 -> m32_9  [key=1, style=dashed, color=green, label="HangFire.Server.JobPerformer"];
m32_68 -> m32_10  [key=1, style=dashed, color=green, label="HangFire.Server.JobPerformer"];
m32_68 -> m32_14  [key=1, style=dashed, color=green, label="HangFire.Server.JobPerformer"];
m32_68 -> m32_17  [key=1, style=dashed, color=green, label="HangFire.Server.JobPerformer"];
m32_69 -> m32_34  [key=1, style=dashed, color=green, label="HangFire.Filters.PerformContext"];
m32_69 -> m32_35  [key=1, style=dashed, color=green, label="HangFire.Filters.PerformContext"];
m32_70 -> m32_42  [key=1, style=dashed, color=green, label=preContext];
m32_71 -> m32_42  [key=1, style=dashed, color=green, label="System.Func<HangFire.Filters.PerformedContext>"];
m32_72 -> m32_42  [key=1, style=dashed, color=green, label="HangFire.Filters.IServerFilter"];
m33_0 -> m33_1  [key=0, style=solid, color=red];
m33_1 -> m33_2  [key=0, style=solid, color=red];
m33_2 -> m33_0  [key=0, style=bold, color=blue];
m33_3 -> m33_1  [key=1, style=dashed, color=red, label="HangFire.Filters.JobPerformingContext"];
m35_30 -> m35_31  [key=0, style=solid];
m35_17 -> m35_18  [key=0, style=solid, color=green];
m35_200 -> m35_201  [key=0, style=solid];
m35_201 -> m35_202  [key=0, style=solid];
m35_201 -> m35_164  [key=2, style=dotted];
m35_201 -> m35_203  [key=1, style=dashed, color=darkseagreen4, label=filter];
m35_201 -> m35_208  [key=1, style=dashed, color=darkseagreen4, label=filter];
m35_202 -> m35_203  [key=0, style=solid];
m35_202 -> m35_100  [key=2, style=dotted];
m35_203 -> m35_204  [key=0, style=solid];
m35_203 -> m35_19  [key=2, style=dotted];
m35_203 -> m35_144  [key=2, style=dotted];
m35_203 -> m35_210  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_203 -> m35_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_208 -> m35_209  [key=0, style=solid];
m35_208 -> m35_71  [key=2, style=dotted];
m35_208 -> m35_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_204 -> m35_205  [key=0, style=solid];
m35_204 -> m35_61  [key=2, style=dotted];
m35_205 -> m35_206  [key=0, style=solid];
m35_205 -> m35_39  [key=2, style=dotted];
m35_206 -> m35_207  [key=0, style=solid];
m35_206 -> m35_145  [key=2, style=dotted];
m35_207 -> m35_208  [key=0, style=solid];
m35_207 -> m35_71  [key=2, style=dotted];
m35_207 -> m35_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_209 -> m35_200  [key=0, style=bold, color=blue];
m35_26 -> m35_363  [key=0, style=solid];
m35_26 -> m35_27  [key=0, style=solid];
m35_363 -> m35_26  [key=0, style=bold, color=blue];
m35_9 -> m35_10  [key=0, style=solid];
m35_9 -> m35_22  [key=2, style=dotted];
m35_75 -> m35_76  [key=0, style=solid];
m35_76 -> m35_77  [key=0, style=solid];
m35_76 -> m35_61  [key=2, style=dotted];
m35_77 -> m35_78  [key=0, style=solid];
m35_77 -> m35_39  [key=2, style=dotted];
m35_78 -> m35_79  [key=0, style=solid];
m35_78 -> m35_44  [key=2, style=dotted];
m35_79 -> m35_75  [key=0, style=bold, color=blue];
m35_311 -> m35_312  [key=0, style=solid];
m35_312 -> m35_313  [key=0, style=solid];
m35_312 -> m35_164  [key=2, style=dotted];
m35_312 -> m35_316  [key=1, style=dashed, color=darkseagreen4, label=filter];
m35_313 -> m35_314  [key=0, style=solid];
m35_313 -> m35_100  [key=2, style=dotted];
m35_316 -> m35_317  [key=0, style=solid];
m35_316 -> m35_19  [key=2, style=dotted];
m35_316 -> m35_144  [key=2, style=dotted];
m35_316 -> m35_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_316 -> m35_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_314 -> m35_315  [key=0, style=solid];
m35_314 -> m35_274  [key=2, style=dotted];
m35_314 -> m35_316  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_314 -> m35_325  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_314 -> m35_328  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_315 -> m35_316  [key=0, style=solid];
m35_315 -> m35_19  [key=2, style=dotted];
m35_315 -> m35_275  [key=2, style=dotted];
m35_315 -> m35_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_317 -> m35_318  [key=0, style=solid];
m35_317 -> m35_61  [key=2, style=dotted];
m35_318 -> m35_319  [key=0, style=solid];
m35_318 -> m35_39  [key=2, style=dotted];
m35_319 -> m35_320  [key=0, style=solid];
m35_319 -> m35_145  [key=2, style=dotted];
m35_320 -> m35_311  [key=0, style=bold, color=blue];
m35_222 -> m35_223  [key=0, style=solid];
m35_223 -> m35_224  [key=0, style=solid];
m35_223 -> m35_164  [key=2, style=dotted];
m35_223 -> m35_225  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m35_223 -> m35_230  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m35_224 -> m35_225  [key=0, style=solid];
m35_224 -> m35_164  [key=2, style=dotted];
m35_224 -> m35_226  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m35_224 -> m35_227  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m35_225 -> m35_226  [key=0, style=solid];
m35_225 -> m35_100  [key=2, style=dotted];
m35_230 -> m35_231  [key=0, style=solid];
m35_230 -> m35_71  [key=2, style=dotted];
m35_230 -> m35_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_226 -> m35_227  [key=0, style=solid];
m35_226 -> m35_100  [key=2, style=dotted];
m35_227 -> m35_228  [key=0, style=solid];
m35_227 -> m35_19  [key=2, style=dotted];
m35_227 -> m35_144  [key=2, style=dotted];
m35_227 -> m35_232  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_227 -> m35_235  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_228 -> m35_229  [key=0, style=solid];
m35_228 -> m35_61  [key=2, style=dotted];
m35_229 -> m35_230  [key=0, style=solid];
m35_229 -> m35_39  [key=2, style=dotted];
m35_231 -> m35_222  [key=0, style=bold, color=blue];
m35_16 -> m35_17  [key=0, style=solid, color=green];
m35_333 -> m35_334  [key=0, style=solid];
m35_334 -> m35_335  [key=0, style=solid];
m35_334 -> m35_164  [key=2, style=dotted];
m35_334 -> m35_336  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m35_334 -> m35_342  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m35_335 -> m35_336  [key=0, style=solid];
m35_335 -> m35_164  [key=2, style=dotted];
m35_335 -> m35_337  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m35_335 -> m35_339  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m35_336 -> m35_337  [key=0, style=solid];
m35_336 -> m35_100  [key=2, style=dotted];
m35_342 -> m35_343  [key=0, style=solid];
m35_342 -> m35_71  [key=2, style=dotted];
m35_342 -> m35_357  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_337 -> m35_338  [key=0, style=solid];
m35_337 -> m35_100  [key=2, style=dotted];
m35_339 -> m35_340  [key=0, style=solid];
m35_339 -> m35_19  [key=2, style=dotted];
m35_339 -> m35_144  [key=2, style=dotted];
m35_339 -> m35_348  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_339 -> m35_351  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_338 -> m35_339  [key=0, style=solid];
m35_338 -> m35_19  [key=2, style=dotted];
m35_338 -> m35_30  [key=2, style=dotted];
m35_338 -> m35_345  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_340 -> m35_341  [key=0, style=solid];
m35_340 -> m35_61  [key=2, style=dotted];
m35_340 -> m35_355  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_341 -> m35_342  [key=0, style=solid];
m35_341 -> m35_344  [key=2, style=dotted];
m35_341 -> m35_354  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_343 -> m35_333  [key=0, style=bold, color=blue];
m35_22 -> m35_19  [key=0, style=bold, color=blue];
m35_39 -> m35_37  [key=0, style=bold, color=blue];
m35_7 -> m35_45  [key=0, style=solid];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_18  [key=2, style=dotted];
m35_45 -> m35_46  [key=0, style=solid];
m35_45 -> m35_47  [key=2, style=dotted];
m35_46 -> m35_7  [key=0, style=bold, color=blue];
m35_46 -> m35_47  [key=0, style=solid];
m35_46 -> m35_48  [key=2, style=dotted];
m35_49 -> m35_50  [key=0, style=solid];
m35_49 -> m35_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m35_50 -> m35_51  [key=0, style=solid];
m35_50 -> m35_30  [key=2, style=dotted];
m35_50 -> m35_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_50 -> m35_31  [key=1, style=dashed, color=darkseagreen4, label=options];
m35_51 -> m35_52  [key=0, style=solid];
m35_51 -> m35_44  [key=2, style=dotted];
m35_51 -> m35_38  [key=1, style=dashed, color=darkseagreen4, label=options];
m35_52 -> m35_49  [key=0, style=bold, color=blue];
m35_40 -> m35_41  [key=0, style=solid];
m35_41 -> m35_42  [key=0, style=solid];
m35_41 -> m35_30  [key=2, style=dotted];
m35_41 -> m35_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_41 -> m35_7  [key=2, style=dotted];
m35_42 -> m35_43  [key=0, style=solid];
m35_42 -> m35_44  [key=2, style=dotted];
m35_43 -> m35_40  [key=0, style=bold, color=blue];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_19  [key=2, style=dotted];
m35_8 -> m35_20  [key=2, style=dotted];
m35_8 -> m35_21  [key=2, style=dotted];
m35_8 -> m35_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_8 -> m35_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_61 -> m35_364  [key=0, style=solid];
m35_364 -> m35_365  [key=0, style=solid];
m35_364 -> m35_48  [key=2, style=dotted];
m35_365 -> m35_61  [key=0, style=bold, color=blue];
m35_176 -> m35_177  [key=0, style=solid];
m35_177 -> m35_178  [key=0, style=solid];
m35_177 -> m35_164  [key=2, style=dotted];
m35_177 -> m35_179  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m35_177 -> m35_181  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m35_177 -> m35_184  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m35_178 -> m35_179  [key=0, style=solid];
m35_178 -> m35_164  [key=2, style=dotted];
m35_178 -> m35_180  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m35_178 -> m35_182  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m35_178 -> m35_183  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m35_179 -> m35_180  [key=0, style=solid];
m35_179 -> m35_100  [key=2, style=dotted];
m35_181 -> m35_182  [key=0, style=solid];
m35_181 -> m35_19  [key=2, style=dotted];
m35_181 -> m35_122  [key=2, style=dotted];
m35_181 -> m35_188  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_184 -> m35_185  [key=0, style=solid];
m35_184 -> m35_19  [key=2, style=dotted];
m35_184 -> m35_122  [key=2, style=dotted];
m35_184 -> m35_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_180 -> m35_181  [key=0, style=solid];
m35_180 -> m35_100  [key=2, style=dotted];
m35_182 -> m35_183  [key=0, style=solid];
m35_182 -> m35_19  [key=2, style=dotted];
m35_182 -> m35_122  [key=2, style=dotted];
m35_182 -> m35_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_183 -> m35_184  [key=0, style=solid];
m35_183 -> m35_19  [key=2, style=dotted];
m35_183 -> m35_122  [key=2, style=dotted];
m35_183 -> m35_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_185 -> m35_186  [key=0, style=solid];
m35_185 -> m35_61  [key=2, style=dotted];
m35_186 -> m35_187  [key=0, style=solid];
m35_186 -> m35_39  [key=2, style=dotted];
m35_187 -> m35_176  [key=0, style=bold, color=blue];
m35_27 -> m35_7  [key=2, style=dotted];
m35_27 -> m35_28  [key=0, style=solid];
m35_27 -> m35_31  [key=1, style=dashed, color=darkseagreen4, label=options];
m35_28 -> n67  [key=2, style=dotted];
m35_28 -> m35_29  [key=0, style=solid];
m35_28 -> m35_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_28 -> m35_31  [key=2, style=dotted];
m35_29 -> m35_26  [key=0, style=bold, color=blue];
m35_29 -> m35_27  [key=0, style=bold, color=blue];
m35_91 -> m35_92  [key=0, style=solid];
m35_92 -> m35_93  [key=0, style=solid];
m35_92 -> m35_99  [key=2, style=dotted];
m35_92 -> m35_97  [key=1, style=dashed, color=darkseagreen4, label=filter];
m35_93 -> m35_94  [key=0, style=solid];
m35_93 -> m35_100  [key=2, style=dotted];
m35_97 -> m35_98  [key=0, style=solid];
m35_97 -> m35_71  [key=2, style=dotted];
m35_97 -> m35_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_94 -> m35_95  [key=0, style=solid];
m35_94 -> m35_19  [key=2, style=dotted];
m35_94 -> m35_30  [key=2, style=dotted];
m35_94 -> m35_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_95 -> m35_96  [key=0, style=solid];
m35_95 -> m35_61  [key=2, style=dotted];
m35_95 -> m35_105  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_96 -> m35_97  [key=0, style=solid];
m35_96 -> m35_30  [key=2, style=dotted];
m35_96 -> m35_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_98 -> m35_91  [key=0, style=bold, color=blue];
m35_265 -> m35_266  [key=0, style=solid];
m35_266 -> m35_267  [key=0, style=solid];
m35_266 -> m35_164  [key=2, style=dotted];
m35_266 -> m35_272  [key=1, style=dashed, color=darkseagreen4, label=filter];
m35_267 -> m35_268  [key=0, style=solid];
m35_267 -> m35_100  [key=2, style=dotted];
m35_272 -> m35_273  [key=0, style=solid];
m35_272 -> m35_71  [key=2, style=dotted];
m35_272 -> m35_282  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_268 -> m35_269  [key=0, style=solid];
m35_268 -> m35_274  [key=2, style=dotted];
m35_268 -> m35_272  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_268 -> m35_283  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_268 -> m35_286  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_269 -> m35_270  [key=0, style=solid];
m35_269 -> m35_19  [key=2, style=dotted];
m35_269 -> m35_275  [key=2, style=dotted];
m35_269 -> m35_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_270 -> m35_271  [key=0, style=solid];
m35_270 -> m35_61  [key=2, style=dotted];
m35_270 -> m35_280  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_271 -> m35_272  [key=0, style=solid];
m35_271 -> m35_30  [key=2, style=dotted];
m35_271 -> m35_279  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_273 -> m35_265  [key=0, style=bold, color=blue];
m35_288 -> m35_289  [key=0, style=solid];
m35_289 -> m35_290  [key=0, style=solid];
m35_289 -> m35_164  [key=2, style=dotted];
m35_289 -> m35_291  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m35_289 -> m35_297  [key=1, style=dashed, color=darkseagreen4, label=outerFilter];
m35_290 -> m35_291  [key=0, style=solid];
m35_290 -> m35_164  [key=2, style=dotted];
m35_290 -> m35_292  [key=1, style=dashed, color=darkseagreen4, label=innerFilter];
m35_291 -> m35_292  [key=0, style=solid];
m35_291 -> m35_100  [key=2, style=dotted];
m35_297 -> m35_298  [key=0, style=solid];
m35_297 -> m35_71  [key=2, style=dotted];
m35_297 -> m35_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_292 -> m35_293  [key=0, style=solid];
m35_292 -> m35_100  [key=2, style=dotted];
m35_293 -> m35_294  [key=0, style=solid];
m35_293 -> m35_274  [key=2, style=dotted];
m35_293 -> m35_297  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_293 -> m35_306  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_293 -> m35_309  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_294 -> m35_295  [key=0, style=solid];
m35_294 -> m35_19  [key=2, style=dotted];
m35_294 -> m35_275  [key=2, style=dotted];
m35_294 -> m35_299  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_295 -> m35_296  [key=0, style=solid];
m35_295 -> m35_61  [key=2, style=dotted];
m35_295 -> m35_303  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_296 -> m35_297  [key=0, style=solid];
m35_296 -> m35_30  [key=2, style=dotted];
m35_296 -> m35_302  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_298 -> m35_288  [key=0, style=bold, color=blue];
m35_18 -> m35_16  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_2  [key=0, style=solid, color=red];
m35_1 -> m35_12  [key=2, style=dotted];
m35_1 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label=options];
m35_1 -> m35_7  [key=2, style=dotted];
m35_1 -> m35_3  [key=1, style=dashed, color=darkseagreen4, label=options];
m35_1 -> m35_4  [key=1, style=dashed, color=darkseagreen4, label=options];
m35_2 -> m35_3  [key=0, style=solid, color=red];
m35_2 -> m35_13  [key=2, style=dotted, color=red];
m35_2 -> m35_5  [key=1, style=dashed, color=red, label=connection];
m35_2 -> m35_8  [key=2, style=dotted];
m35_2 -> m35_9  [key=2, style=dotted];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_16  [key=2, style=dotted];
m35_5 -> m35_10  [key=2, style=dotted];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_14  [key=2, style=dotted];
m35_3 -> m35_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_3 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_3 -> m35_9  [key=2, style=dotted];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_15  [key=2, style=dotted];
m35_4 -> m35_10  [key=2, style=dotted];
m35_6 -> m35_7  [key=0, style=solid];
m35_6 -> m35_17  [key=2, style=dotted];
m35_6 -> m35_0  [key=0, style=bold, color=blue];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_19  [key=2, style=dotted];
m35_10 -> m35_21  [key=2, style=dotted];
m35_10 -> m35_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_11 -> m35_0  [key=0, style=bold, color=blue];
m35_11 -> m35_12  [key=0, style=solid, color=green];
m35_244 -> m35_245  [key=0, style=solid];
m35_245 -> m35_246  [key=0, style=solid];
m35_245 -> m35_164  [key=2, style=dotted];
m35_245 -> m35_247  [key=1, style=dashed, color=darkseagreen4, label=filter];
m35_245 -> m35_251  [key=1, style=dashed, color=darkseagreen4, label=filter];
m35_246 -> m35_247  [key=0, style=solid];
m35_246 -> m35_100  [key=2, style=dotted];
m35_247 -> m35_248  [key=0, style=solid];
m35_247 -> m35_19  [key=2, style=dotted];
m35_247 -> m35_30  [key=2, style=dotted];
m35_247 -> m35_253  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_251 -> m35_252  [key=0, style=solid];
m35_251 -> m35_71  [key=2, style=dotted];
m35_251 -> m35_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_248 -> m35_249  [key=0, style=solid];
m35_248 -> m35_61  [key=2, style=dotted];
m35_248 -> m35_257  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_249 -> m35_250  [key=0, style=solid];
m35_249 -> m35_30  [key=2, style=dotted];
m35_249 -> m35_256  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_250 -> m35_251  [key=0, style=solid];
m35_250 -> m35_71  [key=2, style=dotted];
m35_250 -> m35_259  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_252 -> m35_244  [key=0, style=bold, color=blue];
m35_12 -> m35_13  [key=0, style=solid, color=green];
m35_12 -> m35_7  [key=2, style=dotted, color=green];
m35_12 -> m35_17  [key=1, style=dashed, color=green, label=options];
m35_13 -> m35_14  [key=0, style=solid, color=green];
m35_13 -> n67  [key=2, style=dotted, color=green];
m35_13 -> m35_16  [key=1, style=dashed, color=green, label="lambda expression"];
m35_14 -> m35_11  [key=0, style=bold, color=blue];
m35_48 -> m35_17  [key=1, style=dashed, color=green, label=options];
m35_19 -> m35_20  [key=0, style=solid, color=green];
m35_111 -> m35_112  [key=0, style=solid];
m35_112 -> m35_113  [key=0, style=solid];
m35_112 -> m35_99  [key=2, style=dotted];
m35_112 -> m35_115  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m35_112 -> m35_116  [key=1, style=dashed, color=darkseagreen4, label=filter1];
m35_113 -> m35_114  [key=0, style=solid];
m35_113 -> m35_99  [key=2, style=dotted];
m35_113 -> m35_117  [key=1, style=dashed, color=darkseagreen4, label=filter2];
m35_115 -> m35_116  [key=0, style=solid];
m35_115 -> m35_19  [key=2, style=dotted];
m35_115 -> m35_122  [key=2, style=dotted];
m35_115 -> m35_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_116 -> m35_117  [key=0, style=solid];
m35_116 -> m35_100  [key=2, style=dotted];
m35_114 -> m35_115  [key=0, style=solid];
m35_114 -> m35_19  [key=2, style=dotted];
m35_114 -> m35_122  [key=2, style=dotted];
m35_114 -> m35_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_117 -> m35_118  [key=0, style=solid];
m35_117 -> m35_100  [key=2, style=dotted];
m35_118 -> m35_119  [key=0, style=solid];
m35_118 -> m35_19  [key=2, style=dotted];
m35_118 -> m35_30  [key=2, style=dotted];
m35_118 -> m35_129  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_119 -> m35_120  [key=0, style=solid];
m35_119 -> m35_61  [key=2, style=dotted];
m35_119 -> m35_133  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_120 -> m35_121  [key=0, style=solid];
m35_120 -> m35_30  [key=2, style=dotted];
m35_120 -> m35_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_121 -> m35_111  [key=0, style=bold, color=blue];
m35_47 -> m35_45  [key=0, style=bold, color=blue];
m35_37 -> m35_38  [key=0, style=solid];
m35_37 -> m35_39  [key=2, style=dotted];
m35_23 -> m35_24  [key=0, style=solid];
m35_32 -> m35_33  [key=0, style=solid];
m35_32 -> m35_30  [key=0, style=bold, color=blue];
m35_36 -> m35_37  [key=0, style=solid];
m35_36 -> m35_33  [key=0, style=bold, color=blue];
m35_24 -> m35_25  [key=0, style=solid];
m35_24 -> m35_26  [key=2, style=dotted];
m35_25 -> m35_23  [key=0, style=bold, color=blue];
m35_33 -> m35_34  [key=0, style=solid];
m35_33 -> m35_35  [key=2, style=dotted];
m35_34 -> m35_32  [key=0, style=bold, color=blue];
m35_34 -> m35_7  [key=2, style=dotted];
m35_34 -> m35_35  [key=0, style=solid];
m35_34 -> m35_38  [key=1, style=dashed, color=darkseagreen4, label=options];
m35_38 -> m35_36  [key=0, style=bold, color=blue];
m35_38 -> m35_39  [key=0, style=solid];
m35_53 -> m35_54  [key=0, style=solid];
m35_54 -> m35_55  [key=0, style=solid];
m35_54 -> m35_48  [key=2, style=dotted];
m35_55 -> m35_53  [key=0, style=bold, color=blue];
m35_63 -> m35_64  [key=0, style=solid];
m35_63 -> m35_65  [key=2, style=dotted];
m35_62 -> m35_63  [key=0, style=solid];
m35_64 -> m35_62  [key=0, style=bold, color=blue];
m35_72 -> m35_73  [key=0, style=solid];
m35_73 -> m35_74  [key=0, style=solid];
m35_73 -> m35_39  [key=2, style=dotted];
m35_74 -> m35_72  [key=0, style=bold, color=blue];
m35_85 -> m35_86  [key=0, style=solid];
m35_89 -> m35_90  [key=0, style=solid];
m35_89 -> m35_39  [key=2, style=dotted];
m35_88 -> m35_89  [key=0, style=solid];
m35_86 -> m35_87  [key=0, style=solid];
m35_86 -> m35_30  [key=2, style=dotted];
m35_86 -> m35_39  [key=2, style=dotted];
m35_87 -> m35_85  [key=0, style=bold, color=blue];
m35_90 -> m35_88  [key=0, style=bold, color=blue];
m35_101 -> m35_102  [key=0, style=solid];
m35_105 -> m35_106  [key=0, style=solid];
m35_105 -> m35_39  [key=2, style=dotted];
m35_104 -> m35_105  [key=0, style=solid];
m35_107 -> m35_108  [key=0, style=solid];
m35_102 -> m35_103  [key=0, style=solid];
m35_102 -> m35_30  [key=2, style=dotted];
m35_102 -> m35_39  [key=2, style=dotted];
m35_103 -> m35_101  [key=0, style=bold, color=blue];
m35_106 -> m35_104  [key=0, style=bold, color=blue];
m35_108 -> m35_109  [key=0, style=solid];
m35_108 -> m35_30  [key=2, style=dotted];
m35_108 -> m35_110  [key=2, style=dotted];
m35_109 -> m35_107  [key=0, style=bold, color=blue];
m35_123 -> m35_124  [key=0, style=solid];
m35_126 -> m35_127  [key=0, style=solid];
m35_129 -> m35_130  [key=0, style=solid];
m35_133 -> m35_134  [key=0, style=solid];
m35_133 -> m35_39  [key=2, style=dotted];
m35_132 -> m35_133  [key=0, style=solid];
m35_124 -> m35_125  [key=0, style=solid];
m35_124 -> m35_30  [key=2, style=dotted];
m35_124 -> m35_110  [key=2, style=dotted];
m35_125 -> m35_123  [key=0, style=bold, color=blue];
m35_127 -> m35_128  [key=0, style=solid];
m35_127 -> m35_30  [key=2, style=dotted];
m35_127 -> m35_110  [key=2, style=dotted];
m35_128 -> m35_126  [key=0, style=bold, color=blue];
m35_130 -> m35_131  [key=0, style=solid];
m35_130 -> m35_30  [key=2, style=dotted];
m35_130 -> m35_39  [key=2, style=dotted];
m35_131 -> m35_129  [key=0, style=bold, color=blue];
m35_134 -> m35_132  [key=0, style=bold, color=blue];
m35_146 -> m35_147  [key=0, style=solid];
m35_149 -> m35_150  [key=0, style=solid];
m35_152 -> m35_153  [key=0, style=solid];
m35_147 -> m35_148  [key=0, style=solid];
m35_147 -> m35_30  [key=2, style=dotted];
m35_147 -> m35_39  [key=2, style=dotted];
m35_148 -> m35_146  [key=0, style=bold, color=blue];
m35_150 -> m35_151  [key=0, style=solid];
m35_150 -> m35_30  [key=2, style=dotted];
m35_150 -> m35_110  [key=2, style=dotted];
m35_151 -> m35_149  [key=0, style=bold, color=blue];
m35_153 -> m35_154  [key=0, style=solid];
m35_154 -> m35_152  [key=0, style=bold, color=blue];
m35_165 -> m35_166  [key=0, style=solid];
m35_169 -> m35_170  [key=0, style=solid];
m35_172 -> m35_173  [key=0, style=solid];
m35_166 -> m35_167  [key=0, style=solid];
m35_166 -> m35_30  [key=2, style=dotted];
m35_166 -> m35_168  [key=2, style=dotted];
m35_167 -> m35_165  [key=0, style=bold, color=blue];
m35_170 -> m35_171  [key=0, style=solid];
m35_170 -> m35_30  [key=2, style=dotted];
m35_170 -> m35_39  [key=2, style=dotted];
m35_171 -> m35_169  [key=0, style=bold, color=blue];
m35_173 -> m35_174  [key=0, style=solid];
m35_173 -> m35_30  [key=2, style=dotted];
m35_173 -> m35_175  [key=2, style=dotted];
m35_174 -> m35_172  [key=0, style=bold, color=blue];
m35_188 -> m35_189  [key=0, style=solid];
m35_191 -> m35_192  [key=0, style=solid];
m35_194 -> m35_195  [key=0, style=solid];
m35_197 -> m35_198  [key=0, style=solid];
m35_189 -> m35_190  [key=0, style=solid];
m35_189 -> m35_30  [key=2, style=dotted];
m35_189 -> m35_168  [key=2, style=dotted];
m35_190 -> m35_188  [key=0, style=bold, color=blue];
m35_192 -> m35_193  [key=0, style=solid];
m35_192 -> m35_30  [key=2, style=dotted];
m35_192 -> m35_168  [key=2, style=dotted];
m35_193 -> m35_191  [key=0, style=bold, color=blue];
m35_195 -> m35_196  [key=0, style=solid];
m35_195 -> m35_30  [key=2, style=dotted];
m35_195 -> m35_175  [key=2, style=dotted];
m35_196 -> m35_194  [key=0, style=bold, color=blue];
m35_198 -> m35_199  [key=0, style=solid];
m35_198 -> m35_30  [key=2, style=dotted];
m35_198 -> m35_175  [key=2, style=dotted];
m35_199 -> m35_197  [key=0, style=bold, color=blue];
m35_210 -> m35_211  [key=0, style=solid];
m35_213 -> m35_214  [key=0, style=solid];
m35_216 -> m35_217  [key=0, style=solid];
m35_219 -> m35_220  [key=0, style=solid];
m35_211 -> m35_212  [key=0, style=solid];
m35_211 -> m35_30  [key=2, style=dotted];
m35_211 -> m35_168  [key=2, style=dotted];
m35_212 -> m35_210  [key=0, style=bold, color=blue];
m35_214 -> m35_215  [key=0, style=solid];
m35_215 -> m35_213  [key=0, style=bold, color=blue];
m35_217 -> m35_218  [key=0, style=solid];
m35_217 -> m35_30  [key=2, style=dotted];
m35_217 -> m35_39  [key=2, style=dotted];
m35_218 -> m35_216  [key=0, style=bold, color=blue];
m35_220 -> m35_221  [key=0, style=solid];
m35_220 -> m35_30  [key=2, style=dotted];
m35_220 -> m35_175  [key=2, style=dotted];
m35_221 -> m35_219  [key=0, style=bold, color=blue];
m35_232 -> m35_233  [key=0, style=solid];
m35_235 -> m35_236  [key=0, style=solid];
m35_238 -> m35_239  [key=0, style=solid];
m35_233 -> m35_234  [key=0, style=solid];
m35_233 -> m35_30  [key=2, style=dotted];
m35_233 -> m35_168  [key=2, style=dotted];
m35_234 -> m35_232  [key=0, style=bold, color=blue];
m35_236 -> m35_237  [key=0, style=solid];
m35_237 -> m35_235  [key=0, style=bold, color=blue];
m35_239 -> m35_240  [key=0, style=solid];
m35_239 -> m35_30  [key=2, style=dotted];
m35_239 -> m35_175  [key=2, style=dotted];
m35_239 -> m35_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_240 -> m35_238  [key=0, style=bold, color=blue];
m35_241 -> m35_242  [key=0, style=solid];
m35_242 -> m35_243  [key=0, style=solid];
m35_243 -> m35_241  [key=0, style=bold, color=blue];
m35_253 -> m35_254  [key=0, style=solid];
m35_257 -> m35_258  [key=0, style=solid];
m35_257 -> m35_39  [key=2, style=dotted];
m35_256 -> m35_257  [key=0, style=solid];
m35_259 -> m35_260  [key=0, style=solid];
m35_262 -> m35_263  [key=0, style=solid];
m35_254 -> m35_255  [key=0, style=solid];
m35_254 -> m35_30  [key=2, style=dotted];
m35_254 -> m35_168  [key=2, style=dotted];
m35_255 -> m35_253  [key=0, style=bold, color=blue];
m35_258 -> m35_256  [key=0, style=bold, color=blue];
m35_260 -> m35_261  [key=0, style=solid];
m35_260 -> m35_30  [key=2, style=dotted];
m35_260 -> m35_39  [key=2, style=dotted];
m35_261 -> m35_259  [key=0, style=bold, color=blue];
m35_263 -> m35_264  [key=0, style=solid];
m35_263 -> m35_30  [key=2, style=dotted];
m35_263 -> m35_175  [key=2, style=dotted];
m35_264 -> m35_262  [key=0, style=bold, color=blue];
m35_283 -> m35_284  [key=0, style=solid];
m35_283 -> m35_30  [key=2, style=dotted];
m35_283 -> m35_175  [key=2, style=dotted];
m35_283 -> m35_285  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_286 -> m35_287  [key=0, style=solid];
m35_276 -> m35_277  [key=0, style=solid];
m35_280 -> m35_281  [key=0, style=solid];
m35_280 -> m35_39  [key=2, style=dotted];
m35_279 -> m35_280  [key=0, style=solid];
m35_282 -> m35_283  [key=0, style=solid];
m35_277 -> m35_278  [key=0, style=solid];
m35_277 -> m35_30  [key=2, style=dotted];
m35_277 -> m35_39  [key=2, style=dotted];
m35_278 -> m35_276  [key=0, style=bold, color=blue];
m35_281 -> m35_279  [key=0, style=bold, color=blue];
m35_284 -> m35_282  [key=0, style=bold, color=blue];
m35_285 -> m35_286  [key=0, style=solid];
m35_287 -> m35_285  [key=0, style=bold, color=blue];
m35_306 -> m35_307  [key=0, style=solid];
m35_306 -> m35_30  [key=2, style=dotted];
m35_306 -> m35_175  [key=2, style=dotted];
m35_306 -> m35_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_309 -> m35_310  [key=0, style=solid];
m35_299 -> m35_300  [key=0, style=solid];
m35_303 -> m35_304  [key=0, style=solid];
m35_303 -> m35_39  [key=2, style=dotted];
m35_302 -> m35_303  [key=0, style=solid];
m35_305 -> m35_306  [key=0, style=solid];
m35_300 -> m35_301  [key=0, style=solid];
m35_300 -> m35_30  [key=2, style=dotted];
m35_300 -> m35_39  [key=2, style=dotted];
m35_301 -> m35_299  [key=0, style=bold, color=blue];
m35_304 -> m35_302  [key=0, style=bold, color=blue];
m35_307 -> m35_305  [key=0, style=bold, color=blue];
m35_308 -> m35_309  [key=0, style=solid];
m35_310 -> m35_308  [key=0, style=bold, color=blue];
m35_325 -> m35_326  [key=0, style=solid];
m35_325 -> m35_30  [key=2, style=dotted];
m35_325 -> m35_175  [key=2, style=dotted];
m35_325 -> m35_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_328 -> m35_329  [key=0, style=solid];
m35_321 -> m35_322  [key=0, style=solid];
m35_324 -> m35_325  [key=0, style=solid];
m35_330 -> m35_331  [key=0, style=solid];
m35_322 -> m35_323  [key=0, style=solid];
m35_322 -> m35_30  [key=2, style=dotted];
m35_322 -> m35_39  [key=2, style=dotted];
m35_323 -> m35_321  [key=0, style=bold, color=blue];
m35_326 -> m35_324  [key=0, style=bold, color=blue];
m35_327 -> m35_328  [key=0, style=solid];
m35_329 -> m35_327  [key=0, style=bold, color=blue];
m35_331 -> m35_332  [key=0, style=solid];
m35_332 -> m35_330  [key=0, style=bold, color=blue];
m35_345 -> m35_346  [key=0, style=solid];
m35_348 -> m35_349  [key=0, style=solid];
m35_351 -> m35_352  [key=0, style=solid];
m35_355 -> m35_356  [key=0, style=solid];
m35_355 -> m35_39  [key=2, style=dotted];
m35_354 -> m35_355  [key=0, style=solid];
m35_357 -> m35_358  [key=0, style=solid];
m35_346 -> m35_347  [key=0, style=solid];
m35_346 -> m35_30  [key=2, style=dotted];
m35_346 -> m35_39  [key=2, style=dotted];
m35_347 -> m35_345  [key=0, style=bold, color=blue];
m35_349 -> m35_350  [key=0, style=solid];
m35_349 -> m35_30  [key=2, style=dotted];
m35_349 -> m35_175  [key=2, style=dotted];
m35_350 -> m35_348  [key=0, style=bold, color=blue];
m35_352 -> m35_353  [key=0, style=solid];
m35_353 -> m35_351  [key=0, style=bold, color=blue];
m35_356 -> m35_354  [key=0, style=bold, color=blue];
m35_358 -> m35_359  [key=0, style=solid];
m35_358 -> m35_30  [key=2, style=dotted];
m35_358 -> m35_175  [key=2, style=dotted];
m35_358 -> m35_360  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_359 -> m35_357  [key=0, style=bold, color=blue];
m35_360 -> m35_361  [key=0, style=solid];
m35_361 -> m35_362  [key=0, style=solid];
m35_362 -> m35_360  [key=0, style=bold, color=blue];
m35_31 -> m35_32  [key=0, style=solid];
m35_20 -> m35_21  [key=0, style=solid, color=green];
m35_20 -> m35_7  [key=2, style=dotted, color=green];
m35_20 -> m35_24  [key=1, style=dashed, color=green, label=options];
m35_135 -> m35_136  [key=0, style=solid];
m35_136 -> m35_137  [key=0, style=solid];
m35_136 -> m35_19  [key=2, style=dotted];
m35_136 -> m35_30  [key=2, style=dotted];
m35_136 -> m35_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_137 -> m35_138  [key=0, style=solid];
m35_137 -> m35_99  [key=2, style=dotted];
m35_137 -> m35_139  [key=1, style=dashed, color=darkseagreen4, label=filter];
m35_138 -> m35_139  [key=0, style=solid];
m35_138 -> m35_19  [key=2, style=dotted];
m35_138 -> m35_144  [key=2, style=dotted];
m35_138 -> m35_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_138 -> m35_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_139 -> m35_140  [key=0, style=solid];
m35_139 -> m35_100  [key=2, style=dotted];
m35_140 -> m35_141  [key=0, style=solid];
m35_140 -> m35_61  [key=2, style=dotted];
m35_141 -> m35_142  [key=0, style=solid];
m35_141 -> m35_39  [key=2, style=dotted];
m35_142 -> m35_143  [key=0, style=solid];
m35_142 -> m35_145  [key=2, style=dotted];
m35_143 -> m35_135  [key=0, style=bold, color=blue];
m35_21 -> m35_22  [key=0, style=solid, color=green];
m35_21 -> n67  [key=2, style=dotted, color=green];
m35_21 -> m35_23  [key=1, style=dashed, color=green, label="lambda expression"];
m35_35 -> n67  [key=2, style=dotted];
m35_35 -> m35_36  [key=0, style=solid];
m35_35 -> m35_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_80 -> m35_81  [key=0, style=solid];
m35_81 -> m35_82  [key=0, style=solid];
m35_81 -> m35_19  [key=2, style=dotted];
m35_81 -> m35_30  [key=2, style=dotted];
m35_81 -> m35_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_82 -> m35_83  [key=0, style=solid];
m35_82 -> m35_61  [key=2, style=dotted];
m35_82 -> m35_89  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_83 -> m35_84  [key=0, style=solid];
m35_83 -> m35_30  [key=2, style=dotted];
m35_83 -> m35_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_84 -> m35_80  [key=0, style=bold, color=blue];
m35_56 -> m35_57  [key=0, style=solid];
m35_57 -> m35_58  [key=0, style=solid];
m35_57 -> m35_61  [key=2, style=dotted];
m35_57 -> m35_63  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_58 -> m35_59  [key=0, style=solid];
m35_58 -> m35_30  [key=2, style=dotted];
m35_58 -> m35_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_59 -> m35_60  [key=0, style=solid];
m35_59 -> m35_44  [key=2, style=dotted];
m35_60 -> m35_56  [key=0, style=bold, color=blue];
m35_66 -> m35_67  [key=0, style=solid];
m35_67 -> m35_68  [key=0, style=solid];
m35_67 -> m35_61  [key=2, style=dotted];
m35_68 -> m35_69  [key=0, style=solid];
m35_68 -> m35_39  [key=2, style=dotted];
m35_69 -> m35_70  [key=0, style=solid];
m35_69 -> m35_71  [key=2, style=dotted];
m35_69 -> m35_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_70 -> m35_66  [key=0, style=bold, color=blue];
m35_155 -> m35_156  [key=0, style=solid];
m35_156 -> m35_157  [key=0, style=solid];
m35_156 -> m35_164  [key=2, style=dotted];
m35_156 -> m35_158  [key=1, style=dashed, color=darkseagreen4, label=filter];
m35_156 -> m35_160  [key=1, style=dashed, color=darkseagreen4, label=filter];
m35_157 -> m35_158  [key=0, style=solid];
m35_157 -> m35_100  [key=2, style=dotted];
m35_158 -> m35_159  [key=0, style=solid];
m35_158 -> m35_19  [key=2, style=dotted];
m35_158 -> m35_122  [key=2, style=dotted];
m35_158 -> m35_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_160 -> m35_161  [key=0, style=solid];
m35_160 -> m35_19  [key=2, style=dotted];
m35_160 -> m35_122  [key=2, style=dotted];
m35_160 -> m35_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_159 -> m35_160  [key=0, style=solid];
m35_159 -> m35_19  [key=2, style=dotted];
m35_159 -> m35_122  [key=2, style=dotted];
m35_159 -> m35_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m35_161 -> m35_162  [key=0, style=solid];
m35_161 -> m35_61  [key=2, style=dotted];
m35_162 -> m35_163  [key=0, style=solid];
m35_162 -> m35_39  [key=2, style=dotted];
m35_163 -> m35_155  [key=0, style=bold, color=blue];
m35_366 -> m35_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_68  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_77  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_120  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_140  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_141  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_159  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_161  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_162  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_180  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_185  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_186  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_202  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_205  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_207  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_226  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_228  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_229  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_246  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_257  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_250  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_267  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_269  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_270  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_271  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_280  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_291  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_292  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_294  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_295  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_296  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_303  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_315  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_317  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_318  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_336  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_337  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_338  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_341  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_355  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_366 -> m35_364  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.JobCreationProcessFacts"];
m35_367 -> m35_63  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_368 -> m35_89  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_369 -> m35_105  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_370 -> m35_133  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_371 -> m35_257  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_372 -> m35_280  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_373 -> m35_283  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_373 -> m35_286  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_374 -> m35_303  [key=1, style=dashed, color=darkseagreen4, label=process];
m35_375 -> m35_306  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_375 -> m35_309  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_376 -> m35_325  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_376 -> m35_328  [key=1, style=dashed, color=darkseagreen4, label=exception];
m35_377 -> m35_355  [key=1, style=dashed, color=darkseagreen4, label=process];
m36_9 -> m36_7  [key=0, style=bold, color=blue];
m36_16 -> m36_17  [key=0, style=solid];
m36_16 -> m36_13  [key=3, color=darkorchid, style=bold, label="Parameter variable System.TimeSpan interval"];
m36_16 -> m36_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m36_16 -> m36_19  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m36_17 -> m36_18  [key=0, style=solid];
m36_17 -> m36_19  [key=2, style=dotted];
m36_18 -> m36_16  [key=0, style=bold, color=blue];
m36_3 -> m36_4  [key=0, style=solid, color=green];
m36_3 -> m36_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m36_3 -> m36_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m36_3 -> m36_11  [key=2, style=dotted];
m36_4 -> m36_5  [key=0, style=solid, color=green];
m36_4 -> m36_6  [key=2, style=dotted];
m36_4 -> m36_12  [key=2, style=dotted, color=green];
m36_4 -> m36_7  [key=1, style=dashed, color=green, label=serialized];
m36_5 -> m36_3  [key=0, style=bold, color=blue];
m36_5 -> m36_6  [key=0, style=solid, color=green];
m36_6 -> m36_10  [key=0, style=solid, color=red];
m36_6 -> m36_3  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m36_6 -> m36_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m36_6 -> m36_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type jobType"];
m36_10 -> m36_11  [key=0, style=solid, color=red];
m36_10 -> m36_12  [key=2, style=dotted, color=red];
m36_11 -> m36_6  [key=0, style=bold, color=blue];
m36_20 -> m36_21  [key=0, style=solid];
m36_20 -> m36_19  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m36_21 -> m36_22  [key=0, style=solid];
m36_21 -> m36_19  [key=2, style=dotted];
m36_22 -> m36_20  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid];
m36_0 -> m36_3  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_3  [key=2, style=dotted];
m36_1 -> m36_9  [key=2, style=dotted];
m36_2 -> m36_0  [key=0, style=bold, color=blue];
m36_2 -> m36_4  [key=1, style=dashed, color=green, label=response];
m36_2 -> m36_3  [key=0, style=solid];
m36_2 -> m36_10  [key=2, style=dotted];
m36_7 -> m36_8  [key=0, style=solid];
m36_7 -> m36_13  [key=2, style=dotted];
m36_7 -> m36_6  [key=3, color=darkorchid, style=bold, label="method methodReturn string Async"];
m36_8 -> m36_0  [key=0, style=bold, color=blue];
m36_8 -> m36_9  [key=0, style=solid];
m36_8 -> m36_6  [key=2, style=dotted];
m36_19 -> m36_23  [key=0, style=solid, color=red];
m36_19 -> m36_16  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m36_19 -> m36_20  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type jobType"];
m36_19 -> m36_1  [key=3, color=darkorchid, style=bold, label="Parameter variable object args"];
m36_23 -> m36_24  [key=0, style=solid, color=red];
m36_23 -> m36_25  [key=2, style=dotted, color=red];
m36_24 -> m36_19  [key=0, style=bold, color=blue];
m36_13 -> m36_14  [key=0, style=solid];
m36_13 -> m36_16  [key=3, color=darkorchid, style=bold, label="method methodReturn string In"];
m36_14 -> m36_15  [key=0, style=solid];
m36_14 -> m36_16  [key=2, style=dotted];
m36_14 -> m36_5  [key=1, style=dashed, color=green, label="HangFire.Web.JsonStats"];
m36_14 -> m36_6  [key=1, style=dashed, color=green, label="HangFire.Web.JsonStats"];
m36_14 -> m36_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.JsonStats"];
m36_15 -> m36_13  [key=0, style=bold, color=blue];
m40_0 -> m40_1  [key=0, style=solid];
m40_0 -> m40_4  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m40_1 -> m40_2  [key=0, style=solid];
m40_1 -> m40_3  [key=0, style=solid];
m40_4 -> m40_5  [key=0, style=solid];
m40_2 -> m40_5  [key=0, style=solid];
m40_2 -> n12  [key=2, style=dotted];
m40_3 -> m40_4  [key=0, style=solid];
m40_5 -> m40_0  [key=0, style=bold, color=blue];
m40_7 -> m40_8  [key=0, style=solid];
m40_8 -> m40_9  [key=0, style=solid];
m40_8 -> m40_10  [key=2, style=dotted];
m40_8 -> m40_11  [key=2, style=dotted];
m40_8 -> m40_12  [key=2, style=dotted];
m40_8 -> m40_13  [key=2, style=dotted];
m40_9 -> m40_7  [key=0, style=bold, color=blue];
m40_14 -> m40_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.FailedState"];
m40_14 -> m40_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.FailedState"];
m40_14 -> m40_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.FailedState"];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_2  [key=0, style=solid];
m41_2 -> m41_0  [key=0, style=bold, color=blue];
m41_3 -> m41_4  [key=0, style=solid];
m41_4 -> m41_5  [key=0, style=solid];
m41_4 -> m41_6  [key=0, style=solid];
m41_5 -> m41_9  [key=0, style=solid];
m41_5 -> m41_10  [key=2, style=dotted];
m41_6 -> m41_7  [key=0, style=solid];
m41_6 -> m41_8  [key=0, style=solid];
m41_6 -> m41_11  [key=2, style=dotted];
m41_7 -> m41_9  [key=0, style=solid];
m41_8 -> m41_9  [key=0, style=solid];
m41_9 -> m41_3  [key=0, style=bold, color=blue];
m41_12 -> m41_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.CommandHandler"];
m41_12 -> m41_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.CommandHandler"];
m41_12 -> m41_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.CommandHandler"];
m41_12 -> m41_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.CommandHandler"];
m41_12 -> m41_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.CommandHandler"];
m42_11 -> m42_13  [key=2, style=dotted];
m42_11 -> m42_12  [key=0, style=solid];
m42_11 -> m42_14  [key=2, style=dotted];
m42_60 -> m42_61  [key=0, style=solid];
m42_62 -> m42_63  [key=0, style=solid, color=green];
m42_62 -> m42_36  [key=2, style=dotted, color=green];
m42_62 -> m42_64  [key=1, style=dashed, color=green, label="lambda expression"];
m42_61 -> m42_62  [key=0, style=solid, color=green];
m42_61 -> m42_65  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m42_61 -> m42_66  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m42_63 -> m42_60  [key=0, style=bold, color=blue];
m42_153 -> m42_154  [key=0, style=solid];
m42_154 -> m42_36  [key=2, style=dotted];
m42_154 -> m42_155  [key=0, style=solid];
m42_154 -> m42_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_155 -> m42_153  [key=0, style=bold, color=blue];
m42_212 -> m42_213  [key=0, style=solid];
m42_213 -> m42_36  [key=2, style=dotted];
m42_213 -> m42_214  [key=0, style=solid];
m42_213 -> m42_215  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_214 -> m42_212  [key=0, style=bold, color=blue];
m42_419 -> m42_420  [key=0, style=solid];
m42_420 -> m42_36  [key=2, style=dotted];
m42_420 -> m42_421  [key=0, style=solid];
m42_420 -> m42_422  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_421 -> m42_419  [key=0, style=bold, color=blue];
m42_527 -> m42_528  [key=0, style=solid];
m42_528 -> m42_36  [key=2, style=dotted];
m42_528 -> m42_529  [key=0, style=solid];
m42_528 -> m42_530  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_529 -> m42_527  [key=0, style=bold, color=blue];
m42_267 -> m42_268  [key=0, style=solid];
m42_268 -> m42_36  [key=2, style=dotted];
m42_268 -> m42_269  [key=0, style=solid];
m42_268 -> m42_270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_269 -> m42_267  [key=0, style=bold, color=blue];
m42_368 -> m42_369  [key=0, style=solid];
m42_369 -> m42_36  [key=2, style=dotted];
m42_369 -> m42_370  [key=0, style=solid];
m42_369 -> m42_371  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_370 -> m42_368  [key=0, style=bold, color=blue];
m42_331 -> m42_332  [key=0, style=solid];
m42_332 -> m42_36  [key=2, style=dotted];
m42_332 -> m42_333  [key=0, style=solid];
m42_332 -> m42_334  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_333 -> m42_331  [key=0, style=bold, color=blue];
m42_305 -> m42_306  [key=0, style=solid];
m42_306 -> m42_36  [key=2, style=dotted];
m42_306 -> m42_307  [key=0, style=solid];
m42_306 -> m42_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_307 -> m42_305  [key=0, style=bold, color=blue];
m42_431 -> m42_432  [key=0, style=solid];
m42_432 -> m42_36  [key=2, style=dotted];
m42_432 -> m42_433  [key=0, style=solid];
m42_432 -> m42_434  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_433 -> m42_431  [key=0, style=bold, color=blue];
m42_49 -> m42_551  [key=0, style=solid];
m42_49 -> m42_552  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.SqlServer.SqlServerWriteOnlyTransaction>"];
m42_551 -> m42_23  [key=2, style=dotted];
m42_551 -> m42_552  [key=0, style=solid];
m42_551 -> m42_553  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m42_552 -> m42_553  [key=0, style=solid];
m42_552 -> m42_550  [key=2, style=dotted];
m42_553 -> m42_554  [key=0, style=solid];
m42_553 -> m42_555  [key=2, style=dotted];
m42_554 -> m42_49  [key=0, style=bold, color=blue];
m42_16 -> m42_17  [key=0, style=solid];
m42_16 -> m42_13  [key=2, style=dotted];
m42_16 -> m42_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_17 -> m42_18  [key=0, style=solid];
m42_17 -> m42_5  [key=2, style=dotted];
m42_17 -> m42_20  [key=2, style=dotted];
m42_17 -> m42_19  [key=2, style=dotted];
m42_17 -> m42_34  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.BackgroundJobServerOptions options"];
m42_18 -> m42_19  [key=0, style=solid];
m42_18 -> m42_21  [key=2, style=dotted];
m42_18 -> m42_15  [key=0, style=bold, color=blue];
m42_19 -> m42_16  [key=0, style=bold, color=blue];
m42_407 -> m42_408  [key=0, style=solid];
m42_408 -> m42_36  [key=2, style=dotted];
m42_408 -> m42_409  [key=0, style=solid];
m42_408 -> m42_410  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_409 -> m42_407  [key=0, style=bold, color=blue];
m42_255 -> m42_256  [key=0, style=solid];
m42_256 -> m42_36  [key=2, style=dotted];
m42_256 -> m42_257  [key=0, style=solid];
m42_256 -> m42_258  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_257 -> m42_255  [key=0, style=bold, color=blue];
m42_119 -> m42_120  [key=0, style=solid];
m42_121 -> m42_36  [key=2, style=dotted];
m42_121 -> m42_122  [key=0, style=solid];
m42_121 -> m42_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_120 -> m42_121  [key=0, style=solid];
m42_120 -> m42_124  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m42_122 -> m42_119  [key=0, style=bold, color=blue];
m42_15 -> m42_16  [key=0, style=solid];
m42_293 -> m42_294  [key=0, style=solid];
m42_294 -> m42_36  [key=2, style=dotted];
m42_294 -> m42_295  [key=0, style=solid];
m42_294 -> m42_296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_295 -> m42_293  [key=0, style=bold, color=blue];
m42_7 -> m42_8  [key=0, style=solid];
m42_7 -> m42_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m42_32 -> m42_33  [key=0, style=solid, color=green];
m42_34 -> m42_34  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.BackgroundJobServerOptions options"];
m42_34 -> m42_35  [key=0, style=solid];
m42_34 -> m42_36  [key=2, style=dotted];
m42_34 -> m42_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_33 -> m42_34  [key=0, style=solid, color=green];
m42_33 -> m42_38  [key=1, style=dashed, color=green, label=arrangeSql];
m42_33 -> m42_39  [key=1, style=dashed, color=green, label=arrangeSql];
m42_35 -> m42_32  [key=0, style=bold, color=blue];
m42_500 -> m42_501  [key=0, style=solid];
m42_501 -> m42_36  [key=2, style=dotted];
m42_501 -> m42_502  [key=0, style=solid];
m42_501 -> m42_503  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_502 -> m42_500  [key=0, style=bold, color=blue];
m42_344 -> m42_345  [key=0, style=solid];
m42_345 -> m42_36  [key=2, style=dotted];
m42_345 -> m42_346  [key=0, style=solid];
m42_345 -> m42_347  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_346 -> m42_344  [key=0, style=bold, color=blue];
m42_224 -> m42_225  [key=0, style=solid];
m42_225 -> m42_36  [key=2, style=dotted];
m42_225 -> m42_226  [key=0, style=solid];
m42_225 -> m42_227  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_226 -> m42_224  [key=0, style=bold, color=blue];
m42_356 -> m42_357  [key=0, style=solid];
m42_357 -> m42_36  [key=2, style=dotted];
m42_357 -> m42_358  [key=0, style=solid];
m42_357 -> m42_359  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_358 -> m42_356  [key=0, style=bold, color=blue];
m42_319 -> m42_320  [key=0, style=solid];
m42_320 -> m42_36  [key=2, style=dotted];
m42_320 -> m42_321  [key=0, style=solid];
m42_320 -> m42_322  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_321 -> m42_319  [key=0, style=bold, color=blue];
m42_25 -> m42_26  [key=0, style=solid, color=green];
m42_25 -> m42_13  [key=2, style=dotted, color=green];
m42_25 -> m42_28  [key=1, style=dashed, color=green, label="lambda expression"];
m42_26 -> m42_27  [key=0, style=solid, color=green];
m42_26 -> m42_5  [key=2, style=dotted];
m42_26 -> m42_20  [key=2, style=dotted];
m42_26 -> m42_19  [key=2, style=dotted, color=green];
m42_26 -> m42_34  [key=3, color=green, style=bold, label="Local variable Hangfire.BackgroundJobServerOptions options"];
m42_27 -> m42_28  [key=0, style=solid];
m42_27 -> m42_29  [key=2, style=dotted];
m42_27 -> m42_24  [key=0, style=bold, color=blue];
m42_28 -> m42_25  [key=0, style=bold, color=blue];
m42_28 -> m42_29  [key=0, style=solid, color=green];
m42_8 -> m42_9  [key=0, style=solid];
m42_8 -> m42_6  [key=2, style=dotted];
m42_9 -> m42_10  [key=0, style=solid];
m42_9 -> m42_5  [key=2, style=dotted];
m42_9 -> m42_11  [key=2, style=dotted];
m42_10 -> m42_7  [key=0, style=bold, color=blue];
m42_10 -> m42_11  [key=0, style=solid];
m42_143 -> m42_144  [key=0, style=solid];
m42_29 -> m42_30  [key=0, style=solid, color=green];
m42_29 -> m42_23  [key=2, style=dotted, color=green];
m42_29 -> m42_31  [key=2, style=dotted, color=green];
m42_30 -> m42_28  [key=0, style=bold, color=blue];
m42_38 -> m42_39  [key=0, style=solid];
m42_38 -> m42_46  [key=2, style=dotted];
m42_38 -> m42_47  [key=2, style=dotted];
m42_38 -> n69  [key=2, style=dotted];
m42_38 -> m42_40  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_38 -> m42_56  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_38 -> m42_41  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_39 -> m42_40  [key=0, style=solid];
m42_39 -> m42_46  [key=2, style=dotted];
m42_39 -> m42_47  [key=2, style=dotted];
m42_39 -> n69  [key=2, style=dotted];
m42_39 -> m42_43  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
m42_64 -> m42_68  [key=1, style=dashed, color=green, label=SqlConnection];
m42_64 -> m42_70  [key=1, style=dashed, color=green, label=SqlConnection];
m42_64 -> m42_65  [key=0, style=solid];
m42_64 -> m42_66  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_64 -> m42_67  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_68 -> m42_69  [key=0, style=solid, color=green];
m42_68 -> m42_50  [key=2, style=dotted, color=green];
m42_65 -> m42_68  [key=1, style=dashed, color=green, label=jobId];
m42_65 -> m42_66  [key=0, style=solid];
m42_65 -> m42_46  [key=2, style=dotted];
m42_65 -> m42_47  [key=2, style=dotted];
m42_65 -> n69  [key=2, style=dotted];
m42_65 -> m42_67  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_65 -> m42_75  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_67 -> m42_68  [key=0, style=solid, color=green];
m42_67 -> m42_49  [key=2, style=dotted];
m42_67 -> m42_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_69 -> m42_70  [key=0, style=solid, color=green];
m42_69 -> m42_54  [key=2, style=dotted, color=green];
m42_70 -> m42_71  [key=0, style=solid, color=green];
m42_70 -> m42_50  [key=2, style=dotted, color=green];
m42_66 -> m42_70  [key=1, style=dashed, color=green, label=anotherJobId];
m42_66 -> m42_67  [key=0, style=solid];
m42_66 -> m42_46  [key=2, style=dotted];
m42_66 -> m42_47  [key=2, style=dotted];
m42_66 -> n69  [key=2, style=dotted];
m42_71 -> m42_72  [key=0, style=solid, color=green];
m42_71 -> m42_73  [key=2, style=dotted, color=green];
m42_72 -> m42_64  [key=0, style=bold, color=blue];
m42_83 -> m42_84  [key=0, style=solid];
m42_83 -> m42_46  [key=2, style=dotted];
m42_83 -> m42_47  [key=2, style=dotted];
m42_83 -> n69  [key=2, style=dotted];
m42_83 -> m42_89  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_83 -> m42_116  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_83 -> m42_90  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_83 -> m42_97  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_84 -> m42_85  [key=0, style=solid];
m42_84 -> m42_46  [key=2, style=dotted];
m42_84 -> m42_47  [key=2, style=dotted];
m42_84 -> n69  [key=2, style=dotted];
m42_84 -> m42_93  [key=1, style=dashed, color=darkseagreen4, label=anotherJobId];
m42_167 -> m42_13  [key=2, style=dotted];
m42_167 -> m42_168  [key=0, style=solid];
m42_167 -> m42_14  [key=2, style=dotted];
m42_217 -> m42_13  [key=2, style=dotted];
m42_217 -> m42_218  [key=0, style=solid];
m42_217 -> m42_47  [key=2, style=dotted];
m42_260 -> m42_13  [key=2, style=dotted];
m42_260 -> m42_261  [key=0, style=solid];
m42_260 -> m42_47  [key=2, style=dotted];
m42_286 -> m42_13  [key=2, style=dotted];
m42_286 -> m42_287  [key=0, style=solid];
m42_286 -> m42_47  [key=2, style=dotted];
m42_298 -> m42_13  [key=2, style=dotted];
m42_298 -> m42_299  [key=0, style=solid];
m42_298 -> m42_47  [key=2, style=dotted];
m42_336 -> m42_13  [key=2, style=dotted];
m42_336 -> m42_337  [key=0, style=solid];
m42_336 -> m42_47  [key=2, style=dotted];
m42_349 -> m42_13  [key=2, style=dotted];
m42_349 -> m42_350  [key=0, style=solid];
m42_349 -> m42_47  [key=2, style=dotted];
m42_361 -> m42_13  [key=2, style=dotted];
m42_361 -> m42_362  [key=0, style=solid];
m42_361 -> m42_47  [key=2, style=dotted];
m42_386 -> m42_13  [key=2, style=dotted];
m42_386 -> m42_387  [key=0, style=solid];
m42_386 -> m42_47  [key=2, style=dotted];
m42_398 -> m42_13  [key=2, style=dotted];
m42_398 -> m42_399  [key=0, style=solid];
m42_398 -> m42_47  [key=2, style=dotted];
m42_412 -> m42_13  [key=2, style=dotted];
m42_412 -> m42_413  [key=0, style=solid];
m42_412 -> m42_47  [key=2, style=dotted];
m42_424 -> m42_13  [key=2, style=dotted];
m42_424 -> m42_425  [key=0, style=solid];
m42_424 -> m42_47  [key=2, style=dotted];
m42_455 -> m42_13  [key=2, style=dotted];
m42_455 -> m42_456  [key=0, style=solid];
m42_455 -> m42_47  [key=2, style=dotted];
m42_469 -> m42_13  [key=2, style=dotted];
m42_469 -> m42_470  [key=0, style=solid];
m42_469 -> m42_47  [key=2, style=dotted];
m42_481 -> m42_13  [key=2, style=dotted];
m42_481 -> m42_482  [key=0, style=solid];
m42_481 -> m42_47  [key=2, style=dotted];
m42_493 -> m42_13  [key=2, style=dotted];
m42_493 -> m42_494  [key=0, style=solid];
m42_493 -> m42_47  [key=2, style=dotted];
m42_504 -> m42_13  [key=2, style=dotted];
m42_504 -> m42_505  [key=0, style=solid];
m42_504 -> m42_507  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_518 -> m42_13  [key=2, style=dotted];
m42_518 -> m42_519  [key=0, style=solid];
m42_518 -> m42_521  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_97 -> m42_19  [key=2, style=dotted];
m42_97 -> m42_98  [key=0, style=solid];
m42_97 -> n69  [key=2, style=dotted];
m42_91 -> m42_19  [key=2, style=dotted];
m42_91 -> m42_92  [key=0, style=solid];
m42_98 -> m42_19  [key=2, style=dotted];
m42_98 -> m42_99  [key=0, style=solid];
m42_99 -> m42_19  [key=2, style=dotted];
m42_99 -> m42_100  [key=0, style=solid];
m42_101 -> m42_19  [key=2, style=dotted];
m42_101 -> m42_102  [key=0, style=solid];
m42_134 -> m42_19  [key=2, style=dotted];
m42_134 -> m42_135  [key=0, style=solid];
m42_134 -> n69  [key=2, style=dotted];
m42_135 -> m42_19  [key=2, style=dotted];
m42_135 -> m42_136  [key=0, style=solid];
m42_136 -> m42_19  [key=2, style=dotted];
m42_136 -> m42_137  [key=0, style=solid];
m42_138 -> m42_19  [key=2, style=dotted];
m42_138 -> m42_139  [key=0, style=solid];
m42_186 -> m42_19  [key=2, style=dotted];
m42_186 -> m42_187  [key=0, style=solid];
m42_187 -> m42_19  [key=2, style=dotted];
m42_187 -> m42_188  [key=0, style=solid];
m42_188 -> m42_19  [key=2, style=dotted];
m42_188 -> m42_189  [key=0, style=solid];
m42_200 -> m42_19  [key=2, style=dotted];
m42_200 -> m42_201  [key=0, style=solid];
m42_201 -> m42_19  [key=2, style=dotted];
m42_201 -> m42_202  [key=0, style=solid];
m42_218 -> m42_19  [key=2, style=dotted];
m42_218 -> m42_219  [key=0, style=solid];
m42_230 -> m42_19  [key=2, style=dotted];
m42_230 -> m42_231  [key=0, style=solid];
m42_231 -> m42_19  [key=2, style=dotted];
m42_231 -> m42_232  [key=0, style=solid];
m42_232 -> m42_19  [key=2, style=dotted];
m42_232 -> m42_233  [key=0, style=solid];
m42_244 -> m42_19  [key=2, style=dotted];
m42_244 -> m42_245  [key=0, style=solid];
m42_245 -> m42_19  [key=2, style=dotted];
m42_245 -> m42_246  [key=0, style=solid];
m42_261 -> m42_19  [key=2, style=dotted];
m42_261 -> m42_262  [key=0, style=solid];
m42_273 -> m42_19  [key=2, style=dotted];
m42_273 -> m42_274  [key=0, style=solid];
m42_274 -> m42_19  [key=2, style=dotted];
m42_274 -> m42_275  [key=0, style=solid];
m42_275 -> m42_19  [key=2, style=dotted];
m42_275 -> m42_276  [key=0, style=solid];
m42_287 -> m42_19  [key=2, style=dotted];
m42_287 -> m42_288  [key=0, style=solid];
m42_299 -> m42_19  [key=2, style=dotted];
m42_299 -> m42_300  [key=0, style=solid];
m42_311 -> m42_19  [key=2, style=dotted];
m42_311 -> m42_312  [key=0, style=solid];
m42_312 -> m42_19  [key=2, style=dotted];
m42_312 -> m42_313  [key=0, style=solid];
m42_313 -> m42_19  [key=2, style=dotted];
m42_313 -> m42_314  [key=0, style=solid];
m42_325 -> m42_19  [key=2, style=dotted];
m42_325 -> m42_326  [key=0, style=solid];
m42_337 -> m42_19  [key=2, style=dotted];
m42_337 -> m42_338  [key=0, style=solid];
m42_350 -> m42_19  [key=2, style=dotted];
m42_350 -> m42_351  [key=0, style=solid];
m42_362 -> m42_19  [key=2, style=dotted];
m42_362 -> m42_363  [key=0, style=solid];
m42_374 -> m42_19  [key=2, style=dotted];
m42_374 -> m42_375  [key=0, style=solid];
m42_375 -> m42_19  [key=2, style=dotted];
m42_375 -> m42_376  [key=0, style=solid];
m42_387 -> m42_19  [key=2, style=dotted];
m42_387 -> m42_388  [key=0, style=solid];
m42_399 -> m42_19  [key=2, style=dotted];
m42_399 -> m42_400  [key=0, style=solid];
m42_413 -> m42_19  [key=2, style=dotted];
m42_413 -> m42_414  [key=0, style=solid];
m42_425 -> m42_19  [key=2, style=dotted];
m42_425 -> m42_426  [key=0, style=solid];
m42_437 -> m42_19  [key=2, style=dotted];
m42_437 -> m42_438  [key=0, style=solid];
m42_438 -> m42_19  [key=2, style=dotted];
m42_438 -> m42_439  [key=0, style=solid];
m42_439 -> m42_19  [key=2, style=dotted];
m42_439 -> m42_440  [key=0, style=solid];
m42_456 -> m42_19  [key=2, style=dotted];
m42_456 -> m42_457  [key=0, style=solid];
m42_470 -> m42_19  [key=2, style=dotted];
m42_470 -> m42_471  [key=0, style=solid];
m42_482 -> m42_19  [key=2, style=dotted];
m42_482 -> m42_483  [key=0, style=solid];
m42_494 -> m42_19  [key=2, style=dotted];
m42_494 -> m42_495  [key=0, style=solid];
m42_505 -> m42_19  [key=2, style=dotted];
m42_505 -> m42_506  [key=0, style=solid];
m42_519 -> m42_19  [key=2, style=dotted];
m42_519 -> m42_520  [key=0, style=solid];
m42_533 -> m42_19  [key=2, style=dotted];
m42_533 -> m42_534  [key=0, style=solid];
m42_534 -> m42_19  [key=2, style=dotted];
m42_534 -> m42_535  [key=0, style=solid];
m42_37 -> m42_38  [key=0, style=solid];
m42_37 -> m42_39  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_37 -> m42_40  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_37 -> m42_41  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_37 -> m42_43  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_21 -> m42_23  [key=2, style=dotted];
m42_21 -> m42_22  [key=0, style=solid];
m42_40 -> m42_41  [key=0, style=solid];
m42_40 -> m42_49  [key=2, style=dotted];
m42_40 -> m42_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_56 -> m42_57  [key=0, style=solid];
m42_56 -> m42_58  [key=2, style=dotted];
m42_56 -> m42_59  [key=2, style=dotted];
m42_41 -> m42_50  [key=2, style=dotted];
m42_41 -> m42_42  [key=0, style=solid];
m42_43 -> m42_50  [key=2, style=dotted];
m42_43 -> m42_44  [key=0, style=solid];
m42_89 -> m42_90  [key=0, style=solid];
m42_89 -> m42_49  [key=2, style=dotted];
m42_89 -> m42_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_90 -> m42_50  [key=2, style=dotted];
m42_90 -> m42_91  [key=0, style=solid];
m42_90 -> m42_92  [key=1, style=dashed, color=darkseagreen4, label=job];
m42_93 -> m42_50  [key=2, style=dotted];
m42_93 -> m42_94  [key=0, style=solid];
m42_93 -> m42_95  [key=1, style=dashed, color=darkseagreen4, label=anotherJob];
m42_129 -> m42_130  [key=0, style=solid];
m42_129 -> m42_49  [key=2, style=dotted];
m42_129 -> m42_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_130 -> m42_50  [key=2, style=dotted];
m42_130 -> m42_131  [key=0, style=solid];
m42_130 -> m42_132  [key=1, style=dashed, color=darkseagreen4, label=job];
m42_160 -> m42_161  [key=0, style=solid];
m42_160 -> m42_164  [key=2, style=dotted];
m42_161 -> m42_162  [key=0, style=solid];
m42_161 -> m42_49  [key=2, style=dotted];
m42_161 -> m42_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_184 -> m42_185  [key=0, style=solid];
m42_184 -> m42_49  [key=2, style=dotted];
m42_184 -> m42_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_198 -> m42_199  [key=0, style=solid];
m42_198 -> m42_49  [key=2, style=dotted];
m42_198 -> m42_208  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_216 -> m42_217  [key=0, style=solid];
m42_216 -> m42_49  [key=2, style=dotted];
m42_216 -> m42_220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_228 -> m42_229  [key=0, style=solid];
m42_228 -> m42_49  [key=2, style=dotted];
m42_228 -> m42_234  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_242 -> m42_243  [key=0, style=solid];
m42_242 -> m42_49  [key=2, style=dotted];
m42_242 -> m42_251  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_259 -> m42_260  [key=0, style=solid];
m42_259 -> m42_49  [key=2, style=dotted];
m42_259 -> m42_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_271 -> m42_272  [key=0, style=solid];
m42_271 -> m42_49  [key=2, style=dotted];
m42_271 -> m42_277  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_285 -> m42_286  [key=0, style=solid];
m42_285 -> m42_49  [key=2, style=dotted];
m42_285 -> m42_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_297 -> m42_298  [key=0, style=solid];
m42_297 -> m42_49  [key=2, style=dotted];
m42_297 -> m42_301  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_309 -> m42_310  [key=0, style=solid];
m42_309 -> m42_49  [key=2, style=dotted];
m42_309 -> m42_315  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_323 -> m42_324  [key=0, style=solid];
m42_323 -> m42_49  [key=2, style=dotted];
m42_323 -> m42_327  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_335 -> m42_336  [key=0, style=solid];
m42_335 -> m42_49  [key=2, style=dotted];
m42_335 -> m42_339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_348 -> m42_349  [key=0, style=solid];
m42_348 -> m42_49  [key=2, style=dotted];
m42_348 -> m42_352  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_360 -> m42_361  [key=0, style=solid];
m42_360 -> m42_49  [key=2, style=dotted];
m42_360 -> m42_364  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_372 -> m42_373  [key=0, style=solid];
m42_372 -> m42_49  [key=2, style=dotted];
m42_372 -> m42_377  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_385 -> m42_386  [key=0, style=solid];
m42_385 -> m42_49  [key=2, style=dotted];
m42_385 -> m42_389  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_397 -> m42_398  [key=0, style=solid];
m42_397 -> m42_49  [key=2, style=dotted];
m42_397 -> m42_401  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_411 -> m42_412  [key=0, style=solid];
m42_411 -> m42_49  [key=2, style=dotted];
m42_411 -> m42_415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_423 -> m42_424  [key=0, style=solid];
m42_423 -> m42_49  [key=2, style=dotted];
m42_423 -> m42_427  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_435 -> m42_436  [key=0, style=solid];
m42_435 -> m42_49  [key=2, style=dotted];
m42_435 -> m42_442  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_454 -> m42_455  [key=0, style=solid];
m42_454 -> m42_49  [key=2, style=dotted];
m42_454 -> m42_458  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_468 -> m42_469  [key=0, style=solid];
m42_468 -> m42_49  [key=2, style=dotted];
m42_468 -> m42_472  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_480 -> m42_481  [key=0, style=solid];
m42_480 -> m42_49  [key=2, style=dotted];
m42_480 -> m42_484  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_492 -> m42_493  [key=0, style=solid];
m42_492 -> m42_49  [key=2, style=dotted];
m42_492 -> m42_496  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_508 -> m42_509  [key=0, style=solid];
m42_508 -> m42_49  [key=2, style=dotted];
m42_508 -> m42_510  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_522 -> m42_523  [key=0, style=solid];
m42_522 -> m42_49  [key=2, style=dotted];
m42_522 -> m42_524  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_531 -> m42_532  [key=0, style=solid];
m42_531 -> m42_49  [key=2, style=dotted];
m42_531 -> m42_537  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_75 -> m42_76  [key=0, style=solid];
m42_75 -> m42_77  [key=2, style=dotted];
m42_74 -> m42_75  [key=0, style=solid];
m42_44 -> m42_54  [key=2, style=dotted];
m42_44 -> m42_45  [key=0, style=solid];
m42_94 -> m42_54  [key=2, style=dotted];
m42_94 -> m42_95  [key=0, style=solid];
m42_95 -> m42_54  [key=2, style=dotted];
m42_95 -> m42_96  [key=0, style=solid];
m42_131 -> m42_54  [key=2, style=dotted];
m42_131 -> m42_132  [key=0, style=solid];
m42_132 -> m42_54  [key=2, style=dotted];
m42_132 -> m42_133  [key=0, style=solid];
m42_92 -> m42_73  [key=2, style=dotted];
m42_92 -> m42_93  [key=0, style=solid];
m42_100 -> m42_73  [key=2, style=dotted];
m42_100 -> m42_101  [key=0, style=solid];
m42_137 -> m42_73  [key=2, style=dotted];
m42_137 -> m42_138  [key=0, style=solid];
m42_202 -> m42_73  [key=2, style=dotted];
m42_202 -> m42_203  [key=0, style=solid];
m42_246 -> m42_73  [key=2, style=dotted];
m42_246 -> m42_247  [key=0, style=solid];
m42_82 -> m42_83  [key=0, style=solid];
m42_82 -> m42_84  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_82 -> m42_89  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_82 -> m42_90  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_82 -> m42_93  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_82 -> m42_96  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_116 -> m42_117  [key=0, style=solid];
m42_116 -> m42_118  [key=2, style=dotted];
m42_85 -> m42_89  [key=1, style=dashed, color=darkseagreen4, label=state];
m42_85 -> m42_116  [key=1, style=dashed, color=darkseagreen4, label=state];
m42_85 -> m42_86  [key=0, style=solid];
m42_85 -> m42_103  [key=2, style=dotted];
m42_85 -> m42_87  [key=1, style=dashed, color=darkseagreen4, label=state];
m42_85 -> m42_88  [key=1, style=dashed, color=darkseagreen4, label=state];
m42_12 -> m42_10  [key=0, style=bold, color=blue];
m42_12 -> m42_13  [key=0, style=solid];
m42_20 -> m42_21  [key=0, style=solid];
m42_166 -> m42_167  [key=0, style=solid];
m42_168 -> m42_166  [key=0, style=bold, color=blue];
m42_215 -> m42_217  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_215 -> m42_216  [key=0, style=solid];
m42_258 -> m42_260  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_258 -> m42_259  [key=0, style=solid];
m42_284 -> m42_286  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_284 -> m42_285  [key=0, style=solid];
m42_296 -> m42_298  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_296 -> m42_297  [key=0, style=solid];
m42_334 -> m42_336  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_334 -> m42_335  [key=0, style=solid];
m42_347 -> m42_349  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_347 -> m42_348  [key=0, style=solid];
m42_359 -> m42_361  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_359 -> m42_360  [key=0, style=solid];
m42_384 -> m42_386  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_384 -> m42_385  [key=0, style=solid];
m42_396 -> m42_398  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_396 -> m42_397  [key=0, style=solid];
m42_410 -> m42_412  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_410 -> m42_411  [key=0, style=solid];
m42_422 -> m42_424  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_422 -> m42_423  [key=0, style=solid];
m42_453 -> m42_455  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_453 -> m42_454  [key=0, style=solid];
m42_467 -> m42_469  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_467 -> m42_468  [key=0, style=solid];
m42_479 -> m42_481  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_479 -> m42_480  [key=0, style=solid];
m42_491 -> m42_493  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_491 -> m42_492  [key=0, style=solid];
m42_503 -> m42_504  [key=0, style=solid];
m42_503 -> m42_508  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_507 -> m42_508  [key=0, style=solid];
m42_517 -> m42_518  [key=0, style=solid];
m42_517 -> m42_522  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_521 -> m42_522  [key=0, style=solid];
m42_96 -> m42_97  [key=0, style=solid];
m42_96 -> m42_98  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m42_96 -> m42_99  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m42_96 -> m42_101  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m42_96 -> m42_46  [key=2, style=dotted];
m42_96 -> m42_47  [key=2, style=dotted];
m42_96 -> m42_100  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m42_102 -> m42_82  [key=0, style=bold, color=blue];
m42_124 -> m42_134  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_124 -> m42_46  [key=2, style=dotted];
m42_124 -> m42_47  [key=2, style=dotted];
m42_124 -> n69  [key=2, style=dotted];
m42_124 -> m42_129  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_124 -> m42_130  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_124 -> m42_125  [key=0, style=solid];
m42_124 -> m42_150  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_133 -> m42_134  [key=0, style=solid];
m42_133 -> m42_135  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m42_133 -> m42_136  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m42_133 -> m42_138  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m42_133 -> m42_46  [key=2, style=dotted];
m42_133 -> m42_47  [key=2, style=dotted];
m42_133 -> m42_137  [key=1, style=dashed, color=darkseagreen4, label=jobState];
m42_139 -> m42_123  [key=0, style=bold, color=blue];
m42_185 -> m42_186  [key=0, style=solid];
m42_185 -> m42_187  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_185 -> m42_188  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_185 -> m42_46  [key=2, style=dotted];
m42_185 -> m42_47  [key=2, style=dotted];
m42_189 -> m42_183  [key=0, style=bold, color=blue];
m42_199 -> m42_200  [key=0, style=solid];
m42_199 -> m42_201  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_199 -> m42_46  [key=2, style=dotted];
m42_199 -> m42_47  [key=2, style=dotted];
m42_199 -> m42_202  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_199 -> m42_203  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_219 -> m42_215  [key=0, style=bold, color=blue];
m42_229 -> m42_230  [key=0, style=solid];
m42_229 -> m42_231  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_229 -> m42_232  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_229 -> m42_46  [key=2, style=dotted];
m42_229 -> m42_47  [key=2, style=dotted];
m42_233 -> m42_227  [key=0, style=bold, color=blue];
m42_243 -> m42_244  [key=0, style=solid];
m42_243 -> m42_245  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_243 -> m42_46  [key=2, style=dotted];
m42_243 -> m42_47  [key=2, style=dotted];
m42_243 -> m42_246  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_243 -> m42_247  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_262 -> m42_258  [key=0, style=bold, color=blue];
m42_272 -> m42_273  [key=0, style=solid];
m42_272 -> m42_274  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_272 -> m42_275  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_272 -> m42_46  [key=2, style=dotted];
m42_272 -> m42_47  [key=2, style=dotted];
m42_276 -> m42_270  [key=0, style=bold, color=blue];
m42_288 -> m42_284  [key=0, style=bold, color=blue];
m42_300 -> m42_296  [key=0, style=bold, color=blue];
m42_310 -> m42_311  [key=0, style=solid];
m42_310 -> m42_312  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_310 -> m42_313  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_310 -> m42_46  [key=2, style=dotted];
m42_310 -> m42_47  [key=2, style=dotted];
m42_314 -> m42_308  [key=0, style=bold, color=blue];
m42_324 -> m42_325  [key=0, style=solid];
m42_324 -> m42_46  [key=2, style=dotted];
m42_324 -> m42_47  [key=2, style=dotted];
m42_326 -> m42_322  [key=0, style=bold, color=blue];
m42_338 -> m42_334  [key=0, style=bold, color=blue];
m42_351 -> m42_347  [key=0, style=bold, color=blue];
m42_363 -> m42_359  [key=0, style=bold, color=blue];
m42_373 -> m42_374  [key=0, style=solid];
m42_373 -> m42_375  [key=1, style=dashed, color=darkseagreen4, label=record];
m42_373 -> m42_46  [key=2, style=dotted];
m42_373 -> m42_47  [key=2, style=dotted];
m42_376 -> m42_371  [key=0, style=bold, color=blue];
m42_388 -> m42_384  [key=0, style=bold, color=blue];
m42_400 -> m42_396  [key=0, style=bold, color=blue];
m42_414 -> m42_410  [key=0, style=bold, color=blue];
m42_426 -> m42_422  [key=0, style=bold, color=blue];
m42_436 -> m42_437  [key=0, style=solid];
m42_436 -> m42_438  [key=1, style=dashed, color=darkseagreen4, label=records];
m42_436 -> m42_439  [key=1, style=dashed, color=darkseagreen4, label=records];
m42_436 -> m42_46  [key=2, style=dotted];
m42_436 -> m42_441  [key=2, style=dotted];
m42_440 -> m42_434  [key=0, style=bold, color=blue];
m42_457 -> m42_453  [key=0, style=bold, color=blue];
m42_471 -> m42_467  [key=0, style=bold, color=blue];
m42_483 -> m42_479  [key=0, style=bold, color=blue];
m42_495 -> m42_491  [key=0, style=bold, color=blue];
m42_506 -> m42_503  [key=0, style=bold, color=blue];
m42_520 -> m42_517  [key=0, style=bold, color=blue];
m42_532 -> m42_533  [key=0, style=solid];
m42_532 -> m42_534  [key=1, style=dashed, color=darkseagreen4, label=result];
m42_532 -> m42_46  [key=2, style=dotted];
m42_532 -> m42_536  [key=2, style=dotted];
m42_532 -> m42_540  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_532 -> m42_543  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_535 -> m42_530  [key=0, style=bold, color=blue];
m42_45 -> m42_37  [key=0, style=bold, color=blue];
m42_22 -> m42_20  [key=0, style=bold, color=blue];
m42_22 -> m42_23  [key=0, style=solid];
m42_55 -> m42_56  [key=0, style=solid];
m42_57 -> m42_55  [key=0, style=bold, color=blue];
m42_42 -> m42_43  [key=0, style=solid];
m42_42 -> m42_51  [key=2, style=dotted];
m42_42 -> m42_52  [key=2, style=dotted];
m42_42 -> m42_53  [key=2, style=dotted];
m42_88 -> m42_89  [key=0, style=solid];
m42_88 -> m42_6  [key=2, style=dotted];
m42_88 -> m42_104  [key=2, style=dotted];
m42_88 -> m42_8  [key=2, style=dotted];
m42_88 -> m42_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_115 -> m42_116  [key=0, style=solid];
m42_123 -> m42_129  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_123 -> m42_130  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_123 -> m42_124  [key=0, style=solid];
m42_123 -> m42_133  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_125 -> m42_129  [key=1, style=dashed, color=darkseagreen4, label=state];
m42_125 -> m42_126  [key=0, style=solid];
m42_125 -> m42_103  [key=2, style=dotted];
m42_125 -> m42_127  [key=1, style=dashed, color=darkseagreen4, label=state];
m42_125 -> m42_128  [key=1, style=dashed, color=darkseagreen4, label=state];
m42_125 -> m42_150  [key=1, style=dashed, color=darkseagreen4, label=state];
m42_128 -> m42_129  [key=0, style=solid];
m42_128 -> m42_6  [key=2, style=dotted];
m42_128 -> m42_104  [key=2, style=dotted];
m42_128 -> m42_8  [key=2, style=dotted];
m42_128 -> m42_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_149 -> m42_150  [key=0, style=solid];
m42_156 -> m42_161  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_156 -> m42_157  [key=0, style=solid];
m42_158 -> m42_160  [key=1, style=dashed, color=darkseagreen4, label=correctProvider];
m42_158 -> m42_159  [key=0, style=solid];
m42_158 -> m42_5  [key=2, style=dotted];
m42_159 -> m42_160  [key=0, style=solid];
m42_159 -> m42_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_159 -> m42_6  [key=2, style=dotted];
m42_159 -> m42_8  [key=2, style=dotted];
m42_162 -> m42_163  [key=0, style=solid];
m42_162 -> m42_165  [key=2, style=dotted];
m42_162 -> m42_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_169 -> m42_170  [key=0, style=solid];
m42_183 -> m42_184  [key=0, style=solid];
m42_183 -> m42_185  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_190 -> m42_191  [key=0, style=solid];
m42_197 -> m42_198  [key=0, style=solid];
m42_197 -> m42_199  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_208 -> m42_209  [key=0, style=solid];
m42_220 -> m42_221  [key=0, style=solid];
m42_220 -> m42_222  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_227 -> m42_228  [key=0, style=solid];
m42_227 -> m42_229  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_234 -> m42_235  [key=0, style=solid];
m42_241 -> m42_242  [key=0, style=solid];
m42_241 -> m42_243  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_251 -> m42_252  [key=0, style=solid];
m42_263 -> m42_264  [key=0, style=solid];
m42_263 -> m42_265  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_270 -> m42_271  [key=0, style=solid];
m42_270 -> m42_272  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_277 -> m42_278  [key=0, style=solid];
m42_289 -> m42_290  [key=0, style=solid];
m42_289 -> m42_291  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_301 -> m42_302  [key=0, style=solid];
m42_301 -> m42_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_308 -> m42_309  [key=0, style=solid];
m42_308 -> m42_310  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_315 -> m42_316  [key=0, style=solid];
m42_322 -> m42_323  [key=0, style=solid];
m42_322 -> m42_324  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_327 -> m42_328  [key=0, style=solid];
m42_327 -> m42_329  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_339 -> m42_340  [key=0, style=solid];
m42_339 -> m42_341  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_352 -> m42_353  [key=0, style=solid];
m42_352 -> m42_354  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_364 -> m42_365  [key=0, style=solid];
m42_364 -> m42_366  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_371 -> m42_372  [key=0, style=solid];
m42_371 -> m42_373  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_377 -> m42_378  [key=0, style=solid];
m42_389 -> m42_390  [key=0, style=solid];
m42_389 -> m42_391  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_401 -> m42_402  [key=0, style=solid];
m42_401 -> m42_403  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_401 -> m42_404  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_415 -> m42_416  [key=0, style=solid];
m42_415 -> m42_417  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_427 -> m42_428  [key=0, style=solid];
m42_427 -> m42_429  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_434 -> m42_435  [key=0, style=solid];
m42_434 -> m42_436  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_442 -> m42_443  [key=0, style=solid];
m42_442 -> m42_444  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_442 -> m42_445  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_442 -> m42_446  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_442 -> m42_447  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_458 -> m42_459  [key=0, style=solid];
m42_458 -> m42_460  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_458 -> m42_461  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_458 -> m42_462  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_472 -> m42_473  [key=0, style=solid];
m42_472 -> m42_474  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_484 -> m42_485  [key=0, style=solid];
m42_484 -> m42_486  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_496 -> m42_497  [key=0, style=solid];
m42_496 -> m42_498  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction"];
m42_509 -> m42_507  [key=0, style=bold, color=blue];
m42_510 -> m42_511  [key=0, style=solid];
m42_523 -> m42_521  [key=0, style=bold, color=blue];
m42_524 -> m42_525  [key=0, style=solid];
m42_530 -> m42_531  [key=0, style=solid];
m42_530 -> m42_532  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_537 -> m42_538  [key=0, style=solid];
m42_76 -> m42_74  [key=0, style=bold, color=blue];
m42_203 -> m42_204  [key=0, style=solid];
m42_203 -> m42_205  [key=1, style=dashed, color=darkseagreen4, label=expireAt];
m42_247 -> m42_248  [key=0, style=solid];
m42_247 -> m42_249  [key=1, style=dashed, color=darkseagreen4, label=expireAt];
m42_117 -> m42_115  [key=0, style=bold, color=blue];
m42_86 -> m42_87  [key=0, style=solid];
m42_86 -> m42_6  [key=2, style=dotted];
m42_86 -> m42_8  [key=2, style=dotted];
m42_86 -> m42_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_87 -> m42_88  [key=0, style=solid];
m42_87 -> m42_6  [key=2, style=dotted];
m42_87 -> m42_8  [key=2, style=dotted];
m42_87 -> m42_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_150 -> m42_151  [key=0, style=solid];
m42_150 -> m42_152  [key=2, style=dotted];
m42_540 -> m42_541  [key=0, style=solid];
m42_543 -> m42_544  [key=0, style=solid];
m42_209 -> m42_58  [key=2, style=dotted];
m42_209 -> m42_210  [key=0, style=solid];
m42_209 -> m42_211  [key=2, style=dotted];
m42_252 -> m42_58  [key=2, style=dotted];
m42_252 -> m42_253  [key=0, style=solid];
m42_252 -> m42_254  [key=2, style=dotted];
m42_111 -> m42_112  [key=0, style=solid];
m42_126 -> m42_6  [key=2, style=dotted];
m42_126 -> m42_8  [key=2, style=dotted];
m42_126 -> m42_127  [key=0, style=solid];
m42_126 -> m42_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_127 -> m42_128  [key=0, style=solid];
m42_127 -> m42_6  [key=2, style=dotted];
m42_127 -> m42_8  [key=2, style=dotted];
m42_127 -> m42_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_146 -> m42_147  [key=0, style=solid];
m42_151 -> m42_149  [key=0, style=bold, color=blue];
m42_163 -> m42_156  [key=0, style=bold, color=blue];
m42_157 -> m42_158  [key=0, style=solid];
m42_157 -> m42_159  [key=1, style=dashed, color=darkseagreen4, label=correctJobQueue];
m42_157 -> m42_162  [key=1, style=dashed, color=darkseagreen4, label=correctJobQueue];
m42_157 -> m42_7  [key=2, style=dotted];
m42_173 -> m42_174  [key=0, style=solid];
m42_171 -> m42_169  [key=0, style=bold, color=blue];
m42_170 -> m42_171  [key=0, style=solid];
m42_170 -> m42_172  [key=2, style=dotted];
m42_192 -> m42_190  [key=0, style=bold, color=blue];
m42_191 -> m42_192  [key=0, style=solid];
m42_191 -> m42_193  [key=2, style=dotted];
m42_206 -> m42_197  [key=0, style=bold, color=blue];
m42_210 -> m42_208  [key=0, style=bold, color=blue];
m42_223 -> m42_220  [key=0, style=bold, color=blue];
m42_221 -> m42_222  [key=0, style=solid];
m42_221 -> m42_193  [key=2, style=dotted];
m42_222 -> m42_223  [key=0, style=solid];
m42_222 -> m42_193  [key=2, style=dotted];
m42_236 -> m42_234  [key=0, style=bold, color=blue];
m42_235 -> m42_236  [key=0, style=solid];
m42_235 -> m42_237  [key=2, style=dotted];
m42_250 -> m42_241  [key=0, style=bold, color=blue];
m42_253 -> m42_251  [key=0, style=bold, color=blue];
m42_266 -> m42_263  [key=0, style=bold, color=blue];
m42_264 -> m42_265  [key=0, style=solid];
m42_264 -> m42_237  [key=2, style=dotted];
m42_265 -> m42_266  [key=0, style=solid];
m42_265 -> m42_237  [key=2, style=dotted];
m42_279 -> m42_277  [key=0, style=bold, color=blue];
m42_278 -> m42_279  [key=0, style=solid];
m42_278 -> m42_280  [key=2, style=dotted];
m42_292 -> m42_289  [key=0, style=bold, color=blue];
m42_290 -> m42_291  [key=0, style=solid];
m42_290 -> m42_280  [key=2, style=dotted];
m42_291 -> m42_292  [key=0, style=solid];
m42_291 -> m42_280  [key=2, style=dotted];
m42_304 -> m42_301  [key=0, style=bold, color=blue];
m42_302 -> m42_303  [key=0, style=solid];
m42_302 -> m42_280  [key=2, style=dotted];
m42_303 -> m42_304  [key=0, style=solid];
m42_303 -> m42_280  [key=2, style=dotted];
m42_317 -> m42_315  [key=0, style=bold, color=blue];
m42_316 -> m42_317  [key=0, style=solid];
m42_316 -> m42_318  [key=2, style=dotted];
m42_330 -> m42_327  [key=0, style=bold, color=blue];
m42_328 -> m42_329  [key=0, style=solid];
m42_328 -> m42_280  [key=2, style=dotted];
m42_329 -> m42_330  [key=0, style=solid];
m42_329 -> m42_318  [key=2, style=dotted];
m42_342 -> m42_339  [key=0, style=bold, color=blue];
m42_340 -> m42_341  [key=0, style=solid];
m42_340 -> m42_280  [key=2, style=dotted];
m42_341 -> m42_342  [key=0, style=solid];
m42_341 -> m42_343  [key=2, style=dotted];
m42_355 -> m42_352  [key=0, style=bold, color=blue];
m42_353 -> m42_354  [key=0, style=solid];
m42_353 -> m42_280  [key=2, style=dotted];
m42_354 -> m42_355  [key=0, style=solid];
m42_354 -> m42_343  [key=2, style=dotted];
m42_367 -> m42_364  [key=0, style=bold, color=blue];
m42_365 -> m42_366  [key=0, style=solid];
m42_365 -> m42_280  [key=2, style=dotted];
m42_366 -> m42_367  [key=0, style=solid];
m42_366 -> m42_343  [key=2, style=dotted];
m42_379 -> m42_377  [key=0, style=bold, color=blue];
m42_378 -> m42_379  [key=0, style=solid];
m42_378 -> m42_380  [key=2, style=dotted];
m42_392 -> m42_389  [key=0, style=bold, color=blue];
m42_390 -> m42_391  [key=0, style=solid];
m42_390 -> m42_380  [key=2, style=dotted];
m42_391 -> m42_392  [key=0, style=solid];
m42_391 -> m42_380  [key=2, style=dotted];
m42_405 -> m42_401  [key=0, style=bold, color=blue];
m42_402 -> m42_403  [key=0, style=solid];
m42_402 -> m42_380  [key=2, style=dotted];
m42_403 -> m42_404  [key=0, style=solid];
m42_403 -> m42_380  [key=2, style=dotted];
m42_404 -> m42_405  [key=0, style=solid];
m42_404 -> m42_406  [key=2, style=dotted];
m42_418 -> m42_415  [key=0, style=bold, color=blue];
m42_416 -> m42_417  [key=0, style=solid];
m42_416 -> m42_380  [key=2, style=dotted];
m42_417 -> m42_418  [key=0, style=solid];
m42_417 -> m42_406  [key=2, style=dotted];
m42_430 -> m42_427  [key=0, style=bold, color=blue];
m42_428 -> m42_429  [key=0, style=solid];
m42_428 -> m42_380  [key=2, style=dotted];
m42_429 -> m42_430  [key=0, style=solid];
m42_429 -> m42_406  [key=2, style=dotted];
m42_448 -> m42_442  [key=0, style=bold, color=blue];
m42_443 -> m42_444  [key=0, style=solid];
m42_443 -> m42_380  [key=2, style=dotted];
m42_444 -> m42_445  [key=0, style=solid];
m42_444 -> m42_380  [key=2, style=dotted];
m42_445 -> m42_446  [key=0, style=solid];
m42_445 -> m42_380  [key=2, style=dotted];
m42_446 -> m42_447  [key=0, style=solid];
m42_446 -> m42_380  [key=2, style=dotted];
m42_447 -> m42_448  [key=0, style=solid];
m42_447 -> m42_449  [key=2, style=dotted];
m42_463 -> m42_458  [key=0, style=bold, color=blue];
m42_459 -> m42_460  [key=0, style=solid];
m42_459 -> m42_380  [key=2, style=dotted];
m42_460 -> m42_461  [key=0, style=solid];
m42_460 -> m42_380  [key=2, style=dotted];
m42_461 -> m42_462  [key=0, style=solid];
m42_461 -> m42_380  [key=2, style=dotted];
m42_462 -> m42_463  [key=0, style=solid];
m42_462 -> m42_449  [key=2, style=dotted];
m42_475 -> m42_472  [key=0, style=bold, color=blue];
m42_473 -> m42_474  [key=0, style=solid];
m42_473 -> m42_380  [key=2, style=dotted];
m42_474 -> m42_475  [key=0, style=solid];
m42_474 -> m42_449  [key=2, style=dotted];
m42_487 -> m42_484  [key=0, style=bold, color=blue];
m42_485 -> m42_486  [key=0, style=solid];
m42_485 -> m42_380  [key=2, style=dotted];
m42_486 -> m42_487  [key=0, style=solid];
m42_486 -> m42_449  [key=2, style=dotted];
m42_499 -> m42_496  [key=0, style=bold, color=blue];
m42_497 -> m42_498  [key=0, style=solid];
m42_497 -> m42_380  [key=2, style=dotted];
m42_498 -> m42_499  [key=0, style=solid];
m42_498 -> m42_449  [key=2, style=dotted];
m42_512 -> m42_510  [key=0, style=bold, color=blue];
m42_511 -> m42_104  [key=2, style=dotted];
m42_511 -> m42_512  [key=0, style=solid];
m42_511 -> m42_513  [key=2, style=dotted];
m42_526 -> m42_524  [key=0, style=bold, color=blue];
m42_525 -> m42_526  [key=0, style=solid];
m42_525 -> m42_513  [key=2, style=dotted];
m42_539 -> m42_537  [key=0, style=bold, color=blue];
m42_538 -> m42_104  [key=2, style=dotted];
m42_538 -> m42_539  [key=0, style=solid];
m42_538 -> m42_513  [key=2, style=dotted];
m42_204 -> m42_53  [key=2, style=dotted];
m42_204 -> m42_205  [key=0, style=solid];
m42_204 -> m42_207  [key=2, style=dotted];
m42_205 -> m42_53  [key=2, style=dotted];
m42_205 -> m42_206  [key=0, style=solid];
m42_205 -> m42_207  [key=2, style=dotted];
m42_248 -> m42_53  [key=2, style=dotted];
m42_248 -> m42_249  [key=0, style=solid];
m42_248 -> m42_207  [key=2, style=dotted];
m42_249 -> m42_53  [key=2, style=dotted];
m42_249 -> m42_250  [key=0, style=solid];
m42_249 -> m42_207  [key=2, style=dotted];
m42_105 -> m42_106  [key=0, style=solid];
m42_108 -> m42_109  [key=0, style=solid];
m42_542 -> m42_540  [key=0, style=bold, color=blue];
m42_541 -> m42_542  [key=0, style=solid];
m42_545 -> m42_543  [key=0, style=bold, color=blue];
m42_544 -> m42_545  [key=0, style=solid];
m42_113 -> m42_111  [key=0, style=bold, color=blue];
m42_112 -> m42_113  [key=0, style=solid];
m42_112 -> m42_114  [key=2, style=dotted];
m42_140 -> m42_141  [key=0, style=solid];
m42_148 -> m42_146  [key=0, style=bold, color=blue];
m42_147 -> m42_148  [key=0, style=solid];
m42_147 -> m42_114  [key=2, style=dotted];
m42_175 -> m42_173  [key=0, style=bold, color=blue];
m42_174 -> m42_175  [key=0, style=solid];
m42_174 -> m42_176  [key=2, style=dotted];
m42_107 -> m42_105  [key=0, style=bold, color=blue];
m42_106 -> m42_107  [key=0, style=solid];
m42_110 -> m42_108  [key=0, style=bold, color=blue];
m42_109 -> m42_110  [key=0, style=solid];
m42_142 -> m42_140  [key=0, style=bold, color=blue];
m42_141 -> m42_142  [key=0, style=solid];
m42_144 -> m42_145  [key=0, style=solid];
m42_145 -> m42_143  [key=0, style=bold, color=blue];
m42_177 -> m42_178  [key=0, style=solid];
m42_178 -> m42_46  [key=2, style=dotted];
m42_178 -> m42_47  [key=2, style=dotted];
m42_178 -> m42_179  [key=0, style=solid];
m42_179 -> m42_177  [key=0, style=bold, color=blue];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_0  [key=0, style=bold, color=blue];
m42_1 -> m42_3  [key=1, style=dashed, color=darkseagreen4, label=defaultProvider];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_5  [key=2, style=dotted];
m42_393 -> m42_394  [key=0, style=solid];
m42_394 -> m42_36  [key=2, style=dotted];
m42_394 -> m42_395  [key=0, style=solid];
m42_394 -> m42_396  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_395 -> m42_393  [key=0, style=bold, color=blue];
m42_2 -> m42_3  [key=0, style=solid];
m42_2 -> m42_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_2 -> m42_6  [key=2, style=dotted];
m42_2 -> m42_7  [key=2, style=dotted];
m42_2 -> m42_8  [key=2, style=dotted];
m42_3 -> m42_4  [key=0, style=solid];
m42_3 -> m42_5  [key=2, style=dotted];
m42_3 -> m42_6  [key=2, style=dotted];
m42_3 -> m42_34  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.BackgroundJobServerOptions options"];
m42_3 -> m42_9  [key=2, style=dotted];
m42_4 -> m42_2  [key=0, style=bold, color=blue];
m42_4 -> m42_0  [key=0, style=bold, color=blue];
m42_464 -> m42_465  [key=0, style=solid];
m42_465 -> m42_36  [key=2, style=dotted];
m42_465 -> m42_466  [key=0, style=solid];
m42_465 -> m42_467  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_466 -> m42_464  [key=0, style=bold, color=blue];
m42_476 -> m42_477  [key=0, style=solid];
m42_477 -> m42_36  [key=2, style=dotted];
m42_477 -> m42_478  [key=0, style=solid];
m42_477 -> m42_479  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_478 -> m42_476  [key=0, style=bold, color=blue];
m42_281 -> m42_282  [key=0, style=solid];
m42_282 -> m42_36  [key=2, style=dotted];
m42_282 -> m42_283  [key=0, style=solid];
m42_282 -> m42_284  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_283 -> m42_281  [key=0, style=bold, color=blue];
m42_488 -> m42_489  [key=0, style=solid];
m42_489 -> m42_36  [key=2, style=dotted];
m42_489 -> m42_490  [key=0, style=solid];
m42_489 -> m42_491  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_490 -> m42_488  [key=0, style=bold, color=blue];
m42_14 -> m42_12  [key=0, style=bold, color=blue];
m42_13 -> m42_14  [key=0, style=solid];
m42_13 -> m42_5  [key=2, style=dotted];
m42_13 -> m42_15  [key=2, style=dotted];
m42_78 -> m42_79  [key=0, style=solid, color=green];
m42_79 -> m42_80  [key=0, style=solid, color=green];
m42_79 -> m42_83  [key=1, style=dashed, color=green, label=arrangeSql];
m42_79 -> m42_84  [key=1, style=dashed, color=green, label=arrangeSql];
m42_80 -> m42_36  [key=2, style=dotted];
m42_80 -> m42_81  [key=0, style=solid];
m42_80 -> m42_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_81 -> m42_78  [key=0, style=bold, color=blue];
m42_194 -> m42_195  [key=0, style=solid];
m42_195 -> m42_36  [key=2, style=dotted];
m42_195 -> m42_196  [key=0, style=solid];
m42_195 -> m42_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_196 -> m42_194  [key=0, style=bold, color=blue];
m42_23 -> m42_24  [key=0, style=solid];
m42_23 -> m42_5  [key=2, style=dotted];
m42_23 -> m42_15  [key=2, style=dotted];
m42_546 -> m42_547  [key=0, style=solid];
m42_546 -> m42_548  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m42_547 -> m42_31  [key=2, style=dotted];
m42_547 -> m42_548  [key=0, style=solid];
m42_548 -> m42_549  [key=0, style=solid];
m42_548 -> m42_550  [key=2, style=dotted];
m42_549 -> m42_546  [key=0, style=bold, color=blue];
m42_514 -> m42_515  [key=0, style=solid];
m42_515 -> m42_36  [key=2, style=dotted];
m42_515 -> m42_516  [key=0, style=solid];
m42_515 -> m42_517  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_516 -> m42_514  [key=0, style=bold, color=blue];
m42_24 -> m42_22  [key=0, style=bold, color=blue];
m42_24 -> m42_25  [key=0, style=solid, color=green];
m42_450 -> m42_451  [key=0, style=solid];
m42_451 -> m42_36  [key=2, style=dotted];
m42_451 -> m42_452  [key=0, style=solid];
m42_451 -> m42_453  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_452 -> m42_450  [key=0, style=bold, color=blue];
m42_238 -> m42_239  [key=0, style=solid];
m42_239 -> m42_36  [key=2, style=dotted];
m42_239 -> m42_240  [key=0, style=solid];
m42_239 -> m42_241  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_240 -> m42_238  [key=0, style=bold, color=blue];
m42_180 -> m42_181  [key=0, style=solid];
m42_181 -> m42_36  [key=2, style=dotted];
m42_181 -> m42_182  [key=0, style=solid];
m42_181 -> m42_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_182 -> m42_180  [key=0, style=bold, color=blue];
m42_381 -> m42_382  [key=0, style=solid];
m42_382 -> m42_36  [key=2, style=dotted];
m42_382 -> m42_383  [key=0, style=solid];
m42_382 -> m42_384  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m42_383 -> m42_381  [key=0, style=bold, color=blue];
m42_556 -> m42_62  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_68  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_70  [key=1, style=dashed, color=green, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_129  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_160  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_161  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_184  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_195  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_198  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_213  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_216  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_225  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_228  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_239  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_242  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_256  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_268  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_271  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_282  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_285  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_294  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_297  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_306  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_309  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_320  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_323  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_332  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_335  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_345  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_348  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_357  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_360  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_369  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_372  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_382  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_385  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_394  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_397  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_408  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_411  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_420  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_423  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_432  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_435  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_451  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_454  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_465  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_468  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_477  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_480  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_489  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_492  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_501  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_504  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_508  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_515  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_518  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_522  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_528  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_531  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_556 -> m42_551  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerWriteOnlyTransactionFacts"];
m42_557 -> m42_38  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m42_557 -> m42_39  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m42_559 -> m42_65  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m42_559 -> m42_66  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m42_561 -> m42_83  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m42_561 -> m42_84  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m42_558 -> m42_56  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_567 -> m42_508  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_568 -> m42_522  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m42_560 -> m42_75  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_562 -> m42_116  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_563 -> m42_116  [key=1, style=dashed, color=darkseagreen4, label=state];
m42_564 -> m42_124  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m42_565 -> m42_150  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m42_566 -> m42_150  [key=1, style=dashed, color=darkseagreen4, label=state];
m43_3 -> m43_4  [key=0, style=solid];
m43_3 -> m43_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m43_3 -> m43_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m43_3 -> m43_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m43_3 -> m43_10  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m43_3 -> m43_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m43_3 -> m43_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m43_3 -> m43_3  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.States.JobState OnStateChanged"];
m43_4 -> m43_5  [key=0, style=solid];
m43_4 -> m43_6  [key=0, style=solid];
m43_6 -> m43_7  [key=0, style=solid];
m43_6 -> m43_8  [key=0, style=solid];
m43_8 -> m43_9  [key=0, style=solid];
m43_8 -> m43_10  [key=0, style=solid];
m43_9 -> m43_16  [key=0, style=solid];
m43_10 -> m43_11  [key=0, style=solid];
m43_10 -> m43_18  [key=2, style=dotted];
m43_10 -> m43_19  [key=2, style=dotted];
m43_14 -> m43_16  [key=0, style=solid];
m43_14 -> m43_24  [key=2, style=dotted];
m43_14 -> m43_25  [key=2, style=dotted];
m43_15 -> m43_16  [key=0, style=solid];
m43_5 -> m43_16  [key=0, style=solid];
m43_5 -> n12  [key=2, style=dotted];
m43_7 -> m43_16  [key=0, style=solid];
m43_7 -> n12  [key=2, style=dotted];
m43_11 -> m43_12  [key=0, style=solid];
m43_11 -> m43_20  [key=2, style=dotted];
m43_12 -> m43_13  [key=0, style=solid];
m43_12 -> m43_21  [key=2, style=dotted];
m43_12 -> m43_22  [key=2, style=dotted];
m43_12 -> m43_23  [key=2, style=dotted];
m43_12 -> m43_14  [key=1, style=dashed, color=darkseagreen4, label=recurringAttribute];
m43_13 -> m43_14  [key=0, style=solid];
m43_13 -> m43_15  [key=0, style=solid];
m43_16 -> m43_3  [key=0, style=bold, color=blue];
m43_0 -> m43_1  [key=0, style=solid];
m43_1 -> m43_2  [key=0, style=solid];
m43_2 -> m43_0  [key=0, style=bold, color=blue];
m43_26 -> m43_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RecurringAttribute"];
m45_45 -> m45_46  [key=0, style=solid];
m45_46 -> m45_47  [key=0, style=solid];
m45_46 -> m45_21  [key=2, style=dotted];
m45_48 -> m45_49  [key=0, style=solid];
m45_48 -> m45_23  [key=2, style=dotted];
m45_48 -> m45_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_49 -> m45_50  [key=0, style=solid];
m45_49 -> m45_23  [key=2, style=dotted];
m45_49 -> m45_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_47 -> m45_48  [key=0, style=solid];
m45_47 -> m45_51  [key=2, style=dotted];
m45_50 -> m45_45  [key=0, style=bold, color=blue];
m45_98 -> m45_99  [key=0, style=solid];
m45_100 -> m45_101  [key=0, style=solid];
m45_100 -> m45_21  [key=2, style=dotted];
m45_100 -> m45_102  [key=1, style=dashed, color=darkseagreen4, label=collection];
m45_100 -> m45_103  [key=1, style=dashed, color=darkseagreen4, label=collection];
m45_99 -> m45_5  [key=2, style=dotted];
m45_99 -> m45_100  [key=0, style=solid];
m45_99 -> m45_101  [key=1, style=dashed, color=darkseagreen4, label=runner];
m45_99 -> m45_102  [key=1, style=dashed, color=darkseagreen4, label=runner];
m45_99 -> m45_103  [key=1, style=dashed, color=darkseagreen4, label=runner];
m45_101 -> m45_102  [key=0, style=solid];
m45_101 -> m45_81  [key=2, style=dotted];
m45_102 -> m45_103  [key=0, style=solid];
m45_102 -> m45_105  [key=2, style=dotted];
m45_103 -> m45_104  [key=0, style=solid];
m45_103 -> m45_95  [key=2, style=dotted];
m45_103 -> m45_96  [key=2, style=dotted];
m45_104 -> m45_98  [key=0, style=bold, color=blue];
m45_82 -> m45_83  [key=0, style=solid];
m45_83 -> m45_84  [key=0, style=solid];
m45_83 -> m45_21  [key=2, style=dotted];
m45_83 -> m45_85  [key=1, style=dashed, color=darkseagreen4, label=collection];
m45_84 -> m45_85  [key=0, style=solid];
m45_84 -> m45_87  [key=2, style=dotted];
m45_85 -> m45_86  [key=0, style=solid];
m45_85 -> m45_75  [key=2, style=dotted];
m45_86 -> m45_82  [key=0, style=bold, color=blue];
m45_0 -> m45_1  [key=0, style=solid, color=green];
m45_0 -> m45_2  [key=1, style=dashed, color=red, label=string];
m45_0 -> m45_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m45_1 -> m45_2  [key=0, style=solid, color=green];
m45_1 -> m45_5  [key=2, style=dotted, color=green];
m45_2 -> m45_3  [key=0, style=solid, color=green];
m45_2 -> m45_5  [key=2, style=dotted];
m45_3 -> m45_4  [key=0, style=solid, color=green];
m45_3 -> m45_6  [key=2, style=dotted, color=green];
m45_4 -> m45_0  [key=0, style=bold, color=blue];
m45_7 -> m45_8  [key=0, style=solid, color=green];
m45_8 -> m45_9  [key=0, style=solid, color=green];
m45_8 -> n67  [key=2, style=dotted, color=green];
m45_8 -> m45_11  [key=1, style=dashed, color=green, label="lambda expression"];
m45_9 -> m45_7  [key=0, style=bold, color=blue];
m45_5 -> m45_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m45_5 -> m45_2  [key=1, style=dashed, color=red, label="HangFire.Server.ServerContext"];
m45_5 -> m45_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m45_88 -> m45_89  [key=0, style=solid];
m45_90 -> m45_91  [key=0, style=solid];
m45_90 -> m45_21  [key=2, style=dotted];
m45_90 -> m45_92  [key=1, style=dashed, color=darkseagreen4, label=collection];
m45_90 -> m45_93  [key=1, style=dashed, color=darkseagreen4, label=collection];
m45_89 -> m45_5  [key=2, style=dotted];
m45_89 -> m45_90  [key=0, style=solid];
m45_89 -> m45_91  [key=1, style=dashed, color=darkseagreen4, label=element];
m45_89 -> m45_92  [key=1, style=dashed, color=darkseagreen4, label=element];
m45_89 -> m45_93  [key=1, style=dashed, color=darkseagreen4, label=element];
m45_91 -> m45_92  [key=0, style=solid];
m45_91 -> m45_95  [key=2, style=dotted];
m45_91 -> m45_96  [key=2, style=dotted];
m45_92 -> m45_93  [key=0, style=solid];
m45_92 -> m45_81  [key=2, style=dotted];
m45_93 -> m45_94  [key=0, style=solid];
m45_93 -> m45_95  [key=2, style=dotted];
m45_93 -> m45_97  [key=2, style=dotted];
m45_94 -> m45_88  [key=0, style=bold, color=blue];
m45_21 -> m45_106  [key=0, style=solid];
m45_106 -> m45_14  [key=2, style=dotted];
m45_106 -> m45_107  [key=0, style=solid];
m45_107 -> m45_21  [key=0, style=bold, color=blue];
m45_76 -> m45_77  [key=0, style=solid];
m45_77 -> m45_78  [key=0, style=solid];
m45_77 -> m45_21  [key=2, style=dotted];
m45_77 -> m45_79  [key=1, style=dashed, color=darkseagreen4, label=collection];
m45_78 -> m45_5  [key=2, style=dotted];
m45_78 -> m45_79  [key=0, style=solid];
m45_78 -> m45_81  [key=2, style=dotted];
m45_79 -> m45_80  [key=0, style=solid];
m45_79 -> m45_75  [key=2, style=dotted];
m45_80 -> m45_76  [key=0, style=bold, color=blue];
m45_15 -> m45_16  [key=0, style=solid];
m45_16 -> m45_17  [key=0, style=solid];
m45_16 -> m45_21  [key=2, style=dotted];
m45_18 -> m45_19  [key=0, style=solid];
m45_18 -> m45_23  [key=2, style=dotted];
m45_18 -> m45_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_19 -> m45_20  [key=0, style=solid];
m45_19 -> m45_23  [key=2, style=dotted];
m45_19 -> m45_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_17 -> m45_18  [key=0, style=solid];
m45_17 -> m45_22  [key=2, style=dotted];
m45_20 -> m45_15  [key=0, style=bold, color=blue];
m45_68 -> m45_69  [key=0, style=solid];
m45_11 -> m45_12  [key=0, style=solid, color=green];
m45_12 -> m45_13  [key=0, style=solid, color=green];
m45_12 -> m45_14  [key=2, style=dotted, color=green];
m45_13 -> m45_11  [key=0, style=bold, color=blue];
m45_24 -> m45_25  [key=0, style=solid];
m45_28 -> m45_29  [key=0, style=solid];
m45_38 -> m45_39  [key=0, style=solid];
m45_42 -> m45_43  [key=0, style=solid];
m45_52 -> m45_53  [key=0, style=solid];
m45_56 -> m45_57  [key=0, style=solid];
m45_65 -> m45_66  [key=0, style=solid];
m45_26 -> m45_24  [key=0, style=bold, color=blue];
m45_25 -> m45_26  [key=0, style=solid];
m45_25 -> m45_27  [key=2, style=dotted];
m45_30 -> m45_28  [key=0, style=bold, color=blue];
m45_29 -> m45_30  [key=0, style=solid];
m45_29 -> m45_27  [key=2, style=dotted];
m45_40 -> m45_38  [key=0, style=bold, color=blue];
m45_39 -> m45_40  [key=0, style=solid];
m45_39 -> m45_41  [key=2, style=dotted];
m45_44 -> m45_42  [key=0, style=bold, color=blue];
m45_43 -> m45_44  [key=0, style=solid];
m45_43 -> m45_41  [key=2, style=dotted];
m45_54 -> m45_52  [key=0, style=bold, color=blue];
m45_53 -> m45_54  [key=0, style=solid];
m45_53 -> m45_55  [key=2, style=dotted];
m45_58 -> m45_56  [key=0, style=bold, color=blue];
m45_57 -> m45_58  [key=0, style=solid];
m45_57 -> m45_55  [key=2, style=dotted];
m45_67 -> m45_65  [key=0, style=bold, color=blue];
m45_66 -> m45_67  [key=0, style=solid];
m45_66 -> m45_41  [key=2, style=dotted];
m45_69 -> m45_70  [key=0, style=solid];
m45_69 -> m45_41  [key=2, style=dotted];
m45_70 -> m45_68  [key=0, style=bold, color=blue];
m45_31 -> m45_32  [key=0, style=solid];
m45_32 -> m45_33  [key=0, style=solid];
m45_32 -> m45_21  [key=2, style=dotted];
m45_34 -> m45_35  [key=0, style=solid];
m45_34 -> m45_23  [key=2, style=dotted];
m45_34 -> m45_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_35 -> m45_36  [key=0, style=solid];
m45_35 -> m45_23  [key=2, style=dotted];
m45_35 -> m45_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_33 -> m45_34  [key=0, style=solid];
m45_33 -> m45_37  [key=2, style=dotted];
m45_36 -> m45_31  [key=0, style=bold, color=blue];
m45_71 -> m45_72  [key=0, style=solid];
m45_72 -> m45_73  [key=0, style=solid];
m45_72 -> m45_21  [key=2, style=dotted];
m45_73 -> m45_74  [key=0, style=solid];
m45_73 -> m45_75  [key=2, style=dotted];
m45_74 -> m45_71  [key=0, style=bold, color=blue];
m45_59 -> m45_60  [key=0, style=solid];
m45_60 -> m45_61  [key=0, style=solid];
m45_60 -> m45_21  [key=2, style=dotted];
m45_62 -> m45_63  [key=0, style=solid];
m45_62 -> m45_23  [key=2, style=dotted];
m45_62 -> m45_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_63 -> m45_64  [key=0, style=solid];
m45_63 -> m45_23  [key=2, style=dotted];
m45_63 -> m45_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_61 -> m45_62  [key=0, style=solid];
m45_61 -> m45_51  [key=2, style=dotted];
m45_64 -> m45_59  [key=0, style=bold, color=blue];
m45_108 -> m45_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_3  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m45_108 -> m45_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.ServerComponentRunnerCollectionFacts"];
m46_0 -> m46_1  [key=0, style=solid, color=green];
m46_1 -> m46_2  [key=0, style=solid, color=green];
m46_2 -> m46_0  [key=0, style=bold, color=blue];
m46_3 -> m46_1  [key=1, style=dashed, color=green, label="HangFire.Filters.ServerExceptionContext"];
m47_36 -> m47_34  [key=0, style=bold, color=blue];
m47_34 -> m47_35  [key=0, style=solid];
m47_35 -> m47_36  [key=0, style=solid];
m47_35 -> m47_11  [key=2, style=dotted];
m47_35 -> m47_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_202 -> m47_203  [key=0, style=solid];
m47_202 -> m47_11  [key=2, style=dotted];
m47_202 -> m47_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_201 -> m47_202  [key=0, style=solid];
m47_203 -> m47_201  [key=0, style=bold, color=blue];
m47_175 -> m47_176  [key=0, style=solid];
m47_176 -> m47_177  [key=0, style=solid];
m47_176 -> m47_11  [key=2, style=dotted];
m47_176 -> m47_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_177 -> m47_175  [key=0, style=bold, color=blue];
m47_9 -> m47_10  [key=0, style=solid, color=red];
m47_9 -> m47_11  [key=2, style=dotted, color=red];
m47_9 -> m47_12  [key=1, style=dashed, color=red, label="lambda expression"];
m47_8 -> m47_9  [key=0, style=solid, color=red];
m47_10 -> m47_8  [key=0, style=bold, color=blue];
m47_64 -> m47_62  [key=0, style=bold, color=blue];
m47_62 -> m47_63  [key=0, style=solid];
m47_63 -> m47_64  [key=0, style=solid];
m47_63 -> m47_11  [key=2, style=dotted];
m47_63 -> m47_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_267 -> m47_268  [key=0, style=solid];
m47_268 -> m47_269  [key=0, style=solid];
m47_268 -> m47_11  [key=2, style=dotted];
m47_268 -> m47_270  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_269 -> m47_267  [key=0, style=bold, color=blue];
m47_25 -> m47_364  [key=0, style=solid];
m47_25 -> m47_365  [key=1, style=dashed, color=darkseagreen4, label="System.Action<HangFire.Redis.RedisWriteOnlyTransaction>"];
m47_25 -> m47_9  [key=3, color=red, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_35  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_63  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_94  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_114  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_130  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_163  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_176  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_188  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_202  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_216  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_229  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_243  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_255  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_268  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_281  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_294  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_309  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_326  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_340  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_25 -> m47_353  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<HangFire.Redis.RedisWriteOnlyTransaction> action"];
m47_364 -> m47_365  [key=0, style=solid];
m47_364 -> m47_368  [key=2, style=dotted];
m47_364 -> m47_369  [key=2, style=dotted];
m47_364 -> m47_366  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m47_365 -> m47_366  [key=0, style=solid];
m47_365 -> m47_370  [key=2, style=dotted];
m47_366 -> m47_367  [key=0, style=solid];
m47_366 -> m47_371  [key=2, style=dotted];
m47_367 -> m47_25  [key=0, style=bold, color=blue];
m47_372 -> m47_373  [key=0, style=solid];
m47_372 -> m47_374  [key=1, style=dashed, color=darkseagreen4, label="System.Action<IRedisClient>"];
m47_373 -> m47_374  [key=0, style=solid];
m47_373 -> m47_376  [key=2, style=dotted];
m47_374 -> m47_375  [key=0, style=solid];
m47_374 -> m47_370  [key=2, style=dotted];
m47_375 -> m47_372  [key=0, style=bold, color=blue];
m47_162 -> m47_163  [key=0, style=solid];
m47_163 -> m47_164  [key=0, style=solid];
m47_163 -> m47_11  [key=2, style=dotted];
m47_163 -> m47_165  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_164 -> m47_162  [key=0, style=bold, color=blue];
m47_293 -> m47_294  [key=0, style=solid];
m47_294 -> m47_295  [key=0, style=solid];
m47_294 -> m47_11  [key=2, style=dotted];
m47_294 -> m47_296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_295 -> m47_293  [key=0, style=bold, color=blue];
m47_339 -> m47_340  [key=0, style=solid];
m47_340 -> m47_341  [key=0, style=solid];
m47_340 -> m47_11  [key=2, style=dotted];
m47_340 -> m47_342  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_341 -> m47_339  [key=0, style=bold, color=blue];
m47_229 -> m47_230  [key=0, style=solid];
m47_229 -> m47_11  [key=2, style=dotted];
m47_229 -> m47_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_228 -> m47_229  [key=0, style=solid];
m47_230 -> m47_228  [key=0, style=bold, color=blue];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_2  [key=0, style=solid];
m47_1 -> n67  [key=2, style=dotted];
m47_1 -> m47_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_2 -> m47_0  [key=0, style=bold, color=blue];
m47_217 -> m47_215  [key=0, style=bold, color=blue];
m47_215 -> m47_216  [key=0, style=solid];
m47_216 -> m47_217  [key=0, style=solid];
m47_216 -> m47_11  [key=2, style=dotted];
m47_216 -> m47_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_280 -> m47_281  [key=0, style=solid];
m47_281 -> m47_282  [key=0, style=solid];
m47_281 -> m47_11  [key=2, style=dotted];
m47_281 -> m47_283  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_282 -> m47_280  [key=0, style=bold, color=blue];
m47_93 -> m47_94  [key=0, style=solid];
m47_94 -> m47_95  [key=0, style=solid];
m47_94 -> m47_11  [key=2, style=dotted];
m47_94 -> m47_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_95 -> m47_93  [key=0, style=bold, color=blue];
m47_131 -> m47_129  [key=0, style=bold, color=blue];
m47_129 -> m47_130  [key=0, style=solid];
m47_130 -> m47_131  [key=0, style=solid];
m47_130 -> m47_11  [key=2, style=dotted];
m47_130 -> m47_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_114 -> m47_115  [key=0, style=solid];
m47_114 -> m47_11  [key=2, style=dotted];
m47_114 -> m47_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_113 -> m47_114  [key=0, style=solid];
m47_115 -> m47_113  [key=0, style=bold, color=blue];
m47_242 -> m47_243  [key=0, style=solid];
m47_243 -> m47_244  [key=0, style=solid];
m47_243 -> m47_11  [key=2, style=dotted];
m47_243 -> m47_245  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_244 -> m47_242  [key=0, style=bold, color=blue];
m47_352 -> m47_353  [key=0, style=solid];
m47_353 -> m47_354  [key=0, style=solid];
m47_353 -> m47_11  [key=2, style=dotted];
m47_353 -> m47_355  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_354 -> m47_352  [key=0, style=bold, color=blue];
m47_361 -> m47_362  [key=0, style=solid];
m47_4 -> m47_5  [key=0, style=solid];
m47_5 -> m47_6  [key=0, style=solid];
m47_5 -> m47_7  [key=2, style=dotted];
m47_6 -> m47_4  [key=0, style=bold, color=blue];
m47_12 -> m47_13  [key=0, style=solid];
m47_12 -> m47_14  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_12 -> m47_15  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_12 -> m47_16  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_12 -> m47_17  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_12 -> m47_18  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_12 -> m47_19  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_13 -> m47_14  [key=0, style=solid];
m47_13 -> m47_24  [key=2, style=dotted];
m47_14 -> m47_15  [key=0, style=solid];
m47_14 -> m47_24  [key=2, style=dotted];
m47_15 -> m47_16  [key=0, style=solid];
m47_15 -> m47_24  [key=2, style=dotted];
m47_16 -> m47_17  [key=0, style=solid];
m47_16 -> m47_25  [key=2, style=dotted];
m47_16 -> m47_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_17 -> m47_18  [key=0, style=solid];
m47_17 -> m47_26  [key=2, style=dotted];
m47_17 -> m47_20  [key=1, style=dashed, color=darkseagreen4, label=jobEntryTtl];
m47_18 -> m47_19  [key=0, style=solid];
m47_18 -> m47_26  [key=2, style=dotted];
m47_18 -> m47_21  [key=1, style=dashed, color=darkseagreen4, label=stateEntryTtl];
m47_19 -> m47_20  [key=0, style=solid];
m47_19 -> m47_26  [key=2, style=dotted];
m47_19 -> m47_22  [key=1, style=dashed, color=darkseagreen4, label=historyEntryTtl];
m47_29 -> m47_30  [key=0, style=solid];
m47_20 -> m47_21  [key=0, style=solid];
m47_20 -> m47_27  [key=2, style=dotted];
m47_20 -> m47_28  [key=2, style=dotted];
m47_21 -> m47_22  [key=0, style=solid];
m47_21 -> m47_27  [key=2, style=dotted];
m47_21 -> m47_28  [key=2, style=dotted];
m47_22 -> m47_23  [key=0, style=solid];
m47_22 -> m47_27  [key=2, style=dotted];
m47_22 -> m47_28  [key=2, style=dotted];
m47_23 -> m47_12  [key=0, style=bold, color=blue];
m47_30 -> m47_31  [key=0, style=solid];
m47_30 -> m47_32  [key=2, style=dotted];
m47_30 -> m47_33  [key=2, style=dotted];
m47_31 -> m47_29  [key=0, style=bold, color=blue];
m47_37 -> m47_38  [key=0, style=solid];
m47_37 -> m47_41  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_37 -> m47_42  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_38 -> m47_39  [key=0, style=solid];
m47_38 -> m47_45  [key=2, style=dotted];
m47_38 -> m47_40  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_38 -> m47_41  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_38 -> m47_59  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_41 -> m47_42  [key=0, style=solid];
m47_41 -> m47_25  [key=2, style=dotted];
m47_41 -> m47_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_42 -> m47_43  [key=0, style=solid];
m47_42 -> m47_49  [key=2, style=dotted];
m47_39 -> m47_40  [key=0, style=solid];
m47_39 -> m47_46  [key=2, style=dotted];
m47_39 -> m47_47  [key=2, style=dotted];
m47_39 -> m47_48  [key=2, style=dotted];
m47_39 -> m47_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_40 -> m47_41  [key=0, style=solid];
m47_40 -> m47_46  [key=2, style=dotted];
m47_40 -> m47_48  [key=2, style=dotted];
m47_40 -> m47_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_59 -> m47_60  [key=0, style=solid];
m47_59 -> m47_61  [key=2, style=dotted];
m47_51 -> m47_52  [key=0, style=solid];
m47_55 -> m47_56  [key=0, style=solid];
m47_58 -> m47_59  [key=0, style=solid];
m47_43 -> m47_44  [key=0, style=solid];
m47_43 -> m47_50  [key=2, style=dotted];
m47_44 -> m47_37  [key=0, style=bold, color=blue];
m47_52 -> m47_53  [key=0, style=solid];
m47_52 -> m47_54  [key=2, style=dotted];
m47_53 -> m47_51  [key=0, style=bold, color=blue];
m47_56 -> m47_57  [key=0, style=solid];
m47_57 -> m47_55  [key=0, style=bold, color=blue];
m47_60 -> m47_58  [key=0, style=bold, color=blue];
m47_65 -> m47_66  [key=0, style=solid];
m47_65 -> m47_71  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_65 -> m47_72  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_66 -> m47_67  [key=0, style=solid];
m47_66 -> m47_78  [key=2, style=dotted];
m47_71 -> m47_72  [key=0, style=solid];
m47_71 -> m47_25  [key=2, style=dotted];
m47_71 -> m47_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_72 -> m47_73  [key=0, style=solid];
m47_72 -> m47_49  [key=2, style=dotted];
m47_72 -> m47_74  [key=1, style=dashed, color=darkseagreen4, label=stateHash];
m47_72 -> m47_75  [key=1, style=dashed, color=darkseagreen4, label=stateHash];
m47_72 -> m47_76  [key=1, style=dashed, color=darkseagreen4, label=stateHash];
m47_67 -> m47_68  [key=0, style=solid];
m47_67 -> m47_45  [key=2, style=dotted];
m47_67 -> m47_69  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_67 -> m47_70  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_67 -> m47_71  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_67 -> m47_91  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_68 -> m47_69  [key=0, style=solid];
m47_68 -> m47_46  [key=2, style=dotted];
m47_68 -> m47_47  [key=2, style=dotted];
m47_68 -> m47_48  [key=2, style=dotted];
m47_68 -> m47_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_69 -> m47_70  [key=0, style=solid];
m47_69 -> m47_46  [key=2, style=dotted];
m47_69 -> m47_48  [key=2, style=dotted];
m47_69 -> m47_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_70 -> m47_71  [key=0, style=solid];
m47_70 -> m47_46  [key=2, style=dotted];
m47_70 -> m47_48  [key=2, style=dotted];
m47_70 -> m47_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_91 -> m47_92  [key=0, style=solid];
m47_91 -> m47_61  [key=2, style=dotted];
m47_81 -> m47_82  [key=0, style=solid];
m47_84 -> m47_85  [key=0, style=solid];
m47_87 -> m47_88  [key=0, style=solid];
m47_90 -> m47_91  [key=0, style=solid];
m47_73 -> m47_74  [key=0, style=solid];
m47_73 -> m47_79  [key=2, style=dotted];
m47_73 -> m47_80  [key=2, style=dotted];
m47_74 -> m47_75  [key=0, style=solid];
m47_74 -> m47_50  [key=2, style=dotted];
m47_75 -> m47_76  [key=0, style=solid];
m47_75 -> m47_50  [key=2, style=dotted];
m47_76 -> m47_77  [key=0, style=solid];
m47_76 -> m47_50  [key=2, style=dotted];
m47_77 -> m47_65  [key=0, style=bold, color=blue];
m47_82 -> m47_83  [key=0, style=solid];
m47_82 -> m47_54  [key=2, style=dotted];
m47_83 -> m47_81  [key=0, style=bold, color=blue];
m47_85 -> m47_86  [key=0, style=solid];
m47_86 -> m47_84  [key=0, style=bold, color=blue];
m47_88 -> m47_89  [key=0, style=solid];
m47_89 -> m47_87  [key=0, style=bold, color=blue];
m47_92 -> m47_90  [key=0, style=bold, color=blue];
m47_96 -> m47_97  [key=0, style=solid];
m47_96 -> m47_100  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_96 -> m47_101  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_97 -> m47_98  [key=0, style=solid];
m47_97 -> m47_45  [key=2, style=dotted];
m47_97 -> m47_99  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_97 -> m47_100  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_97 -> m47_111  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_100 -> m47_101  [key=0, style=solid];
m47_100 -> m47_25  [key=2, style=dotted];
m47_100 -> m47_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_101 -> m47_102  [key=0, style=solid];
m47_101 -> m47_103  [key=2, style=dotted];
m47_101 -> m47_50  [key=2, style=dotted];
m47_98 -> m47_99  [key=0, style=solid];
m47_98 -> m47_46  [key=2, style=dotted];
m47_98 -> m47_48  [key=2, style=dotted];
m47_98 -> m47_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_99 -> m47_100  [key=0, style=solid];
m47_99 -> m47_46  [key=2, style=dotted];
m47_99 -> m47_47  [key=2, style=dotted];
m47_99 -> m47_48  [key=2, style=dotted];
m47_99 -> m47_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_111 -> m47_112  [key=0, style=solid];
m47_111 -> m47_61  [key=2, style=dotted];
m47_104 -> m47_105  [key=0, style=solid];
m47_107 -> m47_108  [key=0, style=solid];
m47_110 -> m47_111  [key=0, style=solid];
m47_102 -> m47_96  [key=0, style=bold, color=blue];
m47_105 -> m47_106  [key=0, style=solid];
m47_106 -> m47_104  [key=0, style=bold, color=blue];
m47_108 -> m47_109  [key=0, style=solid];
m47_108 -> m47_54  [key=2, style=dotted];
m47_109 -> m47_107  [key=0, style=bold, color=blue];
m47_112 -> m47_110  [key=0, style=bold, color=blue];
m47_116 -> m47_117  [key=0, style=solid];
m47_116 -> m47_118  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_116 -> m47_119  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_116 -> m47_120  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_116 -> m47_121  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_116 -> m47_122  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_116 -> m47_123  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_117 -> m47_118  [key=0, style=solid];
m47_117 -> m47_32  [key=2, style=dotted];
m47_117 -> m47_24  [key=2, style=dotted];
m47_118 -> m47_119  [key=0, style=solid];
m47_118 -> m47_32  [key=2, style=dotted];
m47_118 -> m47_24  [key=2, style=dotted];
m47_119 -> m47_120  [key=0, style=solid];
m47_119 -> m47_32  [key=2, style=dotted];
m47_119 -> m47_24  [key=2, style=dotted];
m47_120 -> m47_121  [key=0, style=solid];
m47_120 -> m47_25  [key=2, style=dotted];
m47_120 -> m47_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_121 -> m47_122  [key=0, style=solid];
m47_121 -> m47_26  [key=2, style=dotted];
m47_121 -> m47_28  [key=2, style=dotted];
m47_122 -> m47_123  [key=0, style=solid];
m47_122 -> m47_26  [key=2, style=dotted];
m47_122 -> m47_28  [key=2, style=dotted];
m47_123 -> m47_124  [key=0, style=solid];
m47_123 -> m47_26  [key=2, style=dotted];
m47_123 -> m47_28  [key=2, style=dotted];
m47_125 -> m47_126  [key=0, style=solid];
m47_124 -> m47_116  [key=0, style=bold, color=blue];
m47_126 -> m47_127  [key=0, style=solid];
m47_126 -> m47_128  [key=2, style=dotted];
m47_127 -> m47_125  [key=0, style=bold, color=blue];
m47_132 -> m47_133  [key=0, style=solid];
m47_132 -> m47_137  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_132 -> m47_138  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_133 -> m47_134  [key=0, style=solid];
m47_133 -> m47_45  [key=2, style=dotted];
m47_133 -> m47_135  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_133 -> m47_136  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_133 -> m47_137  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_133 -> m47_159  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_137 -> m47_138  [key=0, style=solid];
m47_137 -> m47_25  [key=2, style=dotted];
m47_137 -> m47_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_138 -> m47_139  [key=0, style=solid];
m47_138 -> m47_146  [key=2, style=dotted];
m47_138 -> m47_140  [key=1, style=dashed, color=darkseagreen4, label=serializedEntry];
m47_134 -> m47_135  [key=0, style=solid];
m47_134 -> m47_46  [key=2, style=dotted];
m47_134 -> m47_48  [key=2, style=dotted];
m47_134 -> m47_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_135 -> m47_136  [key=0, style=solid];
m47_135 -> m47_46  [key=2, style=dotted];
m47_135 -> m47_48  [key=2, style=dotted];
m47_135 -> m47_152  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_136 -> m47_137  [key=0, style=solid];
m47_136 -> m47_46  [key=2, style=dotted];
m47_136 -> m47_47  [key=2, style=dotted];
m47_136 -> m47_48  [key=2, style=dotted];
m47_136 -> m47_155  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_159 -> m47_160  [key=0, style=solid];
m47_159 -> m47_161  [key=2, style=dotted];
m47_149 -> m47_150  [key=0, style=solid];
m47_152 -> m47_153  [key=0, style=solid];
m47_155 -> m47_156  [key=0, style=solid];
m47_158 -> m47_159  [key=0, style=solid];
m47_139 -> m47_140  [key=0, style=solid];
m47_139 -> m47_147  [key=2, style=dotted];
m47_140 -> m47_141  [key=0, style=solid];
m47_140 -> n67  [key=2, style=dotted];
m47_140 -> m47_142  [key=1, style=dashed, color=darkseagreen4, label=entry];
m47_140 -> m47_143  [key=1, style=dashed, color=darkseagreen4, label=entry];
m47_140 -> m47_144  [key=1, style=dashed, color=darkseagreen4, label=entry];
m47_141 -> m47_142  [key=0, style=solid];
m47_141 -> m47_50  [key=2, style=dotted];
m47_142 -> m47_143  [key=0, style=solid];
m47_142 -> m47_50  [key=2, style=dotted];
m47_143 -> m47_144  [key=0, style=solid];
m47_143 -> m47_50  [key=2, style=dotted];
m47_144 -> m47_145  [key=0, style=solid];
m47_144 -> m47_148  [key=2, style=dotted];
m47_144 -> m47_28  [key=2, style=dotted];
m47_145 -> m47_132  [key=0, style=bold, color=blue];
m47_150 -> m47_151  [key=0, style=solid];
m47_151 -> m47_149  [key=0, style=bold, color=blue];
m47_153 -> m47_154  [key=0, style=solid];
m47_154 -> m47_152  [key=0, style=bold, color=blue];
m47_156 -> m47_157  [key=0, style=solid];
m47_156 -> m47_54  [key=2, style=dotted];
m47_157 -> m47_155  [key=0, style=bold, color=blue];
m47_160 -> m47_158  [key=0, style=bold, color=blue];
m47_165 -> m47_166  [key=0, style=solid];
m47_165 -> m47_167  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_165 -> m47_168  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_166 -> m47_167  [key=0, style=solid];
m47_166 -> m47_25  [key=2, style=dotted];
m47_166 -> m47_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_167 -> m47_168  [key=0, style=solid];
m47_167 -> m47_170  [key=2, style=dotted];
m47_167 -> m47_28  [key=2, style=dotted];
m47_168 -> m47_169  [key=0, style=solid];
m47_168 -> m47_146  [key=2, style=dotted];
m47_168 -> m47_50  [key=2, style=dotted];
m47_171 -> m47_172  [key=0, style=solid];
m47_169 -> m47_165  [key=0, style=bold, color=blue];
m47_172 -> m47_173  [key=0, style=solid];
m47_172 -> m47_174  [key=2, style=dotted];
m47_173 -> m47_171  [key=0, style=bold, color=blue];
m47_178 -> m47_179  [key=0, style=solid];
m47_178 -> m47_180  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_178 -> m47_181  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_179 -> m47_180  [key=0, style=solid];
m47_179 -> m47_183  [key=2, style=dotted];
m47_180 -> m47_181  [key=0, style=solid];
m47_180 -> m47_25  [key=2, style=dotted];
m47_180 -> m47_184  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_181 -> m47_182  [key=0, style=solid];
m47_181 -> m47_146  [key=2, style=dotted];
m47_181 -> m47_50  [key=2, style=dotted];
m47_184 -> m47_185  [key=0, style=solid];
m47_182 -> m47_178  [key=0, style=bold, color=blue];
m47_185 -> m47_186  [key=0, style=solid];
m47_185 -> m47_174  [key=2, style=dotted];
m47_186 -> m47_184  [key=0, style=bold, color=blue];
m47_190 -> m47_191  [key=0, style=solid];
m47_190 -> m47_192  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_190 -> m47_193  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_190 -> m47_194  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_191 -> m47_192  [key=0, style=solid];
m47_191 -> m47_24  [key=2, style=dotted];
m47_192 -> m47_193  [key=0, style=solid];
m47_192 -> m47_25  [key=2, style=dotted];
m47_192 -> m47_197  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_193 -> m47_194  [key=0, style=solid];
m47_193 -> m47_196  [key=2, style=dotted];
m47_193 -> m47_50  [key=2, style=dotted];
m47_194 -> m47_195  [key=0, style=solid];
m47_194 -> m47_26  [key=2, style=dotted];
m47_194 -> m47_28  [key=2, style=dotted];
m47_197 -> m47_198  [key=0, style=solid];
m47_195 -> m47_190  [key=0, style=bold, color=blue];
m47_198 -> m47_199  [key=0, style=solid];
m47_198 -> m47_200  [key=2, style=dotted];
m47_199 -> m47_197  [key=0, style=bold, color=blue];
m47_204 -> m47_205  [key=0, style=solid];
m47_204 -> m47_206  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_204 -> m47_207  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_204 -> m47_208  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_205 -> m47_206  [key=0, style=solid];
m47_205 -> m47_24  [key=2, style=dotted];
m47_206 -> m47_207  [key=0, style=solid];
m47_206 -> m47_25  [key=2, style=dotted];
m47_206 -> m47_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_207 -> m47_208  [key=0, style=solid];
m47_207 -> m47_26  [key=2, style=dotted];
m47_207 -> m47_209  [key=1, style=dashed, color=darkseagreen4, label=entryTtl];
m47_208 -> m47_209  [key=0, style=solid];
m47_208 -> m47_196  [key=2, style=dotted];
m47_208 -> m47_50  [key=2, style=dotted];
m47_211 -> m47_212  [key=0, style=solid];
m47_209 -> m47_210  [key=0, style=solid];
m47_209 -> m47_27  [key=2, style=dotted];
m47_209 -> m47_28  [key=2, style=dotted];
m47_210 -> m47_204  [key=0, style=bold, color=blue];
m47_212 -> m47_213  [key=0, style=solid];
m47_212 -> m47_32  [key=2, style=dotted];
m47_212 -> m47_214  [key=2, style=dotted];
m47_213 -> m47_211  [key=0, style=bold, color=blue];
m47_218 -> m47_219  [key=0, style=solid];
m47_218 -> m47_220  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_218 -> m47_221  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_218 -> m47_222  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_219 -> m47_220  [key=0, style=solid];
m47_219 -> m47_24  [key=2, style=dotted];
m47_220 -> m47_221  [key=0, style=solid];
m47_220 -> m47_25  [key=2, style=dotted];
m47_220 -> m47_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_221 -> m47_222  [key=0, style=solid];
m47_221 -> m47_196  [key=2, style=dotted];
m47_221 -> m47_50  [key=2, style=dotted];
m47_222 -> m47_223  [key=0, style=solid];
m47_222 -> m47_26  [key=2, style=dotted];
m47_222 -> m47_28  [key=2, style=dotted];
m47_224 -> m47_225  [key=0, style=solid];
m47_223 -> m47_218  [key=0, style=bold, color=blue];
m47_225 -> m47_226  [key=0, style=solid];
m47_225 -> m47_227  [key=2, style=dotted];
m47_226 -> m47_224  [key=0, style=bold, color=blue];
m47_231 -> m47_232  [key=0, style=solid];
m47_231 -> m47_233  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_231 -> m47_234  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_231 -> m47_235  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_232 -> m47_233  [key=0, style=solid];
m47_232 -> m47_24  [key=2, style=dotted];
m47_233 -> m47_234  [key=0, style=solid];
m47_233 -> m47_25  [key=2, style=dotted];
m47_233 -> m47_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_234 -> m47_235  [key=0, style=solid];
m47_234 -> m47_26  [key=2, style=dotted];
m47_234 -> m47_236  [key=1, style=dashed, color=darkseagreen4, label=entryTtl];
m47_235 -> m47_236  [key=0, style=solid];
m47_235 -> m47_196  [key=2, style=dotted];
m47_235 -> m47_50  [key=2, style=dotted];
m47_238 -> m47_239  [key=0, style=solid];
m47_236 -> m47_237  [key=0, style=solid];
m47_236 -> m47_27  [key=2, style=dotted];
m47_236 -> m47_28  [key=2, style=dotted];
m47_237 -> m47_231  [key=0, style=bold, color=blue];
m47_239 -> m47_240  [key=0, style=solid];
m47_239 -> m47_32  [key=2, style=dotted];
m47_239 -> m47_241  [key=2, style=dotted];
m47_240 -> m47_238  [key=0, style=bold, color=blue];
m47_245 -> m47_246  [key=0, style=solid];
m47_245 -> m47_247  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_246 -> m47_247  [key=0, style=solid];
m47_246 -> m47_25  [key=2, style=dotted];
m47_246 -> m47_250  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_247 -> m47_248  [key=0, style=solid];
m47_247 -> m47_249  [key=2, style=dotted];
m47_247 -> m47_28  [key=2, style=dotted];
m47_250 -> m47_251  [key=0, style=solid];
m47_248 -> m47_245  [key=0, style=bold, color=blue];
m47_251 -> m47_252  [key=0, style=solid];
m47_251 -> m47_253  [key=2, style=dotted];
m47_252 -> m47_250  [key=0, style=bold, color=blue];
m47_257 -> m47_258  [key=0, style=solid];
m47_257 -> m47_259  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_257 -> m47_260  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_258 -> m47_259  [key=0, style=solid];
m47_258 -> m47_25  [key=2, style=dotted];
m47_258 -> m47_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_259 -> m47_260  [key=0, style=solid];
m47_259 -> m47_249  [key=2, style=dotted];
m47_259 -> m47_28  [key=2, style=dotted];
m47_260 -> m47_261  [key=0, style=solid];
m47_260 -> m47_262  [key=2, style=dotted];
m47_260 -> m47_50  [key=2, style=dotted];
m47_263 -> m47_264  [key=0, style=solid];
m47_261 -> m47_257  [key=0, style=bold, color=blue];
m47_264 -> m47_265  [key=0, style=solid];
m47_264 -> m47_266  [key=2, style=dotted];
m47_265 -> m47_263  [key=0, style=bold, color=blue];
m47_270 -> m47_271  [key=0, style=solid];
m47_270 -> m47_272  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_270 -> m47_273  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_271 -> m47_272  [key=0, style=solid];
m47_271 -> m47_275  [key=2, style=dotted];
m47_272 -> m47_273  [key=0, style=solid];
m47_272 -> m47_25  [key=2, style=dotted];
m47_272 -> m47_276  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_273 -> m47_274  [key=0, style=solid];
m47_273 -> m47_249  [key=2, style=dotted];
m47_273 -> m47_80  [key=2, style=dotted];
m47_276 -> m47_277  [key=0, style=solid];
m47_274 -> m47_270  [key=0, style=bold, color=blue];
m47_277 -> m47_278  [key=0, style=solid];
m47_277 -> m47_279  [key=2, style=dotted];
m47_278 -> m47_276  [key=0, style=bold, color=blue];
m47_283 -> m47_284  [key=0, style=solid];
m47_283 -> m47_285  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_283 -> m47_286  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_284 -> m47_285  [key=0, style=solid];
m47_284 -> m47_288  [key=2, style=dotted];
m47_285 -> m47_286  [key=0, style=solid];
m47_285 -> m47_25  [key=2, style=dotted];
m47_285 -> m47_289  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_286 -> m47_287  [key=0, style=solid];
m47_286 -> m47_146  [key=2, style=dotted];
m47_286 -> m47_50  [key=2, style=dotted];
m47_289 -> m47_290  [key=0, style=solid];
m47_287 -> m47_283  [key=0, style=bold, color=blue];
m47_290 -> m47_291  [key=0, style=solid];
m47_290 -> m47_292  [key=2, style=dotted];
m47_291 -> m47_289  [key=0, style=bold, color=blue];
m47_296 -> m47_297  [key=0, style=solid];
m47_296 -> m47_298  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_296 -> m47_299  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_296 -> m47_300  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_296 -> m47_301  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_296 -> m47_302  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_297 -> m47_298  [key=0, style=solid];
m47_297 -> m47_288  [key=2, style=dotted];
m47_298 -> m47_299  [key=0, style=solid];
m47_298 -> m47_288  [key=2, style=dotted];
m47_299 -> m47_300  [key=0, style=solid];
m47_299 -> m47_288  [key=2, style=dotted];
m47_300 -> m47_301  [key=0, style=solid];
m47_300 -> m47_25  [key=2, style=dotted];
m47_300 -> m47_304  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_301 -> m47_302  [key=0, style=solid];
m47_301 -> m47_103  [key=2, style=dotted];
m47_301 -> m47_50  [key=2, style=dotted];
m47_302 -> m47_303  [key=0, style=solid];
m47_302 -> m47_146  [key=2, style=dotted];
m47_302 -> m47_50  [key=2, style=dotted];
m47_304 -> m47_305  [key=0, style=solid];
m47_303 -> m47_296  [key=0, style=bold, color=blue];
m47_305 -> m47_306  [key=0, style=solid];
m47_305 -> m47_307  [key=2, style=dotted];
m47_306 -> m47_304  [key=0, style=bold, color=blue];
m47_311 -> m47_312  [key=0, style=solid];
m47_311 -> m47_313  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_311 -> m47_314  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_311 -> m47_315  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_311 -> m47_316  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_311 -> m47_317  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_311 -> m47_318  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_311 -> m47_319  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_312 -> m47_313  [key=0, style=solid];
m47_312 -> m47_288  [key=2, style=dotted];
m47_313 -> m47_314  [key=0, style=solid];
m47_313 -> m47_288  [key=2, style=dotted];
m47_314 -> m47_315  [key=0, style=solid];
m47_314 -> m47_288  [key=2, style=dotted];
m47_315 -> m47_316  [key=0, style=solid];
m47_315 -> m47_288  [key=2, style=dotted];
m47_316 -> m47_317  [key=0, style=solid];
m47_316 -> m47_25  [key=2, style=dotted];
m47_316 -> m47_321  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_317 -> m47_318  [key=0, style=solid];
m47_317 -> m47_103  [key=2, style=dotted];
m47_317 -> m47_50  [key=2, style=dotted];
m47_318 -> m47_319  [key=0, style=solid];
m47_318 -> m47_146  [key=2, style=dotted];
m47_318 -> m47_50  [key=2, style=dotted];
m47_319 -> m47_320  [key=0, style=solid];
m47_319 -> m47_146  [key=2, style=dotted];
m47_319 -> m47_50  [key=2, style=dotted];
m47_321 -> m47_322  [key=0, style=solid];
m47_320 -> m47_311  [key=0, style=bold, color=blue];
m47_322 -> m47_323  [key=0, style=solid];
m47_322 -> m47_324  [key=2, style=dotted];
m47_323 -> m47_321  [key=0, style=bold, color=blue];
m47_328 -> m47_329  [key=0, style=solid];
m47_328 -> m47_333  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_329 -> m47_330  [key=0, style=solid];
m47_329 -> n67  [key=2, style=dotted];
m47_329 -> m47_332  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_333 -> m47_334  [key=0, style=solid];
m47_333 -> m47_25  [key=2, style=dotted];
m47_333 -> m47_335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_330 -> m47_331  [key=0, style=solid];
m47_330 -> m47_50  [key=2, style=dotted];
m47_332 -> m47_333  [key=0, style=solid];
m47_331 -> m47_328  [key=0, style=bold, color=blue];
m47_334 -> m47_332  [key=0, style=bold, color=blue];
m47_335 -> m47_336  [key=0, style=solid];
m47_336 -> m47_337  [key=0, style=solid];
m47_336 -> m47_47  [key=2, style=dotted];
m47_336 -> m47_338  [key=2, style=dotted];
m47_337 -> m47_335  [key=0, style=bold, color=blue];
m47_342 -> m47_343  [key=0, style=solid];
m47_342 -> m47_347  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_343 -> m47_344  [key=0, style=solid];
m47_343 -> n67  [key=2, style=dotted];
m47_343 -> m47_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_347 -> m47_348  [key=0, style=solid];
m47_347 -> m47_25  [key=2, style=dotted];
m47_347 -> m47_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_344 -> m47_345  [key=0, style=solid];
m47_344 -> m47_50  [key=2, style=dotted];
m47_346 -> m47_347  [key=0, style=solid];
m47_345 -> m47_342  [key=0, style=bold, color=blue];
m47_348 -> m47_346  [key=0, style=bold, color=blue];
m47_349 -> m47_350  [key=0, style=solid];
m47_350 -> m47_351  [key=0, style=solid];
m47_350 -> m47_338  [key=2, style=dotted];
m47_351 -> m47_349  [key=0, style=bold, color=blue];
m47_355 -> m47_356  [key=0, style=solid];
m47_355 -> m47_357  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_356 -> m47_357  [key=0, style=solid];
m47_356 -> m47_25  [key=2, style=dotted];
m47_356 -> m47_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_357 -> m47_358  [key=0, style=solid];
m47_357 -> m47_49  [key=2, style=dotted];
m47_357 -> m47_359  [key=1, style=dashed, color=darkseagreen4, label=hash];
m47_358 -> m47_359  [key=0, style=solid];
m47_358 -> m47_50  [key=2, style=dotted];
m47_359 -> m47_360  [key=0, style=solid];
m47_359 -> m47_50  [key=2, style=dotted];
m47_360 -> m47_355  [key=0, style=bold, color=blue];
m47_362 -> m47_363  [key=0, style=solid];
m47_362 -> m47_47  [key=2, style=dotted];
m47_362 -> m47_338  [key=2, style=dotted];
m47_363 -> m47_361  [key=0, style=bold, color=blue];
m47_254 -> m47_255  [key=0, style=solid];
m47_255 -> m47_256  [key=0, style=solid];
m47_255 -> m47_11  [key=2, style=dotted];
m47_255 -> m47_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_256 -> m47_254  [key=0, style=bold, color=blue];
m47_189 -> m47_187  [key=0, style=bold, color=blue];
m47_187 -> m47_188  [key=0, style=solid];
m47_188 -> m47_189  [key=0, style=solid];
m47_188 -> m47_11  [key=2, style=dotted];
m47_188 -> m47_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_325 -> m47_326  [key=0, style=solid];
m47_326 -> m47_327  [key=0, style=solid];
m47_326 -> m47_11  [key=2, style=dotted];
m47_326 -> m47_328  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_327 -> m47_325  [key=0, style=bold, color=blue];
m47_308 -> m47_309  [key=0, style=solid];
m47_309 -> m47_310  [key=0, style=solid];
m47_309 -> m47_11  [key=2, style=dotted];
m47_309 -> m47_311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m47_310 -> m47_308  [key=0, style=bold, color=blue];
m47_377 -> m47_9  [key=1, style=dashed, color=red, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_176  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_188  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_202  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_216  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_229  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_243  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_255  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_268  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_281  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_294  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_309  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_326  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_340  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_377 -> m47_353  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.Tests.RedisWriteOnlyTransactionFacts"];
m47_378 -> m47_59  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_379 -> m47_91  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_380 -> m47_111  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_381 -> m47_159  [key=1, style=dashed, color=darkseagreen4, label=state];
m47_382 -> m47_333  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m47_383 -> m47_347  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m48_0 -> m48_1  [key=0, style=solid, color=red];
m48_0 -> m48_2  [key=1, style=dashed, color=red, label="System.Exception"];
m48_1 -> m48_2  [key=0, style=solid, color=red];
m48_2 -> m48_3  [key=0, style=solid, color=red];
m48_3 -> m48_0  [key=0, style=bold, color=blue];
m48_4 -> m48_1  [key=1, style=dashed, color=red, label="HangFire.Filters.ServerJobExceptionContext"];
m48_4 -> m48_2  [key=1, style=dashed, color=red, label="HangFire.Filters.ServerJobExceptionContext"];
m49_0 -> m49_1  [key=0, style=solid, color=red];
m49_1 -> m49_2  [key=0, style=solid, color=red];
m49_1 -> m49_71  [key=2, style=dotted, color=red];
m49_2 -> m49_3  [key=0, style=solid, color=red];
m49_2 -> m49_72  [key=2, style=dotted, color=red];
m49_3 -> m49_4  [key=0, style=solid, color=red];
m49_4 -> m49_5  [key=0, style=solid, color=red];
m49_4 -> m49_73  [key=2, style=dotted, color=red];
m49_4 -> m49_9  [key=1, style=dashed, color=red, label=from];
m49_5 -> m49_6  [key=0, style=solid, color=red];
m49_5 -> m49_73  [key=2, style=dotted, color=red];
m49_5 -> m49_9  [key=1, style=dashed, color=red, label=perPage];
m49_9 -> m49_10  [key=0, style=solid, color=red];
m49_9 -> m49_75  [key=2, style=dotted, color=red];
m49_9 -> m49_76  [key=2, style=dotted, color=red];
m49_9 -> m49_77  [key=2, style=dotted, color=red];
m49_9 -> m49_12  [key=1, style=dashed, color=red, label=pager];
m49_9 -> m49_14  [key=1, style=dashed, color=red, label=pager];
m49_9 -> m49_69  [key=1, style=dashed, color=red, label=pager];
m49_6 -> m49_7  [key=0, style=solid, color=red];
m49_7 -> m49_8  [key=0, style=solid, color=red];
m49_8 -> m49_9  [key=0, style=solid, color=red];
m49_8 -> m49_74  [key=2, style=dotted, color=red];
m49_8 -> m49_10  [key=1, style=dashed, color=red, label=monitor];
m49_10 -> m49_11  [key=0, style=solid, color=red];
m49_10 -> m49_78  [key=2, style=dotted, color=red];
m49_10 -> m49_17  [key=1, style=dashed, color=red, label=failedJobs];
m49_12 -> m49_13  [key=0, style=solid, color=red];
m49_12 -> m49_14  [key=0, style=solid, color=red];
m49_14 -> m49_15  [key=0, style=solid, color=red];
m49_14 -> m49_79  [key=2, style=dotted, color=red];
m49_14 -> m49_80  [key=2, style=dotted, color=red];
m49_14 -> m49_81  [key=2, style=dotted, color=red];
m49_69 -> m49_70  [key=0, style=solid];
m49_69 -> m49_90  [key=2, style=dotted];
m49_69 -> m49_80  [key=2, style=dotted];
m49_69 -> m49_81  [key=2, style=dotted];
m49_11 -> m49_12  [key=0, style=solid, color=red];
m49_11 -> m49_71  [key=2, style=dotted, color=red];
m49_17 -> m49_18  [key=0, style=solid];
m49_17 -> m49_68  [key=0, style=solid];
m49_17 -> m49_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_13 -> m49_70  [key=0, style=solid, color=red];
m49_13 -> m49_71  [key=2, style=dotted, color=red];
m49_15 -> m49_16  [key=0, style=solid];
m49_15 -> m49_71  [key=2, style=dotted];
m49_16 -> m49_17  [key=0, style=solid];
m49_16 -> m49_57  [key=1, style=dashed, color=darkseagreen4, label=index];
m49_16 -> m49_16  [key=3, color=darkorchid, style=bold, label="Local variable int index"];
m49_57 -> m49_58  [key=0, style=solid];
m49_57 -> m49_82  [key=2, style=dotted];
m49_57 -> m49_57  [key=1, style=dashed, color=darkseagreen4, label=index];
m49_18 -> m49_19  [key=0, style=solid];
m49_18 -> m49_71  [key=2, style=dotted];
m49_68 -> m49_69  [key=0, style=solid];
m49_68 -> m49_71  [key=2, style=dotted];
m49_19 -> m49_20  [key=0, style=solid];
m49_19 -> m49_82  [key=2, style=dotted];
m49_19 -> m49_19  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_19 -> m49_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_20 -> m49_21  [key=0, style=solid];
m49_20 -> m49_71  [key=2, style=dotted];
m49_21 -> m49_22  [key=0, style=solid];
m49_21 -> m49_82  [key=2, style=dotted];
m49_21 -> m49_21  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_21 -> m49_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_22 -> m49_23  [key=0, style=solid];
m49_22 -> m49_71  [key=2, style=dotted];
m49_23 -> m49_24  [key=0, style=solid];
m49_23 -> m49_77  [key=2, style=dotted];
m49_23 -> m49_82  [key=2, style=dotted];
m49_23 -> m49_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_23 -> m49_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_24 -> m49_25  [key=0, style=solid];
m49_24 -> m49_71  [key=2, style=dotted];
m49_25 -> m49_26  [key=0, style=solid];
m49_25 -> m49_83  [key=2, style=dotted];
m49_25 -> m49_81  [key=2, style=dotted];
m49_25 -> m49_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_25 -> m49_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_26 -> m49_27  [key=0, style=solid];
m49_26 -> m49_71  [key=2, style=dotted];
m49_27 -> m49_28  [key=0, style=solid];
m49_27 -> m49_29  [key=0, style=solid];
m49_27 -> m49_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_27 -> m49_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_28 -> m49_29  [key=0, style=solid];
m49_28 -> m49_71  [key=2, style=dotted];
m49_29 -> m49_30  [key=0, style=solid];
m49_29 -> m49_71  [key=2, style=dotted];
m49_30 -> m49_31  [key=0, style=solid];
m49_30 -> m49_36  [key=0, style=solid];
m49_30 -> m49_30  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_30 -> m49_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_30 -> m49_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_31 -> m49_32  [key=0, style=solid];
m49_31 -> m49_71  [key=2, style=dotted];
m49_36 -> m49_37  [key=0, style=solid];
m49_36 -> m49_71  [key=2, style=dotted];
m49_32 -> m49_33  [key=0, style=solid];
m49_32 -> m49_84  [key=2, style=dotted];
m49_32 -> m49_82  [key=2, style=dotted];
m49_32 -> m49_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_32 -> m49_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_37 -> m49_38  [key=0, style=solid];
m49_37 -> m49_85  [key=2, style=dotted];
m49_37 -> m49_81  [key=2, style=dotted];
m49_37 -> m49_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_37 -> m49_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_33 -> m49_34  [key=0, style=solid];
m49_33 -> m49_71  [key=2, style=dotted];
m49_34 -> m49_35  [key=0, style=solid];
m49_34 -> m49_82  [key=2, style=dotted];
m49_34 -> m49_34  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_34 -> m49_37  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_35 -> m49_36  [key=0, style=solid];
m49_35 -> m49_71  [key=2, style=dotted];
m49_38 -> m49_39  [key=0, style=solid];
m49_38 -> m49_71  [key=2, style=dotted];
m49_39 -> m49_40  [key=0, style=solid];
m49_39 -> m49_82  [key=2, style=dotted];
m49_39 -> m49_39  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_39 -> m49_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_40 -> m49_41  [key=0, style=solid];
m49_40 -> m49_71  [key=2, style=dotted];
m49_41 -> m49_42  [key=0, style=solid];
m49_41 -> m49_86  [key=2, style=dotted];
m49_41 -> m49_82  [key=2, style=dotted];
m49_41 -> m49_41  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_41 -> m49_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_42 -> m49_43  [key=0, style=solid];
m49_42 -> m49_71  [key=2, style=dotted];
m49_43 -> m49_44  [key=0, style=solid];
m49_43 -> m49_87  [key=2, style=dotted];
m49_43 -> m49_82  [key=2, style=dotted];
m49_43 -> m49_43  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_43 -> m49_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_44 -> m49_45  [key=0, style=solid];
m49_44 -> m49_71  [key=2, style=dotted];
m49_45 -> m49_46  [key=0, style=solid];
m49_45 -> m49_49  [key=0, style=solid];
m49_45 -> m49_88  [key=2, style=dotted];
m49_45 -> m49_45  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_45 -> m49_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_45 -> m49_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_46 -> m49_47  [key=0, style=solid];
m49_46 -> m49_71  [key=2, style=dotted];
m49_49 -> m49_50  [key=0, style=solid];
m49_49 -> m49_71  [key=2, style=dotted];
m49_47 -> m49_48  [key=0, style=solid];
m49_47 -> m49_82  [key=2, style=dotted];
m49_47 -> m49_47  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_47 -> m49_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_50 -> m49_51  [key=0, style=solid];
m49_50 -> m49_54  [key=0, style=solid];
m49_50 -> m49_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_50 -> m49_52  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_50 -> m49_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_48 -> m49_49  [key=0, style=solid];
m49_48 -> m49_71  [key=2, style=dotted];
m49_51 -> m49_52  [key=0, style=solid];
m49_51 -> m49_71  [key=2, style=dotted];
m49_54 -> m49_55  [key=0, style=solid];
m49_54 -> m49_71  [key=2, style=dotted];
m49_52 -> m49_53  [key=0, style=solid];
m49_52 -> m49_77  [key=2, style=dotted];
m49_52 -> m49_82  [key=2, style=dotted];
m49_52 -> m49_52  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_52 -> m49_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_55 -> m49_56  [key=0, style=solid];
m49_55 -> m49_17  [key=0, style=solid];
m49_55 -> m49_55  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_55 -> m49_59  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_53 -> m49_54  [key=0, style=solid];
m49_53 -> m49_71  [key=2, style=dotted];
m49_56 -> m49_57  [key=0, style=solid];
m49_56 -> m49_71  [key=2, style=dotted];
m49_59 -> m49_60  [key=0, style=solid];
m49_59 -> m49_82  [key=2, style=dotted];
m49_59 -> m49_59  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_59 -> m49_61  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_58 -> m49_59  [key=0, style=solid];
m49_58 -> m49_71  [key=2, style=dotted];
m49_60 -> m49_61  [key=0, style=solid];
m49_60 -> m49_71  [key=2, style=dotted];
m49_61 -> m49_62  [key=0, style=solid];
m49_61 -> m49_82  [key=2, style=dotted];
m49_61 -> m49_61  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_61 -> m49_63  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_62 -> m49_63  [key=0, style=solid];
m49_62 -> m49_71  [key=2, style=dotted];
m49_63 -> m49_64  [key=0, style=solid];
m49_63 -> m49_67  [key=0, style=solid];
m49_63 -> m49_88  [key=2, style=dotted];
m49_63 -> m49_63  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_63 -> m49_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_64 -> m49_65  [key=0, style=solid];
m49_64 -> m49_71  [key=2, style=dotted];
m49_67 -> m49_17  [key=0, style=solid];
m49_67 -> m49_71  [key=2, style=dotted];
m49_65 -> m49_66  [key=0, style=solid];
m49_65 -> m49_89  [key=2, style=dotted];
m49_65 -> m49_81  [key=2, style=dotted];
m49_65 -> m49_65  [key=1, style=dashed, color=darkseagreen4, label=job];
m49_66 -> m49_67  [key=0, style=solid];
m49_66 -> m49_71  [key=2, style=dotted];
m49_70 -> m49_0  [key=0, style=bold, color=blue];
m49_91 -> m49_1  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_2  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_4  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_5  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_9  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_11  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_13  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_14  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_67  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m49_91 -> m49_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FailedJobsPage"];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_2  [key=0, style=solid];
m50_1 -> m50_4  [key=2, style=dotted];
m50_2 -> m50_3  [key=0, style=solid];
m50_2 -> m50_4  [key=2, style=dotted];
m50_3 -> m50_0  [key=0, style=bold, color=blue];
m50_5 -> m50_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdogOptions"];
m50_5 -> m50_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.ServerWatchdogOptions"];
m51_12 -> m51_15  [key=0, style=solid, color=red];
m51_12 -> n12  [key=2, style=dotted, color=red];
m51_13 -> m51_14  [key=0, style=solid, color=red];
m51_0 -> m51_1  [key=0, style=solid, color=red];
m51_3 -> m51_4  [key=0, style=solid, color=red];
m51_3 -> m51_10  [key=2, style=dotted, color=green];
m51_3 -> m51_11  [key=2, style=dotted, color=green];
m51_3 -> m51_5  [key=1, style=dashed, color=red, label="HangFire.Server.ServerContext"];
m51_3 -> m51_6  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_1 -> m51_3  [key=1, style=dashed, color=green, label=type];
m51_1 -> m51_2  [key=0, style=solid, color=red];
m51_1 -> m51_5  [key=1, style=dashed, color=darkseagreen4, label=type];
m51_2 -> m51_3  [key=0, style=solid, color=green];
m51_2 -> m51_9  [key=2, style=dotted];
m51_2 -> m51_6  [key=1, style=dashed, color=darkseagreen4, label=methodInfo];
m51_2 -> m51_0  [key=0, style=bold, color=blue];
m51_4 -> m51_5  [key=0, style=solid, color=red];
m51_4 -> m51_12  [key=2, style=dotted];
m51_4 -> m51_6  [key=1, style=dashed, color=darkseagreen4, label=job];
m51_4 -> m51_7  [key=1, style=dashed, color=darkseagreen4, label=job];
m51_5 -> m51_6  [key=0, style=solid, color=red];
m51_5 -> m51_13  [key=2, style=dotted];
m51_6 -> m51_7  [key=0, style=solid, color=red];
m51_6 -> m51_13  [key=2, style=dotted];
m51_7 -> m51_8  [key=0, style=solid, color=red];
m51_7 -> m51_13  [key=2, style=dotted];
m51_7 -> m51_9  [key=2, style=dotted, color=red];
m51_8 -> m51_0  [key=0, style=bold, color=blue];
m51_8 -> m51_3  [key=0, style=bold, color=blue];
m51_63 -> m51_94  [key=0, style=solid];
m51_94 -> m51_63  [key=0, style=bold, color=blue];
m51_14 -> m51_15  [key=0, style=solid, color=red];
m51_14 -> m51_17  [key=2, style=dotted, color=red];
m51_15 -> m51_10  [key=2, style=dotted];
m51_15 -> m51_16  [key=0, style=solid];
m51_15 -> m51_20  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m51_16 -> m51_17  [key=0, style=solid];
m51_16 -> m51_18  [key=2, style=dotted];
m51_16 -> m51_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_17 -> m51_14  [key=0, style=bold, color=blue];
m51_49 -> m51_3  [key=3, color=green, style=bold, label="Parameter variable string arg"];
m51_49 -> m51_91  [key=0, style=solid];
m51_91 -> m51_49  [key=0, style=bold, color=blue];
m51_29 -> m51_30  [key=0, style=solid];
m51_30 -> m51_10  [key=2, style=dotted];
m51_30 -> m51_11  [key=2, style=dotted];
m51_30 -> m51_31  [key=0, style=solid];
m51_30 -> m51_34  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m51_31 -> m51_32  [key=0, style=solid];
m51_31 -> m51_18  [key=2, style=dotted];
m51_31 -> m51_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_32 -> m51_29  [key=0, style=bold, color=blue];
m51_64 -> m51_65  [key=0, style=solid];
m51_66 -> m51_12  [key=2, style=dotted];
m51_66 -> m51_67  [key=0, style=solid];
m51_65 -> m51_66  [key=0, style=solid];
m51_65 -> m51_56  [key=2, style=dotted];
m51_65 -> m51_45  [key=2, style=dotted];
m51_65 -> m51_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_67 -> m51_68  [key=0, style=solid];
m51_67 -> m51_58  [key=2, style=dotted];
m51_68 -> m51_64  [key=0, style=bold, color=blue];
m51_18 -> m51_1  [key=1, style=dashed, color=red, label="HangFire.Server.WorkerContext"];
m51_18 -> m51_4  [key=1, style=dashed, color=red, label="HangFire.Server.WorkerContext"];
m51_18 -> m51_5  [key=1, style=dashed, color=red, label="HangFire.Server.WorkerContext"];
m51_18 -> m51_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m51_18 -> m51_7  [key=1, style=dashed, color=red, label="HangFire.Server.WorkerContext"];
m51_18 -> m51_13  [key=1, style=dashed, color=red, label="HangFire.Server.WorkerContext"];
m51_18 -> m51_14  [key=1, style=dashed, color=red, label="HangFire.Server.WorkerContext"];
m51_73 -> m51_74  [key=0, style=solid];
m51_74 -> m51_10  [key=2, style=dotted];
m51_74 -> m51_11  [key=2, style=dotted];
m51_74 -> m51_75  [key=0, style=solid];
m51_75 -> m51_12  [key=2, style=dotted];
m51_75 -> m51_76  [key=0, style=solid];
m51_76 -> m51_13  [key=2, style=dotted];
m51_76 -> m51_77  [key=0, style=solid];
m51_77 -> m51_73  [key=0, style=bold, color=blue];
m51_72 -> m51_65  [key=3, color=darkorchid, style=bold, label="Parameter variable T2 arg2"];
m51_72 -> m51_95  [key=0, style=solid];
m51_95 -> m51_72  [key=0, style=bold, color=blue];
m51_36 -> m51_37  [key=0, style=solid];
m51_41 -> m51_11  [key=2, style=dotted];
m51_41 -> m51_42  [key=0, style=solid];
m51_41 -> m51_13  [key=2, style=dotted];
m51_42 -> m51_11  [key=2, style=dotted];
m51_42 -> m51_43  [key=0, style=solid];
m51_42 -> m51_13  [key=2, style=dotted];
m51_38 -> m51_41  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m51_38 -> m51_42  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m51_38 -> m51_39  [key=0, style=solid];
m51_38 -> m51_45  [key=2, style=dotted];
m51_38 -> m51_40  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m51_40 -> m51_41  [key=0, style=solid];
m51_40 -> m51_13  [key=2, style=dotted];
m51_39 -> m51_13  [key=2, style=dotted];
m51_39 -> m51_40  [key=0, style=solid];
m51_37 -> m51_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_37 -> m51_38  [key=0, style=solid];
m51_37 -> m51_44  [key=2, style=dotted];
m51_43 -> m51_36  [key=0, style=bold, color=blue];
m51_50 -> m51_51  [key=0, style=solid];
m51_52 -> m51_12  [key=2, style=dotted];
m51_52 -> m51_53  [key=0, style=solid];
m51_52 -> m51_54  [key=1, style=dashed, color=darkseagreen4, label=job];
m51_54 -> m51_13  [key=2, style=dotted];
m51_54 -> m51_55  [key=0, style=solid];
m51_54 -> m51_59  [key=2, style=dotted];
m51_51 -> m51_52  [key=0, style=solid];
m51_51 -> m51_56  [key=2, style=dotted];
m51_51 -> m51_45  [key=2, style=dotted];
m51_51 -> m51_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_53 -> m51_54  [key=0, style=solid];
m51_53 -> m51_57  [key=2, style=dotted];
m51_53 -> m51_58  [key=2, style=dotted];
m51_55 -> m51_50  [key=0, style=bold, color=blue];
m51_11 -> m51_12  [key=0, style=solid, color=red];
m51_11 -> m51_13  [key=0, style=solid, color=red];
m51_69 -> m51_70  [key=0, style=solid];
m51_47 -> m51_49  [key=2, style=dotted];
m51_47 -> m51_48  [key=0, style=solid];
m51_46 -> m51_47  [key=0, style=solid];
m51_48 -> m51_46  [key=0, style=bold, color=blue];
m51_20 -> m51_12  [key=2, style=dotted];
m51_20 -> m51_21  [key=0, style=solid];
m51_27 -> m51_12  [key=2, style=dotted];
m51_27 -> m51_28  [key=0, style=solid];
m51_34 -> m51_12  [key=2, style=dotted];
m51_34 -> m51_35  [key=0, style=solid];
m51_89 -> m51_12  [key=2, style=dotted];
m51_89 -> m51_90  [key=0, style=solid];
m51_19 -> m51_20  [key=0, style=solid];
m51_21 -> m51_19  [key=0, style=bold, color=blue];
m51_26 -> m51_27  [key=0, style=solid];
m51_28 -> m51_26  [key=0, style=bold, color=blue];
m51_33 -> m51_34  [key=0, style=solid];
m51_35 -> m51_33  [key=0, style=bold, color=blue];
m51_88 -> m51_89  [key=0, style=solid];
m51_90 -> m51_88  [key=0, style=bold, color=blue];
m51_60 -> m51_61  [key=0, style=solid];
m51_62 -> m51_60  [key=0, style=bold, color=blue];
m51_61 -> m51_62  [key=0, style=solid];
m51_61 -> m51_63  [key=2, style=dotted];
m51_70 -> m51_72  [key=2, style=dotted];
m51_70 -> m51_71  [key=0, style=solid];
m51_71 -> m51_69  [key=0, style=bold, color=blue];
m51_22 -> m51_23  [key=0, style=solid];
m51_23 -> m51_10  [key=2, style=dotted];
m51_23 -> m51_24  [key=0, style=solid];
m51_23 -> m51_27  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m51_24 -> m51_25  [key=0, style=solid];
m51_24 -> m51_18  [key=2, style=dotted];
m51_24 -> m51_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_25 -> m51_22  [key=0, style=bold, color=blue];
m51_83 -> m51_84  [key=0, style=solid];
m51_84 -> m51_10  [key=2, style=dotted];
m51_84 -> m51_11  [key=2, style=dotted];
m51_84 -> m51_85  [key=0, style=solid];
m51_84 -> m51_89  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m51_85 -> m51_86  [key=0, style=solid];
m51_85 -> m51_18  [key=2, style=dotted];
m51_85 -> m51_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_86 -> m51_18  [key=2, style=dotted];
m51_86 -> m51_87  [key=0, style=solid];
m51_87 -> m51_83  [key=0, style=bold, color=blue];
m51_10 -> m51_11  [key=0, style=solid, color=red];
m51_10 -> m51_14  [key=1, style=dashed, color=red, label="System.Action<IRedisClient>"];
m51_78 -> m51_79  [key=0, style=solid];
m51_79 -> m51_10  [key=2, style=dotted];
m51_79 -> m51_11  [key=2, style=dotted];
m51_79 -> m51_80  [key=0, style=solid];
m51_80 -> m51_12  [key=2, style=dotted];
m51_80 -> m51_81  [key=0, style=solid];
m51_81 -> m51_13  [key=2, style=dotted];
m51_81 -> m51_82  [key=0, style=solid];
m51_82 -> m51_78  [key=0, style=bold, color=blue];
m51_98 -> m51_20  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m51_99 -> m51_27  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m51_100 -> m51_34  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m51_101 -> m51_89  [key=1, style=dashed, color=darkseagreen4, label=serializedData];
m52_0 -> m52_1  [key=0, style=solid];
m52_1 -> m52_2  [key=0, style=solid];
m52_2 -> m52_3  [key=0, style=solid];
m52_2 -> n206  [key=2, style=dotted];
m52_3 -> m52_4  [key=0, style=solid, color=red];
m52_3 -> m52_9  [key=2, style=dotted];
m52_4 -> m52_5  [key=0, style=solid, color=red];
m52_4 -> m52_10  [key=2, style=dotted, color=red];
m52_5 -> m52_6  [key=0, style=solid, color=red];
m52_5 -> m52_9  [key=2, style=dotted, color=red];
m52_6 -> m52_7  [key=0, style=solid, color=red];
m52_7 -> m52_0  [key=0, style=bold, color=blue];
m52_11 -> m52_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m52_11 -> m52_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m52_11 -> m52_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m52_11 -> m52_4  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m52_11 -> m52_5  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m52_11 -> m52_6  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerStorageOptions"];
}
