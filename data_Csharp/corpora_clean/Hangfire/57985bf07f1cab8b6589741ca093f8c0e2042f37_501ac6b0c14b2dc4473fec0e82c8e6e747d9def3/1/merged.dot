digraph  {
n107 [label="HangFire.Server.Worker", span=""];
n0 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)"];
n1 [label="_pool = pool", span="42-42", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)"];
n2 [label="_serverContext = serverContext", span="43-43", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)"];
n3 [label="_workerNumber = workerNumber", span="44-44", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)"];
n4 [label="_jobInvoker = jobInvoker", span="45-45", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)"];
n5 [label="_jobActivator = jobActivator", span="46-46", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)"];
n6 [label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', workerNumber))", span="48-48", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)"];
n7 [label="_thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', workerNumber),\r\n                    IsBackground = true\r\n                }", span="50-54", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)"];
n9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
n10 [label="Entry Unk.GetLogger", span="", cluster="Unk.GetLogger"];
n8 [label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)"];
n11 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)"];
n12 [label="Entry HangFire.Server.Worker.Start()", span="57-57", cluster="HangFire.Server.Worker.Start()"];
n13 [label="Debug.Assert(!_disposed, ''!_disposed'')", span="59-59", cluster="HangFire.Server.Worker.Start()"];
n14 [label=_started, span="61-61", cluster="HangFire.Server.Worker.Start()"];
n19 [label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool, string)"];
n15 [label="throw new InvalidOperationException(''Worker has been already started.'');", span="63-63", cluster="HangFire.Server.Worker.Start()"];
n16 [label="_thread.Start()", span="66-66", cluster="HangFire.Server.Worker.Start()", color=red, community=0];
n17 [label="_started = true", span="67-67", cluster="HangFire.Server.Worker.Start()", color=red, community=0];
n21 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()"];
n18 [label="Exit HangFire.Server.Worker.Start()", span="57-57", cluster="HangFire.Server.Worker.Start()"];
n20 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)"];
n22 [label="Entry HangFire.Server.Worker.Stop()", span="70-70", cluster="HangFire.Server.Worker.Stop()"];
n23 [label="Debug.Assert(!_disposed, ''!_disposed'')", span="72-72", cluster="HangFire.Server.Worker.Stop()"];
n24 [label=_started, span="74-74", cluster="HangFire.Server.Worker.Stop()"];
n25 [label="_cts.Cancel()", span="76-76", cluster="HangFire.Server.Worker.Stop()"];
n26 [label="Exit HangFire.Server.Worker.Stop()", span="70-70", cluster="HangFire.Server.Worker.Stop()"];
n27 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()"];
n28 [label="Entry HangFire.Server.Worker.Process(string)", span="98-98", cluster="HangFire.Server.Worker.Process(string)"];
n29 [label="Debug.Assert(!_disposed, ''!_disposed'')", span="100-100", cluster="HangFire.Server.Worker.Process(string)"];
n31 [label="_jobId = jobId", span="104-104", cluster="HangFire.Server.Worker.Process(string)"];
n30 [label=_jobLock, span="102-102", cluster="HangFire.Server.Worker.Process(string)"];
n32 [label="_jobIsReady.Set()", span="107-107", cluster="HangFire.Server.Worker.Process(string)"];
n33 [label="Exit HangFire.Server.Worker.Process(string)", span="98-98", cluster="HangFire.Server.Worker.Process(string)"];
n34 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()"];
n35 [label="Entry HangFire.Server.Worker.Dispose()", span="110-110", cluster="HangFire.Server.Worker.Dispose()"];
n36 [label=_disposed, span="112-112", cluster="HangFire.Server.Worker.Dispose()"];
n37 [label="return;", span="113-113", cluster="HangFire.Server.Worker.Dispose()"];
n38 [label="_disposed = true", span="115-115", cluster="HangFire.Server.Worker.Dispose()"];
n39 [label=_started, span="117-117", cluster="HangFire.Server.Worker.Dispose()"];
n40 [label="_thread.Join()", span="119-119", cluster="HangFire.Server.Worker.Dispose()"];
n41 [label="_cts.Dispose()", span="122-122", cluster="HangFire.Server.Worker.Dispose()"];
n44 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()"];
n42 [label="_jobIsReady.Dispose()", span="123-123", cluster="HangFire.Server.Worker.Dispose()"];
n45 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()"];
n43 [label="Exit HangFire.Server.Worker.Dispose()", span="110-110", cluster="HangFire.Server.Worker.Dispose()"];
n46 [label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Dispose()"];
n47 [label="Entry HangFire.Server.Worker.DoWork()", span="127-127", cluster="HangFire.Server.Worker.DoWork()"];
n48 [label=true, span="131-131", cluster="HangFire.Server.Worker.DoWork()"];
n49 [label="_pool.NotifyReady(this)", span="133-133", cluster="HangFire.Server.Worker.DoWork()"];
n54 [label=OperationCanceledException, span="143-143", cluster="HangFire.Server.Worker.DoWork()"];
n55 [label=Exception, span="146-146", cluster="HangFire.Server.Worker.DoWork()"];
n58 [label="Exit HangFire.Server.Worker.DoWork()", span="127-127", cluster="HangFire.Server.Worker.DoWork()"];
n50 [label="_jobIsReady.Wait(_cts.Token)", span="134-134", cluster="HangFire.Server.Worker.DoWork()"];
n59 [label="Entry HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="80-80", cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)"];
n51 [label=_jobLock, span="136-136", cluster="HangFire.Server.Worker.DoWork()"];
n60 [label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)"];
n52 [label="PerformJob(_jobId)", span="138-138", cluster="HangFire.Server.Worker.DoWork()"];
n53 [label="_jobIsReady.Reset()", span="139-139", cluster="HangFire.Server.Worker.DoWork()"];
n61 [label="Entry HangFire.Server.Worker.PerformJob(string)", span="157-157", cluster="HangFire.Server.Worker.PerformJob(string)"];
n62 [label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Reset()"];
n56 [label="Crashed = true", span="148-148", cluster="HangFire.Server.Worker.DoWork()"];
n57 [label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="149-152", cluster="HangFire.Server.Worker.DoWork()"];
n63 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])"];
n64 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal"];
n65 [label="Dictionary<string, string> jobArgs", span="159-159", cluster="HangFire.Server.Worker.PerformJob(string)"];
n67 [label="GetJobTypeAndArgs(jobId, out jobType, out jobArgs)", span="162-162", cluster="HangFire.Server.Worker.PerformJob(string)"];
n69 [label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    jobId))", span="166-168", cluster="HangFire.Server.Worker.PerformJob(string)"];
n73 [label="!JobState.Apply(\r\n                    Redis,\r\n                    new ProcessingState(jobId, ''Worker has started processing.'', workerContext.ServerContext.ServerName),\r\n                    EnqueuedState.Name,\r\n                    ProcessingState.Name)", span="177-181", cluster="HangFire.Server.Worker.PerformJob(string)"];
n77 [label="jobDescriptor = new ServerJobDescriptor(_jobActivator, jobId, jobType, jobArgs)", span="196-196", cluster="HangFire.Server.Worker.PerformJob(string)"];
n81 [label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    jobId))", span="203-205", cluster="HangFire.Server.Worker.PerformJob(string)"];
n84 [label="JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(jobId, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="225-228", cluster="HangFire.Server.Worker.PerformJob(string)"];
n85 [label="JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(jobId, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="232-235", cluster="HangFire.Server.Worker.PerformJob(string)"];
n86 [label="JobServer.RemoveFromFetchedQueue(\r\n                    Redis, jobId, _serverContext.Queue)", span="244-245", cluster="HangFire.Server.Worker.PerformJob(string)"];
n66 [label="string jobType", span="160-160", cluster="HangFire.Server.Worker.PerformJob(string)"];
n68 [label="String.IsNullOrEmpty(jobType)", span="164-164", cluster="HangFire.Server.Worker.PerformJob(string)"];
n88 [label="Entry HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", span="252-252", cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)"];
n71 [label="var workerContext = new WorkerContext(_serverContext, _workerNumber, Redis)", span="173-173", cluster="HangFire.Server.Worker.PerformJob(string)"];
n89 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n70 [label="return;", span="170-170", cluster="HangFire.Server.Worker.PerformJob(string)"];
n90 [label="Entry Unk.Warn", span="", cluster="Unk.Warn"];
n72 [label=Redis, span="175-175", cluster="HangFire.Server.Worker.PerformJob(string)"];
n91 [label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", span="16-16", cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)"];
n78 [label="_jobInvoker.PerformJob(workerContext, jobDescriptor)", span="197-197", cluster="HangFire.Server.Worker.PerformJob(string)"];
n74 [label="return;", span="183-183", cluster="HangFire.Server.Worker.PerformJob(string)"];
n75 [label="Exception exception = null", span="191-191", cluster="HangFire.Server.Worker.PerformJob(string)"];
n92 [label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10", cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)"];
n93 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])"];
n76 [label="ServerJobDescriptor jobDescriptor = null", span="193-193", cluster="HangFire.Server.Worker.PerformJob(string)"];
n94 [label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)"];
n79 [label=Exception, span="199-199", cluster="HangFire.Server.Worker.PerformJob(string)"];
n82 [label=Redis, span="221-221", cluster="HangFire.Server.Worker.PerformJob(string)"];
n95 [label="Entry HangFire.Server.ServerJobInvoker.PerformJob(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="33-33", cluster="HangFire.Server.ServerJobInvoker.PerformJob(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)"];
n80 [label="exception = ex", span="201-201", cluster="HangFire.Server.Worker.PerformJob(string)"];
n83 [label="exception == null", span="223-223", cluster="HangFire.Server.Worker.PerformJob(string)"];
n96 [label="Entry Unk.Error", span="", cluster="Unk.Error"];
n98 [label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)"];
n97 [label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12", cluster="HangFire.States.SucceededState.SucceededState(string, string)"];
n87 [label="Exit HangFire.Server.Worker.PerformJob(string)", span="157-157", cluster="HangFire.Server.Worker.PerformJob(string)"];
n99 [label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="99-99", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)"];
n100 [label=Redis, span="254-254", cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)"];
n101 [label="var result = Redis.GetValuesFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    new[] { ''Type'', ''Args'' })", span="256-258", cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)"];
n102 [label="jobType = result[0]", span="260-260", cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)"];
n105 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash"];
n103 [label="jobArgs = JobHelper.FromJson<Dictionary<string, string>>(result[1])", span="261-261", cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)"];
n104 [label="Exit HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", span="252-252", cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)"];
n106 [label="Entry Unk.>", span="", cluster="Unk.>"];
n107 -> n1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n16  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
n107 -> n17  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
n107 -> n23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n51  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n107 -> n86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerJobInvoker"];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobActivator"];
n0 -> n6  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n7  [key=1, style=dashed, color=darkseagreen4, label=int];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=2, style=dotted];
n6 -> n10  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n11  [key=2, style=dotted];
n7 -> n9  [key=2, style=dotted];
n8 -> n0  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n19  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid, color=red];
n15 -> n18  [key=0, style=solid];
n15 -> n20  [key=2, style=dotted];
n16 -> n17  [key=0, style=solid, color=red];
n16 -> n21  [key=2, style=dotted, color=red];
n17 -> n18  [key=0, style=solid, color=red];
n18 -> n12  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n19  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=2, style=dotted];
n26 -> n22  [key=0, style=bold, color=blue];
n28 -> n29  [key=0, style=solid];
n28 -> n31  [key=1, style=dashed, color=darkseagreen4, label=string];
n29 -> n30  [key=0, style=solid];
n29 -> n19  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=2, style=dotted];
n33 -> n28  [key=0, style=bold, color=blue];
n35 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n38  [key=0, style=solid];
n37 -> n43  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n44  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n45  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n46  [key=2, style=dotted];
n43 -> n35  [key=0, style=bold, color=blue];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n54  [key=0, style=solid];
n48 -> n55  [key=0, style=solid];
n48 -> n58  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n49 -> n59  [key=2, style=dotted];
n54 -> n58  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n58 -> n47  [key=0, style=bold, color=blue];
n50 -> n51  [key=0, style=solid];
n50 -> n60  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n61  [key=2, style=dotted];
n53 -> n48  [key=0, style=solid];
n53 -> n62  [key=2, style=dotted];
n61 -> n65  [key=0, style=solid];
n61 -> n67  [key=1, style=dashed, color=darkseagreen4, label=string];
n61 -> n69  [key=1, style=dashed, color=darkseagreen4, label=string];
n61 -> n73  [key=1, style=dashed, color=darkseagreen4, label=string];
n61 -> n77  [key=1, style=dashed, color=darkseagreen4, label=string];
n61 -> n81  [key=1, style=dashed, color=darkseagreen4, label=string];
n61 -> n84  [key=1, style=dashed, color=darkseagreen4, label=string];
n61 -> n85  [key=1, style=dashed, color=darkseagreen4, label=string];
n61 -> n86  [key=1, style=dashed, color=darkseagreen4, label=string];
n56 -> n57  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n57 -> n63  [key=2, style=dotted];
n57 -> n64  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n88  [key=2, style=dotted];
n67 -> n77  [key=1, style=dashed, color=darkseagreen4, label=jobArgs];
n69 -> n70  [key=0, style=solid];
n69 -> n9  [key=2, style=dotted];
n69 -> n90  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n75  [key=0, style=solid];
n73 -> n92  [key=2, style=dotted];
n73 -> n93  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n94  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n81 -> n9  [key=2, style=dotted];
n81 -> n96  [key=2, style=dotted];
n84 -> n86  [key=0, style=solid];
n84 -> n97  [key=2, style=dotted];
n84 -> n93  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n98  [key=2, style=dotted];
n85 -> n93  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n99  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n71  [key=0, style=solid];
n68 -> n89  [key=2, style=dotted];
n88 -> n100  [key=0, style=solid];
n88 -> n101  [key=1, style=dashed, color=darkseagreen4, label=string];
n71 -> n72  [key=0, style=solid];
n71 -> n91  [key=2, style=dotted];
n71 -> n73  [key=1, style=dashed, color=darkseagreen4, label=workerContext];
n71 -> n78  [key=1, style=dashed, color=darkseagreen4, label=workerContext];
n70 -> n87  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n78 -> n82  [key=0, style=solid];
n78 -> n95  [key=2, style=dotted];
n74 -> n87  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n76 -> n77  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n95 -> n95  [key=3, color=darkorchid, style=bold, label="Field variable int _initialized"];
n80 -> n81  [key=0, style=solid];
n80 -> n83  [key=1, style=dashed, color=darkseagreen4, label=exception];
n80 -> n85  [key=1, style=dashed, color=darkseagreen4, label=exception];
n83 -> n84  [key=0, style=solid];
n83 -> n85  [key=0, style=solid];
n87 -> n61  [key=0, style=bold, color=blue];
n100 -> n101  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n101 -> n9  [key=2, style=dotted];
n101 -> n105  [key=2, style=dotted];
n101 -> n103  [key=1, style=dashed, color=darkseagreen4, label=result];
n102 -> n103  [key=0, style=solid];
n102 -> n104  [key=1, style=dashed, color=darkseagreen4, label="out string"];
n103 -> n104  [key=0, style=solid];
n103 -> n106  [key=2, style=dotted];
n104 -> n88  [key=0, style=bold, color=blue];
}
