digraph  {
n107 [label="HangFire.Server.Worker", span=""];
n0 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36"];
n1 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", label="_pool = pool", span="42-42"];
n2 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", label="_serverContext = serverContext", span="43-43"];
n3 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", label="_workerNumber = workerNumber", span="44-44"];
n4 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", label="_jobInvoker = jobInvoker", span="45-45"];
n5 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", label="_jobActivator = jobActivator", span="46-46"];
n6 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', workerNumber))", span="48-48"];
n7 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", label="_thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', workerNumber),\r\n                    IsBackground = true\r\n                }", span="50-54"];
n9 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n10 [cluster="Unk.GetLogger", label="Entry Unk.GetLogger", span=""];
n8 [cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerPool, HangFire.Server.ServerContext, int, HangFire.Server.ServerJobInvoker, HangFire.JobActivator)", span="36-36"];
n11 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
n12 [cluster="HangFire.Server.Worker.Start()", label="Entry HangFire.Server.Worker.Start()", span="57-57"];
n13 [cluster="HangFire.Server.Worker.Start()", label="Debug.Assert(!_disposed, ''!_disposed'')", span="59-59"];
n14 [cluster="HangFire.Server.Worker.Start()", label=_started, span="61-61"];
n19 [cluster="System.Diagnostics.Debug.Assert(bool, string)", label="Entry System.Diagnostics.Debug.Assert(bool, string)", span="0-0"];
n15 [cluster="HangFire.Server.Worker.Start()", label="throw new InvalidOperationException(''Worker has been already started.'');", span="63-63"];
n16 [cluster="HangFire.Server.Worker.Start()", color=red, community=0, label="0: _thread.Start()", span="66-66"];
n17 [cluster="HangFire.Server.Worker.Start()", color=red, community=0, label="0: _started = true", span="67-67"];
n21 [cluster="System.Threading.Thread.Start()", label="Entry System.Threading.Thread.Start()", span="0-0"];
n18 [cluster="HangFire.Server.Worker.Start()", label="Exit HangFire.Server.Worker.Start()", span="57-57"];
n20 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
n22 [cluster="HangFire.Server.Worker.Stop()", label="Entry HangFire.Server.Worker.Stop()", span="70-70"];
n23 [cluster="HangFire.Server.Worker.Stop()", label="Debug.Assert(!_disposed, ''!_disposed'')", span="72-72"];
n24 [cluster="HangFire.Server.Worker.Stop()", label=_started, span="74-74"];
n25 [cluster="HangFire.Server.Worker.Stop()", label="_cts.Cancel()", span="76-76"];
n26 [cluster="HangFire.Server.Worker.Stop()", label="Exit HangFire.Server.Worker.Stop()", span="70-70"];
n27 [cluster="System.Threading.CancellationTokenSource.Cancel()", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
n28 [cluster="HangFire.Server.Worker.Process(string)", label="Entry HangFire.Server.Worker.Process(string)", span="98-98"];
n29 [cluster="HangFire.Server.Worker.Process(string)", label="Debug.Assert(!_disposed, ''!_disposed'')", span="100-100"];
n31 [cluster="HangFire.Server.Worker.Process(string)", label="_jobId = jobId", span="104-104"];
n30 [cluster="HangFire.Server.Worker.Process(string)", label=_jobLock, span="102-102"];
n32 [cluster="HangFire.Server.Worker.Process(string)", label="_jobIsReady.Set()", span="107-107"];
n33 [cluster="HangFire.Server.Worker.Process(string)", label="Exit HangFire.Server.Worker.Process(string)", span="98-98"];
n34 [cluster="System.Threading.ManualResetEventSlim.Set()", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
n35 [cluster="HangFire.Server.Worker.Dispose()", label="Entry HangFire.Server.Worker.Dispose()", span="110-110"];
n36 [cluster="HangFire.Server.Worker.Dispose()", label=_disposed, span="112-112"];
n37 [cluster="HangFire.Server.Worker.Dispose()", label="return;", span="113-113"];
n38 [cluster="HangFire.Server.Worker.Dispose()", label="_disposed = true", span="115-115"];
n39 [cluster="HangFire.Server.Worker.Dispose()", label=_started, span="117-117"];
n40 [cluster="HangFire.Server.Worker.Dispose()", label="_thread.Join()", span="119-119"];
n41 [cluster="HangFire.Server.Worker.Dispose()", label="_cts.Dispose()", span="122-122"];
n44 [cluster="System.Threading.Thread.Join()", label="Entry System.Threading.Thread.Join()", span="0-0"];
n42 [cluster="HangFire.Server.Worker.Dispose()", label="_jobIsReady.Dispose()", span="123-123"];
n45 [cluster="System.Threading.CancellationTokenSource.Dispose()", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
n43 [cluster="HangFire.Server.Worker.Dispose()", label="Exit HangFire.Server.Worker.Dispose()", span="110-110"];
n46 [cluster="System.Threading.ManualResetEventSlim.Dispose()", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
n47 [cluster="HangFire.Server.Worker.DoWork()", label="Entry HangFire.Server.Worker.DoWork()", span="127-127"];
n48 [cluster="HangFire.Server.Worker.DoWork()", label=true, span="131-131"];
n49 [cluster="HangFire.Server.Worker.DoWork()", label="_pool.NotifyReady(this)", span="133-133"];
n54 [cluster="HangFire.Server.Worker.DoWork()", label=OperationCanceledException, span="143-143"];
n55 [cluster="HangFire.Server.Worker.DoWork()", label=Exception, span="146-146"];
n58 [cluster="HangFire.Server.Worker.DoWork()", label="Exit HangFire.Server.Worker.DoWork()", span="127-127"];
n50 [cluster="HangFire.Server.Worker.DoWork()", label="_jobIsReady.Wait(_cts.Token)", span="134-134"];
n59 [cluster="HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", label="Entry HangFire.Server.WorkerPool.NotifyReady(HangFire.Server.Worker)", span="80-80"];
n51 [cluster="HangFire.Server.Worker.DoWork()", label=_jobLock, span="136-136"];
n60 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
n52 [cluster="HangFire.Server.Worker.DoWork()", label="PerformJob(_jobId)", span="138-138"];
n53 [cluster="HangFire.Server.Worker.DoWork()", label="_jobIsReady.Reset()", span="139-139"];
n61 [cluster="HangFire.Server.Worker.PerformJob(string)", label="Entry HangFire.Server.Worker.PerformJob(string)", span="157-157"];
n62 [cluster="System.Threading.ManualResetEventSlim.Reset()", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
n56 [cluster="HangFire.Server.Worker.DoWork()", label="Crashed = true", span="148-148"];
n57 [cluster="HangFire.Server.Worker.DoWork()", label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="149-152"];
n63 [cluster="string.Format(string, params object[])", label="Entry string.Format(string, params object[])", span="0-0"];
n64 [cluster="Unk.Fatal", label="Entry Unk.Fatal", span=""];
n65 [cluster="HangFire.Server.Worker.PerformJob(string)", label="Dictionary<string, string> jobArgs", span="159-159"];
n67 [cluster="HangFire.Server.Worker.PerformJob(string)", label="GetJobTypeAndArgs(jobId, out jobType, out jobArgs)", span="162-162"];
n69 [cluster="HangFire.Server.Worker.PerformJob(string)", label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    jobId))", span="166-168"];
n73 [cluster="HangFire.Server.Worker.PerformJob(string)", label="!JobState.Apply(\r\n                    Redis,\r\n                    new ProcessingState(jobId, ''Worker has started processing.'', workerContext.ServerContext.ServerName),\r\n                    EnqueuedState.Name,\r\n                    ProcessingState.Name)", span="177-181"];
n77 [cluster="HangFire.Server.Worker.PerformJob(string)", label="jobDescriptor = new ServerJobDescriptor(_jobActivator, jobId, jobType, jobArgs)", span="196-196"];
n81 [cluster="HangFire.Server.Worker.PerformJob(string)", label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    jobId))", span="203-205"];
n84 [cluster="HangFire.Server.Worker.PerformJob(string)", label="JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(jobId, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="225-228"];
n85 [cluster="HangFire.Server.Worker.PerformJob(string)", label="JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(jobId, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="232-235"];
n86 [cluster="HangFire.Server.Worker.PerformJob(string)", label="JobServer.RemoveFromFetchedQueue(\r\n                    Redis, jobId, _serverContext.Queue)", span="244-245"];
n66 [cluster="HangFire.Server.Worker.PerformJob(string)", label="string jobType", span="160-160"];
n68 [cluster="HangFire.Server.Worker.PerformJob(string)", label="String.IsNullOrEmpty(jobType)", span="164-164"];
n88 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", label="Entry HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", span="252-252"];
n71 [cluster="HangFire.Server.Worker.PerformJob(string)", label="var workerContext = new WorkerContext(_serverContext, _workerNumber, Redis)", span="173-173"];
n89 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n70 [cluster="HangFire.Server.Worker.PerformJob(string)", label="return;", span="170-170"];
n90 [cluster="Unk.Warn", label="Entry Unk.Warn", span=""];
n72 [cluster="HangFire.Server.Worker.PerformJob(string)", label=Redis, span="175-175"];
n91 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int, IRedisClient)", span="16-16"];
n78 [cluster="HangFire.Server.Worker.PerformJob(string)", label="_jobInvoker.PerformJob(workerContext, jobDescriptor)", span="197-197"];
n74 [cluster="HangFire.Server.Worker.PerformJob(string)", label="return;", span="183-183"];
n75 [cluster="HangFire.Server.Worker.PerformJob(string)", label="Exception exception = null", span="191-191"];
n92 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10"];
n93 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
n76 [cluster="HangFire.Server.Worker.PerformJob(string)", label="ServerJobDescriptor jobDescriptor = null", span="193-193"];
n94 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
n79 [cluster="HangFire.Server.Worker.PerformJob(string)", label=Exception, span="199-199"];
n82 [cluster="HangFire.Server.Worker.PerformJob(string)", label=Redis, span="221-221"];
n95 [cluster="HangFire.Server.ServerJobInvoker.PerformJob(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", label="Entry HangFire.Server.ServerJobInvoker.PerformJob(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="33-33"];
n80 [cluster="HangFire.Server.Worker.PerformJob(string)", label="exception = ex", span="201-201"];
n83 [cluster="HangFire.Server.Worker.PerformJob(string)", label="exception == null", span="223-223"];
n96 [cluster="Unk.Error", label="Entry Unk.Error", span=""];
n98 [cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10"];
n97 [cluster="HangFire.States.SucceededState.SucceededState(string, string)", label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12"];
n87 [cluster="HangFire.Server.Worker.PerformJob(string)", label="Exit HangFire.Server.Worker.PerformJob(string)", span="157-157"];
n99 [cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="99-99"];
n100 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", label=Redis, span="254-254"];
n101 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", label="var result = Redis.GetValuesFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    new[] { ''Type'', ''Args'' })", span="256-258"];
n102 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", label="jobType = result[0]", span="260-260"];
n105 [cluster="Unk.GetValuesFromHash", label="Entry Unk.GetValuesFromHash", span=""];
n103 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", label="jobArgs = JobHelper.FromJson<Dictionary<string, string>>(result[1])", span="261-261"];
n104 [cluster="HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", label="Exit HangFire.Server.Worker.GetJobTypeAndArgs(string, out string, out System.Collections.Generic.Dictionary<string, string>)", span="252-252"];
n106 [cluster="Unk.>", label="Entry Unk.>", span=""];
n107 -> n1  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n2  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n3  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n4  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n5  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n6  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n7  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n13  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n14  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n16  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n17  [color=red, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n24  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n25  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n29  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n30  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n31  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n32  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n36  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n38  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n39  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n40  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n41  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n42  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n49  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n50  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n51  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n52  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n53  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n56  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n57  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n69  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n71  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n77  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n78  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n81  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n107 -> n86  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n2  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label="HangFire.Server.ServerJobInvoker", style=dashed];
n0 -> n5  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
n0 -> n6  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n7  [color=darkseagreen4, key=1, label=int, style=dashed];
n1 -> n2  [key=0, style=solid];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=2, style=dotted];
n6 -> n10  [key=2, style=dotted];
n7 -> n8  [key=0, style=solid];
n7 -> n11  [key=2, style=dotted];
n7 -> n9  [key=2, style=dotted];
n8 -> n0  [color=blue, key=0, style=bold];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n19  [key=2, style=dotted];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [color=red, key=0, style=solid];
n15 -> n18  [key=0, style=solid];
n15 -> n20  [key=2, style=dotted];
n16 -> n17  [color=red, key=0, style=solid];
n16 -> n21  [color=red, key=2, style=dotted];
n17 -> n18  [color=red, key=0, style=solid];
n18 -> n12  [color=blue, key=0, style=bold];
n22 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n19  [key=2, style=dotted];
n24 -> n25  [key=0, style=solid];
n24 -> n26  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=2, style=dotted];
n26 -> n22  [color=blue, key=0, style=bold];
n28 -> n29  [key=0, style=solid];
n28 -> n31  [color=darkseagreen4, key=1, label=string, style=dashed];
n29 -> n30  [key=0, style=solid];
n29 -> n19  [key=2, style=dotted];
n31 -> n32  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n34  [key=2, style=dotted];
n33 -> n28  [color=blue, key=0, style=bold];
n35 -> n36  [key=0, style=solid];
n36 -> n37  [key=0, style=solid];
n36 -> n38  [key=0, style=solid];
n37 -> n43  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n41  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n44  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n45  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n46  [key=2, style=dotted];
n43 -> n35  [color=blue, key=0, style=bold];
n47 -> n48  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n54  [key=0, style=solid];
n48 -> n55  [key=0, style=solid];
n48 -> n58  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n49 -> n59  [key=2, style=dotted];
n54 -> n58  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n58 -> n47  [color=blue, key=0, style=bold];
n50 -> n51  [key=0, style=solid];
n50 -> n60  [key=2, style=dotted];
n51 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n61  [key=2, style=dotted];
n53 -> n48  [key=0, style=solid];
n53 -> n62  [key=2, style=dotted];
n61 -> n65  [key=0, style=solid];
n61 -> n67  [color=darkseagreen4, key=1, label=string, style=dashed];
n61 -> n69  [color=darkseagreen4, key=1, label=string, style=dashed];
n61 -> n73  [color=darkseagreen4, key=1, label=string, style=dashed];
n61 -> n77  [color=darkseagreen4, key=1, label=string, style=dashed];
n61 -> n81  [color=darkseagreen4, key=1, label=string, style=dashed];
n61 -> n84  [color=darkseagreen4, key=1, label=string, style=dashed];
n61 -> n85  [color=darkseagreen4, key=1, label=string, style=dashed];
n61 -> n86  [color=darkseagreen4, key=1, label=string, style=dashed];
n56 -> n57  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n57 -> n63  [key=2, style=dotted];
n57 -> n64  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n67 -> n68  [key=0, style=solid];
n67 -> n88  [key=2, style=dotted];
n67 -> n77  [color=darkseagreen4, key=1, label=jobArgs, style=dashed];
n69 -> n70  [key=0, style=solid];
n69 -> n9  [key=2, style=dotted];
n69 -> n90  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n75  [key=0, style=solid];
n73 -> n92  [key=2, style=dotted];
n73 -> n93  [key=2, style=dotted];
n77 -> n78  [key=0, style=solid];
n77 -> n94  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n81 -> n9  [key=2, style=dotted];
n81 -> n96  [key=2, style=dotted];
n84 -> n86  [key=0, style=solid];
n84 -> n97  [key=2, style=dotted];
n84 -> n93  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n85 -> n98  [key=2, style=dotted];
n85 -> n93  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n99  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n68 -> n69  [key=0, style=solid];
n68 -> n71  [key=0, style=solid];
n68 -> n89  [key=2, style=dotted];
n88 -> n100  [key=0, style=solid];
n88 -> n101  [color=darkseagreen4, key=1, label=string, style=dashed];
n71 -> n72  [key=0, style=solid];
n71 -> n91  [key=2, style=dotted];
n71 -> n73  [color=darkseagreen4, key=1, label=workerContext, style=dashed];
n71 -> n78  [color=darkseagreen4, key=1, label=workerContext, style=dashed];
n70 -> n87  [key=0, style=solid];
n72 -> n73  [key=0, style=solid];
n78 -> n79  [key=0, style=solid];
n78 -> n82  [key=0, style=solid];
n78 -> n95  [key=2, style=dotted];
n74 -> n87  [key=0, style=solid];
n75 -> n76  [key=0, style=solid];
n76 -> n77  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n82 -> n83  [key=0, style=solid];
n95 -> n95  [color=darkorchid, key=3, label="Field variable int _initialized", style=bold];
n80 -> n81  [key=0, style=solid];
n80 -> n83  [color=darkseagreen4, key=1, label=exception, style=dashed];
n80 -> n85  [color=darkseagreen4, key=1, label=exception, style=dashed];
n83 -> n84  [key=0, style=solid];
n83 -> n85  [key=0, style=solid];
n87 -> n61  [color=blue, key=0, style=bold];
n100 -> n101  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n101 -> n9  [key=2, style=dotted];
n101 -> n105  [key=2, style=dotted];
n101 -> n103  [color=darkseagreen4, key=1, label=result, style=dashed];
n102 -> n103  [key=0, style=solid];
n102 -> n104  [color=darkseagreen4, key=1, label="out string", style=dashed];
n103 -> n104  [key=0, style=solid];
n103 -> n106  [key=2, style=dotted];
n104 -> n88  [color=blue, key=0, style=bold];
}
