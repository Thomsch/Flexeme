digraph  {
m0_10 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="CoreBackgroundJobPerformer.cs"];
m0_11 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="CoreBackgroundJobPerformer.cs"];
m0_12 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="CoreBackgroundJobPerformer.cs"];
m0_0 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CoreBackgroundJobPerformer.cs"];
m0_1 [label="TransactionIsolationLevel = null", span="27-27", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CoreBackgroundJobPerformer.cs"];
m0_2 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CoreBackgroundJobPerformer.cs"];
m0_3 [label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="29-29", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CoreBackgroundJobPerformer.cs"];
m0_4 [label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CoreBackgroundJobPerformer.cs"];
m0_5 [label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CoreBackgroundJobPerformer.cs"];
m0_6 [label="PrepareSchemaIfNecessary = true", span="32-32", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CoreBackgroundJobPerformer.cs"];
m0_7 [label="DashboardJobListLimit = 50000", span="33-33", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CoreBackgroundJobPerformer.cs"];
m0_8 [label="TransactionTimeout = TimeSpan.FromMinutes(1)", span="34-34", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CoreBackgroundJobPerformer.cs"];
m0_9 [label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="CoreBackgroundJobPerformer.cs"];
m0_13 [label="Hangfire.SqlServer.SqlServerStorageOptions", span="", file="CoreBackgroundJobPerformer.cs"];
m1_157 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="174-177", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_91 [label="Entry HangFire.BackgroundJobClient.Dispose()", span="113-113", cluster="HangFire.BackgroundJobClient.Dispose()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_93 [label="x.Dispose()", span="96-96", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_94 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_95 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="CoreBackgroundJobPerformerFacts.cs"];
m1_92 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_96 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="100-100", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_97 [label="var client = CreateClient()", span="102-102", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_79 [label="_storage.Verify(x => x.GetConnection())", span="87-87", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_154 [label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="191-192", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_155 [label="Assert.NotNull(exception.InnerException)", span="194-194", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_156 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_158 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="168-168", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_171 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_172 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_173 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_174 [label="performer.Perform(_context.Object)", span="205-205", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_175 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_176 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", span="211-211", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_15 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="CoreBackgroundJobPerformerFacts.cs"];
m1_144 [label="InstanceMethod()", span="176-176", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_86 [label="var performer = CreatePerformer()", span="118-118", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_87 [label="performer.Perform(_context.Object)", span="121-121", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_88 [label="Assert.True(_methodInvoked)", span="124-124", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_89 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_90 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="CoreBackgroundJobPerformerFacts.cs"];
m1_18 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="CoreBackgroundJobPerformerFacts.cs"];
m1_19 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_20 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_17 [label="Entry Mock<IJobCreationProcess>.cstr", span="", cluster="Mock<IJobCreationProcess>.cstr", file="CoreBackgroundJobPerformerFacts.cs"];
m1_21 [label="x.GetConnection()", span="24-24", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_22 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_153 [label="var performer = CreatePerformer()", span="189-189", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_216 [label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="571-571", cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_238 [label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24", cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_31 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_181 [label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="220-220", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_242 [label="_methodInvoked = true", span="303-303", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_243 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", span="301-301", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.StaticMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_41 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_112 [label="Entry HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="81-81", cluster="HangFire.BackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_232 [label="_methodInvoked = true", span="285-285", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="CoreBackgroundJobPerformerFacts.cs"];
m1_233 [label="Assert.Null(argument)", span="286-286", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="CoreBackgroundJobPerformerFacts.cs"];
m1_234 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", span="283-283", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.NullArgumentMethod(string[])", file="CoreBackgroundJobPerformerFacts.cs"];
m1_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_12 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_190 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_191 [label="_context.BackgroundJob.Job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="227-227", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m1_192 [label="_context.CancellationToken.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="228-228", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m1_193 [label="var performer = CreatePerformer()", span="229-229", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=1, file="CoreBackgroundJobPerformerFacts.cs"];
m1_194 [label="Assert.Throws<OperationCanceledException>(\r\n                () => performer.Perform(_context.Object))", span="232-233", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m1_195 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="224-224", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_98 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_99 [label="MethodWithDateTimeArgument(SomeDateTime)", span="132-132", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_100 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_101 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_239 [label="_methodInvoked = true", span="296-296", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_240 [label="Assert.Equal(SomeDateTime, argument)", span="298-298", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_241 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", span="294-294", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithDateTimeArgument(System.DateTime)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_24 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_251 [label="return new CoreBackgroundJobPerformer(_activator.Object);", span="321-321", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_252 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", span="319-319", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CreatePerformer()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_38 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_78 [label="CreateClient()", span="86-86", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_TakesAConnection()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_121 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="CoreBackgroundJobPerformerFacts.cs"];
m1_64 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_163 [label="_methodInvoked = false", span="200-200", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_164 [label="_context.BackgroundJob.Job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="201-201", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_165 [label="var performer = CreatePerformer()", span="202-202", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_166 [label="Assert.Throws<InvalidOperationException>(\r\n                () => performer.Perform(_context.Object))", span="204-205", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_167 [label="Assert.True(_methodInvoked)", span="207-207", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_65 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_71 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_72 [label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_73 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_68 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_69 [label="new BackgroundJobClient(_storage.Object)", span="73-73", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_70 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_74 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_67 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_66 [label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_75 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_113 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_115 [label="client.Create(_job, _state.Object)", span="126-126", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_116 [label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>()))", span="128-128", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_117 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="122-122", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_118 [label="Entry lambda expression", span="128-128", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_114 [label="var client = CreateClient()", span="124-124", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_119 [label="x.Run(It.IsNotNull<CreateContext>())", span="128-128", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_43 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_45 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_46 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_47 [label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_44 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_48 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_49 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_28 [label="StaticMethod()", span="39-39", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_25 [label="Entry Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", span="41-41", cluster="Hangfire.Server.CoreBackgroundJobPerformer.Perform(Hangfire.Server.PerformContext)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_26 [label="Entry Unk.True", span="", cluster="Unk.True", file="CoreBackgroundJobPerformerFacts.cs"];
m1_29 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_39 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_40 [label="x.InstanceMethod()", span="51-51", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_53 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_54 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_55 [label="_methodInvoked = false", span="75-75", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_61 [label="Entry lambda expression", span="76-76", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_62 [label="MethodWithArguments(''hello'', 5)", span="76-76", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_63 [label="Exit lambda expression", span="76-76", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_76 [label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0", cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_83 [label="var type = typeof(CoreBackgroundJobPerformerFacts)", span="114-114", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_84 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="115-115", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_85 [label="_context.BackgroundJob.Job = new Job(type, method, new[] { convertedDate })", span="117-117", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_102 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_103 [label="_methodInvoked = false", span="146-146", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_110 [label="NullArgumentMethod(null)", span="147-147", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_109 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_111 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_120 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_134 [label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="175-175", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_130 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_133 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="173-173", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_131 [label="performer.Perform(_context.Object)", span="169-169", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_132 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_135 [label="_context.BackgroundJob.Job = Job.FromExpression(() => InstanceMethod())", span="176-176", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_142 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_141 [label="x.ActivateJob(It.IsNotNull<Type>())", span="175-175", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_143 [label="Entry lambda expression", span="176-176", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_151 [label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="187-187", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_150 [label="var type = typeof(JobFacts)", span="186-186", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_152 [label="_context.BackgroundJob.Job = new Job(type, method, new object[] { ''sdfa'' })", span="188-188", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_159 [label="Entry lambda expression", span="192-192", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_160 [label="performer.Perform(_context.Object)", span="192-192", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_161 [label="Exit lambda expression", span="192-192", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_168 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", span="198-198", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnDisposalFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_169 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_170 [label="x.Method()", span="201-201", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_178 [label="var performer = CreatePerformer()", span="214-214", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_179 [label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => performer.Perform(_context.Object))", span="216-217", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_180 [label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="219-219", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_WithUnwrappedInnerException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_196 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_200 [label="Entry lambda expression", span="228-228", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_205 [label="performer.Perform(_context.Object)", span="233-233", cluster="lambda expression", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m1_204 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_206 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_197 [label="CancelableJob(JobCancellationToken.Null)", span="227-227", cluster="lambda expression", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m1_198 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_201 [label="x.ThrowIfCancellationRequested()", span="228-228", cluster="lambda expression", color=green, community=0, file="CoreBackgroundJobPerformerFacts.cs"];
m1_202 [label="Exit lambda expression", span="228-228", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_128 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="132-132", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_147 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="161-162", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_188 [label=client, span="", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_124 [label="_process.Setup(x => x.Run(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="135-136", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_27 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="CoreBackgroundJobPerformerFacts.cs"];
m1_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_123 [label="var client = CreateClient()", span="134-134", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_127 [label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="142-142", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_129 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="CoreBackgroundJobPerformerFacts.cs"];
m1_140 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_145 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="157-157", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_146 [label="var client = CreateClient()", span="159-159", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_148 [label="Assert.Equal(''state'', exception.ParamName)", span="164-164", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_183 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_187 [label=client, span="", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_189 [label=client, span="", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_213 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_125 [label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="138-139", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_52 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_51 [label="Assert.Equal(''process'', exception.ParamName)", span="60-60", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_185 [label=client, span="", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_184 [label="HangFire.Core.Tests.BackgroundJobClientFacts", span="", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_215 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_214 [label="x.FunctionReturningValue()", span="239-239", cluster="lambda expression", file="CoreBackgroundJobPerformerFacts.cs"];
m1_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="CoreBackgroundJobPerformerFacts.cs"];
m1_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="CoreBackgroundJobPerformerFacts.cs"];
m1_4 [label="_stateMachine = new Mock<IStateMachine>()", span="26-26", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_42 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_177 [label="Entry Unk.True", span="", cluster="Unk.True", file="CoreBackgroundJobPerformerFacts.cs"];
m1_182 [label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="211-211", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_139 [label="Assert.Equal(''jobId'', exception.ParamName)", span="153-153", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_199 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_236 [label="token.ThrowIfCancellationRequested()", span="291-291", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_237 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="289-289", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_217 [label="_methodInvoked = true", span="249-249", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_218 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", span="247-247", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.InstanceMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_0 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_1 [label="_activator = new Mock<JobActivator>() { CallBase = true }", span="21-21", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_2 [label="_context = new PerformContextMock()", span="22-22", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_3 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", span="19-19", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.CoreBackgroundJobPerformerFacts()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_6 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_7 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                () => new CoreBackgroundJobPerformer(null))", span="28-30", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_8 [label="Assert.Equal(''activator'', exception.ParamName)", span="32-32", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_9 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", span="26-26", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Ctor_ThrowsAnException_WhenActivatorIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_10 [label="Entry Unk.>", span="", cluster="Unk.>", file="CoreBackgroundJobPerformerFacts.cs"];
m1_23 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="CoreBackgroundJobPerformerFacts.cs"];
m1_56 [label="_context.BackgroundJob.Job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="76-76", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_57 [label="var performer = CreatePerformer()", span="77-77", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_58 [label="performer.Perform(_context.Object)", span="80-80", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_59 [label="Assert.True(_methodInvoked)", span="83-83", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_219 [label="_methodInvoked = true", span="256-256", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_220 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", span="254-254", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Disposable.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_11 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="CoreBackgroundJobPerformerFacts.cs"];
m1_37 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", span="48-48", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_CanInvokeInstanceMethods()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_77 [label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_80 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="108-108", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_122 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="CoreBackgroundJobPerformerFacts.cs"];
m1_126 [label="Entry Unk.ActivateJob", span="", cluster="Unk.ActivateJob", file="CoreBackgroundJobPerformerFacts.cs"];
m1_149 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", span="184-184", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ThrowsPerformanceException_OnArgumentsDeserializationFailure()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_104 [label="_context.BackgroundJob.Job = Job.FromExpression(() => NullArgumentMethod(null))", span="147-147", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_105 [label="var performer = CreatePerformer()", span="149-149", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_106 [label="performer.Perform(_context.Object)", span="151-151", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_107 [label="Assert.True(_methodInvoked)", span="154-154", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_108 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", span="143-143", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_WorksCorrectly_WithNullValues()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_244 [label="_methodInvoked = true", span="308-308", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_245 [label="Assert.Equal(''hello'', stringArg)", span="310-310", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_246 [label="Assert.Equal(5, intArg)", span="311-311", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_247 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", span="306-306", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.MethodWithArguments(string, int)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_250 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="CoreBackgroundJobPerformerFacts.cs"];
m1_162 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="CoreBackgroundJobPerformerFacts.cs"];
m1_235 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="CoreBackgroundJobPerformerFacts.cs"];
m1_253 [label="Entry CoreBackgroundJobPerformer.cstr", span="", cluster="CoreBackgroundJobPerformer.cstr", file="CoreBackgroundJobPerformerFacts.cs"];
m1_136 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="146-146", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_137 [label="var client = CreateClient()", span="148-148", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_138 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="150-151", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_82 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="CoreBackgroundJobPerformerFacts.cs"];
m1_81 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="209-209", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_224 [label="_methodInvoked = true", span="269-269", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_225 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", span="267-267", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Method()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_33 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_34 [label="Assert.Equal(''storage'', exception.ParamName)", span="42-42", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_35 [label="Exit HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_32 [label="Entry HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="HangFire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_36 [label="Entry Unk.>", span="", cluster="Unk.>", file="CoreBackgroundJobPerformerFacts.cs"];
m1_226 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_227 [label="throw new InvalidOperationException();", span="274-274", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_228 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", span="272-272", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.BrokenDispose.Dispose()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_60 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", span="72-72", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_PassesArguments_ToACallingMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_207 [label="Entry Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_208 [label="_context.BackgroundJob.Job = Job.FromExpression<JobFacts.Instance>(x => x.FunctionReturningValue())", span="239-239", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_209 [label="var performer = CreatePerformer()", span="240-240", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_210 [label="var result = performer.Perform(_context.Object)", span="242-242", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_211 [label="Assert.Equal(''Return value'', result)", span="244-244", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_212 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", span="237-237", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.Run_ReturnsValue_WhenCallingFunctionReturningValue()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_186 [label=client, span="", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_248 [label="throw new InvalidOperationException(''exception'');", span="316-316", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_249 [label="Exit Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", span="314-314", cluster="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts.ExceptionMethod()", file="CoreBackgroundJobPerformerFacts.cs"];
m1_203 [label="Entry Unk.ThrowIfCancellationRequested", span="", cluster="Unk.ThrowIfCancellationRequested", file="CoreBackgroundJobPerformerFacts.cs"];
m1_254 [label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts", span="", file="CoreBackgroundJobPerformerFacts.cs"];
m1_260 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m1_255 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m1_256 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m1_257 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m1_258 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m1_259 [label=performer, span="", file="CoreBackgroundJobPerformerFacts.cs"];
m2_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CountersAggregator.cs"];
m2_24 [label="Entry Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", file="CountersAggregator.cs"];
m2_31 [label="return @''\r\nDECLARE @RecordsToAggregate TABLE\r\n(\r\n	[Key] NVARCHAR(100) NOT NULL,\r\n	[Value] SMALLINT NOT NULL,\r\n	[ExpireAt] DATETIME NULL\r\n)\r\n\r\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED\r\nBEGIN TRAN\r\n\r\nDELETE TOP (@count) [HangFire].[Counter] with (readpast)\r\nOUTPUT DELETED.[Key], DELETED.[Value], DELETED.[ExpireAt] INTO @RecordsToAggregate\r\n\r\nSET NOCOUNT ON\r\n\r\n;MERGE [HangFire].[AggregatedCounter] AS [Target]\r\nUSING (\r\n	SELECT [Key], SUM([Value]) as [Value], MAX([ExpireAt]) AS [ExpireAt] FROM @RecordsToAggregate\r\n	GROUP BY [Key]) AS [Source] ([Key], [Value], [ExpireAt])\r\nON [Target].[Key] = [Source].[Key]\r\nWHEN MATCHED THEN UPDATE SET \r\n	[Target].[Value] = [Target].[Value] + [Source].[Value],\r\n	[Target].[ExpireAt] = (SELECT MAX([ExpireAt]) FROM (VALUES ([Source].ExpireAt), ([Target].[ExpireAt])) AS MaxExpireAt([ExpireAt]))\r\nWHEN NOT MATCHED THEN INSERT ([Key], [Value], [ExpireAt]) VALUES ([Source].[Key], [Source].[Value], [Source].[ExpireAt]);\r\n\r\nCOMMIT TRAN'';", span="74-100", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", color=red, community=1, file="CountersAggregator.cs"];
m2_32 [label="Exit Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", span="72-72", cluster="Hangfire.SqlServer.CountersAggregator.GetAggregationQuery()", file="CountersAggregator.cs"];
m2_0 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m2_1 [label="storage == null", span="36-36", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m2_3 [label="_storage = storage", span="38-38", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m2_4 [label="_interval = interval", span="39-39", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m2_2 [label="throw new ArgumentNullException(''storage'');", span="36-36", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m2_5 [label="Exit Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="CountersAggregator.cs"];
m2_19 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="CountersAggregator.cs"];
m2_30 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="CountersAggregator.cs"];
m2_25 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="CountersAggregator.cs"];
m2_7 [label="Entry Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m2_8 [label="Logger.DebugFormat(''Aggregating records in 'Counter' table...'')", span="44-44", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m2_12 [label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="59-59", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m2_15 [label="cancellationToken.WaitHandle.WaitOne(_interval)", span="64-64", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m2_9 [label="int removedCount = 0", span="46-46", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m2_10 [label="_storage.UseConnection(connection =>\r\n                {\r\n                    removedCount = connection.Execute(\r\n                        GetAggregationQuery(),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                })", span="50-55", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", color=red, community=0, file="CountersAggregator.cs"];
m2_11 [label="removedCount >= NumberOfRecordsInSinglePass", span="57-57", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m2_14 [label="removedCount >= NumberOfRecordsInSinglePass", span="62-62", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m2_13 [label="cancellationToken.ThrowIfCancellationRequested()", span="60-60", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m2_16 [label="Exit Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", span="42-42", cluster="Hangfire.SqlServer.CountersAggregator.Execute(System.Threading.CancellationToken)", file="CountersAggregator.cs"];
m2_17 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="CountersAggregator.cs"];
m2_26 [label="Entry Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CountersAggregator.cs"];
m2_27 [label="return GetType().ToString();", span="69-69", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CountersAggregator.cs"];
m2_28 [label="Exit Hangfire.SqlServer.CountersAggregator.ToString()", span="67-67", cluster="Hangfire.SqlServer.CountersAggregator.ToString()", file="CountersAggregator.cs"];
m2_18 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="CountersAggregator.cs"];
m2_29 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="CountersAggregator.cs"];
m2_21 [label="Entry lambda expression", span="50-55", cluster="lambda expression", file="CountersAggregator.cs"];
m2_22 [label="removedCount = connection.Execute(\r\n                        GetAggregationQuery(),\r\n                        new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="52-54", cluster="lambda expression", color=red, community=0, file="CountersAggregator.cs"];
m2_23 [label="Exit lambda expression", span="50-55", cluster="lambda expression", file="CountersAggregator.cs"];
m2_20 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="CountersAggregator.cs"];
m2_33 [label="Hangfire.SqlServer.CountersAggregator", span="", file="CountersAggregator.cs"];
m3_13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EmbeddedResourceDispatcher.cs"];
m3_18 [label="Entry HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", span="10-10", cluster="HangFire.States.ScheduledState.ScheduledState(string, string, System.DateTime)", file="EmbeddedResourceDispatcher.cs"];
m3_16 [label="Entry Unk.SecondsToDelay", span="", cluster="Unk.SecondsToDelay", file="EmbeddedResourceDispatcher.cs"];
m3_0 [label="Entry HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="10-10", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_1 [label="redis == null", span="12-12", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_3 [label="state == null", span="13-13", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_5 [label="state.StateName != FailedState.Name", span="15-15", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_6 [label="return state;", span="18-18", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_7 [label="var retryCount = redis.IncrementValueInHash(\r\n                String.Format(''hangfire:job:{0}'', state.JobId),\r\n                ''RetryCount'',\r\n                1)", span="21-24", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_10 [label="return new ScheduledState(\r\n                    state.JobId, \r\n                    String.Format(''Retry attempt {0} of {1}.'', retryCount, MaxRetryAttempts), \r\n                    delay);", span="32-35", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_11 [label="return state;", span="40-40", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_2 [label="throw new ArgumentNullException(''redis'');", span="12-12", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_4 [label="throw new ArgumentNullException(''state'');", span="13-13", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_8 [label="retryCount <= MaxRetryAttempts", span="26-26", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_9 [label="var delay = DateTime.UtcNow.AddSeconds(SecondsToDelay(retryCount))", span="28-28", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_12 [label="Exit HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", span="10-10", cluster="HangFire.RetryJobsFilter.OnStateChanged(IRedisClient, HangFire.States.JobState)", file="EmbeddedResourceDispatcher.cs"];
m3_17 [label="Entry System.DateTime.AddSeconds(double)", span="0-0", cluster="System.DateTime.AddSeconds(double)", file="EmbeddedResourceDispatcher.cs"];
m3_19 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="EmbeddedResourceDispatcher.cs"];
m3_20 [label="Entry HangFire.RetryJobsFilter.SecondsToDelay(long)", span="44-44", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="EmbeddedResourceDispatcher.cs"];
m3_21 [label="var random = new Random()", span="46-46", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="EmbeddedResourceDispatcher.cs"];
m3_22 [label="return (int)Math.Round(\r\n                Math.Pow(retryCount, 4) + 15 + (random.Next(30) * (retryCount + 1)));", span="47-48", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="EmbeddedResourceDispatcher.cs"];
m3_23 [label="Exit HangFire.RetryJobsFilter.SecondsToDelay(long)", span="44-44", cluster="HangFire.RetryJobsFilter.SecondsToDelay(long)", file="EmbeddedResourceDispatcher.cs"];
m3_24 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()", file="EmbeddedResourceDispatcher.cs"];
m3_26 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="EmbeddedResourceDispatcher.cs"];
m3_27 [label="Entry System.Math.Round(double)", span="0-0", cluster="System.Math.Round(double)", file="EmbeddedResourceDispatcher.cs"];
m3_15 [label="Entry Unk.IncrementValueInHash", span="", cluster="Unk.IncrementValueInHash", file="EmbeddedResourceDispatcher.cs"];
m3_14 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="EmbeddedResourceDispatcher.cs"];
m3_25 [label="Entry System.Math.Pow(double, double)", span="0-0", cluster="System.Math.Pow(double, double)", file="EmbeddedResourceDispatcher.cs"];
m3_28 [label="HangFire.RetryJobsFilter", span="", file="EmbeddedResourceDispatcher.cs"];
m4_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ExpirationManager.cs"];
m4_31 [label="Entry Unk.Acquire", span="", cluster="Unk.Acquire", file="ExpirationManager.cs"];
m4_25 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ExpirationManager.cs"];
m4_32 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ExpirationManager.cs"];
m4_23 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="ExpirationManager.cs"];
m4_24 [label="Entry Hangfire.Logging.ILog.Trace(string)", span="232-232", cluster="Hangfire.Logging.ILog.Trace(string)", file="ExpirationManager.cs"];
m4_33 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ExpirationManager.cs"];
m4_35 [label="Entry Hangfire.SqlServer.ExpirationManager.ToString()", span="100-100", cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs"];
m4_36 [label="return GetType().ToString();", span="102-102", cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs"];
m4_37 [label="Exit Hangfire.SqlServer.ExpirationManager.ToString()", span="100-100", cluster="Hangfire.SqlServer.ExpirationManager.ToString()", file="ExpirationManager.cs"];
m4_26 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="ExpirationManager.cs"];
m4_0 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", span="45-45", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs"];
m4_1 [label="Exit Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", span="45-45", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage)", file="ExpirationManager.cs"];
m4_21 [label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122", cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="ExpirationManager.cs"];
m4_34 [label="Entry Unk.Release", span="", cluster="Unk.Release", file="ExpirationManager.cs"];
m4_39 [label="Entry System.Type.ToString()", span="0-0", cluster="System.Type.ToString()", file="ExpirationManager.cs"];
m4_38 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ExpirationManager.cs"];
m4_22 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="ExpirationManager.cs"];
m4_2 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="50-50", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m4_3 [label="storage == null", span="52-52", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m4_5 [label="_storage = storage", span="54-54", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m4_6 [label="_checkInterval = checkInterval", span="55-55", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m4_4 [label="throw new ArgumentNullException(''storage'');", span="52-52", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m4_7 [label="Exit Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="50-50", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="ExpirationManager.cs"];
m4_27 [label="Entry lambda expression", span="68-84", cluster="lambda expression", file="ExpirationManager.cs"];
m4_29 [label="removedCount = connection.Execute(\r\n                                String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                                new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass })", span="74-78", cluster="lambda expression", color=green, community=0, file="ExpirationManager.cs"];
m4_28 [label="SqlServerDistributedLock.Acquire(connection, DistributedLockKey, DefaultLockTimeout)", span="70-70", cluster="lambda expression", file="ExpirationManager.cs"];
m4_30 [label="Exit lambda expression", span="68-84", cluster="lambda expression", file="ExpirationManager.cs"];
m4_9 [label="Entry Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="58-58", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_10 [label=ProcessedTables, span="60-60", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_16 [label="cancellationToken.WaitHandle.WaitOne(DelayBetweenPasses)", span="91-91", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_19 [label="cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="97-97", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_11 [label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="62-62", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_13 [label="_storage.UseConnection(connection =>\r\n                    {\r\n                        SqlServerDistributedLock.Acquire(connection, DistributedLockKey, DefaultLockTimeout);\r\n\r\n                        try\r\n                        {\r\n                            removedCount = connection.Execute(\r\n                                String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete top (@count) from HangFire.[{0}] with (readpast) where ExpireAt < @now;'', table),\r\n                                new { now = DateTime.UtcNow, count = NumberOfRecordsInSinglePass });\r\n                        }\r\n                        finally\r\n                        {\r\n                            SqlServerDistributedLock.Release(connection, DistributedLockKey);\r\n                        }\r\n                    })", span="68-84", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=green, community=0, file="ExpirationManager.cs"];
m4_15 [label="Logger.Trace(String.Format(''Removed {0} outdated record(s) from '{1}' table.'', removedCount,\r\n                            table))", span="88-89", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_12 [label="int removedCount = 0", span="64-64", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_14 [label="removedCount > 0", span="86-86", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_18 [label="removedCount != 0", span="94-94", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_17 [label="cancellationToken.ThrowIfCancellationRequested()", span="92-92", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_20 [label="Exit Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="58-58", cluster="Hangfire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="ExpirationManager.cs"];
m4_40 [label="Hangfire.SqlServer.ExpirationManager", span="", file="ExpirationManager.cs"];
m4_41 [label=table, span="", file="ExpirationManager.cs"];
m5_12 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobManager.cs"];
m5_66 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RecurringJobManager.cs"];
m5_19 [label="Entry Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", span="72-72", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_29 [label="var connection = _storage.GetConnection()", span="86-86", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_21 [label="throw new ArgumentNullException(''recurringJobId'');", span="79-79", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_23 [label="throw new ArgumentNullException(''job'');", span="80-80", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_25 [label="throw new ArgumentNullException(''cronExpression'');", span="81-81", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_27 [label="throw new ArgumentNullException(''timeZone'');", span="82-82", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_28 [label="ValidateCronExpression(cronExpression)", span="84-84", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_30 [label="var recurringJob = new Dictionary<string, string>()", span="88-88", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_36 [label="var transaction = connection.CreateWriteTransaction()", span="96-96", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_20 [label="recurringJobId == null", span="79-79", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_22 [label="job == null", span="80-80", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_24 [label="cronExpression == null", span="81-81", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_26 [label="timeZone == null", span="82-82", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_31 [label="var invocationData = InvocationData.Serialize(job)", span="89-89", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_33 [label="recurringJob[''Cron''] = cronExpression", span="92-92", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_34 [label="recurringJob[''TimeZoneId''] = timeZone.Id", span="93-93", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_35 [label="recurringJob[''Queue''] = queue", span="94-94", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_37 [label="transaction.SetRangeInHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId),\r\n                        recurringJob)", span="98-100", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_38 [label="transaction.AddToSet(''recurring-jobs'', recurringJobId)", span="102-102", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_32 [label="recurringJob[''Job''] = JobHelper.ToJson(invocationData)", span="91-91", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_39 [label="transaction.Commit()", span="104-104", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_40 [label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", span="72-72", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo, string)", file="RecurringJobManager.cs"];
m5_42 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="RecurringJobManager.cs"];
m5_67 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RecurringJobManager.cs"];
m5_51 [label="Entry Hangfire.RecurringJobManager.Trigger(string)", span="109-109", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_62 [label="_factory.Create(new CreateContext(_storage, connection, job, state))", span="129-129", cluster="Hangfire.RecurringJobManager.Trigger(string)", color=green, community=0, file="RecurringJobManager.cs"];
m5_54 [label="var connection = _storage.GetConnection()", span="113-113", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_58 [label="var job = JobHelper.FromJson<InvocationData>(hash[''Job'']).Deserialize()", span="121-121", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_60 [label="hash.ContainsKey(''Queue'')", span="124-124", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_61 [label="state.Queue = hash[''Queue'']", span="126-126", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_59 [label="var state = new EnqueuedState { Reason = ''Triggered using recurring job manager'' }", span="122-122", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_53 [label="throw new ArgumentNullException(''recurringJobId'');", span="111-111", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_52 [label="recurringJobId == null", span="111-111", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_55 [label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', recurringJobId))", span="115-115", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_56 [label="hash == null", span="116-116", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_57 [label="return;", span="118-118", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_63 [label="Exit Hangfire.RecurringJobManager.Trigger(string)", span="109-109", cluster="Hangfire.RecurringJobManager.Trigger(string)", file="RecurringJobManager.cs"];
m5_71 [label="Entry Hangfire.RecurringJobManager.RemoveIfExists(string)", span="133-133", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m5_74 [label="var connection = _storage.GetConnection()", span="137-137", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m5_73 [label="throw new ArgumentNullException(''recurringJobId'');", span="135-135", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m5_72 [label="recurringJobId == null", span="135-135", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m5_75 [label="var transaction = connection.CreateWriteTransaction()", span="138-138", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m5_76 [label="transaction.RemoveHash(String.Format(''recurring-job:{0}'', recurringJobId))", span="140-140", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m5_77 [label="transaction.RemoveFromSet(''recurring-jobs'', recurringJobId)", span="141-141", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m5_78 [label="transaction.Commit()", span="143-143", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m5_79 [label="Exit Hangfire.RecurringJobManager.RemoveIfExists(string)", span="133-133", cluster="Hangfire.RecurringJobManager.RemoveIfExists(string)", file="RecurringJobManager.cs"];
m5_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobManager.cs"];
m5_89 [label="Entry System.ArgumentException.ArgumentException(string, string, System.Exception)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string, System.Exception)", file="RecurringJobManager.cs"];
m5_88 [label="Entry Unk.GetNextOccurrence", span="", cluster="Unk.GetNextOccurrence", file="RecurringJobManager.cs"];
m5_81 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="RecurringJobManager.cs"];
m5_68 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobManager.cs"];
m5_13 [label="Entry Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", span="55-55", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", file="RecurringJobManager.cs"];
m5_14 [label="AddOrUpdate(recurringJobId, job, cronExpression, TimeZoneInfo.Utc)", span="60-60", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", file="RecurringJobManager.cs"];
m5_15 [label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", span="55-55", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string)", file="RecurringJobManager.cs"];
m5_16 [label="Entry Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="63-63", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManager.cs"];
m5_17 [label="AddOrUpdate(recurringJobId, job, cronExpression, timeZone, EnqueuedState.DefaultQueue)", span="69-69", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManager.cs"];
m5_18 [label="Exit Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", span="63-63", cluster="Hangfire.RecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, System.TimeZoneInfo)", file="RecurringJobManager.cs"];
m5_44 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="72-72", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="RecurringJobManager.cs"];
m5_69 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RecurringJobManager.cs"];
m5_46 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="RecurringJobManager.cs"];
m5_87 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="RecurringJobManager.cs"];
m5_49 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="41-41", cluster="Hangfire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="RecurringJobManager.cs"];
m5_43 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobManager.cs"];
m5_48 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="51-51", cluster="Hangfire.Storage.IWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RecurringJobManager.cs"];
m5_65 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RecurringJobManager.cs"];
m5_41 [label="Entry Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="147-147", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m5_82 [label="var schedule = CrontabSchedule.Parse(cronExpression)", span="151-151", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m5_83 [label="schedule.GetNextOccurrence(DateTime.UtcNow)", span="152-152", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m5_85 [label="throw new ArgumentException(''CRON expression is invalid. Please see the inner exception for details.'', ''cronExpression'', ex);", span="156-156", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m5_84 [label=Exception, span="154-154", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m5_86 [label="Exit Hangfire.RecurringJobManager.ValidateCronExpression(string)", span="147-147", cluster="Hangfire.RecurringJobManager.ValidateCronExpression(string)", file="RecurringJobManager.cs"];
m5_50 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="RecurringJobManager.cs"];
m5_45 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="RecurringJobManager.cs"];
m5_4 [label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", span="46-46", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs"];
m5_7 [label="factory == null", span="49-49", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs"];
m5_5 [label="storage == null", span="48-48", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs"];
m5_8 [label="throw new ArgumentNullException(''factory'');", span="49-49", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs"];
m5_9 [label="_storage = storage", span="51-51", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs"];
m5_10 [label="_factory = factory", span="52-52", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", color=green, community=0, file="RecurringJobManager.cs"];
m5_6 [label="throw new ArgumentNullException(''storage'');", span="48-48", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs"];
m5_11 [label="Exit Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", span="46-46", cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory)", file="RecurringJobManager.cs"];
m5_64 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobManager.cs"];
m5_80 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", span="52-52", cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveHash(string)", file="RecurringJobManager.cs"];
m5_70 [label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31", cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="RecurringJobManager.cs"];
m5_90 [label="Hangfire.RecurringJobManager", span="", file="RecurringJobManager.cs"];
m6_31 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="RecurringJobManagerFacts.cs"];
m6_49 [label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Reset()", file="RecurringJobManagerFacts.cs"];
m6_76 [label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="RecurringJobManagerFacts.cs"];
m6_50 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="RecurringJobManagerFacts.cs"];
m6_12 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="RecurringJobManagerFacts.cs"];
m6_32 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="RecurringJobManagerFacts.cs"];
m6_11 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="RecurringJobManagerFacts.cs"];
m6_9 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="RecurringJobManagerFacts.cs"];
m6_23 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="RecurringJobManagerFacts.cs"];
m6_46 [label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85", cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="RecurringJobManagerFacts.cs"];
m6_17 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="RecurringJobManagerFacts.cs"];
m6_0 [label="Entry HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="RecurringJobManagerFacts.cs"];
m6_1 [label="_redis = redisManager.GetClient()", span="37-37", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="RecurringJobManagerFacts.cs"];
m6_2 [label="_manager = manager", span="39-39", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m6_3 [label="_context = context", span="40-40", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="RecurringJobManagerFacts.cs"];
m6_4 [label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber))", span="42-42", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="RecurringJobManagerFacts.cs"];
m6_5 [label="_thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                    IsBackground = true\r\n                }", span="44-48", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m6_6 [label="_thread.Start()", span="49-49", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="RecurringJobManagerFacts.cs"];
m6_7 [label="Exit HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32", cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="RecurringJobManagerFacts.cs"];
m6_10 [label="Entry Unk.GetLogger", span="", cluster="Unk.GetLogger", file="RecurringJobManagerFacts.cs"];
m6_47 [label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="RecurringJobManagerFacts.cs"];
m6_34 [label="Entry HangFire.Server.Worker.DoWork()", span="100-100", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_35 [label=true, span="104-104", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_36 [label="_manager.NotifyReady(this)", span="106-106", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_41 [label=OperationCanceledException, span="116-116", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_42 [label=Exception, span="119-119", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_37 [label="_jobIsReady.Wait(_cts.Token)", span="107-107", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_38 [label=_jobLock, span="109-109", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_39 [label="PerformJob(_jobPayload)", span="111-111", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_40 [label="_jobIsReady.Reset()", span="112-112", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_43 [label="Crashed = true", span="121-121", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_44 [label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="122-125", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_45 [label="Exit HangFire.Server.Worker.DoWork()", span="100-100", cluster="HangFire.Server.Worker.DoWork()", file="RecurringJobManagerFacts.cs"];
m6_79 [label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="RecurringJobManagerFacts.cs"];
m6_74 [label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_80 [label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86", cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="RecurringJobManagerFacts.cs"];
m6_8 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="RecurringJobManagerFacts.cs"];
m6_72 [label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10", cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="RecurringJobManagerFacts.cs"];
m6_71 [label="Entry Unk.Warn", span="", cluster="Unk.Warn", file="RecurringJobManagerFacts.cs"];
m6_70 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="RecurringJobManagerFacts.cs"];
m6_75 [label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="RecurringJobManagerFacts.cs"];
m6_51 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="RecurringJobManagerFacts.cs"];
m6_78 [label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12", cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="RecurringJobManagerFacts.cs"];
m6_13 [label="Entry HangFire.Server.Worker.SendStop()", span="52-52", cluster="HangFire.Server.Worker.SendStop()", file="RecurringJobManagerFacts.cs"];
m6_14 [label="_stopSent = true", span="54-54", cluster="HangFire.Server.Worker.SendStop()", file="RecurringJobManagerFacts.cs"];
m6_15 [label="_cts.Cancel()", span="55-55", cluster="HangFire.Server.Worker.SendStop()", file="RecurringJobManagerFacts.cs"];
m6_16 [label="Exit HangFire.Server.Worker.SendStop()", span="52-52", cluster="HangFire.Server.Worker.SendStop()", file="RecurringJobManagerFacts.cs"];
m6_73 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="RecurringJobManagerFacts.cs"];
m6_48 [label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="130-130", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_52 [label="String.IsNullOrEmpty(payload.Type)", span="132-132", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_53 [label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    payload.Id))", span="134-136", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_55 [label="!JobState.Apply(\r\n                _redis,\r\n                new ProcessingState(payload.Id, ''Worker has started processing.'', _context.ServerName),\r\n                EnqueuedState.Name)", span="141-144", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_59 [label="jobDescriptor = new ServerJobDescriptor(\r\n                    _redis, _context.Activator, payload)", span="159-160", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_64 [label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="171-173", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_66 [label="JobState.Apply(\r\n                    _redis,\r\n                    new SucceededState(payload.Id, ''The job has been completed successfully.''),\r\n                    ProcessingState.Name)", span="185-188", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m6_67 [label="JobState.Apply(\r\n                    _redis,\r\n                    new FailedState(payload.Id, ''The job has been failed.'', exception),\r\n                    ProcessingState.Name)", span="192-195", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m6_68 [label="JobFetcher.RemoveFromFetchedQueue(\r\n                _redis, payload.Id, payload.Queue)", span="203-204", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_54 [label="return;", span="138-138", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_56 [label="return;", span="146-146", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_57 [label="Exception exception = null", span="154-154", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_58 [label="ServerJobDescriptor jobDescriptor = null", span="156-156", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_60 [label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="162-163", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_61 [label="_context.Performer.PerformJob(performContext)", span="165-165", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", color=red, community=0, file="RecurringJobManagerFacts.cs"];
m6_62 [label=Exception, span="167-167", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_65 [label="exception == null", span="183-183", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_63 [label="exception = ex", span="169-169", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_69 [label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="130-130", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_24 [label="Entry HangFire.Server.Worker.Dispose()", span="86-86", cluster="HangFire.Server.Worker.Dispose()", file="RecurringJobManagerFacts.cs"];
m6_25 [label="!_stopSent", span="88-88", cluster="HangFire.Server.Worker.Dispose()", file="RecurringJobManagerFacts.cs"];
m6_26 [label="SendStop()", span="90-90", cluster="HangFire.Server.Worker.Dispose()", file="RecurringJobManagerFacts.cs"];
m6_27 [label="_thread.Join()", span="93-93", cluster="HangFire.Server.Worker.Dispose()", file="RecurringJobManagerFacts.cs"];
m6_28 [label="_cts.Dispose()", span="95-95", cluster="HangFire.Server.Worker.Dispose()", file="RecurringJobManagerFacts.cs"];
m6_29 [label="_jobIsReady.Dispose()", span="96-96", cluster="HangFire.Server.Worker.Dispose()", file="RecurringJobManagerFacts.cs"];
m6_30 [label="Exit HangFire.Server.Worker.Dispose()", span="86-86", cluster="HangFire.Server.Worker.Dispose()", file="RecurringJobManagerFacts.cs"];
m6_77 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="RecurringJobManagerFacts.cs"];
m6_33 [label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Dispose()", file="RecurringJobManagerFacts.cs"];
m6_18 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="76-76", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_19 [label=_jobLock, span="78-78", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_20 [label="_jobPayload = payload", span="80-80", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_21 [label="_jobIsReady.Set()", span="83-83", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_22 [label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="76-76", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="RecurringJobManagerFacts.cs"];
m6_81 [label="HangFire.Server.Worker", span="", file="RecurringJobManagerFacts.cs"];
m9_65 [label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76", cluster="HangFire.Web.RazorPage.Write(object)", file="SqlServerMonitoringApi.cs"];
m9_64 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33", cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="SqlServerMonitoringApi.cs"];
m9_57 [label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69", cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SqlServerMonitoringApi.cs"];
m9_59 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="SqlServerMonitoringApi.cs"];
m9_60 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54", cluster="HangFire.JobStorage.GetMonitoringApi()", file="SqlServerMonitoringApi.cs"];
m9_68 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="SqlServerMonitoringApi.cs"];
m9_0 [label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_16 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Enqueueing...''''>\r\n                <span class=''''glyphicon glyphicon-play''''></span>\r\n                Enqueue now\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="122-129", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m9_15 [label="Write(Request.LinkTo(''/scheduled/enqueue''))", span="117-117", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_17 [label="Write(Request.LinkTo(''/scheduled/delete''))", span="134-134", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_36 [label="!job.Value.InScheduledState", span="260-260", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m9_44 [label="WriteLiteral(''\''>\r\n                            '')", span="309-309", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m9_46 [label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d class=\''align-right\''>\r\n'')", span="319-320", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m9_47 [label="job.Value.ScheduledAt != null", span="325-325", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=green, community=0, file="SqlServerMonitoringApi.cs"];
m9_14 [label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="110-112", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_18 [label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", span="139-146", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_1 [label="WriteLiteral(''\r\n'')", span="51-51", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_11 [label="WriteLiteral(''\r\n'')", span="86-86", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_20 [label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Enqueue</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Scheduled</th>\r\n                </tr>\r\n            </thead>\r\n'')", span="156-171", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_22 [label="WriteLiteral(''                <tr class=\''js-jobs-list-row '')", span="182-182", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_24 [label="WriteLiteral('' '')", span="192-192", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_26 [label="WriteLiteral(''\''>\r\n                    <td>\r\n'')", span="202-202", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_28 [label="WriteLiteral(''                            <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' '' +\r\n''name=\''jobs[]\'' value=\'''')", span="213-214", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_30 [label="WriteLiteral(''\'' />\r\n'')", span="224-224", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_12 [label="pager.TotalPageCount == 0", span="91-91", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_9 [label="pager = new Pager(from, perPage, monitor.ScheduledCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/scheduled'')\r\n        }", span="74-77", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_23 [label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="187-187", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_25 [label="Write(job.Value.InScheduledState ? ''hover'' : null)", span="197-197", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_29 [label="Write(job.Key)", span="219-219", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_19 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="151-151", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_2 [label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_10 [label="scheduledJobs = monitor.ScheduledJobs(pager.FromRecord, pager.RecordsPerPage)", span="79-79", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_21 [label=scheduledJobs, span="176-176", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_27 [label="job.Value.InScheduledState", span="207-207", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_31 [label="WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <a href=\'''')", span="234-235", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_13 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        There are no scheduled jobs.\r\n    </d'' +\r\n''iv>\r\n'')", span="97-98", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_4 [label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_5 [label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_8 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="72-72", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_55 [label="Write(RenderPartial(new Paginator(pager)))", span="383-383", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_32 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="240-240", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_3 [label="int from, perPage", span="64-64", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_54 [label="WriteLiteral(''        </table>\r\n    </div>\r\n'')", span="371-371", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_6 [label="Pager pager", span="69-69", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_7 [label="JobList<ScheduledJobDto> scheduledJobs", span="70-70", cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SqlServerMonitoringApi.cs"];
m9_66 [label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SqlServerMonitoringApi.cs"];
m9_58 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SqlServerMonitoringApi.cs"];
m9_63 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="SqlServerMonitoringApi.cs"];
m9_62 [label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38", cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="SqlServerMonitoringApi.cs"];
m9_67 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SqlServerMonitoringApi.cs"];
m9_61 [label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29", cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SqlServerMonitoringApi.cs"];
m10_14 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", file="SqlServerObjectsInstaller.cs"];
m10_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Enqueued state''))", span="48-49", cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", file="SqlServerObjectsInstaller.cs"];
m10_16 [label="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", file="SqlServerObjectsInstaller.cs"];
m10_17 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.States.EnqueuedStateFeature.TestInitialize()", file="SqlServerObjectsInstaller.cs"];
m10_57 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", span="129-129", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="SqlServerObjectsInstaller.cs"];
m10_58 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying, it should enqueue the job to the given queue'', ((string[])(null)))", span="131-131", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="SqlServerObjectsInstaller.cs"];
m10_59 [label="this.ScenarioSetup(scenarioInfo)", span="133-133", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="SqlServerObjectsInstaller.cs"];
m10_60 [label="this.FeatureBackground()", span="135-135", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="SqlServerObjectsInstaller.cs"];
m10_61 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="137-137", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="SqlServerObjectsInstaller.cs"];
m10_62 [label="testRunner.Then(''the \'test\' queue contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="139-139", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="SqlServerObjectsInstaller.cs"];
m10_63 [label="testRunner.And(''the \'test\' queue was added to the queues set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="141-141", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="SqlServerObjectsInstaller.cs"];
m10_64 [label="this.ScenarioCleanup()", span="143-143", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="SqlServerObjectsInstaller.cs"];
m10_65 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", span="129-129", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterApplyingItShouldEnqueueTheJobToTheGivenQueue()", file="SqlServerObjectsInstaller.cs"];
m10_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="SqlServerObjectsInstaller.cs"];
m10_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="SqlServerObjectsInstaller.cs"];
m10_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="SqlServerObjectsInstaller.cs"];
m10_26 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", file="SqlServerObjectsInstaller.cs"];
m10_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", file="SqlServerObjectsInstaller.cs"];
m10_28 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioCleanup()", file="SqlServerObjectsInstaller.cs"];
m10_9 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", file="SqlServerObjectsInstaller.cs"];
m10_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", file="SqlServerObjectsInstaller.cs"];
m10_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", file="SqlServerObjectsInstaller.cs"];
m10_12 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureTearDown()", file="SqlServerObjectsInstaller.cs"];
m10_35 [label="Entry Unk.And", span="", cluster="Unk.And", file="SqlServerObjectsInstaller.cs"];
m10_67 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", span="150-150", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="SqlServerObjectsInstaller.cs"];
m10_68 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying, it should not remove the job from the queue'', ((string[])(null)))", span="152-152", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="SqlServerObjectsInstaller.cs"];
m10_69 [label="this.ScenarioSetup(scenarioInfo)", span="154-154", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="SqlServerObjectsInstaller.cs"];
m10_70 [label="this.FeatureBackground()", span="156-156", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="SqlServerObjectsInstaller.cs"];
m10_71 [label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="SqlServerObjectsInstaller.cs"];
m10_72 [label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="160-160", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="SqlServerObjectsInstaller.cs"];
m10_73 [label="testRunner.Then(''the \'test\' queue still contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="162-162", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="SqlServerObjectsInstaller.cs"];
m10_74 [label="this.ScenarioCleanup()", span="164-164", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="SqlServerObjectsInstaller.cs"];
m10_75 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", span="150-150", cluster="HangFire.Tests.States.EnqueuedStateFeature.AfterUnapplyingItShouldNotRemoveTheJobFromTheQueue()", file="SqlServerObjectsInstaller.cs"];
m10_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="SqlServerObjectsInstaller.cs"];
m10_36 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", span="85-85", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="SqlServerObjectsInstaller.cs"];
m10_37 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name is \'Enqueued\''', ((string[])(null)))", span="87-87", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="SqlServerObjectsInstaller.cs"];
m10_38 [label="this.ScenarioSetup(scenarioInfo)", span="89-89", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="SqlServerObjectsInstaller.cs"];
m10_39 [label="this.FeatureBackground()", span="91-91", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="SqlServerObjectsInstaller.cs"];
m10_40 [label="testRunner.Then(''the state name is equal to \'Enqueued\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="SqlServerObjectsInstaller.cs"];
m10_41 [label="this.ScenarioCleanup()", span="95-95", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="SqlServerObjectsInstaller.cs"];
m10_42 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", span="85-85", cluster="HangFire.Tests.States.EnqueuedStateFeature.StateNameIsEnqueued()", file="SqlServerObjectsInstaller.cs"];
m10_45 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m10_46 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It has the correct properties set'', ((string[])(null)))", span="104-104", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m10_47 [label="this.ScenarioSetup(scenarioInfo)", span="106-106", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m10_48 [label="this.FeatureBackground()", span="108-108", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m10_49 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m10_50 [label="table1.AddRow(new string[] {\r\n                        ''EnqueuedAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m10_51 [label="table1.AddRow(new string[] {\r\n                        ''Queue'',\r\n                        ''test''})", span="116-118", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m10_52 [label="testRunner.Then(''properties table contains the following items:'', ((string)(null)), table1, ''Then '')", span="120-120", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m10_53 [label="this.ScenarioCleanup()", span="122-122", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m10_54 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", span="102-102", cluster="HangFire.Tests.States.EnqueuedStateFeature.ItHasTheCorrectPropertiesSet()", file="SqlServerObjectsInstaller.cs"];
m10_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="SqlServerObjectsInstaller.cs"];
m10_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="SqlServerObjectsInstaller.cs"];
m10_66 [label="Entry Unk.When", span="", cluster="Unk.When", file="SqlServerObjectsInstaller.cs"];
m10_56 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="SqlServerObjectsInstaller.cs"];
m10_18 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", file="SqlServerObjectsInstaller.cs"];
m10_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", file="SqlServerObjectsInstaller.cs"];
m10_20 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioTearDown()", file="SqlServerObjectsInstaller.cs"];
m10_22 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerObjectsInstaller.cs"];
m10_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerObjectsInstaller.cs"];
m10_24 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.States.EnqueuedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SqlServerObjectsInstaller.cs"];
m10_43 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="SqlServerObjectsInstaller.cs"];
m10_44 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="SqlServerObjectsInstaller.cs"];
m10_34 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="SqlServerObjectsInstaller.cs"];
m10_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="SqlServerObjectsInstaller.cs"];
m10_55 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="SqlServerObjectsInstaller.cs"];
m10_30 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="SqlServerObjectsInstaller.cs"];
m10_31 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="SqlServerObjectsInstaller.cs"];
m10_32 [label="testRunner.And(''the Enqueued state with the \'test\' value for the \'queue\' argument'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="SqlServerObjectsInstaller.cs"];
m10_33 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", span="71-71", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureBackground()", file="SqlServerObjectsInstaller.cs"];
m10_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="SqlServerObjectsInstaller.cs"];
m10_0 [label="Entry HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerObjectsInstaller.cs"];
m10_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerObjectsInstaller.cs"];
m10_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Enqueued state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerObjectsInstaller.cs"];
m10_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerObjectsInstaller.cs"];
m10_4 [label="Exit HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.States.EnqueuedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SqlServerObjectsInstaller.cs"];
m10_76 [label="HangFire.Tests.States.EnqueuedStateFeature", span="", file="SqlServerObjectsInstaller.cs"];
m11_18 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerStorage.cs"];
m11_163 [label="Entry Metric.cstr", span="", cluster="Metric.cstr", file="SqlServerStorage.cs"];
m11_133 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", span="238-238", cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_134 [label="return isolationLevel != null\r\n                ? new TransactionScope(TransactionScopeOption.Required,\r\n                    new TransactionOptions { IsolationLevel = isolationLevel.Value, Timeout = _options.TransactionTimeout })\r\n                : new TransactionScope();", span="240-243", cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs", color=green, community=0];
m11_135 [label="Exit Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", span="238-238", cluster="Hangfire.SqlServer.SqlServerStorage.CreateTransaction(System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_26 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_27 [label="existingConnection == null", span="98-98", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_29 [label="_existingConnection = existingConnection", span="100-100", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_28 [label="throw new ArgumentNullException(''existingConnection'');", span="98-98", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_30 [label="_options = new SqlServerStorageOptions()", span="101-101", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_31 [label="InitializeQueueProviders()", span="103-103", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_32 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="SqlServerStorage.cs"];
m11_23 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_119 [label="_existingConnection != null", span="219-219", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_120 [label="return _existingConnection;", span="221-221", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_121 [label="var connection = new SqlConnection(_connectionString)", span="224-224", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_122 [label="connection.Open()", span="225-225", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_123 [label="return connection;", span="227-227", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_124 [label="Exit Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="217-217", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs"];
m11_145 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="SqlServerStorage.cs"];
m11_127 [label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerStorage.cs"];
m11_128 [label="connection != null && !ReferenceEquals(connection, _existingConnection)", span="232-232", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerStorage.cs"];
m11_129 [label="connection.Dispose()", span="234-234", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerStorage.cs"];
m11_130 [label="Exit Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="230-230", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="SqlServerStorage.cs"];
m11_142 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", span="31-31", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", file="SqlServerStorage.cs"];
m11_155 [label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="SqlServerStorage.cs"];
m11_76 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="SqlServerStorage.cs"];
m11_72 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="SqlServerStorage.cs"];
m11_42 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetComponents()", span="118-118", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m11_43 [label="yield return new ExpirationManager(this, _options.JobExpirationCheckInterval);", span="120-120", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m11_44 [label="yield return new CountersAggregator(this, _options.CountersAggregateInterval);", span="121-121", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m11_45 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetComponents()", span="118-118", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs"];
m11_33 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorage.cs"];
m11_22 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="SqlServerStorage.cs"];
m11_75 [label="Entry Unk.Append", span="", cluster="Unk.Append", file="SqlServerStorage.cs"];
m11_161 [label="Entry Unk.>", span="", cluster="Unk.>", file="SqlServerStorage.cs"];
m11_73 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="SqlServerStorage.cs"];
m11_103 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SqlServerStorage.cs"];
m11_38 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="113-113", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs"];
m11_39 [label="return new SqlServerConnection(this);", span="115-115", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs"];
m11_40 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="113-113", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs"];
m11_21 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerStorage.cs"];
m11_48 [label="Entry Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="124-124", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs"];
m11_49 [label="logger.Info(''Using the following options for SQL Server job storage:'')", span="126-126", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs"];
m11_50 [label="logger.InfoFormat(''    Queue poll interval: {0}.'', _options.QueuePollInterval)", span="127-127", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs"];
m11_51 [label="Exit Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="124-124", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="SqlServerStorage.cs"];
m11_126 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="SqlServerStorage.cs"];
m11_83 [label="Entry Unk.Trim", span="", cluster="Unk.Trim", file="SqlServerStorage.cs"];
m11_131 [label="Entry Unk.ReferenceEquals", span="", cluster="Unk.ReferenceEquals", file="SqlServerStorage.cs"];
m11_125 [label="Entry SqlConnection.cstr", span="", cluster="SqlConnection.cstr", file="SqlServerStorage.cs"];
m11_90 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerStorage.cs"];
m11_91 [label="UseConnection(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            })", span="175-179", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerStorage.cs"];
m11_92 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", span="173-173", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<SqlConnection>)", file="SqlServerStorage.cs"];
m11_20 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", span="257-257", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs"];
m11_146 [label="var connectionStringSetting = ConfigurationManager.ConnectionStrings[connectionStringName]", span="259-259", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs"];
m11_147 [label="return connectionStringSetting != null;", span="261-261", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs"];
m11_148 [label="Exit Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", span="257-257", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionStringInConfiguration(string)", file="SqlServerStorage.cs"];
m11_98 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="SqlServerStorage.cs"];
m11_104 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="197-197", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerStorage.cs"];
m11_105 [label="UseTransaction(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            }, null)", span="199-203", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerStorage.cs"];
m11_106 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", span="197-197", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<SqlConnection>)", file="SqlServerStorage.cs"];
m11_136 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="SqlServerStorage.cs"];
m11_0 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="40-40", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerStorage.cs"];
m11_1 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="40-40", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerStorage.cs"];
m11_164 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="SqlServerStorage.cs"];
m11_141 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="27-27", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_118 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="SqlServerStorage.cs"];
m11_24 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="35-35", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="SqlServerStorage.cs"];
m11_132 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="SqlServerStorage.cs"];
m11_37 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="SqlServerStorage.cs"];
m11_53 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="SqlServerStorage.cs"];
m11_70 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="SqlServerStorage.cs"];
m11_137 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="SqlServerStorage.cs"];
m11_46 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="50-50", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SqlServerStorage.cs"];
m11_171 [label="Entry lambda expression", span="294-305", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_77 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_80 [label="Entry lambda expression", span="138-138", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_84 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_87 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_78 [label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="137-137", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_79 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_81 [label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="138-138", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_82 [label="Exit lambda expression", span="138-138", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_85 [label="x.Key", span="139-139", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_86 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_88 [label="x.Value", span="139-139", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_89 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_95 [label="action(connection)", span="177-177", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_94 [label="Entry lambda expression", span="175-179", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_96 [label="return true;", span="178-178", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_97 [label="Exit lambda expression", span="175-179", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_109 [label="action(connection)", span="201-201", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_108 [label="Entry lambda expression", span="199-203", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_110 [label="return true;", span="202-202", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_111 [label="Exit lambda expression", span="199-203", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_149 [label="Entry lambda expression", span="267-284", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_150 [label="var sqlStorage = page.Storage as SqlServerStorage", span="269-269", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_151 [label="sqlStorage == null", span="270-270", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_153 [label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="272-283", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_152 [label="return new Metric(''???'');", span="270-270", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_154 [label="Exit lambda expression", span="267-284", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_156 [label="Entry lambda expression", span="272-283", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_157 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping'''", span="274-276", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_158 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="278-280", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_159 [label="return new Metric(value.ToString(''N0''));", span="282-282", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_160 [label="Exit lambda expression", span="272-283", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_165 [label="Entry lambda expression", span="289-306", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_166 [label="var sqlStorage = page.Storage as SqlServerStorage", span="291-291", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_167 [label="sqlStorage == null", span="292-292", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_169 [label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="294-305", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_168 [label="return new Metric(''???'');", span="292-292", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_170 [label="Exit lambda expression", span="289-306", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_172 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background'''", span="296-298", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_173 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="300-302", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_174 [label="return new Metric(value.ToString(''N0''));", span="304-304", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_175 [label="Exit lambda expression", span="294-305", cluster="lambda expression", file="SqlServerStorage.cs"];
m11_25 [label="Entry Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="246-246", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs"];
m11_138 [label="var defaultQueueProvider = new SqlServerJobQueueProvider(this, _options)", span="248-248", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs"];
m11_139 [label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="249-249", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs"];
m11_140 [label="Exit Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="246-246", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="SqlServerStorage.cs"];
m11_34 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="108-108", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs"];
m11_35 [label="return new SqlServerMonitoringApi(this, _options.DashboardJobListLimit);", span="110-110", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs"];
m11_36 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="108-108", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs"];
m11_71 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="SqlServerStorage.cs"];
m11_52 [label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202", cluster="Hangfire.Logging.ILog.Info(string)", file="SqlServerStorage.cs"];
m11_54 [label="Entry Hangfire.SqlServer.SqlServerStorage.ToString()", span="130-130", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_55 [label="string canNotParseMessage = ''<Connection string can not be parsed>''", span="132-132", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_56 [label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value, StringComparer.OrdinalIgnoreCase)", span="136-139", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_66 [label="return builder.Length != 0\r\n                    ? String.Format(''SQL Server: {0}'', builder)\r\n                    : canNotParseMessage;", span="163-165", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_68 [label="return canNotParseMessage;", span="169-169", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_57 [label="var builder = new StringBuilder()", span="141-141", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_59 [label="parts.ContainsKey(alias)", span="145-145", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_60 [label="builder.Append(parts[alias])", span="147-147", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_64 [label="parts.ContainsKey(alias)", span="156-156", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_65 [label="builder.Append(parts[alias])", span="158-158", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_58 [label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="143-143", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_61 [label="builder.Length != 0", span="152-152", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_62 [label="builder.Append(''@'')", span="152-152", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_63 [label="new[] { ''Database'', ''Initial Catalog'' }", span="154-154", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_67 [label=Exception, span="167-167", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_69 [label="Exit Hangfire.SqlServer.SqlServerStorage.ToString()", span="130-130", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="SqlServerStorage.cs"];
m11_47 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="34-34", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="SqlServerStorage.cs"];
m11_2 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="57-57", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_3 [label="nameOrConnectionString == null", span="59-59", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_5 [label="options == null", span="60-60", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_7 [label="_options = options", span="62-62", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_8 [label="IsConnectionString(nameOrConnectionString)", span="64-64", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_9 [label="_connectionString = nameOrConnectionString", span="66-66", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_10 [label="IsConnectionStringInConfiguration(nameOrConnectionString)", span="68-68", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_11 [label="_connectionString = ConfigurationManager.ConnectionStrings[nameOrConnectionString].ConnectionString", span="70-70", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_12 [label="throw new ArgumentException(\r\n                    string.Format(''Could not find connection string with name '{0}' in application config file'',\r\n                                  nameOrConnectionString));", span="74-76", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_13 [label="options.PrepareSchemaIfNecessary", span="79-79", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_4 [label="throw new ArgumentNullException(''nameOrConnectionString'');", span="59-59", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_6 [label="throw new ArgumentNullException(''options'');", span="60-60", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_14 [label="var connection = CreateAndOpenConnection()", span="81-81", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_16 [label="InitializeQueueProviders()", span="87-87", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_15 [label="SqlServerObjectsInstaller.Install(connection)", span="83-83", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", color=green, community=0, file="SqlServerStorage.cs"];
m11_17 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="57-57", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs"];
m11_41 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="SqlServerStorage.cs"];
m11_162 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SqlServerStorage.cs"];
m11_93 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="182-182", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs"];
m11_99 [label="SqlConnection connection = null", span="184-184", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs"];
m11_101 [label="return func(connection);", span="189-189", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs"];
m11_100 [label="connection = CreateAndOpenConnection()", span="188-188", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs"];
m11_102 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", span="182-182", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<SqlConnection, T>)", file="SqlServerStorage.cs"];
m11_19 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerStorage.cs"];
m11_143 [label="return nameOrConnectionString.Contains('';'');", span="254-254", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerStorage.cs"];
m11_144 [label="Exit Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", span="252-252", cluster="Hangfire.SqlServer.SqlServerStorage.IsConnectionString(string)", file="SqlServerStorage.cs"];
m11_107 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", span="206-206", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_112 [label="var transaction = CreateTransaction(isolationLevel ?? _options.TransactionIsolationLevel)", span="208-208", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_113 [label="var result = UseConnection(func)", span="210-210", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_114 [label="transaction.Complete()", span="211-211", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_115 [label="return result;", span="213-213", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_116 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", span="206-206", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<SqlConnection, T>, System.Transactions.IsolationLevel?)", file="SqlServerStorage.cs"];
m11_117 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="SqlServerStorage.cs"];
m11_74 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="SqlServerStorage.cs"];
m11_176 [label="Hangfire.SqlServer.SqlServerStorage", span="", file="SqlServerStorage.cs"];
m11_177 [label="System.Action<SqlConnection>", span="", file="SqlServerStorage.cs"];
m11_178 [label="System.Action<SqlConnection>", span="", file="SqlServerStorage.cs"];
m12_10 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="SqlServerStorageOptions.cs"];
m12_11 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="SqlServerStorageOptions.cs"];
m12_12 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="SqlServerStorageOptions.cs"];
m12_0 [label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m12_1 [label="TransactionIsolationLevel = null", span="27-27", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m12_2 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="28-28", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m12_3 [label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="29-29", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m12_4 [label="JobExpirationCheckInterval = TimeSpan.FromHours(1)", span="30-30", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m12_5 [label="CountersAggregateInterval = TimeSpan.FromMinutes(5)", span="31-31", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m12_6 [label="PrepareSchemaIfNecessary = true", span="32-32", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m12_7 [label="DashboardJobListLimit = 50000", span="33-33", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m12_8 [label="TransactionTimeout = TimeSpan.FromMinutes(1)", span="34-34", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m12_9 [label="Exit Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="25-25", cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="SqlServerStorageOptions.cs"];
m12_13 [label="Hangfire.SqlServer.SqlServerStorageOptions", span="", file="SqlServerStorageOptions.cs"];
m13_20 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="35-35", cluster="Hangfire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs"];
m13_21 [label="Entry Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="182-182", cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m13_22 [label="transaction.DecrementCounter(''stats:succeeded'')", span="184-184", cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m13_23 [label="Exit Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="182-182", cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m13_12 [label="serializedResult = ''Can not serialize the return value''", span="177-177", cluster="Hangfire.States.SucceededState.SerializeData()", file="SucceededState.cs", color=green, community=0];
m13_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="SucceededState.cs"];
m13_13 [label="serializedResult != null", span="180-180", cluster="Hangfire.States.SucceededState.SerializeData()", file="SucceededState.cs", color=green, community=0];
m13_14 [label="data.Add(''Result'', serializedResult)", span="182-182", cluster="Hangfire.States.SucceededState.SerializeData()", file="SucceededState.cs", color=green, community=0];
m13_24 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="37-37", cluster="Hangfire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="SucceededState.cs"];
m13_17 [label="Entry Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="177-177", cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m13_18 [label="transaction.IncrementCounter(''stats:succeeded'')", span="179-179", cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m13_19 [label="Exit Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="177-177", cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m13_0 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="SucceededState.cs"];
m13_1 [label="SucceededAt = DateTime.UtcNow", span="53-53", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="SucceededState.cs"];
m13_2 [label="Result = result", span="54-54", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="SucceededState.cs"];
m13_3 [label="Latency = latency", span="55-55", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="SucceededState.cs"];
m13_4 [label="PerformanceDuration = performanceDuration", span="56-56", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="SucceededState.cs"];
m13_5 [label="Exit Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="SucceededState.cs"];
m13_15 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SucceededState.cs"];
m13_6 [label="Entry Hangfire.States.SucceededState.SerializeData()", span="158-158", cluster="Hangfire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m13_7 [label="var data = new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.SerializeDateTime(SucceededAt) },\r\n                { ''PerformanceDuration'', PerformanceDuration.ToString(CultureInfo.InvariantCulture) },\r\n                { ''Latency'', Latency.ToString(CultureInfo.InvariantCulture) }\r\n            }", span="160-165", cluster="Hangfire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m13_8 [label="Result != null", span="167-167", cluster="Hangfire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m13_9 [label="string serializedResult", span="169-169", cluster="Hangfire.States.SucceededState.SerializeData()", color=green, community=0, file="SucceededState.cs"];
m13_10 [label="serializedResult = JobHelper.ToJson(Result)", span="173-173", cluster="Hangfire.States.SucceededState.SerializeData()", file="SucceededState.cs", color=green, community=0];
m13_11 [label="Exit Hangfire.States.SucceededState.SerializeData()", span="158-158", cluster="Hangfire.States.SucceededState.SerializeData()", color=green, community=0, file="SucceededState.cs"];
m13_25 [label="Hangfire.States.SucceededState", span="", file="SucceededState.cs"];
m14_0 [label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="SucceededStateFacts.cs"];
m14_1 [label="Queue = queue", span="6-6", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="SucceededStateFacts.cs"];
m14_2 [label="Exit HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4", cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="SucceededStateFacts.cs"];
m14_3 [label="HangFire.Web.Pages.FetchedJobsPage", span="", file="SucceededStateFacts.cs"];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_10  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_11  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_12  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_11  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [key=2, style=dotted];
m0_9 -> m0_0  [key=0, style=bold, color=blue];
m0_13 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_13 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_13 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_13 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_13 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_13 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_13 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m0_13 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_82  [key=2, style=dotted];
m1_157 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_91 -> m1_92  [key=0, style=solid];
m1_93 -> m1_23  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_93 -> m1_95  [key=2, style=dotted];
m1_94 -> m1_24  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_92  [key=0, style=bold, color=blue];
m1_95 -> m1_25  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_92 -> m1_93  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_26  [key=2, style=dotted];
m1_97 -> m1_91  [key=0, style=bold, color=blue];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_81  [key=2, style=dotted];
m1_97 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_82  [key=2, style=dotted];
m1_79 -> m1_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_10  [key=2, style=dotted];
m1_154 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_81  [key=2, style=dotted];
m1_155 -> m1_129  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_144  [key=2, style=dotted];
m1_156 -> m1_149  [key=0, style=bold, color=blue];
m1_158 -> m1_154  [key=0, style=bold, color=blue];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_169  [key=0, style=bold, color=blue];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_13  [key=2, style=dotted];
m1_172 -> m1_14  [key=2, style=dotted];
m1_172 -> m1_178  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_172 -> m1_224  [key=0, style=solid];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_81  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_144  [key=2, style=dotted];
m1_174 -> m1_25  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_177  [key=2, style=dotted];
m1_175 -> m1_173  [key=0, style=bold, color=blue];
m1_176 -> m1_171  [key=0, style=bold, color=blue];
m1_176 -> m1_177  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_42  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_24  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_81  [key=2, style=dotted];
m1_87 -> m1_25  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_91  [key=2, style=dotted];
m1_88 -> m1_26  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_82  [key=2, style=dotted];
m1_89 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_89 -> m1_80  [key=0, style=bold, color=blue];
m1_90 -> m1_86  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_18 -> m1_23  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_19 -> m1_24  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_25  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_26  [key=2, style=dotted];
m1_21 -> m1_23  [key=2, style=dotted];
m1_22 -> m1_16  [key=0, style=bold, color=blue];
m1_22 -> m1_20  [key=0, style=bold, color=blue];
m1_153 -> m1_24  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=performer];
m1_31 -> m1_181  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_181 -> m1_31  [key=0, style=bold, color=blue];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_11  [key=2, style=dotted];
m1_30 -> m1_242  [key=0, style=solid];
m1_30 -> m1_28  [key=0, style=bold, color=blue];
m1_242 -> m1_243  [key=0, style=solid];
m1_243 -> m1_30  [key=0, style=bold, color=blue];
m1_41 -> m1_39  [key=0, style=bold, color=blue];
m1_112 -> m1_104  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] argument"];
m1_112 -> m1_232  [key=0, style=solid];
m1_112 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_232 -> m1_233  [key=0, style=solid];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_235  [key=2, style=dotted];
m1_234 -> m1_112  [key=0, style=bold, color=blue];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_16  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_190 -> m1_191  [key=0, style=solid, color=green];
m1_191 -> m1_192  [key=0, style=solid, color=green];
m1_191 -> m1_23  [key=2, style=dotted, color=green];
m1_191 -> m1_196  [key=1, style=dashed, color=green, label="lambda expression"];
m1_192 -> m1_193  [key=0, style=solid, color=green];
m1_192 -> m1_121  [key=2, style=dotted, color=green];
m1_192 -> m1_10  [key=2, style=dotted, color=green];
m1_192 -> m1_200  [key=1, style=dashed, color=green, label="lambda expression"];
m1_193 -> m1_194  [key=0, style=solid, color=green];
m1_193 -> m1_24  [key=2, style=dotted, color=green];
m1_193 -> m1_205  [key=1, style=dashed, color=green, label=performer];
m1_194 -> m1_195  [key=0, style=solid, color=green];
m1_194 -> m1_10  [key=2, style=dotted, color=green];
m1_194 -> m1_204  [key=1, style=dashed, color=green, label="lambda expression"];
m1_195 -> m1_190  [key=0, style=bold, color=blue];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_36  [key=2, style=dotted];
m1_98 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_37  [key=2, style=dotted];
m1_99 -> m1_101  [key=2, style=dotted];
m1_100 -> m1_96  [key=0, style=bold, color=blue];
m1_100 -> m1_98  [key=0, style=bold, color=blue];
m1_101 -> m1_239  [key=0, style=solid];
m1_101 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m1_101 -> m1_102  [key=0, style=solid];
m1_239 -> m1_240  [key=0, style=solid];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_11  [key=2, style=dotted];
m1_241 -> m1_101  [key=0, style=bold, color=blue];
m1_24 -> m1_251  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_251 -> m1_252  [key=0, style=solid];
m1_251 -> m1_253  [key=2, style=dotted];
m1_252 -> m1_24  [key=0, style=bold, color=blue];
m1_38 -> m1_39  [key=0, style=solid];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_81  [key=2, style=dotted];
m1_64 -> m1_56  [key=3, color=darkorchid, style=bold, label="Parameter variable int intArg"];
m1_64 -> m1_244  [key=0, style=solid];
m1_64 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_64 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_163 -> m1_164  [key=0, style=solid];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_81  [key=2, style=dotted];
m1_164 -> m1_38  [key=2, style=dotted];
m1_164 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_144  [key=2, style=dotted];
m1_165 -> m1_24  [key=2, style=dotted];
m1_165 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label=performer];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_82  [key=2, style=dotted];
m1_166 -> m1_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_166 -> m1_10  [key=2, style=dotted];
m1_166 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_167 -> m1_163  [key=0, style=bold, color=blue];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_26  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_79  [key=2, style=dotted];
m1_72 -> m1_24  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_60  [key=2, style=dotted];
m1_72 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_73 -> m1_25  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_71  [key=0, style=bold, color=blue];
m1_68 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_77  [key=2, style=dotted];
m1_69 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label=type];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_41  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_78  [key=2, style=dotted];
m1_70 -> m1_68  [key=0, style=bold, color=blue];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_26  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_76  [key=2, style=dotted];
m1_67 -> m1_65  [key=0, style=bold, color=blue];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_60  [key=2, style=dotted];
m1_66 -> m1_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_75 -> m1_65  [key=0, style=bold, color=blue];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_41  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_115 -> m1_121  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_122  [key=2, style=dotted];
m1_115 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_115 -> m1_27  [key=2, style=dotted];
m1_116 -> m1_23  [key=2, style=dotted];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_116 -> m1_82  [key=2, style=dotted];
m1_116 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_117 -> m1_24  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=performer];
m1_117 -> m1_113  [key=0, style=bold, color=blue];
m1_118 -> m1_10  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_120  [key=2, style=dotted];
m1_114 -> m1_81  [key=2, style=dotted];
m1_119 -> m1_113  [key=0, style=bold, color=blue];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_36  [key=2, style=dotted];
m1_119 -> m1_121  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_36  [key=2, style=dotted];
m1_43 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_38  [key=2, style=dotted];
m1_45 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_45 -> m1_42  [key=0, style=bold, color=blue];
m1_46 -> m1_24  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_47 -> m1_25  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_41  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_37  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_26  [key=2, style=dotted];
m1_48 -> m1_46  [key=0, style=bold, color=blue];
m1_49 -> m1_43  [key=0, style=bold, color=blue];
m1_49 -> m1_50  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=2, style=dotted];
m1_26 -> m1_24  [key=0, style=bold, color=blue];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=2, style=dotted];
m1_29 -> m1_27  [key=0, style=bold, color=blue];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=2, style=dotted];
m1_40 -> m1_38  [key=0, style=bold, color=blue];
m1_40 -> m1_42  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_219  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_41  [key=2, style=dotted];
m1_55 -> m1_53  [key=0, style=bold, color=blue];
m1_55 -> m1_56  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_64  [key=2, style=dotted];
m1_63 -> m1_61  [key=0, style=bold, color=blue];
m1_76 -> m1_74  [key=0, style=bold, color=blue];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=type];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_23  [key=2, style=dotted];
m1_84 -> m1_78  [key=2, style=dotted];
m1_85 -> m1_83  [key=0, style=bold, color=blue];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_79  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_27  [key=2, style=dotted];
m1_103 -> m1_101  [key=0, style=bold, color=blue];
m1_103 -> m1_104  [key=0, style=solid];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_112  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_111 -> m1_109  [key=0, style=bold, color=blue];
m1_120 -> m1_118  [key=0, style=bold, color=blue];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_27  [key=2, style=dotted];
m1_134 -> m1_121  [key=2, style=dotted];
m1_134 -> m1_139  [key=2, style=dotted];
m1_134 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_130 -> m1_131  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_36  [key=2, style=dotted];
m1_131 -> m1_121  [key=2, style=dotted];
m1_131 -> m1_25  [key=2, style=dotted];
m1_132 -> m1_130  [key=0, style=bold, color=blue];
m1_135 -> m1_133  [key=0, style=bold, color=blue];
m1_135 -> m1_23  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_144  [key=2, style=dotted];
m1_142 -> m1_140  [key=0, style=bold, color=blue];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_10  [key=2, style=dotted];
m1_141 -> m1_126  [key=2, style=dotted];
m1_143 -> m1_141  [key=0, style=bold, color=blue];
m1_143 -> m1_144  [key=0, style=solid];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_153  [key=2, style=dotted];
m1_151 -> m1_78  [key=2, style=dotted];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_152  [key=1, style=dashed, color=darkseagreen4, label=type];
m1_152 -> m1_150  [key=0, style=bold, color=blue];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_157  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_162  [key=2, style=dotted];
m1_160 -> m1_25  [key=2, style=dotted];
m1_161 -> m1_159  [key=0, style=bold, color=blue];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_162  [key=0, style=bold, color=blue];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_162  [key=2, style=dotted];
m1_170 -> m1_168  [key=0, style=bold, color=blue];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_172  [key=2, style=dotted];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_24  [key=2, style=dotted];
m1_178 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label=performer];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_162  [key=2, style=dotted];
m1_179 -> m1_10  [key=2, style=dotted];
m1_179 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_179 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label=thrownException];
m1_180 -> m1_178  [key=0, style=bold, color=blue];
m1_180 -> m1_10  [key=2, style=dotted];
m1_180 -> m1_181  [key=0, style=solid];
m1_196 -> m1_197  [key=0, style=solid, color=green];
m1_200 -> m1_201  [key=0, style=solid, color=green];
m1_205 -> m1_206  [key=0, style=solid, color=green];
m1_205 -> m1_25  [key=2, style=dotted, color=green];
m1_204 -> m1_205  [key=0, style=solid, color=green];
m1_206 -> m1_204  [key=0, style=bold, color=blue];
m1_197 -> m1_198  [key=0, style=solid, color=green];
m1_197 -> m1_199  [key=2, style=dotted, color=green];
m1_198 -> m1_196  [key=0, style=bold, color=blue];
m1_201 -> m1_202  [key=0, style=solid, color=green];
m1_201 -> m1_203  [key=2, style=dotted, color=green];
m1_202 -> m1_200  [key=0, style=bold, color=blue];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_42  [key=2, style=dotted];
m1_128 -> m1_122  [key=0, style=bold, color=blue];
m1_147 -> m1_25  [key=2, style=dotted];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_36  [key=2, style=dotted];
m1_147 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_188 -> m1_25  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_124 -> m1_10  [key=2, style=dotted];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_126  [key=2, style=dotted];
m1_124 -> m1_13  [key=2, style=dotted];
m1_124 -> m1_36  [key=2, style=dotted];
m1_124 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_27 -> m1_28  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_36  [key=2, style=dotted];
m1_50 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_81  [key=2, style=dotted];
m1_123 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_123 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_36  [key=2, style=dotted];
m1_129 -> m1_127  [key=0, style=bold, color=blue];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_136  [key=0, style=bold, color=blue];
m1_145 -> m1_143  [key=0, style=bold, color=blue];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_81  [key=2, style=dotted];
m1_146 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_148 -> m1_146  [key=0, style=bold, color=blue];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_37  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_81  [key=0, style=bold, color=blue];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_189 -> m1_187  [key=0, style=bold, color=blue];
m1_189 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_213 -> m1_214  [key=0, style=solid];
m1_125 -> m1_123  [key=0, style=bold, color=blue];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_36  [key=2, style=dotted];
m1_125 -> m1_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_125 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label=exception];
m1_52 -> m1_50  [key=0, style=bold, color=blue];
m1_52 -> m1_49  [key=0, style=bold, color=blue];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_53  [key=2, style=dotted];
m1_51 -> m1_37  [key=2, style=dotted];
m1_185 -> m1_183  [key=0, style=bold, color=blue];
m1_185 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_186  [key=2, style=dotted];
m1_184 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_89  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_184 -> m1_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.BackgroundJobClientFacts"];
m1_215 -> m1_213  [key=0, style=bold, color=blue];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_216  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=2, style=dotted];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_15  [key=2, style=dotted];
m1_4 -> m1_19  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_217  [key=0, style=solid];
m1_177 -> m1_23  [key=2, style=dotted];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_182 -> m1_176  [key=0, style=bold, color=blue];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_41  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_37  [key=2, style=dotted];
m1_199 -> m1_236  [key=0, style=solid];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_238  [key=2, style=dotted];
m1_237 -> m1_199  [key=0, style=bold, color=blue];
m1_217 -> m1_218  [key=0, style=solid];
m1_218 -> m1_42  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_11  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_12  [key=2, style=dotted];
m1_2 -> m1_5  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_13  [key=2, style=dotted];
m1_3 -> m1_14  [key=2, style=dotted];
m1_3 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_13  [key=2, style=dotted];
m1_6 -> m1_14  [key=2, style=dotted];
m1_6 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_17  [key=2, style=dotted];
m1_7 -> m1_10  [key=2, style=dotted];
m1_7 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_18  [key=2, style=dotted];
m1_8 -> m1_11  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_19  [key=2, style=dotted];
m1_9 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_9 -> m1_6  [key=0, style=bold, color=blue];
m1_10 -> m1_0  [key=0, style=bold, color=blue];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_23  [key=2, style=dotted];
m1_56 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_12  [key=2, style=dotted];
m1_57 -> m1_24  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=2, style=dotted];
m1_58 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_58 -> m1_25  [key=2, style=dotted];
m1_59 -> m1_56  [key=0, style=bold, color=blue];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_26  [key=2, style=dotted];
m1_219 -> m1_220  [key=0, style=solid];
m1_220 -> m1_53  [key=0, style=bold, color=blue];
m1_37 -> m1_31  [key=0, style=bold, color=blue];
m1_77 -> m1_78  [key=0, style=solid];
m1_80 -> m1_77  [key=0, style=bold, color=blue];
m1_80 -> m1_81  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_129  [key=2, style=dotted];
m1_149 -> m1_145  [key=0, style=bold, color=blue];
m1_149 -> m1_150  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_23  [key=2, style=dotted];
m1_104 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_81  [key=2, style=dotted];
m1_105 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_105 -> m1_24  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_36  [key=2, style=dotted];
m1_106 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_106 -> m1_25  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_37  [key=2, style=dotted];
m1_107 -> m1_26  [key=2, style=dotted];
m1_108 -> m1_104  [key=0, style=bold, color=blue];
m1_108 -> m1_102  [key=0, style=bold, color=blue];
m1_244 -> m1_245  [key=0, style=solid];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_11  [key=2, style=dotted];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_11  [key=2, style=dotted];
m1_247 -> m1_64  [key=0, style=bold, color=blue];
m1_162 -> m1_163  [key=0, style=solid];
m1_136 -> m1_24  [key=2, style=dotted];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=performer];
m1_137 -> m1_10  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_137 -> m1_81  [key=2, style=dotted];
m1_137 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_138 -> m1_133  [key=0, style=bold, color=blue];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_36  [key=2, style=dotted];
m1_138 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_82 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=convertedDate];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_90  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_182  [key=0, style=solid];
m1_224 -> m1_225  [key=0, style=solid];
m1_225 -> m1_172  [key=0, style=bold, color=blue];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_38  [key=2, style=dotted];
m1_33 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_33 -> m1_36  [key=2, style=dotted];
m1_34 -> m1_24  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_37  [key=2, style=dotted];
m1_35 -> m1_25  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_32  [key=0, style=bold, color=blue];
m1_32 -> m1_33  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_26  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_227 -> m1_120  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_228 -> m1_226  [key=0, style=bold, color=blue];
m1_60 -> m1_54  [key=0, style=bold, color=blue];
m1_207 -> m1_208  [key=0, style=solid];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_38  [key=2, style=dotted];
m1_208 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_209 -> m1_24  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_210 -> m1_25  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_11  [key=2, style=dotted];
m1_212 -> m1_207  [key=0, style=bold, color=blue];
m1_186 -> m1_248  [key=0, style=solid];
m1_186 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=client];
m1_248 -> m1_249  [key=0, style=solid];
m1_248 -> m1_250  [key=2, style=dotted];
m1_249 -> m1_186  [key=0, style=bold, color=blue];
m1_254 -> m1_191  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_192  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_193  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_194  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_205  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_144  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_152  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_153  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_166  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_178  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_179  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_209  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_254 -> m1_251  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Server.CoreBackgroundJobPerformerFacts"];
m1_260 -> m1_205  [key=1, style=dashed, color=green, label=performer];
m1_255 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label=performer];
m1_256 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label=performer];
m1_257 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=performer];
m1_258 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label=performer];
m1_259 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label=performer];
m2_24 -> m2_31  [key=0, style=solid, color=red];
m2_31 -> m2_32  [key=0, style=solid, color=red];
m2_32 -> m2_24  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m2_0 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_2 -> m2_5  [key=0, style=solid];
m2_2 -> m2_6  [key=2, style=dotted];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_7 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_17  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_19  [key=2, style=dotted];
m2_12 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_19  [key=2, style=dotted];
m2_15 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_9 -> m2_10  [key=0, style=solid, color=red];
m2_9 -> m2_9  [key=3, color=darkorchid, style=bold, label="Local variable int removedCount"];
m2_10 -> m2_11  [key=0, style=solid, color=red];
m2_10 -> m2_18  [key=2, style=dotted, color=red];
m2_10 -> m2_21  [key=1, style=dashed, color=red, label="lambda expression"];
m2_10 -> m2_14  [key=1, style=dashed, color=red, label=removedCount];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_14  [key=0, style=solid];
m2_14 -> m2_9  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_20  [key=2, style=dotted];
m2_13 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_13 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m2_16 -> m2_7  [key=0, style=bold, color=blue];
m2_26 -> m2_27  [key=0, style=solid];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=2, style=dotted];
m2_27 -> m2_30  [key=2, style=dotted];
m2_28 -> m2_26  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid, color=red];
m2_22 -> m2_23  [key=0, style=solid, color=red];
m2_22 -> m2_24  [key=2, style=dotted, color=red];
m2_22 -> m2_25  [key=2, style=dotted, color=red];
m2_23 -> m2_21  [key=0, style=bold, color=blue];
m2_33 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m2_33 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m2_33 -> m2_10  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.CountersAggregator"];
m2_33 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m2_33 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.CountersAggregator"];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m3_0 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m3_0 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m3_0 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m3_0 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.JobState"];
m3_0 -> m3_0  [key=3, color=darkorchid, style=bold, label="method methodReturn HangFire.States.JobState OnStateChanged"];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=0, style=solid];
m3_6 -> m3_12  [key=0, style=solid];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_14  [key=2, style=dotted];
m3_7 -> m3_15  [key=2, style=dotted];
m3_7 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m3_7 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label=retryCount];
m3_10 -> m3_12  [key=0, style=solid];
m3_10 -> m3_18  [key=2, style=dotted];
m3_10 -> m3_19  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_2 -> m3_12  [key=0, style=solid];
m3_2 -> m3_13  [key=2, style=dotted];
m3_4 -> m3_12  [key=0, style=solid];
m3_4 -> m3_13  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_11  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_16  [key=2, style=dotted];
m3_9 -> m3_17  [key=2, style=dotted];
m3_12 -> m3_0  [key=0, style=bold, color=blue];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=1, style=dashed, color=darkseagreen4, label=long];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_24  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_25  [key=2, style=dotted];
m3_22 -> m3_26  [key=2, style=dotted];
m3_22 -> m3_27  [key=2, style=dotted];
m3_23 -> m3_20  [key=0, style=bold, color=blue];
m3_28 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.RetryJobsFilter"];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_38  [key=2, style=dotted];
m4_36 -> m4_39  [key=2, style=dotted];
m4_37 -> m4_35  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m4_2 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_6 -> m4_7  [key=0, style=solid];
m4_4 -> m4_7  [key=0, style=solid];
m4_4 -> m4_8  [key=2, style=dotted];
m4_7 -> m4_2  [key=0, style=bold, color=blue];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=1, style=dashed, color=green, label=SqlConnection];
m4_27 -> m4_13  [key=1, style=dashed, color=green, label=SqlConnection];
m4_29 -> m4_30  [key=0, style=solid, color=green];
m4_29 -> m4_32  [key=2, style=dotted, color=green];
m4_29 -> m4_33  [key=2, style=dotted, color=green];
m4_28 -> m4_29  [key=0, style=solid, color=green];
m4_28 -> m4_31  [key=2, style=dotted];
m4_30 -> m4_27  [key=0, style=bold, color=blue];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_9 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_19  [key=0, style=solid];
m4_10 -> m4_13  [key=1, style=dashed, color=green, label=table];
m4_10 -> m4_29  [key=1, style=dashed, color=green, label=table];
m4_10 -> m4_15  [key=1, style=dashed, color=darkseagreen4, label=table];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_25  [key=2, style=dotted];
m4_16 -> m4_16  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_25  [key=2, style=dotted];
m4_19 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_21  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid, color=green];
m4_13 -> m4_22  [key=2, style=dotted, color=green];
m4_13 -> m4_34  [key=2, style=dotted, color=green];
m4_13 -> m4_27  [key=1, style=dashed, color=green, label="lambda expression"];
m4_13 -> m4_15  [key=1, style=dashed, color=green, label=removedCount];
m4_13 -> m4_18  [key=1, style=dashed, color=green, label=removedCount];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_23  [key=2, style=dotted];
m4_15 -> m4_24  [key=2, style=dotted];
m4_12 -> m4_13  [key=0, style=solid, color=green];
m4_12 -> m4_12  [key=3, color=darkorchid, style=bold, label="Local variable int removedCount"];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_18  [key=0, style=solid];
m4_18 -> m4_12  [key=0, style=solid];
m4_18 -> m4_10  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_26  [key=2, style=dotted];
m4_17 -> m4_17  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_17 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m4_20 -> m4_9  [key=0, style=bold, color=blue];
m4_40 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m4_40 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m4_40 -> m4_13  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.ExpirationManager"];
m4_40 -> m4_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m4_40 -> m4_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.ExpirationManager"];
m4_41 -> m4_29  [key=1, style=dashed, color=green, label=table];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_19 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_19 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m5_19 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_19 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m5_19 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_19 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="System.TimeZoneInfo"];
m5_19 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_19 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_19 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_42  [key=2, style=dotted];
m5_29 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label=connection];
m5_21 -> m5_12  [key=2, style=dotted];
m5_21 -> m5_40  [key=0, style=solid];
m5_23 -> m5_12  [key=2, style=dotted];
m5_23 -> m5_40  [key=0, style=solid];
m5_25 -> m5_12  [key=2, style=dotted];
m5_25 -> m5_40  [key=0, style=solid];
m5_27 -> m5_12  [key=2, style=dotted];
m5_27 -> m5_40  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_41  [key=2, style=dotted];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_43  [key=2, style=dotted];
m5_30 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m5_30 -> m5_33  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m5_30 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m5_30 -> m5_35  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m5_30 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=recurringJob];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_46  [key=2, style=dotted];
m5_36 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_36 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_22  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_26  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_28  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_44  [key=2, style=dotted];
m5_33 -> m5_34  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_37 -> m5_47  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_48  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_49  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_45  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_50  [key=2, style=dotted];
m5_40 -> m5_19  [key=0, style=bold, color=blue];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_62 -> m5_63  [key=0, style=solid, color=green];
m5_62 -> m5_69  [key=2, style=dotted, color=green];
m5_62 -> m5_70  [key=2, style=dotted, color=green];
m5_54 -> m5_62  [key=1, style=dashed, color=green, label=connection];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_42  [key=2, style=dotted];
m5_58 -> m5_62  [key=1, style=dashed, color=green, label=job];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_65  [key=2, style=dotted];
m5_58 -> m5_66  [key=2, style=dotted];
m5_60 -> m5_62  [key=0, style=solid, color=green];
m5_60 -> m5_61  [key=0, style=solid];
m5_60 -> m5_68  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid, color=green];
m5_59 -> m5_62  [key=1, style=dashed, color=green, label=state];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=state];
m5_59 -> m5_67  [key=2, style=dotted];
m5_53 -> m5_12  [key=2, style=dotted];
m5_53 -> m5_63  [key=0, style=solid];
m5_52 -> m5_54  [key=0, style=solid];
m5_52 -> m5_53  [key=0, style=solid];
m5_55 -> m5_58  [key=1, style=dashed, color=darkseagreen4, label=hash];
m5_55 -> m5_60  [key=1, style=dashed, color=darkseagreen4, label=hash];
m5_55 -> m5_61  [key=1, style=dashed, color=darkseagreen4, label=hash];
m5_55 -> m5_56  [key=0, style=solid];
m5_55 -> m5_47  [key=2, style=dotted];
m5_55 -> m5_64  [key=2, style=dotted];
m5_56 -> m5_58  [key=0, style=solid];
m5_56 -> m5_57  [key=0, style=solid];
m5_57 -> m5_63  [key=0, style=solid];
m5_63 -> m5_51  [key=0, style=bold, color=blue];
m5_71 -> m5_72  [key=0, style=solid];
m5_71 -> m5_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_71 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_42  [key=2, style=dotted];
m5_73 -> m5_12  [key=2, style=dotted];
m5_73 -> m5_79  [key=0, style=solid];
m5_72 -> m5_74  [key=0, style=solid];
m5_72 -> m5_73  [key=0, style=solid];
m5_75 -> m5_76  [key=0, style=solid];
m5_75 -> m5_46  [key=2, style=dotted];
m5_75 -> m5_77  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_75 -> m5_78  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m5_76 -> m5_47  [key=2, style=dotted];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_80  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_81  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_50  [key=2, style=dotted];
m5_79 -> m5_71  [key=0, style=bold, color=blue];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=2, style=dotted];
m5_15 -> m5_13  [key=0, style=bold, color=blue];
m5_16 -> m5_17  [key=0, style=solid];
m5_17 -> m5_18  [key=0, style=solid];
m5_17 -> m5_19  [key=2, style=dotted];
m5_18 -> m5_16  [key=0, style=bold, color=blue];
m5_41 -> m5_82  [key=0, style=solid];
m5_82 -> m5_83  [key=0, style=solid];
m5_82 -> m5_87  [key=2, style=dotted];
m5_83 -> m5_86  [key=0, style=solid];
m5_83 -> m5_84  [key=0, style=solid];
m5_83 -> m5_88  [key=2, style=dotted];
m5_85 -> m5_86  [key=0, style=solid];
m5_85 -> m5_89  [key=2, style=dotted];
m5_84 -> m5_85  [key=0, style=solid];
m5_86 -> m5_41  [key=0, style=bold, color=blue];
m5_4 -> m5_7  [key=1, style=dashed, color=green, label="Hangfire.Client.IBackgroundJobFactory"];
m5_4 -> m5_10  [key=1, style=dashed, color=green, label="Hangfire.Client.IBackgroundJobFactory"];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m5_7 -> m5_8  [key=0, style=solid, color=green];
m5_7 -> m5_9  [key=0, style=solid, color=green];
m5_5 -> m5_7  [key=0, style=solid, color=green];
m5_5 -> m5_6  [key=0, style=solid];
m5_8 -> m5_11  [key=0, style=solid, color=green];
m5_8 -> m5_12  [key=2, style=dotted, color=green];
m5_9 -> m5_10  [key=0, style=solid, color=green];
m5_10 -> m5_11  [key=0, style=solid, color=green];
m5_6 -> m5_11  [key=0, style=solid];
m5_6 -> m5_12  [key=2, style=dotted];
m5_11 -> m5_4  [key=0, style=bold, color=blue];
m5_64 -> m5_42  [key=3, color=darkorchid, style=bold, label="Parameter variable string recurringJobId"];
m5_90 -> m5_10  [key=1, style=dashed, color=green, label="Hangfire.RecurringJobManager"];
m5_90 -> m5_62  [key=1, style=dashed, color=green, label="Hangfire.RecurringJobManager"];
m5_90 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m5_90 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m5_90 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m5_90 -> m5_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m5_90 -> m5_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m5_90 -> m5_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.RecurringJobManager"];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_2  [key=1, style=dashed, color=red, label="HangFire.Server.JobManager"];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m6_1 -> m6_2  [key=0, style=solid, color=red];
m6_1 -> m6_8  [key=2, style=dotted];
m6_2 -> m6_3  [key=0, style=solid, color=red];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid, color=red];
m6_4 -> m6_9  [key=2, style=dotted];
m6_4 -> m6_10  [key=2, style=dotted];
m6_5 -> m6_6  [key=0, style=solid, color=red];
m6_5 -> m6_11  [key=2, style=dotted, color=red];
m6_5 -> m6_9  [key=2, style=dotted, color=red];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_12  [key=2, style=dotted];
m6_7 -> m6_0  [key=0, style=bold, color=blue];
m6_34 -> m6_35  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_41  [key=0, style=solid];
m6_35 -> m6_42  [key=0, style=solid];
m6_35 -> m6_45  [key=0, style=solid];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_46  [key=2, style=dotted];
m6_41 -> m6_45  [key=0, style=solid];
m6_42 -> m6_43  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_47  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_48  [key=2, style=dotted];
m6_40 -> m6_35  [key=0, style=solid];
m6_40 -> m6_49  [key=2, style=dotted];
m6_43 -> m6_44  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_50  [key=2, style=dotted];
m6_44 -> m6_51  [key=2, style=dotted];
m6_45 -> m6_34  [key=0, style=bold, color=blue];
m6_13 -> m6_14  [key=0, style=solid];
m6_14 -> m6_15  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [key=2, style=dotted];
m6_16 -> m6_13  [key=0, style=bold, color=blue];
m6_48 -> m6_52  [key=0, style=solid];
m6_48 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_48 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_48 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_48 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_48 -> m6_66  [key=1, style=dashed, color=red, label="HangFire.Server.JobPayload"];
m6_48 -> m6_67  [key=1, style=dashed, color=red, label="HangFire.Server.JobPayload"];
m6_48 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_55  [key=0, style=solid];
m6_52 -> m6_70  [key=2, style=dotted];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_9  [key=2, style=dotted];
m6_53 -> m6_71  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_57  [key=0, style=solid];
m6_55 -> m6_72  [key=2, style=dotted];
m6_55 -> m6_73  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_74  [key=2, style=dotted];
m6_64 -> m6_65  [key=0, style=solid];
m6_64 -> m6_9  [key=2, style=dotted];
m6_64 -> m6_77  [key=2, style=dotted];
m6_66 -> m6_68  [key=0, style=solid, color=red];
m6_66 -> m6_78  [key=2, style=dotted, color=red];
m6_66 -> m6_73  [key=2, style=dotted, color=red];
m6_67 -> m6_68  [key=0, style=solid, color=red];
m6_67 -> m6_79  [key=2, style=dotted, color=red];
m6_67 -> m6_73  [key=2, style=dotted, color=red];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_80  [key=2, style=dotted];
m6_54 -> m6_69  [key=0, style=solid];
m6_56 -> m6_69  [key=0, style=solid];
m6_57 -> m6_58  [key=0, style=solid];
m6_58 -> m6_59  [key=0, style=solid];
m6_60 -> m6_61  [key=0, style=solid, color=red];
m6_60 -> m6_75  [key=2, style=dotted];
m6_61 -> m6_62  [key=0, style=solid, color=red];
m6_61 -> m6_65  [key=0, style=solid, color=red];
m6_61 -> m6_76  [key=2, style=dotted, color=red];
m6_62 -> m6_63  [key=0, style=solid];
m6_65 -> m6_66  [key=0, style=solid, color=red];
m6_65 -> m6_67  [key=0, style=solid, color=red];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_65  [key=1, style=dashed, color=darkseagreen4, label=exception];
m6_63 -> m6_67  [key=1, style=dashed, color=red, label=exception];
m6_69 -> m6_48  [key=0, style=bold, color=blue];
m6_24 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_13  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_31  [key=2, style=dotted];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_32  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_33  [key=2, style=dotted];
m6_30 -> m6_24  [key=0, style=bold, color=blue];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m6_19 -> m6_20  [key=0, style=solid];
m6_20 -> m6_21  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_23  [key=2, style=dotted];
m6_22 -> m6_18  [key=0, style=bold, color=blue];
m6_81 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_2  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m6_81 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_5  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m6_81 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_61  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m6_81 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m6_81 -> m6_66  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m6_81 -> m6_67  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m6_81 -> m6_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_0 -> m9_1  [key=0, style=solid];
m9_16 -> m9_17  [key=0, style=solid, color=green];
m9_16 -> m9_57  [key=2, style=dotted, color=green];
m9_15 -> m9_16  [key=0, style=solid, color=green];
m9_15 -> m9_63  [key=2, style=dotted];
m9_15 -> m9_65  [key=2, style=dotted];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_63  [key=2, style=dotted];
m9_17 -> m9_65  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_57  [key=2, style=dotted];
m9_18 -> m9_57  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_1 -> m9_57  [key=2, style=dotted];
m9_1 -> m9_2  [key=0, style=solid];
m9_11 -> m9_57  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_20 -> m9_57  [key=2, style=dotted];
m9_20 -> m9_21  [key=0, style=solid];
m9_22 -> m9_57  [key=2, style=dotted];
m9_22 -> m9_23  [key=0, style=solid];
m9_24 -> m9_57  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_26 -> m9_57  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_28 -> m9_57  [key=2, style=dotted];
m9_28 -> m9_29  [key=0, style=solid];
m9_30 -> m9_57  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_12 -> m9_14  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_9 -> m9_63  [key=2, style=dotted];
m9_9 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label=pager];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_61  [key=2, style=dotted];
m9_9 -> m9_62  [key=2, style=dotted];
m9_9 -> m9_19  [key=1, style=dashed, color=darkseagreen4, label=pager];
m9_9 -> m9_55  [key=1, style=dashed, color=darkseagreen4, label=pager];
m9_23 -> m9_65  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_23 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_25 -> m9_65  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_25 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_29 -> m9_65  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_29 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_66  [key=2, style=dotted];
m9_19 -> m9_67  [key=2, style=dotted];
m9_19 -> m9_68  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_58  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_64  [key=2, style=dotted];
m9_10 -> m9_21  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_21 -> m9_54  [key=0, style=solid];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_27 -> m9_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_27 -> m9_31  [key=0, style=solid];
m9_27 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label=job];
m9_31 -> m9_32  [key=0, style=solid];
m9_4 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label=from];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_59  [key=2, style=dotted];
m9_5 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_59  [key=2, style=dotted];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m9_8 -> m9_60  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid];
m10_14 -> m10_15  [key=0, style=solid];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_17  [key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_0  [key=2, style=dotted];
m10_17 -> m10_14  [key=0, style=bold, color=blue];
m10_57 -> m10_58  [key=0, style=solid];
m10_58 -> m10_59  [key=0, style=solid];
m10_58 -> m10_43  [key=2, style=dotted];
m10_59 -> m10_60  [key=0, style=solid];
m10_59 -> m10_22  [key=2, style=dotted];
m10_60 -> m10_61  [key=0, style=solid];
m10_60 -> m10_30  [key=2, style=dotted];
m10_61 -> m10_62  [key=0, style=solid];
m10_61 -> m10_66  [key=2, style=dotted];
m10_62 -> m10_63  [key=0, style=solid];
m10_62 -> m10_44  [key=2, style=dotted];
m10_63 -> m10_64  [key=0, style=solid];
m10_63 -> m10_35  [key=2, style=dotted];
m10_64 -> m10_65  [key=0, style=solid];
m10_64 -> m10_26  [key=2, style=dotted];
m10_65 -> m10_57  [key=0, style=bold, color=blue];
m10_26 -> m10_27  [key=0, style=solid];
m10_27 -> m10_28  [key=0, style=solid];
m10_27 -> m10_29  [key=2, style=dotted];
m10_28 -> m10_26  [key=0, style=bold, color=blue];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_13  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_12 -> m10_9  [key=0, style=bold, color=blue];
m10_67 -> m10_68  [key=0, style=solid];
m10_68 -> m10_69  [key=0, style=solid];
m10_68 -> m10_43  [key=2, style=dotted];
m10_69 -> m10_70  [key=0, style=solid];
m10_69 -> m10_22  [key=2, style=dotted];
m10_70 -> m10_71  [key=0, style=solid];
m10_70 -> m10_30  [key=2, style=dotted];
m10_71 -> m10_72  [key=0, style=solid];
m10_71 -> m10_66  [key=2, style=dotted];
m10_72 -> m10_73  [key=0, style=solid];
m10_72 -> m10_35  [key=2, style=dotted];
m10_73 -> m10_74  [key=0, style=solid];
m10_73 -> m10_44  [key=2, style=dotted];
m10_74 -> m10_75  [key=0, style=solid];
m10_74 -> m10_26  [key=2, style=dotted];
m10_75 -> m10_67  [key=0, style=bold, color=blue];
m10_36 -> m10_37  [key=0, style=solid];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_43  [key=2, style=dotted];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_22  [key=2, style=dotted];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_30  [key=2, style=dotted];
m10_40 -> m10_41  [key=0, style=solid];
m10_40 -> m10_44  [key=2, style=dotted];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_26  [key=2, style=dotted];
m10_42 -> m10_36  [key=0, style=bold, color=blue];
m10_45 -> m10_46  [key=0, style=solid];
m10_46 -> m10_47  [key=0, style=solid];
m10_46 -> m10_43  [key=2, style=dotted];
m10_47 -> m10_48  [key=0, style=solid];
m10_47 -> m10_22  [key=2, style=dotted];
m10_48 -> m10_49  [key=0, style=solid];
m10_48 -> m10_30  [key=2, style=dotted];
m10_49 -> m10_50  [key=0, style=solid];
m10_49 -> m10_55  [key=2, style=dotted];
m10_49 -> m10_51  [key=1, style=dashed, color=darkseagreen4, label=table1];
m10_49 -> m10_52  [key=1, style=dashed, color=darkseagreen4, label=table1];
m10_50 -> m10_51  [key=0, style=solid];
m10_50 -> m10_56  [key=2, style=dotted];
m10_51 -> m10_52  [key=0, style=solid];
m10_51 -> m10_56  [key=2, style=dotted];
m10_52 -> m10_53  [key=0, style=solid];
m10_52 -> m10_44  [key=2, style=dotted];
m10_53 -> m10_54  [key=0, style=solid];
m10_53 -> m10_26  [key=2, style=dotted];
m10_54 -> m10_45  [key=0, style=bold, color=blue];
m10_18 -> m10_19  [key=0, style=solid];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_21  [key=2, style=dotted];
m10_20 -> m10_18  [key=0, style=bold, color=blue];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_37  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_46  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_58  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_22 -> m10_68  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_25  [key=2, style=dotted];
m10_24 -> m10_22  [key=0, style=bold, color=blue];
m10_30 -> m10_31  [key=0, style=solid];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_34  [key=2, style=dotted];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_35  [key=2, style=dotted];
m10_33 -> m10_30  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_5  [key=2, style=dotted];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_6  [key=2, style=dotted];
m10_2 -> m10_7  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_8  [key=2, style=dotted];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_76 -> m10_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m10_76 -> m10_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.States.EnqueuedStateFeature"];
m11_133 -> m11_134  [key=0, style=solid, color=green];
m11_134 -> m11_135  [key=0, style=solid, color=green];
m11_134 -> m11_136  [key=2, style=dotted, color=green];
m11_134 -> m11_137  [key=2, style=dotted, color=green];
m11_135 -> m11_133  [key=0, style=bold, color=blue];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_29  [key=0, style=solid];
m11_29 -> m11_30  [key=0, style=solid];
m11_28 -> m11_32  [key=0, style=solid];
m11_28 -> m11_18  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_33  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_25  [key=2, style=dotted];
m11_32 -> m11_26  [key=0, style=bold, color=blue];
m11_23 -> m11_119  [key=0, style=solid];
m11_23 -> m11_37  [key=3, color=darkorchid, style=bold, label="method methodReturn SqlConnection CreateAndOpenConnection"];
m11_23 -> m11_121  [key=3, color=darkorchid, style=bold, label="method methodReturn SqlConnection CreateAndOpenConnection"];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_121  [key=0, style=solid];
m11_120 -> m11_124  [key=0, style=solid];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_125  [key=2, style=dotted];
m11_121 -> m11_123  [key=1, style=dashed, color=darkseagreen4, label=connection];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_126  [key=2, style=dotted];
m11_123 -> m11_124  [key=0, style=solid];
m11_124 -> m11_23  [key=0, style=bold, color=blue];
m11_127 -> m11_128  [key=0, style=solid];
m11_127 -> m11_129  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m11_128 -> m11_129  [key=0, style=solid];
m11_128 -> m11_130  [key=0, style=solid];
m11_128 -> m11_131  [key=2, style=dotted];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_132  [key=2, style=dotted];
m11_130 -> m11_127  [key=0, style=bold, color=blue];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_44  [key=0, style=bold, color=crimson];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_46  [key=2, style=dotted];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_47  [key=2, style=dotted];
m11_45 -> m11_42  [key=0, style=bold, color=blue];
m11_38 -> m11_39  [key=0, style=solid];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_41  [key=2, style=dotted];
m11_40 -> m11_38  [key=0, style=bold, color=blue];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_52  [key=2, style=dotted];
m11_50 -> m11_51  [key=0, style=solid];
m11_50 -> m11_53  [key=2, style=dotted];
m11_51 -> m11_48  [key=0, style=bold, color=blue];
m11_90 -> m11_91  [key=0, style=solid];
m11_90 -> m11_95  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_93  [key=2, style=dotted];
m11_91 -> m11_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_91 -> m11_91  [key=3, color=darkorchid, style=bold, label="method methodReturn bool "];
m11_92 -> m11_90  [key=0, style=bold, color=blue];
m11_20 -> m11_146  [key=0, style=solid];
m11_20 -> m11_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string connectionStringName"];
m11_146 -> m11_147  [key=0, style=solid];
m11_147 -> m11_148  [key=0, style=solid];
m11_148 -> m11_20  [key=0, style=bold, color=blue];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_109  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_107  [key=2, style=dotted];
m11_105 -> m11_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_105 -> m11_91  [key=3, color=darkorchid, style=bold, label="method methodReturn bool "];
m11_106 -> m11_104  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_0  [key=0, style=bold, color=blue];
m11_37 -> m11_26  [key=3, color=darkorchid, style=bold, label="Field variable SqlConnection _existingConnection"];
m11_53 -> m11_93  [key=3, color=darkorchid, style=bold, label="Local variable T result"];
m11_171 -> m11_172  [key=0, style=solid];
m11_171 -> m11_173  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m11_77 -> m11_78  [key=0, style=solid];
m11_80 -> m11_81  [key=0, style=solid];
m11_84 -> m11_85  [key=0, style=solid];
m11_87 -> m11_88  [key=0, style=solid];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_70  [key=2, style=dotted];
m11_79 -> m11_77  [key=0, style=bold, color=blue];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_83  [key=2, style=dotted];
m11_82 -> m11_80  [key=0, style=bold, color=blue];
m11_85 -> m11_86  [key=0, style=solid];
m11_86 -> m11_84  [key=0, style=bold, color=blue];
m11_88 -> m11_89  [key=0, style=solid];
m11_89 -> m11_87  [key=0, style=bold, color=blue];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_98  [key=2, style=dotted];
m11_94 -> m11_95  [key=0, style=solid];
m11_96 -> m11_97  [key=0, style=solid];
m11_97 -> m11_94  [key=0, style=bold, color=blue];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_98  [key=2, style=dotted];
m11_108 -> m11_109  [key=0, style=solid];
m11_110 -> m11_111  [key=0, style=solid];
m11_111 -> m11_108  [key=0, style=bold, color=blue];
m11_149 -> m11_150  [key=0, style=solid];
m11_149 -> m11_93  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.Metric "];
m11_149 -> m11_149  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_153  [key=1, style=dashed, color=darkseagreen4, label=sqlStorage];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_153  [key=0, style=solid];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_93  [key=2, style=dotted];
m11_153 -> m11_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_152 -> m11_154  [key=0, style=solid];
m11_152 -> m11_155  [key=2, style=dotted];
m11_154 -> m11_149  [key=0, style=bold, color=blue];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_158  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m11_157 -> m11_158  [key=0, style=solid];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_161  [key=2, style=dotted];
m11_158 -> m11_162  [key=2, style=dotted];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_163  [key=2, style=dotted];
m11_159 -> m11_164  [key=2, style=dotted];
m11_160 -> m11_156  [key=0, style=bold, color=blue];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_93  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.Metric "];
m11_165 -> m11_165  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label=sqlStorage];
m11_167 -> m11_168  [key=0, style=solid];
m11_167 -> m11_169  [key=0, style=solid];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_93  [key=2, style=dotted];
m11_169 -> m11_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_168 -> m11_170  [key=0, style=solid];
m11_168 -> m11_155  [key=2, style=dotted];
m11_170 -> m11_165  [key=0, style=bold, color=blue];
m11_172 -> m11_173  [key=0, style=solid];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_161  [key=2, style=dotted];
m11_173 -> m11_162  [key=2, style=dotted];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_163  [key=2, style=dotted];
m11_174 -> m11_164  [key=2, style=dotted];
m11_175 -> m11_171  [key=0, style=bold, color=blue];
m11_25 -> m11_138  [key=0, style=solid];
m11_138 -> m11_139  [key=0, style=solid];
m11_138 -> m11_141  [key=2, style=dotted];
m11_139 -> m11_140  [key=0, style=solid];
m11_139 -> m11_142  [key=2, style=dotted];
m11_140 -> m11_25  [key=0, style=bold, color=blue];
m11_34 -> m11_35  [key=0, style=solid];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_37  [key=2, style=dotted];
m11_36 -> m11_34  [key=0, style=bold, color=blue];
m11_54 -> m11_55  [key=0, style=solid];
m11_55 -> m11_56  [key=0, style=solid];
m11_55 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=canNotParseMessage];
m11_55 -> m11_68  [key=1, style=dashed, color=darkseagreen4, label=canNotParseMessage];
m11_55 -> m11_55  [key=3, color=darkorchid, style=bold, label="Local variable string canNotParseMessage"];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_70  [key=2, style=dotted];
m11_56 -> m11_71  [key=2, style=dotted];
m11_56 -> m11_72  [key=2, style=dotted];
m11_56 -> m11_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_56 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_56 -> m11_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_56 -> m11_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_56 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label=parts];
m11_56 -> m11_60  [key=1, style=dashed, color=darkseagreen4, label=parts];
m11_56 -> m11_64  [key=1, style=dashed, color=darkseagreen4, label=parts];
m11_56 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label=parts];
m11_66 -> m11_69  [key=0, style=solid];
m11_66 -> m11_22  [key=2, style=dotted];
m11_68 -> m11_69  [key=0, style=solid];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_73  [key=2, style=dotted];
m11_57 -> m11_60  [key=1, style=dashed, color=darkseagreen4, label=builder];
m11_57 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label=builder];
m11_57 -> m11_62  [key=1, style=dashed, color=darkseagreen4, label=builder];
m11_57 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label=builder];
m11_57 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=builder];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_58  [key=0, style=solid];
m11_59 -> m11_74  [key=2, style=dotted];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_75  [key=2, style=dotted];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_63  [key=0, style=solid];
m11_64 -> m11_74  [key=2, style=dotted];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_75  [key=2, style=dotted];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_61  [key=0, style=solid];
m11_58 -> m11_60  [key=1, style=dashed, color=darkseagreen4, label=alias];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_63  [key=0, style=solid];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_76  [key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_66  [key=0, style=solid];
m11_63 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label=alias];
m11_67 -> m11_68  [key=0, style=solid];
m11_69 -> m11_54  [key=0, style=bold, color=blue];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m11_2 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m11_2 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_2 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_2 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_2 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_2 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_2 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_5  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_10  [key=0, style=solid];
m11_8 -> m11_19  [key=2, style=dotted];
m11_9 -> m11_13  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_12  [key=0, style=solid];
m11_10 -> m11_20  [key=2, style=dotted];
m11_11 -> m11_13  [key=0, style=solid];
m11_12 -> m11_17  [key=0, style=solid];
m11_12 -> m11_21  [key=2, style=dotted];
m11_12 -> m11_22  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_16  [key=0, style=solid];
m11_4 -> m11_17  [key=0, style=solid];
m11_4 -> m11_18  [key=2, style=dotted];
m11_6 -> m11_17  [key=0, style=solid];
m11_6 -> m11_18  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid, color=green];
m11_14 -> m11_23  [key=2, style=dotted];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_25  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid, color=green];
m11_15 -> m11_24  [key=2, style=dotted, color=green];
m11_17 -> m11_2  [key=0, style=bold, color=blue];
m11_93 -> m11_99  [key=0, style=solid];
m11_93 -> m11_101  [key=1, style=dashed, color=darkseagreen4, label="System.Func<SqlConnection, T>"];
m11_93 -> m11_91  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m11_93 -> m11_107  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m11_93 -> m11_149  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m11_93 -> m11_165  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_99  [key=3, color=darkorchid, style=bold, label="Local variable SqlConnection connection"];
m11_99 -> m11_23  [key=3, color=darkorchid, style=bold, label="Local variable SqlConnection connection"];
m11_101 -> m11_102  [key=0, style=solid];
m11_101 -> m11_103  [key=2, style=dotted];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_23  [key=2, style=dotted];
m11_102 -> m11_93  [key=0, style=bold, color=blue];
m11_19 -> m11_143  [key=0, style=solid];
m11_19 -> m11_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string nameOrConnectionString"];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_145  [key=2, style=dotted];
m11_144 -> m11_19  [key=0, style=bold, color=blue];
m11_107 -> m11_112  [key=0, style=solid];
m11_107 -> m11_113  [key=1, style=dashed, color=darkseagreen4, label="System.Func<SqlConnection, T>"];
m11_107 -> m11_105  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<SqlConnection, T> func"];
m11_107 -> m11_99  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Transactions.IsolationLevel? isolationLevel"];
m11_107 -> m11_53  [key=3, color=darkorchid, style=bold, label="method methodReturn T UseTransaction"];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_117  [key=2, style=dotted];
m11_112 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_93  [key=2, style=dotted];
m11_113 -> m11_115  [key=1, style=dashed, color=darkseagreen4, label=result];
m11_114 -> m11_115  [key=0, style=solid];
m11_114 -> m11_118  [key=2, style=dotted];
m11_115 -> m11_116  [key=0, style=solid];
m11_116 -> m11_107  [key=0, style=bold, color=blue];
m11_176 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_100  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_112  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_113  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_119  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_120  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_121  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_134  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_176 -> m11_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m11_177 -> m11_95  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m11_178 -> m11_109  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection>"];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_10  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_11  [key=2, style=dotted];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_12  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_11  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_7 -> m12_8  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_11  [key=2, style=dotted];
m12_9 -> m12_0  [key=0, style=bold, color=blue];
m12_13 -> m12_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m12_13 -> m12_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m13_21 -> m13_22  [key=0, style=solid];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_24  [key=2, style=dotted];
m13_23 -> m13_21  [key=0, style=bold, color=blue];
m13_12 -> m13_14  [key=1, style=dashed, color=green, label=serializedResult];
m13_12 -> m13_13  [key=0, style=solid, color=green];
m13_13 -> m13_0  [key=3, color=darkorchid, style=bold, label="Property variable object Result"];
m13_13 -> m13_14  [key=0, style=solid, color=green];
m13_13 -> m13_10  [key=0, style=solid, color=green];
m13_14 -> m13_10  [key=0, style=solid, color=green];
m13_14 -> m13_16  [key=2, style=dotted, color=green];
m13_17 -> m13_18  [key=0, style=solid];
m13_18 -> m13_19  [key=0, style=solid];
m13_18 -> m13_20  [key=2, style=dotted];
m13_19 -> m13_17  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label=object];
m13_0 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label=long];
m13_0 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label=long];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_0  [key=0, style=bold, color=blue];
m13_6 -> m13_7  [key=0, style=solid];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_12  [key=2, style=dotted];
m13_7 -> m13_13  [key=2, style=dotted];
m13_7 -> m13_14  [key=2, style=dotted];
m13_7 -> m13_9  [key=1, style=dashed, color=red, label=data];
m13_7 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label=data];
m13_8 -> m13_9  [key=0, style=solid, color=green];
m13_8 -> m13_10  [key=0, style=solid];
m13_9 -> m13_10  [key=0, style=solid, color=green];
m13_9 -> m13_15  [key=2, style=dotted, color=red];
m13_9 -> m13_16  [key=2, style=dotted, color=red];
m13_10 -> m13_11  [key=0, style=solid, color=green];
m13_10 -> m13_13  [key=0, style=solid, color=green];
m13_10 -> m13_15  [key=2, style=dotted, color=green];
m13_11 -> m13_12  [key=0, style=solid, color=green];
m13_11 -> m13_6  [key=0, style=bold, color=blue];
m13_25 -> m13_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.SucceededState"];
m13_25 -> m13_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.SucceededState"];
m13_25 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.SucceededState"];
m13_25 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.SucceededState"];
m13_25 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.SucceededState"];
m13_25 -> m13_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.SucceededState"];
m13_25 -> m13_9  [key=1, style=dashed, color=red, label="Hangfire.States.SucceededState"];
m13_25 -> m13_10  [key=1, style=dashed, color=green, label="Hangfire.States.SucceededState"];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_3 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.FetchedJobsPage"];
}
