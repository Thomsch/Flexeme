digraph  {
n218 [label="HangFire.Core.Tests.Client.CreateContextFacts", span=""];
n219 [label=context, span=""];
n220 [label=context, span=""];
n221 [label=context, span=""];
n222 [label=context, span=""];
n223 [label=context, span=""];
n224 [label=context, span=""];
n225 [label=context, span=""];
n226 [label=context, span=""];
n227 [label=context, span=""];
n228 [label=contextCopy, span=""];
n0 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19"];
n1 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", label="_job = Job.FromExpression(() => Method())", span="21-21"];
n2 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", label="_state = new Mock<State>()", span="22-22"];
n8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
n15 [cluster="lambda expression", label="Entry lambda expression", span="21-21"];
n3 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", label="_connection = new Mock<IStorageConnection>()", span="23-23"];
n9 [cluster="Mock<State>.cstr", label="Entry Mock<State>.cstr", span=""];
n4 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", label="_stateMachine = new Mock<IStateMachine>()", span="24-24"];
n10 [cluster="Mock<IStorageConnection>.cstr", label="Entry Mock<IStorageConnection>.cstr", span=""];
n5 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="26-26"];
n11 [cluster="Mock<IStateMachine>.cstr", label="Entry Mock<IStateMachine>.cstr", span=""];
n6 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", label="_stateMachineFactory.Setup(x => x.Create(It.IsNotNull<IStorageConnection>()))\r\n                .Returns(_stateMachine.Object)", span="27-28"];
n12 [cluster="Mock<IStateMachineFactory>.cstr", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
n7 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateContextFacts()", span="19-19"];
n13 [cluster="Unk.Setup", label="Entry Unk.Setup", span=""];
n14 [cluster="Unk.Returns", label="Entry Unk.Returns", span=""];
n19 [cluster="lambda expression", label="Entry lambda expression", span="27-27"];
n16 [cluster="lambda expression", label="Method()", span="21-21"];
n17 [cluster="lambda expression", label="Exit lambda expression", span="21-21"];
n18 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Method()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288"];
n20 [cluster="lambda expression", label="x.Create(It.IsNotNull<IStorageConnection>())", span="27-27"];
n21 [cluster="lambda expression", label="Exit lambda expression", span="27-27"];
n22 [cluster="Unk.>", label="Entry Unk.>", span=""];
n23 [cluster="Unk.Create", label="Entry Unk.Create", span=""];
n24 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32"];
n25 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object))", span="34-35"];
n26 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", label="Assert.Equal(''connection'', exception.ParamName)", span="37-37"];
n29 [cluster="lambda expression", label="Entry lambda expression", span="35-35"];
n27 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="32-32"];
n28 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n30 [cluster="lambda expression", label="new CreateContext(null, _stateMachineFactory.Object, _job, _state.Object)", span="35-35"];
n31 [cluster="lambda expression", label="Exit lambda expression", span="35-35"];
n32 [cluster="CreateContext.cstr", label="Entry CreateContext.cstr", span=""];
n33 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41"];
n34 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, null, _job, _state.Object))", span="43-44"];
n35 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="46-46"];
n37 [cluster="lambda expression", label="Entry lambda expression", span="44-44"];
n36 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="41-41"];
n38 [cluster="lambda expression", label="new CreateContext(_connection.Object, null, _job, _state.Object)", span="44-44"];
n39 [cluster="lambda expression", label="Exit lambda expression", span="44-44"];
n40 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50"];
n41 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object))", span="52-53"];
n42 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", label="Assert.Equal(''job'', exception.ParamName)", span="55-55"];
n44 [cluster="lambda expression", label="Entry lambda expression", span="53-53"];
n43 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenJobIsNull()", span="50-50"];
n45 [cluster="lambda expression", label="new CreateContext(_connection.Object, _stateMachineFactory.Object, null, _state.Object)", span="53-53"];
n46 [cluster="lambda expression", label="Exit lambda expression", span="53-53"];
n47 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59"];
n48 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null))", span="61-63"];
n49 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", label="Assert.Equal(''initialState'', exception.ParamName)", span="65-65"];
n51 [cluster="lambda expression", label="Entry lambda expression", span="62-63"];
n50 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_ThrowsAnException_WhenStateIsNull()", span="59-59"];
n52 [cluster="lambda expression", label="new CreateContext(\r\n                    _connection.Object, _stateMachineFactory.Object, _job, null)", span="62-63"];
n53 [cluster="lambda expression", label="Exit lambda expression", span="62-63"];
n54 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69"];
n55 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", label="var context = CreateContext()", span="71-71"];
n56 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", label="Assert.Same(_connection.Object, context.Connection)", span="73-73"];
n62 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292"];
n57 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", label="Assert.Same(_job, context.Job)", span="74-74"];
n58 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", label="Assert.Same(_state.Object, context.InitialState)", span="75-75"];
n59 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", label="Assert.NotNull(context.Items)", span="77-77"];
n60 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", label="Assert.Null(context.JobId)", span="78-78"];
n63 [cluster="Unk.Same", label="Entry Unk.Same", span=""];
n64 [cluster="Unk.NotNull", label="Entry Unk.NotNull", span=""];
n61 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Ctor_CorrectlyInitializes_AllProperties()", span="69-69"];
n65 [cluster="Unk.Null", label="Entry Unk.Null", span=""];
n66 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82"];
n67 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", label="var context = CreateContext()", span="84-84"];
n68 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", label="var contextCopy = new CreateContext(context)", span="85-85"];
n69 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", label="Assert.Same(context.Items, contextCopy.Items)", span="87-87"];
n71 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
n70 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesItemsDictionary_FromTheGivenContext()", span="82-82"];
n72 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91"];
n73 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", label="var context = CreateContext()", span="93-93"];
n74 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", label="var contextCopy = new CreateContext(context)", span="94-94"];
n75 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", label="Assert.Same(context.JobId, contextCopy.JobId)", span="96-96"];
n76 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_FromTheGivenContext()", span="91-91"];
n77 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100"];
n78 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", label="var context = CreateContext()", span="102-102"];
n79 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="103-104"];
n83 [cluster="lambda expression", label="context.SetJobParameter(null, null)", span="104-104"];
n80 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", label="Assert.Equal(''name'', exception.ParamName)", span="106-106"];
n82 [cluster="lambda expression", label="Entry lambda expression", span="104-104"];
n81 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="100-100"];
n84 [cluster="lambda expression", label="Exit lambda expression", span="104-104"];
n85 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
n86 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110"];
n87 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", label="var context = CreateContext()", span="112-112"];
n88 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="114-115"];
n92 [cluster="lambda expression", label="context.SetJobParameter(''name'', null)", span="115-115"];
n89 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_AcceptsNullValues()", span="110-110"];
n90 [cluster="Unk.DoesNotThrow", label="Entry Unk.DoesNotThrow", span=""];
n91 [cluster="lambda expression", label="Entry lambda expression", span="115-115"];
n93 [cluster="lambda expression", label="Exit lambda expression", span="115-115"];
n94 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119"];
n95 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", label="var context = CreateContext()", span="121-121"];
n96 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", label="context.SetJobParameter(''name'', null)", span="122-122"];
n97 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", label="Assert.DoesNotThrow(\r\n                () => context.SetJobParameter(''name'', null))", span="124-125"];
n100 [cluster="lambda expression", label="context.SetJobParameter(''name'', null)", span="125-125"];
n98 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_CanBeCalledTwice_WithTheSameName()", span="119-119"];
n99 [cluster="lambda expression", label="Entry lambda expression", span="125-125"];
n101 [cluster="lambda expression", label="Exit lambda expression", span="125-125"];
n102 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129"];
n103 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", label="var context = CreateContext()", span="131-131"];
n104 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", label="Assert.Throws<ArgumentNullException>(\r\n                () => context.GetJobParameter<int>(null))", span="132-133"];
n107 [cluster="lambda expression", label="context.GetJobParameter<int>(null)", span="133-133"];
n105 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="129-129"];
n106 [cluster="lambda expression", label="Entry lambda expression", span="133-133"];
n108 [cluster="lambda expression", label="Exit lambda expression", span="133-133"];
n109 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
n110 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137"];
n111 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", label="var context = CreateContext()", span="139-139"];
n112 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", label="Assert.Equal(default(int), context.GetJobParameter<int>(''one''))", span="141-141"];
n113 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", label="Assert.Equal(default(string), context.GetJobParameter<string>(''two''))", span="142-142"];
n114 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsDefaultValue_IfParameterDoesNotExists()", span="137-137"];
n115 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146"];
n116 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", label="var context = CreateContext()", span="148-148"];
n117 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", label="context.SetJobParameter(''name'', ''value'')", span="149-149"];
n118 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", label="Assert.Equal(''value'', context.GetJobParameter<string>(''name''))", span="151-151"];
n119 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_ThatWasSetByTheCorrespondingMethod()", span="146-146"];
n120 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155"];
n121 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", label="var context = CreateContext()", span="157-157"];
n122 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", label="context.SetJobParameter(''name1'', ''value1'')", span="159-159"];
n123 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", label="context.SetJobParameter(''name2'', ''value2'')", span="160-160"];
n124 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", label="Assert.Equal(''value1'', context.GetJobParameter<string>(''name1''))", span="162-162"];
n125 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheValue_OfTheSpecifiedParameterNameOnly()", span="155-155"];
n126 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166"];
n127 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", label="var context = CreateContext()", span="168-168"];
n128 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", label="context.SetJobParameter(''name'', ''oldValue'')", span="170-170"];
n129 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", label="context.SetJobParameter(''name'', ''newValue'')", span="171-171"];
n130 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", label="Assert.Equal(''newValue'', context.GetJobParameter<string>(''name''))", span="173-173"];
n131 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ReturnsTheFreshestValue_WhenTwoSetOperationsPerformed()", span="166-166"];
n132 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177"];
n133 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", label="var context = CreateContext()", span="179-179"];
n134 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", label="context.SetJobParameter(''name'', ''value'')", span="181-181"];
n135 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", label="Assert.Throws<InvalidOperationException>(\r\n                () => context.GetJobParameter<int>(''name''))", span="183-184"];
n138 [cluster="lambda expression", label="context.GetJobParameter<int>(''name'')", span="184-184"];
n136 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_ThrowsAnException_WhenParameterCouldNotBeDeserialized()", span="177-177"];
n137 [cluster="lambda expression", label="Entry lambda expression", span="184-184"];
n139 [cluster="lambda expression", label="Exit lambda expression", span="184-184"];
n140 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188"];
n141 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", label="var context = CreateContext()", span="190-190"];
n142 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", label="context.SetJobParameter(''name'', ''value'')", span="191-191"];
n143 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", label="var contextCopy = new CreateContext(context)", span="192-192"];
n144 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", label="var value = contextCopy.GetJobParameter<string>(''name'')", span="194-194"];
n145 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", label="Assert.Equal(''value'', value)", span="196-196"];
n146 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobParameters_FromTheGivenContext()", span="188-188"];
n147 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200"];
n148 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", label="var context = CreateContext()", span="202-202"];
n149 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", label="context.CreateJob()", span="204-204"];
n150 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", label="_stateMachine.Verify(x => x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState))", span="206-209"];
n155 [cluster="lambda expression", label="x.CreateInState(\r\n                context.Job,\r\n                It.IsNotNull<Dictionary<string, string>>(),\r\n                context.InitialState)", span="206-209"];
n152 [cluster="HangFire.Client.CreateContext.CreateJob()", label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147"];
n151 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_DelegatesItsExecution_ToStateMachine()", span="200-200"];
n153 [cluster="Unk.Verify", label="Entry Unk.Verify", span=""];
n154 [cluster="lambda expression", label="Entry lambda expression", span="206-209"];
n156 [cluster="lambda expression", label="Exit lambda expression", span="206-209"];
n157 [cluster="Unk.CreateInState", label="Entry Unk.CreateInState", span=""];
n158 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213"];
n159 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", label="var context = CreateContext()", span="215-215"];
n160 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", label="_stateMachine\r\n                .Setup(x => x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState))\r\n                .Returns(''id'')", span="216-218"];
n165 [cluster="lambda expression", label="x.CreateInState(context.Job, It.IsAny<Dictionary<string, string>>(), context.InitialState)", span="217-217"];
n161 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", label="context.CreateJob()", span="220-220"];
n162 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", label="Assert.Equal(''id'', context.JobId)", span="222-222"];
n164 [cluster="lambda expression", label="Entry lambda expression", span="217-217"];
n163 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_SetsTheJobIdProperty()", span="213-213"];
n166 [cluster="lambda expression", label="Exit lambda expression", span="217-217"];
n167 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226"];
n168 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", label="var context = CreateContext()", span="228-228"];
n169 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", label="context.SetJobParameter(''name'', new { key = ''value'' })", span="229-229"];
n170 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", label="context.CreateJob()", span="231-231"];
n171 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", label="_stateMachine.Verify(x => x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<State>()))", span="233-237"];
n172 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateJob_PassesParametersAsJsonObjects()", span="226-226"];
n173 [cluster="lambda expression", label="Entry lambda expression", span="233-237"];
n174 [cluster="lambda expression", label="x.CreateInState(\r\n                It.IsAny<Job>(),\r\n                It.Is<Dictionary<string, string>>(\r\n                    d => d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''),\r\n                It.IsAny<State>())", span="233-237"];
n175 [cluster="lambda expression", label="Exit lambda expression", span="233-237"];
n176 [cluster="lambda expression", label="Entry lambda expression", span="236-236"];
n177 [cluster="lambda expression", label="d.ContainsKey(''name'') && d[''name''] == ''{\''key\'':\''value\''}''", span="236-236"];
n178 [cluster="lambda expression", label="Exit lambda expression", span="236-236"];
n179 [cluster="Unk.ContainsKey", label="Entry Unk.ContainsKey", span=""];
n180 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241"];
n181 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", label="var context = CreateContext()", span="243-243"];
n182 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", label="context.CreateJob()", span="244-244"];
n183 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", label="Assert.Throws<InvalidOperationException>(\r\n                () => context.SetJobParameter(''name'', ''value''))", span="246-247"];
n186 [cluster="lambda expression", label="context.SetJobParameter(''name'', ''value'')", span="247-247"];
n184 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="241-241"];
n185 [cluster="lambda expression", label="Entry lambda expression", span="247-247"];
n187 [cluster="lambda expression", label="Exit lambda expression", span="247-247"];
n188 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251"];
n189 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", label="var context = CreateContext()", span="253-253"];
n190 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", label="context.CreateJob()", span="255-255"];
n191 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", label="Assert.DoesNotThrow(\r\n                () => context.GetJobParameter<string>(''name''))", span="257-258"];
n194 [cluster="lambda expression", label="context.GetJobParameter<string>(''name'')", span="258-258"];
n192 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.GetJobParameter_DoesNotThrowAnException_AfterCreateJobWasCalled()", span="251-251"];
n193 [cluster="lambda expression", label="Entry lambda expression", span="258-258"];
n195 [cluster="lambda expression", label="Exit lambda expression", span="258-258"];
n196 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262"];
n197 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", label="_stateMachine.Setup(x => x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object))\r\n                .Returns(''id'')", span="264-266"];
n198 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", label="var context = CreateContext()", span="268-268"];
n203 [cluster="lambda expression", label="Entry lambda expression", span="264-265"];
n199 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", label="context.CreateJob()", span="269-269"];
n200 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", label="var contextCopy = new CreateContext(context)", span="271-271"];
n201 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", label="Assert.Equal(''id'', contextCopy.JobId)", span="273-273"];
n202 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesJobId_WhenItWasSet()", span="262-262"];
n204 [cluster="lambda expression", label="x.CreateInState(\r\n                _job, It.IsAny<Dictionary<string, string>>(), _state.Object)", span="264-265"];
n205 [cluster="lambda expression", label="Exit lambda expression", span="264-265"];
n206 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", label="Entry HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277"];
n207 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", label="var context = CreateContext()", span="279-279"];
n208 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", label="context.CreateJob()", span="280-280"];
n209 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", label="var contextCopy = new CreateContext(context)", span="282-282"];
n210 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", label="Assert.Throws<InvalidOperationException>(\r\n                () => contextCopy.SetJobParameter(''name'', ''value''))", span="284-285"];
n213 [cluster="lambda expression", label="contextCopy.SetJobParameter(''name'', ''value'')", span="285-285"];
n211 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CopyCtor_CopiesTheFactThatJobWasCreated()", span="277-277"];
n212 [cluster="lambda expression", label="Entry lambda expression", span="285-285"];
n214 [cluster="lambda expression", label="Exit lambda expression", span="285-285"];
n215 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.Method()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.Method()", span="288-288"];
n216 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", label="return new CreateContext(\r\n                _connection.Object, _stateMachineFactory.Object, _job, _state.Object);", span="294-295"];
n217 [cluster="HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", label="Exit HangFire.Core.Tests.Client.CreateContextFacts.CreateContext()", span="292-292"];
d12 [cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, label="var serverName = String.Format(''{0}:{1}'', MachineName, Process.GetCurrentProcess().Id)", prediction=0, span="59-59"];
d30 [label="HangFire.BackgroundJobServer", span=""];
d10 [cluster="HangFire.BackgroundJobServer.Start()", label="_server != null", span="54-54"];
d13 [cluster="HangFire.BackgroundJobServer.Start()", color=green, community=0, label="_server = new JobServer(\r\n                RedisFactory.BasicManager,\r\n                serverName, WorkerCount, Queues, JobActivator, PollInterval, TimeSpan.FromSeconds(5))", prediction=1, span="61-63"];
d16 [cluster="System.Diagnostics.Process.GetCurrentProcess()", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
d17 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
d14 [cluster="HangFire.BackgroundJobServer.Start()", label="Exit HangFire.BackgroundJobServer.Start()", span="52-52"];
d18 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33"];
d8 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
d3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="MachineName = Environment.MachineName", span="22-22"];
d4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="PollInterval = TimeSpan.FromSeconds(15)", span="23-23"];
d5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="WorkerCount = workerCount", span="25-25"];
d6 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Queues = queues ?? new[] { ''default'' }", span="26-26"];
d20 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server != null", span="72-72"];
d21 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server.Dispose()", span="74-74"];
d22 [cluster="HangFire.BackgroundJobServer.Stop()", label="_server = null", span="75-75"];
d28 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Stop()", span="84-84"];
d9 [cluster="HangFire.BackgroundJobServer.Start()", label="Entry HangFire.BackgroundJobServer.Start()", span="52-52"];
d11 [cluster="HangFire.BackgroundJobServer.Start()", label="throw new InvalidOperationException(''Background job server has already been started. Please stop it first.'');", span="56-56"];
d2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="20-20"];
d7 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="20-20"];
d19 [cluster="HangFire.BackgroundJobServer.Stop()", label="Entry HangFire.BackgroundJobServer.Stop()", span="70-70"];
d24 [cluster="HangFire.BackgroundJobServer.Stop()", label="return false;", span="79-79"];
d26 [cluster="HangFire.Server.JobServer.Dispose()", label="Entry HangFire.Server.JobServer.Dispose()", span="70-70"];
d23 [cluster="HangFire.BackgroundJobServer.Stop()", label="return true;", span="77-77"];
d27 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82"];
d29 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82"];
d15 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
d25 [cluster="HangFire.BackgroundJobServer.Stop()", label="Exit HangFire.BackgroundJobServer.Stop()", span="70-70"];
m1_9 [cluster="WorkerContext.cstr", file="Client.feature.cs", label="Entry WorkerContext.cstr", span=""];
m1_0 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="14-14"];
m1_1 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="Client.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerContext(null, Queues, WorkerNumber))", span="16-17"];
m1_2 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="Client.feature.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="19-19"];
m1_3 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="14-14"];
m1_23 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="59-59"];
m1_38 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="Client.feature.cs", label="return new WorkerContext(ServerId, Queues, WorkerNumber);", span="61-61"];
m1_39 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="59-59"];
m1_5 [cluster="Unk.Equal", file="Client.feature.cs", label="Entry Unk.Equal", span=""];
m1_10 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="23-23"];
m1_11 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="Client.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new WorkerContext(ServerId, null, WorkerNumber))", span="25-26"];
m1_12 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="Client.feature.cs", label="Assert.Equal(''queues'', exception.ParamName)", span="28-28"];
m1_13 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenQueuesArrayIsNull()", span="23-23"];
m1_31 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="49-49"];
m1_32 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="Client.feature.cs", label="var context = CreateContext()", span="51-51"];
m1_33 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="Client.feature.cs", label="var contextCopy = new WorkerContext(context)", span="52-52"];
m1_34 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="Client.feature.cs", label="Assert.Equal(ServerId, context.ServerId)", span="54-54"];
m1_35 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="Client.feature.cs", label="Assert.Equal(Queues, context.Queues)", span="55-55"];
m1_36 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="Client.feature.cs", label="Assert.Equal(context.WorkerNumber, contextCopy.WorkerNumber)", span="56-56"];
m1_37 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="49-49"];
m1_24 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="42-42"];
m1_25 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="Client.feature.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new WorkerContext(null))", span="44-45"];
m1_26 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="42-42"];
m1_27 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="45-45"];
m1_6 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="17-17"];
m1_7 [cluster="lambda expression", file="Client.feature.cs", label="new WorkerContext(null, Queues, WorkerNumber)", span="17-17"];
m1_8 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="17-17"];
m1_14 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="26-26"];
m1_15 [cluster="lambda expression", file="Client.feature.cs", label="new WorkerContext(ServerId, null, WorkerNumber)", span="26-26"];
m1_16 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="26-26"];
m1_28 [cluster="lambda expression", file="Client.feature.cs", label="new WorkerContext(null)", span="45-45"];
m1_29 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="45-45"];
m1_30 [cluster="Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.WorkerContext)", file="Client.feature.cs", label="Entry Hangfire.Server.WorkerContext.WorkerContext(Hangfire.Server.WorkerContext)", span="22-22"];
m1_17 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="Client.feature.cs", label="Entry Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="32-32"];
m1_18 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="Client.feature.cs", label="var context = CreateContext()", span="34-34"];
m1_19 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="Client.feature.cs", label="Assert.Equal(ServerId, context.ServerId)", span="36-36"];
m1_20 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="Client.feature.cs", label="Assert.Equal(Queues, context.Queues)", span="37-37"];
m1_21 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="Client.feature.cs", label="Assert.Equal(WorkerNumber, context.WorkerNumber)", span="38-38"];
m1_22 [cluster="Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="Client.feature.cs", label="Exit Hangfire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="32-32"];
m1_40 [file="Client.feature.cs", label="Hangfire.Core.Tests.Server.WorkerContextFacts", span=""];
m2_33 [cluster="Unk.Complete", file="ClientFilters.feature.cs", label="Entry Unk.Complete", span=""];
m2_0 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="ClientFilters.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="16-16"];
m2_1 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="ClientFilters.feature.cs", label="_connection = connection", span="18-18"];
m2_2 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="ClientFilters.feature.cs", label="Lists = new SqlServerWriteOnlyList(this)", span="20-20"];
m2_3 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="ClientFilters.feature.cs", label="Queues = new SqlServerWriteOnlyQueue(this)", span="21-21"];
m2_4 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="ClientFilters.feature.cs", label="Jobs = new SqlServerWriteOnlyJob(this)", span="22-22"];
m2_5 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="ClientFilters.feature.cs", label="Sets = new SqlServerWriteOnlySet(this)", span="23-23"];
m2_6 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="ClientFilters.feature.cs", label="Values = new SqlServerWriteOnlyValue(this)", span="24-24"];
m2_7 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="ClientFilters.feature.cs", label="Counters = new SqlServerWriteOnlyCounter(this)", span="25-25"];
m2_8 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="ClientFilters.feature.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="16-16"];
m2_10 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="ClientFilters.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m2_9 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="ClientFilters.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyList.SqlServerWriteOnlyList(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m2_32 [cluster="System.Action<T>.Invoke(T)", file="ClientFilters.feature.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m2_29 [cluster="TransactionScope.cstr", file="ClientFilters.feature.cs", label="Entry TransactionScope.cstr", span=""];
m2_12 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="ClientFilters.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlySet.SqlServerWriteOnlySet(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m2_21 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientFilters.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m2_22 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientFilters.feature.cs", label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.Serializable })", span="46-48"];
m2_23 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientFilters.feature.cs", label="_connection.EnlistTransaction(Transaction.Current)", span="50-50"];
m2_26 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientFilters.feature.cs", label="transaction.Complete()", span="57-57"];
m2_24 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientFilters.feature.cs", label=_commandQueue, span="52-52"];
m2_25 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientFilters.feature.cs", label="command(_connection)", span="54-54"];
m2_27 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientFilters.feature.cs", label="return true;", span="60-60"];
m2_28 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="ClientFilters.feature.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="44-44"];
m2_17 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ClientFilters.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m2_18 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ClientFilters.feature.cs", label="_commandQueue.Enqueue(action)", span="41-41"];
m2_19 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="ClientFilters.feature.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m2_15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="ClientFilters.feature.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="28-28"];
m2_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", file="ClientFilters.feature.cs", label="Exit HangFire.SqlServer.SqlServerWriteOnlyTransaction.Dispose()", span="28-28"];
m2_13 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="ClientFilters.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m2_30 [cluster="TransactionOptions.cstr", file="ClientFilters.feature.cs", label="Entry TransactionOptions.cstr", span=""];
m2_11 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="ClientFilters.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="12-12"];
m2_20 [cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="ClientFilters.feature.cs", label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0"];
m2_31 [cluster="Unk.EnlistTransaction", file="ClientFilters.feature.cs", label="Entry Unk.EnlistTransaction", span=""];
m2_14 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="ClientFilters.feature.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyCounter.SqlServerWriteOnlyCounter(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m2_34 [file="ClientFilters.feature.cs", label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", span=""];
m3_35 [cluster="HangFire.Web.RazorPage.Write(object)", file="ClientSteps.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m3_30 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ClientSteps.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m3_33 [cluster="HangFire.Storage.IMonitoringApi.Servers()", file="ClientSteps.cs", label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25"];
m3_0 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs", label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m3_1 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="WriteLiteral(''\n'')", prediction=2, span="61-61"];
m3_2 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="Layout = new LayoutPage { Title = ''Servers'' }", prediction=3, span="74-74"];
m3_3 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", prediction=4, span="76-76"];
m3_4 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="IList<ServerDto> servers = monitor.Servers()", prediction=2, span="77-77"];
m3_6 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs", label="servers.Count == 0", span="88-88"];
m3_9 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label=servers, prediction=2, span="123-123"];
m3_7 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\n        There are no active servers. Backgr'' +\r\n''ound tasks will not be processed.\n    </div>\n'')", prediction=2, span="94-95"];
m3_8 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="WriteLiteral(@''    <table class=''''table''''>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Workers</th>\n                <th>Queues</th>\n                <th>Started</th>\n                <th>Heartbeat</th>\n            </tr>\n        </thead>\n        <tbody>\n'')", prediction=2, span="107-118"];
m3_10 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="WriteLiteral(''                <tr>\n                    <td>'')", prediction=2, span="129-129"];
m3_13 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs", label="Write(server.WorkersCount)", span="144-144"];
m3_15 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", prediction=2, span="154-154"];
m3_17 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="Write(JobHelper.ToTimestamp(server.StartedAt))", prediction=2, span="164-164"];
m3_19 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="Write(server.StartedAt)", prediction=2, span="174-174"];
m3_23 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs", label="Write(JobHelper.ToTimestamp(server.Heartbeat.Value))", span="195-195"];
m3_12 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="WriteLiteral(''</td>\n                    <td>'')", prediction=2, span="139-139"];
m3_14 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ClientSteps.cs", label="WriteLiteral(''</td>\n                    <td>'')", prediction=2, span="149-149"];
m3_18 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs", label="WriteLiteral(''\''>'')", span="169-169"];
m3_20 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs", label="WriteLiteral(''</td>\n                    <td>\n'')", span="179-179"];
m3_27 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs", label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="220-220"];
m3_24 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs", label="WriteLiteral(''\''>\n                                '')", span="200-200"];
m3_29 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ClientSteps.cs", label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m3_38 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="ClientSteps.cs", label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="40-40"];
m3_32 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ClientSteps.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m3_40 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ClientSteps.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m3_34 [cluster="string.ToUpperInvariant()", file="ClientSteps.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m3_31 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ClientSteps.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m3_37 [cluster="Unk.Join", file="ClientSteps.cs", label="Entry Unk.Join", span=""];
m3_39 [cluster="Unk.Write", file="ClientSteps.cs", label="Entry Unk.Write", span=""];
m3_36 [cluster="Unk.Select", file="ClientSteps.cs", label="Entry Unk.Select", span=""];
m3_41 [file="ClientSteps.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m7_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m7_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsWatcherSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m7_30 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="32-32"];
m7_0 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m7_1 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="DequeuedJobsWatcherSteps.cs", label="exception == null", span="28-28"];
m7_4 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="DequeuedJobsWatcherSteps.cs", label="Exception = exception", span="31-31"];
m7_2 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="DequeuedJobsWatcherSteps.cs", label="throw new ArgumentNullException(''exception'');", span="28-28"];
m7_3 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="DequeuedJobsWatcherSteps.cs", label="FailedAt = DateTime.UtcNow", span="30-30"];
m7_5 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m7_13 [cluster="System.Exception.ToString()", file="DequeuedJobsWatcherSteps.cs", label="Entry System.Exception.ToString()", span="0-0"];
m7_7 [cluster="HangFire.States.FailedState.SerializeData()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="42-42"];
m7_8 [cluster="HangFire.States.FailedState.SerializeData()", file="DequeuedJobsWatcherSteps.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", span="44-50"];
m7_9 [cluster="HangFire.States.FailedState.SerializeData()", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.States.FailedState.SerializeData()", span="42-42"];
m7_29 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21"];
m7_12 [cluster="System.Exception.GetType()", file="DequeuedJobsWatcherSteps.cs", label="Entry System.Exception.GetType()", span="0-0"];
m7_25 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", span="39-39"];
m7_26 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", color=green, community=0, file="DequeuedJobsWatcherSteps.cs", label="var watcher = new DequeuedJobsWatcher(RedisFactory.BasicManager)", prediction=15, span="41-41"];
m7_27 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", label="watcher.FindAndRequeueTimedOutJobs()", span="43-43"];
m7_28 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", span="39-39"];
m7_11 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m7_14 [file="DequeuedJobsWatcherSteps.cs", label="HangFire.States.FailedState", span=""];
m10_0 [cluster="HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="IJobClient.cs", label="Entry HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="7-7"];
m10_1 [cluster="HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="IJobClient.cs", label="Exit HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="7-7"];
m13_0 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="JobClient.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m13_1 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", file="JobClient.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.Expire(string, System.TimeSpan)", span="7-7"];
m13_2 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="JobClient.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m13_3 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", file="JobClient.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.Persist(string)", span="8-8"];
m13_6 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="JobClient.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m13_7 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="JobClient.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="12-12"];
m13_4 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="JobClient.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m13_5 [cluster="HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="JobClient.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="10-10"];
m14_25 [cluster="Unk.OnScenarioStart", file="JobClient.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m14_29 [cluster="Unk.CollectScenarioErrors", file="JobClient.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m14_57 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="125-125"];
m14_58 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=2, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''If the arguments were not provided, the \'Args\' parameter contains the empty JSON '' +\r\n                    ''value'', ((string[])(null)))", prediction=16, span="127-128"];
m14_59 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=17, span="130-130"];
m14_60 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=17, span="132-132"];
m14_61 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create an argumentless job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=19, span="134-134"];
m14_62 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=2, file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", prediction=20, span="136-138"];
m14_63 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=2, file="JobClient.feature.cs", label="table2.AddRow(new string[] {\r\n                        ''Args'',\r\n                        ''{}''})", prediction=21, span="139-141"];
m14_64 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''it has the following parameters:'', ((string)(null)), table2, ''Then '')", prediction=20, span="143-143"];
m14_65 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=17, span="145-145"];
m14_66 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterContainsTheEmptyJSONValue()", span="125-125"];
m14_21 [cluster="Unk.OnScenarioEnd", file="JobClient.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m14_34 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", span="81-81"];
m14_35 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The client creates the job in the storage'', ((string[])(null)))", prediction=24, span="83-83"];
m14_36 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=17, span="85-85"];
m14_37 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=17, span="87-87"];
m14_38 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=27, span="89-89"];
m14_39 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''the storage contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=28, span="91-91"];
m14_40 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=17, span="93-93"];
m14_41 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheClientCreatesTheJobInTheStorage()", span="81-81"];
m14_30 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.FeatureBackground()", span="70-70"];
m14_31 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", prediction=30, span="74-74"];
m14_32 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureBackground()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.FeatureBackground()", span="70-70"];
m14_78 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", span="179-179"];
m14_79 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The given state was applied to the job'', ((string[])(null)))", prediction=31, span="181-181"];
m14_80 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=17, span="183-183"];
m14_81 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=17, span="185-185"];
m14_82 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=34, span="187-187"];
m14_83 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''the given state was applied to it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=35, span="189-189"];
m14_84 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=17, span="191-191"];
m14_85 [cluster="HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheGivenStateWasAppliedToTheJob()", span="179-179"];
m14_5 [cluster="Unk.GetTestRunner", file="JobClient.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m14_18 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", span="55-55"];
m14_19 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.OnScenarioEnd()", prediction=37, span="57-57"];
m14_20 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", span="55-55"];
m14_45 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="99-99"];
m14_46 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job contains the \'Type\' parameter equal to the assembly qualified type name'', ((string[])(null)))", prediction=38, span="101-101"];
m14_47 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=17, span="103-103"];
m14_48 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=17, span="105-105"];
m14_49 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=41, span="107-107"];
m14_50 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=2, file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", prediction=42, span="109-111"];
m14_51 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=2, file="JobClient.feature.cs", label="table1.AddRow(new string[] {\r\n                        ''Type'',\r\n                        ''<Assembly qualified name of \'HangFire.Tests.TestJob\' type>''})", prediction=43, span="112-114"];
m14_52 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''it has the following parameters:'', ((string)(null)), table1, ''Then '')", prediction=42, span="116-116"];
m14_53 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=17, span="118-118"];
m14_54 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheJobContainsTheTypeParameterEqualToTheAssemblyQualifiedTypeName()", span="99-99"];
m14_94 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", span="215-215"];
m14_95 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty type causes an exception'', ((string[])(null)))", prediction=46, span="217-217"];
m14_96 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=17, span="219-219"];
m14_97 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=17, span="221-221"];
m14_98 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job with null type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=49, span="223-223"];
m14_99 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=50, span="225-225"];
m14_100 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=17, span="227-227"];
m14_101 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeCausesAnException()", span="215-215"];
m14_86 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", span="197-197"];
m14_87 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty id causes an exception'', ((string[])(null)))", prediction=52, span="199-199"];
m14_88 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=17, span="201-201"];
m14_89 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=17, span="203-203"];
m14_90 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job with an empty id'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=55, span="205-205"];
m14_91 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=56, span="207-207"];
m14_92 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=17, span="209-209"];
m14_93 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdCausesAnException()", span="197-197"];
m14_13 [cluster="Unk.OnFeatureEnd", file="JobClient.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m14_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobClient.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m14_0 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m14_1 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobClient.feature.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", prediction=58, span="32-32"];
m14_2 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobClient'', '''', ProgrammingLanguage.CSharp, ((string[])(null)))", prediction=59, span="33-33"];
m14_3 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="JobClient.feature.cs", label="testRunner.OnFeatureStart(featureInfo)", prediction=60, span="34-34"];
m14_4 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m14_43 [cluster="Unk.When", file="JobClient.feature.cs", label="Entry Unk.When", span=""];
m14_67 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="151-151"];
m14_68 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Arguments are converted to a JSON string and contained in the \'Args\' parameter'', ((string[])(null)))", prediction=61, span="153-153"];
m14_69 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=17, span="155-155"];
m14_70 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=17, span="157-157"];
m14_71 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=2, file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", prediction=64, span="159-161"];
m14_72 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=2, file="JobClient.feature.cs", label="table3.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''5''})", prediction=65, span="162-164"];
m14_73 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=2, file="JobClient.feature.cs", label="table3.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Deleted''})", prediction=64, span="165-167"];
m14_74 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job with the following arguments:'', ((string)(null)), table3, ''When '')", prediction=64, span="169-169"];
m14_75 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''the job contains all of the above arguments in the JSON format'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=68, span="171-171"];
m14_76 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=17, span="173-173"];
m14_77 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ArgumentsAreConvertedToAJSONStringAndContainedInTheArgsParameter()", span="151-151"];
m14_56 [cluster="Unk.AddRow", file="JobClient.feature.cs", label="Entry Unk.AddRow", span=""];
m14_102 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", span="234-234"];
m14_103 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=2, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with the type, that is not derived from the \'BackgroundJob\' causes'' +\r\n                    '' an exception'', ((string[])(null)))", prediction=70, span="236-237"];
m14_104 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=17, span="239-239"];
m14_105 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=17, span="241-241"];
m14_106 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job with the incorrect type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=73, span="243-243"];
m14_107 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=74, span="245-245"];
m14_108 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=17, span="247-247"];
m14_109 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobCausesAnException()", span="234-234"];
m14_110 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", span="253-253"];
m14_111 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty state causes an exception'', ((string[])(null)))", prediction=76, span="255-255"];
m14_112 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", prediction=17, span="257-257"];
m14_113 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.FeatureBackground()", prediction=17, span="259-259"];
m14_114 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.When(''I create a job with an empty state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", prediction=79, span="261-261"];
m14_115 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' is thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", prediction=80, span="263-263"];
m14_116 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", color=green, community=0, file="JobClient.feature.cs", label="this.ScenarioCleanup()", prediction=17, span="265-265"];
m14_117 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateCausesAnException()", span="253-253"];
m14_9 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", span="38-38"];
m14_10 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.OnFeatureEnd()", prediction=82, span="40-40"];
m14_11 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", color=green, community=0, file="JobClient.feature.cs", label="testRunner = null", prediction=83, span="41-41"];
m14_12 [cluster="HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.FeatureTearDown()", span="38-38"];
m14_42 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m14_44 [cluster="Unk.Then", file="JobClient.feature.cs", label="Entry Unk.Then", span=""];
m14_14 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="45-45"];
m14_15 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", color=green, community=0, file="JobClient.feature.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobClient''))", prediction=84, span="47-48"];
m14_16 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", color=green, community=0, file="JobClient.feature.cs", label="HangFire.Tests.Client.JobClientFeature.FeatureSetup(null)", prediction=85, span="50-50"];
m14_17 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="45-45"];
m14_22 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="60-60"];
m14_23 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", color=green, community=0, file="JobClient.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", prediction=86, span="62-62"];
m14_24 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="60-60"];
m14_33 [cluster="Unk.Given", file="JobClient.feature.cs", label="Entry Unk.Given", span=""];
m14_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m14_55 [cluster="TechTalk.SpecFlow.Table.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m14_26 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="65-65"];
m14_27 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", color=green, community=0, file="JobClient.feature.cs", label="testRunner.CollectScenarioErrors()", prediction=87, span="67-67"];
m14_28 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="65-65"];
m14_8 [cluster="Unk.OnFeatureStart", file="JobClient.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m14_118 [file="JobClient.feature.cs", label="HangFire.Tests.Client.JobClientFeature", span=""];
m16_50 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="JobFetcher.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="56-56"];
m16_51 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="JobFetcher.feature.cs", label="var server = CreateHeartbeat()", span="58-58"];
m16_52 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="JobFetcher.feature.cs", label="server.Execute(_cts.Token)", span="60-60"];
m16_53 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="JobFetcher.feature.cs", label="_connection.Verify(x => x.Heartbeat(ServerId))", span="62-62"];
m16_54 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", file="JobFetcher.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_UpdateServerHeartbeat()", span="56-56"];
m16_8 [cluster="Mock<IStorageConnection>.cstr", file="JobFetcher.feature.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m16_34 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="JobFetcher.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", span="45-45"];
m16_35 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="JobFetcher.feature.cs", label="var server = CreateHeartbeat()", span="47-47"];
m16_36 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="JobFetcher.feature.cs", label="server.Execute(_cts.Token)", span="49-49"];
m16_38 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="JobFetcher.feature.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="52-52"];
m16_39 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", file="JobFetcher.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Execute_TakesAConnection_AndDisposesIt()", span="45-45"];
m16_10 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="JobFetcher.feature.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m16_21 [cluster="Unk.>", file="JobFetcher.feature.cs", label="Entry Unk.>", span=""];
m16_16 [cluster="Unk.GetConnection", file="JobFetcher.feature.cs", label="Entry Unk.GetConnection", span=""];
m16_40 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="JobFetcher.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="65-65"];
m16_59 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="JobFetcher.feature.cs", label="return new ServerHeartbeat(_storage.Object, ServerId);", span="67-67"];
m16_60 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", file="JobFetcher.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.CreateHeartbeat()", span="65-65"];
m16_58 [cluster="Unk.Heartbeat", file="JobFetcher.feature.cs", label="Entry Unk.Heartbeat", span=""];
m16_11 [cluster="Unk.Setup", file="JobFetcher.feature.cs", label="Entry Unk.Setup", span=""];
m16_49 [cluster="Unk.Dispose", file="JobFetcher.feature.cs", label="Entry Unk.Dispose", span=""];
m16_9 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JobFetcher.feature.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m16_55 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="62-62"];
m16_13 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="23-23"];
m16_14 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.GetConnection()", span="23-23"];
m16_15 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="23-23"];
m16_23 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="30-30"];
m16_24 [cluster="lambda expression", file="JobFetcher.feature.cs", label="new ServerHeartbeat(null, ServerId)", span="30-30"];
m16_25 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="30-30"];
m16_31 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="39-39"];
m16_32 [cluster="lambda expression", file="JobFetcher.feature.cs", label="new ServerHeartbeat(_storage.Object, null)", span="39-39"];
m16_33 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="39-39"];
m16_43 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="51-51"];
m16_46 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Entry lambda expression", span="52-52"];
m16_45 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="51-51"];
m16_47 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.Dispose()", span="52-52"];
m16_48 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="52-52"];
m16_56 [cluster="lambda expression", file="JobFetcher.feature.cs", label="x.Heartbeat(ServerId)", span="62-62"];
m16_57 [cluster="lambda expression", file="JobFetcher.feature.cs", label="Exit lambda expression", span="62-62"];
m16_17 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobFetcher.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27"];
m16_18 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobFetcher.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(null, ServerId))", span="29-30"];
m16_19 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobFetcher.feature.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="32-32"];
m16_20 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="JobFetcher.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27"];
m16_41 [cluster="Unk.Execute", file="JobFetcher.feature.cs", label="Entry Unk.Execute", span=""];
m16_12 [cluster="Unk.Returns", file="JobFetcher.feature.cs", label="Entry Unk.Returns", span=""];
m16_26 [cluster="ServerHeartbeat.cstr", file="JobFetcher.feature.cs", label="Entry ServerHeartbeat.cstr", span=""];
m16_42 [cluster="Unk.Verify", file="JobFetcher.feature.cs", label="Entry Unk.Verify", span=""];
m16_7 [cluster="Mock<JobStorage>.cstr", file="JobFetcher.feature.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m16_0 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="JobFetcher.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16"];
m16_1 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="JobFetcher.feature.cs", label="_storage = new Mock<JobStorage>()", span="18-18"];
m16_2 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="JobFetcher.feature.cs", label="_connection = new Mock<IStorageConnection>()", span="19-19"];
m16_3 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="JobFetcher.feature.cs", label="_cts = new CancellationTokenSource()", span="20-20"];
m16_4 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="JobFetcher.feature.cs", label="_cts.Cancel()", span="21-21"];
m16_5 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="JobFetcher.feature.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="23-23"];
m16_6 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", file="JobFetcher.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.ServerHeartbeatFacts()", span="16-16"];
m16_27 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobFetcher.feature.cs", label="Entry Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="36-36"];
m16_28 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobFetcher.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerHeartbeat(_storage.Object, null))", span="38-39"];
m16_29 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobFetcher.feature.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="41-41"];
m16_30 [cluster="Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", file="JobFetcher.feature.cs", label="Exit Hangfire.Core.Tests.Server.ServerHeartbeatFacts.Ctor_ThrowsAnException_WhenServerIdIsNull()", span="36-36"];
m16_61 [file="JobFetcher.feature.cs", label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", span=""];
m17_39 [cluster="System.TimeSpan.FromMilliseconds(double)", file="JobFetcherSteps.cs", label="Entry System.TimeSpan.FromMilliseconds(double)", span="0-0"];
m17_62 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="96-96"];
m17_63 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs", label=_queues, span="98-98"];
m17_64 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs", label="Then(String.Format(''the '{0}' queue is empty'', queue))", span="100-100"];
m17_65 [cluster="HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenAllQueuesAreEmpty()", span="96-96"];
m17_56 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", span="89-89"];
m17_57 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="JobFetcherSteps.cs", label="Assert.IsNotNull(_exception)", span="91-91"];
m17_58 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="JobFetcherSteps.cs", label="Assert.AreEqual(typeof(OperationCanceledException).Name, _exception.GetType().Name)", span="92-92"];
m17_59 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherDoesNotReturnAnyJob()", span="89-89"];
m17_3 [cluster="string.Format(string, object)", file="JobFetcherSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m17_41 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="JobFetcherSteps.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m17_34 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="JobFetcherSteps.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26"];
m17_10 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="34-34"];
m17_11 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs", label="table.Rows", span="36-36"];
m17_16 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs", label="_queues = table.Rows.Select(x => x[''Queue'']).ToList()", span="44-44"];
m17_12 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs", label="var i = 0", span="38-38"];
m17_13 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs", label="i < int.Parse(row[''Jobs''])", span="38-38"];
m17_14 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs", label="Given(String.Format(''a job in the '{0}' queue'', row[''Queue'']))", span="40-40"];
m17_15 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs", label="i++", span="38-38"];
m17_17 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFollowingQueues(Table)", span="34-34"];
m17_0 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="22-22"];
m17_1 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="JobFetcherSteps.cs", label="Given(String.Format(''the fetcher listening the '{0}' queue'', QueueSteps.DefaultQueue))", span="24-24"];
m17_2 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue()", span="22-22"];
m17_52 [cluster="Unk.AreEqual", file="JobFetcherSteps.cs", label="Entry Unk.AreEqual", span=""];
m17_40 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="JobFetcherSteps.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m17_18 [cluster="Unk.Parse", file="JobFetcherSteps.cs", label="Entry Unk.Parse", span=""];
m17_5 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="28-28"];
m17_6 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="_fetcher = new JobFetcher(RedisFactory.BasicManager, queue, TimeSpan.FromSeconds(1))", span="30-30"];
m17_7 [cluster="HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.GivenTheFetcherListeningTheQueue(string)", span="28-28"];
m17_48 [cluster="Unk.When", file="JobFetcherSteps.cs", label="Entry Unk.When", span=""];
m17_53 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="83-83"];
m17_54 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs", label="Assert.AreEqual(jobId, _payload.Id)", span="85-85"];
m17_55 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob(string)", span="83-83"];
m17_32 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JobFetcherSteps.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m17_33 [cluster="System.Threading.Tasks.TaskFactory.StartNew(System.Action)", file="JobFetcherSteps.cs", label="Entry System.Threading.Tasks.TaskFactory.StartNew(System.Action)", span="0-0"];
m17_25 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="48-48"];
m17_26 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs", label="var cts = new CancellationTokenSource()", span="50-50"];
m17_27 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs", label="Task.Factory.StartNew(() =>\r\n                {\r\n                    Thread.Sleep(TimeSpan.FromMilliseconds(100)); \r\n                    cts.Cancel();\r\n                })", span="51-55"];
m17_28 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs", label="_payload = _fetcher.DequeueJob(cts.Token)", span="59-59"];
m17_29 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs", label=Exception, span="61-61"];
m17_30 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs", label="_exception = ex", span="63-63"];
m17_31 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesAJob()", span="48-48"];
m17_35 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Entry lambda expression", span="51-55"];
m17_22 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Entry lambda expression", span="44-44"];
m17_23 [cluster="lambda expression", file="JobFetcherSteps.cs", label="x[''Queue'']", span="44-44"];
m17_24 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Exit lambda expression", span="44-44"];
m17_37 [cluster="lambda expression", file="JobFetcherSteps.cs", label="cts.Cancel()", span="54-54"];
m17_36 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Thread.Sleep(TimeSpan.FromMilliseconds(100))", span="53-53"];
m17_38 [cluster="lambda expression", file="JobFetcherSteps.cs", label="Exit lambda expression", span="51-55"];
m17_60 [cluster="Unk.IsNotNull", file="JobFetcherSteps.cs", label="Entry Unk.IsNotNull", span=""];
m17_61 [cluster="System.Exception.GetType()", file="JobFetcherSteps.cs", label="Entry System.Exception.GetType()", span="0-0"];
m17_20 [cluster="Unk.Select", file="JobFetcherSteps.cs", label="Entry Unk.Select", span=""];
m17_66 [cluster="Unk.Then", file="JobFetcherSteps.cs", label="Entry Unk.Then", span=""];
m17_4 [cluster="Unk.Given", file="JobFetcherSteps.cs", label="Entry Unk.Given", span=""];
m17_42 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="68-68"];
m17_43 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="var i = 0", span="70-70"];
m17_44 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="i < count", span="70-70"];
m17_46 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="i++", span="70-70"];
m17_45 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="When(''it dequeues a job'')", span="72-72"];
m17_47 [cluster="HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.WhenItDequeuesJobs(int)", span="68-68"];
m17_49 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs", label="Entry HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="77-77"];
m17_50 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs", label="Assert.AreEqual(JobSteps.DefaultJobId, _payload.Id)", span="79-79"];
m17_51 [cluster="HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", file="JobFetcherSteps.cs", label="Exit HangFire.Tests.JobFetcherSteps.ThenTheFetcherReturnsTheJob()", span="77-77"];
m17_21 [cluster="Unk.ToList", file="JobFetcherSteps.cs", label="Entry Unk.ToList", span=""];
m17_19 [cluster="Unk.Format", file="JobFetcherSteps.cs", label="Entry Unk.Format", span=""];
m17_8 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="JobFetcherSteps.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12"];
m17_67 [file="JobFetcherSteps.cs", label="HangFire.Tests.JobFetcherSteps", span=""];
m17_68 [file="JobFetcherSteps.cs", label=cts, span=""];
m18_29 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="JobHelper.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m18_13 [cluster="lambda expression", file="JobHelper.cs", label="Exit lambda expression", span="24-24"];
m18_8 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="JobHelper.cs", label="jobType == null", span="22-22"];
m18_9 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="JobHelper.cs", label="throw new ArgumentNullException(''jobType'');", span="22-22"];
m18_10 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="JobHelper.cs", label="var attribute = jobType\r\n                .GetCustomAttributes(true)\r\n                .Cast<QueueAttribute>()\r\n                .FirstOrDefault()", span="24-27"];
m18_21 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="JobHelper.cs", label="var state = CreateState()", prediction=88, span="37-37"];
m18_22 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="JobHelper.cs", label="var data = state.SerializeData()", span="39-39"];
m18_23 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="JobHelper.cs", label="Assert.Equal(JobHelper.SerializeDateTime(state.StartedAt), data[''StartedAt''])", span="41-41"];
m18_36 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IgnoreExceptions_ReturnsFalse()", file="JobHelper.cs", label="var state = CreateState()", span="57-57"];
m18_40 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.CreateState()", file="JobHelper.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.CreateState()", span="62-62"];
m18_30 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="JobHelper.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="47-47"];
m18_31 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="JobHelper.cs", label="var state = CreateState()", span="49-49"];
m18_32 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="JobHelper.cs", label="Assert.False(state.IsFinal)", span="51-51"];
m18_14 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="JobHelper.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m18_15 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="JobHelper.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m18_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="JobHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m18_17 [cluster="HangFire.JobHelper.ToJson(object)", file="JobHelper.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m18_20 [cluster="Unk.SerializeToString", file="JobHelper.cs", label="Entry Unk.SerializeToString", span=""];
m18_24 [cluster="Unk.>", file="JobHelper.cs", label="Entry Unk.>", span=""];
m18_25 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m18_26 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs", label="TimeSpan elapsedTime = value - Epoch", span="46-46"];
m18_18 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.CreateState()", file="JobHelper.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.CreateState()", span="62-62"];
m18_19 [cluster="HangFire.JobHelper.ToJson(object)", file="JobHelper.cs", label="Exit HangFire.JobHelper.ToJson(object)", span="32-32"];
m18_33 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="JobHelper.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="47-47"];
m18_34 [cluster="Unk.False", file="JobHelper.cs", label="Entry Unk.False", span=""];
m18_35 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IgnoreExceptions_ReturnsFalse()", file="JobHelper.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IgnoreExceptions_ReturnsFalse()", span="55-55"];
m18_0 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="JobHelper.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m18_1 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="JobHelper.cs", label="var type = Type.GetType(jobType)", span="11-11"];
m18_2 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="JobHelper.cs", label="type == null", span="12-12"];
m18_28 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs", label="Exit HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m18_37 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobHelper.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m18_38 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobHelper.cs", label="return FromTimestamp(long.Parse(value));", span="62-62"];
m18_27 [cluster="HangFire.States.ProcessingState.SerializeData()", file="JobHelper.cs", label="Entry HangFire.States.ProcessingState.SerializeData()", span="45-45"];
m18_3 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="JobHelper.cs", label="return null;", span="14-14"];
m18_7 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="JobHelper.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m18_12 [cluster="lambda expression", file="JobHelper.cs", label="new ProcessingState(String.Empty, WorkerNumber)", span="24-24"];
m18_41 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="JobHelper.cs", label="HangFire.Core.Tests.States.ProcessingStateFacts", span=""];
m18_42 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="JobHelper.cs", label="String.IsNullOrEmpty(value)", span="67-67"];
m18_44 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="JobHelper.cs", label="return FromStringTimestamp(value);", span="72-72"];
m18_43 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="JobHelper.cs", label="return null;", span="69-69"];
m18_45 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="JobHelper.cs", label="Exit HangFire.JobHelper.FromNullableStringTimestamp(string)", span="65-65"];
m18_6 [cluster="lambda expression", file="JobHelper.cs", label="Exit lambda expression", span="17-17"];
m18_39 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobHelper.cs", label="Exit HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m18_46 [cluster="string.IsNullOrEmpty(string)", file="JobHelper.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m18_5 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="JobHelper.cs", label="Exit HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m18_4 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="JobHelper.cs", label="return GetQueue(type);", span="17-17"];
m19_42 [cluster="System.Threading.Thread.Join()", file="JobManager.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m19_65 [cluster="string.Format(string, params object[])", file="JobManager.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m19_22 [cluster="System.Threading.Thread.Start()", file="JobManager.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m19_20 [cluster="PrioritizedJobFetcher.cstr", file="JobManager.cs", label="Entry PrioritizedJobFetcher.cstr", span=""];
m19_62 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="JobManager.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0"];
m19_45 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Dispose()", file="JobManager.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Dispose()", span="0-0"];
m19_46 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="JobManager.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m19_15 [cluster="string.Format(string, object)", file="JobManager.cs", label="Entry string.Format(string, object)", span="0-0"];
m19_29 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="JobManager.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m19_47 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="JobManager.cs", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85"];
m19_48 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", color=green, community=0, file="JobManager.cs", label="_freeWorkers.Add(worker)", prediction=89, span="87-87"];
m19_49 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="JobManager.cs", label="Exit HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85"];
m19_16 [cluster="Unk.Info", file="JobManager.cs", label="Entry Unk.Info", span=""];
m19_17 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="JobManager.cs", label="Entry HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
m19_51 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="Entry HangFire.Server.JobManager.Work()", span="90-90"];
m19_54 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="worker = _freeWorkers.Take(_cts.Token)", span="99-99"];
m19_56 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="var jobId = _fetcher.DequeueJob(_cts.Token)", span="103-103"];
m19_60 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="_logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. Jobs  will not be processed by this server.''),\r\n                    ex)", span="113-116"];
m19_53 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="Worker worker", span="96-96"];
m19_55 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="worker.Crashed", span="101-101"];
m19_57 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="worker.Process(jobId)", span="104-104"];
m19_59 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label=Exception, span="111-111"];
m19_52 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label=true, span="94-94"];
m19_58 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label=OperationCanceledException, span="107-107"];
m19_61 [cluster="HangFire.Server.JobManager.Work()", file="JobManager.cs", label="Exit HangFire.Server.JobManager.Work()", span="90-90"];
m19_63 [cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="JobManager.cs", label="Entry HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="7-7"];
m19_50 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="JobManager.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m19_66 [cluster="Unk.Fatal", file="JobManager.cs", label="Entry Unk.Fatal", span=""];
m19_14 [cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="JobManager.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0"];
m19_0 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="Entry HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m19_1 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="JobManager.cs", label="_workers = new List<Worker>(workerCount)", prediction=90, span="28-28"];
m19_30 [cluster="HangFire.Server.Worker.SendStop()", file="JobManager.cs", label="Entry HangFire.Server.Worker.SendStop()", span="53-53"];
m19_23 [cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs", label="Entry HangFire.Server.JobManager.SendStop()", span="52-52"];
m19_26 [cluster="HangFire.Server.JobManager.SendStop()", color=green, community=0, file="JobManager.cs", label=_workers, prediction=89, span="58-58"];
m19_25 [cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs", label="_cts.Cancel()", span="56-56"];
m19_27 [cluster="HangFire.Server.JobManager.SendStop()", color=green, community=0, file="JobManager.cs", label="worker.SendStop()", prediction=92, span="60-60"];
m19_24 [cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs", label="_stopSent = true", span="54-54"];
m19_28 [cluster="HangFire.Server.JobManager.SendStop()", file="JobManager.cs", label="Exit HangFire.Server.JobManager.SendStop()", span="52-52"];
m19_13 [cluster="System.Collections.Generic.List<T>.List(int)", file="JobManager.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m19_19 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobManager.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m19_2 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="JobManager.cs", label="_freeWorkers = new BlockingCollection<Worker>()", prediction=93, span="29-29"];
m19_6 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="JobManager.cs", label="_workers.Add(\r\n                    new Worker(redisManager, this, new WorkerContext(context, i)))", prediction=89, span="35-36"];
m19_5 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="i < workerCount", span="33-33"];
m19_4 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="var i = 0", span="33-33"];
m19_7 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="i++", span="33-33"];
m19_9 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="JobManager.cs", label="_fetcher = new PrioritizedJobFetcher(\r\n                redisManager, queues, workerCount)", prediction=95, span="41-42"];
m19_8 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_logger.Info(''Workers were started.'')", span="39-39"];
m19_10 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="JobManager.cs", label="_managerThread = new Thread(Work)\r\n                {\r\n                    Name = typeof(JobManager).Name,\r\n                    IsBackground = true\r\n                }", prediction=96, span="44-48"];
m19_3 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_logger.Info(String.Format(''Starting {0} workers...'', workerCount))", span="31-31"];
m19_11 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="_managerThread.Start()", span="49-49"];
m19_12 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="JobManager.cs", label="Exit HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m19_31 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="64-64"];
m19_32 [cluster="HangFire.Server.JobManager.Dispose()", color=green, community=0, file="JobManager.cs", label="!_stopSent", prediction=89, span="66-66"];
m19_33 [cluster="HangFire.Server.JobManager.Dispose()", color=green, community=0, file="JobManager.cs", label="SendStop()", prediction=89, span="68-68"];
m19_34 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="_managerThread.Join()", span="71-71"];
m19_36 [cluster="HangFire.Server.JobManager.Dispose()", color=green, community=0, file="JobManager.cs", label="worker.Dispose()", prediction=99, span="75-75"];
m19_35 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label=_workers, span="73-73"];
m19_37 [cluster="HangFire.Server.JobManager.Dispose()", color=green, community=0, file="JobManager.cs", label="_logger.Info(''Workers were stopped.'')", prediction=89, span="77-77"];
m19_38 [cluster="HangFire.Server.JobManager.Dispose()", color=green, community=0, file="JobManager.cs", label="_fetcher.Dispose()", prediction=89, span="79-79"];
m19_39 [cluster="HangFire.Server.JobManager.Dispose()", color=green, community=0, file="JobManager.cs", label="_freeWorkers.Dispose()", prediction=89, span="81-81"];
m19_40 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="_cts.Dispose()", span="82-82"];
m19_41 [cluster="HangFire.Server.JobManager.Dispose()", file="JobManager.cs", label="Exit HangFire.Server.JobManager.Dispose()", span="64-64"];
m19_18 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="JobManager.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="9-9"];
m19_44 [cluster="System.IDisposable.Dispose()", file="JobManager.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m19_43 [cluster="HangFire.Server.Worker.Dispose()", file="JobManager.cs", label="Entry HangFire.Server.Worker.Dispose()", span="87-87"];
m19_21 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobManager.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m19_64 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="JobManager.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77"];
m19_67 [file="JobManager.cs", label="HangFire.Server.JobManager", span=""];
m20_34 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobManager.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m20_35 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="JobManager.feature.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="55-55"];
m20_25 [cluster="System.Collections.Generic.List<T>.List()", file="JobManager.feature.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m20_27 [cluster="HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="JobManager.feature.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m20_0 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="JobManager.feature.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9"];
m20_1 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="RecurringJobs = new List<RecurringJobDto>()", prediction=103, span="11-11"];
m20_2 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="var connection = JobStorage.Current.GetConnection()", prediction=104, span="13-13"];
m20_3 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", prediction=105, span="15-15"];
m20_5 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", prediction=106, span="19-19"];
m20_18 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="var stateData = connection.GetStateData(dto.LastJobId)", prediction=107, span="49-49"];
m20_4 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label=ids, prediction=108, span="17-17"];
m20_6 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="hash == null", prediction=109, span="21-21"];
m20_9 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="dto.Cron = hash[''Cron'']", prediction=110, span="28-28"];
m20_10 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", prediction=111, span="32-32"];
m20_14 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="hash.ContainsKey(''NextExecution'')", prediction=106, span="40-40"];
m20_15 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="dto.NextExecution = JobHelper.FromStringTimestamp(hash[''NextExecution''])", prediction=113, span="42-42"];
m20_16 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="hash.ContainsKey(''LastJobId'')", prediction=106, span="45-45"];
m20_17 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="dto.LastJobId = hash[''LastJobId'']", prediction=115, span="47-47"];
m20_21 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="hash.ContainsKey(''LastExecution'')", prediction=106, span="56-56"];
m20_22 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="dto.LastExecution = JobHelper.FromStringTimestamp(hash[''LastExecution''])", prediction=117, span="58-58"];
m20_8 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="var dto = new RecurringJobDto { Id = id }", prediction=118, span="27-27"];
m20_19 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="stateData != null", prediction=119, span="50-50"];
m20_20 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="dto.LastJobState = stateData.Name", prediction=120, span="52-52"];
m20_7 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="RecurringJobs.Add(new RecurringJobDto { Id = id, Removed = true })", prediction=121, span="23-23"];
m20_23 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="RecurringJobs.Add(dto)", prediction=118, span="61-61"];
m20_11 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="dto.Job = invocationData.Deserialize()", prediction=123, span="33-33"];
m20_13 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label="dto.LoadException = ex", prediction=124, span="37-37"];
m20_12 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", color=green, community=0, file="JobManager.feature.cs", label=JobLoadException, prediction=125, span="35-35"];
m20_24 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="JobManager.feature.cs", label="Exit HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9"];
m20_31 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobManager.feature.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m20_32 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobManager.feature.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m20_33 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="JobManager.feature.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m20_29 [cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="JobManager.feature.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m20_36 [cluster="HangFire.Storage.IStorageConnection.GetStateData(string)", file="JobManager.feature.cs", label="Entry HangFire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m20_30 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", file="JobManager.feature.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", span="68-68"];
m20_28 [cluster="string.Format(string, object)", file="JobManager.feature.cs", label="Entry string.Format(string, object)", span="0-0"];
m20_26 [cluster="HangFire.JobStorage.GetConnection()", file="JobManager.feature.cs", label="Entry HangFire.JobStorage.GetConnection()", span="56-56"];
m20_37 [file="JobManager.feature.cs", label="HangFire.Web.Pages.RecurringJobsPage", span=""];
m22_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobPerformer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m22_44 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="Entry HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", span="68-68"];
m22_45 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="filter.OnPerforming(preContext)", span="73-73"];
m22_46 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="preContext.Canceled", span="74-74"];
m22_47 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="return new PerformedContext(\r\n                    preContext, true, null);", span="76-77"];
m22_50 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="postContext = continuation()", span="84-84"];
m22_53 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="postContext = new PerformedContext(\r\n                    preContext, false, ex)", span="89-90"];
m22_54 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="filter.OnPerformed(postContext)", span="91-91"];
m22_58 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="filter.OnPerformed(postContext)", span="101-101"];
m22_48 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="var wasError = false", span="80-80"];
m22_49 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="PerformedContext postContext", span="81-81"];
m22_51 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label=Exception, span="86-86"];
m22_57 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="!wasError", span="99-99"];
m22_52 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="wasError = true", span="88-88"];
m22_55 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="!postContext.ExceptionHandled", span="93-93"];
m22_59 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="return postContext;", span="104-104"];
m22_56 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="throw;", span="95-95"];
m22_60 [cluster="HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", file="JobPerformer.cs", label="Exit HangFire.Server.JobPerformer.InvokePerformFilter(HangFire.Filters.IServerFilter, HangFire.Filters.PerformingContext, System.Func<HangFire.Filters.PerformedContext>)", span="68-68"];
m22_13 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="JobPerformer.cs", label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33"];
m22_14 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="JobPerformer.cs", label="PerformJobWithFilters(context, _serverFilters)", span="37-37"];
m22_16 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="JobPerformer.cs", label="var exceptionContext = new ServerExceptionContext(context, ex)", span="41-41"];
m22_15 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="JobPerformer.cs", label=Exception, span="39-39"];
m22_17 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="JobPerformer.cs", label="InvokeServerExceptionFilters(exceptionContext, _serverExceptionFilters)", span="42-42"];
m22_18 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="JobPerformer.cs", label="!exceptionContext.ExceptionHandled", span="44-44"];
m22_19 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="JobPerformer.cs", label="throw;", span="46-46"];
m22_20 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="JobPerformer.cs", label="Exit HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33"];
m22_21 [cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", file="JobPerformer.cs", label="Entry HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", span="51-51"];
m22_24 [cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", file="JobPerformer.cs", label="var preContext = new PerformingContext(context)", span="55-55"];
m22_25 [cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", file="JobPerformer.cs", label="Func<PerformedContext> continuation = () =>\r\n            {\r\n                context.JobDescriptor.Perform();\r\n                return new PerformedContext(context, false, null);\r\n            }", span="56-60"];
m22_26 [cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", file="JobPerformer.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokePerformFilter(filter, preContext, next))", span="62-63"];
m22_27 [cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", file="JobPerformer.cs", label="thunk()", span="65-65"];
m22_28 [cluster="HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", file="JobPerformer.cs", label="Exit HangFire.Server.JobPerformer.PerformJobWithFilters(HangFire.Filters.PerformContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>)", span="51-51"];
m22_38 [cluster="HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", file="JobPerformer.cs", label="Entry HangFire.Filters.PerformedContext.PerformedContext(HangFire.Filters.PerformContext, bool, System.Exception)", span="6-6"];
m22_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobPerformer.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m22_32 [cluster="Unk.thunk", file="JobPerformer.cs", label="Entry Unk.thunk", span=""];
m22_67 [cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="JobPerformer.cs", label="Entry HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="4-4"];
m22_29 [cluster="HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", file="JobPerformer.cs", label="Entry HangFire.Filters.PerformingContext.PerformingContext(HangFire.Filters.PerformContext)", span="4-4"];
m22_63 [cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="JobPerformer.cs", label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="5-5"];
m22_22 [cluster="HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", file="JobPerformer.cs", label="Entry HangFire.Filters.ServerExceptionContext.ServerExceptionContext(HangFire.Filters.PerformContext, System.Exception)", span="6-6"];
m22_23 [cluster="HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="Entry HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", span="107-107"];
m22_65 [cluster="HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="filter.OnServerException(context)", span="113-113"];
m22_66 [cluster="HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="Exit HangFire.Server.JobPerformer.InvokeServerExceptionFilters(HangFire.Filters.ServerExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", span="107-107"];
m22_4 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobPerformer.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m22_41 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="63-63"];
m22_34 [cluster="lambda expression", file="JobPerformer.cs", label="context.JobDescriptor.Perform()", span="58-58"];
m22_35 [cluster="lambda expression", file="JobPerformer.cs", label="return new PerformedContext(context, false, null);", span="59-59"];
m22_42 [cluster="lambda expression", file="JobPerformer.cs", label="InvokePerformFilter(filter, preContext, next)", span="63-63"];
m22_39 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="63-63"];
m22_33 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="56-60"];
m22_36 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="56-60"];
m22_40 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="63-63"];
m22_43 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="63-63"];
m22_37 [cluster="HangFire.Server.ServerJobDescriptor.Perform()", file="JobPerformer.cs", label="Entry HangFire.Server.ServerJobDescriptor.Perform()", span="79-79"];
m22_31 [cluster="Unk.Aggregate", file="JobPerformer.cs", label="Entry Unk.Aggregate", span=""];
m22_61 [cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="JobPerformer.cs", label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="4-4"];
m22_3 [cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="Entry HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", span="22-22"];
m22_5 [cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="serverFilters == null", span="26-26"];
m22_7 [cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="serverExceptionFilters == null", span="27-27"];
m22_9 [cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="_serverFilters = serverFilters", span="29-29"];
m22_10 [cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="_serverExceptionFilters = serverExceptionFilters", span="30-30"];
m22_6 [cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="throw new ArgumentNullException(''serverFilters'');", span="26-26"];
m22_8 [cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="throw new ArgumentNullException(''serverExceptionFilters'');", span="27-27"];
m22_11 [cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobPerformer.cs", label="Exit HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", span="22-22"];
m22_62 [cluster="System.Func<TResult>.Invoke()", file="JobPerformer.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m22_0 [cluster="HangFire.Server.JobPerformer.JobPerformer()", file="JobPerformer.cs", label="Entry HangFire.Server.JobPerformer.JobPerformer()", span="10-10"];
m22_2 [cluster="HangFire.Server.JobPerformer.JobPerformer()", file="JobPerformer.cs", label="Exit HangFire.Server.JobPerformer.JobPerformer()", span="10-10"];
m22_68 [file="JobPerformer.cs", label="HangFire.Server.JobPerformer", span=""];
m22_69 [file="JobPerformer.cs", label="HangFire.Filters.PerformContext", span=""];
m22_70 [file="JobPerformer.cs", label=preContext, span=""];
m22_71 [file="JobPerformer.cs", label="System.Func<HangFire.Filters.PerformedContext>", span=""];
m22_72 [file="JobPerformer.cs", label="HangFire.Filters.IServerFilter", span=""];
m23_24 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="_stopped.Set()", span="72-72"];
m23_25 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="_serverThread.Join()", span="73-73"];
m23_26 [cluster="HangFire.Server.JobServer.Dispose()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.Dispose()", span="70-70"];
m23_16 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobServer.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m23_20 [cluster="HangFire.JobActivator.JobActivator()", file="JobServer.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m23_28 [cluster="System.Threading.Thread.Join()", file="JobServer.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m23_50 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.RunServer()", span="98-98"];
m23_51 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="AnnounceServer()", span="102-102"];
m23_52 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="StartServer()", span="103-103"];
m23_54 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="Heartbeat()", span="107-107"];
m23_55 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="_stopped.WaitOne(HeartbeatInterval)", span="109-109"];
m23_56 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="StopServer()", span="115-115"];
m23_57 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="RemoveServer(_redis, _context.ServerName)", span="116-116"];
m23_59 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="120-120"];
m23_53 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label=true, span="105-105"];
m23_58 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label=Exception, span="118-118"];
m23_60 [cluster="HangFire.Server.JobServer.RunServer()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.RunServer()", span="98-98"];
m23_88 [cluster="Unk.SetRangeInHash", file="JobServer.cs", label="Entry Unk.SetRangeInHash", span=""];
m23_22 [cluster="System.Threading.Thread.Start()", file="JobServer.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m23_40 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="JobServer.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21"];
m23_95 [cluster="Unk.SetEntryInHash", file="JobServer.cs", label="Entry Unk.SetEntryInHash", span=""];
m23_80 [cluster="Unk.AddItemToSet", file="JobServer.cs", label="Entry Unk.AddItemToSet", span=""];
m23_84 [cluster="string.Format(string, object)", file="JobServer.cs", label="Entry string.Format(string, object)", span="0-0"];
m23_87 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobServer.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63"];
m23_39 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="JobServer.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21"];
m23_108 [cluster="Unk.RemoveEntry", file="JobServer.cs", label="Entry Unk.RemoveEntry", span=""];
m23_36 [cluster="JobManager.cstr", file="JobServer.cs", label="Entry JobManager.cstr", span=""];
m23_86 [cluster="int.ToString()", file="JobServer.cs", label="Entry int.ToString()", span="0-0"];
m23_18 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobServer.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m23_38 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="JobServer.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m23_27 [cluster="System.Threading.EventWaitHandle.Set()", file="JobServer.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m23_62 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.Heartbeat()", span="151-151"];
m23_93 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobServer.cs", label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="153-156"];
m23_94 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.Heartbeat()", span="151-151"];
m23_98 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName)))", span="167-169"];
m23_64 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="Entry HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159"];
m23_96 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="var transaction = redis.CreateTransaction()", span="161-161"];
m23_97 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName))", span="163-165"];
m23_99 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="transaction.Commit()", span="171-171"];
m23_100 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobServer.cs", label="Exit HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159"];
m23_42 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.StopServer()", span="89-89"];
m23_43 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="_serverWatchdog.Dispose()", span="91-91"];
m23_44 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="_fetchedJobsWatcher.Dispose()", span="92-92"];
m23_45 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="_schedulePoller.Dispose()", span="93-93"];
m23_46 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="_manager.Dispose()", span="94-94"];
m23_47 [cluster="HangFire.Server.JobServer.StopServer()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.StopServer()", span="89-89"];
m23_0 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33"];
m23_6 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", color=green, community=0, file="JobServer.cs", label="_fetchTimeout = fetchTimeout", prediction=126, span="48-48"];
m23_5 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="_pollInterval = pollInterval", span="47-47"];
m23_7 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="queues == null", span="50-50"];
m23_11 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", color=green, community=0, file="JobServer.cs", label="_context = new ServerContext(\r\n                serverName,\r\n                jobActivator ?? new JobActivator(),\r\n                JobPerformer.Current)", prediction=127, span="57-60"];
m23_9 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="pollInterval != pollInterval.Duration()", span="52-52"];
m23_12 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="_serverThread = new Thread(RunServer)\r\n                {\r\n                    Name = typeof(JobServer).Name,\r\n                    IsBackground = true\r\n                }", span="62-66"];
m23_1 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="_redis = redisManager.GetClient()", span="42-42"];
m23_2 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="_redisManager = redisManager", span="44-44"];
m23_3 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="_workerCount = workerCount", span="45-45"];
m23_4 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="_queues = queues", span="46-46"];
m23_13 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="_serverThread.Start()", span="67-67"];
m23_8 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="throw new ArgumentNullException(''queues'');", span="50-50"];
m23_10 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="54-54"];
m23_14 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="JobServer.cs", label="Exit HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33"];
m23_15 [cluster="Unk.GetClient", file="JobServer.cs", label="Entry Unk.GetClient", span=""];
m23_85 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobServer.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m23_48 [cluster="HangFire.Server.ThreadWrapper.Dispose()", file="JobServer.cs", label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23"];
m23_92 [cluster="Unk.AddItemToList", file="JobServer.cs", label="Entry Unk.AddItemToList", span=""];
m23_61 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="124-124"];
m23_66 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="var transaction = _redis.CreateTransaction()", span="126-126"];
m23_67 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="128-129"];
m23_68 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="131-137"];
m23_69 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label=_queues, span="139-139"];
m23_71 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1))", span="142-144"];
m23_72 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="transaction.Commit()", span="147-147"];
m23_70 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="var queue1 = queue", span="141-141"];
m23_73 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="124-124"];
m23_104 [cluster="Unk.RemoveItemFromSet", file="JobServer.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m23_35 [cluster="ThreadWrapper.cstr", file="JobServer.cs", label="Entry ThreadWrapper.cstr", span=""];
m23_65 [cluster="Unk.Fatal", file="JobServer.cs", label="Entry Unk.Fatal", span=""];
m23_17 [cluster="System.TimeSpan.Duration()", file="JobServer.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m23_29 [cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", label="Entry HangFire.Server.JobServer.StartServer()", span="76-76"];
m23_30 [cluster="HangFire.Server.JobServer.StartServer()", color=green, community=1, file="JobServer.cs", label="_manager = new ThreadWrapper(new JobManager(\r\n                new PrioritizedJobFetcher(_redisManager, _queues, _workerCount, _fetchTimeout),\r\n                _redisManager, \r\n                _context, \r\n                _workerCount))", prediction=128, span="78-82"];
m23_31 [cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_redisManager, _pollInterval))", span="84-84"];
m23_32 [cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher(_redisManager))", span="85-85"];
m23_33 [cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", label="_serverWatchdog = new ThreadWrapper(new ServerWatchdog(_redisManager))", span="86-86"];
m23_34 [cluster="HangFire.Server.JobServer.StartServer()", file="JobServer.cs", label="Exit HangFire.Server.JobServer.StartServer()", span="76-76"];
m23_37 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan)", file="JobServer.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan)", span="13-13"];
m23_105 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="167-169"];
m23_78 [cluster="lambda expression", file="JobServer.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="128-129"];
m23_82 [cluster="lambda expression", file="JobServer.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="131-137"];
m23_90 [cluster="lambda expression", file="JobServer.cs", label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1)", span="142-144"];
m23_77 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="128-129"];
m23_79 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="128-129"];
m23_81 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="131-137"];
m23_83 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="131-137"];
m23_89 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="142-144"];
m23_91 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="142-144"];
m23_102 [cluster="lambda expression", file="JobServer.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName)", span="163-165"];
m23_106 [cluster="lambda expression", file="JobServer.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName))", span="167-169"];
m23_101 [cluster="lambda expression", file="JobServer.cs", label="Entry lambda expression", span="163-165"];
m23_103 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="163-165"];
m23_107 [cluster="lambda expression", file="JobServer.cs", label="Exit lambda expression", span="167-169"];
m23_76 [cluster="Unk.Commit", file="JobServer.cs", label="Entry Unk.Commit", span=""];
m23_63 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="JobServer.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m23_19 [cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobServer.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9"];
m23_75 [cluster="Unk.QueueCommand", file="JobServer.cs", label="Entry Unk.QueueCommand", span=""];
m23_41 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="JobServer.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18"];
m23_49 [cluster="HangFire.Server.JobManager.Dispose()", file="JobServer.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="64-64"];
m23_74 [cluster="Unk.CreateTransaction", file="JobServer.cs", label="Entry Unk.CreateTransaction", span=""];
m23_21 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobServer.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m23_109 [file="JobServer.cs", label="HangFire.Server.JobServer", span=""];
m23_110 [file="JobServer.cs", label=queue1, span=""];
m23_111 [file="JobServer.cs", label=string, span=""];
m24_3 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobSteps.cs", label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m24_4 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobSteps.cs", label="var transaction = context.Connection.CreateWriteTransaction()", span="32-32"];
m24_5 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobSteps.cs", label="context.CandidateState.StateName == SucceededState.Name", span="34-34"];
m24_8 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobSteps.cs", label="context.CandidateState.StateName == FailedState.Name", span="48-48"];
m24_6 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobSteps.cs", label="transaction.Counters.Increment(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="36-40"];
m24_7 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobSteps.cs", label="transaction.Counters.Increment(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="42-46"];
m24_9 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobSteps.cs", label="transaction.Counters.Increment(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'', \r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", span="50-54"];
m24_10 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobSteps.cs", label="transaction.Counters.Increment(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", span="56-60"];
m24_11 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobSteps.cs", label="transaction.Commit()", span="63-63"];
m24_12 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="JobSteps.cs", label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m24_17 [cluster="HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string, System.TimeSpan)", file="JobSteps.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentCounter.Increment(string, System.TimeSpan)", span="7-7"];
m24_14 [cluster="System.DateTime.ToString(string)", file="JobSteps.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m24_13 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="JobSteps.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m24_0 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="JobSteps.cs", label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25"];
m24_1 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="JobSteps.cs", label="Order = 30", span="27-27"];
m24_2 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="JobSteps.cs", label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25"];
m24_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="JobSteps.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13"];
m24_18 [cluster="System.TimeSpan.FromDays(double)", file="JobSteps.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m24_15 [cluster="string.Format(string, object)", file="JobSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m24_16 [cluster="System.DateTime.AddMonths(int)", file="JobSteps.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m24_20 [file="JobSteps.cs", label="HangFire.Filters.StatisticsHistoryFilterAttribute", span=""];
m25_21 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Perform.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m25_26 [cluster="HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="Perform.cs", label="Entry HangFire.Client.IJobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="7-7"];
m25_30 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128"];
m25_31 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", color=green, community=0, file="Perform.cs", label="return In(delay, type, null);", prediction=129, span="130-130"];
m25_27 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", color=green, community=0, file="Perform.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", prediction=130, span="48-48"];
m25_32 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="Perform.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="55-55"];
m25_6 [cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs", label="Exit HangFire.Perform.Async<TJob>()", span="13-13"];
m25_10 [cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs", label="type == null", prediction=131, span="73-73"];
m25_15 [cluster="HangFire.Perform.Async(System.Type, object)", color=green, community=0, file="Perform.cs", label="return client.CreateJob(GenerateId(), type, enqueuedState, args);", prediction=132, span="83-83"];
m25_18 [cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs", label="var enqueuedState = new EnqueuedState(''Enqueued by the Сlient'', queue)", span="41-41"];
m25_11 [cluster="HangFire.Perform.Async(System.Type)", color=green, community=0, file="Perform.cs", label="Entry HangFire.Perform.Async(System.Type)", prediction=133, span="26-26"];
m25_13 [cluster="HangFire.Perform.Async(System.Type)", color=green, community=0, file="Perform.cs", label="Exit HangFire.Perform.Async(System.Type)", prediction=132, span="26-26"];
m25_20 [cluster="HangFire.Perform.Async(System.Type, object)", file="Perform.cs", label="Exit HangFire.Perform.Async(System.Type, object)", span="31-31"];
m25_4 [cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs", label="Entry HangFire.Perform.Async<TJob>()", span="13-13"];
m25_5 [cluster="HangFire.Perform.Async<TJob>()", file="Perform.cs", label="return Async<TJob>(null);", span="16-16"];
m25_43 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="Perform.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10"];
m25_7 [cluster="HangFire.Perform.Async(System.Type)", file="Perform.cs", label="Entry HangFire.Perform.Async(System.Type)", span="55-55"];
m25_8 [cluster="HangFire.Perform.Async(System.Type)", color=green, community=0, file="Perform.cs", label="return Async(type, null);", prediction=135, span="57-57"];
m25_9 [cluster="HangFire.Perform.Async<TJob>(object)", file="Perform.cs", label="Exit HangFire.Perform.Async<TJob>(object)", span="20-20"];
m25_23 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96"];
m25_25 [cluster="HangFire.Perform.GenerateId()", file="Perform.cs", label="Entry HangFire.Perform.GenerateId()", span="77-77"];
m25_45 [cluster="HangFire.Perform.GenerateId()", file="Perform.cs", label="return Guid.NewGuid().ToString();", span="79-79"];
m25_46 [cluster="HangFire.Perform.GenerateId()", file="Perform.cs", label="Exit HangFire.Perform.GenerateId()", span="77-77"];
m25_34 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="Perform.cs", label="var scheduledState = new ScheduledState(''Scheduled by the Client'', DateTime.UtcNow.Add(delay))", prediction=136, span="148-148"];
m25_35 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="Perform.cs", label="return client.CreateJob(GenerateId(), type, scheduledState, args);", prediction=137, span="149-149"];
m25_36 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="Perform.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="61-61"];
m25_29 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="Perform.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="48-48"];
m25_33 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="Perform.cs", label="var client = new JobClient(RedisFactory.BasicManager)", prediction=137, span="146-146"];
m25_42 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="Perform.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="66-66"];
m25_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="Perform.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m25_24 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", color=green, community=0, file="Perform.cs", label="return In<TJob>(delay, null);", prediction=139, span="99-99"];
m25_48 [cluster="System.Guid.ToString()", file="Perform.cs", label="Entry System.Guid.ToString()", span="0-0"];
m25_44 [cluster="System.DateTime.Add(System.TimeSpan)", file="Perform.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m25_0 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="10-10"];
m25_2 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="10-10"];
m25_47 [cluster="System.Guid.NewGuid()", file="Perform.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m25_22 [cluster="System.Func<TResult>.Invoke()", file="Perform.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m26_91 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''                                            </div>\r\n                             '' +\r\n''           </td>\r\n                                    </tr>\r\n'')", span="566-567"];
m26_398 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="PrefetchJobFetcher.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m26_115 [cluster="Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Dashboard.HtmlHelper.Paginator(Hangfire.Dashboard.Pager)", span="69-69"];
m26_0 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", span="46-46"];
m26_1 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''\r\n'')", span="50-50"];
m26_2 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="Layout = new LayoutPage(Strings.FailedJobsPage_Title)", span="61-61"];
m26_3 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="int from, perPage", span="63-63"];
m26_101 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }", span="157-165"];
m26_48 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral('' '')", span="304-304"];
m26_387 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="return DeserializeJobs(jobs, selector);", span="539-539"];
m26_385 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="string jobsSql = @''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from HangFire.Job j\r\n  left join HangFire.State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n''", span="525-532"];
m26_386 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="534-537"];
m26_388 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="518-518"];
m26_98 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                })", span="152-165"];
m26_399 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m26_54 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''                                            <input type=\''checkbox\'' class=\''js-jobs'' +\r\n''-list-checkbox\'' name=\''jobs[]\'' value=\'''')", span="335-336"];
m26_103 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m26_234 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="314-314"];
m26_235 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="PrefetchJobFetcher.cs", label="return UseConnection(connection =>\r\n            {\r\n                const string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n'';\r\n\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count);\r\n\r\n                    Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0;\r\n\r\n                    stats.Enqueued = getCountIfExists(EnqueuedState.StateName);\r\n                    stats.Failed = getCountIfExists(FailedState.StateName);\r\n                    stats.Processing = getCountIfExists(ProcessingState.StateName);\r\n                    stats.Scheduled = getCountIfExists(ScheduledState.StateName);\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n\r\n                stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count();\r\n\r\n                return stats;\r\n            });", span="316-353"];
m26_236 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="314-314"];
m26_52 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''\''>\r\n'')", span="324-324"];
m26_72 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="!String.IsNullOrEmpty(job.Value.ExceptionMessage)", span="452-452"];
m26_73 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="WriteLiteral(''                                            <div style=\''color: #888;\''>\r\n         '' +\r\n''                                       '')", span="458-459"];
m26_74 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="Write(job.Value.Reason)", span="464-464"];
m26_104 [cluster="Hangfire.Storage.IMonitoringApi.FailedJobs(int, int)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35"];
m26_361 [cluster="Unk.Open", file="PrefetchJobFetcher.cs", label="Entry Unk.Open", span=""];
m26_352 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="PrefetchJobFetcher.cs", label="var connection = new SqlConnection(_connectionString)", span="450-450"];
m26_351 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="PrefetchJobFetcher.cs", label="var transaction = new TransactionScope(TransactionScopeOption.Required, new TransactionOptions { IsolationLevel = IsolationLevel.ReadUncommitted })", span="449-449"];
m26_354 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="PrefetchJobFetcher.cs", label="var result = action(connection)", span="454-454"];
m26_353 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="PrefetchJobFetcher.cs", label="connection.Open()", span="452-452"];
m26_356 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="PrefetchJobFetcher.cs", label="return result;", span="458-458"];
m26_355 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="PrefetchJobFetcher.cs", label="transaction.Complete()", span="456-456"];
m26_357 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="447-447"];
m26_107 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="168-168"];
m26_360 [cluster="SqlConnection.cstr", file="PrefetchJobFetcher.cs", label="Entry SqlConnection.cstr", span=""];
m26_273 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22"];
m26_411 [cluster="Unk.ToString", file="PrefetchJobFetcher.cs", label="Entry Unk.ToString", span=""];
m26_194 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="263-263"];
m26_195 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="PrefetchJobFetcher.cs", label="return UseConnection(connection =>\r\n            {\r\n\r\n                const string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc'';\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="265-299"];
m26_196 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="263-263"];
m26_258 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m26_367 [cluster="Unk.DeserializeJobs", file="PrefetchJobFetcher.cs", label="Entry Unk.DeserializeJobs", span=""];
m26_36 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="Write(Html.PerPageSelector(pager))", span="229-229"];
m26_37 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", color=green, community=0, file="PrefetchJobFetcher.cs", label="WriteLiteral(@''\r\n                </div>\r\n\r\n                <div class=''''table-responsive''''>\r\n                    <table class=''''table''''>\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=''''min-width''''>\r\n                                    <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                                </th>\r\n                                <th class=''''min-width''''>'')", prediction=140, span="234-244"];
m26_38 [cluster="Hangfire.Dashboard.Pages.FailedJobsPage.Execute()", file="PrefetchJobFetcher.cs", label="Write(Strings.Common_Id)", span="249-249"];
m26_181 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="251-251"];
m26_182 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="PrefetchJobFetcher.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="253-254"];
m26_183 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="251-251"];
m26_110 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="170-182"];
m26_179 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24"];
m26_5 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="PrefetchJobFetcher.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="45-46"];
m26_6 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="43-43"];
m26_8 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="45-46"];
m26_14 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="49-49"];
m26_93 [cluster="System.Collections.Generic.List<T>.Add(T)", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m26_45 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="85-94"];
m26_10 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="45-46"];
m26_11 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="490-490"];
m26_12 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="49-49"];
m26_13 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="PrefetchJobFetcher.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var counters = queueApi.GetEnqueuedAndFetchedCount(queue);\r\n\r\n                return counters.EnqueuedCount ?? 0;\r\n            });", span="51-57"];
m26_15 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="51-57"];
m26_18 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="return counters.EnqueuedCount ?? 0;", span="56-56"];
m26_16 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var queueApi = GetQueueApi(connection, queue)", span="53-53"];
m26_17 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="54-54"];
m26_19 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="51-57"];
m26_20 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", span="437-437"];
m26_21 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25"];
m26_22 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="60-60"];
m26_23 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", color=green, community=0, file="PrefetchJobFetcher.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var counters = queueApi.GetEnqueuedAndFetchedCount(queue);\r\n\r\n                return counters.FetchedCount ?? 0;\r\n            });", prediction=141, span="62-68"];
m26_24 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="60-60"];
m26_25 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="62-68"];
m26_26 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var queueApi = GetQueueApi(connection, queue)", span="64-64"];
m26_27 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="65-65"];
m26_28 [cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs", label="return counters.FetchedCount ?? 0;", prediction=140, span="67-67"];
m26_29 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="62-68"];
m26_30 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="71-71"];
m26_31 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", color=green, community=0, file="PrefetchJobFetcher.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", prediction=140, span="73-74"];
m26_32 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="71-71"];
m26_33 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="73-74"];
m26_34 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="74-74"];
m26_35 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="73-74"];
m26_39 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="79-80"];
m26_40 [cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs", label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", prediction=140, span="80-80"];
m26_41 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="79-80"];
m26_42 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="83-83"];
m26_43 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", color=green, community=0, file="PrefetchJobFetcher.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }));", prediction=145, span="85-94"];
m26_44 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="83-83"];
m26_76 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="GetTimelineStats(connection, ''failed'')", span="120-120"];
m26_81 [cluster="Unk.>", file="PrefetchJobFetcher.cs", label="Entry Unk.>", span=""];
m26_46 [cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs", label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                })", prediction=146, span="85-94"];
m26_92 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m26_47 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="85-94"];
m26_49 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="89-94"];
m26_50 [cluster="lambda expression", color=green, community=0, file="PrefetchJobFetcher.cs", label="new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.FromStringTimestamp(stateData[''StartedAt'']),\r\n                }", prediction=147, span="89-94"];
m26_51 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="89-94"];
m26_53 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m26_57 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m26_55 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="97-97"];
m26_58 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="99-108"];
m26_56 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="PrefetchJobFetcher.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }));", span="99-108"];
m26_59 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                })", span="99-108"];
m26_60 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="99-108"];
m26_61 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="103-108"];
m26_62 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.FromStringTimestamp(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.FromStringTimestamp(stateData[''ScheduledAt''])\r\n                }", span="103-108"];
m26_63 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="103-108"];
m26_66 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="PrefetchJobFetcher.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="113-114"];
m26_67 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="111-111"];
m26_64 [cluster="HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m26_65 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="111-111"];
m26_68 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="113-114"];
m26_69 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="GetTimelineStats(connection, ''succeeded'')", span="114-114"];
m26_70 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="113-114"];
m26_71 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="395-395"];
m26_78 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="123-123"];
m26_79 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="PrefetchJobFetcher.cs", label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="125-147"];
m26_75 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="119-120"];
m26_77 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="119-120"];
m26_80 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Servers()", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Servers()", span="123-123"];
m26_83 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var servers = connection.Query<Entities.Server>(\r\n                    @''select * from HangFire.Server'')\r\n                    .ToList()", span="127-129"];
m26_82 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="125-147"];
m26_84 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var result = new List<ServerDto>()", span="131-131"];
m26_85 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label=servers, span="133-133"];
m26_86 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="135-135"];
m26_87 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="136-143"];
m26_88 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="return result;", span="146-146"];
m26_89 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="125-147"];
m26_90 [cluster="Unk.ToList", file="PrefetchJobFetcher.cs", label="Entry Unk.ToList", span=""];
m26_94 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="150-150"];
m26_95 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="PrefetchJobFetcher.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(stateData[''FailedAt''])\r\n                }));", span="152-165"];
m26_96 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="150-150"];
m26_255 [cluster="Unk.Read", file="PrefetchJobFetcher.cs", label="Entry Unk.Read", span=""];
m26_384 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m26_105 [cluster="Hangfire.Dashboard.HtmlHelper.JobsSidebar()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobsSidebar()", span="46-46"];
m26_106 [cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="113-113"];
m26_146 [cluster="Unk.EnqueuedJobs", file="PrefetchJobFetcher.cs", label="Entry Unk.EnqueuedJobs", span=""];
m26_383 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m26_108 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="170-182"];
m26_254 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m26_256 [cluster="System.Func<T, TResult>.Invoke(T)", file="PrefetchJobFetcher.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m26_114 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m26_400 [cluster="int.ToString()", file="PrefetchJobFetcher.cs", label="Entry int.ToString()", span="0-0"];
m26_99 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="152-165"];
m26_389 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="542-542"];
m26_394 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="553-554"];
m26_390 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="546-546"];
m26_391 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label=jobs, span="548-548"];
m26_393 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="551-551"];
m26_395 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="return new JobList<TDto>(result);", span="557-557"];
m26_392 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="var stateData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="550-550"];
m26_396 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>, System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="542-542"];
m26_358 [cluster="TransactionScope.cstr", file="PrefetchJobFetcher.cs", label="Entry TransactionScope.cstr", span=""];
m26_141 [cluster="Unk.ToArray", file="PrefetchJobFetcher.cs", label="Entry Unk.ToArray", span=""];
m26_332 [cluster="System.DateTime.AddDays(double)", file="PrefetchJobFetcher.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m26_100 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="157-165"];
m26_210 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m26_111 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="175-182"];
m26_350 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m26_125 [cluster="HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m26_266 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="333-333"];
m26_109 [cluster="Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Dashboard.HtmlHelper.PerPageSelector(Hangfire.Dashboard.Pager)", span="75-75"];
m26_120 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                })", span="187-196"];
m26_130 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray()", span="203-207"];
m26_135 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(connection, enqueuedJobIds)\r\n                    })", span="216-222"];
m26_165 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var queueApi = GetQueueApi(connection, queue)", span="233-233"];
m26_167 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="return EnqueuedJobs(connection, enqueuedJobIds);", span="236-236"];
m26_175 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var queueApi = GetQueueApi(connection, queue)", span="244-244"];
m26_177 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="return FetchedJobs(connection, fetchedJobIds);", span="247-247"];
m26_185 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="GetHourlyTimelineStats(connection, ''succeeded'')", span="254-254"];
m26_192 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="GetHourlyTimelineStats(connection, ''failed'')", span="260-260"];
m26_205 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="291-297"];
m26_226 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="305-305"];
m26_232 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="311-311"];
m26_251 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="stats.Queues = _queueProviders\r\n                    .SelectMany(x => x.GetJobQueueMonitoringApi(connection).GetQueues())\r\n                    .Count()", span="348-350"];
m26_112 [cluster="Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Dashboard.HtmlHelper.JobNameLink(string, Hangfire.Common.Job)", span="140-140"];
m26_97 [cluster="Hangfire.Dashboard.RazorPage.WriteLiteral(string)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Dashboard.RazorPage.WriteLiteral(string)", span="105-105"];
m26_119 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="187-196"];
m26_121 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="187-196"];
m26_122 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="192-196"];
m26_129 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="201-226"];
m26_131 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="209-209"];
m26_147 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="204-204"];
m26_151 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="205-205"];
m26_155 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="205-205"];
m26_158 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="206-206"];
m26_132 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label=tuples, span="211-211"];
m26_133 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="213-213"];
m26_134 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="214-214"];
m26_164 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="231-237"];
m26_166 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="234-234"];
m26_168 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="231-237"];
m26_174 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="242-248"];
m26_176 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="245-245"];
m26_178 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="242-248"];
m26_184 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="253-254"];
m26_186 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="253-254"];
m26_191 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="259-260"];
m26_193 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="259-260"];
m26_197 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="265-299"];
m26_200 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="275-275"];
m26_203 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="278-278"];
m26_204 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            })\r\n                            .ToList()", span="279-289"];
m26_206 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="265-299"];
m26_225 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="304-305"];
m26_227 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="304-305"];
m26_231 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="310-311"];
m26_233 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="310-311"];
m26_237 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="316-353"];
m26_239 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var stats = new StatisticsDto()", span="328-328"];
m26_250 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="stats.Recurring = multi.Read<int>().Single()", span="345-345"];
m26_252 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="return stats;", span="352-352"];
m26_270 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="349-349"];
m26_368 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="480-487"];
m26_113 [cluster="string.IsNullOrEmpty(string)", file="PrefetchJobFetcher.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m26_337 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="String.Format(''stats:{0}:{1}'', type, x)", span="410-410"];
m26_219 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = JobHelper.FromJson<Dictionary<string, string>>(x.Data)\r\n                            }", span="282-288"];
m26_247 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="stats.Servers = multi.Read<int>().Single()", span="340-340"];
m26_248 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="stats.Succeeded = multi.Read<int?>().SingleOrDefault() ?? 0", span="342-342"];
m26_249 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="stats.Deleted = multi.Read<int?>().SingleOrDefault() ?? 0", span="343-343"];
m26_102 [cluster="Hangfire.Dashboard.Pager.Pager(int, int, long)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Dashboard.Pager.Pager(int, int, long)", span="29-29"];
m26_124 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="192-196"];
m26_123 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                }", span="192-196"];
m26_137 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="201-226"];
m26_148 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.GetJobQueueMonitoringApi(connection)", span="204-204"];
m26_136 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="return result;", span="225-225"];
m26_149 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="204-204"];
m26_153 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="205-205"];
m26_152 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.GetQueues()", span="205-205"];
m26_157 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="205-205"];
m26_156 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="new { Monitoring = monitoring, Queue = queue }", span="205-205"];
m26_160 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="206-206"];
m26_159 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Queue", span="206-206"];
m26_301 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="368-368"];
m26_199 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="273-273"];
m26_198 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="string sql = @''\r\nselect * from HangFire.Job where Id = @id\r\nselect * from HangFire.JobParameter where JobId = @id\r\nselect * from HangFire.State where JobId = @id order by Id desc''", span="268-271"];
m26_201 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="job == null", span="276-276"];
m26_212 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="278-278"];
m26_215 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="278-278"];
m26_218 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="282-288"];
m26_202 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="return null;", span="276-276"];
m26_253 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="316-353"];
m26_238 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="string sql = @''\r\nselect StateName as [State], count(id) as [Count] From HangFire.Job \r\ngroup by StateName\r\nhaving StateName is not null;\r\nselect count(Id) from HangFire.Server;\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:succeeded';\r\nselect sum([Value]) from HangFire.Counter where [Key] = N'stats:deleted';\r\nselect count(*) from HangFire.[Set] where [Key] = N'recurring-jobs';\r\n''", span="318-326"];
m26_240 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var multi = connection.QueryMultiple(sql)", span="329-329"];
m26_271 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.GetJobQueueMonitoringApi(connection).GetQueues()", span="349-349"];
m26_243 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="stats.Enqueued = getCountIfExists(EnqueuedState.StateName)", span="335-335"];
m26_244 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="stats.Failed = getCountIfExists(FailedState.StateName)", span="336-336"];
m26_245 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="stats.Processing = getCountIfExists(ProcessingState.StateName)", span="337-337"];
m26_246 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="stats.Scheduled = getCountIfExists(ScheduledState.StateName)", span="338-338"];
m26_272 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="349-349"];
m26_370 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="480-487"];
m26_369 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="480-487"];
m26_336 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="410-410"];
m26_338 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="410-410"];
m26_340 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="420-420"];
m26_343 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="420-420"];
m26_220 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="282-288"];
m26_300 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="368-368"];
m26_333 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="409-409"];
m26_302 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="368-368"];
m26_305 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="378-378"];
m26_308 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="378-378"];
m26_241 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="var countByStates = multi.Read().ToDictionary(x => x.State, x => x.Count)", span="331-331"];
m26_214 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="278-278"];
m26_213 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Name", span="278-278"];
m26_217 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="278-278"];
m26_216 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Value", span="278-278"];
m26_242 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Func<string, int> getCountIfExists = name => countByStates.ContainsKey(name) ? countByStates[name] : 0", span="333-333"];
m26_342 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="420-420"];
m26_341 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="(string)x.Key", span="420-420"];
m26_345 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="420-420"];
m26_344 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="(long)x.Count", span="420-420"];
m26_335 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="409-409"];
m26_334 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.ToString(''yyyy-MM-dd'')", span="409-409"];
m26_307 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="378-378"];
m26_306 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="(string)x.Key", span="378-378"];
m26_310 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="378-378"];
m26_309 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="(long)x.Count", span="378-378"];
m26_260 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="331-331"];
m26_263 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Entry lambda expression", span="331-331"];
m26_267 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="countByStates.ContainsKey(name) ? countByStates[name] : 0", span="333-333"];
m26_262 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="331-331"];
m26_261 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.State", span="331-331"];
m26_265 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="331-331"];
m26_264 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="x.Count", span="331-331"];
m26_268 [cluster="lambda expression", file="PrefetchJobFetcher.cs", label="Exit lambda expression", span="333-333"];
m26_180 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="560-560"];
m26_406 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                        FetchedAt = job.FetchedAt\r\n                    }))", span="580-587"];
m26_404 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="576-576"];
m26_405 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label=jobs, span="578-578"];
m26_403 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="571-574"];
m26_402 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="string fetchedJobsSql = @''\r\nselect j.*, jq.FetchedAt, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is not null''", span="564-569"];
m26_407 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="return new JobList<FetchedJobDto>(result);", span="590-590"];
m26_408 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="560-560"];
m26_145 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m26_339 [cluster="Unk.Format", file="PrefetchJobFetcher.cs", label="Entry Unk.Format", span=""];
m26_412 [cluster="HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m26_303 [cluster="System.DateTime.ToString(string)", file="PrefetchJobFetcher.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m26_171 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="240-240"];
m26_172 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="PrefetchJobFetcher.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage);\r\n\r\n                return FetchedJobs(connection, fetchedJobIds);\r\n            });", span="242-248"];
m26_173 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="240-240"];
m26_142 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="PrefetchJobFetcher.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m26_299 [cluster="Unk.ElementAt", file="PrefetchJobFetcher.cs", label="Entry Unk.ElementAt", span=""];
m26_410 [cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="PrefetchJobFetcher.cs", label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span=""];
m26_296 [cluster="Unk.Query", file="PrefetchJobFetcher.cs", label="Entry Unk.Query", span=""];
m26_297 [cluster="Unk.Add", file="PrefetchJobFetcher.cs", label="Entry Unk.Add", span=""];
m26_362 [cluster="Unk.Complete", file="PrefetchJobFetcher.cs", label="Entry Unk.Complete", span=""];
m26_359 [cluster="TransactionOptions.cstr", file="PrefetchJobFetcher.cs", label="Entry TransactionOptions.cstr", span=""];
m26_409 [cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="PrefetchJobFetcher.cs", label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span=""];
m26_346 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var provider = _queueProviders.GetProvider(queueName)", span="441-441"];
m26_347 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var monitoringApi = provider.GetJobQueueMonitoringApi(connection)", span="442-442"];
m26_348 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="return monitoringApi;", span="444-444"];
m26_349 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetQueueApi(SqlConnection, string)", span="437-437"];
m26_295 [cluster="System.DateTime.AddHours(double)", file="PrefetchJobFetcher.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m26_207 [cluster="Unk.QueryMultiple", file="PrefetchJobFetcher.cs", label="Entry Unk.QueryMultiple", span=""];
m26_228 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="308-308"];
m26_229 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="PrefetchJobFetcher.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="310-311"];
m26_230 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="308-308"];
m26_161 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="229-229"];
m26_162 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="PrefetchJobFetcher.cs", label="return UseConnection(connection =>\r\n            {\r\n                var queueApi = GetQueueApi(connection, queue);\r\n                var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage);\r\n\r\n                return EnqueuedJobs(connection, enqueuedJobIds);\r\n            });", span="231-237"];
m26_163 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="229-229"];
m26_304 [cluster="string.Format(string, object, object)", file="PrefetchJobFetcher.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m26_139 [cluster="Unk.SelectMany", file="PrefetchJobFetcher.cs", label="Entry Unk.SelectMany", span=""];
m26_209 [cluster="Unk.ToDictionary", file="PrefetchJobFetcher.cs", label="Entry Unk.ToDictionary", span=""];
m26_222 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="302-302"];
m26_223 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="PrefetchJobFetcher.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="304-305"];
m26_224 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="302-302"];
m26_376 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="503-503"];
m26_377 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="PrefetchJobFetcher.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="505-505"];
m26_378 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="PrefetchJobFetcher.cs", label="data.Arguments = arguments", span="506-506"];
m26_379 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="PrefetchJobFetcher.cs", label="return data.Deserialize();", span="510-510"];
m26_381 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="PrefetchJobFetcher.cs", label="return null;", span="514-514"];
m26_380 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="PrefetchJobFetcher.cs", label=JobLoadException, span="512-512"];
m26_382 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="503-503"];
m26_371 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m26_143 [cluster="Unk.GetEnqueuedJobIds", file="PrefetchJobFetcher.cs", label="Entry Unk.GetEnqueuedJobIds", span=""];
m26_140 [cluster="Unk.OrderBy", file="PrefetchJobFetcher.cs", label="Entry Unk.OrderBy", span=""];
m26_372 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="string sqlQuery = @''\r\nselect count(Id) from HangFire.Job where StateName = @state''", span="492-493"];
m26_373 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName })\r\n                 .Single()", span="495-498"];
m26_374 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="return count;", span="500-500"];
m26_375 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="490-490"];
m26_144 [cluster="Unk.GetEnqueuedAndFetchedCount", file="PrefetchJobFetcher.cs", label="Entry Unk.GetEnqueuedAndFetchedCount", span=""];
m26_154 [cluster="Unk.GetQueues", file="PrefetchJobFetcher.cs", label="Entry Unk.GetQueues", span=""];
m26_298 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m26_401 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m26_116 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="PrefetchJobFetcher.cs", label="Hangfire.Dashboard.Pages.FailedJobsPage", span=""];
m26_117 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="PrefetchJobFetcher.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.FromNullableStringTimestamp(stateData[''DeletedAt''])\r\n                }));", span="187-196"];
m26_118 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="185-185"];
m26_188 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="257-257"];
m26_189 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="PrefetchJobFetcher.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="259-260"];
m26_190 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="257-257"];
m26_170 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="462-462"];
m26_365 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.FromNullableStringTimestamp(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="478-487"];
m26_364 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="473-476"];
m26_363 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="string enqueuedJobsSql = @''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom HangFire.Job j\r\nleft join HangFire.State s on s.Id = j.StateId\r\nleft join HangFire.JobQueue jq on jq.JobId = j.Id\r\nwhere j.Id in @jobIds and jq.FetchedAt is null''", span="466-471"];
m26_366 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="462-462"];
m26_169 [cluster="HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23"];
m26_259 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m26_138 [cluster="Unk.Select", file="PrefetchJobFetcher.cs", label="Entry Unk.Select", span=""];
m26_150 [cluster="Unk.GetJobQueueMonitoringApi", file="PrefetchJobFetcher.cs", label="Entry Unk.GetJobQueueMonitoringApi", span=""];
m26_221 [cluster="HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m26_397 [cluster="System.Collections.Generic.List<T>.List(int)", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m26_257 [cluster="Unk.Single", file="PrefetchJobFetcher.cs", label="Entry Unk.Single", span=""];
m26_311 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var endDate = DateTime.UtcNow.Date", span="399-399"];
m26_318 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var keys = stringDates.Select(x => String.Format(''stats:{0}:{1}'', type, x)).ToList()", span="410-410"];
m26_320 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="417-420"];
m26_317 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="409-409"];
m26_315 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="dates.Add(endDate)", span="405-405"];
m26_330 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="return result;", span="434-434"];
m26_312 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var startDate = endDate.AddDays(-7)", span="400-400"];
m26_314 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="startDate <= endDate", span="403-403"];
m26_316 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="endDate = endDate.AddDays(-1)", span="406-406"];
m26_319 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="412-415"];
m26_321 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label=keys, span="422-422"];
m26_322 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="!valuesMap.ContainsKey(key)", span="424-424"];
m26_323 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="valuesMap.Add(key, 0)", span="424-424"];
m26_327 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="430-430"];
m26_313 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var dates = new List<DateTime>()", span="401-401"];
m26_326 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="i < stringDates.Count", span="428-428"];
m26_324 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var result = new Dictionary<DateTime, long>()", span="427-427"];
m26_325 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var i = 0", span="428-428"];
m26_328 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="result.Add(dates[i], value)", span="431-431"];
m26_329 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="i++", span="428-428"];
m26_331 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="395-395"];
m26_126 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="199-199"];
m26_127 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="PrefetchJobFetcher.cs", label="return UseConnection<IList<QueueWithTopEnqueuedJobsDto>>(connection =>\r\n            {\r\n                var tuples = _queueProviders\r\n                    .Select(x => x.GetJobQueueMonitoringApi(connection))\r\n                    .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                    .OrderBy(x => x.Queue)\r\n                    .ToArray();\r\n\r\n                var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length);\r\n\r\n                foreach (var tuple in tuples)\r\n                {\r\n                    var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5);\r\n                    var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue);\r\n\r\n                    result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = tuple.Queue,\r\n                        Length = counters.EnqueuedCount ?? 0,\r\n                        Fetched = counters.FetchedCount,\r\n                        FirstJobs = EnqueuedJobs(connection, enqueuedJobIds)\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="201-226"];
m26_128 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.Queues()", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.Queues()", span="199-199"];
m26_187 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="356-356"];
m26_281 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var keys = dates.Select(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="368-368"];
m26_278 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="dates.Add(endDate)", span="364-364"];
m26_274 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var endDate = DateTime.UtcNow", span="360-360"];
m26_283 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="375-378"];
m26_275 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var dates = new List<DateTime>()", span="361-361"];
m26_277 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="i < 24", span="362-362"];
m26_282 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="string sqlQuery = @''\r\nselect [Key], count([Value]) as Count from [HangFire].[Counter]\r\ngroup by [Key]\r\nhaving [Key] in @keys''", span="370-373"];
m26_284 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label=keys, span="380-380"];
m26_279 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="endDate = endDate.AddHours(-1)", span="365-365"];
m26_293 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="return result;", span="392-392"];
m26_285 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="!valuesMap.ContainsKey(key)", span="382-382"];
m26_286 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="valuesMap.Add(key, 0)", span="382-382"];
m26_290 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var value = valuesMap[valuesMap.Keys.ElementAt(i)]", span="388-388"];
m26_276 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var i = 0", span="362-362"];
m26_289 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="i < dates.Count", span="386-386"];
m26_291 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="result.Add(dates[i], value)", span="389-389"];
m26_280 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="i++", span="362-362"];
m26_287 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var result = new Dictionary<DateTime, long>()", span="385-385"];
m26_288 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="var i = 0", span="386-386"];
m26_292 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="i++", span="386-386"];
m26_294 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="PrefetchJobFetcher.cs", label="Exit HangFire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="356-356"];
m26_208 [cluster="Unk.SingleOrDefault", file="PrefetchJobFetcher.cs", label="Entry Unk.SingleOrDefault", span=""];
m26_211 [cluster="Unk.DeserializeJob", file="PrefetchJobFetcher.cs", label="Entry Unk.DeserializeJob", span=""];
m26_413 [file="PrefetchJobFetcher.cs", label="HangFire.SqlServer.SqlServerMonitoringApi", span=""];
m26_416 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_417 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_415 [file="PrefetchJobFetcher.cs", label=string, span=""];
m26_414 [file="PrefetchJobFetcher.cs", label=string, span=""];
m26_418 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_419 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_420 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_421 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_422 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_423 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_424 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_425 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_427 [file="PrefetchJobFetcher.cs", label=string, span=""];
m26_430 [file="PrefetchJobFetcher.cs", label=string, span=""];
m26_428 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_429 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_431 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_432 [file="PrefetchJobFetcher.cs", label=int, span=""];
m26_437 [file="PrefetchJobFetcher.cs", label=string, span=""];
m26_426 [file="PrefetchJobFetcher.cs", label=SqlConnection, span=""];
m26_436 [file="PrefetchJobFetcher.cs", label=string, span=""];
m26_433 [file="PrefetchJobFetcher.cs", label=string, span=""];
m26_435 [file="PrefetchJobFetcher.cs", label=SqlConnection, span=""];
m26_434 [file="PrefetchJobFetcher.cs", label=countByStates, span=""];
m27_6 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="20-20"];
m27_7 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", color=green, community=0, file="PrioritizedJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object))", prediction=148, span="22-24"];
m27_9 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ThrowsAnException_WhenClientIsNull()", span="20-20"];
m27_95 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92"];
m27_96 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical''))", span="94-96"];
m27_97 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''client'', exception.ParamName)", span="98-98"];
m27_98 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92"];
m27_5 [cluster="Mock<State>.cstr", file="PrioritizedJobFetcher.cs", label="Entry Mock<State>.cstr", span=""];
m27_4 [cluster="Mock<IBackgroundJobClient>.cstr", file="PrioritizedJobFetcher.cs", label="Entry Mock<IBackgroundJobClient>.cstr", span=""];
m27_52 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56"];
m27_53 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod()))", span="58-60"];
m27_54 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''client'', exception.ParamName)", span="62-62"];
m27_55 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56"];
m27_10 [cluster="Unk.>", file="PrioritizedJobFetcher.cs", label="Entry Unk.>", span=""];
m27_41 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176"];
m27_194 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176"];
m27_151 [cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106"];
m27_176 [cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123"];
m27_180 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162"];
m27_181 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="PrioritizedJobFetcher.cs", label="_client.Object.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="164-165"];
m27_182 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="PrioritizedJobFetcher.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="167-169"];
m27_183 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162"];
m27_150 [cluster="System.TimeSpan.FromDays(double)", file="PrioritizedJobFetcher.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m27_67 [cluster="Unk.Enqueue", file="PrioritizedJobFetcher.cs", label="Entry Unk.Enqueue", span=""];
m27_20 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="30-30"];
m27_21 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="PrioritizedJobFetcher.cs", label="_client.Object.Create(() => StaticMethod(), _state.Object)", span="32-32"];
m27_22 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="PrioritizedJobFetcher.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="34-34"];
m27_23 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", span="30-30"];
m27_119 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112"];
m27_120 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical''))", span="114-116"];
m27_121 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''client'', exception.ParamName)", span="118-118"];
m27_122 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112"];
m27_106 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102"];
m27_107 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="_client.Object.Enqueue(() => StaticMethod(), ''critical'')", span="104-104"];
m27_108 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="106-108"];
m27_109 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102"];
m27_126 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90"];
m27_169 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152"];
m27_170 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1)))", span="154-156"];
m27_171 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''client'', exception.ParamName)", span="158-158"];
m27_172 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152"];
m27_19 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172"];
m27_193 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172"];
m27_190 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="169-169"];
m27_12 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="23-24"];
m27_13 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object)", span="23-24"];
m27_14 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="23-24"];
m27_16 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="24-24"];
m27_17 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="StaticMethod()", span="24-24"];
m27_18 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="24-24"];
m27_25 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="32-32"];
m27_28 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="34-34"];
m27_26 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="StaticMethod()", span="32-32"];
m27_27 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="32-32"];
m27_29 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="34-34"];
m27_30 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="34-34"];
m27_35 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="41-42"];
m27_36 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object)", span="41-42"];
m27_37 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="41-42"];
m27_38 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="42-42"];
m27_39 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.InstanceMethod()", span="42-42"];
m27_40 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="42-42"];
m27_46 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="50-50"];
m27_49 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="52-52"];
m27_47 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.InstanceMethod()", span="50-50"];
m27_48 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="50-50"];
m27_50 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="52-52"];
m27_51 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="52-52"];
m27_56 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="59-60"];
m27_57 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod())", span="59-60"];
m27_58 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="59-60"];
m27_60 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="60-60"];
m27_61 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="StaticMethod()", span="60-60"];
m27_62 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="60-60"];
m27_68 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="68-68"];
m27_71 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="70-70"];
m27_69 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="StaticMethod()", span="68-68"];
m27_70 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="68-68"];
m27_72 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="70-70"];
m27_73 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="70-70"];
m27_78 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="77-78"];
m27_79 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod())", span="77-78"];
m27_80 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="77-78"];
m27_82 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="78-78"];
m27_83 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.InstanceMethod()", span="78-78"];
m27_84 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="78-78"];
m27_89 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="86-86"];
m27_92 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="88-88"];
m27_90 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.InstanceMethod()", span="86-86"];
m27_91 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="86-86"];
m27_93 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="88-88"];
m27_94 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="88-88"];
m27_99 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="95-96"];
m27_100 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical'')", span="95-96"];
m27_101 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="95-96"];
m27_103 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="96-96"];
m27_104 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="StaticMethod()", span="96-96"];
m27_105 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="96-96"];
m27_110 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="104-104"];
m27_113 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="106-108"];
m27_111 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="StaticMethod()", span="104-104"];
m27_112 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="104-104"];
m27_114 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="106-108"];
m27_115 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="106-108"];
m27_116 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="108-108"];
m27_117 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="state.Queue == ''critical''", span="108-108"];
m27_118 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="108-108"];
m27_123 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="115-116"];
m27_124 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical'')", span="115-116"];
m27_125 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="115-116"];
m27_127 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="116-116"];
m27_128 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.InstanceMethod()", span="116-116"];
m27_129 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="116-116"];
m27_134 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="124-124"];
m27_137 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="126-128"];
m27_135 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.InstanceMethod()", span="124-124"];
m27_136 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="124-124"];
m27_138 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="126-128"];
m27_139 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="126-128"];
m27_140 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="128-128"];
m27_141 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="state.Queue == ''critical''", span="128-128"];
m27_142 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="128-128"];
m27_147 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="135-136"];
m27_148 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1))", span="135-136"];
m27_149 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="135-136"];
m27_152 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="136-136"];
m27_153 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="StaticMethod()", span="136-136"];
m27_154 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="136-136"];
m27_160 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="144-144"];
m27_163 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="146-148"];
m27_161 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="StaticMethod()", span="144-144"];
m27_162 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="144-144"];
m27_164 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="146-148"];
m27_165 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="146-148"];
m27_166 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="148-148"];
m27_167 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="state.EnqueueAt > DateTime.UtcNow", span="148-148"];
m27_168 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="148-148"];
m27_173 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="155-156"];
m27_174 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="155-156"];
m27_175 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="155-156"];
m27_177 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="156-156"];
m27_178 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.InstanceMethod()", span="156-156"];
m27_179 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="156-156"];
m27_184 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="165-165"];
m27_187 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Entry lambda expression", span="167-169"];
m27_185 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.InstanceMethod()", span="165-165"];
m27_186 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="165-165"];
m27_188 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="167-169"];
m27_189 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="167-169"];
m27_191 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="state.EnqueueAt > DateTime.UtcNow", span="169-169"];
m27_192 [cluster="lambda expression", file="PrioritizedJobFetcher.cs", label="Exit lambda expression", span="169-169"];
m27_74 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74"];
m27_75 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod()))", span="76-78"];
m27_76 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''client'', exception.ParamName)", span="80-80"];
m27_77 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74"];
m27_85 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84"];
m27_86 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod())", span="86-86"];
m27_87 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="88-88"];
m27_88 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84"];
m27_42 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48"];
m27_43 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="PrioritizedJobFetcher.cs", label="_client.Object.Create<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), _state.Object)", span="50-50"];
m27_44 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="PrioritizedJobFetcher.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="52-52"];
m27_45 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48"];
m27_81 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53"];
m27_63 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66"];
m27_64 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="PrioritizedJobFetcher.cs", label="_client.Object.Enqueue(() => StaticMethod())", span="68-68"];
m27_65 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="PrioritizedJobFetcher.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="70-70"];
m27_66 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66"];
m27_159 [cluster="Unk.Schedule", file="PrioritizedJobFetcher.cs", label="Entry Unk.Schedule", span=""];
m27_15 [cluster="Unk.Create", file="PrioritizedJobFetcher.cs", label="Entry Unk.Create", span=""];
m27_0 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13"];
m27_1 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", color=green, community=0, file="PrioritizedJobFetcher.cs", label="_client = new Mock<IBackgroundJobClient>()", prediction=149, span="15-15"];
m27_2 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", color=green, community=0, file="PrioritizedJobFetcher.cs", label="_state = new Mock<IState>()", prediction=150, span="16-16"];
m27_3 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13"];
m27_155 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142"];
m27_156 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="PrioritizedJobFetcher.cs", label="_client.Object.Schedule(() => StaticMethod(), TimeSpan.FromDays(1))", span="144-144"];
m27_157 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="PrioritizedJobFetcher.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="146-148"];
m27_158 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142"];
m27_24 [cluster="Unk.Verify", file="PrioritizedJobFetcher.cs", label="Entry Unk.Verify", span=""];
m27_102 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", span="71-71"];
m27_59 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="PrioritizedJobFetcher.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35"];
m27_143 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132"];
m27_144 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1)))", span="134-136"];
m27_145 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''client'', exception.ParamName)", span="138-138"];
m27_146 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132"];
m27_31 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38"];
m27_32 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object))", span="40-42"];
m27_33 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Assert.Equal(''client'', exception.ParamName)", span="44-44"];
m27_34 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38"];
m27_130 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122"];
m27_131 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), ''critical'')", span="124-124"];
m27_132 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="126-128"];
m27_133 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="PrioritizedJobFetcher.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122"];
m27_195 [file="PrioritizedJobFetcher.cs", label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", span=""];
m28_11 [cluster="Unk.Dispose", file="QueueSteps.cs", label="Entry Unk.Dispose", span=""];
m28_19 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string, string)", span="41-41"];
m28_47 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="91-91"];
m28_16 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="QueueSteps.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="35-35"];
m28_17 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="QueueSteps.cs", label="return new SqlServerFetcher(_connection, queueNames);", span="37-37"];
m28_18 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="QueueSteps.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="35-35"];
m28_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="QueueSteps.cs", label="Jobs = new SqlServerJob(_connection)", span="20-20"];
m28_3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="QueueSteps.cs", label="Sets = new SqlServerSet(_connection)", span="21-21"];
m28_4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="QueueSteps.cs", label="Storage = storage", span="22-22"];
m28_5 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="QueueSteps.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="17-17"];
m28_24 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob(string)", span="58-58"];
m28_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="QueueSteps.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="17-17"];
m28_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="QueueSteps.cs", label="_connection = connection", span="19-19"];
m28_58 [cluster="System.TimeSpan.Negate()", file="QueueSteps.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m28_39 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="QueueSteps.cs", label="var length = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="85-86"];
m28_12 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="35-35"];
m28_13 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", color=green, community=0, file="QueueSteps.cs", label="Given(String.Format(''the '{0}' job in the '{1}' queue'', jobId, DefaultQueue))", prediction=151, span="37-37"];
m28_14 [cluster="HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.GivenTheJobInTheQueue(string)", span="35-35"];
m28_43 [cluster="Unk.AreEqual", file="QueueSteps.cs", label="Entry Unk.AreEqual", span=""];
m28_44 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", span="91-91"];
m28_45 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="QueueSteps.cs", label="var actualLength = Redis.Client.GetListCount(\r\n                String.Format(''hangfire:queue:{0}'', queue))", span="93-94"];
m28_46 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueLengthIs(string, int)", file="QueueSteps.cs", label="Assert.AreEqual(length, actualLength)", span="95-95"];
m28_42 [cluster="Unk.Execute", file="QueueSteps.cs", label="Entry Unk.Execute", span=""];
m28_6 [cluster="Unk.Given", file="QueueSteps.cs", label="Entry Unk.Given", span=""];
m28_41 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="83-83"];
m28_33 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="87-89"];
m28_34 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="91-91"];
m28_35 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="return jobId;", span="94-94"];
m28_36 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="51-51"];
m28_38 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", span="83-83"];
m28_55 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="QueueSteps.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="129-129"];
m28_56 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="QueueSteps.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="131-133"];
m28_57 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="QueueSteps.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="129-129"];
m28_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="QueueSteps.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11"];
m28_8 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", color=green, community=0, file="QueueSteps.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", prediction=152, span="25-25"];
m28_9 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", color=green, community=1, file="QueueSteps.cs", label="_connection.Dispose()", prediction=151, span="27-27"];
m28_10 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="QueueSteps.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="25-25"];
m28_30 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="int parameterIndex = 0", span="76-76"];
m28_31 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label=parameters, span="77-77"];
m28_32 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="79-84"];
m28_25 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="51-51"];
m28_26 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (State, InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@state, @invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="57-60"];
m28_27 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    state = ''Created'',\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = JobHelper.ToJson(arguments),\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="62-71"];
m28_28 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="parameters.Count > 0", span="73-73"];
m28_23 [cluster="Unk.Then", file="QueueSteps.cs", label="Entry Unk.Then", span=""];
m28_29 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="QueueSteps.cs", label="var parameterArray = new object[parameters.Count]", span="75-75"];
m28_15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="QueueSteps.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="17-17"];
m28_37 [cluster="Unk.DoesNotContain", file="QueueSteps.cs", label="Entry Unk.DoesNotContain", span=""];
m28_20 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="QueueSteps.cs", label="Entry HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="51-51"];
m28_21 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="QueueSteps.cs", label="Then(String.Format(''the '{0}' queue contains the job'', DefaultQueue))", span="53-53"];
m28_22 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", file="QueueSteps.cs", label="Exit HangFire.Tests.QueueSteps.ThenTheQueueContainsTheJob()", span="51-51"];
m28_40 [cluster="HangFire.Tests.QueueSteps.ThenTheQueueIsEmpty(string)", file="QueueSteps.cs", label="Assert.AreEqual(0, length)", span="87-87"];
m28_49 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="QueueSteps.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="115-115"];
m28_50 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="QueueSteps.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="117-119"];
m28_51 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="QueueSteps.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="115-115"];
m28_52 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="QueueSteps.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="122-122"];
m28_53 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="QueueSteps.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="124-126"];
m28_54 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="QueueSteps.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="122-122"];
m28_48 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="QueueSteps.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m28_59 [file="QueueSteps.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m29_3 [cluster="HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", file="SchedulePoller.feature.cs", label="Entry HangFire.Core.Tests.SharedWorkerContextMock.SharedWorkerContextMock()", span="11-11"];
m29_11 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", file="SchedulePoller.feature.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.SharedWorkerContext, int)", span="27-27"];
m29_0 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", file="SchedulePoller.feature.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", span="11-11"];
m29_2 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", file="SchedulePoller.feature.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.WorkerContextFacts()", span="11-11"];
m29_24 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", file="SchedulePoller.feature.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.WorkerContext)", span="22-22"];
m29_4 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", file="SchedulePoller.feature.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", span="17-17"];
m29_5 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", file="SchedulePoller.feature.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new WorkerContext(null, WorkerNumber))", span="19-20"];
m29_6 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", file="SchedulePoller.feature.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_ThrowsAnException_WhenSharedContextNull()", span="17-17"];
m29_17 [cluster="Unk.Equal", file="SchedulePoller.feature.cs", label="Entry Unk.Equal", span=""];
m29_16 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="SchedulePoller.feature.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="47-47"];
m29_30 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="SchedulePoller.feature.cs", label="return new WorkerContext(_sharedContext.Object, WorkerNumber);", span="49-49"];
m29_31 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", file="SchedulePoller.feature.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CreateContext()", span="47-47"];
m29_12 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="SchedulePoller.feature.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="24-24"];
m29_13 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="SchedulePoller.feature.cs", label="var context = CreateContext()", span="26-26"];
m29_14 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="SchedulePoller.feature.cs", label="Assert.Equal(WorkerNumber, context.WorkerNumber)", span="28-28"];
m29_15 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", file="SchedulePoller.feature.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.Ctor_CorrectlySetsAllInstanceProperties()", span="24-24"];
m29_18 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.feature.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="32-32"];
m29_19 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.feature.cs", label="Assert.Throws<NullReferenceException>(\r\n                () => new WorkerContext(null))", span="34-35"];
m29_20 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", file="SchedulePoller.feature.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_ThrowsAnException_WhenContextIsNull()", span="32-32"];
m29_25 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="SchedulePoller.feature.cs", label="Entry HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="39-39"];
m29_26 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="SchedulePoller.feature.cs", label="var context = CreateContext()", span="41-41"];
m29_27 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="SchedulePoller.feature.cs", label="var contextCopy = new WorkerContext(context)", span="42-42"];
m29_28 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="SchedulePoller.feature.cs", label="Assert.Equal(context.WorkerNumber, contextCopy.WorkerNumber)", span="44-44"];
m29_29 [cluster="HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", file="SchedulePoller.feature.cs", label="Exit HangFire.Core.Tests.Server.WorkerContextFacts.CopyCtor_CorrectlyCopies_AllPropertyValues()", span="39-39"];
m29_21 [cluster="lambda expression", file="SchedulePoller.feature.cs", label="Entry lambda expression", span="35-35"];
m29_8 [cluster="lambda expression", file="SchedulePoller.feature.cs", label="Entry lambda expression", span="20-20"];
m29_9 [cluster="lambda expression", file="SchedulePoller.feature.cs", label="new WorkerContext(null, WorkerNumber)", span="20-20"];
m29_10 [cluster="lambda expression", file="SchedulePoller.feature.cs", label="Exit lambda expression", span="20-20"];
m29_22 [cluster="lambda expression", file="SchedulePoller.feature.cs", label="new WorkerContext(null)", span="35-35"];
m29_23 [cluster="lambda expression", file="SchedulePoller.feature.cs", label="Exit lambda expression", span="35-35"];
m29_32 [file="SchedulePoller.feature.cs", label="HangFire.Core.Tests.Server.WorkerContextFacts", span=""];
m30_4 [cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="Server.feature.cs", label="Entry HangFire.Web.SingleResourceHandler.WriteResponse()", span="31-31"];
m30_5 [cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", color=green, community=0, file="Server.feature.cs", label="WriteResource(_assembly, _resourceName)", prediction=154, span="33-33"];
m30_6 [cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="Server.feature.cs", label="Exit HangFire.Web.SingleResourceHandler.WriteResponse()", span="31-31"];
m30_7 [cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", file="Server.feature.cs", label="Entry HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", span="50-50"];
m30_0 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="Server.feature.cs", label="Entry HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="25-25"];
m30_1 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", color=green, community=0, file="Server.feature.cs", label="_assembly = assembly", prediction=155, span="27-27"];
m30_2 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", color=green, community=0, file="Server.feature.cs", label="_resourceName = resourceName", prediction=156, span="28-28"];
m30_3 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="Server.feature.cs", label="Exit HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="25-25"];
m30_8 [file="Server.feature.cs", label="HangFire.Web.SingleResourceHandler", span=""];
m32_47 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="103-103"];
m32_48 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="ServerSteps.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="105-106"];
m32_49 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="ServerSteps.cs", label="CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="108-108"];
m32_50 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", span="103-103"];
m32_9 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJob()", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJob()", span="29-29"];
m32_35 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="82-82"];
m32_39 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=1, file="ServerSteps.cs", label="_server = new JobServer(\r\n                RedisFactory.BasicManager,\r\n                name,\r\n                workers,\r\n                queues,\r\n                null,\r\n                TimeSpan.FromSeconds(1),\r\n                TimeSpan.FromSeconds(1))", prediction=157, span="84-91"];
m32_40 [cluster="HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.CreateServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="82-82"];
m32_20 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="50-50"];
m32_21 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="ServerSteps.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', QueueSteps.DefaultQueue))", span="52-52"];
m32_22 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeued()", span="50-50"];
m32_29 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", span="65-65"];
m32_30 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", color=green, community=0, file="ServerSteps.cs", label="WhenTheServerStartsWithWorkers(name, 1)", prediction=158, span="67-67"];
m32_31 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStarts(string)", span="65-65"];
m32_74 [cluster="Unk.GetAllEntriesFromHash", file="ServerSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m32_0 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.TearDown()", span="19-19"];
m32_1 [cluster="HangFire.Tests.ServerSteps.TearDown()", color=green, community=0, file="ServerSteps.cs", label="_server != null", prediction=158, span="21-21"];
m32_2 [cluster="HangFire.Tests.ServerSteps.TearDown()", color=green, community=0, file="ServerSteps.cs", label="_server.Dispose()", prediction=158, span="23-23"];
m32_3 [cluster="HangFire.Tests.ServerSteps.TearDown()", color=green, community=0, file="ServerSteps.cs", label="_server = null", prediction=161, span="24-24"];
m32_64 [cluster="Unk.IsTrue", file="ServerSteps.cs", label="Entry Unk.IsTrue", span=""];
m32_6 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ServerSteps.cs", label="Entry HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14"];
m32_7 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ServerSteps.cs", label="context.Transaction.RemoveFromList(''succeeded'', context.JobId)", span="16-16"];
m32_8 [cluster="HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="ServerSteps.cs", label="Exit HangFire.Redis.States.SucceededStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="14-14"];
m32_27 [cluster="Unk.AddItemToSet", file="ServerSteps.cs", label="Entry Unk.AddItemToSet", span=""];
m32_15 [cluster="string.Format(string, object)", file="ServerSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m32_36 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", span="77-77"];
m32_37 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", color=green, community=0, file="ServerSteps.cs", label="CreateServer(name, 1, new [] { queue1, queue2 })", prediction=158, span="79-79"];
m32_38 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", span="77-77"];
m32_58 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="121-121"];
m32_59 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="ServerSteps.cs", label="Thread.Sleep(_serverStartupTimeout)", span="123-123"];
m32_60 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="ServerSteps.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="124-124"];
m32_61 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="121-121"];
m32_53 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="112-112"];
m32_54 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", color=green, community=0, file="ServerSteps.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", prediction=163, span="114-115"];
m32_55 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", color=green, community=0, file="ServerSteps.cs", label="CollectionAssert.DoesNotContain(jobIds, JobSteps.DefaultJobId)", prediction=164, span="117-117"];
m32_56 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="112-112"];
m32_76 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="142-142"];
m32_77 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", color=green, community=0, file="ServerSteps.cs", label="var registeredQueues = Redis.Client.GetAllItemsFromList(String.Format(''hangfire:server:{0}:queues'', name))", prediction=165, span="144-144"];
m32_78 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", color=green, community=0, file="ServerSteps.cs", label="Assert.AreEqual(2, registeredQueues.Count)", prediction=166, span="146-146"];
m32_79 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", color=green, community=0, file="ServerSteps.cs", label="Assert.AreEqual(queue1, registeredQueues[0])", prediction=165, span="147-147"];
m32_80 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", color=green, community=0, file="ServerSteps.cs", label="Assert.AreEqual(queue2, registeredQueues[1])", prediction=165, span="148-148"];
m32_81 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="142-142"];
m32_42 [cluster="System.TimeSpan.FromSeconds(double)", file="ServerSteps.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m32_69 [cluster="Unk.IsFalse", file="ServerSteps.cs", label="Entry Unk.IsFalse", span=""];
m32_82 [cluster="Unk.AreEqual", file="ServerSteps.cs", label="Entry Unk.AreEqual", span=""];
m32_62 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="ServerSteps.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m32_43 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="95-95"];
m32_44 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", color=green, community=0, file="ServerSteps.cs", label="WhenTheServerStarts(name)", prediction=158, span="97-97"];
m32_45 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", color=green, community=0, file="ServerSteps.cs", label="_server.Dispose()", prediction=158, span="98-98"];
m32_46 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="95-95"];
m32_41 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="ServerSteps.cs", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33"];
m32_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="ServerSteps.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="28-28"];
m32_28 [cluster="Unk.AddItemToList", file="ServerSteps.cs", label="Entry Unk.AddItemToList", span=""];
m32_16 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="43-43"];
m32_18 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="ServerSteps.cs", label="Given(String.Format(''the job was dequeued from the '{0}' queue'', queue))", span="46-46"];
m32_17 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="ServerSteps.cs", label="Given(''a job'')", span="45-45"];
m32_19 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobFromTheQueue(string)", span="43-43"];
m32_70 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="135-135"];
m32_71 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", color=green, community=0, file="ServerSteps.cs", label="var properties = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:server:{0}'', name))", prediction=171, span="137-137"];
m32_72 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", color=green, community=0, file="ServerSteps.cs", label="DictionaryAssert.ContainsFollowingItems(table, properties)", prediction=172, span="138-138"];
m32_73 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="135-135"];
m32_51 [cluster="Unk.GetAllItemsFromList", file="ServerSteps.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m32_63 [cluster="Unk.SetContainsItem", file="ServerSteps.cs", label="Entry Unk.SetContainsItem", span=""];
m32_52 [cluster="Unk.Contains", file="ServerSteps.cs", label="Entry Unk.Contains", span=""];
m32_89 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="158-158"];
m32_88 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", color=green, community=0, file="ServerSteps.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}:queues'', name)))", prediction=173, span="160-160"];
m32_87 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="158-158"];
m32_11 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m32_12 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="ServerSteps.cs", label="Given(String.Format(''a job of the '{0}' type'', type))", span="38-38"];
m32_13 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="ServerSteps.cs", label="Given(''the job was dequeued'')", span="39-39"];
m32_14 [cluster="HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.GivenADequeuedJobOfTheType(string)", span="36-36"];
m32_10 [cluster="Unk.Given", file="ServerSteps.cs", label="Entry Unk.Given", span=""];
m32_57 [cluster="Unk.DoesNotContain", file="ServerSteps.cs", label="Entry Unk.DoesNotContain", span=""];
m32_23 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m32_25 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="ServerSteps.cs", label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="59-61"];
m32_24 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="ServerSteps.cs", label="Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="58-58"];
m32_26 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m32_5 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="ServerSteps.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="30-30"];
m32_32 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m32_33 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", color=green, community=0, file="ServerSteps.cs", label="CreateServer(name, workers, new [] { ''critical'' })", prediction=158, span="73-73"];
m32_34 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m32_75 [cluster="Unk.ContainsFollowingItems", file="ServerSteps.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m32_85 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="152-152"];
m32_84 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", color=green, community=0, file="ServerSteps.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", prediction=175, span="154-154"];
m32_83 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="152-152"];
m32_65 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="128-128"];
m32_66 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", color=green, community=0, file="ServerSteps.cs", label="Thread.Sleep(_serverStartupTimeout)", prediction=158, span="130-130"];
m32_67 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", color=green, community=0, file="ServerSteps.cs", label="Assert.IsFalse(Redis.Client.SetContainsItem(''hangfire:servers'', name))", prediction=177, span="131-131"];
m32_68 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="128-128"];
m32_86 [cluster="Unk.ContainsKey", file="ServerSteps.cs", label="Entry Unk.ContainsKey", span=""];
m32_90 [file="ServerSteps.cs", label="HangFire.Tests.ServerSteps", span=""];
m34_23 [cluster="HangFire.Server.ServerWatchdog.RemoveTimedOutServers()", file="ServerWatchdogSteps.cs", label="Entry HangFire.Server.ServerWatchdog.RemoveTimedOutServers()", span="23-23"];
m34_12 [cluster="string.Format(string, object)", file="ServerWatchdogSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m34_4 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(System.DateTime)", file="ServerWatchdogSteps.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(System.DateTime)", span="20-20"];
m34_5 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(System.DateTime)", color=green, community=0, file="ServerWatchdogSteps.cs", label="GivenAServerThatWasStarted(ServerSteps.DefaultServerName, startedAt)", prediction=178, span="22-22"];
m34_6 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(System.DateTime)", file="ServerWatchdogSteps.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(System.DateTime)", span="20-20"];
m34_0 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerWatchdog()", file="ServerWatchdogSteps.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenAServerWatchdog()", span="14-14"];
m34_1 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerWatchdog()", color=green, community=0, file="ServerWatchdogSteps.cs", label="_watchdog = new ServerWatchdog(RedisFactory.BasicManager)", prediction=179, span="16-16"];
m34_2 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerWatchdog()", file="ServerWatchdogSteps.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenAServerWatchdog()", span="14-14"];
m34_15 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenItsLastHeartbeatWas(System.DateTime)", file="ServerWatchdogSteps.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenItsLastHeartbeatWas(System.DateTime)", span="36-36"];
m34_16 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenItsLastHeartbeatWas(System.DateTime)", color=green, community=0, file="ServerWatchdogSteps.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', ServerSteps.DefaultServerName),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(lastHeartbeat))", prediction=180, span="38-41"];
m34_17 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenItsLastHeartbeatWas(System.DateTime)", file="ServerWatchdogSteps.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenItsLastHeartbeatWas(System.DateTime)", span="36-36"];
m34_9 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", color=green, community=0, file="ServerWatchdogSteps.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', name),\r\n                ''StartedAt'',\r\n                JobHelper.ToStringTimestamp(startedAt))", prediction=181, span="29-32"];
m34_7 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="ServerWatchdogSteps.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", span="26-26"];
m34_8 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", color=green, community=0, file="ServerWatchdogSteps.cs", label="Redis.Client.AddItemToSet(''hangfire:servers'', name)", prediction=182, span="28-28"];
m34_10 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="ServerWatchdogSteps.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", span="26-26"];
m34_20 [cluster="HangFire.Tests.ServerWatchdogSteps.WhenTheWatchdogGetsTheJobDone()", file="ServerWatchdogSteps.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.WhenTheWatchdogGetsTheJobDone()", span="50-50"];
m34_21 [cluster="HangFire.Tests.ServerWatchdogSteps.WhenTheWatchdogGetsTheJobDone()", color=green, community=0, file="ServerWatchdogSteps.cs", label="_watchdog.RemoveTimedOutServers()", prediction=178, span="52-52"];
m34_22 [cluster="HangFire.Tests.ServerWatchdogSteps.WhenTheWatchdogGetsTheJobDone()", file="ServerWatchdogSteps.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.WhenTheWatchdogGetsTheJobDone()", span="50-50"];
m34_37 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="ServerWatchdogSteps.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", span="76-76"];
m34_38 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", color=green, community=0, file="ServerWatchdogSteps.cs", label="Assert.IsFalse(Redis.Client.SetContainsItem(''hangfire:servers'', name))", prediction=184, span="78-78"];
m34_39 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", color=green, community=0, file="ServerWatchdogSteps.cs", label="Assert.IsFalse(\r\n                Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", prediction=185, span="79-80"];
m34_40 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="ServerWatchdogSteps.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", span="76-76"];
m34_3 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="ServerWatchdogSteps.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18"];
m34_32 [cluster="Unk.IsTrue", file="ServerWatchdogSteps.cs", label="Entry Unk.IsTrue", span=""];
m34_34 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="ServerWatchdogSteps.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", span="70-70"];
m34_35 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", color=green, community=0, file="ServerWatchdogSteps.cs", label="ThenTheServerShouldBeRemoved(ServerSteps.DefaultServerName)", prediction=178, span="72-72"];
m34_36 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="ServerWatchdogSteps.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", span="70-70"];
m34_41 [cluster="Unk.IsFalse", file="ServerWatchdogSteps.cs", label="Entry Unk.IsFalse", span=""];
m34_14 [cluster="Unk.SetEntryInHash", file="ServerWatchdogSteps.cs", label="Entry Unk.SetEntryInHash", span=""];
m34_11 [cluster="Unk.AddItemToSet", file="ServerWatchdogSteps.cs", label="Entry Unk.AddItemToSet", span=""];
m34_24 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="ServerWatchdogSteps.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", span="56-56"];
m34_25 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", color=green, community=0, file="ServerWatchdogSteps.cs", label="ThenTheServerShouldNotBeRemoved(ServerSteps.DefaultServerName)", prediction=178, span="58-58"];
m34_26 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="ServerWatchdogSteps.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", span="56-56"];
m34_27 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", file="ServerWatchdogSteps.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", span="62-62"];
m34_28 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", color=green, community=0, file="ServerWatchdogSteps.cs", label="Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:servers'', name))", prediction=188, span="64-64"];
m34_29 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", color=green, community=0, file="ServerWatchdogSteps.cs", label="Assert.IsTrue(\r\n                Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", prediction=189, span="65-66"];
m34_30 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", file="ServerWatchdogSteps.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved(string)", span="62-62"];
m34_31 [cluster="Unk.SetContainsItem", file="ServerWatchdogSteps.cs", label="Entry Unk.SetContainsItem", span=""];
m34_13 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ServerWatchdogSteps.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63"];
m34_42 [file="ServerWatchdogSteps.cs", label="HangFire.Tests.ServerWatchdogSteps", span=""];
m35_53 [cluster="Unk.FromNullableStringTimestamp", file="TestClientExceptionFilter.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m35_0 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="12-12"];
m35_1 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="TestClientExceptionFilter.cs", label="_storage = new RedisStorage(RedisUtils.GetHostAndPort(), RedisUtils.GetDb())", span="14-14"];
m35_2 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="TestClientExceptionFilter.cs", label="_token = new CancellationToken(true)", span="15-15"];
m35_3 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", file="TestClientExceptionFilter.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.FetchedJobsWatcherFacts()", span="12-12"];
m35_44 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="55-55"];
m35_45 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="var redis = RedisUtils.CreateClient()", span="57-57"];
m35_46 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="60-60"];
m35_47 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="61-61"];
m35_50 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Assert.NotNull(JobHelper.FromNullableStringTimestamp(\r\n                    redis.GetValueFromHash(''hangfire:job:my-job'', ''Checked'')))", span="68-69"];
m35_48 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="var watcher = CreateWatcher()", span="63-63"];
m35_49 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="watcher.Execute(_token)", span="66-66"];
m35_51 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_MarksDequeuedJobAsChecked_IfItHasNoFetchedFlagSet()", span="55-55"];
m35_41 [cluster="Unk.GetAllEntriesFromHash", file="TestClientExceptionFilter.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m35_36 [cluster="Unk.SetEntryInHash", file="TestClientExceptionFilter.cs", label="Entry Unk.SetEntryInHash", span=""];
m35_32 [cluster="Unk.AddItemToSet", file="TestClientExceptionFilter.cs", label="Entry Unk.AddItemToSet", span=""];
m35_27 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="Assert.Equal(''my-job'', listEntry)", span="47-47"];
m35_18 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="28-28"];
m35_19 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="var redis = RedisUtils.CreateClient()", span="30-30"];
m35_20 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="33-33"];
m35_21 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="34-34"];
m35_22 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="35-36"];
m35_25 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="44-44"];
m35_26 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="var listEntry = redis.DequeueItemFromList(''hangfire:queue:my-queue'')", span="46-46"];
m35_28 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="var job = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="49-49"];
m35_23 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="var watcher = CreateWatcher()", span="38-38"];
m35_24 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="watcher.Execute(_token)", span="41-41"];
m35_29 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="Assert.False(job.ContainsKey(''Fetched''))", span="50-50"];
m35_30 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", file="TestClientExceptionFilter.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesTimedOutJobs_AndDeletesThemFromFetchedList()", span="28-28"];
m35_12 [cluster="Unk.>", file="TestClientExceptionFilter.cs", label="Entry Unk.>", span=""];
m35_43 [cluster="Unk.False", file="TestClientExceptionFilter.cs", label="Entry Unk.False", span=""];
m35_6 [cluster="HangFire.Redis.Tests.RedisUtils.GetDb()", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.Tests.RedisUtils.GetDb()", span="37-37"];
m35_39 [cluster="Unk.GetListCount", file="TestClientExceptionFilter.cs", label="Entry Unk.GetListCount", span=""];
m35_34 [cluster="System.DateTime.AddDays(double)", file="TestClientExceptionFilter.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m35_38 [cluster="HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.Execute(System.Threading.CancellationToken)", span="47-47"];
m35_17 [cluster="HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.FetchedJobsWatcher.FetchedJobsWatcher(HangFire.JobStorage)", span="31-31"];
m35_54 [cluster="Unk.NotNull", file="TestClientExceptionFilter.cs", label="Entry Unk.NotNull", span=""];
m35_59 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="81-82"];
m35_55 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="74-74"];
m35_56 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="var redis = RedisUtils.CreateClient()", span="76-76"];
m35_57 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="79-79"];
m35_58 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="80-80"];
m35_62 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Assert.Equal(0, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="90-90"];
m35_63 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Assert.Equal(1, redis.GetListCount(''hangfire:queue:my-queue''))", span="91-91"];
m35_64 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="var job = redis.GetAllEntriesFromHash(''hangfire:job:my-job'')", span="93-93"];
m35_60 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="var watcher = CreateWatcher()", span="84-84"];
m35_61 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="watcher.Execute(_token)", span="87-87"];
m35_65 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Assert.False(job.ContainsKey(''Checked''))", span="94-94"];
m35_66 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_EnqueuesCheckedAndTimedOutJob_IfNoFetchedFlagSet()", span="74-74"];
m35_40 [cluster="Unk.DequeueItemFromList", file="TestClientExceptionFilter.cs", label="Entry Unk.DequeueItemFromList", span=""];
m35_33 [cluster="Unk.AddItemToList", file="TestClientExceptionFilter.cs", label="Entry Unk.AddItemToList", span=""];
m35_37 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="121-121"];
m35_77 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="TestClientExceptionFilter.cs", label="return new FetchedJobsWatcher(_storage);", span="123-123"];
m35_78 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", file="TestClientExceptionFilter.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.CreateWatcher()", span="121-121"];
m35_14 [cluster="lambda expression", file="TestClientExceptionFilter.cs", label="Entry lambda expression", span="22-22"];
m35_15 [cluster="lambda expression", file="TestClientExceptionFilter.cs", label="new FetchedJobsWatcher(null)", span="22-22"];
m35_16 [cluster="lambda expression", file="TestClientExceptionFilter.cs", label="Exit lambda expression", span="22-22"];
m35_5 [cluster="HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.Tests.RedisUtils.GetHostAndPort()", span="20-20"];
m35_35 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="TestClientExceptionFilter.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m35_31 [cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15"];
m35_7 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="TestClientExceptionFilter.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m35_4 [cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="43-43"];
m35_52 [cluster="Unk.GetValueFromHash", file="TestClientExceptionFilter.cs", label="Entry Unk.GetValueFromHash", span=""];
m35_72 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Fetched'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="108-109"];
m35_67 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="99-99"];
m35_68 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="var redis = RedisUtils.CreateClient()", span="101-101"];
m35_69 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="redis.AddItemToSet(''hangfire:queues'', ''my-queue'')", span="104-104"];
m35_70 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="redis.AddItemToList(''hangfire:queue:my-queue:dequeued'', ''my-job'')", span="105-105"];
m35_71 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="redis.SetEntryInHash(''hangfire:job:my-job'', ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow.AddDays(-1)))", span="106-107"];
m35_75 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Assert.Equal(1, redis.GetListCount(''hangfire:queue:my-queue:dequeued''))", span="117-117"];
m35_73 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="var watcher = CreateWatcher()", span="111-111"];
m35_74 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="watcher.Execute(_token)", span="114-114"];
m35_76 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", file="TestClientExceptionFilter.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Execute_DoesNotEnqueueTimedOutByCheckedFlagJob_IfFetchedFlagSet()", span="99-99"];
m35_8 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="TestClientExceptionFilter.cs", label="Entry HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="19-19"];
m35_9 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="TestClientExceptionFilter.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new FetchedJobsWatcher(null))", span="21-22"];
m35_10 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="TestClientExceptionFilter.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="24-24"];
m35_11 [cluster="HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="TestClientExceptionFilter.cs", label="Exit HangFire.Redis.Tests.FetchedJobsWatcherFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="19-19"];
m35_42 [cluster="Unk.ContainsKey", file="TestClientExceptionFilter.cs", label="Entry Unk.ContainsKey", span=""];
m35_79 [file="TestClientExceptionFilter.cs", label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", span=""];
m36_17 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TestClientFilter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m36_19 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="TestClientFilter.cs", label="Entry HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="46-46"];
m36_20 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="TestClientFilter.cs", label="Assert.IsNotNull(filterContext)", span="48-48"];
m36_21 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="TestClientFilter.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreated'') \r\n                + (filterContext.Canceled ? '' (with the canceled flag set)'' : null))", span="50-51"];
m36_23 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="TestClientFilter.cs", label="filterContext.ExceptionHandled = true", span="55-55"];
m36_22 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="TestClientFilter.cs", label=_handlesException, span="53-53"];
m36_24 [cluster="HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="TestClientFilter.cs", label="Exit HangFire.Tests.TestClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="46-46"];
m36_7 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="TestClientFilter.cs", label="Entry HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="29-29"];
m36_8 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="TestClientFilter.cs", label="Assert.IsNotNull(filterContext)", span="31-31"];
m36_11 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", color=green, community=0, file="TestClientFilter.cs", label="filterContext.Canceled = true", prediction=190, span="37-37"];
m36_10 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="TestClientFilter.cs", label=_cancelsTheCreation, span="35-35"];
m36_12 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="TestClientFilter.cs", label=_throwException, span="40-40"];
m36_13 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="TestClientFilter.cs", label="throw new Exception();", span="42-42"];
m36_14 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="TestClientFilter.cs", label="Exit HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="29-29"];
m36_18 [cluster="System.Exception.Exception()", file="TestClientFilter.cs", label="Entry System.Exception.Exception()", span="0-0"];
m36_0 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="TestClientFilter.cs", label="Entry HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m36_1 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="TestClientFilter.cs", label="_name = name", span="22-22"];
m36_2 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="TestClientFilter.cs", label="_results = results", span="23-23"];
m36_3 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="TestClientFilter.cs", label="_throwException = throwException", span="24-24"];
m36_4 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="TestClientFilter.cs", label="_cancelsTheCreation = cancelsTheCreation", span="25-25"];
m36_5 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="TestClientFilter.cs", label="_handlesException = handlesException", span="26-26"];
m36_6 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="TestClientFilter.cs", label="Exit HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", span="15-15"];
m36_15 [cluster="Unk.IsNotNull", file="TestClientFilter.cs", label="Entry Unk.IsNotNull", span=""];
m36_25 [file="TestClientFilter.cs", label="HangFire.Tests.TestClientFilter", span=""];
m37_0 [cluster="HangFire.Tests.TestJob.Perform()", file="TestJob.cs", label="Entry HangFire.Tests.TestJob.Perform()", span="4-4"];
m37_1 [cluster="HangFire.Tests.TestJob.Perform()", file="TestJob.cs", label="Exit HangFire.Tests.TestJob.Perform()", span="4-4"];
m38_20 [cluster="string.Equals(string)", file="Transforms.cs", label="Entry string.Equals(string)", span="0-0"];
m38_0 [cluster="HangFire.Tests.Transforms.InXDaysTransform(int)", file="Transforms.cs", label="Entry HangFire.Tests.Transforms.InXDaysTransform(int)", span="9-9"];
m38_1 [cluster="HangFire.Tests.Transforms.InXDaysTransform(int)", color=green, community=0, file="Transforms.cs", label="return DateTime.Today.AddDays(days);", prediction=191, span="11-11"];
m38_2 [cluster="HangFire.Tests.Transforms.InXDaysTransform(int)", file="Transforms.cs", label="Exit HangFire.Tests.Transforms.InXDaysTransform(int)", span="9-9"];
m38_4 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="Transforms.cs", label="Entry HangFire.Tests.Transforms.ATimeAgo(string)", span="15-15"];
m38_5 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="var now = DateTime.UtcNow", prediction=192, span="17-17"];
m38_6 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="''millisecond''.Equals(timeAgo)", prediction=193, span="18-18"];
m38_7 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="return now.AddMilliseconds(-1);", prediction=192, span="20-20"];
m38_9 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="return now.AddSeconds(-1);", prediction=192, span="24-24"];
m38_11 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="return now.AddMinutes(-1);", prediction=192, span="28-28"];
m38_13 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="return now.AddHours(-1);", prediction=192, span="32-32"];
m38_15 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="return now.AddDays(-1);", prediction=192, span="36-36"];
m38_17 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="return now.AddMonths(-1);", prediction=192, span="40-40"];
m38_8 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="''second''.Equals(timeAgo)", prediction=193, span="22-22"];
m38_10 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="''minute''.Equals(timeAgo)", prediction=193, span="26-26"];
m38_12 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="''hour''.Equals(timeAgo)", prediction=193, span="30-30"];
m38_14 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="''day''.Equals(timeAgo)", prediction=193, span="34-34"];
m38_16 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="''month''.Equals(timeAgo)", prediction=193, span="38-38"];
m38_18 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", color=green, community=0, file="Transforms.cs", label="throw new InvalidOperationException(String.Format(''Wrong time unit '{0}''', timeAgo));", prediction=193, span="43-43"];
m38_19 [cluster="HangFire.Tests.Transforms.ATimeAgo(string)", file="Transforms.cs", label="Exit HangFire.Tests.Transforms.ATimeAgo(string)", span="15-15"];
m38_25 [cluster="System.DateTime.AddMonths(int)", file="Transforms.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m38_23 [cluster="System.DateTime.AddMinutes(double)", file="Transforms.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m38_22 [cluster="System.DateTime.AddSeconds(double)", file="Transforms.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m38_21 [cluster="System.DateTime.AddMilliseconds(double)", file="Transforms.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m38_27 [cluster="string.Format(string, object)", file="Transforms.cs", label="Entry string.Format(string, object)", span="0-0"];
m38_3 [cluster="System.DateTime.AddDays(double)", file="Transforms.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m38_24 [cluster="System.DateTime.AddHours(double)", file="Transforms.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m39_33 [cluster="System.Threading.Thread.Join()", file="Worker.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m39_51 [cluster="System.Threading.ManualResetEventSlim.Reset()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
m39_81 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="Worker.cs", label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33"];
m39_84 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="Worker.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10"];
m39_52 [cluster="string.Format(string, params object[])", file="Worker.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m39_14 [cluster="System.Threading.Thread.Start()", file="Worker.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m39_78 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="Worker.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57"];
m39_34 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m39_13 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="Worker.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m39_11 [cluster="string.Format(string, object)", file="Worker.cs", label="Entry string.Format(string, object)", span="0-0"];
m39_25 [cluster="System.Threading.ManualResetEventSlim.Set()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m39_48 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="Worker.cs", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85"];
m39_19 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="Worker.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m39_10 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="Worker.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="31-31"];
m39_0 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="Worker.cs", label="Entry HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
m39_1 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="Worker.cs", label="_redis = redisManager.GetClient()", span="37-37"];
m39_3 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="Worker.cs", label="_manager = manager", span="40-40"];
m39_4 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="Worker.cs", label="_context = context", span="41-41"];
m39_2 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="Worker.cs", label="_stateMachine = new StateMachine(_redis)", span="38-38"];
m39_7 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="Worker.cs", label="_thread.Start()", span="50-50"];
m39_8 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="Worker.cs", label="Exit HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
m39_12 [cluster="Unk.GetLogger", file="Worker.cs", label="Entry Unk.GetLogger", span=""];
m39_49 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
m39_36 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Entry HangFire.Server.Worker.DoWork()", span="101-101"];
m39_47 [cluster="HangFire.Server.Worker.DoWork()", file="Worker.cs", label="Exit HangFire.Server.Worker.DoWork()", span="101-101"];
m39_79 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="Worker.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12"];
m39_85 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="Worker.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m39_9 [cluster="Unk.GetClient", file="Worker.cs", label="Entry Unk.GetClient", span=""];
m39_76 [cluster="Unk.Warn", file="Worker.cs", label="Entry Unk.Warn", span=""];
m39_77 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string)", file="Worker.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string)", span="10-10"];
m39_75 [cluster="string.IsNullOrEmpty(string)", file="Worker.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m39_80 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="Worker.cs", label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13"];
m39_53 [cluster="Unk.Fatal", file="Worker.cs", label="Entry Unk.Fatal", span=""];
m39_83 [cluster="HangFire.States.SucceededState.SucceededState(string)", file="Worker.cs", label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12"];
m39_15 [cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs", label="Entry HangFire.Server.Worker.SendStop()", span="53-53"];
m39_16 [cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs", label="_stopSent = true", span="55-55"];
m39_17 [cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs", label="_cts.Cancel()", span="56-56"];
m39_18 [cluster="HangFire.Server.Worker.SendStop()", file="Worker.cs", label="Exit HangFire.Server.Worker.SendStop()", span="53-53"];
m39_50 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="131-131"];
m39_54 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="String.IsNullOrEmpty(payload.Type)", span="133-133"];
m39_55 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    payload.Id))", span="135-137"];
m39_58 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="!_stateMachine.ChangeState(payload.Id, processingState, EnqueuedState.Name)", span="143-143"];
m39_62 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="jobDescriptor = new ServerJobDescriptor(\r\n                    _redis, _context.Activator, payload)", span="158-159"];
m39_67 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="170-172"];
m39_72 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="_stateMachine.ChangeState(payload.Id, state, ProcessingState.Name)", span="192-192"];
m39_57 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="var processingState = new ProcessingState(''Worker has started processing.'', _context.ServerName)", span="142-142"];
m39_56 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="return;", span="139-139"];
m39_59 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="return;", span="145-145"];
m39_60 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Exception exception = null", span="153-153"];
m39_61 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="ServerJobDescriptor jobDescriptor = null", span="155-155"];
m39_63 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="161-162"];
m39_64 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="_context.Performer.PerformJob(performContext)", span="164-164"];
m39_65 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label=Exception, span="166-166"];
m39_68 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="JobState state", span="182-182"];
m39_66 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="exception = ex", span="168-168"];
m39_69 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="exception == null", span="183-183"];
m39_71 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="state = new FailedState(''The job has been failed.'', exception)", span="189-189"];
m39_70 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="state = new SucceededState(''The job has been completed successfully.'')", span="185-185"];
m39_74 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="Worker.cs", label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="131-131"];
m39_26 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Entry HangFire.Server.Worker.Dispose()", span="87-87"];
m39_27 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="!_stopSent", span="89-89"];
m39_30 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_cts.Dispose()", span="96-96"];
m39_31 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="_jobIsReady.Dispose()", span="97-97"];
m39_32 [cluster="HangFire.Server.Worker.Dispose()", file="Worker.cs", label="Exit HangFire.Server.Worker.Dispose()", span="87-87"];
m39_82 [cluster="Unk.Error", file="Worker.cs", label="Entry Unk.Error", span=""];
m39_35 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="Worker.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m39_20 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77"];
m39_21 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs", label=_jobLock, span="79-79"];
m39_22 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs", label="_jobPayload = payload", span="81-81"];
m39_23 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs", label="_jobIsReady.Set()", span="84-84"];
m39_24 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="Worker.cs", label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77"];
m39_86 [file="Worker.cs", label="HangFire.Server.Worker", span=""];
n218 -> n6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n38  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n45  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n52  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n56  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n150  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n160  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n171  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n197  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n204  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n218 -> n216  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Client.CreateContextFacts", style=dashed];
n219 -> n83  [color=darkseagreen4, key=1, label=context, style=dashed];
n220 -> n92  [color=darkseagreen4, key=1, label=context, style=dashed];
n221 -> n100  [color=darkseagreen4, key=1, label=context, style=dashed];
n222 -> n107  [color=darkseagreen4, key=1, label=context, style=dashed];
n223 -> n138  [color=darkseagreen4, key=1, label=context, style=dashed];
n224 -> n155  [color=darkseagreen4, key=1, label=context, style=dashed];
n225 -> n165  [color=darkseagreen4, key=1, label=context, style=dashed];
n226 -> n186  [color=darkseagreen4, key=1, label=context, style=dashed];
n227 -> n194  [color=darkseagreen4, key=1, label=context, style=dashed];
n228 -> n213  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
n1 -> n15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n6 -> n19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n25 -> n29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n34 -> n37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n41 -> n44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n48 -> n51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n55 -> n57  [color=darkseagreen4, key=1, label=context, style=dashed];
n55 -> n58  [color=darkseagreen4, key=1, label=context, style=dashed];
n55 -> n59  [color=darkseagreen4, key=1, label=context, style=dashed];
n55 -> n60  [color=darkseagreen4, key=1, label=context, style=dashed];
n67 -> n69  [color=darkseagreen4, key=1, label=context, style=dashed];
n73 -> n75  [color=darkseagreen4, key=1, label=context, style=dashed];
n78 -> n83  [color=darkseagreen4, key=1, label=context, style=dashed];
n79 -> n82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n87 -> n92  [color=darkseagreen4, key=1, label=context, style=dashed];
n88 -> n91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n95 -> n97  [color=darkseagreen4, key=1, label=context, style=dashed];
n95 -> n100  [color=darkseagreen4, key=1, label=context, style=dashed];
n97 -> n99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n103 -> n107  [color=darkseagreen4, key=1, label=context, style=dashed];
n104 -> n106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n111 -> n113  [color=darkseagreen4, key=1, label=context, style=dashed];
n116 -> n118  [color=darkseagreen4, key=1, label=context, style=dashed];
n121 -> n123  [color=darkseagreen4, key=1, label=context, style=dashed];
n121 -> n124  [color=darkseagreen4, key=1, label=context, style=dashed];
n127 -> n129  [color=darkseagreen4, key=1, label=context, style=dashed];
n127 -> n130  [color=darkseagreen4, key=1, label=context, style=dashed];
n133 -> n135  [color=darkseagreen4, key=1, label=context, style=dashed];
n133 -> n138  [color=darkseagreen4, key=1, label=context, style=dashed];
n135 -> n137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n148 -> n150  [color=darkseagreen4, key=1, label=context, style=dashed];
n148 -> n155  [color=darkseagreen4, key=1, label=context, style=dashed];
n150 -> n154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n159 -> n165  [color=darkseagreen4, key=1, label=context, style=dashed];
n159 -> n161  [color=darkseagreen4, key=1, label=context, style=dashed];
n159 -> n162  [color=darkseagreen4, key=1, label=context, style=dashed];
n160 -> n164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n168 -> n170  [color=darkseagreen4, key=1, label=context, style=dashed];
n171 -> n173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n174 -> n176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n181 -> n183  [color=darkseagreen4, key=1, label=context, style=dashed];
n181 -> n186  [color=darkseagreen4, key=1, label=context, style=dashed];
n183 -> n185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n189 -> n191  [color=darkseagreen4, key=1, label=context, style=dashed];
n189 -> n194  [color=darkseagreen4, key=1, label=context, style=dashed];
n191 -> n193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n197 -> n203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n209 -> n213  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
n210 -> n212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d30 -> d10  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d30 -> d20  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d30 -> d21  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
d30 -> d28  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m1_1 -> m1_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_11 -> m1_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_32 -> m1_34  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_32 -> m1_35  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_32 -> m1_36  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_33 -> m1_36  [color=darkseagreen4, key=1, label=contextCopy, style=dashed];
m1_25 -> m1_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_18 -> m1_20  [color=darkseagreen4, key=1, label=context, style=dashed];
m1_18 -> m1_21  [color=darkseagreen4, key=1, label=context, style=dashed];
m2_22 -> m2_26  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m2_34 -> m2_18  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_34 -> m2_23  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_34 -> m2_24  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m2_34 -> m2_25  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerWriteOnlyTransaction", style=dashed];
m3_4 -> m3_6  [color=green, key=1, label=servers, style=dashed];
m3_4 -> m3_9  [color=green, key=1, label=servers, style=dashed];
m3_9 -> m3_13  [color=green, key=1, label=server, style=dashed];
m3_9 -> m3_15  [color=green, key=1, label=server, style=dashed];
m3_9 -> m3_17  [color=green, key=1, label=server, style=dashed];
m3_9 -> m3_19  [color=green, key=1, label=server, style=dashed];
m3_9 -> m3_23  [color=green, key=1, label=server, style=dashed];
m3_41 -> m3_1  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_7  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_8  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_10  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_12  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_14  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_15  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_17  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_19  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m3_41 -> m3_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m7_14 -> m7_8  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m14_62 -> m14_64  [color=green, key=1, label=table2, style=dashed];
m14_50 -> m14_52  [color=green, key=1, label=table1, style=dashed];
m14_71 -> m14_73  [color=green, key=1, label=table3, style=dashed];
m14_71 -> m14_74  [color=green, key=1, label=table3, style=dashed];
m14_118 -> m14_36  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_37  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_40  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_47  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_48  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_53  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_59  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_60  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_65  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_69  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_70  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_76  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_80  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_81  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_84  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_88  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_89  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_92  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_96  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_97  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_100  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_104  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_105  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_108  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_112  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_113  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m14_118 -> m14_116  [color=green, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m16_53 -> m16_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_38 -> m16_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_18 -> m16_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_5 -> m16_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_28 -> m16_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_61 -> m16_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_32  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_36  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_52  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m16_61 -> m16_59  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerHeartbeatFacts", style=dashed];
m17_11 -> m17_13  [color=darkseagreen4, key=1, label=row, style=dashed];
m17_11 -> m17_14  [color=darkseagreen4, key=1, label=row, style=dashed];
m17_16 -> m17_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_12 -> m17_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_15 -> m17_15  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_26 -> m17_37  [color=darkseagreen4, key=1, label=cts, style=dashed];
m17_27 -> m17_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_42 -> m17_44  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_43 -> m17_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_46 -> m17_46  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_67 -> m17_50  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m17_67 -> m17_54  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m17_67 -> m17_57  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m17_67 -> m17_58  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m17_67 -> m17_63  [color=darkseagreen4, key=1, label="HangFire.Tests.JobFetcherSteps", style=dashed];
m17_68 -> m17_37  [color=darkseagreen4, key=1, label=cts, style=dashed];
m18_21 -> m18_23  [color=green, key=1, label=state, style=dashed];
m18_22 -> m18_25  [color=darkseagreen4, key=1, label=data, style=dashed];
m18_1 -> m18_4  [color=darkseagreen4, key=1, label=type, style=dashed];
m18_27 -> m18_27  [color=darkseagreen4, key=1, label=elapsedTime, style=dashed];
m18_41 -> m18_44  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_41 -> m18_15  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.ProcessingStateFacts", style=dashed];
m19_54 -> m19_57  [color=darkseagreen4, key=1, label=worker, style=dashed];
m19_0 -> m19_6  [color=green, key=1, label=IRedisClientsManager, style=dashed];
m19_0 -> m19_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_0 -> m19_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m19_4 -> m19_6  [color=green, key=1, label=i, style=dashed];
m19_4 -> m19_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m19_7 -> m19_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m19_67 -> m19_6  [color=green, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_26  [color=green, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_32  [color=green, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_33  [color=green, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_37  [color=green, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_38  [color=green, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_39  [color=green, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_48  [color=green, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_3  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_8  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_11  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_25  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_34  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_35  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m19_67 -> m19_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m20_5 -> m20_14  [color=green, key=1, label=hash, style=dashed];
m20_5 -> m20_16  [color=green, key=1, label=hash, style=dashed];
m20_5 -> m20_21  [color=green, key=1, label=hash, style=dashed];
m20_8 -> m20_23  [color=green, key=1, label=dto, style=dashed];
m20_37 -> m20_23  [color=green, key=1, label="HangFire.Web.Pages.RecurringJobsPage", style=dashed];
m22_44 -> m22_46  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformingContext", style=dashed];
m22_44 -> m22_47  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformingContext", style=dashed];
m22_44 -> m22_54  [color=darkseagreen4, key=1, label="HangFire.Filters.IServerFilter", style=dashed];
m22_44 -> m22_58  [color=darkseagreen4, key=1, label="HangFire.Filters.IServerFilter", style=dashed];
m22_53 -> m22_55  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m22_53 -> m22_58  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m22_53 -> m22_59  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m22_52 -> m22_57  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m22_16 -> m22_18  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m22_21 -> m22_34  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformContext", style=dashed];
m22_21 -> m22_35  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformContext", style=dashed];
m22_24 -> m22_42  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m22_26 -> m22_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_23 -> m22_65  [color=darkseagreen4, key=1, label="HangFire.Filters.ServerExceptionContext", style=dashed];
m22_39 -> m22_42  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.PerformedContext>", style=dashed];
m22_3 -> m22_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>", style=dashed];
m22_68 -> m22_14  [color=darkseagreen4, key=1, label="HangFire.Server.JobPerformer", style=dashed];
m22_68 -> m22_17  [color=darkseagreen4, key=1, label="HangFire.Server.JobPerformer", style=dashed];
m22_69 -> m22_34  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformContext", style=dashed];
m22_69 -> m22_35  [color=darkseagreen4, key=1, label="HangFire.Filters.PerformContext", style=dashed];
m22_70 -> m22_42  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m22_71 -> m22_42  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.PerformedContext>", style=dashed];
m22_72 -> m22_42  [color=darkseagreen4, key=1, label="HangFire.Filters.IServerFilter", style=dashed];
m23_98 -> m23_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_64 -> m23_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_64 -> m23_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_64 -> m23_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_64 -> m23_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_96 -> m23_98  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_96 -> m23_99  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_97 -> m23_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_0 -> m23_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m23_0 -> m23_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m23_9 -> m23_9  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m23_66 -> m23_68  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_66 -> m23_71  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_66 -> m23_72  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m23_67 -> m23_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_68 -> m23_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_71 -> m23_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_70 -> m23_90  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m23_109 -> m23_13  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_24  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_25  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_43  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_44  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_45  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_46  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_51  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_52  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_54  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_55  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_56  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_57  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_59  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_67  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_78  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_68  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_82  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_69  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_71  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_90  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_109 -> m23_93  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m23_110 -> m23_90  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m23_111 -> m23_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_111 -> m23_106  [color=darkseagreen4, key=1, label=string, style=dashed];
m24_3 -> m24_5  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m24_3 -> m24_8  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m24_4 -> m24_6  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m24_4 -> m24_7  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m24_4 -> m24_9  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m24_4 -> m24_10  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m24_4 -> m24_11  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_6 -> m25_13  [color=green, key=1, label="System.Type", style=dashed];
m25_6 -> m25_15  [color=green, key=1, label="System.Type", style=dashed];
m25_29 -> m25_35  [color=green, key=1, label="System.Type", style=dashed];
m25_33 -> m25_35  [color=green, key=1, label=client, style=dashed];
m26_48 -> m26_387  [color=darkseagreen4, key=1, label="System.Func<HangFire.SqlServer.Entities.SqlJob, HangFire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m26_98 -> m26_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_235 -> m26_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_72 -> m26_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_72 -> m26_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_73 -> m26_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_74 -> m26_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_351 -> m26_355  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m26_354 -> m26_356  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_195 -> m26_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_37 -> m26_39  [color=green, key=1, label="lambda expression", style=dashed];
m26_182 -> m26_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_5 -> m26_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_6 -> m26_8  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m26_8 -> m26_45  [color=darkseagreen4, key=1, label=failedJobs, style=dashed];
m26_45 -> m26_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_13 -> m26_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_23 -> m26_25  [color=green, key=1, label="lambda expression", style=dashed];
m26_31 -> m26_33  [color=green, key=1, label="lambda expression", style=dashed];
m26_43 -> m26_45  [color=green, key=1, label="lambda expression", style=dashed];
m26_44 -> m26_76  [color=darkseagreen4, key=1, label=index, style=dashed];
m26_44 -> m26_81  [color=darkseagreen4, key=1, label=index, style=dashed];
m26_81 -> m26_81  [color=darkseagreen4, key=1, label=index, style=dashed];
m26_46 -> m26_49  [color=green, key=1, label="lambda expression", style=dashed];
m26_47 -> m26_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_47 -> m26_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_49 -> m26_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_49 -> m26_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_51 -> m26_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_51 -> m26_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_53 -> m26_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_53 -> m26_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_53 -> m26_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_55 -> m26_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_55 -> m26_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_58 -> m26_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_58 -> m26_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_56 -> m26_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_59 -> m26_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_60 -> m26_60  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_62 -> m26_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_66 -> m26_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_67 -> m26_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_67 -> m26_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_68 -> m26_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_68 -> m26_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_70 -> m26_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_70 -> m26_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_71 -> m26_337  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_79 -> m26_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_83 -> m26_85  [color=darkseagreen4, key=1, label=servers, style=dashed];
m26_84 -> m26_88  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_85 -> m26_85  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_87 -> m26_89  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_89 -> m26_89  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_105 -> m26_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_106 -> m26_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_389 -> m26_391  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<HangFire.SqlServer.Entities.SqlJob>", style=dashed];
m26_390 -> m26_394  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_390 -> m26_395  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_391 -> m26_394  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_109 -> m26_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_120 -> m26_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_130 -> m26_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_130 -> m26_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_130 -> m26_155  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_130 -> m26_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_130 -> m26_132  [color=darkseagreen4, key=1, label=tuples, style=dashed];
m26_251 -> m26_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_129 -> m26_148  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_131 -> m26_136  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_164 -> m26_167  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_174 -> m26_177  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_203 -> m26_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_203 -> m26_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_204 -> m26_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_237 -> m26_271  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_239 -> m26_252  [color=darkseagreen4, key=1, label=stats, style=dashed];
m26_241 -> m26_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_241 -> m26_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_241 -> m26_267  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m26_242 -> m26_267  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_404 -> m26_407  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_403 -> m26_405  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m26_172 -> m26_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_229 -> m26_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_162 -> m26_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_223 -> m26_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_377 -> m26_379  [color=darkseagreen4, key=1, label=data, style=dashed];
m26_116 -> m26_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_11  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_12  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_15  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_18  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_19  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_20  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_22  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_24  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_25  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_28  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_29  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_30  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_31  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_32  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_33  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_34  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_35  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_36  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_37  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_38  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_39  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_40  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_41  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_42  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_47  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_48  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_49  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_51  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_52  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_54  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_55  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_57  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_58  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_60  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_61  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_63  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_64  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_65  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_66  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_68  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_69  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_70  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_71  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_73  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_74  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_75  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_76  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_77  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_78  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_80  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_81  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_82  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_85  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_88  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_89  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_90  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_91  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_92  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_93  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_116 -> m26_94  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.FailedJobsPage", style=dashed];
m26_117 -> m26_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_189 -> m26_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_365 -> m26_368  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_311 -> m26_314  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m26_311 -> m26_315  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m26_318 -> m26_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_318 -> m26_321  [color=darkseagreen4, key=1, label=keys, style=dashed];
m26_320 -> m26_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_320 -> m26_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_320 -> m26_322  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m26_320 -> m26_323  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m26_317 -> m26_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_317 -> m26_326  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m26_312 -> m26_314  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m26_321 -> m26_323  [color=darkseagreen4, key=1, label=key, style=dashed];
m26_313 -> m26_315  [color=darkseagreen4, key=1, label=dates, style=dashed];
m26_313 -> m26_328  [color=darkseagreen4, key=1, label=dates, style=dashed];
m26_324 -> m26_330  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_324 -> m26_328  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_325 -> m26_328  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_325 -> m26_329  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_329 -> m26_329  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_127 -> m26_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_187 -> m26_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_281 -> m26_300  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_281 -> m26_284  [color=darkseagreen4, key=1, label=keys, style=dashed];
m26_274 -> m26_278  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m26_283 -> m26_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_283 -> m26_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m26_283 -> m26_285  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m26_283 -> m26_286  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m26_275 -> m26_278  [color=darkseagreen4, key=1, label=dates, style=dashed];
m26_275 -> m26_289  [color=darkseagreen4, key=1, label=dates, style=dashed];
m26_275 -> m26_291  [color=darkseagreen4, key=1, label=dates, style=dashed];
m26_284 -> m26_286  [color=darkseagreen4, key=1, label=key, style=dashed];
m26_276 -> m26_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_280 -> m26_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_287 -> m26_293  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_287 -> m26_291  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_288 -> m26_291  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_288 -> m26_292  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_292 -> m26_292  [color=darkseagreen4, key=1, label=i, style=dashed];
m26_413 -> m26_31  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_37  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_40  [color=green, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_66  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_69  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_73  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_76  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_106  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_109  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_167  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_177  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_182  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_185  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_189  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_192  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_223  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_226  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_229  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_232  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_413 -> m26_387  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerMonitoringApi", style=dashed];
m26_422 -> m26_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_423 -> m26_109  [color=darkseagreen4, key=1, label=int, style=dashed];
m26_437 -> m26_337  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_426 -> m26_148  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_436 -> m26_301  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_435 -> m26_271  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m26_434 -> m26_267  [color=darkseagreen4, key=1, label=countByStates, style=dashed];
m27_7 -> m27_12  [color=green, key=1, label="lambda expression", style=dashed];
m27_96 -> m27_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_53 -> m27_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_181 -> m27_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_182 -> m27_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_21 -> m27_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_22 -> m27_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_120 -> m27_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_107 -> m27_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_108 -> m27_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_170 -> m27_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_13 -> m27_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_36 -> m27_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_57 -> m27_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_79 -> m27_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_100 -> m27_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_114 -> m27_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_124 -> m27_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_138 -> m27_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_148 -> m27_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_164 -> m27_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_174 -> m27_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_188 -> m27_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_75 -> m27_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_86 -> m27_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_87 -> m27_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_43 -> m27_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_44 -> m27_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_64 -> m27_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_65 -> m27_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_156 -> m27_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_157 -> m27_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_144 -> m27_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_32 -> m27_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_131 -> m27_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_132 -> m27_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_195 -> m27_13  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_22  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_86  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_107  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_108  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_131  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_181  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m27_195 -> m27_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m28_16 -> m28_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_44 -> m28_46  [color=darkseagreen4, key=1, label=int, style=dashed];
m28_7 -> m28_9  [color=green, key=1, label=string, style=dashed];
m28_25 -> m28_31  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m28_27 -> m28_35  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m28_29 -> m28_34  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m28_59 -> m28_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m28_59 -> m28_13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m28_59 -> m28_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m28_59 -> m28_21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m28_59 -> m28_34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m29_5 -> m29_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_19 -> m29_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_26 -> m29_28  [color=darkseagreen4, key=1, label=context, style=dashed];
m29_32 -> m29_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerContextFacts", style=dashed];
m30_8 -> m30_5  [color=green, key=1, label="HangFire.Web.SingleResourceHandler", style=dashed];
m32_0 -> m32_2  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m32_58 -> m32_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_76 -> m32_79  [color=green, key=1, label=string, style=dashed];
m32_76 -> m32_80  [color=green, key=1, label=string, style=dashed];
m32_77 -> m32_79  [color=green, key=1, label=registeredQueues, style=dashed];
m32_77 -> m32_80  [color=green, key=1, label=registeredQueues, style=dashed];
m32_16 -> m32_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_70 -> m32_72  [color=green, key=1, label=Table, style=dashed];
m32_23 -> m32_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_65 -> m32_67  [color=green, key=1, label=string, style=dashed];
m32_90 -> m32_1  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m32_90 -> m32_2  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m32_90 -> m32_30  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m32_90 -> m32_33  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m32_90 -> m32_37  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m32_90 -> m32_44  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m32_90 -> m32_45  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m32_90 -> m32_66  [color=green, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m32_90 -> m32_59  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m34_7 -> m34_9  [color=green, key=1, label=string, style=dashed];
m34_37 -> m34_39  [color=green, key=1, label=string, style=dashed];
m34_27 -> m34_29  [color=green, key=1, label=string, style=dashed];
m34_42 -> m34_5  [color=green, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m34_42 -> m34_21  [color=green, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m34_42 -> m34_25  [color=green, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m34_42 -> m34_35  [color=green, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m35_45 -> m35_47  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_45 -> m35_50  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_19 -> m35_21  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_19 -> m35_22  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_19 -> m35_25  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_56 -> m35_58  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_56 -> m35_59  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_56 -> m35_62  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_56 -> m35_63  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_68 -> m35_70  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_68 -> m35_71  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_68 -> m35_72  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_68 -> m35_75  [color=darkseagreen4, key=1, label=redis, style=dashed];
m35_9 -> m35_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_79 -> m35_24  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_49  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_61  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_74  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m35_79 -> m35_77  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.FetchedJobsWatcherFacts", style=dashed];
m36_19 -> m36_21  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatedContext", style=dashed];
m36_25 -> m36_10  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m36_25 -> m36_12  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m36_25 -> m36_21  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m36_25 -> m36_22  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m38_4 -> m38_6  [color=green, key=1, label=string, style=dashed];
m38_4 -> m38_8  [color=green, key=1, label=string, style=dashed];
m38_4 -> m38_10  [color=green, key=1, label=string, style=dashed];
m38_4 -> m38_12  [color=green, key=1, label=string, style=dashed];
m38_4 -> m38_14  [color=green, key=1, label=string, style=dashed];
m38_4 -> m38_16  [color=green, key=1, label=string, style=dashed];
m38_4 -> m38_18  [color=green, key=1, label=string, style=dashed];
m38_5 -> m38_7  [color=green, key=1, label=now, style=dashed];
m38_5 -> m38_9  [color=green, key=1, label=now, style=dashed];
m38_5 -> m38_11  [color=green, key=1, label=now, style=dashed];
m38_5 -> m38_13  [color=green, key=1, label=now, style=dashed];
m38_5 -> m38_15  [color=green, key=1, label=now, style=dashed];
m38_5 -> m38_17  [color=green, key=1, label=now, style=dashed];
m39_50 -> m39_55  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m39_50 -> m39_58  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m39_50 -> m39_67  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m39_50 -> m39_72  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m39_66 -> m39_69  [color=darkseagreen4, key=1, label=exception, style=dashed];
m39_86 -> m39_7  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_17  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_21  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_27  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_30  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_31  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_55  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_58  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_64  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_67  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m39_86 -> m39_72  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
}
