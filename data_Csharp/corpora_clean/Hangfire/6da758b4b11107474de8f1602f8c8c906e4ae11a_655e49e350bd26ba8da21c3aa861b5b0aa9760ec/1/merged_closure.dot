digraph  {
n75 [label="Hangfire.DashboardOptions", span=""];
n76 [label="Hangfire.JobStorage", span=""];
n77 [label=IAppBuilder, span=""];
n0 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", span="51-51"];
n1 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", label="return builder.UseHangfireServer(new BackgroundJobServerOptions());", span="53-53"];
n2 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder)", span="51-51"];
n3 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
n4 [cluster="IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions)", label="Entry IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions)", span="56-56"];
n5 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)", label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)", span="56-56"];
n6 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)", label="return builder.UseHangfireServer(options, JobStorage.Current);", span="60-60"];
n7 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)", label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions)", span="56-56"];
n8 [cluster="IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Entry IAppBuilder.UseHangfireServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63"];
n9 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Entry Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63"];
n10 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="builder == null", span="68-68"];
n12 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="options == null", span="69-69"];
n14 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="storage == null", span="70-70"];
n16 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="var server = BackgroundJobServer.StartNew(storage, options)", span="72-72"];
n18 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="var context = new OwinContext(builder.Properties)", span="75-75"];
n25 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="return builder;", span="90-90"];
n11 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''builder'');", span="68-68"];
n13 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''options'');", span="69-69"];
n15 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''storage'');", span="70-70"];
n17 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Servers.Add(server)", span="73-73"];
n28 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="165-165"];
n24 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="token.Register(server.Dispose)", span="88-88"];
n29 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
n19 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="76-76"];
n30 [cluster="OwinContext.cstr", label="Entry OwinContext.cstr", span=""];
n21 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="token = context.Get<CancellationToken>(''server.OnDispose'')", span="80-80"];
n20 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="token == default(CancellationToken)", span="77-77"];
n31 [cluster="Unk.>", label="Entry Unk.>", span=""];
n22 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="token == default(CancellationToken)", span="83-83"];
n23 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="throw new InvalidOperationException(''Current OWIN environment does not contain an instance of the `CancellationToken` class under `host.OnAppDisposing` key.'');", span="85-85"];
n33 [cluster="Unk.Register", label="Entry Unk.Register", span=""];
n26 [cluster="Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", label="Exit Hangfire.AppBuilderExtensions.UseHangfireServer(IAppBuilder, Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="63-63"];
n32 [cluster="System.InvalidOperationException.InvalidOperationException(string)", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
n27 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n34 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", span="93-93"];
n35 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", label="return builder.UseHangfireDashboard(''/hangfire'');", span="95-95"];
n36 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder)", span="93-93"];
n37 [cluster="IAppBuilder.UseHangfireDashboard(string)", label="Entry IAppBuilder.UseHangfireDashboard(string)", span="98-98"];
n38 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="98-98"];
n39 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", label="return builder.UseHangfireDashboard(pathMatch, new DashboardOptions());", span="102-102"];
n40 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string)", span="98-98"];
n41 [cluster="Hangfire.DashboardOptions.DashboardOptions()", label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
n42 [cluster="IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions)", label="Entry IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions)", span="105-105"];
n43 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", span="105-105"];
n44 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", label="return builder.UseHangfireDashboard(pathMatch, options, JobStorage.Current);", span="110-110"];
n45 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions)", span="105-105"];
n46 [cluster="IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="Entry IAppBuilder.UseHangfireDashboard(string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113"];
n47 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="Entry Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113"];
n48 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="builder == null", span="119-119"];
n50 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="pathMatch == null", span="120-120"];
n52 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="options == null", span="121-121"];
n54 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="storage == null", span="122-122"];
n56 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="SignatureConversions.AddConversions(builder)", span="124-124"];
n57 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="builder.Map(pathMatch, subApp => subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes))", span="126-128"];
n63 [cluster="lambda expression", label="subApp\r\n                .UseOwin()\r\n                .UseHangfireDashboard(options, storage, DashboardRoutes.Routes)", span="126-128"];
n58 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="return builder;", span="130-130"];
n49 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''builder'');", span="119-119"];
n51 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''pathMatch'');", span="120-120"];
n53 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''options'');", span="121-121"];
n55 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="throw new ArgumentNullException(''storage'');", span="122-122"];
n60 [cluster="Unk.AddConversions", label="Entry Unk.AddConversions", span=""];
n61 [cluster="Unk.Map", label="Entry Unk.Map", span=""];
n62 [cluster="lambda expression", label="Entry lambda expression", span="126-128"];
n59 [cluster="Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", label="Exit Hangfire.AppBuilderExtensions.UseHangfireDashboard(IAppBuilder, string, Hangfire.DashboardOptions, Hangfire.JobStorage)", span="113-113"];
n64 [cluster="lambda expression", label="Exit lambda expression", span="126-128"];
n65 [cluster="Unk.UseOwin", label="Entry Unk.UseOwin", span=""];
n66 [cluster="System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", label="Entry System.Action<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>>.UseHangfireDashboard(Hangfire.DashboardOptions, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection)", span="42-42"];
n67 [cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", label="Entry Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", span="133-133"];
n68 [cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", label="return middleware => builder.Use(middleware(builder.Properties));", span="135-135"];
n71 [cluster="lambda expression", label="builder.Use(middleware(builder.Properties))", span="135-135"];
n69 [cluster="Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", label="Exit Hangfire.AppBuilderExtensions.UseOwin(IAppBuilder)", span="133-133"];
n70 [cluster="lambda expression", label="Entry lambda expression", span="135-135"];
n72 [cluster="lambda expression", label="Exit lambda expression", span="135-135"];
n73 [cluster="Unk.middleware", label="Entry Unk.middleware", span=""];
n74 [cluster="Unk.Use", label="Entry Unk.Use", span=""];
m0_0 [cluster="HangFire.States.DeletedState.DeletedState()", file="DeletedState.cs", label="Entry HangFire.States.DeletedState.DeletedState()", span="27-27"];
m0_1 [cluster="HangFire.States.DeletedState.DeletedState()", file="DeletedState.cs", label="DeletedAt = DateTime.UtcNow", span="29-29"];
m0_2 [cluster="HangFire.States.DeletedState.DeletedState()", file="DeletedState.cs", label="Exit HangFire.States.DeletedState.DeletedState()", span="27-27"];
m0_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DeletedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_12 [cluster="HangFire.States.DeletedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs", label="Entry HangFire.States.DeletedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="66-66"];
m0_13 [cluster="HangFire.States.DeletedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs", label="transaction.DecrementCounter(''stats:deleted'')", span="68-68"];
m0_14 [cluster="HangFire.States.DeletedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs", label="Exit HangFire.States.DeletedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="66-66"];
m0_8 [cluster="HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs", label="Entry HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="61-61"];
m0_9 [cluster="HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs", label="transaction.IncrementCounter(''stats:deleted'')", span="63-63"];
m0_10 [cluster="HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="DeletedState.cs", label="Exit HangFire.States.DeletedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="61-61"];
m0_3 [cluster="HangFire.States.DeletedState.SerializeData()", file="DeletedState.cs", label="Entry HangFire.States.DeletedState.SerializeData()", span="51-51"];
m0_5 [cluster="HangFire.States.DeletedState.SerializeData()", file="DeletedState.cs", label="Exit HangFire.States.DeletedState.SerializeData()", span="51-51"];
m0_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="DeletedState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="35-35"];
m0_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="DeletedState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="37-37"];
m0_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DeletedState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m0_16 [file="DeletedState.cs", label="HangFire.States.DeletedState", span=""];
m1_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="DeletedStateFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m1_0 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m1_1 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs", label="serverId == null", span="30-30"];
m1_3 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs", label="storage == null", span="31-31"];
m1_6 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs", label="ServerId = serverId", span="35-35"];
m1_7 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs", label="Storage = storage", span="36-36"];
m1_8 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs", label="CancellationToken = cancellationToken", span="37-37"];
m1_2 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs", label="throw new ArgumentNullException(''serverId'');", span="30-30"];
m1_4 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs", label="throw new ArgumentNullException(''storage'');", span="31-31"];
m1_5 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs", label="ServerData = new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase)", span="33-33"];
m1_9 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="DeletedStateFacts.cs", label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m1_12 [file="DeletedStateFacts.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m3_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_11 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="82-82"];
m3_12 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="var enqueuedState = context.NewState as EnqueuedState", span="84-84"];
m3_15 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="transaction.AddToQueue(enqueuedState.Queue, context.JobId)", span="92-92"];
m3_13 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="enqueuedState == null", span="85-85"];
m3_14 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Enqueued state.'',\r\n                        typeof(Handler).FullName));", span="87-89"];
m3_16 [cluster="HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="82-82"];
m3_0 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m3_1 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
m3_20 [cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="95-95"];
m3_21 [cluster="HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="95-95"];
m3_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", file="EnqueuedState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToQueue(string, string)", span="32-32"];
m3_18 [cluster="string.Format(string, object)", file="EnqueuedState.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_10 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m3_2 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36"];
m3_3 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="EnqueuedAt = DateTime.UtcNow", span="38-38"];
m3_4 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="Queue = queue", span="39-39"];
m3_5 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.EnqueuedState(string)", span="36-36"];
m3_6 [cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs", label="Entry HangFire.States.EnqueuedState.SerializeData()", span="71-71"];
m3_8 [cluster="HangFire.States.EnqueuedState.SerializeData()", file="EnqueuedState.cs", label="Exit HangFire.States.EnqueuedState.SerializeData()", span="71-71"];
m3_22 [file="EnqueuedState.cs", label="HangFire.States.EnqueuedState", span=""];
m5_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_0 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="FailedState.cs", label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29"];
m5_3 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="FailedState.cs", label="Exit HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29"];
m5_4 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="HangFire.Web.StyleSheetHandler", span=""];
m5_1 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="FailedState.cs", label="ContentType = ''text/css''", span="32-32"];
m5_2 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="FailedState.cs", label="ContentEncoding = Encoding.UTF8", span="33-33"];
m5_5 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedState.cs", label="Exit HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m5_13 [cluster="System.Exception.ToString()", file="FailedState.cs", label="Entry System.Exception.ToString()", span="0-0"];
m5_7 [cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="42-42"];
m5_8 [cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="FailedState.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''FailedAt'', JobHelper.SerializeDateTime(FailedAt) },\r\n                { ''ExceptionType'', Exception.GetType().FullName },\r\n                { ''ExceptionMessage'', Exception.Message },\r\n                { ''ExceptionDetails'', Exception.ToString() }\r\n            };", prediction=0, span="44-50"];
m5_9 [cluster="HangFire.States.FailedState.SerializeData()", file="FailedState.cs", label="Exit HangFire.States.FailedState.SerializeData()", span="42-42"];
m5_12 [cluster="System.Exception.GetType()", file="FailedState.cs", label="Entry System.Exception.GetType()", span="0-0"];
m5_11 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="FailedState.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m5_14 [file="FailedState.cs", label="HangFire.States.FailedState", span=""];
m6_10 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Assert.Equal(FailedState.StateName, state.Name)", span="20-20"];
m6_6 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="13-13"];
m6_7 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="FailedStateFacts.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m6_8 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m6_9 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="var state = new FailedState(new Exception())", span="19-19"];
m6_31 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38"];
m6_32 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object))", span="40-42"];
m6_33 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="44-44"];
m6_34 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ThrowsAnException_WhenClientIsNull()", span="38-38"];
m6_95 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92"];
m6_96 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical''))", span="94-96"];
m6_97 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="98-98"];
m6_98 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="92-92"];
m6_5 [cluster="lambda expression", file="FailedStateFacts.cs", label="new FailedState(null)", span="13-13"];
m6_4 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="13-13"];
m6_13 [cluster="lambda expression", file="FailedStateFacts.cs", label="BackgroundJobClientExtensions.Create(\r\n                    null, () => StaticMethod(), _state.Object)", span="23-24"];
m6_11 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m6_12 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="23-24"];
m6_22 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticCreate_ShouldCreateAJobInTheGivenState()", file="FailedStateFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="34-34"];
m6_52 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56"];
m6_53 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod()))", span="58-60"];
m6_54 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="62-62"];
m6_55 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ThrowsAnException_WhenClientIsNull()", span="56-56"];
m6_24 [cluster="Unk.Verify", file="FailedStateFacts.cs", label="Entry Unk.Verify", span=""];
m6_41 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176"];
m6_194 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceMethod()", span="176-176"];
m6_30 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="34-34"];
m6_151 [cluster="HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="FailedStateFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Schedule(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="106-106"];
m6_176 [cluster="HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="FailedStateFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Schedule<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="123-123"];
m6_180 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162"];
m6_181 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs", label="_client.Object.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="164-165"];
m6_182 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="167-169"];
m6_183 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ShouldCreateAJobInTheScheduledState()", span="162-162"];
m6_150 [cluster="System.TimeSpan.FromDays(double)", file="FailedStateFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m6_67 [cluster="Unk.Enqueue", file="FailedStateFacts.cs", label="Entry Unk.Enqueue", span=""];
m6_0 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13"];
m6_1 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="FailedStateFacts.cs", label="_client = new Mock<IBackgroundJobClient>()", span="15-15"];
m6_2 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="FailedStateFacts.cs", label="_state = new Mock<IState>()", span="16-16"];
m6_20 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Assert.Equal(state.Exception.ToString(), serializedData[''ExceptionDetails''])", span="33-33"];
m6_21 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="24-24"];
m6_23 [cluster="HangFire.States.FailedState.SerializeData()", file="FailedStateFacts.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="42-42"];
m6_119 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112"];
m6_120 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical''))", span="114-116"];
m6_121 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="118-118"];
m6_122 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ThrowsAnException_WhenClientIsNull()", span="112-112"];
m6_106 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102"];
m6_107 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="_client.Object.Enqueue(() => StaticMethod(), ''critical'')", span="104-104"];
m6_108 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="106-108"];
m6_109 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="102-102"];
m6_126 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", file="FailedStateFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, string)", span="90-90"];
m6_169 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152"];
m6_170 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1)))", span="154-156"];
m6_171 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="158-158"];
m6_172 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceSchedule_ThrowsAnException_WhenClientIsNull()", span="152-152"];
m6_14 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="23-24"];
m6_17 [cluster="lambda expression", color=green, community=0, file="FailedStateFacts.cs", label="StaticMethod()", prediction=1, span="24-24"];
m6_15 [cluster="Unk.Create", file="FailedStateFacts.cs", label="Entry Unk.Create", span=""];
m6_16 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="24-24"];
m6_18 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="24-24"];
m6_19 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172"];
m6_193 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticMethod()", span="172-172"];
m6_25 [cluster="System.Exception.ToString()", file="FailedStateFacts.cs", label="Entry System.Exception.ToString()", span="0-0"];
m6_28 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs", label="Assert.False(state.IsFinal)", span="41-41"];
m6_26 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="37-37"];
m6_27 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs", label="var state = new FailedState(new Exception())", span="39-39"];
m6_29 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="37-37"];
m6_35 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="41-42"];
m6_36 [cluster="lambda expression", file="FailedStateFacts.cs", label="BackgroundJobClientExtensions.Create<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), _state.Object)", span="41-42"];
m6_37 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="41-42"];
m6_38 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="42-42"];
m6_39 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.InstanceMethod()", span="42-42"];
m6_40 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="42-42"];
m6_46 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="50-50"];
m6_49 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="52-52"];
m6_47 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.InstanceMethod()", span="50-50"];
m6_48 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="50-50"];
m6_50 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.Create(It.IsNotNull<Job>(), _state.Object)", span="52-52"];
m6_51 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="52-52"];
m6_56 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="59-60"];
m6_57 [cluster="lambda expression", file="FailedStateFacts.cs", label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod())", span="59-60"];
m6_58 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="59-60"];
m6_60 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="60-60"];
m6_61 [cluster="lambda expression", file="FailedStateFacts.cs", label="StaticMethod()", span="60-60"];
m6_62 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="60-60"];
m6_68 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="68-68"];
m6_71 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="70-70"];
m6_69 [cluster="lambda expression", file="FailedStateFacts.cs", label="StaticMethod()", span="68-68"];
m6_70 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="68-68"];
m6_72 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="70-70"];
m6_73 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="70-70"];
m6_78 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="77-78"];
m6_79 [cluster="lambda expression", file="FailedStateFacts.cs", label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod())", span="77-78"];
m6_80 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="77-78"];
m6_82 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="78-78"];
m6_83 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.InstanceMethod()", span="78-78"];
m6_84 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="78-78"];
m6_89 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="86-86"];
m6_92 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="88-88"];
m6_90 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.InstanceMethod()", span="86-86"];
m6_91 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="86-86"];
m6_93 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>())", span="88-88"];
m6_94 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="88-88"];
m6_99 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="95-96"];
m6_100 [cluster="lambda expression", file="FailedStateFacts.cs", label="BackgroundJobClientExtensions.Enqueue(\r\n                    null, () => StaticMethod(), ''critical'')", span="95-96"];
m6_101 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="95-96"];
m6_103 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="96-96"];
m6_104 [cluster="lambda expression", file="FailedStateFacts.cs", label="StaticMethod()", span="96-96"];
m6_105 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="96-96"];
m6_110 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="104-104"];
m6_113 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="106-108"];
m6_111 [cluster="lambda expression", file="FailedStateFacts.cs", label="StaticMethod()", span="104-104"];
m6_112 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="104-104"];
m6_114 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="106-108"];
m6_115 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="106-108"];
m6_116 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="108-108"];
m6_117 [cluster="lambda expression", file="FailedStateFacts.cs", label="state.Queue == ''critical''", span="108-108"];
m6_118 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="108-108"];
m6_123 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="115-116"];
m6_124 [cluster="lambda expression", file="FailedStateFacts.cs", label="BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), ''critical'')", span="115-116"];
m6_125 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="115-116"];
m6_127 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="116-116"];
m6_128 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.InstanceMethod()", span="116-116"];
m6_129 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="116-116"];
m6_134 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="124-124"];
m6_137 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="126-128"];
m6_135 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.InstanceMethod()", span="124-124"];
m6_136 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="124-124"];
m6_138 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical''))", span="126-128"];
m6_139 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="126-128"];
m6_140 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="128-128"];
m6_141 [cluster="lambda expression", file="FailedStateFacts.cs", label="state.Queue == ''critical''", span="128-128"];
m6_142 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="128-128"];
m6_147 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="135-136"];
m6_148 [cluster="lambda expression", file="FailedStateFacts.cs", label="BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1))", span="135-136"];
m6_149 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="135-136"];
m6_152 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="136-136"];
m6_153 [cluster="lambda expression", file="FailedStateFacts.cs", label="StaticMethod()", span="136-136"];
m6_154 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="136-136"];
m6_160 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="144-144"];
m6_163 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="146-148"];
m6_161 [cluster="lambda expression", file="FailedStateFacts.cs", label="StaticMethod()", span="144-144"];
m6_162 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="144-144"];
m6_164 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="146-148"];
m6_165 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="146-148"];
m6_166 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="148-148"];
m6_167 [cluster="lambda expression", file="FailedStateFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", span="148-148"];
m6_168 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="148-148"];
m6_173 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="155-156"];
m6_174 [cluster="lambda expression", file="FailedStateFacts.cs", label="BackgroundJobClientExtensions.Schedule<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod(), TimeSpan.FromDays(1))", span="155-156"];
m6_175 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="155-156"];
m6_177 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="156-156"];
m6_178 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.InstanceMethod()", span="156-156"];
m6_179 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="156-156"];
m6_184 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="165-165"];
m6_187 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="167-169"];
m6_185 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.InstanceMethod()", span="165-165"];
m6_186 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="165-165"];
m6_188 [cluster="lambda expression", file="FailedStateFacts.cs", label="x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow))", span="167-169"];
m6_189 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="167-169"];
m6_190 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="169-169"];
m6_191 [cluster="lambda expression", file="FailedStateFacts.cs", label="state.EnqueueAt > DateTime.UtcNow", span="169-169"];
m6_192 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="169-169"];
m6_74 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74"];
m6_75 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Enqueue<BackgroundJobClientExtensionsFacts>(\r\n                    null, x => x.InstanceMethod()))", span="76-78"];
m6_76 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="80-80"];
m6_77 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ThrowsAnException_WhenClientIsNull()", span="74-74"];
m6_85 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84"];
m6_86 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod())", span="86-86"];
m6_87 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="88-88"];
m6_88 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_ShouldCreateAJobInTheEnqueuedState()", span="84-84"];
m6_42 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48"];
m6_43 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="FailedStateFacts.cs", label="_client.Object.Create<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), _state.Object)", span="50-50"];
m6_44 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="FailedStateFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), _state.Object))", span="52-52"];
m6_45 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceCreate_ShouldCreateAJobInTheGivenState()", span="48-48"];
m6_81 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="FailedStateFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue<T>(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="53-53"];
m6_63 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66"];
m6_64 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="FailedStateFacts.cs", label="_client.Object.Enqueue(() => StaticMethod())", span="68-68"];
m6_65 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="FailedStateFacts.cs", label="_client.Verify(x => x.Create(It.IsNotNull<Job>(), It.IsAny<EnqueuedState>()))", span="70-70"];
m6_66 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticEnqueue_ShouldCreateAJobInTheEnqueueState()", span="66-66"];
m6_159 [cluster="Unk.Schedule", file="FailedStateFacts.cs", label="Entry Unk.Schedule", span=""];
m6_3 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.BackgroundJobClientExtensionsFacts()", span="13-13"];
m6_155 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142"];
m6_156 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs", label="_client.Object.Schedule(() => StaticMethod(), TimeSpan.FromDays(1))", span="144-144"];
m6_157 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<ScheduledState>(state => state.EnqueueAt > DateTime.UtcNow)))", span="146-148"];
m6_158 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ShouldCreateAJobInTheScheduledState()", span="142-142"];
m6_102 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", file="FailedStateFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, string)", span="71-71"];
m6_59 [cluster="HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", file="FailedStateFacts.cs", label="Entry HangFire.BackgroundJobClientExtensions.Enqueue(HangFire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>)", span="35-35"];
m6_143 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132"];
m6_144 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => BackgroundJobClientExtensions.Schedule(\r\n                    null, () => StaticMethod(), TimeSpan.FromDays(1)))", span="134-136"];
m6_145 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Assert.Equal(''client'', exception.ParamName)", span="138-138"];
m6_146 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.StaticSchedule_ThrowsAnException_WhenClientIsNull()", span="132-132"];
m6_130 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122"];
m6_131 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="_client.Object.Enqueue<BackgroundJobClientExtensionsFacts>(x => x.InstanceMethod(), ''critical'')", span="124-124"];
m6_132 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="_client.Verify(x => x.Create(\r\n                It.IsNotNull<Job>(),\r\n                It.Is<EnqueuedState>(state => state.Queue == ''critical'')))", span="126-128"];
m6_133 [cluster="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.BackgroundJobClientExtensionsFacts.InstanceEnqueue_WithQueue_ShouldCreateAJobInTheEnqueuedState()", span="122-122"];
m6_195 [file="FailedStateFacts.cs", label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", span=""];
m7_219 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="267-267"];
m7_220 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs", label="_connection.Setup(x => x.GetJobData(_processingJob.JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException() })", span="270-271"];
m7_221 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="273-273"];
m7_222 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="276-276"];
m7_223 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", span="279-282"];
m7_224 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="267-267"];
m7_16 [cluster="HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(string, string[], int)", span="27-27"];
m7_23 [cluster="Mock<IStateMachineFactory>.cstr", file="FetchedJobsPage.generated.cs", label="Entry Mock<IStateMachineFactory>.cstr", span=""];
m7_62 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="71-71"];
m7_63 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, null, _process.Object, _stateMachineFactory.Object))", span="73-74"];
m7_64 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsPage.generated.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="76-76"];
m7_65 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="71-71"];
m7_111 [cluster="Unk.DeleteJobFromQueue", file="FetchedJobsPage.generated.cs", label="Entry Unk.DeleteJobFromQueue", span=""];
m7_57 [cluster="Unk.Equal", file="FetchedJobsPage.generated.cs", label="Entry Unk.Equal", span=""];
m7_90 [cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="47-47"];
m7_27 [cluster="System.Threading.CancellationToken.CancellationToken()", file="FetchedJobsPage.generated.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m7_112 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="123-123"];
m7_113 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs", label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="126-130"];
m7_114 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="132-133"];
m7_115 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs", label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="135-139"];
m7_116 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="141-141"];
m7_117 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="144-144"];
m7_118 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="123-123"];
m7_225 [cluster="HangFire.Common.JobLoadException.JobLoadException()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33"];
m7_126 [cluster="Unk.Run", file="FetchedJobsPage.generated.cs", label="Entry Unk.Run", span=""];
m7_183 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="225-225"];
m7_184 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs", label="var exception = new InvalidOperationException()", span="228-228"];
m7_185 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="229-231"];
m7_188 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>()))", span="239-242"];
m7_186 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="233-233"];
m7_187 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="236-236"];
m7_189 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="225-225"];
m7_190 [cluster="System.InvalidOperationException.InvalidOperationException()", file="FetchedJobsPage.generated.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m7_209 [cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m7_22 [cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22"];
m7_52 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Method()", span="290-290"];
m7_234 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Method()", span="290-290"];
m7_172 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="212-212"];
m7_173 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="214-214"];
m7_174 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="216-216"];
m7_175 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="FetchedJobsPage.generated.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName)))", span="218-221"];
m7_176 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="212-212"];
m7_31 [cluster="Unk.GetConnection", file="FetchedJobsPage.generated.cs", label="Entry Unk.GetConnection", span=""];
m7_18 [cluster="Mock<JobStorage>.cstr", file="FetchedJobsPage.generated.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m7_119 [cluster="Unk.InSequence", file="FetchedJobsPage.generated.cs", label="Entry Unk.InSequence", span=""];
m7_202 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="246-246"];
m7_203 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs", label="var exception = new InvalidOperationException()", span="249-249"];
m7_204 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="250-252"];
m7_207 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>()))", span="260-263"];
m7_205 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="254-254"];
m7_206 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="257-257"];
m7_208 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="246-246"];
m7_141 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="163-163"];
m7_142 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="165-165"];
m7_143 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="167-167"];
m7_144 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="FetchedJobsPage.generated.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName)))", span="169-174"];
m7_145 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="163-163"];
m7_0 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="24-24"];
m7_1 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_queues = new[] { ''default'' }", span="26-26"];
m7_2 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_context = new WorkerContext(''server'', _queues, 1)", span="27-27"];
m7_3 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_process = new Mock<IJobPerformanceProcess>()", span="28-28"];
m7_4 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_storage = new Mock<JobStorage>()", span="30-30"];
m7_5 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_connection = new Mock<IStorageConnection>()", span="31-31"];
m7_6 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33"];
m7_7 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_processingJob = new ProcessingJob(''my-job'', ''my-queue'')", span="35-35"];
m7_8 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_connection.Setup(x => x.FetchNextJob(_queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_processingJob)", span="37-38"];
m7_9 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="40-40"];
m7_10 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_stateMachine = new Mock<IStateMachine>()", span="41-41"];
m7_11 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_stateMachineFactory.Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="43-44"];
m7_12 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_stateMachine.Setup(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<State>(),\r\n                It.IsAny<string[]>())).Returns(true)", span="46-49"];
m7_13 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_connection.Setup(x => x.GetJobData(_processingJob.JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="51-55"];
m7_14 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="_token = new CancellationToken()", span="58-58"];
m7_15 [cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="24-24"];
m7_20 [cluster="Unk.Setup", file="FetchedJobsPage.generated.cs", label="Entry Unk.Setup", span=""];
m7_98 [cluster="Unk.Dispose", file="FetchedJobsPage.generated.cs", label="Entry Unk.Dispose", span=""];
m7_152 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="178-178"];
m7_153 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs", label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>()))\r\n                .Returns(false)", span="181-186"];
m7_154 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="188-188"];
m7_155 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="191-191"];
m7_156 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs", label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="194-196"];
m7_157 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="178-178"];
m7_36 [cluster="Unk.FetchNextJob", file="FetchedJobsPage.generated.cs", label="Entry Unk.FetchNextJob", span=""];
m7_83 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="98-98"];
m7_84 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="100-100"];
m7_85 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="102-102"];
m7_86 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs", label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="104-104"];
m7_87 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="105-105"];
m7_88 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="98-98"];
m7_191 [cluster="Unk.Throws", file="FetchedJobsPage.generated.cs", label="Entry Unk.Throws", span=""];
m7_44 [cluster="Unk.TryToChangeState", file="FetchedJobsPage.generated.cs", label="Entry Unk.TryToChangeState", span=""];
m7_229 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="279-282"];
m7_28 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="33-33"];
m7_32 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="37-37"];
m7_37 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="43-43"];
m7_41 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="46-49"];
m7_45 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="51-51"];
m7_49 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="54-54"];
m7_29 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.GetConnection()", span="33-33"];
m7_30 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="33-33"];
m7_33 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.FetchNextJob(_queues, It.IsNotNull<CancellationToken>())", span="37-37"];
m7_34 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="37-37"];
m7_38 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.Create(_connection.Object)", span="43-43"];
m7_39 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="43-43"];
m7_42 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<State>(),\r\n                It.IsAny<string[]>())", span="46-49"];
m7_43 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="46-49"];
m7_46 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.GetJobData(_processingJob.JobId)", span="51-51"];
m7_47 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="51-51"];
m7_50 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Method()", span="54-54"];
m7_51 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="54-54"];
m7_58 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="65-65"];
m7_59 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="new Worker(null, _storage.Object, _process.Object, _stateMachineFactory.Object)", span="65-65"];
m7_60 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="65-65"];
m7_66 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="74-74"];
m7_67 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="new Worker(_context, null, _process.Object, _stateMachineFactory.Object)", span="74-74"];
m7_68 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="74-74"];
m7_73 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="83-83"];
m7_74 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="new Worker(_context, _storage.Object, null, _stateMachineFactory.Object)", span="83-83"];
m7_75 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="83-83"];
m7_80 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="92-92"];
m7_81 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="new Worker(_context, _storage.Object, _process.Object, null)", span="92-92"];
m7_82 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="92-92"];
m7_92 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="104-104"];
m7_95 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="105-105"];
m7_93 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.GetConnection()", span="104-104"];
m7_94 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="104-104"];
m7_96 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.Dispose()", span="105-105"];
m7_97 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="105-105"];
m7_105 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="116-116"];
m7_108 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="119-119"];
m7_106 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.FetchNextJob(_queues, _token)", span="116-116"];
m7_107 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="116-116"];
m7_109 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.DeleteJobFromQueue(_processingJob.JobId, _processingJob.Queue)", span="119-119"];
m7_110 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="119-119"];
m7_120 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="127-128"];
m7_123 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="132-132"];
m7_127 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="136-137"];
m7_121 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", span="127-128"];
m7_122 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="127-128"];
m7_124 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="132-132"];
m7_125 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="132-132"];
m7_128 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.TryToChangeState(\r\n                    _processingJob.JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>())", span="136-137"];
m7_129 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="136-137"];
m7_135 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="156-159"];
m7_136 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.ServerName),\r\n                It.IsAny<string[]>())", span="156-159"];
m7_137 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="156-159"];
m7_138 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="158-158"];
m7_139 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="state.ServerName == _context.ServerName", span="158-158"];
m7_140 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="158-158"];
m7_146 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="169-174"];
m7_147 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName))", span="169-174"];
m7_148 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="169-174"];
m7_149 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="173-174"];
m7_150 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="173-174"];
m7_151 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="173-174"];
m7_158 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="182-185"];
m7_161 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="195-195"];
m7_159 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>())", span="182-185"];
m7_160 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="182-185"];
m7_162 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="195-195"];
m7_163 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="195-195"];
m7_169 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="206-208"];
m7_170 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="206-208"];
m7_171 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="206-208"];
m7_177 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="218-221"];
m7_178 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName))", span="218-221"];
m7_179 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="218-221"];
m7_180 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="221-221"];
m7_181 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="states.Length == 1 && states[0] == ProcessingState.StateName", span="221-221"];
m7_182 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="221-221"];
m7_196 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", span="239-242"];
m7_199 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="241-241"];
m7_192 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="230-230"];
m7_195 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="239-242"];
m7_193 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="230-230"];
m7_194 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="230-230"];
m7_197 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="239-242"];
m7_198 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="241-241"];
m7_200 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="241-241"];
m7_214 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", span="260-263"];
m7_217 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="state.Exception == exception && state.Reason == ''hello''", span="262-262"];
m7_210 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="251-251"];
m7_213 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="260-263"];
m7_211 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="251-251"];
m7_212 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="251-251"];
m7_215 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="260-263"];
m7_216 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="262-262"];
m7_218 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="262-262"];
m7_226 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Entry lambda expression", span="270-270"];
m7_227 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.GetJobData(_processingJob.JobId)", span="270-270"];
m7_228 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="270-270"];
m7_230 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="x.TryToChangeState(\r\n                _processingJob.JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", span="279-282"];
m7_231 [cluster="lambda expression", file="FetchedJobsPage.generated.cs", label="Exit lambda expression", span="279-282"];
m7_61 [cluster="Worker.cstr", file="FetchedJobsPage.generated.cs", label="Entry Worker.cstr", span=""];
m7_130 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="150-150"];
m7_131 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="152-152"];
m7_132 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="154-154"];
m7_133 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="FetchedJobsPage.generated.cs", label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.ServerName),\r\n                It.IsAny<string[]>()))", span="156-159"];
m7_134 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="150-150"];
m7_99 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="109-109"];
m7_100 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="111-111"];
m7_101 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="113-113"];
m7_102 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs", label="_connection.Verify(\r\n                x => x.FetchNextJob(_queues, _token),\r\n                Times.Once)", span="115-117"];
m7_103 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs", label="_connection.Verify(x => x.DeleteJobFromQueue(_processingJob.JobId, _processingJob.Queue))", span="119-119"];
m7_104 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDeletesItFromQueue()", span="109-109"];
m7_76 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="89-89"];
m7_77 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, _storage.Object, _process.Object, null))", span="91-92"];
m7_78 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsPage.generated.cs", label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="94-94"];
m7_79 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="89-89"];
m7_89 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="285-285"];
m7_232 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="FetchedJobsPage.generated.cs", label="return new Worker(_context, _storage.Object, _process.Object, _stateMachineFactory.Object);", span="287-287"];
m7_233 [cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="285-285"];
m7_91 [cluster="Unk.Verify", file="FetchedJobsPage.generated.cs", label="Entry Unk.Verify", span=""];
m7_201 [cluster="Unk.Contains", file="FetchedJobsPage.generated.cs", label="Entry Unk.Contains", span=""];
m7_69 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="80-80"];
m7_70 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="FetchedJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(_context, _storage.Object, null, _stateMachineFactory.Object))", span="82-83"];
m7_71 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="FetchedJobsPage.generated.cs", label="Assert.Equal(''process'', exception.ParamName)", span="85-85"];
m7_72 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="80-80"];
m7_53 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="62-62"];
m7_54 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FetchedJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null, _storage.Object, _process.Object, _stateMachineFactory.Object))", span="64-65"];
m7_55 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FetchedJobsPage.generated.cs", label="Assert.Equal(''context'', exception.ParamName)", span="67-67"];
m7_56 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="62-62"];
m7_25 [cluster="HangFire.Storage.JobData.JobData()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m7_24 [cluster="Mock<IStateMachine>.cstr", file="FetchedJobsPage.generated.cs", label="Entry Mock<IStateMachine>.cstr", span=""];
m7_26 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m7_40 [cluster="Unk.Create", file="FetchedJobsPage.generated.cs", label="Entry Unk.Create", span=""];
m7_21 [cluster="Unk.Returns", file="FetchedJobsPage.generated.cs", label="Entry Unk.Returns", span=""];
m7_19 [cluster="Mock<IStorageConnection>.cstr", file="FetchedJobsPage.generated.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m7_48 [cluster="Unk.GetJobData", file="FetchedJobsPage.generated.cs", label="Entry Unk.GetJobData", span=""];
m7_17 [cluster="Mock<IJobPerformanceProcess>.cstr", file="FetchedJobsPage.generated.cs", label="Entry Mock<IJobPerformanceProcess>.cstr", span=""];
m7_164 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="FetchedJobsPage.generated.cs", label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="200-200"];
m7_165 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="FetchedJobsPage.generated.cs", label="var worker = CreateWorker()", span="202-202"];
m7_166 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="FetchedJobsPage.generated.cs", label="worker.Execute(_token)", span="204-204"];
m7_167 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="FetchedJobsPage.generated.cs", label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="206-208"];
m7_168 [cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="FetchedJobsPage.generated.cs", label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="200-200"];
m7_235 [file="FetchedJobsPage.generated.cs", label="HangFire.Core.Tests.Server.WorkerFacts", span=""];
m7_236 [file="FetchedJobsPage.generated.cs", label=exception, span=""];
m7_237 [file="FetchedJobsPage.generated.cs", label=exception, span=""];
m8_0 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="FetchedJobsWatcher.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m8_1 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="FetchedJobsWatcher.cs", label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m9_48 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", span="69-69"];
m9_49 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Perform.Async<TestJob>()", span="71-71"];
m9_50 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="73-79"];
m9_51 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="81-81"];
m9_52 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithNoArguments()", span="69-69"];
m9_133 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", span="176-176"];
m9_134 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Perform.In<TestJob>(TimeSpan.FromDays(1), new { Greeting = ''Hello'' })", span="178-178"];
m9_135 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="180-186"];
m9_136 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="188-188"];
m9_137 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithArguments()", span="176-176"];
m9_138 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="55-55"];
m9_63 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", span="85-85"];
m9_64 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Perform.Async<TestJob>(new { ArticleId = 3 })", span="87-87"];
m9_65 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>()),\r\n               Times.Once)", span="89-95"];
m9_66 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="97-97"];
m9_67 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericAsyncMethod_WithArguments()", span="85-85"];
m9_38 [cluster="HangFire.Perform.Async(System.Type, object)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="31-31"];
m9_95 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", span="124-124"];
m9_96 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { Count = long.MaxValue })", span="126-126"];
m9_97 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="128-134"];
m9_98 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="136-136"];
m9_99 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments()", span="124-124"];
m9_53 [cluster="HangFire.Perform.Async<TJob>()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Perform.Async<TJob>()", span="13-13"];
m9_114 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", span="219-219"];
m9_173 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="FetchedJobsWatcherFacts.cs", label="return\r\n                It.Is<ScheduledState>(\r\n                    x => DateTime.UtcNow.Date.AddDays(-2) < x.EnqueueAt && x.EnqueueAt <= DateTime.UtcNow.AddDays(-1));", span="221-223"];
m9_174 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsScheduledYesterday()", span="219-219"];
m9_118 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", span="160-160"];
m9_119 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Perform.In<TestJob>(TimeSpan.FromDays(1))", span="162-162"];
m9_120 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="164-170"];
m9_121 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="172-172"];
m9_122 [cluster="HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.GenericInMethod_WithNoArguments()", span="160-160"];
m9_30 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="40-40"];
m9_31 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Perform.Async(null)", span="42-42"];
m9_32 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="40-40"];
m9_68 [cluster="HangFire.Perform.Async<TJob>(object)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="20-20"];
m9_107 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", span="140-140"];
m9_108 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="FetchedJobsWatcherFacts.cs", label="Perform.In(TimeSpan.FromDays(-1), typeof(TestJob))", span="142-142"];
m9_109 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<Type>(),\r\n                    ItIsScheduledYesterday(),\r\n                    It.IsAny<object>()))", span="144-149"];
m9_110 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNegativeInterval()", span="140-140"];
m9_20 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", span="207-207"];
m9_162 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="FetchedJobsWatcherFacts.cs", label="return It.Is<EnqueuedState>(y => y.Queue == ''default'');", span="209-209"];
m9_163 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsEnqueuedToTheDefaultQueue()", span="207-207"];
m9_81 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="61-61"];
m9_100 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="66-66"];
m9_80 [cluster="System.TimeSpan.FromDays(double)", file="FetchedJobsWatcherFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m9_8 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", span="23-23"];
m9_9 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Perform.Async(typeof (TestJob))", span="25-25"];
m9_10 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null)),\r\n                Times.Once)", span="27-33"];
m9_11 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="35-35"];
m9_12 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithNoArguments()", span="23-23"];
m9_19 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", span="202-202"];
m9_157 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="FetchedJobsWatcherFacts.cs", label="return It.Is<Type>(y => y == typeof (TestJob));", span="204-204"];
m9_158 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsTestType()", span="202-202"];
m9_45 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", span="63-63"];
m9_46 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Perform.Async(null, new { Greeting = ''Hello'' })", span="65-65"];
m9_47 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments_AndNullType_ThrowsAnException()", span="63-63"];
m9_123 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="48-48"];
m9_172 [cluster="System.DateTime.AddDays(double)", file="FetchedJobsWatcherFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m9_152 [cluster="System.Guid.Parse(string)", file="FetchedJobsWatcherFacts.cs", label="Entry System.Guid.Parse(string)", span="0-0"];
m9_29 [cluster="Unk.Dispose", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.Dispose", span=""];
m9_115 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", span="154-154"];
m9_116 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Perform.In(TimeSpan.FromDays(1), null, new { Count = 1 })", span="156-156"];
m9_117 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithArguments_AndNullType_ThrowsAnException()", span="154-154"];
m9_0 [cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.SetUp()", span="14-14"];
m9_1 [cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock = new Mock<IJobClient> { CallBase = false }", span="16-16"];
m9_2 [cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="FetchedJobsWatcherFacts.cs", label="Perform.CreateJobClientCallback \r\n                = () => _jobClientMock.Object", span="18-19"];
m9_3 [cluster="HangFire.Tests.UnitTests.PerformTests.SetUp()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.SetUp()", span="14-14"];
m9_13 [cluster="HangFire.Perform.Async(System.Type)", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Perform.Async(System.Type)", span="26-26"];
m9_175 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="223-223"];
m9_5 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="19-19"];
m9_6 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Object", span="19-19"];
m9_7 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="19-19"];
m9_15 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="28-32"];
m9_26 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="35-35"];
m9_16 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null))", span="28-32"];
m9_17 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="28-32"];
m9_23 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="32-32"];
m9_24 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="y == null", span="32-32"];
m9_25 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="32-32"];
m9_27 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.Dispose()", span="35-35"];
m9_28 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="35-35"];
m9_39 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="51-55"];
m9_42 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="58-58"];
m9_40 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>())", span="51-55"];
m9_41 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="51-55"];
m9_43 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.Dispose()", span="58-58"];
m9_44 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="58-58"];
m9_54 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="74-78"];
m9_60 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="81-81"];
m9_55 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.Is<object>(y => y == null))", span="74-78"];
m9_56 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="74-78"];
m9_57 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="78-78"];
m9_58 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="y == null", span="78-78"];
m9_59 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="78-78"];
m9_61 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.Dispose()", span="81-81"];
m9_62 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="81-81"];
m9_69 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="90-94"];
m9_72 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="97-97"];
m9_70 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>())", span="90-94"];
m9_71 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="90-94"];
m9_73 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.Dispose()", span="97-97"];
m9_74 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="97-97"];
m9_82 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="106-110"];
m9_89 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="113-113"];
m9_84 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="106-110"];
m9_86 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="110-110"];
m9_87 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="y == null", span="110-110"];
m9_88 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="110-110"];
m9_90 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.Dispose()", span="113-113"];
m9_91 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="113-113"];
m9_101 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="129-133"];
m9_104 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="136-136"];
m9_102 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>())", span="129-133"];
m9_103 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="129-133"];
m9_105 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.Dispose()", span="136-136"];
m9_106 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="136-136"];
m9_111 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="145-149"];
m9_112 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.CreateJob(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<Type>(),\r\n                    ItIsScheduledYesterday(),\r\n                    It.IsAny<object>())", span="145-149"];
m9_113 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="145-149"];
m9_124 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="165-169"];
m9_130 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="172-172"];
m9_125 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.Is<object>(y => y == null))", span="165-169"];
m9_126 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="165-169"];
m9_127 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="169-169"];
m9_128 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="y == null", span="169-169"];
m9_129 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="169-169"];
m9_131 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.Dispose()", span="172-172"];
m9_132 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="172-172"];
m9_139 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="181-185"];
m9_142 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="188-188"];
m9_140 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsScheduledTomorrow(),\r\n                    It.IsNotNull<object>())", span="181-185"];
m9_141 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="181-185"];
m9_143 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="x.Dispose()", span="188-188"];
m9_144 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="188-188"];
m9_149 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="var guid = Guid.Parse(actual)", span="195-195"];
m9_154 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="validator(x)", span="199-199"];
m9_153 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="199-199"];
m9_148 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="193-197"];
m9_150 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="return guid != Guid.Empty;", span="196-196"];
m9_151 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="193-197"];
m9_155 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="199-199"];
m9_159 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="204-204"];
m9_160 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="y == typeof (TestJob)", span="204-204"];
m9_161 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="204-204"];
m9_164 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="209-209"];
m9_165 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="y.Queue == ''default''", span="209-209"];
m9_166 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="209-209"];
m9_169 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Entry lambda expression", span="216-216"];
m9_170 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="DateTime.UtcNow.Date.AddDays(1) <= x.EnqueueAt && x.EnqueueAt < DateTime.UtcNow.AddDays(2)", span="216-216"];
m9_171 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="216-216"];
m9_176 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="DateTime.UtcNow.Date.AddDays(-2) < x.EnqueueAt && x.EnqueueAt <= DateTime.UtcNow.AddDays(-1)", span="223-223"];
m9_177 [cluster="lambda expression", file="FetchedJobsWatcherFacts.cs", label="Exit lambda expression", span="223-223"];
m9_33 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", span="46-46"];
m9_34 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Perform.Async(typeof (TestJob), new { Greeting = ''Hello'' })", span="48-48"];
m9_35 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(\r\n                x => x.CreateJob(\r\n                    ItIsNonEmptyGuid(),\r\n                    ItIsTestType(),\r\n                    ItIsEnqueuedToTheDefaultQueue(),\r\n                    It.IsNotNull<object>()),\r\n                Times.Once)", span="50-56"];
m9_36 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="58-58"];
m9_37 [cluster="HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.AsyncMethod_WithArguments()", span="46-46"];
m9_92 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="118-118"];
m9_93 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Perform.In(TimeSpan.FromDays(1), null)", span="120-120"];
m9_94 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments_AndNullType_ThrowsAnException()", span="118-118"];
m9_85 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", span="212-212"];
m9_167 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="FetchedJobsWatcherFacts.cs", label="return\r\n                It.Is<ScheduledState>(\r\n                    x => DateTime.UtcNow.Date.AddDays(1) <= x.EnqueueAt && x.EnqueueAt < DateTime.UtcNow.AddDays(2));", span="214-216"];
m9_168 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsScheduledTomorrow()", span="212-212"];
m9_18 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", span="191-191"];
m9_145 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="FetchedJobsWatcherFacts.cs", label="Func<string, bool> validator = actual =>\r\n                {\r\n                    var guid = Guid.Parse(actual);\r\n                    return guid != Guid.Empty;\r\n                }", span="193-197"];
m9_146 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="FetchedJobsWatcherFacts.cs", label="return It.Is<string>(x => validator(x));", span="199-199"];
m9_147 [cluster="HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.ItIsNonEmptyGuid()", span="191-191"];
m9_156 [cluster="Unk.validator", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.validator", span=""];
m9_22 [cluster="Unk.CreateJob", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.CreateJob", span=""];
m9_4 [cluster="Mock<IJobClient>.cstr", file="FetchedJobsWatcherFacts.cs", label="Entry Mock<IJobClient>.cstr", span=""];
m9_14 [cluster="Unk.Verify", file="FetchedJobsWatcherFacts.cs", label="Entry Unk.Verify", span=""];
m9_75 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Entry HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", span="101-101"];
m9_76 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Perform.In(TimeSpan.FromDays(1), typeof (TestJob))", span="103-103"];
m9_78 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="_jobClientMock.Verify(x => x.Dispose(), Times.Once)", span="113-113"];
m9_79 [cluster="HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", file="FetchedJobsWatcherFacts.cs", label="Exit HangFire.Tests.UnitTests.PerformTests.InMethod_WithNoArguments()", span="101-101"];
m9_178 [file="FetchedJobsWatcherFacts.cs", label="HangFire.Tests.UnitTests.PerformTests", span=""];
m9_179 [file="FetchedJobsWatcherFacts.cs", label=validator, span=""];
m10_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="HtmlHelper.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m10_16 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m10_26 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="43-45"];
m10_25 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="41-41"];
m10_28 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="var context = new CreateContext(\r\n                    new ClientJobDescriptor(_redis, jobId, jobParameters, state))", span="52-53"];
m10_29 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="_jobCreator.CreateJob(context)", span="55-55"];
m10_17 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="String.IsNullOrEmpty(jobId)", span="36-36"];
m10_19 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="jobType == null", span="37-37"];
m10_21 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="state == null", span="38-38"];
m10_23 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="args == null", span="39-39"];
m10_27 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="var jobParameters = CreateJobParameters(jobType, args)", span="50-50"];
m10_30 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="return jobId;", span="57-57"];
m10_18 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="throw new ArgumentNullException(''jobId'');", span="36-36"];
m10_20 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="throw new ArgumentNullException(''jobType'');", span="37-37"];
m10_22 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="throw new ArgumentNullException(''state'');", span="38-38"];
m10_24 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="throw new ArgumentNullException(''args'');", span="39-39"];
m10_32 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="throw new CreateJobFailedException(''Job creation was failed. See the inner exception for details.'', ex);", span="61-61"];
m10_31 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label=Exception, span="59-59"];
m10_33 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m10_37 [cluster="string.Format(string, object, object)", file="HtmlHelper.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m10_75 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="HtmlHelper.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m10_43 [cluster="HangFire.Client.JobClient.Dispose()", file="HtmlHelper.cs", label="Entry HangFire.Client.JobClient.Dispose()", span="65-65"];
m10_44 [cluster="HangFire.Client.JobClient.Dispose()", file="HtmlHelper.cs", label="_redis.Dispose()", span="67-67"];
m10_45 [cluster="HangFire.Client.JobClient.Dispose()", file="HtmlHelper.cs", label="Exit HangFire.Client.JobClient.Dispose()", span="65-65"];
m10_38 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Entry HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m10_47 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="var job = new Dictionary<string, string>()", span="73-73"];
m10_48 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="job[''Type''] = jobType.AssemblyQualifiedName", span="74-74"];
m10_49 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="job[''Args''] = JobHelper.ToJson(jobArgs)", span="75-75"];
m10_50 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="job[''State''] = String.Empty", span="76-76"];
m10_51 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="job[''CreatedAt''] = JobHelper.ToStringTimestamp(DateTime.UtcNow)", span="77-77"];
m10_52 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="return job;", span="79-79"];
m10_53 [cluster="HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", file="HtmlHelper.cs", label="Exit HangFire.Client.JobClient.CreateJobParameters(System.Type, System.Collections.Generic.IDictionary<string, string>)", span="70-70"];
m10_35 [cluster="System.Type.IsAssignableFrom(System.Type)", file="HtmlHelper.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m10_73 [cluster="object.GetType()", file="HtmlHelper.cs", label="Entry object.GetType()", span="0-0"];
m10_55 [cluster="HangFire.JobHelper.ToJson(object)", file="HtmlHelper.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="40-40"];
m10_56 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="HtmlHelper.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63"];
m10_71 [cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="HtmlHelper.cs", label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0"];
m10_2 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m10_7 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs", label="_redis = redisManager.GetClient()", span="23-23"];
m10_8 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs", label="_jobCreator = jobCreator", span="24-24"];
m10_5 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs", label="jobCreator == null", span="21-21"];
m10_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs", label="redisManager == null", span="20-20"];
m10_6 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs", label="throw new ArgumentNullException(''jobCreator'');", span="21-21"];
m10_4 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs", label="throw new ArgumentNullException(''redisManager'');", span="20-20"];
m10_9 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="HtmlHelper.cs", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="18-18"];
m10_74 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="HtmlHelper.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m10_11 [cluster="Unk.GetClient", file="HtmlHelper.cs", label="Entry Unk.GetClient", span=""];
m10_54 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="HtmlHelper.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_76 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="HtmlHelper.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m10_72 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", file="HtmlHelper.cs", label="Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m10_34 [cluster="string.IsNullOrEmpty(string)", file="HtmlHelper.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m10_46 [cluster="Unk.Dispose", file="HtmlHelper.cs", label="Entry Unk.Dispose", span=""];
m10_41 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="HtmlHelper.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m10_42 [cluster="HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="HtmlHelper.cs", label="Entry HangFire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="22-22"];
m10_15 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="HtmlHelper.cs", label="Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m10_57 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs", label="var result = new Dictionary<string, string>()", prediction=2, span="84-84"];
m10_58 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs", label="obj == null", prediction=3, span="85-85"];
m10_59 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs", label="return result;", prediction=2, span="85-85"];
m10_68 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="HtmlHelper.cs", label="result.Add(descriptor.Name, value)", span="110-110"];
m10_69 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="HtmlHelper.cs", label="return result;", span="113-113"];
m10_60 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs", label="TypeDescriptor.GetProperties(obj)", prediction=3, span="87-87"];
m10_61 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs", label="var propertyValue = descriptor.GetValue(obj)", prediction=6, span="89-89"];
m10_67 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs", label="throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", prediction=3, span="101-106"];
m10_62 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs", label="string value = null", prediction=8, span="90-90"];
m10_63 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs", label="propertyValue != null", prediction=6, span="92-92"];
m10_64 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs", label="var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", prediction=10, span="96-96"];
m10_65 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="HtmlHelper.cs", label="value = converter.ConvertToInvariantString(propertyValue)", prediction=11, span="97-97"];
m10_66 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="HtmlHelper.cs", label=Exception, span="99-99"];
m10_70 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="HtmlHelper.cs", label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="82-82"];
m10_40 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="HtmlHelper.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="15-15"];
m10_36 [cluster="System.ArgumentException.ArgumentException(string, string)", file="HtmlHelper.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m10_0 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="HtmlHelper.cs", label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
m10_1 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="HtmlHelper.cs", label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
m10_12 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="HtmlHelper.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m10_13 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="HtmlHelper.cs", label="return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="30-30"];
m10_14 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="HtmlHelper.cs", label="Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m10_39 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", file="HtmlHelper.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m10_78 [file="HtmlHelper.cs", label="HangFire.Client.JobClient", span=""];
m11_31 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="89-89"];
m11_39 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs", label=i, span="91-91"];
m11_40 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs", label=0, span="93-93"];
m11_42 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs", label=1, span="95-95"];
m11_44 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs", label=2, span="97-97"];
m11_41 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs", label="return LogLevel.Debug;", span="94-94"];
m11_43 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs", label="return LogLevel.Info;", span="96-96"];
m11_45 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs", label="return LogLevel.Warn;", span="98-98"];
m11_47 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs", label="return LogLevel.Error;", span="101-101"];
m11_46 [cluster="Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", file="Job.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.GetLogLevel(int)", span="89-89"];
m11_61 [cluster="System.Random.Next(int, int)", file="Job.cs", label="Entry System.Random.Next(int, int)", span="0-0"];
m11_57 [cluster="System.Random.Random(int)", file="Job.cs", label="Entry System.Random.Random(int)", span="0-0"];
m11_38 [cluster="string.Format(string, params object[])", file="Job.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m11_10 [cluster="object.GetType()", file="Job.cs", label="Entry object.GetType()", span="0-0"];
m11_29 [cluster="Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="Entry Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26"];
m11_60 [cluster="System.Math.Pow(double, double)", file="Job.cs", label="Entry System.Math.Pow(double, double)", span="0-0"];
m11_30 [cluster="System.Func<T, TResult>.Invoke(T)", file="Job.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m11_12 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51"];
m11_13 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="var i = 0", span="53-53"];
m11_15 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="_innerProcess.Execute(context)", span="57-57"];
m11_25 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="context.CancellationToken.WaitHandle.WaitOne(nextTry)", span="83-83"];
m11_26 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="84-84"];
m11_14 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="i <= MaxRetryAttempts", span="53-53"];
m11_20 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="i >= MaxRetryAttempts - 1", span="67-67"];
m11_22 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="var nextTry = DelayCallback(i)", span="69-69"];
m11_23 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="var logLevel = GetLogLevel(i)", span="70-70"];
m11_24 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="_logger.Log(\r\n                        logLevel,\r\n                        () => String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry),\r\n                        ex)", span="72-80"];
m11_27 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="i++", span="53-53"];
m11_16 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="return;", span="58-58"];
m11_17 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label=OperationCanceledException, span="60-60"];
m11_18 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="throw;", span="62-62"];
m11_19 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label=Exception, span="64-64"];
m11_21 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="throw;", span="67-67"];
m11_28 [cluster="Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="Job.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="51-51"];
m11_63 [cluster="System.TimeSpan.FromSeconds(double)", file="Job.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m11_34 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="Job.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m11_32 [cluster="Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", file="Job.cs", label="Entry Hangfire.Logging.ILog.Log(Hangfire.Logging.LogLevel, System.Func<string>, System.Exception)", span="54-54"];
m11_48 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="Job.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.ToString()", span="104-104"];
m11_49 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="Job.cs", label="return _innerProcess.ToString();", span="106-106"];
m11_50 [cluster="Hangfire.Server.AutomaticRetryProcess.ToString()", file="Job.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.ToString()", span="104-104"];
m11_35 [cluster="lambda expression", file="Job.cs", label="Entry lambda expression", span="74-79"];
m11_36 [cluster="lambda expression", file="Job.cs", label="String.Format(\r\n                            ''Error occurred during execution of '{0}' component. Execution will be retried (attempt {1} of {2}) in {3} seconds.'',\r\n                            _innerProcess,\r\n                            i + 1,\r\n                            MaxRetryAttempts,\r\n                            nextTry)", span="74-79"];
m11_37 [cluster="lambda expression", file="Job.cs", label="Exit lambda expression", span="74-79"];
m11_62 [cluster="System.Math.Min(double, double)", file="Job.cs", label="Entry System.Math.Min(double, double)", span="0-0"];
m11_58 [cluster="System.Guid.NewGuid()", file="Job.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m11_11 [cluster="Hangfire.Logging.LogProvider.GetLogger(System.Type)", file="Job.cs", label="Entry Hangfire.Logging.LogProvider.GetLogger(System.Type)", span="353-353"];
m11_59 [cluster="System.Guid.GetHashCode()", file="Job.cs", label="Entry System.Guid.GetHashCode()", span="0-0"];
m11_33 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="Job.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m11_52 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Job.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="109-109"];
m11_53 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Job.cs", label="var rand = new Random(Guid.NewGuid().GetHashCode())", span="112-112"];
m11_54 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Job.cs", label="var nextTry = rand.Next(\r\n                (int)Math.Pow(retryAttemptNumber, 2), (int)Math.Pow(retryAttemptNumber + 1, 2) + 1)", span="113-114"];
m11_55 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Job.cs", label="return TimeSpan.FromSeconds(Math.Min(nextTry, MaxAttemptDelay.TotalSeconds));", span="116-116"];
m11_56 [cluster="Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", file="Job.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.GetBackOffMultiplier(int)", span="109-109"];
m11_0 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30"];
m11_1 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs", label="innerProcess == null", span="32-32"];
m11_3 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs", label="_innerProcess = innerProcess", span="34-34"];
m11_2 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs", label="throw new ArgumentNullException(''innerProcess'');", span="32-32"];
m11_4 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs", label="_logger = LogProvider.GetLogger(_innerProcess.GetType())", span="35-35"];
m11_5 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs", label="MaxRetryAttempts = DefaultMaxRetryAttempts", span="37-37"];
m11_6 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs", label="MaxAttemptDelay = DefaultMaxAttemptDelay", span="38-38"];
m11_7 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs", label="DelayCallback = GetBackOffMultiplier", span="39-39"];
m11_8 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="Job.cs", label="Exit Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30"];
m11_51 [cluster="object.ToString()", file="Job.cs", label="Entry object.ToString()", span="0-0"];
m11_64 [file="Job.cs", label="Hangfire.Server.AutomaticRetryProcess", span=""];
m11_65 [file="Job.cs", label=i, span=""];
m11_66 [file="Job.cs", label=nextTry, span=""];
m12_22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobDetailsPage1.generated.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m12_35 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m12_23 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m12_24 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs", label="String.IsNullOrWhiteSpace(name)", span="98-98"];
m12_28 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs", label="var serializedValue = JobHelper.ToJson(value)", span="105-105"];
m12_29 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs", label="!_parameters.ContainsKey(name)", span="107-107"];
m12_30 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs", label="_parameters.Add(name, serializedValue)", span="109-109"];
m12_31 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs", label="_parameters[name] = serializedValue", span="113-113"];
m12_25 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs", label="throw new ArgumentNullException(''name'');", span="98-98"];
m12_26 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs", label=_jobWasCreated, span="100-100"];
m12_27 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs", label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102"];
m12_32 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m12_46 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="JobDetailsPage1.generated.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m12_53 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m12_0 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m12_1 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs", label="Items = context.Items", span="40-40"];
m12_2 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs", label="JobId = context.JobId", span="41-41"];
m12_3 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs", label="_jobWasCreated = context._jobWasCreated", span="42-42"];
m12_4 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs", label="_parameters = context._parameters", span="43-43"];
m12_5 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Client.CreateContext)", span="37-37"];
m12_45 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m12_38 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m12_39 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs", label="String.IsNullOrWhiteSpace(name)", span="131-131"];
m12_41 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs", label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137"];
m12_43 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143"];
m12_40 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs", label="throw new ArgumentNullException(''name'');", span="131-131"];
m12_42 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs", label=Exception, span="139-139"];
m12_44 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m12_33 [cluster="string.IsNullOrWhiteSpace(string)", file="JobDetailsPage1.generated.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m12_6 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46"];
m12_7 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="connection == null", span="52-52"];
m12_9 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="stateMachineFactory == null", span="53-53"];
m12_11 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="job == null", span="54-54"];
m12_13 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="initialState == null", span="55-55"];
m12_15 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="_stateMachineFactory = stateMachineFactory", span="57-57"];
m12_16 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="Connection = connection", span="59-59"];
m12_17 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="Job = job", span="60-60"];
m12_18 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="InitialState = initialState", span="61-61"];
m12_8 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="throw new ArgumentNullException(''connection'');", span="52-52"];
m12_10 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="throw new ArgumentNullException(''stateMachineFactory'');", span="53-53"];
m12_12 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="throw new ArgumentNullException(''job'');", span="54-54"];
m12_14 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="throw new ArgumentNullException(''initialState'');", span="55-55"];
m12_19 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="Items = new Dictionary<string, object>()", span="63-63"];
m12_20 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46"];
m12_54 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="JobDetailsPage1.generated.cs", label="Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23"];
m12_48 [cluster="HangFire.Client.CreateContext.CreateJob()", file="JobDetailsPage1.generated.cs", label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m12_49 [cluster="HangFire.Client.CreateContext.CreateJob()", file="JobDetailsPage1.generated.cs", label="var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149"];
m12_50 [cluster="HangFire.Client.CreateContext.CreateJob()", file="JobDetailsPage1.generated.cs", label="JobId = stateMachine.CreateInState(Job, _parameters, InitialState)", span="151-151"];
m12_51 [cluster="HangFire.Client.CreateContext.CreateJob()", file="JobDetailsPage1.generated.cs", label="_jobWasCreated = true", span="152-152"];
m12_52 [cluster="HangFire.Client.CreateContext.CreateJob()", file="JobDetailsPage1.generated.cs", label="Exit HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m12_36 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobDetailsPage1.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m12_37 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobDetailsPage1.generated.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m12_47 [cluster="string.Format(string, object)", file="JobDetailsPage1.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m12_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="JobDetailsPage1.generated.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m12_55 [file="JobDetailsPage1.generated.cs", label="HangFire.Client.CreateContext", span=""];
m13_14 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobFacts.cs", label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="52-52"];
m13_15 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobFacts.cs", label="context.Transaction.RemoveFromSet(''schedule'', context.JobId)", span="54-54"];
m13_16 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", file="JobFacts.cs", label="Exit HangFire.States.ScheduledState.Handler.Unapply(HangFire.Common.States.StateApplyingContext)", span="52-52"];
m13_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m13_0 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="JobFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27"];
m13_1 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="JobFacts.cs", label="EnqueueAt = enqueueAt", span="29-29"];
m13_2 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="JobFacts.cs", label="Exit HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27"];
m13_12 [cluster="long.Parse(string)", file="JobFacts.cs", label="Entry long.Parse(string)", span="0-0"];
m13_3 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="JobFacts.cs", label="Entry HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m13_4 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="JobFacts.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''ScheduledAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) }\r\n                };", span="37-41"];
m13_5 [cluster="HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", file="JobFacts.cs", label="Exit HangFire.States.ScheduledState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m13_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="JobFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="25-25"];
m13_13 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="JobFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="24-24"];
m13_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m13_8 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobFacts.cs", label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m13_9 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobFacts.cs", label="var timestamp = long.Parse(stateData[''EnqueueAt''])", span="48-48"];
m13_10 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobFacts.cs", label="context.Transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="49-49"];
m13_11 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="JobFacts.cs", label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="46-46"];
m13_18 [file="JobFacts.cs", label="HangFire.States.ScheduledState", span=""];
m14_20 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="JobHelper.cs", label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55"];
m14_22 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="JobHelper.cs", label="Exit HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55"];
m14_0 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobHelper.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m14_1 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobHelper.cs", label="return value != null \r\n                ? JsonConvert.SerializeObject(value)\r\n                : null;", span="25-27"];
m14_2 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobHelper.cs", label="Exit HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m14_19 [cluster="long.ToString()", file="JobHelper.cs", label="Entry long.ToString()", span="0-0"];
m14_23 [cluster="long.Parse(string)", file="JobHelper.cs", label="Entry long.Parse(string)", span="0-0"];
m14_24 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="JobHelper.cs", label="Entry HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", span="60-60"];
m14_25 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", color=green, community=0, file="JobHelper.cs", label="String.IsNullOrEmpty(value)", prediction=12, span="62-62"];
m14_27 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", color=green, community=0, file="JobHelper.cs", label="return DeserializeDateTime(value);", prediction=13, span="67-67"];
m14_26 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", color=green, community=0, file="JobHelper.cs", label="return null;", prediction=14, span="64-64"];
m14_28 [cluster="HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", file="JobHelper.cs", label="Exit HangFire.Common.JobHelper.DeserializeNullableDateTime(string)", span="60-60"];
m14_8 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m14_9 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs", label="TimeSpan elapsedTime = value - Epoch", span="41-41"];
m14_10 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs", label="return (long)elapsedTime.TotalSeconds;", span="42-42"];
m14_11 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobHelper.cs", label="Exit HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m14_4 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobHelper.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m14_5 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobHelper.cs", label="return value != null \r\n                ? JsonConvert.DeserializeObject<T>(value)\r\n                : default(T);", span="32-34"];
m14_6 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="JobHelper.cs", label="Exit HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m14_15 [cluster="System.DateTime.AddSeconds(double)", file="JobHelper.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m14_29 [cluster="string.IsNullOrEmpty(string)", file="JobHelper.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m14_3 [cluster="Unk.SerializeObject", file="JobHelper.cs", label="Entry Unk.SerializeObject", span=""];
m14_12 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="JobHelper.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45"];
m14_13 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="JobHelper.cs", label="return Epoch.AddSeconds(value);", span="47-47"];
m14_14 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="JobHelper.cs", label="Exit HangFire.Common.JobHelper.FromTimestamp(long)", span="45-45"];
m14_16 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobHelper.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m14_18 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="JobHelper.cs", label="Exit HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m15_22 [cluster="HangFire.JobActivator.JobActivator()", file="JobHelperFacts.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m15_31 [cluster="System.Threading.Thread.Join()", file="JobHelperFacts.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m15_51 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label="Entry HangFire.Server.JobServer.RunServer()", span="98-98"];
m15_52 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label="AnnounceServer()", span="102-102"];
m15_53 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label="StartServer()", span="103-103"];
m15_55 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label="Heartbeat()", span="107-107"];
m15_56 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label="_stopped.WaitOne(HeartbeatInterval)", span="109-109"];
m15_57 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label="StopServer()", span="115-115"];
m15_58 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label="RemoveServer(_redis, _context.ServerName)", span="116-116"];
m15_60 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="120-120"];
m15_54 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label=true, span="105-105"];
m15_59 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label=Exception, span="118-118"];
m15_61 [cluster="HangFire.Server.JobServer.RunServer()", file="JobHelperFacts.cs", label="Exit HangFire.Server.JobServer.RunServer()", span="98-98"];
m15_0 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="33-33"];
m15_1 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs", label="_redis = redisManager.GetClient()", span="41-41"];
m15_4 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs", label="_queues = queues", span="45-45"];
m15_2 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs", label="_redisManager = redisManager", span="43-43"];
m15_3 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs", label="_workerCount = workerCount", span="44-44"];
m15_5 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs", label="_pollInterval = pollInterval", prediction=15, span="46-46"];
m15_6 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs", label="queues == null", prediction=16, span="48-48"];
m15_7 [cluster="HangFire.States.FailedState.SerializeData()", color=green, community=0, file="JobHelperFacts.cs", label="Entry HangFire.States.FailedState.SerializeData()", prediction=17, span="42-42"];
m15_11 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", color=green, community=0, file="JobHelperFacts.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", prediction=16, span="50-50"];
m15_10 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobHelperFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m15_12 [cluster="System.Exception.GetType()", color=green, community=0, file="JobHelperFacts.cs", label="Entry System.Exception.GetType()", prediction=16, span="0-0"];
m15_13 [cluster="System.Exception.ToString()", file="JobHelperFacts.cs", label="Entry System.Exception.ToString()", span="0-0"];
m15_9 [cluster="HangFire.States.FailedState.SerializeData()", file="JobHelperFacts.cs", label="Exit HangFire.States.FailedState.SerializeData()", span="42-42"];
m15_14 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs", label="HangFire.States.FailedState", span=""];
m15_89 [cluster="Unk.SetRangeInHash", file="JobHelperFacts.cs", label="Entry Unk.SetRangeInHash", span=""];
m15_20 [cluster="string.Format(string, object, object)", file="JobHelperFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m15_26 [cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="70-70"];
m15_27 [cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobHelperFacts.cs", label="_stopped.Set()", prediction=16, span="72-72"];
m15_28 [cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs", label="_serverThread.Join()", span="73-73"];
m15_29 [cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs", label="Exit HangFire.Server.JobServer.Dispose()", span="70-70"];
m15_42 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", file="JobHelperFacts.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher(IRedisClientsManager)", span="21-21"];
m15_25 [cluster="System.Threading.Thread.Start()", file="JobHelperFacts.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m15_96 [cluster="Unk.SetEntryInHash", file="JobHelperFacts.cs", label="Entry Unk.SetEntryInHash", span=""];
m15_81 [cluster="Unk.AddItemToSet", file="JobHelperFacts.cs", label="Entry Unk.AddItemToSet", span=""];
m15_85 [cluster="string.Format(string, object)", file="JobHelperFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m15_88 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobHelperFacts.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m15_41 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="JobHelperFacts.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21"];
m15_109 [cluster="Unk.RemoveEntry", file="JobHelperFacts.cs", label="Entry Unk.RemoveEntry", span=""];
m15_87 [cluster="int.ToString()", file="JobHelperFacts.cs", label="Entry int.ToString()", span="0-0"];
m15_18 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobHelperFacts.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m15_19 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="JobHelperFacts.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m15_38 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="JobHelperFacts.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m15_30 [cluster="System.Threading.EventWaitHandle.Set()", file="JobHelperFacts.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m15_63 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobHelperFacts.cs", label="Entry HangFire.Server.JobServer.Heartbeat()", span="151-151"];
m15_94 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobHelperFacts.cs", label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="153-156"];
m15_95 [cluster="HangFire.Server.JobServer.Heartbeat()", file="JobHelperFacts.cs", label="Exit HangFire.Server.JobServer.Heartbeat()", span="151-151"];
m15_99 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName)))", span="167-169"];
m15_65 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs", label="Entry HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159"];
m15_97 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs", label="var transaction = redis.CreateTransaction()", span="161-161"];
m15_98 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName))", span="163-165"];
m15_100 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs", label="transaction.Commit()", span="171-171"];
m15_101 [cluster="HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", file="JobHelperFacts.cs", label="Exit HangFire.Server.JobServer.RemoveServer(IRedisClient, string)", span="159-159"];
m15_44 [cluster="HangFire.Server.JobServer.StopServer()", file="JobHelperFacts.cs", label="Entry HangFire.Server.JobServer.StopServer()", span="89-89"];
m15_45 [cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="JobHelperFacts.cs", label="_serverWatchdog.Dispose()", prediction=16, span="91-91"];
m15_46 [cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="JobHelperFacts.cs", label="_fetchedJobsWatcher.Dispose()", prediction=16, span="92-92"];
m15_47 [cluster="HangFire.Server.JobServer.StopServer()", color=green, community=0, file="JobHelperFacts.cs", label="_schedulePoller.Dispose()", prediction=16, span="93-93"];
m15_48 [cluster="HangFire.Server.JobServer.StopServer()", file="JobHelperFacts.cs", label="_manager.Dispose()", span="94-94"];
m15_49 [cluster="HangFire.Server.JobServer.StopServer()", file="JobHelperFacts.cs", label="Exit HangFire.Server.JobServer.StopServer()", span="89-89"];
m15_23 [cluster="HangFire.Server.JobPerformer.JobPerformer()", file="JobHelperFacts.cs", label="Entry HangFire.Server.JobPerformer.JobPerformer()", span="13-13"];
m15_15 [cluster="Unk.GetClient", file="JobHelperFacts.cs", label="Entry Unk.GetClient", span=""];
m15_50 [cluster="HangFire.Server.ThreadWrapper.Dispose()", file="JobHelperFacts.cs", label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23"];
m15_93 [cluster="Unk.AddItemToList", file="JobHelperFacts.cs", label="Entry Unk.AddItemToList", span=""];
m15_62 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="124-124"];
m15_67 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs", label="var transaction = _redis.CreateTransaction()", span="126-126"];
m15_68 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="128-129"];
m15_69 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="131-137"];
m15_70 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs", label=_queues, span="139-139"];
m15_72 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1))", span="142-144"];
m15_73 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs", label="transaction.Commit()", span="147-147"];
m15_71 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs", label="var queue1 = queue", span="141-141"];
m15_74 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="124-124"];
m15_105 [cluster="Unk.RemoveItemFromSet", file="JobHelperFacts.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m15_66 [cluster="Unk.Fatal", file="JobHelperFacts.cs", label="Entry Unk.Fatal", span=""];
m15_17 [cluster="System.TimeSpan.Duration()", file="JobHelperFacts.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m15_32 [cluster="HangFire.Server.JobServer.StartServer()", file="JobHelperFacts.cs", label="Entry HangFire.Server.JobServer.StartServer()", span="76-76"];
m15_33 [cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="JobHelperFacts.cs", label="_manager = new ThreadWrapper(new JobManager(\r\n                new PrioritizedJobFetcher(_redisManager, _queues, _workerCount),\r\n                _redisManager, \r\n                _context, \r\n                _workerCount))", prediction=24, span="78-82"];
m15_34 [cluster="HangFire.Server.JobServer.StartServer()", file="JobHelperFacts.cs", label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_redisManager, _pollInterval))", span="84-84"];
m15_35 [cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="JobHelperFacts.cs", label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher(_redisManager))", prediction=25, span="85-85"];
m15_36 [cluster="HangFire.Server.JobServer.StartServer()", color=green, community=0, file="JobHelperFacts.cs", label="_serverWatchdog = new ThreadWrapper(new ServerWatchdog(_redisManager))", prediction=26, span="86-86"];
m15_37 [cluster="HangFire.Server.JobServer.StartServer()", file="JobHelperFacts.cs", label="Exit HangFire.Server.JobServer.StartServer()", span="76-76"];
m15_106 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="167-169"];
m15_79 [cluster="lambda expression", file="JobHelperFacts.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="128-129"];
m15_83 [cluster="lambda expression", file="JobHelperFacts.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="131-137"];
m15_91 [cluster="lambda expression", file="JobHelperFacts.cs", label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1)", span="142-144"];
m15_78 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="128-129"];
m15_80 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="128-129"];
m15_82 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="131-137"];
m15_84 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="131-137"];
m15_90 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="142-144"];
m15_92 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="142-144"];
m15_103 [cluster="lambda expression", file="JobHelperFacts.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverName)", span="163-165"];
m15_107 [cluster="lambda expression", file="JobHelperFacts.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverName))", span="167-169"];
m15_102 [cluster="lambda expression", file="JobHelperFacts.cs", label="Entry lambda expression", span="163-165"];
m15_104 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="163-165"];
m15_108 [cluster="lambda expression", file="JobHelperFacts.cs", label="Exit lambda expression", span="167-169"];
m15_77 [cluster="Unk.Commit", file="JobHelperFacts.cs", label="Entry Unk.Commit", span=""];
m15_64 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="JobHelperFacts.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m15_21 [cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobHelperFacts.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9"];
m15_40 [cluster="HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", file="JobHelperFacts.cs", label="Entry HangFire.Server.PrioritizedJobFetcher.PrioritizedJobFetcher(IRedisClientsManager, System.Collections.Generic.IEnumerable<string>, int)", span="13-13"];
m15_43 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="JobHelperFacts.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18"];
m15_76 [cluster="Unk.QueueCommand", file="JobHelperFacts.cs", label="Entry Unk.QueueCommand", span=""];
m15_39 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", file="JobHelperFacts.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", span="18-18"];
m15_75 [cluster="Unk.CreateTransaction", file="JobHelperFacts.cs", label="Entry Unk.CreateTransaction", span=""];
m15_24 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobHelperFacts.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m15_110 [file="JobHelperFacts.cs", label="HangFire.Server.JobServer", span=""];
m15_111 [file="JobHelperFacts.cs", label=queue1, span=""];
m15_112 [file="JobHelperFacts.cs", label=string, span=""];
m18_14 [cluster="int.ToString(System.IFormatProvider)", file="ProcessingState.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m18_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m18_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m18_1 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="String.IsNullOrWhiteSpace(serverId)", span="29-29"];
m18_3 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="ServerId = serverId", span="31-31"];
m18_5 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="WorkerNumber = workerNumber", span="33-33"];
m18_2 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="throw new ArgumentNullException(''serverId'');", span="29-29"];
m18_4 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="StartedAt = DateTime.UtcNow", span="32-32"];
m18_6 [cluster="HangFire.States.ProcessingState.ProcessingState(string, int)", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m18_9 [cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.SerializeData()", span="45-45"];
m18_10 [cluster="HangFire.States.ProcessingState.SerializeData()", color=green, community=0, file="ProcessingState.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.SerializeDateTime(StartedAt) },\r\n                { ''ServerId'', ServerId },\r\n                { ''WorkerNumber'', WorkerNumber.ToString(CultureInfo.InvariantCulture) }\r\n            };", prediction=27, span="47-52"];
m18_11 [cluster="HangFire.States.ProcessingState.SerializeData()", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.SerializeData()", span="45-45"];
m18_7 [cluster="string.IsNullOrWhiteSpace(string)", file="ProcessingState.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m18_13 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ProcessingState.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m18_15 [file="ProcessingState.cs", label="HangFire.States.ProcessingState", span=""];
m20_15 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="QueuesPage.generated.cs", label="Entry HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m20_16 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="QueuesPage.generated.cs", label="return JobHelper.FromJson<T>(Connection.Jobs.GetParameter(\r\n                JobId, name));", span="64-65"];
m20_17 [cluster="HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", file="QueuesPage.generated.cs", label="Exit HangFire.Common.States.StateChangingContext.GetJobParameter<T>(string)", span="62-62"];
m20_10 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="QueuesPage.generated.cs", label="Entry HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m20_11 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="QueuesPage.generated.cs", label="Connection.Jobs.SetParameter(JobId, name, JobHelper.ToJson(value))", span="59-59"];
m20_12 [cluster="HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", file="QueuesPage.generated.cs", label="Exit HangFire.Common.States.StateChangingContext.SetJobParameter<T>(string, T)", span="57-57"];
m20_13 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="QueuesPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m20_18 [cluster="HangFire.Storage.IPersistentJob.GetParameter(string, string)", file="QueuesPage.generated.cs", label="Entry HangFire.Storage.IPersistentJob.GetParameter(string, string)", span="8-8"];
m20_19 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="QueuesPage.generated.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="28-28"];
m20_14 [cluster="HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", file="QueuesPage.generated.cs", label="Entry HangFire.Storage.IPersistentJob.SetParameter(string, string, string)", span="7-7"];
m20_0 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m20_1 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs", label="candidateState == null", span="32-32"];
m20_3 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs", label="connection == null", span="33-33"];
m20_5 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs", label="CandidateState = candidateState", span="35-35"];
m20_6 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs", label="CurrentState = currentState", span="36-36"];
m20_7 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs", label="Connection = connection", span="37-37"];
m20_2 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''candidateState'');", span="32-32"];
m20_4 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs", label="throw new ArgumentNullException(''connection'');", span="33-33"];
m20_8 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="QueuesPage.generated.cs", label="Exit HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m20_20 [file="QueuesPage.generated.cs", label="HangFire.Common.States.StateChangingContext", span=""];
m21_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RecurringJobScheduler.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m21_40 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.Dispose()", span="132-132"];
m21_41 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs", label="_innerServer != null", span="134-134"];
m21_42 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs", label="_innerServer.Dispose()", span="136-136"];
m21_44 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs", label="_cts.Cancel()", span="140-140"];
m21_45 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs", label="!_bootstrapTask.Wait(ShutdownTimeout)", span="142-142"];
m21_47 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs", label="Logger.Info(''Hangfire Server stopped.'')", span="147-147"];
m21_43 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs", label="return;", span="137-137"];
m21_46 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs", label="Logger.WarnFormat(''Hangfire Server takes too long to shutdown. Performing ungraceful shutdown.'')", span="144-144"];
m21_48 [cluster="Hangfire.BackgroundJobServer.Dispose()", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.Dispose()", span="132-132"];
m21_34 [cluster="Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", span="227-227"];
m21_113 [cluster="Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobScheduler.cs", label="return new InfiniteLoopProcess(new AutomaticRetryProcess(process));", span="229-229"];
m21_114 [cluster="Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.WrapProcess(Hangfire.Server.ILongRunningProcess)", span="227-227"];
m21_28 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m21_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="RecurringJobScheduler.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m21_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="RecurringJobScheduler.cs", label="transaction == null", span="12-12"];
m21_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="RecurringJobScheduler.cs", label="_transaction = transaction", span="14-14"];
m21_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''transaction'');", span="12-12"];
m21_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", file="RecurringJobScheduler.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.SqlServerWriteOnlyQueue(HangFire.SqlServer.SqlServerWriteOnlyTransaction)", span="10-10"];
m21_82 [cluster="System.Collections.Generic.List<T>.List()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m21_51 [cluster="Hangfire.Logging.ILog.WarnFormat(string, params object[])", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.WarnFormat(string, params object[])", span="270-270"];
m21_55 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", span="155-155"];
m21_56 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", file="RecurringJobScheduler.cs", label="return StartNew(storage, new BackgroundJobServerOptions());", span="157-157"];
m21_57 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage)", span="155-155"];
m21_52 [cluster="Hangfire.BackgroundJobServer.StartNew()", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.StartNew()", span="150-150"];
m21_53 [cluster="Hangfire.BackgroundJobServer.StartNew()", file="RecurringJobScheduler.cs", label="return StartNew(JobStorage.Current);", span="152-152"];
m21_54 [cluster="Hangfire.BackgroundJobServer.StartNew()", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.StartNew()", span="150-150"];
m21_107 [cluster="Hangfire.Server.WorkerContext.WorkerContext(string[], int)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.WorkerContext.WorkerContext(string[], int)", span="27-27"];
m21_49 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="RecurringJobScheduler.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m21_112 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="39-39"];
m21_9 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", file="RecurringJobScheduler.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue.Enqueue(string, string)", span="17-17"];
m21_62 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="return StartNew(storage, options, Enumerable.Empty<IBackgroundProcess>());", span="169-169"];
m21_63 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions)", span="165-165"];
m21_110 [cluster="Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="32-32"];
m21_83 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", span="208-208"];
m21_94 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''options'');", span="210-210"];
m21_95 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="var processes = new List<ILongRunningProcess>()", span="212-212"];
m21_93 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="options == null", span="210-210"];
m21_97 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="i < options.WorkerCount", span="214-214"];
m21_98 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="processes.Add(new Worker(new WorkerContext(options.Queues, i + 1)))", span="216-216"];
m21_101 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="processes.Add(new SchedulePoller(options.SchedulePollingInterval))", span="220-220"];
m21_102 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="processes.Add(new ServerWatchdog(options.ServerWatchdogOptions))", span="221-221"];
m21_96 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="var i = 0", span="214-214"];
m21_100 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="processes.Add(new ServerHeartbeat())", span="219-219"];
m21_103 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="processes.Add(new RecurringJobScheduler())", span="222-222"];
m21_104 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="return processes;", span="224-224"];
m21_99 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="i++", span="214-214"];
m21_105 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.GetDefaultProcesses(Hangfire.BackgroundJobServerOptions)", span="208-208"];
m21_120 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="RecurringJobScheduler.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m21_115 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m21_10 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="RecurringJobScheduler.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="39-39"];
m21_6 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="79-79"];
m21_7 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobScheduler.cs", label="_innerServer = StartNew(storage, options)", span="81-81"];
m21_8 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.BackgroundJobServerOptions, Hangfire.JobStorage)", span="79-79"];
m21_29 [cluster="Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", span="232-232"];
m21_117 [cluster="Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", file="RecurringJobScheduler.cs", label="return String.Format(\r\n                ''{0}:{1}:{2}'',\r\n                Environment.MachineName.ToLowerInvariant(),\r\n                Process.GetCurrentProcess().Id,\r\n                Guid.NewGuid());", span="234-238"];
m21_118 [cluster="Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.GetGloballyUniqueServerId()", span="232-232"];
m21_88 [cluster="Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs", label="Entry Hangfire.JobStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="68-68"];
m21_59 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", span="160-160"];
m21_60 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="return StartNew(JobStorage.Current, options);", span="162-162"];
m21_61 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.BackgroundJobServerOptions)", span="160-160"];
m21_50 [cluster="System.Threading.Tasks.Task.Wait(System.TimeSpan)", file="RecurringJobScheduler.cs", label="Entry System.Threading.Tasks.Task.Wait(System.TimeSpan)", span="0-0"];
m21_122 [cluster="string.Format(string, object, object, object)", file="RecurringJobScheduler.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m21_86 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m21_89 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", span="71-71"];
m21_87 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m21_65 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="172-172"];
m21_80 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="return new BackgroundJobServer(storage, processes, serverData)\r\n            {\r\n                ShutdownTimeout = options.ShutdownTimeout\r\n            };", span="197-200"];
m21_76 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="var serverData = new Dictionary<string, object>\r\n            {\r\n                { ''Queues'', options.Queues },\r\n                { ''WorkerCount'', options.WorkerCount }\r\n            }", span="186-190"];
m21_79 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="options.WriteToLog(Logger)", span="195-195"];
m21_72 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="var processes = new List<ILongRunningProcess>()", span="181-181"];
m21_66 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="storage == null", span="177-177"];
m21_68 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="options == null", span="178-178"];
m21_70 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="additionalProcesses == null", span="179-179"];
m21_73 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="processes.AddRange(GetDefaultProcesses(options))", span="182-182"];
m21_74 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="processes.AddRange(storage.GetComponents())", span="183-183"];
m21_75 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="processes.AddRange(additionalProcesses)", span="184-184"];
m21_77 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="Logger.InfoFormat(''Using job storage: '{0}'.'', storage)", span="192-192"];
m21_78 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="storage.WriteOptionsToLog(Logger)", span="194-194"];
m21_67 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''storage'');", span="177-177"];
m21_69 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''options'');", span="178-178"];
m21_71 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''additionalProcesses'');", span="179-179"];
m21_81 [cluster="Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.StartNew(Hangfire.JobStorage, Hangfire.BackgroundJobServerOptions, System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>)", span="172-172"];
m21_32 [cluster="ServerBootstrapper.cstr", file="RecurringJobScheduler.cs", label="Entry ServerBootstrapper.cstr", span=""];
m21_58 [cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="32-32"];
m21_11 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Entry lambda expression", span="23-25"];
m21_12 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="23-25"];
m21_13 [cluster="lambda expression", file="RecurringJobScheduler.cs", label="Exit lambda expression", span="23-25"];
m21_119 [cluster="string.ToLowerInvariant()", file="RecurringJobScheduler.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m21_33 [cluster="Unk.Select", file="RecurringJobScheduler.cs", label="Entry Unk.Select", span=""];
m21_84 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m21_31 [cluster="Hangfire.Logging.ILog.Info(string)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
m21_121 [cluster="System.Guid.NewGuid()", file="RecurringJobScheduler.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m21_108 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m21_14 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", span="99-99"];
m21_85 [cluster="Hangfire.JobStorage.GetComponents()", file="RecurringJobScheduler.cs", label="Entry Hangfire.JobStorage.GetComponents()", span="58-58"];
m21_106 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="35-35"];
m21_90 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses()", file="RecurringJobScheduler.cs", label="Entry Hangfire.BackgroundJobServer.GetDefaultProcesses()", span="203-203"];
m21_91 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses()", file="RecurringJobScheduler.cs", label="return GetDefaultProcesses(new BackgroundJobServerOptions());", span="205-205"];
m21_92 [cluster="Hangfire.BackgroundJobServer.GetDefaultProcesses()", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.GetDefaultProcesses()", span="203-203"];
m21_35 [cluster="Hangfire.Server.ILongRunningProcess.CreateTask(Hangfire.Server.BackgroundProcessContext)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.ILongRunningProcess.CreateTask(Hangfire.Server.BackgroundProcessContext)", span="48-48"];
m21_116 [cluster="Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.AutomaticRetryProcess.AutomaticRetryProcess(Hangfire.Server.ILongRunningProcess)", span="30-30"];
m21_111 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", span="27-27"];
m21_22 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", color=green, community=0, file="RecurringJobScheduler.cs", label=serverData, prediction=28, span="109-109"];
m21_21 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label="var context = new BackgroundProcessContext(GetGloballyUniqueServerId(), storage, _cts.Token)", span="108-108"];
m21_23 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", color=green, community=0, file="RecurringJobScheduler.cs", label="context.ServerData.Add(item.Key, item.Value)", prediction=29, span="111-111"];
m21_24 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label="Logger.Info(''Starting Hangfire Server'')", span="114-114"];
m21_15 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue", span=""];
m21_17 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label=string, span=""];
m21_19 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label="serverData == null", span="106-106"];
m21_25 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label="_bootstrapTask = WrapProcess(new ServerBootstrapper(processes.Select(WrapProcess)))\r\n                .CreateTask(context)", span="116-117"];
m21_16 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label=string, span=""];
m21_18 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label=enqueueJobSql, span=""];
m21_20 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label="throw new ArgumentNullException(''serverData'');", span="106-106"];
m21_26 [cluster="Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", file="RecurringJobScheduler.cs", label="Exit Hangfire.BackgroundJobServer.BackgroundJobServer(Hangfire.JobStorage, System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>, System.Collections.Generic.IDictionary<string, object>)", span="99-99"];
m21_30 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobScheduler.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m21_109 [cluster="Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", file="RecurringJobScheduler.cs", label="Entry Hangfire.Server.ServerHeartbeat.ServerHeartbeat()", span="20-20"];
m21_64 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="RecurringJobScheduler.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m21_123 [file="RecurringJobScheduler.cs", label="Hangfire.BackgroundJobServer", span=""];
m22_106 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="118-118"];
m22_22 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="35-35"];
m22_270 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315"];
m22_271 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="317-317"];
m22_274 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs", label="stateMachine\r\n                .Setup(x => x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>()))\r\n                .Returns(electedState.Object)", span="321-324"];
m22_275 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Object.ChangeState(context, _state.Object, OldStateName)", span="326-326"];
m22_276 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))", span="328-329"];
m22_272 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="318-318"];
m22_273 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs", label="var electedState = new Mock<IState>()", span="319-319"];
m22_277 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315"];
m22_136 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="158-158"];
m22_137 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m22_138 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="RecurringJobSchedulerFacts.cs", label="var disposableMock = new Mock<IDisposable>()", span="166-166"];
m22_128 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="72-72"];
m22_129 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m22_131 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', _state.Object, null))", span="157-158"];
m22_132 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''fromStates'', exception.ParamName)", span="160-160"];
m22_130 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachine()", prediction=30, span="155-155"];
m22_133 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m22_134 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="158-158"];
m22_135 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="stateMachine.TryToChangeState(''1'', _state.Object, null)", span="158-158"];
m22_13 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="30-30"];
m22_14 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine(''Hello'')", span="30-30"];
m22_15 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="30-30"];
m22_45 [cluster="Unk.GetProperties", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetProperties", span=""];
m22_161 [cluster="Unk.False", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.False", span=""];
m22_90 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="105-105"];
m22_107 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m22_71 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="89-89"];
m22_72 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="52-52"];
m22_73 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m22_74 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs", label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="97-97"];
m22_75 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs", label="_parameters.Add(''Name'', ''Value'')", span="98-98"];
m22_315 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355"];
m22_320 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="_handlers.Add(handler1.Object)", span="364-364"];
m22_321 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="_handlers.Add(handler2.Object)", span="365-365"];
m22_322 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachine()", span="367-367"];
m22_324 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.ApplyState(\r\n                context, _state.Object, OldStateName, Enumerable.Empty<IApplyStateFilter>())", span="371-372"];
m22_325 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="handler1.Verify(x => x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>()))", span="375-381"];
m22_316 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="var handler1 = new Mock<IStateHandler>()", span="358-358"];
m22_319 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="handler2.Setup(x => x.StateName).Returns(StateName)", span="362-362"];
m22_318 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="var handler2 = new Mock<IStateHandler>()", span="361-361"];
m22_323 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="368-368"];
m22_317 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="handler1.Setup(x => x.StateName).Returns(StateName)", span="359-359"];
m22_326 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355"];
m22_91 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="106-106"];
m22_92 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="d[''Name''] == ''Value''", span="106-106"];
m22_93 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="106-106"];
m22_94 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m22_235 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275"];
m22_236 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = null,\r\n                    LoadException = new JobLoadException()\r\n                })", span="278-284"];
m22_237 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="286-286"];
m22_238 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="289-289"];
m22_239 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old''))", span="292-295"];
m22_240 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs", label="Assert.False(result)", span="297-297"];
m22_241 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275"];
m22_103 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs", label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="189-189"];
m22_3 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs", label="_state = new Mock<IState>()", span="32-32"];
m22_124 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m22_125 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="147-147"];
m22_126 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' })", span="147-147"];
m22_127 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="147-147"];
m22_148 [cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="249-249"];
m22_144 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs", label="var filter = table.Rows[i][''Filter'']", span="243-243"];
m22_121 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachine()", span="144-144"];
m22_117 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' })", span="136-136"];
m22_118 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="136-136"];
m22_119 [cluster="Unk.TryToChangeState", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.TryToChangeState", span=""];
m22_120 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m22_56 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x[''Value'']", span="96-96"];
m22_57 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="96-96"];
m22_58 [cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101"];
m22_59 [cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="RecurringJobSchedulerFacts.cs", label="_clientFilters.Add(new TestFilter(''buggy'', _clientFilterResults, true))", span="103-103"];
m22_60 [cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="101-101"];
m22_46 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94"];
m22_47 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="RecurringJobSchedulerFacts.cs", label="_arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="96-96"];
m22_48 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="RecurringJobSchedulerFacts.cs", label="When(''I create a job'')", span="97-97"];
m22_49 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="94-94"];
m22_50 [cluster="Unk.ToDictionary", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.ToDictionary", span=""];
m22_105 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="sc.JobId == JobId && sc.Job == _job", span="118-118"];
m22_179 [cluster="HangFire.Storage.JobData.JobData()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m22_38 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m22_327 [cluster="Mock<IStateHandler>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IStateHandler>.cstr", span=""];
m22_165 [cluster="Unk.GetJobData", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetJobData", span=""];
m22_85 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="104-107"];
m22_26 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="37-40"];
m22_27 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="RecurringJobSchedulerFacts.cs", label="_stateMock = new Mock<JobState>(''SomeReason'')", span="75-75"];
m22_28 [cluster="Unk.CreateExpiredJob", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.CreateExpiredJob", span=""];
m22_29 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m22_30 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _handlers, _filters))", span="46-47"];
m22_31 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="49-49"];
m22_32 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m22_33 [cluster="Unk.Equal", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Equal", span=""];
m22_76 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachine()", span="100-100"];
m22_284 [cluster="Unk.ElectState", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.ElectState", span=""];
m22_242 [cluster="HangFire.Common.JobLoadException.JobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33"];
m22_34 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="47-47"];
m22_108 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachine()", prediction=31, span="126-126"];
m22_10 [cluster="Mock<IState>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IState>.cstr", span=""];
m22_11 [cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m22_12 [cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Returns", span=""];
m22_151 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="173-173"];
m22_95 [cluster="Unk.GetAllEntriesFromHash", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m22_96 [cluster="Unk.ContainsFollowingItems", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m22_97 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178"];
m22_98 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs", label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="180-182"];
m22_139 [cluster="Unk.AreNotEqual", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.AreNotEqual", span=""];
m22_140 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="237-237"];
m22_141 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs", label="Assert.AreEqual(table.RowCount, _exceptionFilterResults.Count)", span="239-239"];
m22_142 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs", label="var i = 0", span="241-241"];
m22_143 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs", label="i < table.RowCount", span="241-241"];
m22_122 [cluster="System.Type.GetType(string, bool)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m22_123 [cluster="Unk.IsInstanceOfType", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.IsInstanceOfType", span=""];
m22_190 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m22_191 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="225-230"];
m22_192 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="232-232"];
m22_194 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="237-237"];
m22_195 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Verify(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))", span="240-240"];
m22_193 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(false)", span="233-234"];
m22_196 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs", label="Assert.False(result)", span="241-241"];
m22_197 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m22_152 [cluster="Unk.Dispose", file="RecurringJobSchedulerFacts.cs", label="HangFire.Tests.JobClientSteps", span=""];
m22_87 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="104-107"];
m22_88 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="105-105"];
m22_89 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''", span="105-105"];
m22_330 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="359-359"];
m22_39 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null, _filters))", span="55-56"];
m22_42 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="56-56"];
m22_40 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''handlers'', exception.ParamName)", span="58-58"];
m22_41 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m22_43 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="new StateMachine(_connection.Object, null, _filters)", span="56-56"];
m22_44 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="56-56"];
m22_52 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="67-67"];
m22_55 [cluster="Unk.CreateInState", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.CreateInState", span=""];
m22_53 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="67-67"];
m22_54 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="67-67"];
m22_113 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobSchedulerFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' }))", span="135-136"];
m22_114 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="138-138"];
m22_115 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m22_86 [cluster="Unk.IsTrue", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Entry Unk.IsTrue", prediction=32, span=""];
m22_35 [cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m22_62 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="RecurringJobSchedulerFacts.cs", label="_client.CreateJob(null, typeof(TestJob), new Mock<JobState>(''1'').Object, null)", span="111-111"];
m22_70 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="120-120"];
m22_101 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs", label=_arguments, span="186-186"];
m22_229 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old'')", span="266-269"];
m22_267 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>())", span="309-310"];
m22_282 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>())", span="322-323"];
m22_303 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="339-340"];
m22_340 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>())", span="375-381"];
m22_344 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName", span="377-380"];
m22_25 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="66-66"];
m22_163 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetJobData(It.IsAny<string>())", span="180-180"];
m22_170 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="193-193"];
m22_188 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="217-217"];
m22_205 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="233-233"];
m22_208 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="240-240"];
m22_226 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="258-258"];
m22_247 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old'')", span="292-295"];
m22_286 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="328-329"];
m22_306 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any()))", span="346-350"];
m22_17 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="RecurringJobSchedulerFacts.cs", label="_clientFilters.Add(new TestFilter(name, _clientFilterResults, true, false, false))", span="56-56"];
m22_20 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="RecurringJobSchedulerFacts.cs", label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults))", span="62-62"];
m22_24 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="RecurringJobSchedulerFacts.cs", label="_exceptionFilters.Add(new TestExceptionFilter(name, _exceptionFilterResults, true))", span="68-68"];
m22_36 [cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Returns", span=""];
m22_61 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107"];
m22_63 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="RecurringJobSchedulerFacts.cs", label=Exception, span="113-113"];
m22_69 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="RecurringJobSchedulerFacts.cs", label="_exception = ex", span="128-128"];
m22_100 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs", label="Assert.AreEqual(_arguments.Count, args.Count)", span="185-185"];
m22_102 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs", label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="188-188"];
m22_104 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="178-178"];
m22_116 [cluster="Unk.Apply", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Apply", span=""];
m22_145 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs", label="Assert.AreEqual(filter, _exceptionFilterResults[i])", span="244-244"];
m22_162 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="180-180"];
m22_166 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="190-190"];
m22_180 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="201-201"];
m22_183 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="205-205"];
m22_198 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="225-225"];
m22_201 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="229-229"];
m22_219 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="249-249"];
m22_222 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="253-253"];
m22_228 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="266-269"];
m22_230 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="266-269"];
m22_231 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="267-267"];
m22_243 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="278-278"];
m22_266 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="309-310"];
m22_268 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="309-310"];
m22_281 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="322-323"];
m22_283 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="322-323"];
m22_302 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="339-340"];
m22_304 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="339-340"];
m22_339 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="375-381"];
m22_341 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="375-381"];
m22_343 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="376-380"];
m22_345 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="376-380"];
m22_82 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="159-159"];
m22_149 [cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="RecurringJobSchedulerFacts.cs", label="Assert.IsNull(_exception)", span="251-251"];
m22_169 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="193-193"];
m22_187 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="217-217"];
m22_207 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="240-240"];
m22_246 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="292-295"];
m22_285 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="328-329"];
m22_305 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="346-350"];
m22_164 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="180-180"];
m22_171 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="193-193"];
m22_189 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="217-217"];
m22_204 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="233-233"];
m22_206 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="233-233"];
m22_209 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="240-240"];
m22_225 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="258-258"];
m22_227 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="258-258"];
m22_248 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="292-295"];
m22_249 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="293-293"];
m22_252 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="294-294"];
m22_287 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="328-329"];
m22_307 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="346-350"];
m22_308 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="348-348"];
m22_311 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="350-350"];
m22_19 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="60-60"];
m22_18 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54"];
m22_21 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="60-60"];
m22_147 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="237-237"];
m22_146 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="RecurringJobSchedulerFacts.cs", label="i++", span="241-241"];
m22_168 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="190-190"];
m22_167 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetJobData(''1'')", span="190-190"];
m22_182 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="201-201"];
m22_181 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetJobData(''1'')", span="201-201"];
m22_185 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="205-205"];
m22_184 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="205-205"];
m22_200 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="225-225"];
m22_199 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetJobData(''1'')", span="225-225"];
m22_203 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="229-229"];
m22_202 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="229-229"];
m22_221 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="249-249"];
m22_220 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetJobData(''1'')", span="249-249"];
m22_224 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="253-253"];
m22_223 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="253-253"];
m22_233 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="267-267"];
m22_232 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')", span="267-267"];
m22_245 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="278-278"];
m22_244 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetJobData(''1'')", span="278-278"];
m22_263 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="304-304"];
m22_278 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="318-318"];
m22_299 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="336-336"];
m22_309 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="s.Exception == exception", span="348-348"];
m22_333 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="362-362"];
m22_336 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="368-368"];
m22_84 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="159-159"];
m22_83 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="RecurringJobSchedulerFacts.cs", label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="161-161"];
m22_150 [cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="249-249"];
m22_251 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="293-293"];
m22_250 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="sc.JobId == ''1'' && sc.Job == null", span="293-293"];
m22_254 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="294-294"];
m22_253 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="s.Exception != null", span="294-294"];
m22_310 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="348-348"];
m22_313 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="350-350"];
m22_312 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="!f.Any()", span="350-350"];
m22_265 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="304-304"];
m22_264 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="304-304"];
m22_280 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="318-318"];
m22_279 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="318-318"];
m22_301 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="336-336"];
m22_300 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="336-336"];
m22_335 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="362-362"];
m22_334 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.StateName", span="362-362"];
m22_337 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="368-368"];
m22_338 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="368-368"];
m22_8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m22_234 [cluster="Unk.Equals", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Equals", span=""];
m22_64 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="RecurringJobSchedulerFacts.cs", label="_exception = ex", span="115-115"];
m22_65 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="107-107"];
m22_66 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="120-120"];
m22_67 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="RecurringJobSchedulerFacts.cs", label="_client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, null)", span="124-124"];
m22_0 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28"];
m22_1 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs", label="_job = Job.FromExpression(() => Console.WriteLine(''Hello''))", span="30-30"];
m22_2 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs", label="_parameters = new Dictionary<string, string>()", span="31-31"];
m22_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m22_314 [cluster="Unk.Any", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Any", span=""];
m22_342 [cluster="Unk.Apply", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Apply", span=""];
m22_153 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m22_154 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="180-181"];
m22_155 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="183-183"];
m22_156 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new [] { ''Old'' })", span="186-186"];
m22_158 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.GetJobData(''1''))", span="190-190"];
m22_159 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="192-194"];
m22_157 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Assert.False(result)", span="189-189"];
m22_160 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m22_262 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m22_5 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.CreateWriteTransaction())\r\n                .Returns(_transaction.Object)", span="35-36"];
m22_6 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="37-40"];
m22_7 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28"];
m22_111 [cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="194-194"];
m22_112 [cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m22_288 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333"];
m22_289 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="335-335"];
m22_292 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Setup(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))\r\n                .Throws(exception)", span="339-341"];
m22_293 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs", label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="343-344"];
m22_294 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any())))", span="346-350"];
m22_290 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="336-336"];
m22_291 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs", label="var exception = new NotSupportedException()", span="337-337"];
m22_295 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs", label="Assert.False(result)", span="351-351"];
m22_296 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333"];
m22_77 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="102-102"];
m22_78 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>()))", prediction=33, span="104-107"];
m22_79 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m22_80 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m22_81 [cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m22_297 [cluster="System.NotSupportedException.NotSupportedException()", file="RecurringJobSchedulerFacts.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m22_109 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="RecurringJobSchedulerFacts.cs", label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="127-127"];
m22_110 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m22_328 [cluster="Unk.Add", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Add", span=""];
m22_51 [cluster="Unk.When", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.When", span=""];
m22_346 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="RecurringJobSchedulerFacts.cs", label="return new StateMachine(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters);", span="386-389"];
m22_347 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384"];
m22_4 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m22_172 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m22_173 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="201-206"];
m22_174 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="208-208"];
m22_175 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs", label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new [] { ''AnotherState'' })", span="211-212"];
m22_177 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="216-218"];
m22_176 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs", label="Assert.False(result)", span="215-215"];
m22_178 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m22_16 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="54-54"];
m22_37 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m22_350 [cluster="Mock<StateMachine>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<StateMachine>.cstr", span=""];
m22_99 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="RecurringJobSchedulerFacts.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="183-183"];
m22_348 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="RecurringJobSchedulerFacts.cs", label="return new Mock<StateMachine>(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters)\r\n            {\r\n                CallBase = true\r\n            };", span="394-400"];
m22_349 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392"];
m22_210 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m22_211 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="249-254"];
m22_212 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="256-256"];
m22_214 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs", label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="262-263"];
m22_215 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old''))", span="266-269"];
m22_213 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(true)", span="258-259"];
m22_216 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs", label="Assert.True(result)", span="271-271"];
m22_217 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m22_255 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301"];
m22_256 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs", label="var stateMachine = CreateStateMachineMock()", span="303-303"];
m22_258 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs", label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="306-307"];
m22_259 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>()))", span="309-310"];
m22_257 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="304-304"];
m22_260 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs", label="Assert.True(result)", span="311-311"];
m22_261 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301"];
m22_298 [cluster="Unk.Throws", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Throws", span=""];
m22_23 [cluster="Unk.CreateWriteTransaction", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m22_218 [cluster="Unk.True", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.True", span=""];
m22_186 [cluster="System.Console.WriteLine()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m22_269 [cluster="Unk.ApplyState", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.ApplyState", span=""];
m22_329 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m22_351 [file="RecurringJobSchedulerFacts.cs", label="HangFire.Core.Tests.States.StateMachineFacts", span=""];
m22_357 [file="RecurringJobSchedulerFacts.cs", label=stateMachine, span=""];
m22_352 [file="RecurringJobSchedulerFacts.cs", label=stateMachine, span=""];
m22_353 [file="RecurringJobSchedulerFacts.cs", label=stateMachine, span=""];
m22_354 [file="RecurringJobSchedulerFacts.cs", label=stateMachine, span=""];
m22_355 [file="RecurringJobSchedulerFacts.cs", label=stateMachine, span=""];
m22_358 [file="RecurringJobSchedulerFacts.cs", label=context, span=""];
m22_359 [file="RecurringJobSchedulerFacts.cs", label=context, span=""];
m22_361 [file="RecurringJobSchedulerFacts.cs", label=context, span=""];
m22_363 [file="RecurringJobSchedulerFacts.cs", label=context, span=""];
m22_360 [file="RecurringJobSchedulerFacts.cs", label=electedState, span=""];
m22_362 [file="RecurringJobSchedulerFacts.cs", label=exception, span=""];
m22_356 [file="RecurringJobSchedulerFacts.cs", label=stateMachine, span=""];
m23_25 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="RecurringJobsPage.cs", label="Assert.Equal(JobHelper.SerializeDateTime(state.EnqueueAt), data[''EnqueueAt''])", span="40-40"];
m23_20 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="dto.LastJobState = stateData.Name", span="52-52"];
m23_32 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="RecurringJobsPage.cs", label="Assert.False(state.IsFinal)", span="49-49"];
m23_17 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="dto.LastJobId = hash[''LastJobId'']", span="47-47"];
m23_5 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="19-19"];
m23_28 [cluster="string.Format(string, object)", file="RecurringJobsPage.cs", label="Entry string.Format(string, object)", span="0-0"];
m23_30 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", file="RecurringJobsPage.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobDto.RecurringJobDto()", span="68-68"];
m23_31 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobsPage.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m23_33 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="RecurringJobsPage.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m23_29 [cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RecurringJobsPage.cs", label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m23_11 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="dto.Job = invocationData.Deserialize()", span="33-33"];
m23_34 [cluster="Unk.False", file="RecurringJobsPage.cs", label="Entry Unk.False", span=""];
m23_0 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="Entry HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", span="9-9"];
m23_1 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="RecurringJobs = new List<RecurringJobDto>()", span="11-11"];
m23_2 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="var connection = JobStorage.Current.GetConnection()", span="13-13"];
m23_3 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="15-15"];
m23_35 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", file="RecurringJobsPage.cs", label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55"];
m23_36 [cluster="HangFire.Storage.IStorageConnection.GetStateData(string)", file="RecurringJobsPage.cs", label="Entry HangFire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m23_37 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="RecurringJobsPage.cs", label="HangFire.Web.Pages.RecurringJobsPage", span=""];
m23_38 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="RecurringJobsPage.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m23_18 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="var stateData = connection.GetStateData(dto.LastJobId)", span="49-49"];
m23_19 [cluster="HangFire.Web.Pages.RecurringJobsPage.RecurringJobsPage()", file="RecurringJobsPage.cs", label="stateData != null", span="50-50"];
m23_15 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", color=green, community=0, file="RecurringJobsPage.cs", label="Assert.True(state.EnqueueAt < DateTime.UtcNow.AddDays(1).AddMinutes(1))", prediction=34, span="30-30"];
m23_8 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="RecurringJobsPage.cs", label="var state = new ScheduledState(date)", span="21-21"];
m23_14 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="RecurringJobsPage.cs", label="Assert.True(DateTime.UtcNow.AddDays(1).AddMinutes(-1) < state.EnqueueAt)", span="29-29"];
m23_16 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="RecurringJobsPage.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26"];
m23_22 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="RecurringJobsPage.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", prediction=34, span="34-34"];
m23_21 [cluster="Unk.True", file="RecurringJobsPage.cs", label="Entry Unk.True", span=""];
m23_23 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="RecurringJobsPage.cs", label="var state = new ScheduledState(new DateTime(2012, 12, 12))", span="36-36"];
m23_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="RecurringJobsPage.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m23_6 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="RecurringJobsPage.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m23_9 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="RecurringJobsPage.cs", label="Assert.Equal(date, state.EnqueueAt)", span="22-22"];
m23_10 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="RecurringJobsPage.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m23_13 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="RecurringJobsPage.cs", label="var state = new ScheduledState(TimeSpan.FromDays(1))", span="28-28"];
m23_7 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="RecurringJobsPage.cs", label="var date = new DateTime(2012, 12, 12)", span="20-20"];
m23_12 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", file="RecurringJobsPage.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectDate_WhenTimeSpanIsPassed()", span="26-26"];
m23_24 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="RecurringJobsPage.cs", label="var data = state.SerializeData()", span="38-38"];
m23_26 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="RecurringJobsPage.cs", label="Assert.Equal(JobHelper.SerializeDateTime(state.ScheduledAt), data[''ScheduledAt''])", span="41-41"];
m23_27 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="RecurringJobsPage.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m25_3 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.Dispose()", span="39-39"];
m25_4 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs", label="Redis.Dispose()", span="41-41"];
m25_5 [cluster="HangFire.Redis.RedisConnection.Dispose()", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.Dispose()", span="39-39"];
m25_168 [cluster="int.ToString(System.IFormatProvider)", file="RedisConnection.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m25_12 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49"];
m25_13 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="string jobId", span="51-51"];
m25_16 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="57-57"];
m25_17 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="queueIndex = (queueIndex + 1) % queues.Length", span="59-59"];
m25_18 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="queueName = queues[queueIndex]", span="60-60"];
m25_14 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="string queueName", span="52-52"];
m25_15 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="var queueIndex = 0", span="53-53"];
m25_21 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="queueIndex == 0", span="65-65"];
m25_19 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="var queueKey = RedisStorage.Prefix + String.Format(''queue:{0}'', queueName)", span="62-62"];
m25_20 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="var fetchedKey = RedisStorage.Prefix + String.Format(''queue:{0}:dequeued'', queueName)", span="63-63"];
m25_26 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="return new RedisFetchedJob(Redis, jobId, queueName);", span="104-104"];
m25_22 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="jobId = Redis.BlockingPopAndPushItemBetweenLists(\r\n                        queueKey,\r\n                        fetchedKey,\r\n                        FetchTimeout)", span="67-70"];
m25_23 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="jobId = Redis.PopAndPushItemBetweenLists(\r\n                        queueKey, fetchedKey)", span="74-75"];
m25_24 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="jobId == null", span="78-78"];
m25_27 [cluster="HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="49-49"];
m25_35 [cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107"];
m25_36 [cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RedisConnection.cs", label="return Redis.AcquireLock(RedisStorage.Prefix + resource, timeout);", span="109-109"];
m25_37 [cluster="HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.AcquireDistributedLock(string, System.TimeSpan)", span="107-107"];
m25_58 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m25_98 [cluster="HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RedisConnection.cs", label="Entry HangFire.Storage.InvocationData.InvocationData(string, string, string, string)", span="24-24"];
m25_131 [cluster="Unk.GetAllItemsFromSortedSet", file="RedisConnection.cs", label="Entry Unk.GetAllItemsFromSortedSet", span=""];
m25_50 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="136-138"];
m25_39 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112"];
m25_40 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="var jobId = Guid.NewGuid().ToString()", span="118-118"];
m25_41 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="var invocationData = InvocationData.Serialize(job)", span="120-120"];
m25_42 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="var storedParameters = new Dictionary<string, string>(parameters)", span="123-123"];
m25_49 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters))", span="132-134"];
m25_52 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="return jobId;", span="144-144"];
m25_43 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="storedParameters.Add(''Type'', invocationData.Type)", span="124-124"];
m25_44 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="storedParameters.Add(''Method'', invocationData.Method)", span="125-125"];
m25_45 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="storedParameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="126-126"];
m25_46 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="storedParameters.Add(''Arguments'', invocationData.Arguments)", span="127-127"];
m25_48 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="var transaction = Redis.CreateTransaction()", span="130-130"];
m25_51 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="transaction.Commit()", span="141-141"];
m25_53 [cluster="HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="112-112"];
m25_64 [cluster="Unk.SetRangeInHash", file="RedisConnection.cs", label="Entry Unk.SetRangeInHash", span=""];
m25_133 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248"];
m25_134 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisConnection.cs", label="return Redis.GetRangeFromSortedSetByLowestScore(\r\n                RedisStorage.Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="250-252"];
m25_135 [cluster="HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="248-248"];
m25_226 [cluster="Unk.FromNullableStringTimestamp", file="RedisConnection.cs", label="Entry Unk.FromNullableStringTimestamp", span=""];
m25_96 [cluster="Unk.GetAllEntriesFromHash", file="RedisConnection.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m25_102 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204"];
m25_103 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="jobId == null", span="206-206"];
m25_105 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="var entries = Redis.GetAllEntriesFromHash(\r\n                RedisStorage.Prefix + String.Format(''job:{0}:state'', jobId))", span="208-209"];
m25_104 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="throw new ArgumentNullException(''jobId'');", span="206-206"];
m25_106 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="entries.Count == 0", span="211-211"];
m25_108 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="var stateData = new Dictionary<string, string>(entries)", span="213-213"];
m25_111 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="return new StateData\r\n            {\r\n                Name = entries[''State''],\r\n                Reason = entries.ContainsKey(''Reason'') ? entries[''Reason''] : null,\r\n                Data = stateData\r\n            };", span="217-222"];
m25_107 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="return null;", span="211-211"];
m25_109 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="stateData.Remove(''State'')", span="214-214"];
m25_110 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="stateData.Remove(''Reason'')", span="215-215"];
m25_112 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetStateData(string)", span="204-204"];
m25_114 [cluster="Dictionary<string, string>.cstr", file="RedisConnection.cs", label="Entry Dictionary<string, string>.cstr", span=""];
m25_225 [cluster="Unk.FromStringTimestamp", file="RedisConnection.cs", label="Entry Unk.FromStringTimestamp", span=""];
m25_11 [cluster="Unk.CreateTransaction", file="RedisConnection.cs", label="Entry Unk.CreateTransaction", span=""];
m25_33 [cluster="Unk.SetEntryInHash", file="RedisConnection.cs", label="Entry Unk.SetEntryInHash", span=""];
m25_130 [cluster="HangFire.Redis.RedisStorage.GetRedisKey(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisStorage.GetRedisKey(string)", span="107-107"];
m25_163 [cluster="Unk.AddItemToSet", file="RedisConnection.cs", label="Entry Unk.AddItemToSet", span=""];
m25_193 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328"];
m25_194 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var serverNames = Redis.GetAllItemsFromSet(RedisStorage.Prefix + ''servers'')", span="330-330"];
m25_205 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="utcNow > maxTime.Add(timeOut)", span="361-361"];
m25_195 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="331-331"];
m25_198 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label=serverNames, span="337-337"];
m25_196 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var utcNow = DateTime.UtcNow", span="333-333"];
m25_203 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label=heartbeats, span="356-356"];
m25_197 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var pipeline = Redis.CreatePipeline()", span="335-335"];
m25_201 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="pipeline.Flush()", span="352-352"];
m25_199 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var name = serverName", span="339-339"];
m25_202 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var removedServerCount = 0", span="355-355"];
m25_207 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="removedServerCount++", span="364-364"];
m25_208 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="return removedServerCount;", span="368-368"];
m25_204 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="358-359"];
m25_206 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="RemoveServer(Redis, heartbeat.Key)", span="363-363"];
m25_209 [cluster="HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveTimedOutServers(System.TimeSpan)", span="328-328"];
m25_29 [cluster="string.Format(string, object)", file="RedisConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m25_30 [cluster="Unk.BlockingPopAndPushItemBetweenLists", file="RedisConnection.cs", label="Entry Unk.BlockingPopAndPushItemBetweenLists", span=""];
m25_190 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320"];
m25_192 [cluster="HangFire.Redis.RedisConnection.Heartbeat(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.Heartbeat(string)", span="320-320"];
m25_189 [cluster="Unk.RemoveEntry", file="RedisConnection.cs", label="Entry Unk.RemoveEntry", span=""];
m25_179 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId)))", span="312-314"];
m25_176 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304"];
m25_177 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="var transaction = redis.CreateTransaction()", span="306-306"];
m25_178 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId))", span="308-310"];
m25_180 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="transaction.Commit()", span="316-316"];
m25_181 [cluster="HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(IRedisClient, string)", span="304-304"];
m25_7 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44"];
m25_8 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs", label="return new RedisWriteOnlyTransaction(Redis.CreateTransaction());", span="46-46"];
m25_9 [cluster="HangFire.Redis.RedisConnection.CreateWriteTransaction()", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.CreateWriteTransaction()", span="44-44"];
m25_101 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="RedisConnection.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="60-60"];
m25_120 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233"];
m25_121 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs", label="return Redis.GetValueFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name);", span="235-237"];
m25_122 [cluster="HangFire.Redis.RedisConnection.GetJobParameter(string, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetJobParameter(string, string)", span="233-233"];
m25_68 [cluster="Unk.ExpireEntryIn", file="RedisConnection.cs", label="Entry Unk.ExpireEntryIn", span=""];
m25_55 [cluster="System.Guid.ToString()", file="RedisConnection.cs", label="Entry System.Guid.ToString()", span="0-0"];
m25_138 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255"];
m25_139 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs", label="key == null", span="257-257"];
m25_141 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs", label="keyValuePairs == null", span="258-258"];
m25_143 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs", label="Redis.SetRangeInHash(RedisStorage.GetRedisKey(key), keyValuePairs)", span="260-260"];
m25_140 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs", label="throw new ArgumentNullException(''key'');", span="257-257"];
m25_142 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="258-258"];
m25_144 [cluster="HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="255-255"];
m25_212 [cluster="Unk.Flush", file="RedisConnection.cs", label="Entry Unk.Flush", span=""];
m25_28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="RedisConnection.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m25_10 [cluster="RedisWriteOnlyTransaction.cstr", file="RedisConnection.cs", label="Entry RedisWriteOnlyTransaction.cstr", span=""];
m25_227 [cluster="Unk.Add", file="RedisConnection.cs", label="Entry Unk.Add", span=""];
m25_215 [cluster="System.DateTime.Add(System.TimeSpan)", file="RedisConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m25_116 [cluster="HangFire.Storage.StateData.StateData()", file="RedisConnection.cs", label="Entry HangFire.Storage.StateData.StateData()", span="21-21"];
m25_151 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272"];
m25_152 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="var transaction = Redis.CreateTransaction()", span="274-274"];
m25_153 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId))", span="276-277"];
m25_155 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="context.Queues", span="287-287"];
m25_157 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1))", span="290-292"];
m25_158 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="transaction.Commit()", span="295-295"];
m25_156 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="var queue1 = queue", span="289-289"];
m25_159 [cluster="HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="272-272"];
m25_167 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m25_224 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="RedisConnection.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m25_34 [cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(IRedisClient, string, string)", span="30-30"];
m25_57 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RedisConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m25_172 [cluster="Unk.AddItemToList", file="RedisConnection.cs", label="Entry Unk.AddItemToList", span=""];
m25_6 [cluster="Unk.Dispose", file="RedisConnection.cs", label="Entry Unk.Dispose", span=""];
m25_185 [cluster="Unk.RemoveItemFromSet", file="RedisConnection.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m25_213 [cluster="System.DateTime.DateTime(long)", file="RedisConnection.cs", label="Entry System.DateTime.DateTime(long)", span="0-0"];
m25_173 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299"];
m25_174 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="RemoveServer(Redis, serverId)", span="301-301"];
m25_175 [cluster="HangFire.Redis.RedisConnection.RemoveServer(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RemoveServer(string)", span="299-299"];
m25_214 [cluster="System.Math.Max(long, long)", file="RedisConnection.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m25_69 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147"];
m25_70 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="var storedData = Redis.GetAllEntriesFromHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id))", span="149-150"];
m25_71 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.Count == 0", span="152-152"];
m25_78 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.ContainsKey(''Type'')", span="160-160"];
m25_79 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="type = storedData[''Type'']", span="162-162"];
m25_80 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.ContainsKey(''Method'')", span="164-164"];
m25_81 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="method = storedData[''Method'']", span="166-166"];
m25_82 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.ContainsKey(''ParameterTypes'')", span="168-168"];
m25_83 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="parameterTypes = storedData[''ParameterTypes'']", span="170-170"];
m25_84 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.ContainsKey(''Arguments'')", span="172-172"];
m25_85 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="arguments = storedData[''Arguments'']", span="174-174"];
m25_86 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="storedData.ContainsKey(''CreatedAt'')", span="176-176"];
m25_87 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="createdAt = storedData[''CreatedAt'']", span="178-178"];
m25_72 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="return null;", span="152-152"];
m25_73 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="string type = null", span="154-154"];
m25_74 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="string method = null", span="155-155"];
m25_90 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="var invocationData = new InvocationData(type, method, parameterTypes, arguments)", span="184-184"];
m25_75 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="string parameterTypes = null", span="156-156"];
m25_76 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="string arguments = null", span="157-157"];
m25_77 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="string createdAt = null", span="158-158"];
m25_88 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="Job job = null", span="181-181"];
m25_89 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="JobLoadException loadException = null", span="182-182"];
m25_91 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="job = invocationData.Deserialize()", span="188-188"];
m25_92 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label=JobLoadException, span="190-190"];
m25_93 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="loadException = ex", span="192-192"];
m25_95 [cluster="HangFire.Redis.RedisConnection.GetJobData(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetJobData(string)", span="147-147"];
m25_221 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="345-349"];
m25_66 [cluster="lambda expression", file="RedisConnection.cs", label="x.ExpireEntryIn(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="136-138"];
m25_62 [cluster="lambda expression", file="RedisConnection.cs", label="x.SetRangeInHash(\r\n                    String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                    storedParameters)", span="132-134"];
m25_61 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="132-134"];
m25_65 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="136-138"];
m25_63 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="132-134"];
m25_67 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="136-138"];
m25_161 [cluster="lambda expression", file="RedisConnection.cs", label="x.AddItemToSet(\r\n                    RedisStorage.Prefix + ''servers'', serverId)", span="276-277"];
m25_170 [cluster="lambda expression", file="RedisConnection.cs", label="x.AddItemToList(\r\n                        String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId),\r\n                        queue1)", span="290-292"];
m25_160 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="276-277"];
m25_164 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="279-285"];
m25_169 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="290-292"];
m25_162 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="276-277"];
m25_166 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="279-285"];
m25_171 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="290-292"];
m25_183 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveItemFromSet(\r\n                    RedisStorage.Prefix + ''servers'',\r\n                    serverId)", span="308-310"];
m25_187 [cluster="lambda expression", file="RedisConnection.cs", label="x.RemoveEntry(\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}'', serverId),\r\n                    String.Format(RedisStorage.Prefix + ''server:{0}:queues'', serverId))", span="312-314"];
m25_182 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="308-310"];
m25_186 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="312-314"];
m25_184 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="308-310"];
m25_188 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="312-314"];
m25_217 [cluster="lambda expression", file="RedisConnection.cs", label="x.GetValuesFromHash(\r\n                            String.Format(RedisStorage.Prefix + ''server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="342-344"];
m25_216 [cluster="lambda expression", file="RedisConnection.cs", label="Entry lambda expression", span="342-344"];
m25_218 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="342-344"];
m25_223 [cluster="lambda expression", file="RedisConnection.cs", label="Exit lambda expression", span="345-349"];
m25_0 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32"];
m25_1 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnection.cs", label="Redis = redis", span="34-34"];
m25_2 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="32-32"];
m25_32 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RedisConnection.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m25_137 [cluster="Unk.FirstOrDefault", file="RedisConnection.cs", label="Entry Unk.FirstOrDefault", span=""];
m25_145 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263"];
m25_146 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs", label="key == null", span="265-265"];
m25_148 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs", label="var result = Redis.GetAllEntriesFromHash(RedisStorage.GetRedisKey(key))", span="267-267"];
m25_147 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs", label="throw new ArgumentNullException(''key'');", span="265-265"];
m25_149 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs", label="return result.Count != 0 ? result : null;", span="269-269"];
m25_150 [cluster="HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetAllEntriesFromHash(string)", span="263-263"];
m25_211 [cluster="Unk.CreatePipeline", file="RedisConnection.cs", label="Entry Unk.CreatePipeline", span=""];
m25_118 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs", label="Redis.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="227-230"];
m25_117 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225"];
m25_119 [cluster="HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.SetJobParameter(string, string, string)", span="225-225"];
m25_54 [cluster="System.Guid.NewGuid()", file="RedisConnection.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m25_123 [cluster="Unk.GetValueFromHash", file="RedisConnection.cs", label="Entry Unk.GetValueFromHash", span=""];
m25_60 [cluster="Unk.Commit", file="RedisConnection.cs", label="Entry Unk.Commit", span=""];
m25_210 [cluster="Unk.GetAllItemsFromSet", file="RedisConnection.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m25_124 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs", label="Entry HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240"];
m25_125 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs", label="key == null", span="242-242"];
m25_127 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs", label="var result = Redis.GetAllItemsFromSortedSet(RedisStorage.GetRedisKey(key))", span="244-244"];
m25_126 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs", label="throw new ArgumentNullException(''key'');", span="242-242"];
m25_128 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs", label="return new HashSet<string>(result);", span="245-245"];
m25_129 [cluster="HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", file="RedisConnection.cs", label="Exit HangFire.Redis.RedisConnection.GetAllItemsFromSet(string)", span="240-240"];
m25_100 [cluster="HangFire.Storage.JobData.JobData()", file="RedisConnection.cs", label="Entry HangFire.Storage.JobData.JobData()", span="21-21"];
m25_99 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="RedisConnection.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m25_219 [cluster="Unk.Format", file="RedisConnection.cs", label="Entry Unk.Format", span=""];
m25_220 [cluster="Unk.GetValuesFromHash", file="RedisConnection.cs", label="Entry Unk.GetValuesFromHash", span=""];
m25_132 [cluster="HashSet<string>.cstr", file="RedisConnection.cs", label="Entry HashSet<string>.cstr", span=""];
m25_59 [cluster="Unk.QueueCommand", file="RedisConnection.cs", label="Entry Unk.QueueCommand", span=""];
m25_136 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RedisConnection.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m25_31 [cluster="Unk.PopAndPushItemBetweenLists", file="RedisConnection.cs", label="Entry Unk.PopAndPushItemBetweenLists", span=""];
m25_115 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RedisConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m25_38 [cluster="Unk.AcquireLock", file="RedisConnection.cs", label="Entry Unk.AcquireLock", span=""];
m25_56 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="RedisConnection.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m25_97 [cluster="Unk.ContainsKey", file="RedisConnection.cs", label="Entry Unk.ContainsKey", span=""];
m25_228 [file="RedisConnection.cs", label="HangFire.Redis.RedisConnection", span=""];
m25_229 [file="RedisConnection.cs", label=jobId, span=""];
m25_230 [file="RedisConnection.cs", label=storedParameters, span=""];
m25_231 [file="RedisConnection.cs", label="System.TimeSpan", span=""];
m25_232 [file="RedisConnection.cs", label=string, span=""];
m25_233 [file="RedisConnection.cs", label="HangFire.Server.ServerContext", span=""];
m25_234 [file="RedisConnection.cs", label=queue1, span=""];
m25_235 [file="RedisConnection.cs", label=string, span=""];
m25_236 [file="RedisConnection.cs", label=name, span=""];
m25_237 [file="RedisConnection.cs", label=heartbeats, span=""];
m27_0 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m27_1 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="transaction == null", span="27-27"];
m27_3 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="Transaction = transaction", span="29-29"];
m27_2 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="throw new ArgumentNullException(''transaction'');", span="27-27"];
m27_4 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m27_6 [file="RedisWriteOnlyTransaction.cs", label="HangFire.Common.States.StateApplyingContext", span=""];
m28_62 [cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33"];
m28_57 [cluster="Unk.TryParse", file="ScheduledJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m28_55 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m28_63 [cluster="HangFire.Web.RazorPage.Write(object)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m28_58 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m28_56 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m28_0 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m28_1 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n'')", span="51-51"];
m28_2 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62"];
m28_3 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="int from, perPage", span="64-64"];
m28_4 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66"];
m28_5 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67"];
m28_7 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Pager pager = new Pager(from, perPage, monitor.ScheduledCount())\n    {\n        BasePageUrl = Request.LinkTo(''/scheduled'')\n    }", span="70-73"];
m28_6 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="69-69"];
m28_8 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="JobList<ScheduledJobDto> scheduledJobs = monitor.ScheduledJobs(pager.FromRecord, pager.RecordsPerPage)", span="75-75"];
m28_10 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="pager.TotalPageCount == 0", span="86-86"];
m28_17 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="146-146"];
m28_53 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="378-378"];
m28_9 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n'')", span="81-81"];
m28_19 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label=scheduledJobs, span="171-171"];
m28_11 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        There are no scheduled jobs.\n    </div'' +\r\n''>\n'')", span="92-93"];
m28_12 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="105-107"];
m28_13 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/scheduled/enqueue''))", span="112-112"];
m28_14 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-play''''></span>\n                Enqueue now\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="117-124"];
m28_15 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/scheduled/delete''))", span="129-129"];
m28_16 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="134-141"];
m28_18 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th>Enqueue</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Scheduled</th>\n                </tr>\n            </thead>\n'')", span="151-166"];
m28_20 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                <tr class=\''js-jobs-list-row '')", span="177-177"];
m28_52 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''        </table>\n    </div>\n'')", span="366-366"];
m28_21 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="182-182"];
m28_22 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral('' '')", span="187-187"];
m28_23 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Value.InScheduledState ? ''hover'' : null)", span="192-192"];
m28_24 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\n                    <td>\n'')", span="197-197"];
m28_25 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="job.Value.InScheduledState", span="202-202"];
m28_26 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                            <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' '' +\r\n''name=\''jobs[]\'' value=\'''')", span="208-209"];
m28_29 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                    </td>\n                    <td class=\''min-width\''>\n            '' +\r\n''            <a href=\'''')", span="229-230"];
m28_27 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Key)", span="214-214"];
m28_30 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="235-235"];
m28_28 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\'' />\n'')", span="219-219"];
m28_31 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\n                            '')", span="240-240"];
m28_32 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="245-245"];
m28_33 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n                        </a>\n'')", span="250-250"];
m28_34 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="!job.Value.InScheduledState", span="255-255"];
m28_35 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="261-262"];
m28_36 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                    </td>\n                    <td class=\''min-width\''>\n            '' +\r\n''            <span data-moment=\'''')", span="272-273"];
m28_38 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\n                            '')", span="283-283"];
m28_39 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Value.EnqueueAt)", span="288-288"];
m28_40 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n                        </span>\n                    </td>\n                    <t'' +\r\n''d>\n                        <a class=\''job-method\'' href=\'''')", span="293-294"];
m28_41 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="299-299"];
m28_42 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\n                            '')", span="304-304"];
m28_43 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="309-309"];
m28_44 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n                        </a>\n                    </td>\n                    <td c'' +\r\n''lass=\''align-right\''>\n'')", span="314-315"];
m28_45 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="job.Value.ScheduledAt != null", span="320-320"];
m28_46 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="326-326"];
m28_51 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="356-356"];
m28_48 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\''>\n                                '')", span="336-336"];
m28_49 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Write(job.Value.ScheduledAt)", span="341-341"];
m28_50 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="WriteLiteral(''\n                            </span>\n'')", span="346-346"];
m28_54 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m28_64 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m28_66 [cluster="Unk.Write", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m28_61 [cluster="HttpRequestBase.LinkTo(string)", file="ScheduledJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m28_69 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m28_70 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m28_60 [cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38"];
m28_65 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m28_68 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m28_59 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m28_67 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m28_71 [file="ScheduledJobsPage.generated.cs", label="HangFire.Web.Pages.ScheduledJobsPage", span=""];
m29_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ScheduledState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m29_2 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m29_3 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="EnqueueAt = enqueueAt", span="34-34"];
m29_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="ScheduledAt = DateTime.UtcNow", span="35-35"];
m29_5 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m29_25 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m29_11 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="57-57"];
m29_12 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="var scheduledState = context.NewState as ScheduledState", span="59-59"];
m29_16 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="68-68"];
m29_13 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="scheduledState == null", span="60-60"];
m29_15 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="var timestamp = JobHelper.ToTimestamp(scheduledState.EnqueueAt)", span="67-67"];
m29_14 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Scheduled state.'',\r\n                        typeof(Handler).FullName));", span="62-64"];
m29_17 [cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="57-57"];
m29_20 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ScheduledState.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m29_0 [cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m29_1 [cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27"];
m29_6 [cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m29_7 [cluster="HangFire.States.ScheduledState.SerializeData()", color=green, community=0, file="ScheduledState.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueueAt'', JobHelper.SerializeDateTime(EnqueueAt) },\r\n                { ''ScheduledAt'', JobHelper.SerializeDateTime(ScheduledAt) }\r\n            };", prediction=36, span="48-52"];
m29_8 [cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m29_22 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="71-71"];
m29_23 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="transaction.RemoveFromSet(''schedule'', context.JobId)", span="73-73"];
m29_24 [cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs", label="Exit HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="71-71"];
m29_21 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ScheduledState.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="42-42"];
m29_19 [cluster="string.Format(string, object)", file="ScheduledState.cs", label="Entry string.Format(string, object)", span="0-0"];
m29_10 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ScheduledState.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m29_26 [file="ScheduledState.cs", label="HangFire.States.ScheduledState", span=""];
m30_11 [cluster="System.DateTime.DateTime(int, int, int)", file="ScheduledStateFacts.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m30_4 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32"];
m30_6 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m30_9 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Assert.Equal(date, state.EnqueueAt)", span="22-22"];
m30_8 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(date)", span="21-21"];
m30_7 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="var date = new DateTime(2012, 12, 12)", span="20-20"];
m30_10 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m30_0 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11"];
m30_2 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Assert.Equal(ScheduledState.StateName, state.Name)", span="14-14"];
m30_1 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="13-13"];
m30_3 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.StateName_IsCorrect()", span="11-11"];
m30_35 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m30_36 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="55-55"];
m30_37 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Assert.False(state.IgnoreJobLoadException)", span="56-56"];
m30_38 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m30_34 [cluster="Unk.False", file="ScheduledStateFacts.cs", label="Entry Unk.False", span=""];
m30_5 [cluster="Unk.Equal", file="ScheduledStateFacts.cs", label="Entry Unk.Equal", span=""];
m30_28 [cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledStateFacts.cs", label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m30_30 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m30_31 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="47-47"];
m30_32 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Assert.False(state.IsFinal)", span="49-49"];
m30_33 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m30_22 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m30_25 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="ScheduledStateFacts.cs", label="Assert.Equal(JobHelper.SerializeDateTime(state.EnqueueAt), data[''EnqueueAt''])", prediction=37, span="40-40"];
m30_23 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="var state = new ScheduledState(new DateTime(2012, 12, 12))", span="36-36"];
m30_24 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="var data = state.SerializeData()", span="38-38"];
m30_26 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="ScheduledStateFacts.cs", label="Assert.Equal(JobHelper.SerializeDateTime(state.ScheduledAt), data[''ScheduledAt''])", prediction=37, span="41-41"];
m30_27 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="ScheduledStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m30_29 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="ScheduledStateFacts.cs", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
m31_35 [cluster="HangFire.Web.RazorPage.Write(object)", file="ServersPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m31_30 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServersPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m31_33 [cluster="HangFire.Storage.IMonitoringApi.Servers()", file="ServersPage.generated.cs", label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25"];
m31_0 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m31_1 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''\n'')", span="61-61"];
m31_2 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Layout = new LayoutPage { Title = ''Servers'' }", span="74-74"];
m31_3 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="76-76"];
m31_4 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="IList<ServerDto> servers = monitor.Servers()", span="77-77"];
m31_5 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''\n'')", span="83-83"];
m31_6 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="servers.Count == 0", span="88-88"];
m31_9 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label=servers, span="123-123"];
m31_7 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\n        There are no active servers. Backgr'' +\r\n''ound tasks will not be processed.\n    </div>\n'')", span="94-95"];
m31_8 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(@''    <table class=''''table''''>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Workers</th>\n                <th>Queues</th>\n                <th>Started</th>\n                <th>Heartbeat</th>\n            </tr>\n        </thead>\n        <tbody>\n'')", span="107-118"];
m31_10 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''                <tr>\n                    <td>'')", span="129-129"];
m31_28 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''        </tbody>\n    </table>\n'')", span="230-230"];
m31_11 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Write(server.Name.ToUpperInvariant())", span="134-134"];
m31_13 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Write(server.WorkersCount)", span="144-144"];
m31_15 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="154-154"];
m31_17 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="Write(JobHelper.ToTimestamp(server.StartedAt))", prediction=39, span="164-164"];
m31_19 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="Write(server.StartedAt)", prediction=39, span="174-174"];
m31_21 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="server.Heartbeat.HasValue", span="184-184"];
m31_23 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="ServersPage.generated.cs", label="Write(JobHelper.ToTimestamp(server.Heartbeat.Value))", prediction=39, span="195-195"];
m31_25 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Write(server.Heartbeat)", span="205-205"];
m31_12 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''</td>\n                    <td>'')", span="139-139"];
m31_14 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''</td>\n                    <td>'')", span="149-149"];
m31_16 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''</td>\n                    <td data-moment=\'''')", span="159-159"];
m31_18 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''\''>'')", span="169-169"];
m31_20 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''</td>\n                    <td>\n'')", span="179-179"];
m31_22 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="190-190"];
m31_27 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''                    </td>\n                </tr>\n'')", span="220-220"];
m31_24 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''\''>\n                                '')", span="200-200"];
m31_26 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="WriteLiteral(''\n                            </span>\n'')", span="210-210"];
m31_29 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="ServersPage.generated.cs", label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m31_38 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="ServersPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="40-40"];
m31_32 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServersPage.generated.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m31_40 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServersPage.generated.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m31_34 [cluster="string.ToUpperInvariant()", file="ServersPage.generated.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m31_31 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServersPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m31_37 [cluster="Unk.Join", file="ServersPage.generated.cs", label="Entry Unk.Join", span=""];
m31_39 [cluster="Unk.Write", file="ServersPage.generated.cs", label="Entry Unk.Write", span=""];
m31_36 [cluster="Unk.Select", file="ServersPage.generated.cs", label="Entry Unk.Select", span=""];
m31_41 [file="ServersPage.generated.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m32_150 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="277-277"];
m32_151 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="serverId == null", span="279-279"];
m32_153 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="context == null", span="280-280"];
m32_155 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="282-287"];
m32_156 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="289-295"];
m32_152 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''serverId'');", span="279-279"];
m32_154 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''context'');", span="280-280"];
m32_157 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="277-277"];
m32_102 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="209-209"];
m32_103 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="id == null", span="211-211"];
m32_105 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="name == null", span="212-212"];
m32_107 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="214-217"];
m32_104 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="211-211"];
m32_106 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''name'');", span="212-212"];
m32_108 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="209-209"];
m32_124 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="242-242"];
m32_125 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="key == null", span="244-244"];
m32_127 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="keyValuePairs == null", span="245-245"];
m32_131 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label=keyValuePairs, span="256-256"];
m32_132 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="_connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value })", span="258-258"];
m32_126 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="244-244"];
m32_128 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="245-245"];
m32_129 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="string sql = @''\r\nmerge HangFire.Hash as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="247-252"];
m32_130 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="var transaction = new TransactionScope()", span="254-254"];
m32_133 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="transaction.Complete()", span="261-261"];
m32_134 [cluster="HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="242-242"];
m32_158 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m32_85 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetStateData(string)", span="171-171"];
m32_86 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="jobId == null", span="173-173"];
m32_89 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="var sqlState = _connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault()", span="181-181"];
m32_87 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''jobId'');", span="173-173"];
m32_88 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="string sql = @''\r\nselect s.Name, s.Reason, s.Data\r\nfrom HangFire.State s\r\ninner join HangFire.Job j on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="175-179"];
m32_90 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="sqlState == null", span="182-182"];
m32_92 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="return new StateData\r\n            {\r\n                Name = sqlState.Name,\r\n                Reason = sqlState.Reason,\r\n                Data = JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data)\r\n            };", span="187-192"];
m32_91 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="return null;", span="184-184"];
m32_93 [cluster="HangFire.SqlServer.SqlServerConnection.GetStateData(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetStateData(string)", span="171-171"];
m32_143 [cluster="Unk.ToDictionary", file="SqlServerConnection.cs", label="Entry Unk.ToDictionary", span=""];
m32_21 [cluster="string.Format(string, object)", file="SqlServerConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m32_17 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="56-56"];
m32_18 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:{0}'', resource),\r\n                timeout,\r\n                _connection);", span="58-61"];
m32_19 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="56-56"];
m32_176 [cluster="System.TimeSpan.Negate()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m32_62 [cluster="Unk.>", file="SqlServerConnection.cs", label="Entry Unk.>", span=""];
m32_66 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="134-134"];
m32_67 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="id == null", span="136-136"];
m32_70 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="141-142"];
m32_68 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="136-136"];
m32_71 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="jobData == null", span="144-144"];
m32_73 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="147-147"];
m32_74 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="invocationData.Arguments = jobData.Arguments", span="148-148"];
m32_80 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                CreatedAt = jobData.CreatedAt,\r\n                LoadException = loadException\r\n            };", span="162-168"];
m32_72 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="return null;", span="144-144"];
m32_77 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="job = invocationData.Deserialize()", span="155-155"];
m32_75 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Job job = null", span="150-150"];
m32_76 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="JobLoadException loadException = null", span="151-151"];
m32_78 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label=JobLoadException, span="157-157"];
m32_79 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="loadException = ex", span="159-159"];
m32_81 [cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="134-134"];
m32_13 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="51-51"];
m32_14 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="return new SqlServerWriteOnlyTransaction(_connection, _queueProviders);", span="53-53"];
m32_15 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="51-51"];
m32_16 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m32_123 [cluster="System.ArgumentException.ArgumentException(string)", file="SqlServerConnection.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m32_35 [cluster="string.Join(string, params string[])", file="SqlServerConnection.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m32_135 [cluster="TransactionScope.cstr", file="SqlServerConnection.cs", label="Entry TransactionScope.cstr", span=""];
m32_33 [cluster="Unk.ToArray", file="SqlServerConnection.cs", label="Entry Unk.ToArray", span=""];
m32_34 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SqlServerConnection.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m32_20 [cluster="SqlServerDistributedLock.cstr", file="SqlServerConnection.cs", label="Entry SqlServerDistributedLock.cstr", span=""];
m32_64 [cluster="Unk.ToString", file="SqlServerConnection.cs", label="Entry Unk.ToString", span=""];
m32_61 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m32_136 [cluster="Unk.Complete", file="SqlServerConnection.cs", label="Entry Unk.Complete", span=""];
m32_94 [cluster="HangFire.Storage.StateData.StateData()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.StateData.StateData()", span="21-21"];
m32_22 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="64-64"];
m32_23 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="queues == null || queues.Length == 0", span="66-66"];
m32_25 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var providers = queues\r\n                .Select(queue => _queueProviders.GetProvider(queue))\r\n                .Distinct()\r\n                .ToArray()", span="68-71"];
m32_27 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="throw new InvalidOperationException(String.Format(\r\n                    ''Multiple provider instances registered for queues: {0}. You should choose only one type of persistent queues per server instance.'',\r\n                    String.Join('', '', queues)));", span="75-77"];
m32_29 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="return persistentQueue.Dequeue(queues, cancellationToken);", span="81-81"];
m32_24 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''queues'');", span="66-66"];
m32_26 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="providers.Length != 1", span="73-73"];
m32_28 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="var persistentQueue = providers[0].GetJobQueue(_connection)", span="80-80"];
m32_30 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="64-64"];
m32_169 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="316-316"];
m32_170 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="timeOut.Duration() != timeOut", span="318-318"];
m32_171 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="320-320"];
m32_172 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="323-325"];
m32_173 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="316-316"];
m32_12 [cluster="Unk.Dispose", file="SqlServerConnection.cs", label="Entry Unk.Dispose", span=""];
m32_109 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="220-220"];
m32_110 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="key == null", span="222-222"];
m32_112 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="var result = _connection.Query<string>(\r\n                @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                new { key })", span="224-226"];
m32_111 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="222-222"];
m32_113 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="return new HashSet<string>(result);", span="228-228"];
m32_114 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="220-220"];
m32_174 [cluster="System.TimeSpan.Duration()", file="SqlServerConnection.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m32_41 [cluster="HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m32_42 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84"];
m32_43 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="job == null", span="90-90"];
m32_45 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters == null", span="91-91"];
m32_48 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="var invocationData = InvocationData.Serialize(job)", span="98-98"];
m32_49 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = createdAt,\r\n                    expireAt = createdAt.Add(expireIn)\r\n                }).Single().ToString()", span="100-108"];
m32_50 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="parameters.Count > 0", span="110-110"];
m32_51 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="var parameterArray = new object[parameters.Count]", span="112-112"];
m32_53 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label=parameters, span="114-114"];
m32_44 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''job'');", span="90-90"];
m32_46 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''parameters'');", span="91-91"];
m32_47 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="93-96"];
m32_54 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="116-121"];
m32_57 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="return jobId;", span="131-131"];
m32_52 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="int parameterIndex = 0", span="113-113"];
m32_56 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="128-128"];
m32_55 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="124-126"];
m32_58 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="84-84"];
m32_9 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="46-46"];
m32_10 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="_connection.Dispose()", span="48-48"];
m32_11 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="46-46"];
m32_37 [cluster="Unk.Dequeue", file="SqlServerConnection.cs", label="Entry Unk.Dequeue", span=""];
m32_32 [cluster="Unk.Distinct", file="SqlServerConnection.cs", label="Entry Unk.Distinct", span=""];
m32_147 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="272-272"];
m32_38 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="69-69"];
m32_39 [cluster="lambda expression", file="SqlServerConnection.cs", label="_queueProviders.GetProvider(queue)", span="69-69"];
m32_40 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="69-69"];
m32_144 [cluster="lambda expression", file="SqlServerConnection.cs", label="Entry lambda expression", span="272-272"];
m32_145 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Field", span="272-272"];
m32_146 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="272-272"];
m32_148 [cluster="lambda expression", file="SqlServerConnection.cs", label="x.Value", span="272-272"];
m32_149 [cluster="lambda expression", file="SqlServerConnection.cs", label="Exit lambda expression", span="272-272"];
m32_95 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195"];
m32_96 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="id == null", span="197-197"];
m32_98 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="name == null", span="198-198"];
m32_100 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="200-206"];
m32_97 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''id'');", span="197-197"];
m32_99 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''name'');", span="198-198"];
m32_101 [cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="195-195"];
m32_31 [cluster="Unk.Select", file="SqlServerConnection.cs", label="Entry Unk.Select", span=""];
m32_116 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="231-231"];
m32_117 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="key == null", span="233-233"];
m32_119 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="toScore < fromScore", span="234-234"];
m32_121 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="236-239"];
m32_118 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="233-233"];
m32_120 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="234-234"];
m32_122 [cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="231-231"];
m32_60 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerConnection.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m32_63 [cluster="Unk.Single", file="SqlServerConnection.cs", label="Entry Unk.Single", span=""];
m32_175 [cluster="System.ArgumentException.ArgumentException(string, string)", file="SqlServerConnection.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m32_84 [cluster="HangFire.Storage.JobData.JobData()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.JobData.JobData()", span="21-21"];
m32_65 [cluster="Unk.Execute", file="SqlServerConnection.cs", label="Entry Unk.Execute", span=""];
m32_83 [cluster="HangFire.Storage.InvocationData.Deserialize()", file="SqlServerConnection.cs", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
m32_36 [cluster="Unk.GetJobQueue", file="SqlServerConnection.cs", label="Entry Unk.GetJobQueue", span=""];
m32_137 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="265-265"];
m32_138 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="key == null", span="267-267"];
m32_140 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="var result = _connection.Query<SqlHash>(\r\n                ''select Field, Value from HangFire.Hash where [Key] = @key'',\r\n                new { key })\r\n                .ToDictionary(x => x.Field, x => x.Value)", span="269-272"];
m32_139 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''key'');", span="267-267"];
m32_141 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="return result.Count != 0 ? result : null;", span="274-274"];
m32_142 [cluster="HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="265-265"];
m32_115 [cluster="HashSet<string>.cstr", file="SqlServerConnection.cs", label="Entry HashSet<string>.cstr", span=""];
m32_159 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="298-298"];
m32_160 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="serverId == null", span="300-300"];
m32_162 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="302-304"];
m32_161 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''serverId'');", span="300-300"];
m32_163 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="298-298"];
m32_164 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="307-307"];
m32_165 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="serverId == null", span="309-309"];
m32_167 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="311-313"];
m32_166 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''serverId'');", span="309-309"];
m32_168 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="307-307"];
m32_82 [cluster="Unk.SingleOrDefault", file="SqlServerConnection.cs", label="Entry Unk.SingleOrDefault", span=""];
m32_59 [cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="SqlServerConnection.cs", label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65"];
m32_0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m32_1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="connection == null", span="39-39"];
m32_3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="queueProviders == null", span="40-40"];
m32_5 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="_connection = connection", span="42-42"];
m32_6 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="_queueProviders = queueProviders", span="43-43"];
m32_2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''connection'');", span="39-39"];
m32_4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="throw new ArgumentNullException(''queueProviders'');", span="40-40"];
m32_7 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", file="SqlServerConnection.cs", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, HangFire.SqlServer.PersistentJobQueueProviderCollection)", span="35-35"];
m32_177 [file="SqlServerConnection.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m34_111 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175"];
m34_112 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SucceededState.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="177-177"];
m34_113 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SucceededState.cs", label="ThenItShouldBeEnqueuedToTheQueue(queue)", span="178-178"];
m34_114 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175"];
m34_42 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="SucceededState.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="113-113"];
m34_78 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="SucceededState.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="58-58"];
m34_103 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161"];
m34_104 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SucceededState.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="163-163"];
m34_105 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SucceededState.cs", label="ThenItShouldBeScheduledForTomorrow()", span="164-164"];
m34_106 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161"];
m34_76 [cluster="Unk.SortedSetContainsItem", file="SucceededState.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m34_39 [cluster="HangFire.Perform.Async(System.Type, object)", file="SucceededState.cs", label="Entry HangFire.Perform.Async(System.Type, object)", span="71-71"];
m34_54 [cluster="Unk.GetAllEntriesFromHash", file="SucceededState.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m34_57 [cluster="Unk.IsTrue", file="SucceededState.cs", label="Entry Unk.IsTrue", span=""];
m34_36 [cluster="HangFire.Perform.Async<TJob>()", file="SucceededState.cs", label="Entry HangFire.Perform.Async<TJob>()", span="24-24"];
m34_5 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="code.Equals(''Perform.Async<TestJob>(new { ArticleId = 3, Author = \''odinserj\'' })'')", span="27-27"];
m34_6 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", color=green, community=0, file="SucceededState.cs", label="_jobId = Perform.Async<TestJob>(new { ArticleId = 3, Author = ''odinserj'' })", prediction=42, span="29-29"];
m34_7 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="code.Equals(''Perform.Async(typeof(TestJob))'')", span="31-31"];
m34_18 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="_jobId = Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })", span="53-53"];
m34_53 [cluster="string.Format(string, object)", file="SucceededState.cs", label="Entry string.Format(string, object)", span="0-0"];
m34_9 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="code.Equals(''Perform.Async(null)'')", span="35-35"];
m34_35 [cluster="string.Equals(string)", file="SucceededState.cs", label="Entry string.Equals(string)", span="0-0"];
m34_80 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129"];
m34_81 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SucceededState.cs", label="Assert.IsNotNull(_exception)", span="131-131"];
m34_82 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SucceededState.cs", label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="132-132"];
m34_83 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129"];
m34_77 [cluster="Unk.GetItemScoreInSortedSet", file="SucceededState.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m34_37 [cluster="HangFire.Perform.Async<TJob>(object)", file="SucceededState.cs", label="Entry HangFire.Perform.Async<TJob>(object)", span="40-40"];
m34_55 [cluster="Unk.AreNotEqual", file="SucceededState.cs", label="Entry Unk.AreNotEqual", span=""];
m34_43 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="SucceededState.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="128-128"];
m34_59 [cluster="Unk.AreEqual", file="SucceededState.cs", label="Entry Unk.AreEqual", span=""];
m34_45 [cluster="Unk.Pending", file="SucceededState.cs", label="Entry Unk.Pending", span=""];
m34_44 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="SucceededState.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="144-144"];
m34_87 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136"];
m34_88 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="138-138"];
m34_90 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", span="140-140"];
m34_92 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs", label="DictionaryAssert.ContainsFollowingItems(table, args)", span="143-143"];
m34_89 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs", label="Assert.AreNotEqual(0, job.Count)", span="139-139"];
m34_91 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="142-142"];
m34_93 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136"];
m34_40 [cluster="System.TimeSpan.FromDays(double)", file="SucceededState.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m34_94 [cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="SucceededState.cs", label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m34_95 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147"];
m34_96 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SucceededState.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="149-149"];
m34_97 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SucceededState.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="150-150"];
m34_98 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147"];
m34_79 [cluster="System.DateTime.AddDays(double)", file="SucceededState.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m34_41 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="SucceededState.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="96-96"];
m34_46 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91"];
m34_47 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="93-93"];
m34_49 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", span="95-95"];
m34_48 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs", label="Assert.AreNotEqual(0, job.Count)", span="94-94"];
m34_50 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="97-97"];
m34_51 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs", label="Assert.AreEqual(0, args.Count)", span="98-98"];
m34_52 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91"];
m34_0 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.SucceededState(long, long)", span="28-28"];
m34_1 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs", label="Latency = latency", span="30-30"];
m34_8 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="_jobId = Perform.Async(typeof (TestJob))", span="33-33"];
m34_60 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102"];
m34_61 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="SucceededState.cs", label="ThenItShouldBeEnqueuedToTheQueue(QueueSteps.DefaultQueue)", span="104-104"];
m34_62 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102"];
m34_2 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs", label="PerformanceDuration = performanceDuration", span="31-31"];
m34_3 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs", label="SucceededAt = DateTime.UtcNow", span="32-32"];
m34_11 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="code.Equals(''Perform.Async(typeof(TestJob), new { ArticleId = 3 })'')", span="39-39"];
m34_13 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="code.Equals(''Perform.Async(null, new { ArticleId = 3 })'')", span="43-43"];
m34_15 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="62-62"];
m34_17 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="62-62"];
m34_19 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="HangFire.States.SucceededState", span=""];
m34_21 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="code.Equals(''Perform.In(TimeSpan.FromDays(1), typeof(TestJob), new { ArticleId = 3 })'')", span="59-59"];
m34_23 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="code.Equals(''Perform.Async<CriticalQueueJob>()'')", span="63-63"];
m34_25 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="code.Equals(''Perform.Async<InvalidQueueJob>()'')", span="67-67"];
m34_27 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="code.Equals(''Perform.Async<EmptyQueueJob>()'')", span="71-71"];
m34_4 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededState.cs", label="Exit HangFire.States.SucceededState.SucceededState(long, long)", span="28-28"];
m34_10 [cluster="long.ToString(System.IFormatProvider)", file="SucceededState.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m34_12 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="_jobId = Perform.Async(typeof (TestJob), new { ArticleId = 3 })", span="41-41"];
m34_14 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="_jobId = Perform.Async(null, new { ArticleId = 3 })", span="45-45"];
m34_20 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob))", span="57-57"];
m34_22 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { ArticleId = 3 })", span="61-61"];
m34_24 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="_jobId = Perform.Async<CriticalQueueJob>()", span="65-65"];
m34_26 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="_jobId = Perform.Async<InvalidQueueJob>()", span="69-69"];
m34_28 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="_jobId = Perform.Async<EmptyQueueJob>()", span="73-73"];
m34_29 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="ScenarioContext.Current.Pending()", span="77-77"];
m34_30 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label=PendingStepException, span="80-80"];
m34_32 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label=Exception, span="84-84"];
m34_31 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="throw;", span="82-82"];
m34_33 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="_exception = ex", span="86-86"];
m34_34 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.WhenICallThe(string)", span="19-19"];
m34_86 [cluster="Unk.IsInstanceOfType", file="SucceededState.cs", label="Entry Unk.IsInstanceOfType", span=""];
m34_38 [cluster="HangFire.Perform.Async(System.Type)", file="SucceededState.cs", label="Entry HangFire.Perform.Async(System.Type)", span="55-55"];
m34_68 [cluster="Unk.GetAllItemsFromList", file="SucceededState.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m34_84 [cluster="Unk.IsNotNull", file="SucceededState.cs", label="Entry Unk.IsNotNull", span=""];
m34_56 [cluster="Unk.Contains", file="SucceededState.cs", label="Entry Unk.Contains", span=""];
m34_69 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118"];
m34_70 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', _jobId))", span="120-120"];
m34_71 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', _jobId)", span="121-121"];
m34_72 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="122-122"];
m34_73 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs", label="Assert.IsTrue(DateTime.UtcNow.Date.AddDays(1) <= timestamp)", span="124-124"];
m34_74 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="125-125"];
m34_75 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118"];
m34_99 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154"];
m34_100 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SucceededState.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="156-156"];
m34_101 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SucceededState.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="157-157"];
m34_102 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154"];
m34_107 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168"];
m34_108 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SucceededState.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="170-170"];
m34_109 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SucceededState.cs", label="ThenItShouldBeScheduledForTomorrow()", span="171-171"];
m34_110 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168"];
m34_63 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SucceededState.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108"];
m34_64 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SucceededState.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', name))", span="110-111"];
m34_65 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SucceededState.cs", label="Assert.AreEqual(1, jobIds.Count)", span="113-113"];
m34_66 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SucceededState.cs", label="Assert.AreEqual(_jobId, jobIds[0])", span="114-114"];
m34_67 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="SucceededState.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108"];
m34_85 [cluster="System.Type.GetType(string, bool)", file="SucceededState.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m34_115 [file="SucceededState.cs", label="HangFire.Tests.ClientSteps", span=""];
m35_9 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="22-22"];
m35_10 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="var state = CreateState()", span="24-24"];
m35_11 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="var data = state.SerializeData()", span="26-26"];
m35_13 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Assert.Equal(''123'', data[''PerformanceDuration''])", span="29-29"];
m35_14 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Assert.Equal(''11'', data[''Latency''])", span="30-30"];
m35_15 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.SerializeData_ReturnsCorrectData()", span="22-22"];
m35_18 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="34-34"];
m35_19 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs", label="var state = CreateState()", span="36-36"];
m35_20 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs", label="Assert.True(state.IsFinal)", span="37-37"];
m35_21 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="34-34"];
m35_4 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="15-15"];
m35_5 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs", label="var state = CreateState()", span="17-17"];
m35_6 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs", label="Assert.Equal(SucceededState.StateName, state.Name)", span="18-18"];
m35_7 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="15-15"];
m35_22 [cluster="Unk.True", file="SucceededStateFacts.cs", label="Entry Unk.True", span=""];
m35_27 [cluster="Unk.False", file="SucceededStateFacts.cs", label="Entry Unk.False", span=""];
m35_0 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="9-9"];
m35_1 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="SucceededStateFacts.cs", label="Assert.Equal(''Succeeded'', SucceededState.StateName)", span="11-11"];
m35_2 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="9-9"];
m35_3 [cluster="Unk.Equal", file="SucceededStateFacts.cs", label="Entry Unk.Equal", span=""];
m35_23 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", span="41-41"];
m35_24 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs", label="var state = CreateState()", span="43-43"];
m35_25 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs", label="Assert.False(state.IgnoreJobLoadException)", span="44-44"];
m35_26 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.IgnoreExceptions_ReturnsFalse()", span="41-41"];
m35_16 [cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededStateFacts.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="45-45"];
m35_8 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", file="SucceededStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", span="47-47"];
m35_28 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", file="SucceededStateFacts.cs", label="return new SucceededState(11, 123);", span="49-49"];
m35_29 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", file="SucceededStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.CreateState()", span="47-47"];
m35_17 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededStateFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m35_30 [cluster="HangFire.States.SucceededState.SucceededState(long, long)", file="SucceededStateFacts.cs", label="Entry HangFire.States.SucceededState.SucceededState(long, long)", span="28-28"];
n75 -> n63  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
n76 -> n63  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n77 -> n71  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
n9 -> n12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
n9 -> n14  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n9 -> n25  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
n16 -> n24  [color=darkseagreen4, key=1, label=server, style=dashed];
n19 -> n22  [color=darkseagreen4, key=1, label=token, style=dashed];
n19 -> n24  [color=darkseagreen4, key=1, label=token, style=dashed];
n21 -> n24  [color=darkseagreen4, key=1, label=token, style=dashed];
n47 -> n50  [color=darkseagreen4, key=1, label=string, style=dashed];
n47 -> n52  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
n47 -> n54  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
n47 -> n56  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
n47 -> n57  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
n47 -> n63  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
n47 -> n58  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
n57 -> n62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n67 -> n71  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
n68 -> n71  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IDictionary<string, object>, System.Func<System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>, System.Func<System.Collections.Generic.IDictionary<string, object>, System.Threading.Tasks.Task>>>", style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m3_11 -> m3_15  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m3_12 -> m3_15  [color=darkseagreen4, key=1, label=enqueuedState, style=dashed];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m5_14 -> m5_8  [color=green, key=1, label="HangFire.States.FailedState", style=dashed];
m5_14 -> m5_3  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m5_14 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m6_7 -> m6_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_32 -> m6_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_96 -> m6_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_13 -> m6_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_22 -> m6_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_53 -> m6_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_181 -> m6_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_182 -> m6_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_21 -> m6_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_120 -> m6_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_107 -> m6_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_108 -> m6_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_170 -> m6_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_15 -> m6_17  [color=green, key=1, label=state, style=dashed];
m6_15 -> m6_20  [color=darkseagreen4, key=1, label=state, style=dashed];
m6_16 -> m6_18  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m6_16 -> m6_19  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m6_16 -> m6_20  [color=darkseagreen4, key=1, label=serializedData, style=dashed];
m6_36 -> m6_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_57 -> m6_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_79 -> m6_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_100 -> m6_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_114 -> m6_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_124 -> m6_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_138 -> m6_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_148 -> m6_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_164 -> m6_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_174 -> m6_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_188 -> m6_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_75 -> m6_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_86 -> m6_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_87 -> m6_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_43 -> m6_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_44 -> m6_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_64 -> m6_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_65 -> m6_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_156 -> m6_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_157 -> m6_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_144 -> m6_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_131 -> m6_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_132 -> m6_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_195 -> m6_7  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_13  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_22  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_29  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_36  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_44  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_86  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_107  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_108  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_131  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_157  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_181  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m6_195 -> m6_182  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.BackgroundJobClientExtensionsFacts", style=dashed];
m7_220 -> m7_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_223 -> m7_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_63 -> m7_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_113 -> m7_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_114 -> m7_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_115 -> m7_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_184 -> m7_188  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_184 -> m7_196  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_184 -> m7_199  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_185 -> m7_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_188 -> m7_195  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_175 -> m7_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_203 -> m7_207  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_203 -> m7_214  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_203 -> m7_217  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_204 -> m7_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_207 -> m7_213  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_144 -> m7_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_6 -> m7_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_8 -> m7_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_11 -> m7_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_12 -> m7_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_13 -> m7_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_13 -> m7_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_153 -> m7_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_156 -> m7_161  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_86 -> m7_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_87 -> m7_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_136 -> m7_138  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_147 -> m7_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_178 -> m7_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_196 -> m7_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_214 -> m7_216  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_133 -> m7_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_102 -> m7_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_103 -> m7_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_77 -> m7_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_70 -> m7_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_54 -> m7_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_167 -> m7_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_235 -> m7_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_8  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_33  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_11  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_38  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_12  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_46  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_59  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_67  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_74  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_81  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_85  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_86  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_87  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_101  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_102  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_106  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_103  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_113  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_114  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_115  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_128  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_132  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_133  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_136  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_139  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_143  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_144  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_153  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_155  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_166  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_167  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_185  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_187  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_188  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_196  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_204  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_206  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_207  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_214  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_227  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_222  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_223  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_230  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_235 -> m7_232  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerFacts", style=dashed];
m7_236 -> m7_196  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_236 -> m7_199  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_237 -> m7_214  [color=darkseagreen4, key=1, label=exception, style=dashed];
m7_237 -> m7_217  [color=darkseagreen4, key=1, label=exception, style=dashed];
m9_50 -> m9_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_51 -> m9_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_135 -> m9_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_136 -> m9_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_65 -> m9_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_66 -> m9_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_97 -> m9_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_98 -> m9_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_173 -> m9_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_120 -> m9_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_121 -> m9_130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_109 -> m9_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_162 -> m9_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_10 -> m9_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_11 -> m9_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_157 -> m9_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_16 -> m9_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_55 -> m9_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_125 -> m9_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_35 -> m9_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_36 -> m9_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_167 -> m9_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_145 -> m9_154  [color=darkseagreen4, key=1, label=validator, style=dashed];
m9_146 -> m9_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_78 -> m9_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_178 -> m9_6  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_10  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_11  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_35  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_36  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_50  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_51  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_65  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_66  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_78  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_97  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_98  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_109  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_120  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_121  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_135  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_178 -> m9_136  [color=darkseagreen4, key=1, label="HangFire.Tests.UnitTests.PerformTests", style=dashed];
m9_179 -> m9_154  [color=darkseagreen4, key=1, label=validator, style=dashed];
m10_16 -> m10_26  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_16 -> m10_19  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_16 -> m10_21  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m10_16 -> m10_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m10_16 -> m10_25  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m10_16 -> m10_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_47 -> m10_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m10_2 -> m10_5  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m10_15 -> m10_58  [color=green, key=1, label=object, style=dashed];
m10_15 -> m10_60  [color=green, key=1, label=object, style=dashed];
m10_57 -> m10_59  [color=green, key=1, label=result, style=dashed];
m10_57 -> m10_68  [color=green, key=1, label=result, style=dashed];
m10_57 -> m10_69  [color=green, key=1, label=result, style=dashed];
m10_60 -> m10_67  [color=green, key=1, label=descriptor, style=dashed];
m10_60 -> m10_68  [color=green, key=1, label=descriptor, style=dashed];
m10_61 -> m10_63  [color=green, key=1, label=propertyValue, style=dashed];
m10_62 -> m10_68  [color=green, key=1, label=value, style=dashed];
m10_78 -> m10_13  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m10_78 -> m10_29  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m10_78 -> m10_44  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m11_12 -> m11_15  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m11_12 -> m11_25  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m11_12 -> m11_26  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m11_13 -> m11_20  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_13 -> m11_24  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_13 -> m11_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_13 -> m11_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_22 -> m11_24  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m11_22 -> m11_36  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m11_22 -> m11_25  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m11_24 -> m11_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_27 -> m11_27  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_64 -> m11_14  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m11_64 -> m11_15  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m11_64 -> m11_20  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m11_64 -> m11_24  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m11_64 -> m11_36  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m11_64 -> m11_49  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m11_64 -> m11_55  [color=darkseagreen4, key=1, label="Hangfire.Server.AutomaticRetryProcess", style=dashed];
m11_65 -> m11_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m11_66 -> m11_36  [color=darkseagreen4, key=1, label=nextTry, style=dashed];
m12_23 -> m12_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_23 -> m12_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_28 -> m12_30  [color=darkseagreen4, key=1, label=serializedValue, style=dashed];
m12_38 -> m12_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_38 -> m12_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_6 -> m12_9  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m12_6 -> m12_11  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m12_6 -> m12_13  [color=green, key=1, label="HangFire.States.IState", style=dashed];
m12_55 -> m12_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m12_55 -> m12_29  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m12_55 -> m12_30  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m12_55 -> m12_41  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m13_8 -> m13_10  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m13_18 -> m13_4  [color=darkseagreen4, key=1, label="HangFire.States.ScheduledState", style=dashed];
m14_24 -> m14_27  [color=green, key=1, label=string, style=dashed];
m14_10 -> m14_10  [color=darkseagreen4, key=1, label=elapsedTime, style=dashed];
m15_0 -> m15_6  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m15_0 -> m15_11  [color=green, key=1, label="HangFire.JobActivator", style=dashed];
m15_0 -> m15_10  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_99 -> m15_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_65 -> m15_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_65 -> m15_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_65 -> m15_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_65 -> m15_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_97 -> m15_99  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_97 -> m15_100  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_98 -> m15_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_67 -> m15_69  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_67 -> m15_72  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_67 -> m15_73  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m15_68 -> m15_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_69 -> m15_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_72 -> m15_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_71 -> m15_91  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m15_110 -> m15_11  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_12  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_27  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_45  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_46  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_47  [color=green, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_13  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_28  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_52  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_53  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_55  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_56  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_57  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_58  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_68  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_79  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_69  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_83  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_70  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_72  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_91  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_110 -> m15_94  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m15_111 -> m15_91  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m15_112 -> m15_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_112 -> m15_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_15 -> m18_10  [color=green, key=1, label="HangFire.States.ProcessingState", style=dashed];
m20_0 -> m20_3  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m20_20 -> m20_11  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m20_20 -> m20_16  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m21_83 -> m21_97  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m21_83 -> m21_98  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m21_83 -> m21_101  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m21_83 -> m21_102  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m21_95 -> m21_98  [color=darkseagreen4, key=1, label=processes, style=dashed];
m21_95 -> m21_100  [color=darkseagreen4, key=1, label=processes, style=dashed];
m21_95 -> m21_101  [color=darkseagreen4, key=1, label=processes, style=dashed];
m21_95 -> m21_102  [color=darkseagreen4, key=1, label=processes, style=dashed];
m21_95 -> m21_103  [color=darkseagreen4, key=1, label=processes, style=dashed];
m21_95 -> m21_104  [color=darkseagreen4, key=1, label=processes, style=dashed];
m21_96 -> m21_98  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_96 -> m21_99  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_99 -> m21_99  [color=darkseagreen4, key=1, label=i, style=dashed];
m21_6 -> m21_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_8 -> m21_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_65 -> m21_68  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m21_65 -> m21_70  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
m21_65 -> m21_73  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m21_65 -> m21_74  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m21_65 -> m21_75  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.IBackgroundProcess>", style=dashed];
m21_65 -> m21_77  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m21_65 -> m21_78  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m21_65 -> m21_79  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m21_72 -> m21_74  [color=darkseagreen4, key=1, label=processes, style=dashed];
m21_72 -> m21_75  [color=darkseagreen4, key=1, label=processes, style=dashed];
m21_14 -> m21_22  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m21_14 -> m21_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Server.ILongRunningProcess>", style=dashed];
m21_14 -> m21_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m21_21 -> m21_23  [color=green, key=1, label=context, style=dashed];
m21_23 -> m21_23  [color=green, key=1, label=item, style=dashed];
m21_15 -> m21_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyQueue", style=dashed];
m21_123 -> m21_41  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m21_123 -> m21_42  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m21_123 -> m21_44  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m21_123 -> m21_45  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m22_271 -> m22_274  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_271 -> m22_275  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_271 -> m22_276  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_274 -> m22_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_276 -> m22_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_272 -> m22_274  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_272 -> m22_282  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_272 -> m22_275  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_272 -> m22_276  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_272 -> m22_286  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_272 -> m22_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_273 -> m22_276  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m22_273 -> m22_286  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m22_128 -> m22_132  [color=darkseagreen4, key=1, label=Table, style=dashed];
m22_131 -> m22_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_130 -> m22_132  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_130 -> m22_133  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_130 -> m22_134  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_130 -> m22_135  [color=green, key=1, label=stateMachine, style=dashed];
m22_134 -> m22_134  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_74 -> m22_77  [color=darkseagreen4, key=1, label=job, style=dashed];
m22_74 -> m22_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_322 -> m22_324  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_325 -> m22_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_316 -> m22_320  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m22_316 -> m22_325  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m22_319 -> m22_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_318 -> m22_321  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m22_323 -> m22_325  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_323 -> m22_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_323 -> m22_344  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_323 -> m22_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_317 -> m22_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_91 -> m22_93  [color=darkseagreen4, key=1, label=Table, style=dashed];
m22_236 -> m22_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_237 -> m22_239  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_238 -> m22_240  [color=darkseagreen4, key=1, label=result, style=dashed];
m22_239 -> m22_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_103 -> m22_103  [color=darkseagreen4, key=1, label=pair, style=dashed];
m22_121 -> m22_126  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_117 -> m22_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m22_57 -> m22_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_58 -> m22_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_47 -> m22_53  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_47 -> m22_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_47 -> m22_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_48 -> m22_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_29 -> m22_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_30 -> m22_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_95 -> m22_97  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_97 -> m22_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_139 -> m22_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_140 -> m22_143  [color=darkseagreen4, key=1, label=Table, style=dashed];
m22_142 -> m22_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_142 -> m22_145  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_142 -> m22_146  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_122 -> m22_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_191 -> m22_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_191 -> m22_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_192 -> m22_195  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_194 -> m22_196  [color=darkseagreen4, key=1, label=result, style=dashed];
m22_195 -> m22_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_193 -> m22_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_152 -> m22_6  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_11  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_14  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_17  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_20  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_24  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_28  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_29  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_32  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_59  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_62  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_67  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_72  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_78  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_80  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_100  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_101  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_103  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_110  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_118  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_119  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_125  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_126  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_129  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_133  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_137  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_141  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_145  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_152 -> m22_149  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m22_39 -> m22_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_113 -> m22_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_86 -> m22_88  [color=green, key=1, label="lambda expression", style=dashed];
m22_86 -> m22_91  [color=green, key=1, label="lambda expression", style=dashed];
m22_101 -> m22_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_229 -> m22_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_340 -> m22_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_247 -> m22_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_247 -> m22_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_306 -> m22_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_306 -> m22_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_102 -> m22_102  [color=darkseagreen4, key=1, label=pair, style=dashed];
m22_146 -> m22_146  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_65 -> m22_70  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_1 -> m22_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_154 -> m22_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_155 -> m22_159  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_158 -> m22_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_159 -> m22_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_5 -> m22_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_6 -> m22_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_112 -> m22_117  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_289 -> m22_292  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_289 -> m22_294  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_292 -> m22_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_293 -> m22_295  [color=darkseagreen4, key=1, label=result, style=dashed];
m22_294 -> m22_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_290 -> m22_292  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_290 -> m22_303  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_290 -> m22_294  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_290 -> m22_306  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_290 -> m22_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_291 -> m22_294  [color=darkseagreen4, key=1, label=exception, style=dashed];
m22_291 -> m22_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m22_291 -> m22_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m22_78 -> m22_85  [color=green, key=1, label="lambda expression", style=dashed];
m22_4 -> m22_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_173 -> m22_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_173 -> m22_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_174 -> m22_177  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_177 -> m22_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_99 -> m22_102  [color=darkseagreen4, key=1, label=args, style=dashed];
m22_211 -> m22_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_211 -> m22_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_212 -> m22_215  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_214 -> m22_216  [color=darkseagreen4, key=1, label=result, style=dashed];
m22_215 -> m22_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_213 -> m22_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_256 -> m22_259  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_258 -> m22_260  [color=darkseagreen4, key=1, label=result, style=dashed];
m22_259 -> m22_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_257 -> m22_259  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_257 -> m22_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_257 -> m22_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_351 -> m22_78  [color=green, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_5  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_6  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_70  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_97  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_101  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_105  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_112  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_139  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_140  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_141  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_154  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_215  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_229  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_259  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_267  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_274  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_282  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_275  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_292  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_303  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_320  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_321  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_324  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_325  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_340  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_344  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_351 -> m22_346  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m22_357 -> m22_135  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_352 -> m22_53  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_353 -> m22_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_354 -> m22_70  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_355 -> m22_117  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m22_358 -> m22_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_359 -> m22_282  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_359 -> m22_286  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_361 -> m22_303  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_361 -> m22_306  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_363 -> m22_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_363 -> m22_344  [color=darkseagreen4, key=1, label=context, style=dashed];
m22_360 -> m22_286  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m22_362 -> m22_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m22_362 -> m22_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m22_356 -> m22_126  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m23_5 -> m23_15  [color=green, key=1, label=hash, style=dashed];
m23_5 -> m23_22  [color=green, key=1, label=hash, style=dashed];
m23_5 -> m23_9  [color=darkseagreen4, key=1, label=hash, style=dashed];
m23_5 -> m23_10  [color=darkseagreen4, key=1, label=hash, style=dashed];
m23_5 -> m23_14  [color=darkseagreen4, key=1, label=hash, style=dashed];
m23_5 -> m23_16  [color=darkseagreen4, key=1, label=hash, style=dashed];
m23_5 -> m23_21  [color=darkseagreen4, key=1, label=hash, style=dashed];
m23_8 -> m23_15  [color=green, key=1, label=dto, style=dashed];
m23_8 -> m23_22  [color=green, key=1, label=dto, style=dashed];
m23_23 -> m23_25  [color=darkseagreen4, key=1, label=state, style=dashed];
m23_23 -> m23_26  [color=darkseagreen4, key=1, label=state, style=dashed];
m23_13 -> m23_15  [color=darkseagreen4, key=1, label=state, style=dashed];
m23_7 -> m23_9  [color=darkseagreen4, key=1, label=date, style=dashed];
m23_24 -> m23_26  [color=darkseagreen4, key=1, label=data, style=dashed];
m25_12 -> m25_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m25_16 -> m25_16  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m25_17 -> m25_21  [color=darkseagreen4, key=1, label=queueIndex, style=dashed];
m25_18 -> m25_26  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m25_22 -> m25_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_23 -> m25_26  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_50 -> m25_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_39 -> m25_50  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_39 -> m25_66  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_40 -> m25_49  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_40 -> m25_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_40 -> m25_50  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_40 -> m25_66  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_40 -> m25_52  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_41 -> m25_43  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m25_41 -> m25_44  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m25_41 -> m25_45  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m25_41 -> m25_46  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m25_42 -> m25_44  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_42 -> m25_45  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_42 -> m25_46  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_42 -> m25_49  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_42 -> m25_62  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_49 -> m25_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_48 -> m25_50  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_48 -> m25_51  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_108 -> m25_110  [color=darkseagreen4, key=1, label=stateData, style=dashed];
m25_193 -> m25_205  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_194 -> m25_198  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m25_195 -> m25_203  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m25_196 -> m25_205  [color=darkseagreen4, key=1, label=utcNow, style=dashed];
m25_197 -> m25_201  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m25_199 -> m25_217  [color=darkseagreen4, key=1, label=name, style=dashed];
m25_202 -> m25_207  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m25_202 -> m25_208  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m25_207 -> m25_207  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m25_207 -> m25_208  [color=darkseagreen4, key=1, label=removedServerCount, style=dashed];
m25_204 -> m25_206  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m25_206 -> m25_206  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m25_179 -> m25_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_176 -> m25_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_176 -> m25_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_176 -> m25_179  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_176 -> m25_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_177 -> m25_179  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_177 -> m25_180  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_178 -> m25_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_138 -> m25_141  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m25_138 -> m25_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_151 -> m25_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_151 -> m25_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_151 -> m25_155  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m25_151 -> m25_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_151 -> m25_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_152 -> m25_157  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_152 -> m25_158  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m25_153 -> m25_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_157 -> m25_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m25_156 -> m25_170  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m25_70 -> m25_78  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_80  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_84  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_70 -> m25_86  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m25_228 -> m25_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_8  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_36  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_118  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_121  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_134  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_143  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_174  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_228 -> m25_206  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m25_229 -> m25_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_229 -> m25_66  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m25_230 -> m25_62  [color=darkseagreen4, key=1, label=storedParameters, style=dashed];
m25_231 -> m25_66  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m25_232 -> m25_161  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_232 -> m25_170  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_234 -> m25_170  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m25_235 -> m25_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_235 -> m25_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m25_236 -> m25_217  [color=darkseagreen4, key=1, label=name, style=dashed];
m28_7 -> m28_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m28_7 -> m28_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m28_7 -> m28_53  [color=darkseagreen4, key=1, label=pager, style=dashed];
m28_8 -> m28_19  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m28_19 -> m28_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_21 -> m28_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_21 -> m28_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_23 -> m28_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_23 -> m28_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_25 -> m28_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_25 -> m28_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_25 -> m28_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_27 -> m28_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_27 -> m28_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_30 -> m28_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_30 -> m28_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_32 -> m28_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_32 -> m28_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_34 -> m28_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_39 -> m28_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_39 -> m28_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_41 -> m28_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_41 -> m28_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_43 -> m28_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_43 -> m28_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_45 -> m28_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_49 -> m28_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_71 -> m28_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m28_71 -> m28_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m29_11 -> m29_16  [color=darkseagreen4, key=1, label="HangFire.States.ApplyStateContext", style=dashed];
m29_26 -> m29_7  [color=green, key=1, label="HangFire.States.ScheduledState", style=dashed];
m30_7 -> m30_9  [color=darkseagreen4, key=1, label=date, style=dashed];
m30_23 -> m30_25  [color=green, key=1, label=state, style=dashed];
m30_23 -> m30_26  [color=green, key=1, label=state, style=dashed];
m30_24 -> m30_26  [color=green, key=1, label=data, style=dashed];
m31_4 -> m31_6  [color=darkseagreen4, key=1, label=servers, style=dashed];
m31_4 -> m31_9  [color=darkseagreen4, key=1, label=servers, style=dashed];
m31_9 -> m31_11  [color=darkseagreen4, key=1, label=server, style=dashed];
m31_9 -> m31_13  [color=darkseagreen4, key=1, label=server, style=dashed];
m31_9 -> m31_15  [color=darkseagreen4, key=1, label=server, style=dashed];
m31_9 -> m31_17  [color=green, key=1, label=server, style=dashed];
m31_9 -> m31_19  [color=green, key=1, label=server, style=dashed];
m31_9 -> m31_21  [color=darkseagreen4, key=1, label=server, style=dashed];
m31_9 -> m31_23  [color=green, key=1, label=server, style=dashed];
m31_9 -> m31_25  [color=darkseagreen4, key=1, label=server, style=dashed];
m31_41 -> m31_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_17  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_19  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_23  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m31_41 -> m31_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m32_150 -> m32_153  [color=darkseagreen4, key=1, label="HangFire.Server.ServerContext", style=dashed];
m32_102 -> m32_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_124 -> m32_127  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m32_124 -> m32_131  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m32_130 -> m32_133  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m32_22 -> m32_27  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m32_22 -> m32_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m32_25 -> m32_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_170 -> m32_170  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m32_42 -> m32_45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m32_42 -> m32_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m32_42 -> m32_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m32_49 -> m32_57  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m32_51 -> m32_56  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m32_95 -> m32_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_116 -> m32_119  [color=darkseagreen4, key=1, label=double, style=dashed];
m32_140 -> m32_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_140 -> m32_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m32_0 -> m32_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m32_177 -> m32_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m32_177 -> m32_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m32_177 -> m32_18  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m32_177 -> m32_39  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m32_177 -> m32_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m34_111 -> m34_113  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_80 -> m34_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_87 -> m34_90  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_87 -> m34_92  [color=darkseagreen4, key=1, label=Table, style=dashed];
m34_88 -> m34_90  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_46 -> m34_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_47 -> m34_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_2 -> m34_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_2 -> m34_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_2 -> m34_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_2 -> m34_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_2 -> m34_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_2 -> m34_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_2 -> m34_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_2 -> m34_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_72 -> m34_74  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m34_64 -> m34_66  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m34_115 -> m34_4  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_10  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_81  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_82  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_96  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_97  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_100  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_101  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_104  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_105  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_108  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_109  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_112  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m34_115 -> m34_113  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m35_11 -> m35_13  [color=darkseagreen4, key=1, label=data, style=dashed];
m35_11 -> m35_14  [color=darkseagreen4, key=1, label=data, style=dashed];
}
