digraph  {
m0_80 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="Client.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_37 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="Client.feature.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m0_10 [cluster="Mock<IState>.cstr", file="Client.feature.cs", label="Entry Mock<IState>.cstr", span=""];
m0_33 [cluster="Unk.Equal", file="Client.feature.cs", label="Entry Unk.Equal", span=""];
m0_153 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m0_154 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", color=green, community=0, file="Client.feature.cs", label="2: _connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="180-181"];
m0_155 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", color=green, community=0, file="Client.feature.cs", label="1: var stateMachine = CreateStateMachineMock()", span="183-183"];
m0_156 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", color=green, community=0, file="Client.feature.cs", label="0: var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new [] { ''Old'' })", span="186-186"];
m0_159 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", color=green, community=0, file="Client.feature.cs", label="1: stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="192-194"];
m0_157 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", color=green, community=0, file="Client.feature.cs", label="2: Assert.False(result)", span="189-189"];
m0_158 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", color=green, community=0, file="Client.feature.cs", label="0: _connection.Verify(x => x.GetJobData(''1''))", span="190-190"];
m0_160 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m0_99 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392"];
m0_27 [cluster="Unk.>", file="Client.feature.cs", label="Entry Unk.>", span=""];
m0_210 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m0_211 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", color=green, community=0, file="Client.feature.cs", label="0: _connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="249-254"];
m0_212 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", color=green, community=0, file="Client.feature.cs", label="1: var stateMachine = CreateStateMachineMock()", span="256-256"];
m0_213 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", color=green, community=0, file="Client.feature.cs", label="1: stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(true)", span="258-259"];
m0_214 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", color=green, community=0, file="Client.feature.cs", label="0: var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="262-263"];
m0_215 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", color=green, community=0, file="Client.feature.cs", label="0: stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old''))", span="266-269"];
m0_216 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", color=green, community=0, file="Client.feature.cs", label="1: Assert.True(result)", span="271-271"];
m0_217 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m0_28 [cluster="Unk.CreateExpiredJob", file="Client.feature.cs", label="Entry Unk.CreateExpiredJob", span=""];
m0_38 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m0_39 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", color=green, community=0, file="Client.feature.cs", label="2: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null, _filters))", span="55-56"];
m0_40 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", color=green, community=0, file="Client.feature.cs", label="2: Assert.Equal(''handlers'', exception.ParamName)", span="58-58"];
m0_41 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m0_45 [cluster="StateMachine.cstr", file="Client.feature.cs", label="Entry StateMachine.cstr", span=""];
m0_129 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m0_130 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", color=green, community=0, file="Client.feature.cs", label="0: var stateMachine = CreateStateMachine()", span="155-155"];
m0_131 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", color=green, community=0, file="Client.feature.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', _state.Object, null))", span="157-158"];
m0_132 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", color=green, community=0, file="Client.feature.cs", label="0: Assert.Equal(''fromStates'', exception.ParamName)", span="160-160"];
m0_133 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m0_161 [cluster="Unk.False", file="Client.feature.cs", label="Entry Unk.False", span=""];
m0_111 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m0_112 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", color=green, community=0, file="Client.feature.cs", label="0: var stateMachine = CreateStateMachine()", span="133-133"];
m0_113 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", color=green, community=0, file="Client.feature.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' }))", span="135-136"];
m0_114 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", color=green, community=0, file="Client.feature.cs", label="0: Assert.Equal(''jobId'', exception.ParamName)", span="138-138"];
m0_115 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m0_186 [cluster="System.Console.WriteLine()", file="Client.feature.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m0_236 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", color=green, community=0, file="Client.feature.cs", label="1: _connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = null,\r\n                    LoadException = new JobLoadException()\r\n                })", span="278-284"];
m0_103 [cluster="Unk.ChangeState", file="Client.feature.cs", label="Entry Unk.ChangeState", span=""];
m0_94 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m0_95 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", color=green, community=0, file="Client.feature.cs", label="1: var stateMachine = CreateStateMachineMock()", span="113-113"];
m0_96 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", color=green, community=0, file="Client.feature.cs", label="2: stateMachine.Object.CreateInState(_job, _parameters, _state.Object)", span="115-115"];
m0_97 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", color=green, community=0, file="Client.feature.cs", label="0: stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null))", span="117-120"];
m0_98 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m0_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="Client.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_137 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m0_138 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", color=green, community=0, file="Client.feature.cs", label="1: var disposableMock = new Mock<IDisposable>()", span="166-166"];
m0_139 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", color=green, community=0, file="Client.feature.cs", label="0: _connection.Setup(x => x.AcquireJobLock(''1'')).Returns(disposableMock.Object)", span="167-167"];
m0_142 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", color=green, community=0, file="Client.feature.cs", label="2: disposableMock.Verify(x => x.Dispose())", span="173-173"];
m0_140 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", color=green, community=0, file="Client.feature.cs", label="1: var stateMachine = CreateStateMachine()", span="169-169"];
m0_141 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", color=green, community=0, file="Client.feature.cs", label="0: stateMachine.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="171-171"];
m0_143 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m0_120 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m0_121 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", color=green, community=0, file="Client.feature.cs", label="2: var stateMachine = CreateStateMachine()", span="144-144"];
m0_122 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", color=green, community=0, file="Client.feature.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' }))", span="146-147"];
m0_123 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", color=green, community=0, file="Client.feature.cs", label="2: Assert.Equal(''toState'', exception.ParamName)", span="149-149"];
m0_124 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m0_190 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m0_191 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", color=green, community=0, file="Client.feature.cs", label="0: _connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="225-230"];
m0_192 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", color=green, community=0, file="Client.feature.cs", label="1: var stateMachine = CreateStateMachineMock()", span="232-232"];
m0_193 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", color=green, community=0, file="Client.feature.cs", label="1: stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(false)", span="233-234"];
m0_194 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", color=green, community=0, file="Client.feature.cs", label="0: var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="237-237"];
m0_195 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", color=green, community=0, file="Client.feature.cs", label="1: stateMachine.Verify(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))", span="240-240"];
m0_196 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", color=green, community=0, file="Client.feature.cs", label="2: Assert.False(result)", span="241-241"];
m0_197 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m0_11 [cluster="Unk.Setup", file="Client.feature.cs", label="Entry Unk.Setup", span=""];
m0_51 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384"];
m0_0 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28"];
m0_1 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=green, community=0, file="Client.feature.cs", label="2: _job = Job.FromExpression(() => Console.WriteLine(''Hello''))", span="30-30"];
m0_2 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=green, community=0, file="Client.feature.cs", label="0: _parameters = new Dictionary<string, string>()", span="31-31"];
m0_3 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=green, community=0, file="Client.feature.cs", label="1: _state = new Mock<IState>()", span="32-32"];
m0_4 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=green, community=0, file="Client.feature.cs", label="2: _state.Setup(x => x.Name).Returns(StateName)", span="33-33"];
m0_5 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=green, community=0, file="Client.feature.cs", label="2: _connection.Setup(x => x.CreateWriteTransaction())\r\n                .Returns(_transaction.Object)", span="35-36"];
m0_6 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=green, community=0, file="Client.feature.cs", label="1: _connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="37-40"];
m0_7 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28"];
m0_152 [cluster="Unk.Dispose", file="Client.feature.cs", label="Entry Unk.Dispose", span=""];
m0_107 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m0_108 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", color=green, community=0, file="Client.feature.cs", label="1: var stateMachine = CreateStateMachine()", span="126-126"];
m0_109 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", color=green, community=0, file="Client.feature.cs", label="0: Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="127-127"];
m0_110 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m0_73 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m0_74 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=green, community=0, file="Client.feature.cs", label="1: var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="97-97"];
m0_75 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=green, community=0, file="Client.feature.cs", label="0: _parameters.Add(''Name'', ''Value'')", span="98-98"];
m0_77 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=green, community=0, file="Client.feature.cs", label="0: stateMachine.CreateInState(job, _parameters, _state.Object)", span="102-102"];
m0_76 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=green, community=0, file="Client.feature.cs", label="1: var stateMachine = CreateStateMachine()", span="100-100"];
m0_78 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", color=green, community=0, file="Client.feature.cs", label="2: _connection.Verify(x => x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>()))", span="104-107"];
m0_79 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m0_148 [cluster="Unk.AcquireJobLock", file="Client.feature.cs", label="Entry Unk.AcquireJobLock", span=""];
m0_119 [cluster="Unk.TryToChangeState", file="Client.feature.cs", label="Entry Unk.TryToChangeState", span=""];
m0_55 [cluster="Unk.CreateInState", file="Client.feature.cs", label="Entry Unk.CreateInState", span=""];
m0_144 [cluster="Mock<IDisposable>.cstr", file="Client.feature.cs", label="Entry Mock<IDisposable>.cstr", span=""];
m0_228 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="266-269"];
m0_13 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="30-30"];
m0_17 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="33-33"];
m0_20 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="35-35"];
m0_24 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="37-40"];
m0_14 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="2: Console.WriteLine(''Hello'')", span="30-30"];
m0_15 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="30-30"];
m0_18 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="2: x.Name", span="33-33"];
m0_19 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="33-33"];
m0_21 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.CreateWriteTransaction()", span="35-35"];
m0_22 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="35-35"];
m0_25 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())", span="37-40"];
m0_26 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="37-40"];
m0_34 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="47-47"];
m0_35 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: new StateMachine(null, _handlers, _filters)", span="47-47"];
m0_36 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="47-47"];
m0_42 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="56-56"];
m0_43 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="2: new StateMachine(_connection.Object, null, _filters)", span="56-56"];
m0_44 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="56-56"];
m0_53 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: stateMachine.CreateInState(null, _parameters, _state.Object)", span="67-67"];
m0_52 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="67-67"];
m0_54 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="67-67"];
m0_62 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: stateMachine.CreateInState(_job, null, _state.Object)", span="78-78"];
m0_61 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="78-78"];
m0_63 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="78-78"];
m0_70 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: stateMachine.CreateInState(_job, _parameters, null)", span="89-89"];
m0_69 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="89-89"];
m0_71 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="89-89"];
m0_82 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="97-97"];
m0_85 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="104-107"];
m0_83 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: Console.WriteLine(''SomeString'')", span="97-97"];
m0_84 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="97-97"];
m0_86 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>())", span="104-107"];
m0_87 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="104-107"];
m0_88 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="105-105"];
m0_91 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="106-106"];
m0_89 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''", span="105-105"];
m0_90 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="105-105"];
m0_92 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="2: d[''Name''] == ''Value''", span="106-106"];
m0_93 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="106-106"];
m0_100 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="117-120"];
m0_101 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null)", span="117-120"];
m0_102 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="117-120"];
m0_104 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="118-118"];
m0_105 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: sc.JobId == JobId && sc.Job == _job", span="118-118"];
m0_106 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="118-118"];
m0_117 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' })", span="136-136"];
m0_116 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="136-136"];
m0_118 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="136-136"];
m0_126 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="2: stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' })", span="147-147"];
m0_125 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="147-147"];
m0_127 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="147-147"];
m0_135 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: stateMachine.TryToChangeState(''1'', _state.Object, null)", span="158-158"];
m0_134 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="158-158"];
m0_136 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="158-158"];
m0_145 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="167-167"];
m0_149 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="173-173"];
m0_146 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="2: x.AcquireJobLock(''1'')", span="167-167"];
m0_147 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="167-167"];
m0_150 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="2: x.Dispose()", span="173-173"];
m0_151 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="173-173"];
m0_162 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="180-180"];
m0_169 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="193-193"];
m0_166 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="190-190"];
m0_163 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: x.GetJobData(It.IsAny<string>())", span="180-180"];
m0_164 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="180-180"];
m0_167 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: x.GetJobData(''1'')", span="190-190"];
m0_168 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="190-190"];
m0_170 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="193-193"];
m0_171 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="193-193"];
m0_180 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="201-201"];
m0_183 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="205-205"];
m0_187 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="217-217"];
m0_181 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: x.GetJobData(''1'')", span="201-201"];
m0_182 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="201-201"];
m0_184 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: Console.WriteLine()", span="205-205"];
m0_185 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="205-205"];
m0_188 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="217-217"];
m0_189 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="217-217"];
m0_198 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="225-225"];
m0_201 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="229-229"];
m0_204 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="233-233"];
m0_207 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="240-240"];
m0_199 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: x.GetJobData(''1'')", span="225-225"];
m0_200 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="225-225"];
m0_202 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="2: Console.WriteLine()", span="229-229"];
m0_203 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="229-229"];
m0_205 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="233-233"];
m0_206 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="233-233"];
m0_208 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="240-240"];
m0_209 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="240-240"];
m0_219 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="249-249"];
m0_222 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="253-253"];
m0_225 [cluster="lambda expression", file="Client.feature.cs", label="Entry lambda expression", span="258-258"];
m0_220 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.GetJobData(''1'')", span="249-249"];
m0_221 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="249-249"];
m0_223 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="0: Console.WriteLine()", span="253-253"];
m0_224 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="253-253"];
m0_226 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="258-258"];
m0_229 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="1: x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old'')", span="266-269"];
m0_232 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="2: sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')", span="267-267"];
m0_244 [cluster="lambda expression", color=green, community=0, file="Client.feature.cs", label="2: x.GetJobData(''1'')", span="278-278"];
m0_227 [cluster="lambda expression", file="Client.feature.cs", label="Exit lambda expression", span="258-258"];
m0_56 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73"];
m0_57 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", color=green, community=0, file="Client.feature.cs", label="0: var stateMachine = CreateStateMachine()", span="75-75"];
m0_58 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", color=green, community=0, file="Client.feature.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(_job, null, _state.Object))", span="77-78"];
m0_59 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", color=green, community=0, file="Client.feature.cs", label="0: Assert.Equal(''parameters'', exception.ParamName)", span="80-80"];
m0_60 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73"];
m0_46 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62"];
m0_47 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", color=green, community=0, file="Client.feature.cs", label="0: var stateMachine = CreateStateMachine()", span="64-64"];
m0_48 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", color=green, community=0, file="Client.feature.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(null, _parameters, _state.Object))", span="66-67"];
m0_49 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", color=green, community=0, file="Client.feature.cs", label="0: Assert.Equal(''job'', exception.ParamName)", span="69-69"];
m0_50 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62"];
m0_23 [cluster="Unk.CreateWriteTransaction", file="Client.feature.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m0_172 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m0_173 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", color=green, community=0, file="Client.feature.cs", label="2: _connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="201-206"];
m0_174 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", color=green, community=0, file="Client.feature.cs", label="1: var stateMachine = CreateStateMachineMock()", span="208-208"];
m0_175 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", color=green, community=0, file="Client.feature.cs", label="1: var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new [] { ''AnotherState'' })", span="211-212"];
m0_177 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", color=green, community=0, file="Client.feature.cs", label="1: stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="216-218"];
m0_176 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", color=green, community=0, file="Client.feature.cs", label="2: Assert.False(result)", span="215-215"];
m0_178 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m0_179 [cluster="HangFire.Storage.JobData.JobData()", file="Client.feature.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m0_218 [cluster="Unk.True", file="Client.feature.cs", label="Entry Unk.True", span=""];
m0_8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Client.feature.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m0_12 [cluster="Unk.Returns", file="Client.feature.cs", label="Entry Unk.Returns", span=""];
m0_29 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m0_30 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="Client.feature.cs", label="0: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _handlers, _filters))", span="46-47"];
m0_31 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="Client.feature.cs", label="1: Assert.Equal(''connection'', exception.ParamName)", span="49-49"];
m0_32 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m0_16 [cluster="System.Console.WriteLine(string)", file="Client.feature.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_72 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="Client.feature.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="52-52"];
m0_81 [cluster="Unk.Verify", file="Client.feature.cs", label="Entry Unk.Verify", span=""];
m0_165 [cluster="Unk.GetJobData", file="Client.feature.cs", label="Entry Unk.GetJobData", span=""];
m0_64 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="Client.feature.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84"];
m0_65 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", color=green, community=0, file="Client.feature.cs", label="0: var stateMachine = CreateStateMachine()", span="86-86"];
m0_66 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", color=green, community=0, file="Client.feature.cs", label="1: var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateInState(_job, _parameters, null))", span="88-89"];
m0_67 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", color=green, community=0, file="Client.feature.cs", label="0: Assert.Equal(''state'', exception.ParamName)", span="91-91"];
m0_68 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="Client.feature.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84"];
m0_128 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="Client.feature.cs", label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="72-72"];
m3_14 [cluster="Hangfire.Logging.ILog.Info(string)", file="DequeuedJobsWatcher.cs", label="Entry Hangfire.Logging.ILog.Info(string)", span="202-202"];
m3_11 [cluster="Hangfire.JobStorage.GetConnection()", file="DequeuedJobsWatcher.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m3_16 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="DequeuedJobsWatcher.cs", label="Entry Hangfire.Server.ServerWatchdog.ToString()", span="53-53"];
m3_17 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="DequeuedJobsWatcher.cs", label="return GetType().Name;", span="55-55"];
m3_18 [cluster="Hangfire.Server.ServerWatchdog.ToString()", file="DequeuedJobsWatcher.cs", label="Exit Hangfire.Server.ServerWatchdog.ToString()", span="53-53"];
m3_4 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs", label="Entry Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m3_5 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs", label="var connection = context.Storage.GetConnection()", span="39-39"];
m3_9 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs", label="context.Wait(_checkInterval)", span="50-50"];
m3_6 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs", label="var serversRemoved = connection.RemoveTimedOutServers(_serverTimeout)", span="41-41"];
m3_7 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs", label="serversRemoved != 0", span="42-42"];
m3_8 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs", label="Logger.Info(String.Format(\r\n                        ''{0} servers were removed due to timeout'', \r\n                        serversRemoved))", span="44-46"];
m3_10 [cluster="Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.cs", label="Exit Hangfire.Server.ServerWatchdog.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m3_15 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="DequeuedJobsWatcher.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="57-57"];
m3_12 [cluster="Hangfire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="DequeuedJobsWatcher.cs", label="Entry Hangfire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="50-50"];
m3_0 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="DequeuedJobsWatcher.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", span="31-31"];
m3_1 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="DequeuedJobsWatcher.cs", label="_checkInterval = checkInterval", span="33-33"];
m3_2 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="DequeuedJobsWatcher.cs", label="_serverTimeout = serverTimeout", span="34-34"];
m3_3 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", file="DequeuedJobsWatcher.cs", label="Exit Hangfire.Server.ServerWatchdog.ServerWatchdog(System.TimeSpan, System.TimeSpan)", span="31-31"];
m3_19 [cluster="object.GetType()", file="DequeuedJobsWatcher.cs", label="Entry object.GetType()", span="0-0"];
m3_13 [cluster="string.Format(string, object)", file="DequeuedJobsWatcher.cs", label="Entry string.Format(string, object)", span="0-0"];
m3_20 [file="DequeuedJobsWatcher.cs", label="Hangfire.Server.ServerWatchdog", span=""];
m4_12 [cluster="Unk.Returns", file="DictionaryAssert.cs", label="Entry Unk.Returns", span=""];
m4_80 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DictionaryAssert.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m4_37 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="DictionaryAssert.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.IStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m4_10 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Threading.CancellationToken)", file="DictionaryAssert.cs", label="CancellationToken = cancellationToken", span="38-38"];
m4_350 [cluster="Mock<StateMachine>.cstr", file="DictionaryAssert.cs", label="Entry Mock<StateMachine>.cstr", span=""];
m4_314 [cluster="Unk.Any", file="DictionaryAssert.cs", label="Entry Unk.Any", span=""];
m4_342 [cluster="Unk.Apply", file="DictionaryAssert.cs", label="Entry Unk.Apply", span=""];
m4_33 [cluster="Unk.Equal", file="DictionaryAssert.cs", label="Entry Unk.Equal", span=""];
m4_0 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28"];
m4_1 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="DictionaryAssert.cs", label="_job = Job.FromExpression(() => Console.WriteLine(''Hello''))", span="30-30"];
m4_3 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="DictionaryAssert.cs", label="_state = new Mock<IState>()", span="32-32"];
m4_5 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=green, community=0, file="DictionaryAssert.cs", label="2: _connection.Setup(x => x.CreateWriteTransaction())\r\n                .Returns(_transaction.Object)", span="35-36"];
m4_7 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28"];
m4_8 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DictionaryAssert.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="119-119"];
m4_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DictionaryAssert.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_2 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="DictionaryAssert.cs", label="_parameters = new Dictionary<string, string>()", span="31-31"];
m4_4 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="DictionaryAssert.cs", label="_state.Setup(x => x.Name).Returns(StateName)", span="33-33"];
m4_6 [cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", color=green, community=0, file="DictionaryAssert.cs", label="2: _connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="37-40"];
m4_11 [cluster="Unk.Setup", file="DictionaryAssert.cs", label="Entry Unk.Setup", span=""];
m4_153 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m4_154 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="DictionaryAssert.cs", label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="180-181"];
m4_155 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachineMock()", span="183-183"];
m4_156 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="DictionaryAssert.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new [] { ''Old'' })", span="186-186"];
m4_158 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="DictionaryAssert.cs", label="_connection.Verify(x => x.GetJobData(''1''))", span="190-190"];
m4_159 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="DictionaryAssert.cs", label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="192-194"];
m4_157 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="DictionaryAssert.cs", label="Assert.False(result)", span="189-189"];
m4_160 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177"];
m4_270 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315"];
m4_271 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachineMock()", span="317-317"];
m4_274 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="DictionaryAssert.cs", label="stateMachine\r\n                .Setup(x => x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>()))\r\n                .Returns(electedState.Object)", span="321-324"];
m4_275 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="DictionaryAssert.cs", label="stateMachine.Object.ChangeState(context, _state.Object, OldStateName)", span="326-326"];
m4_272 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="DictionaryAssert.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="318-318"];
m4_276 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="DictionaryAssert.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))", span="328-329"];
m4_273 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="DictionaryAssert.cs", label="var electedState = new Mock<IState>()", span="319-319"];
m4_277 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315"];
m4_284 [cluster="Unk.ElectState", file="DictionaryAssert.cs", label="Entry Unk.ElectState", span=""];
m4_99 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392"];
m4_348 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="DictionaryAssert.cs", label="return new Mock<StateMachine>(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters)\r\n            {\r\n                CallBase = true\r\n            };", span="394-400"];
m4_349 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392"];
m4_242 [cluster="HangFire.Common.JobLoadException.JobLoadException()", file="DictionaryAssert.cs", label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33"];
m4_27 [cluster="Unk.>", file="DictionaryAssert.cs", label="Entry Unk.>", span=""];
m4_210 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m4_211 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="DictionaryAssert.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="249-254"];
m4_212 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachineMock()", span="256-256"];
m4_214 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="DictionaryAssert.cs", label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="262-263"];
m4_215 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="DictionaryAssert.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old''))", span="266-269"];
m4_213 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="DictionaryAssert.cs", label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(true)", span="258-259"];
m4_216 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="DictionaryAssert.cs", label="Assert.True(result)", span="271-271"];
m4_217 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246"];
m4_28 [cluster="Unk.CreateExpiredJob", file="DictionaryAssert.cs", label="Entry Unk.CreateExpiredJob", span=""];
m4_262 [cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="DictionaryAssert.cs", label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23"];
m4_38 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m4_39 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="DictionaryAssert.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null, _filters))", span="55-56"];
m4_40 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="DictionaryAssert.cs", label="Assert.Equal(''handlers'', exception.ParamName)", span="58-58"];
m4_41 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53"];
m4_45 [cluster="StateMachine.cstr", file="DictionaryAssert.cs", label="Entry StateMachine.cstr", span=""];
m4_129 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m4_130 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachine()", span="155-155"];
m4_131 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="DictionaryAssert.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', _state.Object, null))", span="157-158"];
m4_132 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="DictionaryAssert.cs", label="Assert.Equal(''fromStates'', exception.ParamName)", span="160-160"];
m4_133 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153"];
m4_161 [cluster="Unk.False", file="DictionaryAssert.cs", label="Entry Unk.False", span=""];
m4_111 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m4_112 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachine()", span="133-133"];
m4_113 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="DictionaryAssert.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' }))", span="135-136"];
m4_114 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="DictionaryAssert.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="138-138"];
m4_115 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131"];
m4_288 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333"];
m4_289 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachineMock()", span="335-335"];
m4_292 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="DictionaryAssert.cs", label="stateMachine.Setup(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))\r\n                .Throws(exception)", span="339-341"];
m4_293 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="DictionaryAssert.cs", label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="343-344"];
m4_290 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="DictionaryAssert.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="336-336"];
m4_294 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="DictionaryAssert.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any())))", span="346-350"];
m4_291 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="DictionaryAssert.cs", label="var exception = new NotSupportedException()", span="337-337"];
m4_295 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="DictionaryAssert.cs", label="Assert.False(result)", span="351-351"];
m4_296 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333"];
m4_255 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301"];
m4_256 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachineMock()", span="303-303"];
m4_258 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="DictionaryAssert.cs", label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="306-307"];
m4_259 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="DictionaryAssert.cs", label="stateMachine.Verify(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>()))", span="309-310"];
m4_257 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="DictionaryAssert.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="304-304"];
m4_260 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="DictionaryAssert.cs", label="Assert.True(result)", span="311-311"];
m4_261 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301"];
m4_315 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355"];
m4_320 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="_handlers.Add(handler1.Object)", span="364-364"];
m4_321 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="_handlers.Add(handler2.Object)", span="365-365"];
m4_322 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachine()", span="367-367"];
m4_324 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="stateMachine.ApplyState(\r\n                context, _state.Object, OldStateName, Enumerable.Empty<IApplyStateFilter>())", span="371-372"];
m4_325 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="handler1.Verify(x => x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>()))", span="375-381"];
m4_317 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="handler1.Setup(x => x.StateName).Returns(StateName)", span="359-359"];
m4_319 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="handler2.Setup(x => x.StateName).Returns(StateName)", span="362-362"];
m4_316 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="var handler1 = new Mock<IStateHandler>()", span="358-358"];
m4_318 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="var handler2 = new Mock<IStateHandler>()", span="361-361"];
m4_323 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="368-368"];
m4_326 [cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355"];
m4_186 [cluster="System.Console.WriteLine()", file="DictionaryAssert.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m4_235 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275"];
m4_236 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="DictionaryAssert.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = null,\r\n                    LoadException = new JobLoadException()\r\n                })", span="278-284"];
m4_237 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachineMock()", span="286-286"];
m4_238 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="DictionaryAssert.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="289-289"];
m4_239 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="DictionaryAssert.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old''))", span="292-295"];
m4_240 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="DictionaryAssert.cs", label="Assert.False(result)", span="297-297"];
m4_241 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275"];
m4_103 [cluster="Unk.ChangeState", file="DictionaryAssert.cs", label="Entry Unk.ChangeState", span=""];
m4_329 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="DictionaryAssert.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m4_94 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m4_95 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachineMock()", span="113-113"];
m4_96 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="DictionaryAssert.cs", label="stateMachine.Object.CreateInState(_job, _parameters, _state.Object)", span="115-115"];
m4_97 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="DictionaryAssert.cs", label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null))", span="117-120"];
m4_98 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111"];
m4_13 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="30-30"];
m4_328 [cluster="Unk.Add", file="DictionaryAssert.cs", label="Entry Unk.Add", span=""];
m4_297 [cluster="System.NotSupportedException.NotSupportedException()", file="DictionaryAssert.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m4_137 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m4_139 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="DictionaryAssert.cs", label="_connection.Setup(x => x.AcquireJobLock(''1'')).Returns(disposableMock.Object)", span="167-167"];
m4_140 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachine()", span="169-169"];
m4_141 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="DictionaryAssert.cs", label="stateMachine.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="171-171"];
m4_138 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="DictionaryAssert.cs", label="var disposableMock = new Mock<IDisposable>()", span="166-166"];
m4_142 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="DictionaryAssert.cs", label="disposableMock.Verify(x => x.Dispose())", span="173-173"];
m4_143 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164"];
m4_120 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m4_121 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachine()", span="144-144"];
m4_122 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="DictionaryAssert.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' }))", span="146-147"];
m4_123 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="DictionaryAssert.cs", label="Assert.Equal(''toState'', exception.ParamName)", span="149-149"];
m4_124 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142"];
m4_190 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m4_191 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="DictionaryAssert.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="225-230"];
m4_192 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachineMock()", span="232-232"];
m4_194 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="DictionaryAssert.cs", label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="237-237"];
m4_193 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="DictionaryAssert.cs", label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))\r\n                .Returns(false)", span="233-234"];
m4_195 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="DictionaryAssert.cs", label="stateMachine.Verify(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()))", span="240-240"];
m4_196 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="DictionaryAssert.cs", label="Assert.False(result)", span="241-241"];
m4_197 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222"];
m4_51 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384"];
m4_346 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="DictionaryAssert.cs", label="return new StateMachine(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters);", span="386-389"];
m4_347 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384"];
m4_298 [cluster="Unk.Throws", file="DictionaryAssert.cs", label="Entry Unk.Throws", span=""];
m4_152 [cluster="Unk.Dispose", file="DictionaryAssert.cs", label="Entry Unk.Dispose", span=""];
m4_107 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m4_108 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachine()", span="126-126"];
m4_109 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="DictionaryAssert.cs", label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="127-127"];
m4_110 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124"];
m4_73 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m4_75 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="DictionaryAssert.cs", label="_parameters.Add(''Name'', ''Value'')", span="98-98"];
m4_76 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachine()", span="100-100"];
m4_77 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="DictionaryAssert.cs", label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="102-102"];
m4_78 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="DictionaryAssert.cs", label="_connection.Verify(x => x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>()))", span="104-107"];
m4_74 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="DictionaryAssert.cs", label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="97-97"];
m4_79 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95"];
m4_148 [cluster="Unk.AcquireJobLock", file="DictionaryAssert.cs", label="Entry Unk.AcquireJobLock", span=""];
m4_119 [cluster="Unk.TryToChangeState", file="DictionaryAssert.cs", label="Entry Unk.TryToChangeState", span=""];
m4_55 [cluster="Unk.CreateInState", file="DictionaryAssert.cs", label="Entry Unk.CreateInState", span=""];
m4_144 [cluster="Mock<IDisposable>.cstr", file="DictionaryAssert.cs", label="Entry Mock<IDisposable>.cstr", span=""];
m4_336 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="368-368"];
m4_20 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="35-35"];
m4_24 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="37-40"];
m4_25 [cluster="lambda expression", color=green, community=0, file="DictionaryAssert.cs", label="0: x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())", span="37-40"];
m4_26 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="37-40"];
m4_35 [cluster="lambda expression", file="DictionaryAssert.cs", label="new StateMachine(null, _handlers, _filters)", span="47-47"];
m4_43 [cluster="lambda expression", file="DictionaryAssert.cs", label="new StateMachine(_connection.Object, null, _filters)", span="56-56"];
m4_53 [cluster="lambda expression", file="DictionaryAssert.cs", label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="67-67"];
m4_62 [cluster="lambda expression", file="DictionaryAssert.cs", label="stateMachine.CreateInState(_job, null, _state.Object)", span="78-78"];
m4_70 [cluster="lambda expression", file="DictionaryAssert.cs", label="stateMachine.CreateInState(_job, _parameters, null)", span="89-89"];
m4_101 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null)", span="117-120"];
m4_105 [cluster="lambda expression", file="DictionaryAssert.cs", label="sc.JobId == JobId && sc.Job == _job", span="118-118"];
m4_117 [cluster="lambda expression", file="DictionaryAssert.cs", label="stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' })", span="136-136"];
m4_135 [cluster="lambda expression", file="DictionaryAssert.cs", label="stateMachine.TryToChangeState(''1'', _state.Object, null)", span="158-158"];
m4_229 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old'')", span="266-269"];
m4_267 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>())", span="309-310"];
m4_282 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>())", span="322-323"];
m4_303 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="339-340"];
m4_340 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>())", span="375-381"];
m4_344 [cluster="lambda expression", file="DictionaryAssert.cs", label="c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName", span="377-380"];
m4_17 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="DictionaryAssert.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m4_22 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="35-35"];
m4_21 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.CreateWriteTransaction()", span="35-35"];
m4_86 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>())", span="104-107"];
m4_163 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.GetJobData(It.IsAny<string>())", span="180-180"];
m4_170 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="193-193"];
m4_188 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="217-217"];
m4_205 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="233-233"];
m4_208 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="240-240"];
m4_226 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>())", span="258-258"];
m4_247 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old'')", span="292-295"];
m4_286 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="328-329"];
m4_306 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any()))", span="346-350"];
m4_34 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="47-47"];
m4_36 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="47-47"];
m4_42 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="56-56"];
m4_44 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="56-56"];
m4_52 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="67-67"];
m4_54 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="67-67"];
m4_61 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="78-78"];
m4_63 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="78-78"];
m4_69 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="89-89"];
m4_71 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="89-89"];
m4_85 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="104-107"];
m4_100 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="117-120"];
m4_102 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="117-120"];
m4_104 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="118-118"];
m4_106 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="118-118"];
m4_116 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="136-136"];
m4_118 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="136-136"];
m4_126 [cluster="lambda expression", file="DictionaryAssert.cs", label="stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' })", span="147-147"];
m4_134 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="158-158"];
m4_136 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="158-158"];
m4_145 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="167-167"];
m4_162 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="180-180"];
m4_166 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="190-190"];
m4_180 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="201-201"];
m4_183 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="205-205"];
m4_198 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="225-225"];
m4_201 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="229-229"];
m4_219 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="249-249"];
m4_222 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="253-253"];
m4_228 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="266-269"];
m4_230 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="266-269"];
m4_231 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="267-267"];
m4_243 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="278-278"];
m4_266 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="309-310"];
m4_268 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="309-310"];
m4_281 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="322-323"];
m4_283 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="322-323"];
m4_302 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="339-340"];
m4_304 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="339-340"];
m4_339 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="375-381"];
m4_341 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="375-381"];
m4_343 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="376-380"];
m4_345 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="376-380"];
m4_19 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="33-33"];
m4_18 [cluster="lambda expression", file="DictionaryAssert.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m4_204 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="233-233"];
m4_225 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="258-258"];
m4_330 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="359-359"];
m4_333 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="362-362"];
m4_87 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="104-107"];
m4_88 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="105-105"];
m4_91 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="106-106"];
m4_125 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="147-147"];
m4_164 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="180-180"];
m4_169 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="193-193"];
m4_171 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="193-193"];
m4_187 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="217-217"];
m4_189 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="217-217"];
m4_206 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="233-233"];
m4_207 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="240-240"];
m4_209 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="240-240"];
m4_227 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="258-258"];
m4_246 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="292-295"];
m4_248 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="292-295"];
m4_249 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="293-293"];
m4_252 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="294-294"];
m4_285 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="328-329"];
m4_287 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="328-329"];
m4_305 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="346-350"];
m4_307 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="346-350"];
m4_308 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="348-348"];
m4_311 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="350-350"];
m4_15 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="DictionaryAssert.cs", label="CancellationToken.WaitHandle.WaitOne(timeout)", span="59-59"];
m4_14 [cluster="Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", file="DictionaryAssert.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Wait(System.TimeSpan)", span="57-57"];
m4_82 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="97-97"];
m4_127 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="147-147"];
m4_147 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="167-167"];
m4_146 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.AcquireJobLock(''1'')", span="167-167"];
m4_149 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="173-173"];
m4_168 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="190-190"];
m4_167 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.GetJobData(''1'')", span="190-190"];
m4_182 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="201-201"];
m4_181 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.GetJobData(''1'')", span="201-201"];
m4_185 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="205-205"];
m4_184 [cluster="lambda expression", file="DictionaryAssert.cs", label="Console.WriteLine()", span="205-205"];
m4_200 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="225-225"];
m4_199 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.GetJobData(''1'')", span="225-225"];
m4_203 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="229-229"];
m4_202 [cluster="lambda expression", file="DictionaryAssert.cs", label="Console.WriteLine()", span="229-229"];
m4_221 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="249-249"];
m4_220 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.GetJobData(''1'')", span="249-249"];
m4_224 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="253-253"];
m4_223 [cluster="lambda expression", file="DictionaryAssert.cs", label="Console.WriteLine()", span="253-253"];
m4_233 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="267-267"];
m4_232 [cluster="lambda expression", file="DictionaryAssert.cs", label="sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')", span="267-267"];
m4_245 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="278-278"];
m4_244 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.GetJobData(''1'')", span="278-278"];
m4_263 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="304-304"];
m4_278 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="318-318"];
m4_299 [cluster="lambda expression", file="DictionaryAssert.cs", label="Entry lambda expression", span="336-336"];
m4_309 [cluster="lambda expression", file="DictionaryAssert.cs", label="s.Exception == exception", span="348-348"];
m4_332 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="359-359"];
m4_331 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.StateName", span="359-359"];
m4_335 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="362-362"];
m4_334 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.StateName", span="362-362"];
m4_90 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="105-105"];
m4_89 [cluster="lambda expression", file="DictionaryAssert.cs", label="j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''", span="105-105"];
m4_93 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="106-106"];
m4_92 [cluster="lambda expression", file="DictionaryAssert.cs", label="d[''Name''] == ''Value''", span="106-106"];
m4_251 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="293-293"];
m4_250 [cluster="lambda expression", file="DictionaryAssert.cs", label="sc.JobId == ''1'' && sc.Job == null", span="293-293"];
m4_254 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="294-294"];
m4_253 [cluster="lambda expression", file="DictionaryAssert.cs", label="s.Exception != null", span="294-294"];
m4_310 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="348-348"];
m4_313 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="350-350"];
m4_312 [cluster="lambda expression", file="DictionaryAssert.cs", label="!f.Any()", span="350-350"];
m4_84 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="97-97"];
m4_83 [cluster="lambda expression", file="DictionaryAssert.cs", label="Console.WriteLine(''SomeString'')", span="97-97"];
m4_151 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="173-173"];
m4_150 [cluster="lambda expression", file="DictionaryAssert.cs", label="x.Dispose()", span="173-173"];
m4_265 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="304-304"];
m4_264 [cluster="lambda expression", file="DictionaryAssert.cs", label="Console.WriteLine()", span="304-304"];
m4_280 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="318-318"];
m4_279 [cluster="lambda expression", file="DictionaryAssert.cs", label="Console.WriteLine()", span="318-318"];
m4_301 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="336-336"];
m4_300 [cluster="lambda expression", file="DictionaryAssert.cs", label="Console.WriteLine()", span="336-336"];
m4_337 [cluster="lambda expression", file="DictionaryAssert.cs", label="Console.WriteLine()", span="368-368"];
m4_338 [cluster="lambda expression", file="DictionaryAssert.cs", label="Exit lambda expression", span="368-368"];
m4_56 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73"];
m4_57 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachine()", span="75-75"];
m4_58 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="DictionaryAssert.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(_job, null, _state.Object))", span="77-78"];
m4_59 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="DictionaryAssert.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="80-80"];
m4_60 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73"];
m4_46 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62"];
m4_47 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachine()", span="64-64"];
m4_48 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="DictionaryAssert.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(null, _parameters, _state.Object))", span="66-67"];
m4_49 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="DictionaryAssert.cs", label="Assert.Equal(''job'', exception.ParamName)", span="69-69"];
m4_50 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62"];
m4_172 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m4_173 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="DictionaryAssert.cs", label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="201-206"];
m4_174 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachineMock()", span="208-208"];
m4_175 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="DictionaryAssert.cs", label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new [] { ''AnotherState'' })", span="211-212"];
m4_177 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="DictionaryAssert.cs", label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<IState>(), It.IsAny<string>()),\r\n                Times.Never)", span="216-218"];
m4_176 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="DictionaryAssert.cs", label="Assert.False(result)", span="215-215"];
m4_178 [cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198"];
m4_179 [cluster="HangFire.Storage.JobData.JobData()", file="DictionaryAssert.cs", label="Entry HangFire.Storage.JobData.JobData()", span="20-20"];
m4_23 [cluster="Unk.CreateWriteTransaction", file="DictionaryAssert.cs", label="Entry Unk.CreateWriteTransaction", span=""];
m4_218 [cluster="Unk.True", file="DictionaryAssert.cs", label="Entry Unk.True", span=""];
m4_234 [cluster="Unk.Equals", file="DictionaryAssert.cs", label="Entry Unk.Equals", span=""];
m4_16 [cluster="System.Console.WriteLine(string)", file="DictionaryAssert.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_29 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m4_30 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="DictionaryAssert.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _handlers, _filters))", span="46-47"];
m4_31 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="DictionaryAssert.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="49-49"];
m4_32 [cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44"];
m4_327 [cluster="Mock<IStateHandler>.cstr", file="DictionaryAssert.cs", label="Entry Mock<IStateHandler>.cstr", span=""];
m4_72 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", file="DictionaryAssert.cs", label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.IState)", span="52-52"];
m4_81 [cluster="Unk.Verify", file="DictionaryAssert.cs", label="Entry Unk.Verify", span=""];
m4_165 [cluster="Unk.GetJobData", file="DictionaryAssert.cs", label="Entry Unk.GetJobData", span=""];
m4_269 [cluster="Unk.ApplyState", file="DictionaryAssert.cs", label="Entry Unk.ApplyState", span=""];
m4_64 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84"];
m4_65 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="DictionaryAssert.cs", label="var stateMachine = CreateStateMachine()", span="86-86"];
m4_66 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="DictionaryAssert.cs", label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateInState(_job, _parameters, null))", span="88-89"];
m4_67 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="DictionaryAssert.cs", label="Assert.Equal(''state'', exception.ParamName)", span="91-91"];
m4_68 [cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84"];
m4_128 [cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", file="DictionaryAssert.cs", label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.IState, string[])", span="72-72"];
m4_351 [file="DictionaryAssert.cs", label="HangFire.Core.Tests.States.StateMachineFacts", span=""];
m4_352 [file="DictionaryAssert.cs", label=stateMachine, span=""];
m4_353 [file="DictionaryAssert.cs", label=stateMachine, span=""];
m4_354 [file="DictionaryAssert.cs", label=stateMachine, span=""];
m4_355 [file="DictionaryAssert.cs", label=stateMachine, span=""];
m4_357 [file="DictionaryAssert.cs", label=stateMachine, span=""];
m4_358 [file="DictionaryAssert.cs", label=context, span=""];
m4_359 [file="DictionaryAssert.cs", label=context, span=""];
m4_361 [file="DictionaryAssert.cs", label=context, span=""];
m4_363 [file="DictionaryAssert.cs", label=context, span=""];
m4_360 [file="DictionaryAssert.cs", label=electedState, span=""];
m4_362 [file="DictionaryAssert.cs", label=exception, span=""];
m4_356 [file="DictionaryAssert.cs", label=stateMachine, span=""];
m5_20 [cluster="Hangfire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="HangFireJobActivatorTests.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="35-35"];
m5_21 [cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="HangFireJobActivatorTests.cs", label="Entry Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="182-182"];
m5_22 [cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="HangFireJobActivatorTests.cs", label="transaction.DecrementCounter(''stats:succeeded'')", span="184-184"];
m5_23 [cluster="Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="HangFireJobActivatorTests.cs", label="Exit Hangfire.States.SucceededState.Handler.Unapply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="182-182"];
m5_12 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="HangFireJobActivatorTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m5_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="HangFireJobActivatorTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m5_13 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="HangFireJobActivatorTests.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m5_14 [cluster="long.ToString(System.IFormatProvider)", file="HangFireJobActivatorTests.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m5_24 [cluster="Hangfire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="HangFireJobActivatorTests.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="37-37"];
m5_17 [cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="HangFireJobActivatorTests.cs", label="Entry Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="177-177"];
m5_18 [cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="HangFireJobActivatorTests.cs", label="transaction.IncrementCounter(''stats:succeeded'')", span="179-179"];
m5_19 [cluster="Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", file="HangFireJobActivatorTests.cs", label="Exit Hangfire.States.SucceededState.Handler.Apply(Hangfire.States.ApplyStateContext, Hangfire.Storage.IWriteOnlyTransaction)", span="177-177"];
m5_0 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="HangFireJobActivatorTests.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51"];
m5_1 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="HangFireJobActivatorTests.cs", label="SucceededAt = DateTime.UtcNow", span="53-53"];
m5_2 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="HangFireJobActivatorTests.cs", label="Result = result", span="54-54"];
m5_3 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="HangFireJobActivatorTests.cs", label="Latency = latency", span="55-55"];
m5_4 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="HangFireJobActivatorTests.cs", label="PerformanceDuration = performanceDuration", span="56-56"];
m5_5 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="HangFireJobActivatorTests.cs", label="Exit Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51"];
m5_15 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="HangFireJobActivatorTests.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m5_6 [cluster="Hangfire.States.SucceededState.SerializeData()", file="HangFireJobActivatorTests.cs", label="Entry Hangfire.States.SucceededState.SerializeData()", span="158-158"];
m5_7 [cluster="Hangfire.States.SucceededState.SerializeData()", file="HangFireJobActivatorTests.cs", label="var data = new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.SerializeDateTime(SucceededAt) },\r\n                { ''PerformanceDuration'', PerformanceDuration.ToString(CultureInfo.InvariantCulture) },\r\n                { ''Latency'', Latency.ToString(CultureInfo.InvariantCulture) }\r\n            }", span="160-165"];
m5_8 [cluster="Hangfire.States.SucceededState.SerializeData()", file="HangFireJobActivatorTests.cs", label="Result != null", span="167-167"];
m5_9 [cluster="Hangfire.States.SucceededState.SerializeData()", file="HangFireJobActivatorTests.cs", label="data.Add(''Result'', JobHelper.ToJson(Result))", span="169-169"];
m5_10 [cluster="Hangfire.States.SucceededState.SerializeData()", file="HangFireJobActivatorTests.cs", label="return data;", span="172-172"];
m5_11 [cluster="Hangfire.States.SucceededState.SerializeData()", file="HangFireJobActivatorTests.cs", label="Exit Hangfire.States.SucceededState.SerializeData()", span="158-158"];
m5_25 [file="HangFireJobActivatorTests.cs", label="Hangfire.States.SucceededState", span=""];
m7_17 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="JobClient.cs", label="throw new ArgumentNullException(''state'');", span="31-31"];
m7_68 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobClient.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m7_11 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: var state = new EnqueuedState(''Enqueued by the Сlient'', queue)", span="34-34"];
m7_12 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: var job = CreateJob(jobType, args)", span="35-35"];
m7_13 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: var context = new CreateContext(\r\n                new ClientJobDescriptor(_redis, jobId, job, state))", span="37-38"];
m7_14 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: _jobCreator.CreateJob(context)", span="40-40"];
m7_15 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: return jobId;", span="42-42"];
m7_16 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.Async(System.Type, object)", span="17-17"];
m7_20 [cluster="string.Format(string, object, object)", color=green, community=0, file="JobClient.cs", label="2: Entry string.Format(string, object, object)", span="0-0"];
m7_18 [cluster="System.Type.IsAssignableFrom(System.Type)", file="JobClient.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m7_21 [cluster="HangFire.JobHelper.GetQueue(System.Type)", color=green, community=0, file="JobClient.cs", label="2: Entry HangFire.JobHelper.GetQueue(System.Type)", span="20-20"];
m7_22 [cluster="HangFire.Client.JobClient.GenerateId()", file="JobClient.cs", label="Entry HangFire.Client.JobClient.GenerateId()", span="97-97"];
m7_25 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", color=green, community=0, file="JobClient.cs", label="2: Entry HangFire.Client.CreateContext.CreateContext(HangFire.Client.ClientJobDescriptor)", span="12-12"];
m7_24 [cluster="HangFire.Client.JobClient.CreateJob(System.Type, object)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.CreateJob(System.Type, object)", span="86-86"];
m7_23 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="JobClient.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m7_19 [cluster="System.ArgumentException.ArgumentException(string, string)", file="JobClient.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m7_26 [cluster="HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.Dictionary<string, string>, HangFire.States.JobState)", file="JobClient.cs", label="Entry HangFire.Client.ClientJobDescriptor.ClientJobDescriptor(IRedisClient, string, System.Collections.Generic.Dictionary<string, string>, HangFire.States.JobState)", span="13-13"];
m7_66 [cluster="System.Guid.ToString()", file="JobClient.cs", label="Entry System.Guid.ToString()", span="0-0"];
m7_46 [cluster="System.TimeSpan.Equals(System.TimeSpan)", file="JobClient.cs", label="Entry System.TimeSpan.Equals(System.TimeSpan)", span="0-0"];
m7_63 [cluster="System.ComponentModel.PropertyDescriptor.GetValue(object)", color=red, community=0, file="JobClient.cs", label="2: Entry System.ComponentModel.PropertyDescriptor.GetValue(object)", span="0-0"];
m7_64 [cluster="object.GetType()", file="JobClient.cs", label="Entry object.GetType()", span="0-0"];
m7_49 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="obj == null", span="70-70"];
m7_50 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="return result;", span="70-70"];
m7_51 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="TypeDescriptor.GetProperties(obj)", span="72-72"];
m7_31 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="!typeof(BackgroundJob).IsAssignableFrom(jobType)", span="51-51"];
m7_43 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=green, community=0, file="JobClient.cs", label="2: Exit HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="45-45"];
m7_39 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: var job = CreateJob(jobType, args)", span="71-71"];
m7_42 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="return jobId;", span="78-78"];
m7_40 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: var context = new CreateContext(\r\n                new ClientJobDescriptor(_redis, jobId, job, state))", span="73-74"];
m7_41 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="_jobCreator.CreateJob(context)", span="76-76"];
m7_44 [cluster="System.TimeSpan.Duration()", file="JobClient.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m7_61 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.PropertiesToDictionary(object)", span="67-67"];
m7_60 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="JobClient.cs", label="2: return result;", span="98-98"];
m7_62 [cluster="System.ComponentModel.TypeDescriptor.GetProperties(object)", file="JobClient.cs", label="Entry System.ComponentModel.TypeDescriptor.GetProperties(object)", span="0-0"];
m7_47 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="JobClient.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10"];
m7_45 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobClient.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m7_4 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.Async(System.Type, object)", span="17-17"];
m7_5 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: jobType == null", span="19-19"];
m7_7 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", color=red, community=0, file="JobClient.cs", label="2: Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="20-20"];
m7_8 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", color=green, community=0, file="JobClient.cs", label="2: return CreateJob(jobId, jobType, state, PropertiesToDictionary(args));", span="23-23"];
m7_9 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", color=red, community=0, file="JobClient.cs", label="2: Exit HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="20-20"];
m7_6 [cluster="HangFire.Client.JobClient.Async(System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: throw new ArgumentNullException(''jobType'');", span="21-21"];
m7_10 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=red, community=0, file="JobClient.cs", label="2: Entry HangFire.Client.JobClient.PropertiesToDictionary(object)", span="67-67"];
m7_0 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="12-12"];
m7_1 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", color=red, community=0, file="JobClient.cs", label="0: _redis = redisManager.GetClient()", span="14-14"];
m7_2 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="JobClient.cs", label="Exit HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="12-12"];
m7_65 [cluster="System.Guid.NewGuid()", file="JobClient.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m7_48 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="var result = new Dictionary<string, string>()", span="69-69"];
m7_3 [cluster="Unk.GetClient", file="JobClient.cs", label="Entry Unk.GetClient", span=""];
m7_59 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="JobClient.cs", label="2: result.Add(descriptor.Name, value)", span="95-95"];
m7_67 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="JobClient.cs", label="HangFire.Client.JobClient", span=""];
m7_28 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="Entry HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", span="45-45"];
m7_29 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: jobType == null", span="47-47"];
m7_32 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", file="JobClient.cs", label="throw new ArgumentException(\r\n                    String.Format(''The type '{0}' must inherit '{1}'.'', jobType, typeof(BackgroundJob)),\r\n                    ''jobType'');", span="53-55"];
m7_33 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: interval != interval.Duration()", span="58-58"];
m7_36 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: return Async(jobType, args);", span="65-65"];
m7_30 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: throw new ArgumentNullException(''jobType'');", span="49-49"];
m7_34 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: throw new ArgumentOutOfRangeException(''interval'', ''Interval value can not be negative.'');", span="60-60"];
m7_35 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: interval.Equals(TimeSpan.Zero)", span="63-63"];
m7_37 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: var jobId = GenerateId()", span="68-68"];
m7_38 [cluster="HangFire.Client.JobClient.In(System.TimeSpan, System.Type, object)", color=red, community=0, file="JobClient.cs", label="2: var state = new ScheduledState(''Scheduled by the Client'', DateTime.UtcNow.Add(interval))", span="70-70"];
m7_27 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobClient.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
m7_52 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="JobClient.cs", label="2: var propertyValue = descriptor.GetValue(obj)", span="74-74"];
m7_53 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", file="JobClient.cs", label="string value = null", span="75-75"];
m7_54 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="JobClient.cs", label="2: propertyValue != null", span="77-77"];
m7_55 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="JobClient.cs", label="2: var converter = TypeDescriptor.GetConverter(propertyValue.GetType())", span="81-81"];
m7_56 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="JobClient.cs", label="2: value = converter.ConvertToInvariantString(propertyValue)", span="82-82"];
m7_57 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="JobClient.cs", label="2: Exception", span="84-84"];
m7_58 [cluster="HangFire.Client.JobClient.PropertiesToDictionary(object)", color=green, community=0, file="JobClient.cs", label="2: throw new InvalidOperationException(\r\n                            String.Format(\r\n                                ''Could not convert property '{0}' of type '{1}' to a string. See the inner exception for details.'',\r\n                                descriptor.Name,\r\n                                descriptor.PropertyType),\r\n                            ex);", span="86-91"];
m8_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobCreator.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m8_23 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="109-109"];
m8_64 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="filters.Reverse()", span="112-112"];
m8_65 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="filter.OnClientException(context)", span="114-114"];
m8_66 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="109-109"];
m8_63 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m8_22 [cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8"];
m8_44 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="69-69"];
m8_45 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreating(preContext)", span="74-74"];
m8_46 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="preContext.Canceled", span="75-75"];
m8_47 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return new CreatedContext(\r\n                    preContext, true, null);", span="77-78"];
m8_50 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = continuation()", span="85-85"];
m8_53 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="90-91"];
m8_54 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="93-93"];
m8_58 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="103-103"];
m8_48 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="var wasError = false", span="81-81"];
m8_49 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="CreatedContext postContext", span="82-82"];
m8_51 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label=Exception, span="87-87"];
m8_57 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!wasError", span="101-101"];
m8_52 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="wasError = true", span="89-89"];
m8_55 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!postContext.ExceptionHandled", span="95-95"];
m8_59 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return postContext;", span="106-106"];
m8_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="throw;", span="97-97"];
m8_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="69-69"];
m8_67 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4"];
m8_13 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
m8_14 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="CreateWithFilters(context, context.JobDescriptor, _clientFilters)", span="37-37"];
m8_16 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="var exceptionContext = new ClientExceptionContext(context, ex)", span="41-41"];
m8_15 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label=Exception, span="39-39"];
m8_17 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="InvokeExceptionFilters(exceptionContext, _clientExceptionFilters)", span="43-43"];
m8_18 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="!exceptionContext.ExceptionHandled", span="44-44"];
m8_19 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="throw;", span="46-46"];
m8_20 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="33-33"];
m8_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobCreator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m8_32 [cluster="Unk.thunk", file="JobCreator.cs", label="Entry Unk.thunk", span=""];
m8_29 [cluster="HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="6-6"];
m8_38 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="8-8"];
m8_37 [cluster="HangFire.Client.ClientJobDescriptor.Enqueue()", file="JobCreator.cs", label="Entry HangFire.Client.ClientJobDescriptor.Enqueue()", span="28-28"];
m8_3 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="22-22"];
m8_5 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="clientFilters == null", span="26-26"];
m8_7 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="clientExceptionFilters == null", span="27-27"];
m8_9 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="_clientFilters = clientFilters", span="29-29"];
m8_10 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="_clientExceptionFilters = clientExceptionFilters", span="30-30"];
m8_6 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="throw new ArgumentNullException(''clientFilters'');", span="26-26"];
m8_8 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="throw new ArgumentNullException(''clientExceptionFilters'');", span="27-27"];
m8_11 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="22-22"];
m8_4 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobCreator.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m8_41 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="64-64"];
m8_34 [cluster="lambda expression", color=red, community=0, file="JobCreator.cs", label="2: jobDescriptor.Enqueue()", span="59-59"];
m8_35 [cluster="lambda expression", file="JobCreator.cs", label="return new CreatedContext(createContext, false, null);", span="60-60"];
m8_42 [cluster="lambda expression", file="JobCreator.cs", label="InvokeClientFilter(filter, preContext, next)", span="64-64"];
m8_39 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="64-64"];
m8_33 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="57-61"];
m8_36 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="57-61"];
m8_40 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="64-64"];
m8_43 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="64-64"];
m8_61 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m8_31 [cluster="Unk.Aggregate", file="JobCreator.cs", label="Entry Unk.Aggregate", span=""];
m8_62 [cluster="System.Func<TResult>.Invoke()", file="JobCreator.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m8_21 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="51-51"];
m8_24 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var preContext = new CreatingContext(createContext)", span="56-56"];
m8_25 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", color=red, community=0, file="JobCreator.cs", label="0: Func<CreatedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Enqueue();\r\n                return new CreatedContext(createContext, false, null);\r\n            }", span="57-61"];
m8_26 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="63-64"];
m8_27 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="thunk()", span="66-66"];
m8_28 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="51-51"];
m8_0 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m8_1 [cluster="HangFire.Client.JobCreator.JobCreator()", color=red, community=2, file="JobCreator.cs", label="2: Current = new JobCreator(\r\n                GlobalJobFilters.Filters.OfType<IClientFilter>(),\r\n                GlobalJobFilters.Filters.OfType<IClientExceptionFilter>())", span="14-16"];
m8_2 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m8_68 [file="JobCreator.cs", label="HangFire.Client.JobCreator", span=""];
m8_69 [file="JobCreator.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m8_70 [file="JobCreator.cs", label="HangFire.Client.CreateContext", span=""];
m8_71 [file="JobCreator.cs", label=preContext, span=""];
m8_72 [file="JobCreator.cs", label="System.Func<HangFire.Filters.CreatedContext>", span=""];
m8_73 [file="JobCreator.cs", label="HangFire.Filters.IClientFilter", span=""];
m9_44 [cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobInvokerTests.cs", label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57"];
m9_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobInvokerTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m9_43 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="JobInvokerTests.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m9_42 [cluster="Hangfire.JobStorage.GetConnection()", file="JobInvokerTests.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m9_2 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", file="JobInvokerTests.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", span="91-91"];
m9_3 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", file="JobInvokerTests.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan)", span="91-91"];
m9_46 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="JobInvokerTests.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
m9_47 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="JobInvokerTests.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m9_22 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="Entry Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="143-143"];
m9_29 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="var connection = context.Storage.GetConnection()", span="145-145"];
m9_35 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    connection,\r\n                    jobId,\r\n                    new EnqueuedState { Reason = String.Format(''Triggered by {0}'', ToString()) }, \r\n                    ScheduledState.StateName))", span="159-164"];
m9_30 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="connection.AcquireDistributedLock(''locks:schedulepoller'', DefaultLockTimeout)", span="146-146"];
m9_32 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="var jobId = connection.GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="151-151"];
m9_37 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="var transaction = connection.CreateWriteTransaction()", span="171-171"];
m9_31 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="148-148"];
m9_33 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="jobId == null", span="153-153"];
m9_38 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="transaction.RemoveFromSet(''schedule'', jobId)", span="173-173"];
m9_34 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="return false;", span="156-156"];
m9_36 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="appliedState == null", span="166-166"];
m9_40 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="return true;", span="178-178"];
m9_39 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="transaction.Commit()", span="174-174"];
m9_41 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="Exit Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="143-143"];
m9_28 [cluster="object.GetType()", file="JobInvokerTests.cs", label="Entry object.GetType()", span="0-0"];
m9_48 [cluster="string.Format(string, object)", file="JobInvokerTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m9_51 [cluster="Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="JobInvokerTests.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="43-43"];
m9_24 [cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", file="JobInvokerTests.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23"];
m9_50 [cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="JobInvokerTests.cs", label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m9_25 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="JobInvokerTests.cs", label="Entry Hangfire.Server.DelayedJobScheduler.ToString()", span="138-138"];
m9_26 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="JobInvokerTests.cs", label="return GetType().Name;", span="140-140"];
m9_27 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="JobInvokerTests.cs", label="Exit Hangfire.Server.DelayedJobScheduler.ToString()", span="138-138"];
m9_52 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="JobInvokerTests.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m9_45 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobInvokerTests.cs", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
m9_23 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="JobInvokerTests.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m9_0 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", file="JobInvokerTests.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", span="81-81"];
m9_1 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", file="JobInvokerTests.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler()", span="81-81"];
m9_49 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="JobInvokerTests.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m9_11 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113"];
m9_12 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="context == null", span="115-115"];
m9_15 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="EnqueueNextScheduledJob(context)", span="119-119"];
m9_17 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="context.CancellationToken.IsCancellationRequested", span="123-123"];
m9_20 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="context.Sleep(_pollingDelay)", span="134-134"];
m9_13 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="throw new ArgumentNullException(''context'');", span="115-115"];
m9_14 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="var jobsEnqueued = 0", span="117-117"];
m9_16 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="jobsEnqueued++", span="121-121"];
m9_18 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="jobsEnqueued != 0", span="129-129"];
m9_19 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="Logger.InfoFormat(''{0} scheduled job(s) enqueued.'', jobsEnqueued)", span="131-131"];
m9_21 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobInvokerTests.cs", label="Exit Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113"];
m9_4 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobInvokerTests.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
m9_5 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobInvokerTests.cs", label="stateChanger == null", span="106-106"];
m9_7 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobInvokerTests.cs", label="_stateChanger = stateChanger", span="108-108"];
m9_8 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobInvokerTests.cs", label="_pollingDelay = pollingDelay", span="109-109"];
m9_6 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobInvokerTests.cs", label="throw new ArgumentNullException(''stateChanger'');", span="106-106"];
m9_9 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="JobInvokerTests.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
m9_53 [file="JobInvokerTests.cs", label="Hangfire.Server.DelayedJobScheduler", span=""];
m10_42 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_112 [cluster="Unk.EnqueueItemOnList", file="JobState.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m10_48 [cluster="HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", file="JobState.cs", label="Entry HangFire.IStateChangedFilter.OnStateChanged(IRedisClient, string, HangFire.States.JobState)", span="8-8"];
m10_49 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", file="JobState.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", span="126-126"];
m10_84 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs", label="2: var transaction = redis.CreateTransaction()", span="129-129"];
m10_85 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs", label="0: AppendHistory(transaction, jobId, state, appendToJob)", span="131-131"];
m10_86 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs", label="2: transaction.Commit()", span="132-132"];
m10_87 [cluster="HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", file="JobState.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisClient, string, HangFire.States.JobState, bool)", span="126-126"];
m10_107 [cluster="Unk.SetRangeInHash", file="JobState.cs", label="Entry Unk.SetRangeInHash", span=""];
m10_46 [cluster="System.TimeSpan.FromMinutes(double)", file="JobState.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m10_77 [cluster="Unk.Apply", file="JobState.cs", label="Entry Unk.Apply", span=""];
m10_0 [cluster="HangFire.States.JobState.JobState(string)", file="JobState.cs", label="Entry HangFire.States.JobState.JobState(string)", span="10-10"];
m10_1 [cluster="HangFire.States.JobState.JobState(string)", file="JobState.cs", label="Reason = reason", span="12-12"];
m10_2 [cluster="HangFire.States.JobState.JobState(string)", file="JobState.cs", label="Exit HangFire.States.JobState.JobState(string)", span="10-10"];
m10_103 [cluster="Unk.SetEntryInHash", file="JobState.cs", label="Entry Unk.SetEntryInHash", span=""];
m10_45 [cluster="string.Format(string, object)", file="JobState.cs", label="Entry string.Format(string, object)", span="0-0"];
m10_111 [cluster="HangFire.JobHelper.ToJson(object)", file="JobState.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="32-32"];
m10_99 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m10_83 [cluster="Unk.RemoveEntry", file="JobState.cs", label="Entry Unk.RemoveEntry", span=""];
m10_75 [cluster="Unk.OnStateUnapplied", file="JobState.cs", label="Entry Unk.OnStateUnapplied", span=""];
m10_17 [cluster="HangFire.States.ProcessingState.Descriptor.Descriptor()", file="JobState.cs", label="Entry HangFire.States.ProcessingState.Descriptor.Descriptor()", span="37-37"];
m10_18 [cluster="HangFire.States.ScheduledState.Descriptor.Descriptor()", file="JobState.cs", label="Entry HangFire.States.ScheduledState.Descriptor.Descriptor()", span="39-39"];
m10_59 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=1, file="JobState.cs", label="2: transaction.QueueCommand(x => x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId)))", span="104-105"];
m10_50 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="Entry HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", span="81-81"];
m10_51 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=1, file="JobState.cs", label="1: var oldState = redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId), ''State'')", span="86-87"];
m10_52 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="0: allowedStates.Length > 0 && !allowedStates.Contains(oldState)", span="89-89"];
m10_54 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="1: var transaction = redis.CreateTransaction()", span="94-94"];
m10_58 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="1: descriptor.Unapply(transaction, jobId)", span="101-101"];
m10_60 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="2: filters", span="107-107"];
m10_61 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="0: filter.OnStateUnapplied(transaction, jobId, oldState)", span="109-109"];
m10_62 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="1: AppendHistory(transaction, jobId, state, true)", span="113-113"];
m10_63 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="0: state.Apply(transaction, jobId)", span="115-115"];
m10_64 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="1: filters", span="117-117"];
m10_65 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="0: filter.OnStateApplied(transaction, jobId, state)", span="119-119"];
m10_55 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="0: !String.IsNullOrEmpty(oldState)", span="96-96"];
m10_56 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="2: var descriptor = GetDescriptor(oldState)", span="98-98"];
m10_53 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="1: return false;", span="91-91"];
m10_66 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="0: return transaction.Commit();", span="122-122"];
m10_57 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", color=red, community=0, file="JobState.cs", label="0: descriptor != null", span="99-99"];
m10_67 [cluster="HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", file="JobState.cs", label="Exit HangFire.States.JobState.ApplyState(IRedisClient, string, HangFire.States.JobState, System.Collections.Generic.IList<HangFire.IStateAppliedFilter>, params string[])", span="81-81"];
m10_93 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=1, file="JobState.cs", label="2: transaction.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName))", span="146-149"];
m10_88 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="JobState.cs", label="Entry HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="136-136"];
m10_89 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs", label="0: var properties = state.GetProperties()", span="139-139"];
m10_91 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs", label="1: properties.Add(''State'', state.StateName)", span="142-142"];
m10_92 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs", label="2: appendToJob", span="144-144"];
m10_94 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=1, file="JobState.cs", label="2: transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties))", span="151-153"];
m10_95 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs", label="1: properties.Add(''Reason'', state.Reason)", span="156-156"];
m10_97 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=1, file="JobState.cs", label="0: transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties)))", span="159-161"];
m10_90 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs", label="2: var now = DateTime.UtcNow", span="140-140"];
m10_96 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", color=red, community=0, file="JobState.cs", label="1: properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="157-157"];
m10_98 [cluster="HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="JobState.cs", label="Exit HangFire.States.JobState.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="136-136"];
m10_78 [cluster="Unk.OnStateApplied", file="JobState.cs", label="Entry Unk.OnStateApplied", span=""];
m10_72 [cluster="Unk.GetDescriptor", file="JobState.cs", label="Entry Unk.GetDescriptor", span=""];
m10_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_15 [cluster="HangFire.States.FailedState.Descriptor.Descriptor()", file="JobState.cs", label="Entry HangFire.States.FailedState.Descriptor.Descriptor()", span="41-41"];
m10_16 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="JobState.cs", label="Entry HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="39-39"];
m10_20 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", color=red, community=0, file="JobState.cs", label="2: Descriptors.Add(stateName, descriptor)", span="42-42"];
m10_21 [cluster="HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", file="JobState.cs", label="Exit HangFire.States.JobState.RegisterDescriptor(string, HangFire.States.JobStateDescriptor)", span="39-39"];
m10_44 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JobState.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m10_73 [cluster="Unk.Unapply", file="JobState.cs", label="Entry Unk.Unapply", span=""];
m10_26 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="JobState.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m10_43 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="JobState.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m10_27 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="JobState.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51"];
m10_28 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs", label="1: redis == null", span="54-54"];
m10_30 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs", label="0: state == null", span="55-55"];
m10_33 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=1, file="JobState.cs", label="0: redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', jobId), TimeSpan.FromMinutes(1))", span="60-61"];
m10_35 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs", label="2: var oldState = state", span="65-65"];
m10_36 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs", label="1: state = filter.OnStateChanged(redis, jobId, oldState)", span="66-66"];
m10_38 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs", label="0: AppendHistory(redis, jobId, oldState, false)", span="70-70"];
m10_40 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs", label="1: return ApplyState(redis, jobId, state, appliedFilters, allowedStates);", span="77-77"];
m10_29 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs", label="1: throw new ArgumentNullException(''redis'');", span="54-54"];
m10_31 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs", label="1: throw new ArgumentNullException(''state'');", span="55-55"];
m10_32 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=1, file="JobState.cs", label="1: var changingFilters = GlobalJobFilters.Filters\r\n                .OfType<IStateChangedFilter>().ToList()", span="57-58"];
m10_34 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs", label="1: changingFilters", span="63-63"];
m10_39 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=1, file="JobState.cs", label="1: var appliedFilters = GlobalJobFilters.Filters\r\n                    .OfType<IStateAppliedFilter>().ToList()", span="74-75"];
m10_37 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", color=red, community=0, file="JobState.cs", label="0: oldState != state", span="68-68"];
m10_41 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="JobState.cs", label="Exit HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51"];
m10_9 [cluster="HangFire.States.JobState.JobState()", file="JobState.cs", label="Entry HangFire.States.JobState.JobState()", span="31-31"];
m10_10 [cluster="HangFire.States.JobState.JobState()", color=red, community=0, file="JobState.cs", label="1: RegisterDescriptor(FailedState.Name, new FailedState.Descriptor())", span="33-33"];
m10_11 [cluster="HangFire.States.JobState.JobState()", color=red, community=0, file="JobState.cs", label="2: RegisterDescriptor(ProcessingState.Name, new ProcessingState.Descriptor())", span="34-34"];
m10_12 [cluster="HangFire.States.JobState.JobState()", color=red, community=0, file="JobState.cs", label="2: RegisterDescriptor(ScheduledState.Name, new ScheduledState.Descriptor())", span="35-35"];
m10_13 [cluster="HangFire.States.JobState.JobState()", color=red, community=0, file="JobState.cs", label="2: RegisterDescriptor(SucceededState.Name, new SucceededState.Descriptor())", span="36-36"];
m10_14 [cluster="HangFire.States.JobState.JobState()", file="JobState.cs", label="Exit HangFire.States.JobState.JobState()", span="31-31"];
m10_3 [cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="JobState.cs", label="Entry HangFire.States.JobState.Apply(IRedisTransaction, string)", span="19-19"];
m10_4 [cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="JobState.cs", label="Exit HangFire.States.JobState.Apply(IRedisTransaction, string)", span="19-19"];
m10_108 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="159-161"];
m10_81 [cluster="lambda expression", color=red, community=1, file="JobState.cs", label="0: x.RemoveEntry(\r\n                        String.Format(''hangfire:job:{0}:state'', jobId))", span="104-105"];
m10_80 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="104-105"];
m10_82 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="104-105"];
m10_101 [cluster="lambda expression", color=red, community=1, file="JobState.cs", label="0: x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName)", span="146-149"];
m10_105 [cluster="lambda expression", color=red, community=1, file="JobState.cs", label="0: x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties)", span="151-153"];
m10_109 [cluster="lambda expression", color=red, community=1, file="JobState.cs", label="0: x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties))", span="159-161"];
m10_100 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="146-149"];
m10_104 [cluster="lambda expression", file="JobState.cs", label="Entry lambda expression", span="151-153"];
m10_102 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="146-149"];
m10_106 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="151-153"];
m10_110 [cluster="lambda expression", file="JobState.cs", label="Exit lambda expression", span="159-161"];
m10_69 [cluster="Unk.Contains", file="JobState.cs", label="Entry Unk.Contains", span=""];
m10_68 [cluster="Unk.GetValueFromHash", file="JobState.cs", label="Entry Unk.GetValueFromHash", span=""];
m10_79 [cluster="Unk.Commit", file="JobState.cs", label="Entry Unk.Commit", span=""];
m10_71 [cluster="Unk.IsNullOrEmpty", file="JobState.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m10_19 [cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="JobState.cs", label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="49-49"];
m10_23 [cluster="HangFire.States.JobState.GetDescriptor(string)", file="JobState.cs", label="Entry HangFire.States.JobState.GetDescriptor(string)", span="45-45"];
m10_24 [cluster="HangFire.States.JobState.GetDescriptor(string)", color=red, community=0, file="JobState.cs", label="0: return Descriptors.ContainsKey(stateName) ? Descriptors[stateName] : null;", span="48-48"];
m10_25 [cluster="HangFire.States.JobState.GetDescriptor(string)", file="JobState.cs", label="Exit HangFire.States.JobState.GetDescriptor(string)", span="45-45"];
m10_74 [cluster="Unk.QueueCommand", file="JobState.cs", label="Entry Unk.QueueCommand", span=""];
m10_22 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="JobState.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m10_76 [cluster="Unk.AppendHistory", file="JobState.cs", label="Entry Unk.AppendHistory", span=""];
m10_47 [cluster="Unk.AcquireLock", file="JobState.cs", label="Entry Unk.AcquireLock", span=""];
m10_70 [cluster="Unk.CreateTransaction", file="JobState.cs", label="Entry Unk.CreateTransaction", span=""];
m10_5 [cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs", label="Entry HangFire.States.JobState.GetProperties()", span="22-22"];
m10_6 [cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs", label="return new Dictionary<string, string>();", span="24-24"];
m10_7 [cluster="HangFire.States.JobState.GetProperties()", file="JobState.cs", label="Exit HangFire.States.JobState.GetProperties()", span="22-22"];
m10_113 [file="JobState.cs", label="HangFire.States.JobState", span=""];
m10_114 [file="JobState.cs", label=string, span=""];
m10_115 [file="JobState.cs", label=string, span=""];
m10_116 [file="JobState.cs", label="HangFire.States.JobState", span=""];
m10_117 [file="JobState.cs", label=properties, span=""];
m12_17 [cluster="System.DateTime.Add(System.TimeSpan)", file="Perform.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m12_53 [cluster="Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", file="Perform.cs", label="Entry Hangfire.SqlServer.EnqueuedAndFetchedCountDto.EnqueuedAndFetchedCountDto()", span="18-18"];
m12_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Perform.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m12_36 [cluster="Unk.>", file="Perform.cs", label="Entry Unk.>", span=""];
m12_0 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36"];
m12_1 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="Perform.cs", label="0: storage == null", span="38-38"];
m12_2 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="Perform.cs", label="2: throw new ArgumentNullException(''storage'');", span="38-38"];
m12_3 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", color=green, community=0, file="Perform.cs", label="2: _storage = storage", span="39-39"];
m12_4 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", file="Perform.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.SqlServerJobQueueMonitoringApi(Hangfire.SqlServer.SqlServerStorage)", span="36-36"];
m12_6 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42"];
m12_7 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="Perform.cs", label="string sqlQuery = string.Format(@''select distinct(Queue) from [{0}].JobQueue'', _storage.GetSchema())", span="44-44"];
m12_8 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="Perform.cs", label=_cacheLock, span="46-46"];
m12_9 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="Perform.cs", label="_queuesCache.Count == 0 || _cacheUpdated.Add(QueuesCacheTimeout) < DateTime.UtcNow", span="48-48"];
m12_10 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="Perform.cs", label="var result = UseTransaction(connection =>\r\n                    {\r\n                        return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();\r\n                    })", span="50-53"];
m12_11 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="Perform.cs", label="_queuesCache = result", span="55-55"];
m12_12 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="Perform.cs", label="_cacheUpdated = DateTime.UtcNow", span="56-56"];
m12_13 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="Perform.cs", label="return _queuesCache.ToList();", span="59-59"];
m12_14 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", file="Perform.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetQueues()", span="42-42"];
m12_52 [cluster="Unk.Single", file="Perform.cs", label="Entry Unk.Single", span=""];
m12_25 [cluster="Unk.ToList", file="Perform.cs", label="Entry Unk.ToList", span=""];
m12_29 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63"];
m12_30 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", color=green, community=0, file="Perform.cs", label="2: string sqlQuery = string.Format(@''\r\nselect r.Id from (\r\n  select jq.Id, row_number() over (order by jq.Id) as row_num \r\n  from [{0}].JobQueue jq\r\n  where jq.Queue = @queue\r\n) as r\r\nwhere r.row_num between @start and @end'', _storage.GetSchema())", span="65-71"];
m12_31 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", color=green, community=0, file="Perform.cs", label="2: return UseTransaction(connection =>\r\n            {\r\n                return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();\r\n            });", span="73-81"];
m12_32 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="Perform.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="63-63"];
m12_44 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="89-89"];
m12_45 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="Perform.cs", label="string sqlQuery = string.Format(@''\r\nselect count(Id) from [{0}].JobQueue where [Queue] = @queue'', _storage.GetSchema())", span="91-92"];
m12_46 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="Perform.cs", label="return UseTransaction(connection =>\r\n            {\r\n                var result = connection.Query<int>(sqlQuery, new { queue = queue }).Single();\r\n\r\n                return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result,\r\n                };\r\n            });", span="94-102"];
m12_47 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="Perform.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="89-89"];
m12_18 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="105-105"];
m12_54 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="Perform.cs", label="return _storage.UseTransaction(func, IsolationLevel.ReadUncommitted);", span="107-107"];
m12_55 [cluster="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", file="Perform.cs", label="Exit Hangfire.SqlServer.SqlServerJobQueueMonitoringApi.UseTransaction<T>(System.Func<SqlConnection, T>)", span="105-105"];
m12_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Perform.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m12_15 [cluster="Hangfire.SqlServer.SqlServerStorage.GetSchema()", file="Perform.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetSchema()", span="238-238"];
m12_26 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="52-52"];
m12_34 [cluster="lambda expression", color=green, community=0, file="Perform.cs", label="0: return connection.Query<JobIdDto>(\r\n                    sqlQuery,\r\n                    new { queue = queue, start = from + 1, end = @from + perPage })\r\n                    .ToList()\r\n                    .Select(x => x.Id)\r\n                    .ToList();", span="75-80"];
m12_33 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="73-81"];
m12_35 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="73-81"];
m12_37 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="79-79"];
m12_38 [cluster="lambda expression", color=green, community=0, file="Perform.cs", label="0: x.Id", span="79-79"];
m12_39 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="79-79"];
m12_49 [cluster="lambda expression", file="Perform.cs", label="var result = connection.Query<int>(sqlQuery, new { queue = queue }).Single()", span="96-96"];
m12_21 [cluster="lambda expression", file="Perform.cs", label="return connection.Query(sqlQuery).Select(x => (string) x.Queue).ToList();", span="52-52"];
m12_20 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="50-53"];
m12_48 [cluster="lambda expression", file="Perform.cs", label="Entry lambda expression", span="94-102"];
m12_50 [cluster="lambda expression", file="Perform.cs", label="return new EnqueuedAndFetchedCountDto\r\n                {\r\n                    EnqueuedCount = result,\r\n                };", span="98-101"];
m12_22 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="50-53"];
m12_51 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="94-102"];
m12_27 [cluster="lambda expression", file="Perform.cs", label="(string) x.Queue", span="52-52"];
m12_28 [cluster="lambda expression", file="Perform.cs", label="Exit lambda expression", span="52-52"];
m12_56 [cluster="Unk.UseTransaction", file="Perform.cs", label="Entry Unk.UseTransaction", span=""];
m12_23 [cluster="Unk.Query", file="Perform.cs", label="Entry Unk.Query", span=""];
m12_16 [cluster="string.Format(string, object)", file="Perform.cs", label="Entry string.Format(string, object)", span="0-0"];
m12_24 [cluster="Unk.Select", file="Perform.cs", label="Entry Unk.Select", span=""];
m12_57 [file="Perform.cs", label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", span=""];
m12_59 [file="Perform.cs", label=string, span=""];
m12_60 [file="Perform.cs", label=int, span=""];
m12_61 [file="Perform.cs", label=int, span=""];
m12_62 [file="Perform.cs", label=sqlQuery, span=""];
m12_63 [file="Perform.cs", label=string, span=""];
m12_64 [file="Perform.cs", label=sqlQuery, span=""];
m12_58 [file="Perform.cs", label=sqlQuery, span=""];
m14_23 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label=_items, span="71-71"];
m14_19 [cluster="System.Threading.Monitor.Pulse(object)", file="PrefetchJobFetcher.cs", label="Entry System.Threading.Monitor.Pulse(object)", span="0-0"];
m14_20 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.Dispose()", span="65-65"];
m14_21 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_cts != null", span="67-67"];
m14_22 [cluster="HangFire.Server.PrefetchJobFetcher.Dispose()", file="PrefetchJobFetcher.cs", label="_cts.Cancel()", span="69-69"];
m14_33 [cluster="System.Diagnostics.Process.Process()", file="PrefetchJobFetcher.cs", label="Entry System.Diagnostics.Process.Process()", span="0-0"];
m14_18 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m14_8 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.CreateState()", span="71-71"];
m14_3 [cluster="HangFire.Server.PrefetchJobFetcher.PrefetchJobFetcher(HangFire.Server.JobFetcher, int)", file="PrefetchJobFetcher.cs", label="_prefetchThread = new Thread(Prefetch)\r\n                {\r\n                    Name = String.Format(''HangFire.Prefetch.{0}'', ''queue''),\r\n                    IsBackground = true\r\n                }", span="30-34"];
m14_17 [cluster="Hangfire.States.SucceededState.SerializeData()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.States.SucceededState.SerializeData()", span="158-158"];
m14_37 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="PrefetchJobFetcher.cs", label="Assert.True(state.IsFinal)", span="61-61"];
m14_44 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", span="88-88"];
m14_45 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m14_7 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="17-17"];
m14_24 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="PrefetchJobFetcher.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="51-51"];
m14_25 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m14_26 [cluster="Unk.False", file="PrefetchJobFetcher.cs", label="Entry Unk.False", span=""];
m14_27 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", span="47-47"];
m14_28 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="PrefetchJobFetcher.cs", label="var process = new Process()", span="49-49"];
m14_29 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="PrefetchJobFetcher.cs", label="var state = new SucceededState(process, 0, 0)", span="50-50"];
m14_30 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="PrefetchJobFetcher.cs", label="var data = state.SerializeData()", span="52-52"];
m14_31 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="PrefetchJobFetcher.cs", label="Assert.Contains(''Can not serialize'', data[''Result''])", span="54-54"];
m14_32 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.SerializeData_CorrectlyHandlesResults_ThatCantBeSerialized()", span="47-47"];
m14_63 [cluster="HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.JobFetcher.DequeueJob(System.Threading.CancellationToken)", span="26-26"];
m14_65 [cluster="System.Threading.ManualResetEventSlim.Set()", file="PrefetchJobFetcher.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m14_0 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="11-11"];
m14_1 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="PrefetchJobFetcher.cs", label="Assert.Equal(''Succeeded'', SucceededState.StateName)", span="13-13"];
m14_2 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.StateName_IsEqualToSucceeded()", span="11-11"];
m14_4 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", span="17-17"];
m14_5 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.NameProperty_ReturnsStateName()", file="PrefetchJobFetcher.cs", label="var state = CreateState()", span="19-19"];
m14_9 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48"];
m14_10 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="var payload = _items.Take(cancellationToken)", span="50-50"];
m14_11 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label=_items, span="52-52"];
m14_13 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="_jobIsReady.Reset()", span="56-56"];
m14_12 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="_items.Count == 0", span="54-54"];
m14_14 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Monitor.Pulse(_items)", span="59-59"];
m14_15 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="return payload;", span="62-62"];
m14_16 [cluster="HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="48-48"];
m14_40 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="JobState.Apply(_innerFetcher.Redis, payload.Id, enqueuedState)", span="96-96"];
m14_41 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", color=green, community=0, file="PrefetchJobFetcher.cs", label="2: JobFetcher.RemoveFromFetchedQueue(_innerFetcher.Redis, payload.Id, _innerFetcher.Queue)", span="97-97"];
m14_42 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label=Exception, span="100-100"];
m14_43 [cluster="HangFire.Server.PrefetchJobFetcher.RequeuePrefetched()", file="PrefetchJobFetcher.cs", label="_logger.Error(''An exception occured while trying to re-queue prefetched jobs. Some prefetched jobs may remain in the dequeue list.'', ex)", span="102-102"];
m14_34 [cluster="Unk.Contains", file="PrefetchJobFetcher.cs", label="Entry Unk.Contains", span=""];
m14_39 [cluster="Unk.True", file="PrefetchJobFetcher.cs", label="Entry Unk.True", span=""];
m14_38 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="PrefetchJobFetcher.cs", label="Exit Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="58-58"];
m14_49 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.PrefetchJobFetcher.Prefetch()", span="106-106"];
m14_51 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=_items, span="112-112"];
m14_52 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_items.Count >= _count && !_cts.Token.IsCancellationRequested", span="114-114"];
m14_53 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="Monitor.Wait(_items)", span="116-116"];
m14_54 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="var payload = _innerFetcher.DequeueJob(_cts.Token)", span="120-120"];
m14_55 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=_items, span="122-122"];
m14_56 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_items.Add(payload)", span="124-124"];
m14_57 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_jobIsReady.Set()", span="126-126"];
m14_60 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="_logger.Fatal(''Unexpected exception caught. Jobs will not be fetched.'', ex)", span="135-135"];
m14_50 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=true, span="110-110"];
m14_59 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=Exception, span="133-133"];
m14_58 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label=OperationCanceledException, span="130-130"];
m14_61 [cluster="HangFire.Server.PrefetchJobFetcher.Prefetch()", file="PrefetchJobFetcher.cs", label="Exit HangFire.Server.PrefetchJobFetcher.Prefetch()", span="106-106"];
m14_47 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="PrefetchJobFetcher.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m14_6 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="PrefetchJobFetcher.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m14_64 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="PrefetchJobFetcher.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m14_66 [cluster="Unk.Fatal", file="PrefetchJobFetcher.cs", label="Entry Unk.Fatal", span=""];
m14_35 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="PrefetchJobFetcher.cs", label="Entry Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="58-58"];
m14_46 [cluster="HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", file="PrefetchJobFetcher.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, string, HangFire.States.JobState, params string[])", span="51-51"];
m14_36 [cluster="Hangfire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="PrefetchJobFetcher.cs", label="var state = CreateState()", span="60-60"];
m14_62 [cluster="System.Threading.Monitor.Wait(object)", file="PrefetchJobFetcher.cs", label="Entry System.Threading.Monitor.Wait(object)", span="0-0"];
m14_48 [cluster="Unk.Error", file="PrefetchJobFetcher.cs", label="Entry Unk.Error", span=""];
m14_67 [file="PrefetchJobFetcher.cs", label="HangFire.Server.PrefetchJobFetcher", span=""];
m15_12 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m15_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SchedulePoller.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m15_6 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", span="16-16"];
m15_7 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label=true, span="18-18"];
m15_8 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="cancellationToken.ThrowIfCancellationRequested()", span="20-20"];
m15_9 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="InnerComponent.Execute(cancellationToken)", span="21-21"];
m15_10 [cluster="Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs", label="Exit Hangfire.Server.InfiniteLoopComponent.Execute(System.Threading.CancellationToken)", span="16-16"];
m15_13 [cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", file="SchedulePoller.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.ToString()", span="25-25"];
m15_14 [cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", file="SchedulePoller.cs", label="return InnerComponent.ToString();", span="27-27"];
m15_15 [cluster="Hangfire.Server.InfiniteLoopComponent.ToString()", file="SchedulePoller.cs", label="Exit Hangfire.Server.InfiniteLoopComponent.ToString()", span="25-25"];
m15_0 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="SchedulePoller.cs", label="Entry Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="8-8"];
m15_1 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="SchedulePoller.cs", label="innerComponent == null", span="10-10"];
m15_3 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="SchedulePoller.cs", label="InnerComponent = innerComponent", span="11-11"];
m15_2 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="SchedulePoller.cs", label="throw new ArgumentNullException(''innerComponent'');", span="10-10"];
m15_4 [cluster="Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", file="SchedulePoller.cs", label="Exit Hangfire.Server.InfiniteLoopComponent.InfiniteLoopComponent(Hangfire.Server.IServerComponent)", span="8-8"];
m15_16 [cluster="object.ToString()", file="SchedulePoller.cs", label="Entry object.ToString()", span="0-0"];
m15_11 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="SchedulePoller.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m15_17 [file="SchedulePoller.cs", label="Hangfire.Server.InfiniteLoopComponent", span=""];
m18_90 [cluster="System.Collections.Generic.List<T>.List()", file="StateSteps.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m18_353 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="StateSteps.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m18_114 [cluster="long.Parse(string)", file="StateSteps.cs", label="Entry long.Parse(string)", span="0-0"];
m18_368 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="StateSteps.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m18_91 [cluster="Hangfire.Storage.Monitoring.ServerDto.ServerDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.ServerDto.ServerDto()", span="21-21"];
m18_45 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="484-484"];
m18_354 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="string jobsSql = string.Format(@''\r\nselect * from (\r\n  select j.*, s.Reason as StateReason, s.Data as StateData, row_number() over (order by j.Id desc) as row_num\r\n  from [{0}].Job j with (forceseek)\r\n  left join [{0}].State s on j.StateId = s.Id\r\n  where j.StateName = @stateName\r\n) as j where j.row_num between @start and @end\r\n'', _storage.GetSchemaName())", span="491-498"];
m18_355 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="var jobs = connection.Query<SqlJob>(\r\n                        jobsSql,\r\n                        new { stateName = stateName, start = @from + 1, end = @from + count })\r\n                        .ToList()", span="500-503"];
m18_356 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="return DeserializeJobs(jobs, selector);", span="505-505"];
m18_357 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetJobs<TDto>(SqlConnection, int, int, string, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="484-484"];
m18_369 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="StateSteps.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m18_27 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="66-66"];
m18_28 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="StateSteps.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, FailedState.StateName));", span="68-69"];
m18_29 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedCount()", span="66-66"];
m18_142 [cluster="Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="18-18"];
m18_102 [cluster="Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="23-23"];
m18_358 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="508-508"];
m18_359 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="var result = new List<KeyValuePair<string, TDto>>(jobs.Count)", span="512-512"];
m18_360 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label=jobs, span="514-514"];
m18_363 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="var dto = selector(job, DeserializeJob(job.InvocationData, job.Arguments), stateData)", span="521-521"];
m18_364 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="result.Add(new KeyValuePair<string, TDto>(\r\n                    job.Id.ToString(), dto))", span="523-524"];
m18_365 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="return new JobList<TDto>(result);", span="527-527"];
m18_361 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="var deserializedData = JobHelper.FromJson<Dictionary<string, string>>(job.StateData)", span="516-516"];
m18_362 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="var stateData = deserializedData != null\r\n                    ? new Dictionary<string, string>(deserializedData, StringComparer.OrdinalIgnoreCase)\r\n                    : null", span="517-519"];
m18_366 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJobs<TDto>(System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>, System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>)", span="508-508"];
m18_14 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="455-455"];
m18_341 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="StateSteps.cs", label="var sqlQuery = _jobListLimit.HasValue\r\n                ? string.Format(@''select count(j.Id) from (select top (@limit) Id from [{0}].Job where StateName = @state) as j'', _storage.GetSchemaName())\r\n                : string.Format(@''select count(Id) from [{0}].Job where StateName = @state'', _storage.GetSchemaName())", span="457-459"];
m18_342 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="StateSteps.cs", label="var count = connection.Query<int>(\r\n                 sqlQuery,\r\n                 new { state = stateName, limit = _jobListLimit })\r\n                 .Single()", span="461-464"];
m18_343 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="StateSteps.cs", label="return count;", span="466-466"];
m18_344 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetNumberOfJobsByStateName(SqlConnection, string)", span="455-455"];
m18_229 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300"];
m18_230 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="StateSteps.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, DeletedState.StateName));", span="302-303"];
m18_231 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedListCount()", span="300-300"];
m18_381 [cluster="Unk.ToString", file="StateSteps.cs", label="Entry Unk.ToString", span=""];
m18_10 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="423-423"];
m18_329 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="StateSteps.cs", label="return _storage.UseTransaction(action, IsolationLevel.ReadUncommitted);", span="425-425"];
m18_330 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.UseConnection<T>(System.Func<SqlConnection, T>)", span="423-423"];
m18_241 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="StateSteps.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m18_188 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246"];
m18_189 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="StateSteps.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''failed''));", span="248-249"];
m18_190 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlyFailedJobs()", span="246-246"];
m18_336 [cluster="Unk.DeserializeJobs", file="StateSteps.cs", label="Entry Unk.DeserializeJobs", span=""];
m18_235 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306"];
m18_236 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateSteps.cs", label="string sql = string.Format(@''\r\nselect count(Id) from [{0}].Job where StateName = N'Enqueued';\r\nselect count(Id) from [{0}].Job where StateName = N'Failed';\r\nselect count(Id) from [{0}].Job where StateName = N'Processing';\r\nselect count(Id) from [{0}].Job where StateName = N'Scheduled';\r\nselect count(Id) from [{0}].Server;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from [{0}].Counter where [Key] = N'stats:succeeded'\r\n    union all\r\n    select [Value] from [{0}].AggregatedCounter where [Key] = N'stats:succeeded'\r\n) as s;\r\nselect sum(s.[Value]) from (\r\n    select sum([Value]) as [Value] from [{0}].Counter where [Key] = N'stats:deleted'\r\n    union all\r\n    select [Value] from [{0}].AggregatedCounter where [Key] = N'stats:deleted'\r\n) as s;\r\nselect count(*) from [{0}].[Set] where [Key] = N'recurring-jobs';\r\n'', _storage.GetSchemaName())", span="308-325"];
m18_237 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateSteps.cs", label="var statistics = UseConnection(connection =>\r\n            {\r\n                var stats = new StatisticsDto();\r\n                using (var multi = connection.QueryMultiple(sql))\r\n                {\r\n                    stats.Enqueued = multi.Read<int>().Single();\r\n                    stats.Failed = multi.Read<int>().Single();\r\n                    stats.Processing = multi.Read<int>().Single();\r\n                    stats.Scheduled = multi.Read<int>().Single();\r\n\r\n                    stats.Servers = multi.Read<int>().Single();\r\n\r\n                    stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n                    stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0;\r\n\r\n                    stats.Recurring = multi.Read<int>().Single();\r\n                }\r\n                return stats;\r\n            })", span="327-345"];
m18_238 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateSteps.cs", label="statistics.Queues = _storage.QueueProviders\r\n                .SelectMany(x => x.GetJobQueueMonitoringApi().GetQueues())\r\n                .Count()", span="347-349"];
m18_239 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateSteps.cs", label="return statistics;", span="351-351"];
m18_240 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetStatistics()", span="306-306"];
m18_176 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetFetchedJobIds(string, int, int)", span="24-24"];
m18_171 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232"];
m18_172 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="StateSteps.cs", label="var queueApi = GetQueueApi(queue)", span="234-234"];
m18_173 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="StateSteps.cs", label="var fetchedJobIds = queueApi.GetFetchedJobIds(queue, from, perPage)", span="235-235"];
m18_174 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="StateSteps.cs", label="return UseConnection(connection => FetchedJobs(connection, fetchedJobIds));", span="237-237"];
m18_175 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(string, int, int)", span="232-232"];
m18_187 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354"];
m18_262 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="var endDate = DateTime.UtcNow", span="358-358"];
m18_269 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH'')), x => x)", span="366-366"];
m18_270 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="return GetTimelineStats(connection, keyMaps);", span="368-368"];
m18_263 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="var dates = new List<DateTime>()", span="359-359"];
m18_266 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="dates.Add(endDate)", span="362-362"];
m18_267 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="endDate = endDate.AddHours(-1)", span="363-363"];
m18_264 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="var i = 0", span="360-360"];
m18_265 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="i < 24", span="360-360"];
m18_268 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="i++", span="360-360"];
m18_271 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetHourlyTimelineStats(SqlConnection, string)", span="354-354"];
m18_314 [cluster="Unk.ContainsKey", file="StateSteps.cs", label="Entry Unk.ContainsKey", span=""];
m18_6 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateSteps.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_113 [cluster="Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="23-23"];
m18_160 [cluster="Unk.EnqueuedJobs", file="StateSteps.cs", label="Entry Unk.EnqueuedJobs", span=""];
m18_382 [cluster="Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.FetchedJobDto.FetchedJobDto()", span="21-21"];
m18_261 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetQueues()", span="22-22"];
m18_166 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedJobIds(string, int, int)", span="23-23"];
m18_146 [cluster="Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueProvider.GetJobQueueMonitoringApi()", span="21-21"];
m18_50 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m18_370 [cluster="int.ToString()", file="StateSteps.cs", label="Entry int.ToString()", span="0-0"];
m18_331 [cluster="Unk.UseTransaction", file="StateSteps.cs", label="Entry Unk.UseTransaction", span=""];
m18_125 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195"];
m18_126 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateSteps.cs", label="var tuples = _storage.QueueProviders\r\n                .Select(x => x.GetJobQueueMonitoringApi())\r\n                .SelectMany(x => x.GetQueues(), (monitoring, queue) => new { Monitoring = monitoring, Queue = queue })\r\n                .OrderBy(x => x.Queue)\r\n                .ToArray()", span="197-201"];
m18_127 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateSteps.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(tuples.Length)", span="203-203"];
m18_128 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateSteps.cs", label=tuples, span="205-205"];
m18_132 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateSteps.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = tuple.Queue,\r\n                    Length = counters.EnqueuedCount ?? 0,\r\n                    Fetched = counters.FetchedCount,\r\n                    FirstJobs = firstJobs\r\n                })", span="212-218"];
m18_133 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateSteps.cs", label="return result;", span="221-221"];
m18_129 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateSteps.cs", label="var enqueuedJobIds = tuple.Monitoring.GetEnqueuedJobIds(tuple.Queue, 0, 5)", span="207-207"];
m18_130 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateSteps.cs", label="var counters = tuple.Monitoring.GetEnqueuedAndFetchedCount(tuple.Queue)", span="208-208"];
m18_131 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateSteps.cs", label="var firstJobs = UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds))", span="210-210"];
m18_134 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Queues()", span="195-195"];
m18_138 [cluster="Unk.ToArray", file="StateSteps.cs", label="Entry Unk.ToArray", span=""];
m18_292 [cluster="System.DateTime.AddDays(double)", file="StateSteps.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m18_222 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m18_352 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="StateSteps.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m18_0 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36"];
m18_1 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="StateSteps.cs", label="storage == null", span="38-38"];
m18_3 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="StateSteps.cs", label="_storage = storage", span="40-40"];
m18_4 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="StateSteps.cs", label="_jobListLimit = jobListLimit", span="41-41"];
m18_2 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="StateSteps.cs", label="throw new ArgumentNullException(''storage'');", span="38-38"];
m18_5 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="36-36"];
m18_115 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181"];
m18_116 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="StateSteps.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }));", span="183-192"];
m18_117 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeletedJobs(int, int)", span="181-181"];
m18_273 [cluster="Unk.GetTimelineStats", file="StateSteps.cs", label="Entry Unk.GetTimelineStats", span=""];
m18_221 [cluster="Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.StateHistoryDto.StateHistoryDto()", span="21-21"];
m18_337 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="445-452"];
m18_11 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="46-47"];
m18_12 [cluster="lambda expression", file="StateSteps.cs", label="GetNumberOfJobsByStateName(connection, ScheduledState.StateName)", span="47-47"];
m18_13 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="46-47"];
m18_30 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="68-69"];
m18_31 [cluster="lambda expression", file="StateSteps.cs", label="GetNumberOfJobsByStateName(connection, FailedState.StateName)", span="69-69"];
m18_32 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="68-69"];
m18_36 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="74-75"];
m18_37 [cluster="lambda expression", file="StateSteps.cs", label="GetNumberOfJobsByStateName(connection, ProcessingState.StateName)", span="75-75"];
m18_38 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="74-75"];
m18_43 [cluster="lambda expression", color=red, community=0, file="StateSteps.cs", label="2: GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                })", span="80-89"];
m18_42 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="80-89"];
m18_44 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="80-89"];
m18_46 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="84-89"];
m18_47 [cluster="lambda expression", color=red, community=0, file="StateSteps.cs", label="1: new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }", span="84-89"];
m18_48 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="84-89"];
m18_56 [cluster="lambda expression", color=red, community=0, file="StateSteps.cs", label="2: GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                })", span="94-103"];
m18_55 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="94-103"];
m18_57 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="94-103"];
m18_58 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="98-103"];
m18_59 [cluster="lambda expression", color=red, community=0, file="StateSteps.cs", label="2: new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }", span="98-103"];
m18_60 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="98-103"];
m18_65 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="108-109"];
m18_66 [cluster="lambda expression", file="StateSteps.cs", label="GetTimelineStats(connection, ''succeeded'')", span="109-109"];
m18_67 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="108-109"];
m18_72 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="114-115"];
m18_73 [cluster="lambda expression", file="StateSteps.cs", label="GetTimelineStats(connection, ''failed'')", span="115-115"];
m18_74 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="114-115"];
m18_79 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="120-142"];
m18_80 [cluster="lambda expression", file="StateSteps.cs", label="var servers = connection.Query<Entities.Server>(\r\n                    string.Format(@''select * from [{0}].Server'', _storage.GetSchemaName()))\r\n                    .ToList()", span="122-124"];
m18_81 [cluster="lambda expression", file="StateSteps.cs", label="var result = new List<ServerDto>()", span="126-126"];
m18_82 [cluster="lambda expression", file="StateSteps.cs", label=servers, span="128-128"];
m18_84 [cluster="lambda expression", file="StateSteps.cs", label="result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    })", span="131-138"];
m18_85 [cluster="lambda expression", file="StateSteps.cs", label="return result;", span="141-141"];
m18_83 [cluster="lambda expression", file="StateSteps.cs", label="var data = JobHelper.FromJson<ServerData>(server.Data)", span="130-130"];
m18_86 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="120-142"];
m18_97 [cluster="lambda expression", file="StateSteps.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                })", span="147-160"];
m18_96 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="147-160"];
m18_98 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="147-160"];
m18_99 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="152-160"];
m18_100 [cluster="lambda expression", file="StateSteps.cs", label="new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }", span="152-160"];
m18_101 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="152-160"];
m18_108 [cluster="lambda expression", file="StateSteps.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                })", span="165-178"];
m18_107 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="165-178"];
m18_109 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="165-178"];
m18_110 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="170-178"];
m18_111 [cluster="lambda expression", file="StateSteps.cs", label="new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }", span="170-178"];
m18_112 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="170-178"];
m18_119 [cluster="lambda expression", file="StateSteps.cs", label="GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                DeletedState.StateName,\r\n                (sqlJob, job, stateData) => new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                })", span="183-192"];
m18_118 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="183-192"];
m18_120 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="183-192"];
m18_121 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="188-192"];
m18_122 [cluster="lambda expression", file="StateSteps.cs", label="new DeletedJobDto\r\n                {\r\n                    Job = job,\r\n                    DeletedAt = JobHelper.DeserializeNullableDateTime(stateData[''DeletedAt''])\r\n                }", span="188-192"];
m18_123 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="188-192"];
m18_143 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="198-198"];
m18_147 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="199-199"];
m18_151 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="199-199"];
m18_154 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="200-200"];
m18_158 [cluster="lambda expression", file="StateSteps.cs", label="EnqueuedJobs(connection, enqueuedJobIds)", span="210-210"];
m18_157 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="210-210"];
m18_144 [cluster="lambda expression", file="StateSteps.cs", label="x.GetJobQueueMonitoringApi()", span="198-198"];
m18_145 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="198-198"];
m18_148 [cluster="lambda expression", file="StateSteps.cs", label="x.GetQueues()", span="199-199"];
m18_149 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="199-199"];
m18_152 [cluster="lambda expression", file="StateSteps.cs", label="new { Monitoring = monitoring, Queue = queue }", span="199-199"];
m18_153 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="199-199"];
m18_155 [cluster="lambda expression", file="StateSteps.cs", label="x.Queue", span="200-200"];
m18_156 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="200-200"];
m18_159 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="210-210"];
m18_168 [cluster="lambda expression", file="StateSteps.cs", label="EnqueuedJobs(connection, enqueuedJobIds)", span="229-229"];
m18_167 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="229-229"];
m18_169 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="229-229"];
m18_178 [cluster="lambda expression", file="StateSteps.cs", label="FetchedJobs(connection, fetchedJobIds)", span="237-237"];
m18_177 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="237-237"];
m18_179 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="237-237"];
m18_184 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="242-243"];
m18_185 [cluster="lambda expression", file="StateSteps.cs", label="GetHourlyTimelineStats(connection, ''succeeded'')", span="243-243"];
m18_186 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="242-243"];
m18_191 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="248-249"];
m18_192 [cluster="lambda expression", file="StateSteps.cs", label="GetHourlyTimelineStats(connection, ''failed'')", span="249-249"];
m18_193 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="248-249"];
m18_199 [cluster="lambda expression", file="StateSteps.cs", label="var multi = connection.QueryMultiple(sql, new { id = jobId })", span="262-262"];
m18_197 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="254-291"];
m18_198 [cluster="lambda expression", file="StateSteps.cs", label="string sql = string.Format(@''\r\nselect * from [{0}].Job where Id = @id\r\nselect * from [{0}].JobParameter where JobId = @id\r\nselect * from [{0}].State where JobId = @id order by Id desc'', _storage.GetSchemaName())", span="257-260"];
m18_200 [cluster="lambda expression", file="StateSteps.cs", label="var job = multi.Read<SqlJob>().SingleOrDefault()", span="264-264"];
m18_203 [cluster="lambda expression", file="StateSteps.cs", label="var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value)", span="267-267"];
m18_204 [cluster="lambda expression", file="StateSteps.cs", label="var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList()", span="268-280"];
m18_201 [cluster="lambda expression", file="StateSteps.cs", label="job == null", span="265-265"];
m18_205 [cluster="lambda expression", file="StateSteps.cs", label="return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };", span="282-289"];
m18_202 [cluster="lambda expression", file="StateSteps.cs", label="return null;", span="265-265"];
m18_212 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="267-267"];
m18_215 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="267-267"];
m18_218 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="271-279"];
m18_206 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="254-291"];
m18_213 [cluster="lambda expression", file="StateSteps.cs", label="x.Name", span="267-267"];
m18_214 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="267-267"];
m18_216 [cluster="lambda expression", file="StateSteps.cs", label="x.Value", span="267-267"];
m18_217 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="267-267"];
m18_219 [cluster="lambda expression", file="StateSteps.cs", label="new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            }", span="271-279"];
m18_220 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="271-279"];
m18_226 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="296-297"];
m18_227 [cluster="lambda expression", file="StateSteps.cs", label="GetNumberOfJobsByStateName(connection, SucceededState.StateName)", span="297-297"];
m18_228 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="296-297"];
m18_232 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="302-303"];
m18_233 [cluster="lambda expression", file="StateSteps.cs", label="GetNumberOfJobsByStateName(connection, DeletedState.StateName)", span="303-303"];
m18_234 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="302-303"];
m18_245 [cluster="lambda expression", file="StateSteps.cs", label="var multi = connection.QueryMultiple(sql)", span="330-330"];
m18_243 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="327-345"];
m18_258 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="348-348"];
m18_244 [cluster="lambda expression", file="StateSteps.cs", label="var stats = new StatisticsDto()", span="329-329"];
m18_246 [cluster="lambda expression", file="StateSteps.cs", label="stats.Enqueued = multi.Read<int>().Single()", span="332-332"];
m18_247 [cluster="lambda expression", file="StateSteps.cs", label="stats.Failed = multi.Read<int>().Single()", span="333-333"];
m18_248 [cluster="lambda expression", file="StateSteps.cs", label="stats.Processing = multi.Read<int>().Single()", span="334-334"];
m18_249 [cluster="lambda expression", file="StateSteps.cs", label="stats.Scheduled = multi.Read<int>().Single()", span="335-335"];
m18_250 [cluster="lambda expression", file="StateSteps.cs", label="stats.Servers = multi.Read<int>().Single()", span="337-337"];
m18_251 [cluster="lambda expression", file="StateSteps.cs", label="stats.Succeeded = multi.Read<long?>().SingleOrDefault() ?? 0", span="339-339"];
m18_252 [cluster="lambda expression", file="StateSteps.cs", label="stats.Deleted = multi.Read<long?>().SingleOrDefault() ?? 0", span="340-340"];
m18_253 [cluster="lambda expression", file="StateSteps.cs", label="stats.Recurring = multi.Read<int>().Single()", span="342-342"];
m18_254 [cluster="lambda expression", file="StateSteps.cs", label="return stats;", span="344-344"];
m18_255 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="327-345"];
m18_259 [cluster="lambda expression", file="StateSteps.cs", label="x.GetJobQueueMonitoringApi().GetQueues()", span="348-348"];
m18_260 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="348-348"];
m18_275 [cluster="lambda expression", file="StateSteps.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="366-366"];
m18_274 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="366-366"];
m18_279 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="366-366"];
m18_276 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="366-366"];
m18_280 [cluster="lambda expression", file="StateSteps.cs", label=x, span="366-366"];
m18_281 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="366-366"];
m18_294 [cluster="lambda expression", file="StateSteps.cs", label="String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd''))", span="383-383"];
m18_293 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="383-383"];
m18_296 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="383-383"];
m18_295 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="383-383"];
m18_297 [cluster="lambda expression", file="StateSteps.cs", label=x, span="383-383"];
m18_298 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="383-383"];
m18_318 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="398-398"];
m18_321 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="398-398"];
m18_319 [cluster="lambda expression", file="StateSteps.cs", label="(string)x.Key", span="398-398"];
m18_320 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="398-398"];
m18_322 [cluster="lambda expression", file="StateSteps.cs", label="(long)x.Count", span="398-398"];
m18_323 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="398-398"];
m18_338 [cluster="lambda expression", file="StateSteps.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                }", span="445-452"];
m18_339 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="445-452"];
m18_92 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateSteps.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m18_89 [cluster="Unk.ToList", file="StateSteps.cs", label="Entry Unk.ToList", span=""];
m18_317 [cluster="System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", file="StateSteps.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ElementAt<TSource>(int)", span="0-0"];
m18_22 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="58-58"];
m18_23 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="StateSteps.cs", label="var queueApi = GetQueueApi(queue)", span="60-60"];
m18_24 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="StateSteps.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="61-61"];
m18_25 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="StateSteps.cs", label="return counters.FetchedCount ?? 0;", span="63-63"];
m18_26 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedCount(string)", span="58-58"];
m18_371 [cluster="Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="22-22"];
m18_61 [cluster="Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.ScheduledJobDto.ScheduledJobDto()", span="23-23"];
m18_277 [cluster="System.DateTime.ToString(string)", file="StateSteps.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m18_104 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163"];
m18_105 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="StateSteps.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                SucceededState.StateName,\r\n                (sqlJob, job, stateData) => new SucceededJobDto\r\n                {\r\n                    Job = job,\r\n                    Result = stateData.ContainsKey(''Result'') ? stateData[''Result''] : null,\r\n                    TotalDuration = stateData.ContainsKey(''PerformanceDuration'') && stateData.ContainsKey(''Latency'')\r\n                        ? (long?)long.Parse(stateData[''PerformanceDuration'']) + (long?)long.Parse(stateData[''Latency''])\r\n                        : null,\r\n                    SucceededAt = JobHelper.DeserializeNullableDateTime(stateData[''SucceededAt''])\r\n                }));", span="165-178"];
m18_106 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededJobs(int, int)", span="163-163"];
m18_139 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="StateSteps.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m18_21 [cluster="Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.IPersistentJobQueueMonitoringApi.GetEnqueuedAndFetchedCount(string)", span="25-25"];
m18_124 [cluster="Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.DeletedJobDto.DeletedJobDto()", span="7-7"];
m18_180 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="530-530"];
m18_372 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="string fetchedJobsSql = string.Format(@''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom [{0}].Job j\r\nleft join [{0}].State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds'', _storage.GetSchemaName())", span="534-538"];
m18_373 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="var jobs = connection.Query<SqlJob>(\r\n                fetchedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="540-543"];
m18_374 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="var result = new List<KeyValuePair<string, FetchedJobDto>>(jobs.Count)", span="545-545"];
m18_375 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label=jobs, span="547-547"];
m18_376 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="result.Add(new KeyValuePair<string, FetchedJobDto>(\r\n                    job.Id.ToString(),\r\n                    new FetchedJobDto\r\n                    {\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        State = job.StateName,\r\n                    }))", span="549-555"];
m18_377 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="return new JobList<FetchedJobDto>(result);", span="558-558"];
m18_378 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FetchedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="530-530"];
m18_380 [cluster="KeyValuePair<string, FetchedJobDto>.cstr", file="StateSteps.cs", label="Entry KeyValuePair<string, FetchedJobDto>.cstr", span=""];
m18_194 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252"];
m18_195 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="StateSteps.cs", label="return UseConnection(connection =>\r\n            {\r\n\r\n                string sql = string.Format(@''\r\nselect * from [{0}].Job where Id = @id\r\nselect * from [{0}].JobParameter where JobId = @id\r\nselect * from [{0}].State where JobId = @id order by Id desc'', _storage.GetSchemaName());\r\n\r\n                using (var multi = connection.QueryMultiple(sql, new { id = jobId }))\r\n                {\r\n                    var job = multi.Read<SqlJob>().SingleOrDefault();\r\n                    if (job == null) return null;\r\n\r\n                    var parameters = multi.Read<JobParameter>().ToDictionary(x => x.Name, x => x.Value);\r\n                    var history =\r\n                        multi.Read<SqlState>()\r\n                            .ToList()\r\n                            .Select(x => new StateHistoryDto\r\n                            {\r\n                                StateName = x.Name,\r\n                                CreatedAt = x.CreatedAt,\r\n                                Reason = x.Reason,\r\n                                Data = new Dictionary<string, string>(\r\n                                    JobHelper.FromJson<Dictionary<string, string>>(x.Data),\r\n                                    StringComparer.OrdinalIgnoreCase),\r\n                            })\r\n                            .ToList();\r\n\r\n                    return new JobDetailsDto\r\n                    {\r\n                        CreatedAt = job.CreatedAt,\r\n                        ExpireAt = job.ExpireAt,\r\n                        Job = DeserializeJob(job.InvocationData, job.Arguments),\r\n                        History = history,\r\n                        Properties = parameters\r\n                    };\r\n                }\r\n            });", span="254-291"];
m18_196 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.JobDetails(string)", span="252-252"];
m18_313 [cluster="Unk.Query", file="StateSteps.cs", label="Entry Unk.Query", span=""];
m18_7 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="44-44"];
m18_8 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="StateSteps.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ScheduledState.StateName));", span="46-47"];
m18_9 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledCount()", span="44-44"];
m18_170 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="428-428"];
m18_332 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="string enqueuedJobsSql = string.Format(@''\r\nselect j.*, s.Reason as StateReason, s.Data as StateData \r\nfrom [{0}].Job j\r\nleft join [{0}].State s on s.Id = j.StateId\r\nwhere j.Id in @jobIds'', _storage.GetSchemaName())", span="432-436"];
m18_333 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="var jobs = connection.Query<SqlJob>(\r\n                enqueuedJobsSql,\r\n                new { jobIds = jobIds })\r\n                .ToList()", span="438-441"];
m18_334 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="return DeserializeJobs(\r\n                jobs,\r\n                (sqlJob, job, stateData) => new EnqueuedJobDto\r\n                {\r\n                    Job = job,\r\n                    State = sqlJob.StateName,\r\n                    EnqueuedAt = sqlJob.StateName == EnqueuedState.StateName\r\n                        ? JobHelper.DeserializeNullableDateTime(stateData[''EnqueuedAt''])\r\n                        : null\r\n                });", span="443-452"];
m18_335 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(SqlConnection, System.Collections.Generic.IEnumerable<int>)", span="428-428"];
m18_315 [cluster="Unk.Add", file="StateSteps.cs", label="Entry Unk.Add", span=""];
m18_223 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294"];
m18_224 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="StateSteps.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, SucceededState.StateName));", span="296-297"];
m18_225 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededListCount()", span="294-294"];
m18_51 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="StateSteps.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m18_340 [cluster="Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="23-23"];
m18_379 [cluster="List<KeyValuePair<string, FetchedJobDto>>.cstr", file="StateSteps.cs", label="Entry List<KeyValuePair<string, FetchedJobDto>>.cstr", span=""];
m18_272 [cluster="System.DateTime.AddHours(double)", file="StateSteps.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m18_93 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145"];
m18_94 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="StateSteps.cs", label="return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from,\r\n                count,\r\n                FailedState.StateName,\r\n                (sqlJob, job, stateData) => new FailedJobDto\r\n                {\r\n                    Job = job,\r\n                    Reason = sqlJob.StateReason,\r\n                    ExceptionDetails = stateData[''ExceptionDetails''],\r\n                    ExceptionMessage = stateData[''ExceptionMessage''],\r\n                    ExceptionType = stateData[''ExceptionType''],\r\n                    FailedAt = JobHelper.DeserializeNullableDateTime(stateData[''FailedAt''])\r\n                }));", span="147-160"];
m18_95 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedJobs(int, int)", span="145-145"];
m18_345 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="469-469"];
m18_346 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateSteps.cs", label="var data = JobHelper.FromJson<InvocationData>(invocationData)", span="471-471"];
m18_347 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateSteps.cs", label="data.Arguments = arguments", span="472-472"];
m18_348 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateSteps.cs", label="return data.Deserialize();", span="476-476"];
m18_349 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateSteps.cs", label=JobLoadException, span="478-478"];
m18_350 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateSteps.cs", label="return null;", span="480-480"];
m18_351 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.DeserializeJob(string, string)", span="469-469"];
m18_75 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="118-118"];
m18_76 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="StateSteps.cs", label="return UseConnection<IList<ServerDto>>(connection =>\r\n            {\r\n                var servers = connection.Query<Entities.Server>(\r\n                    string.Format(@''select * from [{0}].Server'', _storage.GetSchemaName()))\r\n                    .ToList();\r\n\r\n                var result = new List<ServerDto>();\r\n\r\n                foreach (var server in servers)\r\n                {\r\n                    var data = JobHelper.FromJson<ServerData>(server.Data);\r\n                    result.Add(new ServerDto\r\n                    {\r\n                        Name = server.Id,\r\n                        Heartbeat = server.LastHeartbeat,\r\n                        Queues = data.Queues,\r\n                        StartedAt = data.StartedAt.HasValue ? data.StartedAt.Value : DateTime.MinValue,\r\n                        WorkersCount = data.WorkerCount\r\n                    });\r\n                }\r\n\r\n                return result;\r\n            });", span="120-142"];
m18_77 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.Servers()", span="118-118"];
m18_207 [cluster="Unk.QueryMultiple", file="StateSteps.cs", label="Entry Unk.QueryMultiple", span=""];
m18_20 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="415-415"];
m18_324 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="StateSteps.cs", label="var provider = _storage.QueueProviders.GetProvider(queueName)", span="417-417"];
m18_325 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="StateSteps.cs", label="var monitoringApi = provider.GetJobQueueMonitoringApi()", span="418-418"];
m18_326 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="StateSteps.cs", label="return monitoringApi;", span="420-420"];
m18_327 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetQueueApi(string)", span="415-415"];
m18_39 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78"];
m18_40 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", color=red, community=0, file="StateSteps.cs", label="2: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ProcessingState.StateName,\r\n                (sqlJob, job, stateData) => new ProcessingJobDto\r\n                {\r\n                    Job = job,\r\n                    ServerId = stateData.ContainsKey(''ServerId'') ? stateData[''ServerId''] : stateData[''ServerName''],\r\n                    StartedAt = JobHelper.DeserializeDateTime(stateData[''StartedAt'']),\r\n                }));", span="80-89"];
m18_41 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingJobs(int, int)", span="78-78"];
m18_52 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92"];
m18_53 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", color=red, community=0, file="StateSteps.cs", label="2: return UseConnection(connection => GetJobs(\r\n                connection,\r\n                from, count,\r\n                ScheduledState.StateName,\r\n                (sqlJob, job, stateData) => new ScheduledJobDto\r\n                {\r\n                    Job = job,\r\n                    EnqueueAt = JobHelper.DeserializeDateTime(stateData[''EnqueueAt'']),\r\n                    ScheduledAt = JobHelper.DeserializeDateTime(stateData[''ScheduledAt''])\r\n                }));", span="94-103"];
m18_54 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ScheduledJobs(int, int)", span="92-92"];
m18_210 [cluster="Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="22-22"];
m18_69 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="112-112"];
m18_70 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="StateSteps.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''failed''));", span="114-115"];
m18_71 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.FailedByDatesCount()", span="112-112"];
m18_181 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240"];
m18_182 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="StateSteps.cs", label="return UseConnection(connection => \r\n                GetHourlyTimelineStats(connection, ''succeeded''));", span="242-243"];
m18_183 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.HourlySucceededJobs()", span="240-240"];
m18_278 [cluster="string.Format(string, object, object)", file="StateSteps.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m18_328 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m18_136 [cluster="Unk.SelectMany", file="StateSteps.cs", label="Entry Unk.SelectMany", span=""];
m18_209 [cluster="Unk.ToDictionary", file="StateSteps.cs", label="Entry Unk.ToDictionary", span=""];
m18_88 [cluster="string.Format(string, object)", file="StateSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m18_87 [cluster="Hangfire.SqlServer.SqlServerStorage.GetSchemaName()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerStorage.GetSchemaName()", span="238-238"];
m18_78 [cluster="Unk.>", file="StateSteps.cs", label="Entry Unk.>", span=""];
m18_140 [cluster="Unk.GetEnqueuedJobIds", file="StateSteps.cs", label="Entry Unk.GetEnqueuedJobIds", span=""];
m18_103 [cluster="Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", file="StateSteps.cs", label="Entry Hangfire.Common.JobHelper.DeserializeNullableDateTime(string)", span="84-84"];
m18_137 [cluster="Unk.OrderBy", file="StateSteps.cs", label="Entry Unk.OrderBy", span=""];
m18_141 [cluster="Unk.GetEnqueuedAndFetchedCount", file="StateSteps.cs", label="Entry Unk.GetEnqueuedAndFetchedCount", span=""];
m18_15 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50"];
m18_16 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="StateSteps.cs", label="var queueApi = GetQueueApi(queue)", span="52-52"];
m18_17 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="StateSteps.cs", label="var counters = queueApi.GetEnqueuedAndFetchedCount(queue)", span="53-53"];
m18_18 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="StateSteps.cs", label="return counters.EnqueuedCount ?? 0;", span="55-55"];
m18_19 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedCount(string)", span="50-50"];
m18_150 [cluster="Unk.GetQueues", file="StateSteps.cs", label="Entry Unk.GetQueues", span=""];
m18_62 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="106-106"];
m18_63 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="StateSteps.cs", label="return UseConnection(connection => \r\n                GetTimelineStats(connection, ''succeeded''));", span="108-109"];
m18_64 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.SucceededByDatesCount()", span="106-106"];
m18_316 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m18_68 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371"];
m18_282 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="var endDate = DateTime.UtcNow.Date", span="375-375"];
m18_289 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="var keyMaps = dates.ToDictionary(x => String.Format(''stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd'')), x => x)", span="383-383"];
m18_290 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="return GetTimelineStats(connection, keyMaps);", span="385-385"];
m18_283 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="var dates = new List<DateTime>()", span="376-376"];
m18_286 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="dates.Add(endDate)", span="379-379"];
m18_287 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="endDate = endDate.AddDays(-1)", span="380-380"];
m18_284 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="var i = 0", span="377-377"];
m18_285 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="i < 7", span="377-377"];
m18_288 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="i++", span="377-377"];
m18_291 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, string)", span="371-371"];
m18_256 [cluster="Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="18-18"];
m18_49 [cluster="Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="StateSteps.cs", label="Entry Hangfire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="23-23"];
m18_299 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388"];
m18_300 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="string sqlQuery = string.Format(@''\r\nselect [Key], [Value] as [Count] from [{0}].AggregatedCounter\r\nwhere [Key] in @keys'', _storage.GetSchemaName())", span="391-393"];
m18_301 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="var valuesMap = connection.Query(\r\n                sqlQuery,\r\n                new { keys = keyMaps.Keys })\r\n                .ToDictionary(x => (string)x.Key, x => (long)x.Count)", span="395-398"];
m18_302 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="keyMaps.Keys", span="400-400"];
m18_307 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="i < keyMaps.Count", span="406-406"];
m18_308 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="var value = valuesMap[keyMaps.ElementAt(i).Key]", span="408-408"];
m18_309 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="result.Add(keyMaps.ElementAt(i).Value, value)", span="409-409"];
m18_303 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="!valuesMap.ContainsKey(key)", span="402-402"];
m18_304 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="valuesMap.Add(key, 0)", span="402-402"];
m18_305 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="var result = new Dictionary<DateTime, long>()", span="405-405"];
m18_306 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="var i = 0", span="406-406"];
m18_311 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="return result;", span="412-412"];
m18_310 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="i++", span="406-406"];
m18_312 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.GetTimelineStats(SqlConnection, System.Collections.Generic.IDictionary<string, System.DateTime>)", span="388-388"];
m18_242 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="StateSteps.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m18_135 [cluster="Unk.Select", file="StateSteps.cs", label="Entry Unk.Select", span=""];
m18_367 [cluster="System.Collections.Generic.List<T>.List(int)", file="StateSteps.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m18_257 [cluster="Unk.Single", file="StateSteps.cs", label="Entry Unk.Single", span=""];
m18_161 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224"];
m18_162 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="StateSteps.cs", label="var queueApi = GetQueueApi(queue)", span="226-226"];
m18_163 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="StateSteps.cs", label="var enqueuedJobIds = queueApi.GetEnqueuedJobIds(queue, from, perPage)", span="227-227"];
m18_164 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="StateSteps.cs", label="return UseConnection(connection => EnqueuedJobs(connection, enqueuedJobIds));", span="229-229"];
m18_165 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.EnqueuedJobs(string, int, int)", span="224-224"];
m18_208 [cluster="Unk.SingleOrDefault", file="StateSteps.cs", label="Entry Unk.SingleOrDefault", span=""];
m18_33 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="StateSteps.cs", label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72"];
m18_34 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="StateSteps.cs", label="return UseConnection(connection => \r\n                GetNumberOfJobsByStateName(connection, ProcessingState.StateName));", span="74-75"];
m18_35 [cluster="Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", file="StateSteps.cs", label="Exit Hangfire.SqlServer.SqlServerMonitoringApi.ProcessingCount()", span="72-72"];
m18_211 [cluster="Unk.DeserializeJob", file="StateSteps.cs", label="Entry Unk.DeserializeJob", span=""];
m18_383 [file="StateSteps.cs", label="Hangfire.SqlServer.SqlServerMonitoringApi", span=""];
m18_384 [file="StateSteps.cs", label=int, span=""];
m18_385 [file="StateSteps.cs", label=int, span=""];
m18_386 [file="StateSteps.cs", label=int, span=""];
m18_387 [file="StateSteps.cs", label=int, span=""];
m18_388 [file="StateSteps.cs", label=int, span=""];
m18_389 [file="StateSteps.cs", label=int, span=""];
m18_390 [file="StateSteps.cs", label=int, span=""];
m18_391 [file="StateSteps.cs", label=int, span=""];
m18_392 [file="StateSteps.cs", label=int, span=""];
m18_393 [file="StateSteps.cs", label=int, span=""];
m18_394 [file="StateSteps.cs", label=enqueuedJobIds, span=""];
m18_395 [file="StateSteps.cs", label=enqueuedJobIds, span=""];
m18_396 [file="StateSteps.cs", label=fetchedJobIds, span=""];
m18_397 [file="StateSteps.cs", label=string, span=""];
m18_398 [file="StateSteps.cs", label=sql, span=""];
m18_399 [file="StateSteps.cs", label=string, span=""];
m18_400 [file="StateSteps.cs", label=string, span=""];
m19_2 [cluster="HangFire.Tests.ClientSteps.GivenTheCustomTypes(string)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.GivenTheCustomTypes(string)", span="21-21"];
m19_3 [cluster="HangFire.Tests.ClientSteps.GivenTheCustomTypes(string)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.GivenTheCustomTypes(string)", span="21-21"];
m19_73 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="117-117"];
m19_74 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="Worker.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="119-119"];
m19_75 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="Worker.cs", label="ThenItShouldBeEnqueuedToTheQueue(queue)", span="120-120"];
m19_76 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="117-117"];
m19_65 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="103-103"];
m19_66 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="Worker.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="105-105"];
m19_67 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="Worker.cs", label="ThenItShouldBeScheduledForTomorrow()", span="106-106"];
m19_68 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="103-103"];
m19_34 [cluster="Unk.SortedSetContainsItem", file="Worker.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m19_12 [cluster="Unk.GetAllEntriesFromHash", file="Worker.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m19_15 [cluster="Unk.IsTrue", file="Worker.cs", label="Entry Unk.IsTrue", span=""];
m19_36 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="Worker.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41"];
m19_11 [cluster="string.Format(string, object)", file="Worker.cs", label="Entry string.Format(string, object)", span="0-0"];
m19_38 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="64-64"];
m19_39 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="Worker.cs", label="Assert.IsNotNull(_exception)", span="66-66"];
m19_40 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="Worker.cs", label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="67-67"];
m19_41 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="64-64"];
m19_16 [cluster="Unk.>", file="Worker.cs", label="Entry Unk.>", span=""];
m19_35 [cluster="Unk.GetItemScoreInSortedSet", file="Worker.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m19_13 [cluster="Unk.AreNotEqual", file="Worker.cs", label="Entry Unk.AreNotEqual", span=""];
m19_17 [cluster="Unk.AreEqual", file="Worker.cs", label="Entry Unk.AreEqual", span=""];
m19_49 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="78-78"];
m19_50 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="Worker.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="80-80"];
m19_52 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="Worker.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", span="82-82"];
m19_54 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="Worker.cs", label="TableAssert.ContainsFollowingItems(table, args)", span="85-85"];
m19_51 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="Worker.cs", label="Assert.AreNotEqual(0, job.Count)", span="81-81"];
m19_53 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="Worker.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="84-84"];
m19_55 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="78-78"];
m19_57 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="89-89"];
m19_58 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="Worker.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="91-91"];
m19_59 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="Worker.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="92-92"];
m19_60 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="89-89"];
m19_37 [cluster="System.DateTime.AddDays(double)", file="Worker.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m19_4 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="26-26"];
m19_5 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="Worker.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="28-28"];
m19_7 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="Worker.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", span="30-30"];
m19_6 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="Worker.cs", label="Assert.AreNotEqual(0, job.Count)", span="29-29"];
m19_8 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="Worker.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="32-32"];
m19_9 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="Worker.cs", label="Assert.AreEqual(0, args.Count)", span="33-33"];
m19_10 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="26-26"];
m19_0 [cluster="HangFire.Tests.ClientSteps.GivenTheJobType(string)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.GivenTheJobType(string)", span="16-16"];
m19_1 [cluster="HangFire.Tests.ClientSteps.GivenTheJobType(string)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.GivenTheJobType(string)", span="16-16"];
m19_18 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="37-37"];
m19_19 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="Worker.cs", label="ThenItShouldBeEnqueuedToTheQueue(QueueSteps.DefaultQueue)", span="39-39"];
m19_20 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="37-37"];
m19_44 [cluster="Unk.IsInstanceOfType", file="Worker.cs", label="Entry Unk.IsInstanceOfType", span=""];
m19_45 [cluster="HangFire.Tests.ClientSteps.ACreateJobFailedExceptionShouldBeThrown()", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ACreateJobFailedExceptionShouldBeThrown()", span="71-71"];
m19_46 [cluster="HangFire.Tests.ClientSteps.ACreateJobFailedExceptionShouldBeThrown()", file="Worker.cs", label="Assert.IsNotNull(_exception)", span="73-73"];
m19_47 [cluster="HangFire.Tests.ClientSteps.ACreateJobFailedExceptionShouldBeThrown()", file="Worker.cs", label="Assert.IsInstanceOfType(_exception, typeof(CreateJobFailedException))", span="74-74"];
m19_48 [cluster="HangFire.Tests.ClientSteps.ACreateJobFailedExceptionShouldBeThrown()", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ACreateJobFailedExceptionShouldBeThrown()", span="71-71"];
m19_26 [cluster="Unk.GetAllItemsFromList", file="Worker.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m19_42 [cluster="Unk.IsNotNull", file="Worker.cs", label="Entry Unk.IsNotNull", span=""];
m19_14 [cluster="Unk.Contains", file="Worker.cs", label="Entry Unk.Contains", span=""];
m19_27 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="53-53"];
m19_28 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="Worker.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', _jobId))", span="55-55"];
m19_29 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="Worker.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', _jobId)", span="56-56"];
m19_30 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="Worker.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="57-57"];
m19_31 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="Worker.cs", label="Assert.IsTrue(DateTime.UtcNow.Date.AddDays(1) <= timestamp)", span="59-59"];
m19_32 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="Worker.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="60-60"];
m19_33 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="53-53"];
m19_61 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="96-96"];
m19_62 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="Worker.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="98-98"];
m19_63 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="Worker.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="99-99"];
m19_64 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="96-96"];
m19_69 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="110-110"];
m19_70 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="Worker.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="112-112"];
m19_71 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="Worker.cs", label="ThenItShouldBeScheduledForTomorrow()", span="113-113"];
m19_72 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="110-110"];
m19_56 [cluster="HangFire.Tests.TableAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="Worker.cs", label="Entry HangFire.Tests.TableAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m19_21 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="Worker.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="43-43"];
m19_22 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="Worker.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', name))", span="45-46"];
m19_23 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="Worker.cs", label="Assert.AreEqual(1, jobIds.Count)", span="48-48"];
m19_24 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="Worker.cs", label="Assert.AreEqual(_jobId, jobIds[0])", span="49-49"];
m19_25 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="Worker.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="43-43"];
m19_43 [cluster="System.Type.GetType(string, bool)", file="Worker.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m19_77 [file="Worker.cs", label="HangFire.Tests.ClientSteps", span=""];
m0_153 -> m0_154  [color=green, key=0, style=solid];
m0_154 -> m0_155  [color=green, key=0, style=solid];
m0_154 -> m0_11  [color=green, key=2, style=dotted];
m0_154 -> m0_12  [color=green, key=2, style=dotted];
m0_154 -> m0_162  [color=green, key=1, label="lambda expression", style=dashed];
m0_155 -> m0_156  [color=green, key=0, style=solid];
m0_155 -> m0_99  [color=green, key=2, style=dotted];
m0_155 -> m0_159  [color=green, key=1, label=stateMachine, style=dashed];
m0_156 -> m0_157  [color=green, key=0, style=solid];
m0_156 -> m0_119  [color=green, key=2, style=dotted];
m0_159 -> m0_160  [color=green, key=0, style=solid];
m0_159 -> m0_81  [color=green, key=2, style=dotted];
m0_159 -> m0_169  [color=green, key=1, label="lambda expression", style=dashed];
m0_157 -> m0_158  [color=green, key=0, style=solid];
m0_157 -> m0_161  [color=green, key=2, style=dotted];
m0_158 -> m0_159  [color=green, key=0, style=solid];
m0_158 -> m0_81  [color=green, key=2, style=dotted];
m0_158 -> m0_166  [color=green, key=1, label="lambda expression", style=dashed];
m0_160 -> m0_153  [color=blue, key=0, style=bold];
m0_210 -> m0_211  [color=green, key=0, style=solid];
m0_211 -> m0_212  [color=green, key=0, style=solid];
m0_211 -> m0_11  [color=green, key=2, style=dotted];
m0_211 -> m0_179  [color=green, key=2, style=dotted];
m0_211 -> m0_8  [color=green, key=2, style=dotted];
m0_211 -> m0_12  [color=green, key=2, style=dotted];
m0_211 -> m0_219  [color=green, key=1, label="lambda expression", style=dashed];
m0_211 -> m0_222  [color=green, key=1, label="lambda expression", style=dashed];
m0_212 -> m0_213  [color=green, key=0, style=solid];
m0_212 -> m0_99  [color=green, key=2, style=dotted];
m0_212 -> m0_214  [color=green, key=1, label=stateMachine, style=dashed];
m0_212 -> m0_215  [color=green, key=1, label=stateMachine, style=dashed];
m0_213 -> m0_214  [color=green, key=0, style=solid];
m0_213 -> m0_11  [color=green, key=2, style=dotted];
m0_213 -> m0_12  [color=green, key=2, style=dotted];
m0_213 -> m0_225  [color=green, key=1, label="lambda expression", style=dashed];
m0_214 -> m0_215  [color=green, key=0, style=solid];
m0_214 -> m0_119  [color=green, key=2, style=dotted];
m0_214 -> m0_216  [color=green, key=1, label=result, style=dashed];
m0_215 -> m0_216  [color=green, key=0, style=solid];
m0_215 -> m0_81  [color=green, key=2, style=dotted];
m0_215 -> m0_228  [color=green, key=1, label="lambda expression", style=dashed];
m0_216 -> m0_217  [color=green, key=0, style=solid];
m0_216 -> m0_218  [color=green, key=2, style=dotted];
m0_217 -> m0_210  [color=blue, key=0, style=bold];
m0_38 -> m0_39  [color=green, key=0, style=solid];
m0_39 -> m0_40  [color=green, key=0, style=solid];
m0_39 -> m0_27  [color=green, key=2, style=dotted];
m0_39 -> m0_42  [color=green, key=1, label="lambda expression", style=dashed];
m0_40 -> m0_41  [color=green, key=0, style=solid];
m0_40 -> m0_33  [color=green, key=2, style=dotted];
m0_41 -> m0_38  [color=blue, key=0, style=bold];
m0_129 -> m0_130  [color=green, key=0, style=solid];
m0_130 -> m0_131  [color=green, key=0, style=solid];
m0_130 -> m0_51  [color=green, key=2, style=dotted];
m0_130 -> m0_135  [color=green, key=1, label=stateMachine, style=dashed];
m0_131 -> m0_132  [color=green, key=0, style=solid];
m0_131 -> m0_27  [color=green, key=2, style=dotted];
m0_131 -> m0_134  [color=green, key=1, label="lambda expression", style=dashed];
m0_132 -> m0_133  [color=green, key=0, style=solid];
m0_132 -> m0_33  [color=green, key=2, style=dotted];
m0_133 -> m0_129  [color=blue, key=0, style=bold];
m0_111 -> m0_112  [color=green, key=0, style=solid];
m0_112 -> m0_113  [color=green, key=0, style=solid];
m0_112 -> m0_51  [color=green, key=2, style=dotted];
m0_112 -> m0_117  [color=green, key=1, label=stateMachine, style=dashed];
m0_113 -> m0_114  [color=green, key=0, style=solid];
m0_113 -> m0_27  [color=green, key=2, style=dotted];
m0_113 -> m0_116  [color=green, key=1, label="lambda expression", style=dashed];
m0_114 -> m0_115  [color=green, key=0, style=solid];
m0_114 -> m0_33  [color=green, key=2, style=dotted];
m0_115 -> m0_111  [color=blue, key=0, style=bold];
m0_94 -> m0_95  [color=green, key=0, style=solid];
m0_95 -> m0_96  [color=green, key=0, style=solid];
m0_95 -> m0_99  [color=green, key=2, style=dotted];
m0_95 -> m0_97  [color=green, key=1, label=stateMachine, style=dashed];
m0_96 -> m0_97  [color=green, key=0, style=solid];
m0_96 -> m0_55  [color=green, key=2, style=dotted];
m0_97 -> m0_98  [color=green, key=0, style=solid];
m0_97 -> m0_81  [color=green, key=2, style=dotted];
m0_97 -> m0_100  [color=green, key=1, label="lambda expression", style=dashed];
m0_98 -> m0_94  [color=blue, key=0, style=bold];
m0_137 -> m0_138  [color=green, key=0, style=solid];
m0_138 -> m0_139  [color=green, key=0, style=solid];
m0_138 -> m0_144  [color=green, key=2, style=dotted];
m0_138 -> m0_142  [color=green, key=1, label=disposableMock, style=dashed];
m0_139 -> m0_140  [color=green, key=0, style=solid];
m0_139 -> m0_11  [color=green, key=2, style=dotted];
m0_139 -> m0_12  [color=green, key=2, style=dotted];
m0_139 -> m0_145  [color=green, key=1, label="lambda expression", style=dashed];
m0_142 -> m0_143  [color=green, key=0, style=solid];
m0_142 -> m0_81  [color=green, key=2, style=dotted];
m0_142 -> m0_149  [color=green, key=1, label="lambda expression", style=dashed];
m0_140 -> m0_141  [color=green, key=0, style=solid];
m0_140 -> m0_51  [color=green, key=2, style=dotted];
m0_141 -> m0_142  [color=green, key=0, style=solid];
m0_141 -> m0_119  [color=green, key=2, style=dotted];
m0_143 -> m0_137  [color=blue, key=0, style=bold];
m0_120 -> m0_121  [color=green, key=0, style=solid];
m0_121 -> m0_122  [color=green, key=0, style=solid];
m0_121 -> m0_51  [color=green, key=2, style=dotted];
m0_121 -> m0_126  [color=green, key=1, label=stateMachine, style=dashed];
m0_122 -> m0_123  [color=green, key=0, style=solid];
m0_122 -> m0_27  [color=green, key=2, style=dotted];
m0_122 -> m0_125  [color=green, key=1, label="lambda expression", style=dashed];
m0_123 -> m0_124  [color=green, key=0, style=solid];
m0_123 -> m0_33  [color=green, key=2, style=dotted];
m0_124 -> m0_120  [color=blue, key=0, style=bold];
m0_190 -> m0_191  [color=green, key=0, style=solid];
m0_191 -> m0_192  [color=green, key=0, style=solid];
m0_191 -> m0_11  [color=green, key=2, style=dotted];
m0_191 -> m0_179  [color=green, key=2, style=dotted];
m0_191 -> m0_8  [color=green, key=2, style=dotted];
m0_191 -> m0_12  [color=green, key=2, style=dotted];
m0_191 -> m0_198  [color=green, key=1, label="lambda expression", style=dashed];
m0_191 -> m0_201  [color=green, key=1, label="lambda expression", style=dashed];
m0_192 -> m0_193  [color=green, key=0, style=solid];
m0_192 -> m0_99  [color=green, key=2, style=dotted];
m0_192 -> m0_194  [color=green, key=1, label=stateMachine, style=dashed];
m0_192 -> m0_195  [color=green, key=1, label=stateMachine, style=dashed];
m0_193 -> m0_194  [color=green, key=0, style=solid];
m0_193 -> m0_11  [color=green, key=2, style=dotted];
m0_193 -> m0_12  [color=green, key=2, style=dotted];
m0_193 -> m0_204  [color=green, key=1, label="lambda expression", style=dashed];
m0_194 -> m0_195  [color=green, key=0, style=solid];
m0_194 -> m0_119  [color=green, key=2, style=dotted];
m0_194 -> m0_196  [color=green, key=1, label=result, style=dashed];
m0_195 -> m0_196  [color=green, key=0, style=solid];
m0_195 -> m0_81  [color=green, key=2, style=dotted];
m0_195 -> m0_207  [color=green, key=1, label="lambda expression", style=dashed];
m0_196 -> m0_197  [color=green, key=0, style=solid];
m0_196 -> m0_161  [color=green, key=2, style=dotted];
m0_197 -> m0_190  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_8  [color=green, key=2, style=dotted];
m0_1 -> m0_13  [color=green, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_9  [color=green, key=2, style=dotted];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_10  [color=green, key=2, style=dotted];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_11  [color=green, key=2, style=dotted];
m0_4 -> m0_12  [color=green, key=2, style=dotted];
m0_4 -> m0_17  [color=green, key=1, label="lambda expression", style=dashed];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_11  [color=green, key=2, style=dotted];
m0_5 -> m0_12  [color=green, key=2, style=dotted];
m0_5 -> m0_20  [color=green, key=1, label="lambda expression", style=dashed];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_11  [color=green, key=2, style=dotted];
m0_6 -> m0_12  [color=green, key=2, style=dotted];
m0_6 -> m0_24  [color=green, key=1, label="lambda expression", style=dashed];
m0_7 -> m0_0  [color=blue, key=0, style=bold];
m0_107 -> m0_108  [color=green, key=0, style=solid];
m0_108 -> m0_109  [color=green, key=0, style=solid];
m0_108 -> m0_51  [color=green, key=2, style=dotted];
m0_109 -> m0_110  [color=green, key=0, style=solid];
m0_109 -> m0_55  [color=green, key=2, style=dotted];
m0_109 -> m0_33  [color=green, key=2, style=dotted];
m0_110 -> m0_107  [color=blue, key=0, style=bold];
m0_73 -> m0_74  [color=green, key=0, style=solid];
m0_74 -> m0_75  [color=green, key=0, style=solid];
m0_74 -> m0_8  [color=green, key=2, style=dotted];
m0_74 -> m0_82  [color=green, key=1, label="lambda expression", style=dashed];
m0_74 -> m0_77  [color=green, key=1, label=job, style=dashed];
m0_75 -> m0_76  [color=green, key=0, style=solid];
m0_75 -> m0_80  [color=green, key=2, style=dotted];
m0_77 -> m0_78  [color=green, key=0, style=solid];
m0_77 -> m0_55  [color=green, key=2, style=dotted];
m0_76 -> m0_77  [color=green, key=0, style=solid];
m0_76 -> m0_51  [color=green, key=2, style=dotted];
m0_78 -> m0_79  [color=green, key=0, style=solid];
m0_78 -> m0_81  [color=green, key=2, style=dotted];
m0_78 -> m0_85  [color=green, key=1, label="lambda expression", style=dashed];
m0_79 -> m0_73  [color=blue, key=0, style=bold];
m0_228 -> m0_229  [color=green, key=0, style=solid];
m0_13 -> m0_14  [color=green, key=0, style=solid];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_20 -> m0_21  [color=green, key=0, style=solid];
m0_24 -> m0_25  [color=green, key=0, style=solid];
m0_14 -> m0_15  [color=green, key=0, style=solid];
m0_14 -> m0_16  [color=green, key=2, style=dotted];
m0_15 -> m0_13  [color=blue, key=0, style=bold];
m0_18 -> m0_19  [color=green, key=0, style=solid];
m0_19 -> m0_17  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_21 -> m0_23  [color=green, key=2, style=dotted];
m0_22 -> m0_20  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [color=green, key=0, style=solid];
m0_25 -> m0_27  [color=green, key=2, style=dotted];
m0_25 -> m0_28  [color=green, key=2, style=dotted];
m0_26 -> m0_24  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [color=green, key=0, style=solid];
m0_35 -> m0_36  [color=green, key=0, style=solid];
m0_35 -> m0_37  [color=green, key=2, style=dotted];
m0_36 -> m0_34  [color=blue, key=0, style=bold];
m0_42 -> m0_43  [color=green, key=0, style=solid];
m0_43 -> m0_44  [color=green, key=0, style=solid];
m0_43 -> m0_45  [color=green, key=2, style=dotted];
m0_44 -> m0_42  [color=blue, key=0, style=bold];
m0_53 -> m0_54  [color=green, key=0, style=solid];
m0_53 -> m0_55  [color=green, key=2, style=dotted];
m0_52 -> m0_53  [color=green, key=0, style=solid];
m0_54 -> m0_52  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [color=green, key=0, style=solid];
m0_62 -> m0_55  [color=green, key=2, style=dotted];
m0_61 -> m0_62  [color=green, key=0, style=solid];
m0_63 -> m0_61  [color=blue, key=0, style=bold];
m0_70 -> m0_71  [color=green, key=0, style=solid];
m0_70 -> m0_72  [color=green, key=2, style=dotted];
m0_69 -> m0_70  [color=green, key=0, style=solid];
m0_71 -> m0_69  [color=blue, key=0, style=bold];
m0_82 -> m0_83  [color=green, key=0, style=solid];
m0_85 -> m0_86  [color=green, key=0, style=solid];
m0_83 -> m0_84  [color=green, key=0, style=solid];
m0_83 -> m0_16  [color=green, key=2, style=dotted];
m0_84 -> m0_82  [color=blue, key=0, style=bold];
m0_86 -> m0_87  [color=green, key=0, style=solid];
m0_86 -> m0_27  [color=green, key=2, style=dotted];
m0_86 -> m0_28  [color=green, key=2, style=dotted];
m0_86 -> m0_88  [color=green, key=1, label="lambda expression", style=dashed];
m0_86 -> m0_91  [color=green, key=1, label="lambda expression", style=dashed];
m0_87 -> m0_85  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [color=green, key=0, style=solid];
m0_91 -> m0_92  [color=green, key=0, style=solid];
m0_89 -> m0_90  [color=green, key=0, style=solid];
m0_90 -> m0_88  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [color=green, key=0, style=solid];
m0_93 -> m0_91  [color=blue, key=0, style=bold];
m0_100 -> m0_101  [color=green, key=0, style=solid];
m0_101 -> m0_102  [color=green, key=0, style=solid];
m0_101 -> m0_27  [color=green, key=2, style=dotted];
m0_101 -> m0_103  [color=green, key=2, style=dotted];
m0_101 -> m0_104  [color=green, key=1, label="lambda expression", style=dashed];
m0_102 -> m0_100  [color=blue, key=0, style=bold];
m0_104 -> m0_105  [color=green, key=0, style=solid];
m0_105 -> m0_106  [color=green, key=0, style=solid];
m0_106 -> m0_104  [color=blue, key=0, style=bold];
m0_117 -> m0_118  [color=green, key=0, style=solid];
m0_117 -> m0_119  [color=green, key=2, style=dotted];
m0_116 -> m0_117  [color=green, key=0, style=solid];
m0_118 -> m0_116  [color=blue, key=0, style=bold];
m0_126 -> m0_127  [color=green, key=0, style=solid];
m0_126 -> m0_128  [color=green, key=2, style=dotted];
m0_125 -> m0_126  [color=green, key=0, style=solid];
m0_127 -> m0_125  [color=blue, key=0, style=bold];
m0_135 -> m0_136  [color=green, key=0, style=solid];
m0_135 -> m0_119  [color=green, key=2, style=dotted];
m0_134 -> m0_135  [color=green, key=0, style=solid];
m0_136 -> m0_134  [color=blue, key=0, style=bold];
m0_145 -> m0_146  [color=green, key=0, style=solid];
m0_149 -> m0_150  [color=green, key=0, style=solid];
m0_146 -> m0_147  [color=green, key=0, style=solid];
m0_146 -> m0_148  [color=green, key=2, style=dotted];
m0_147 -> m0_145  [color=blue, key=0, style=bold];
m0_150 -> m0_151  [color=green, key=0, style=solid];
m0_150 -> m0_152  [color=green, key=2, style=dotted];
m0_151 -> m0_149  [color=blue, key=0, style=bold];
m0_162 -> m0_163  [color=green, key=0, style=solid];
m0_169 -> m0_170  [color=green, key=0, style=solid];
m0_166 -> m0_167  [color=green, key=0, style=solid];
m0_163 -> m0_164  [color=green, key=0, style=solid];
m0_163 -> m0_27  [color=green, key=2, style=dotted];
m0_163 -> m0_165  [color=green, key=2, style=dotted];
m0_164 -> m0_162  [color=blue, key=0, style=bold];
m0_167 -> m0_168  [color=green, key=0, style=solid];
m0_167 -> m0_165  [color=green, key=2, style=dotted];
m0_168 -> m0_166  [color=blue, key=0, style=bold];
m0_170 -> m0_171  [color=green, key=0, style=solid];
m0_170 -> m0_27  [color=green, key=2, style=dotted];
m0_170 -> m0_103  [color=green, key=2, style=dotted];
m0_171 -> m0_169  [color=blue, key=0, style=bold];
m0_180 -> m0_181  [color=green, key=0, style=solid];
m0_183 -> m0_184  [color=green, key=0, style=solid];
m0_187 -> m0_188  [color=green, key=0, style=solid];
m0_181 -> m0_182  [color=green, key=0, style=solid];
m0_181 -> m0_165  [color=green, key=2, style=dotted];
m0_182 -> m0_180  [color=blue, key=0, style=bold];
m0_184 -> m0_185  [color=green, key=0, style=solid];
m0_184 -> m0_186  [color=green, key=2, style=dotted];
m0_185 -> m0_183  [color=blue, key=0, style=bold];
m0_188 -> m0_189  [color=green, key=0, style=solid];
m0_188 -> m0_27  [color=green, key=2, style=dotted];
m0_188 -> m0_103  [color=green, key=2, style=dotted];
m0_189 -> m0_187  [color=blue, key=0, style=bold];
m0_198 -> m0_199  [color=green, key=0, style=solid];
m0_201 -> m0_202  [color=green, key=0, style=solid];
m0_204 -> m0_205  [color=green, key=0, style=solid];
m0_207 -> m0_208  [color=green, key=0, style=solid];
m0_199 -> m0_200  [color=green, key=0, style=solid];
m0_199 -> m0_165  [color=green, key=2, style=dotted];
m0_200 -> m0_198  [color=blue, key=0, style=bold];
m0_202 -> m0_203  [color=green, key=0, style=solid];
m0_202 -> m0_186  [color=green, key=2, style=dotted];
m0_203 -> m0_201  [color=blue, key=0, style=bold];
m0_205 -> m0_206  [color=green, key=0, style=solid];
m0_205 -> m0_27  [color=green, key=2, style=dotted];
m0_205 -> m0_103  [color=green, key=2, style=dotted];
m0_206 -> m0_204  [color=blue, key=0, style=bold];
m0_208 -> m0_209  [color=green, key=0, style=solid];
m0_208 -> m0_27  [color=green, key=2, style=dotted];
m0_208 -> m0_103  [color=green, key=2, style=dotted];
m0_209 -> m0_207  [color=blue, key=0, style=bold];
m0_219 -> m0_220  [color=green, key=0, style=solid];
m0_222 -> m0_223  [color=green, key=0, style=solid];
m0_225 -> m0_226  [color=green, key=0, style=solid];
m0_220 -> m0_221  [color=green, key=0, style=solid];
m0_220 -> m0_165  [color=green, key=2, style=dotted];
m0_221 -> m0_219  [color=blue, key=0, style=bold];
m0_223 -> m0_224  [color=green, key=0, style=solid];
m0_223 -> m0_186  [color=green, key=2, style=dotted];
m0_224 -> m0_222  [color=blue, key=0, style=bold];
m0_226 -> m0_227  [color=green, key=0, style=solid];
m0_226 -> m0_27  [color=green, key=2, style=dotted];
m0_226 -> m0_103  [color=green, key=2, style=dotted];
m0_227 -> m0_225  [color=blue, key=0, style=bold];
m0_56 -> m0_57  [color=green, key=0, style=solid];
m0_57 -> m0_58  [color=green, key=0, style=solid];
m0_57 -> m0_51  [color=green, key=2, style=dotted];
m0_57 -> m0_62  [color=green, key=1, label=stateMachine, style=dashed];
m0_58 -> m0_59  [color=green, key=0, style=solid];
m0_58 -> m0_27  [color=green, key=2, style=dotted];
m0_58 -> m0_61  [color=green, key=1, label="lambda expression", style=dashed];
m0_59 -> m0_60  [color=green, key=0, style=solid];
m0_59 -> m0_33  [color=green, key=2, style=dotted];
m0_60 -> m0_56  [color=blue, key=0, style=bold];
m0_46 -> m0_47  [color=green, key=0, style=solid];
m0_47 -> m0_48  [color=green, key=0, style=solid];
m0_47 -> m0_51  [color=green, key=2, style=dotted];
m0_47 -> m0_53  [color=green, key=1, label=stateMachine, style=dashed];
m0_48 -> m0_49  [color=green, key=0, style=solid];
m0_48 -> m0_27  [color=green, key=2, style=dotted];
m0_48 -> m0_52  [color=green, key=1, label="lambda expression", style=dashed];
m0_49 -> m0_50  [color=green, key=0, style=solid];
m0_49 -> m0_33  [color=green, key=2, style=dotted];
m0_50 -> m0_46  [color=blue, key=0, style=bold];
m0_172 -> m0_173  [color=green, key=0, style=solid];
m0_173 -> m0_174  [color=green, key=0, style=solid];
m0_173 -> m0_11  [color=green, key=2, style=dotted];
m0_173 -> m0_179  [color=green, key=2, style=dotted];
m0_173 -> m0_8  [color=green, key=2, style=dotted];
m0_173 -> m0_12  [color=green, key=2, style=dotted];
m0_173 -> m0_180  [color=green, key=1, label="lambda expression", style=dashed];
m0_173 -> m0_183  [color=green, key=1, label="lambda expression", style=dashed];
m0_174 -> m0_175  [color=green, key=0, style=solid];
m0_174 -> m0_99  [color=green, key=2, style=dotted];
m0_174 -> m0_177  [color=green, key=1, label=stateMachine, style=dashed];
m0_175 -> m0_176  [color=green, key=0, style=solid];
m0_175 -> m0_119  [color=green, key=2, style=dotted];
m0_177 -> m0_178  [color=green, key=0, style=solid];
m0_177 -> m0_81  [color=green, key=2, style=dotted];
m0_177 -> m0_187  [color=green, key=1, label="lambda expression", style=dashed];
m0_176 -> m0_177  [color=green, key=0, style=solid];
m0_176 -> m0_161  [color=green, key=2, style=dotted];
m0_178 -> m0_172  [color=blue, key=0, style=bold];
m0_29 -> m0_30  [color=green, key=0, style=solid];
m0_30 -> m0_31  [color=green, key=0, style=solid];
m0_30 -> m0_27  [color=green, key=2, style=dotted];
m0_30 -> m0_34  [color=green, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_32  [color=green, key=0, style=solid];
m0_31 -> m0_33  [color=green, key=2, style=dotted];
m0_32 -> m0_29  [color=blue, key=0, style=bold];
m0_64 -> m0_65  [color=green, key=0, style=solid];
m0_65 -> m0_66  [color=green, key=0, style=solid];
m0_65 -> m0_51  [color=green, key=2, style=dotted];
m0_65 -> m0_70  [color=green, key=1, label=stateMachine, style=dashed];
m0_66 -> m0_67  [color=green, key=0, style=solid];
m0_66 -> m0_27  [color=green, key=2, style=dotted];
m0_66 -> m0_69  [color=green, key=1, label="lambda expression", style=dashed];
m0_67 -> m0_68  [color=green, key=0, style=solid];
m0_67 -> m0_33  [color=green, key=2, style=dotted];
m0_68 -> m0_64  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=2, style=dotted];
m3_18 -> m3_16  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_9  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_11  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_15  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_12  [key=2, style=dotted];
m3_6 -> m3_8  [color=darkseagreen4, key=1, label=serversRemoved, style=dashed];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_9  [key=0, style=solid];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_13  [key=2, style=dotted];
m3_8 -> m3_14  [key=2, style=dotted];
m3_10 -> m3_4  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_20 -> m3_1  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m3_20 -> m3_2  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m3_20 -> m3_6  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m3_20 -> m3_9  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m3_20 -> m3_17  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerWatchdog", style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_8  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m4_0 -> m4_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m4_0 -> m4_10  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> m4_8  [key=2, style=dotted];
m4_1 -> m4_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=0, style=solid];
m4_3 -> m4_10  [key=2, style=dotted];
m4_5 -> m4_6  [color=green, key=0, style=solid];
m4_5 -> m4_7  [key=0, style=solid];
m4_5 -> m4_11  [color=green, key=2, style=dotted];
m4_5 -> m4_12  [color=green, key=2, style=dotted];
m4_5 -> m4_20  [color=green, key=1, label="lambda expression", style=dashed];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_0  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_13  [key=2, style=dotted];
m4_2 -> m4_11  [key=0, style=solid];
m4_2 -> m4_12  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_9  [key=2, style=dotted];
m4_4 -> m4_11  [key=0, style=solid];
m4_4 -> m4_12  [key=2, style=dotted];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_4 -> m4_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_6 -> m4_11  [key=0, style=solid];
m4_6 -> m4_12  [color=green, key=2, style=dotted];
m4_6 -> m4_7  [color=green, key=0, style=solid];
m4_6 -> m4_24  [color=green, key=1, label="lambda expression", style=dashed];
m4_11 -> m4_0  [color=blue, key=0, style=bold];
m4_153 -> m4_154  [key=0, style=solid];
m4_154 -> m4_11  [key=2, style=dotted];
m4_154 -> m4_12  [key=2, style=dotted];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_99  [key=2, style=dotted];
m4_155 -> m4_159  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_119  [key=2, style=dotted];
m4_158 -> m4_159  [key=0, style=solid];
m4_158 -> m4_81  [key=2, style=dotted];
m4_158 -> m4_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_159 -> m4_81  [key=2, style=dotted];
m4_159 -> m4_160  [key=0, style=solid];
m4_159 -> m4_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_157 -> m4_158  [key=0, style=solid];
m4_157 -> m4_161  [key=2, style=dotted];
m4_160 -> m4_153  [color=blue, key=0, style=bold];
m4_270 -> m4_271  [key=0, style=solid];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_99  [key=2, style=dotted];
m4_271 -> m4_274  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_271 -> m4_275  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_271 -> m4_276  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_274 -> m4_11  [key=2, style=dotted];
m4_274 -> m4_12  [key=2, style=dotted];
m4_274 -> m4_275  [key=0, style=solid];
m4_274 -> m4_281  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_103  [key=2, style=dotted];
m4_272 -> m4_274  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_272 -> m4_282  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_272 -> m4_275  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_272 -> m4_286  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_272 -> m4_8  [key=2, style=dotted];
m4_272 -> m4_273  [key=0, style=solid];
m4_272 -> m4_262  [key=2, style=dotted];
m4_272 -> m4_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_272 -> m4_276  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_276 -> m4_81  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_273 -> m4_274  [key=0, style=solid];
m4_273 -> m4_286  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m4_273 -> m4_10  [key=2, style=dotted];
m4_273 -> m4_276  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m4_277 -> m4_270  [color=blue, key=0, style=bold];
m4_99 -> m4_348  [key=0, style=solid];
m4_348 -> m4_349  [key=0, style=solid];
m4_348 -> m4_350  [key=2, style=dotted];
m4_349 -> m4_99  [color=blue, key=0, style=bold];
m4_210 -> m4_211  [key=0, style=solid];
m4_211 -> m4_11  [key=2, style=dotted];
m4_211 -> m4_12  [key=2, style=dotted];
m4_211 -> m4_212  [key=0, style=solid];
m4_211 -> m4_179  [key=2, style=dotted];
m4_211 -> m4_8  [key=2, style=dotted];
m4_211 -> m4_219  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_211 -> m4_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_212 -> m4_213  [key=0, style=solid];
m4_212 -> m4_99  [key=2, style=dotted];
m4_212 -> m4_214  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_212 -> m4_215  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_214 -> m4_215  [key=0, style=solid];
m4_214 -> m4_119  [key=2, style=dotted];
m4_214 -> m4_216  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_81  [key=2, style=dotted];
m4_215 -> m4_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_213 -> m4_11  [key=2, style=dotted];
m4_213 -> m4_12  [key=2, style=dotted];
m4_213 -> m4_214  [key=0, style=solid];
m4_213 -> m4_225  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_218  [key=2, style=dotted];
m4_217 -> m4_210  [color=blue, key=0, style=bold];
m4_262 -> m4_262  [color=darkorchid, key=3, label="Field variable string StateName", style=bold];
m4_38 -> m4_39  [key=0, style=solid];
m4_39 -> m4_27  [key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_33  [key=2, style=dotted];
m4_41 -> m4_38  [color=blue, key=0, style=bold];
m4_129 -> m4_130  [key=0, style=solid];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_51  [key=2, style=dotted];
m4_130 -> m4_135  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_131 -> m4_27  [key=2, style=dotted];
m4_131 -> m4_132  [key=0, style=solid];
m4_131 -> m4_134  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_132 -> m4_33  [key=2, style=dotted];
m4_132 -> m4_133  [key=0, style=solid];
m4_133 -> m4_129  [color=blue, key=0, style=bold];
m4_111 -> m4_112  [key=0, style=solid];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_51  [key=2, style=dotted];
m4_112 -> m4_117  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_113 -> m4_27  [key=2, style=dotted];
m4_113 -> m4_114  [key=0, style=solid];
m4_113 -> m4_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_114 -> m4_33  [key=2, style=dotted];
m4_114 -> m4_115  [key=0, style=solid];
m4_115 -> m4_111  [color=blue, key=0, style=bold];
m4_288 -> m4_289  [key=0, style=solid];
m4_289 -> m4_290  [key=0, style=solid];
m4_289 -> m4_99  [key=2, style=dotted];
m4_289 -> m4_292  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_289 -> m4_293  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_289 -> m4_294  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_292 -> m4_11  [key=2, style=dotted];
m4_292 -> m4_293  [key=0, style=solid];
m4_292 -> m4_298  [key=2, style=dotted];
m4_292 -> m4_302  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_293 -> m4_294  [key=0, style=solid];
m4_293 -> m4_103  [key=2, style=dotted];
m4_293 -> m4_295  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_290 -> m4_292  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_290 -> m4_303  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_290 -> m4_293  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_290 -> m4_306  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_290 -> m4_8  [key=2, style=dotted];
m4_290 -> m4_291  [key=0, style=solid];
m4_290 -> m4_262  [key=2, style=dotted];
m4_290 -> m4_299  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_290 -> m4_294  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_294 -> m4_81  [key=2, style=dotted];
m4_294 -> m4_295  [key=0, style=solid];
m4_294 -> m4_305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_291 -> m4_292  [key=0, style=solid];
m4_291 -> m4_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_291 -> m4_294  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_291 -> m4_297  [key=2, style=dotted];
m4_291 -> m4_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_295 -> m4_296  [key=0, style=solid];
m4_295 -> m4_161  [key=2, style=dotted];
m4_296 -> m4_288  [color=blue, key=0, style=bold];
m4_255 -> m4_256  [key=0, style=solid];
m4_256 -> m4_257  [key=0, style=solid];
m4_256 -> m4_99  [key=2, style=dotted];
m4_256 -> m4_258  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_256 -> m4_259  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_103  [key=2, style=dotted];
m4_258 -> m4_260  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_259 -> m4_260  [key=0, style=solid];
m4_259 -> m4_81  [key=2, style=dotted];
m4_259 -> m4_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_259  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_257 -> m4_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_257 -> m4_8  [key=2, style=dotted];
m4_257 -> m4_262  [key=2, style=dotted];
m4_257 -> m4_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_260 -> m4_261  [key=0, style=solid];
m4_260 -> m4_218  [key=2, style=dotted];
m4_261 -> m4_255  [color=blue, key=0, style=bold];
m4_315 -> m4_316  [key=0, style=solid];
m4_320 -> m4_321  [key=0, style=solid];
m4_320 -> m4_328  [key=2, style=dotted];
m4_321 -> m4_322  [key=0, style=solid];
m4_321 -> m4_328  [key=2, style=dotted];
m4_322 -> m4_323  [key=0, style=solid];
m4_322 -> m4_51  [key=2, style=dotted];
m4_322 -> m4_324  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_324 -> m4_325  [key=0, style=solid];
m4_324 -> m4_329  [key=2, style=dotted];
m4_324 -> m4_269  [key=2, style=dotted];
m4_325 -> m4_326  [key=0, style=solid];
m4_325 -> m4_81  [key=2, style=dotted];
m4_325 -> m4_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_317 -> m4_11  [key=2, style=dotted];
m4_317 -> m4_12  [key=2, style=dotted];
m4_317 -> m4_318  [key=0, style=solid];
m4_317 -> m4_330  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_319 -> m4_11  [key=2, style=dotted];
m4_319 -> m4_12  [key=2, style=dotted];
m4_319 -> m4_320  [key=0, style=solid];
m4_319 -> m4_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_316 -> m4_320  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m4_316 -> m4_325  [color=darkseagreen4, key=1, label=handler1, style=dashed];
m4_316 -> m4_317  [key=0, style=solid];
m4_316 -> m4_327  [key=2, style=dotted];
m4_318 -> m4_321  [color=darkseagreen4, key=1, label=handler2, style=dashed];
m4_318 -> m4_319  [key=0, style=solid];
m4_318 -> m4_327  [key=2, style=dotted];
m4_323 -> m4_324  [key=0, style=solid];
m4_323 -> m4_325  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_323 -> m4_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_323 -> m4_344  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_323 -> m4_8  [key=2, style=dotted];
m4_323 -> m4_262  [key=2, style=dotted];
m4_323 -> m4_336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_326 -> m4_315  [color=blue, key=0, style=bold];
m4_235 -> m4_236  [key=0, style=solid];
m4_236 -> m4_11  [key=2, style=dotted];
m4_236 -> m4_12  [key=2, style=dotted];
m4_236 -> m4_237  [key=0, style=solid];
m4_236 -> m4_179  [key=2, style=dotted];
m4_236 -> m4_242  [key=2, style=dotted];
m4_236 -> m4_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_237 -> m4_238  [key=0, style=solid];
m4_237 -> m4_99  [key=2, style=dotted];
m4_237 -> m4_239  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_238 -> m4_239  [key=0, style=solid];
m4_238 -> m4_119  [key=2, style=dotted];
m4_238 -> m4_240  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_239 -> m4_81  [key=2, style=dotted];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_246  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_240 -> m4_241  [key=0, style=solid];
m4_240 -> m4_161  [key=2, style=dotted];
m4_241 -> m4_235  [color=blue, key=0, style=bold];
m4_94 -> m4_95  [key=0, style=solid];
m4_95 -> m4_96  [key=0, style=solid];
m4_95 -> m4_99  [key=2, style=dotted];
m4_95 -> m4_97  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_55  [key=2, style=dotted];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_81  [key=2, style=dotted];
m4_97 -> m4_100  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_98 -> m4_94  [color=blue, key=0, style=bold];
m4_13 -> m4_14  [key=0, style=solid];
m4_137 -> m4_138  [key=0, style=solid];
m4_139 -> m4_11  [key=2, style=dotted];
m4_139 -> m4_12  [key=2, style=dotted];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_51  [key=2, style=dotted];
m4_141 -> m4_142  [key=0, style=solid];
m4_141 -> m4_119  [key=2, style=dotted];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_144  [key=2, style=dotted];
m4_138 -> m4_142  [color=darkseagreen4, key=1, label=disposableMock, style=dashed];
m4_142 -> m4_81  [key=2, style=dotted];
m4_142 -> m4_143  [key=0, style=solid];
m4_142 -> m4_149  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_143 -> m4_137  [color=blue, key=0, style=bold];
m4_120 -> m4_121  [key=0, style=solid];
m4_121 -> m4_122  [key=0, style=solid];
m4_121 -> m4_51  [key=2, style=dotted];
m4_121 -> m4_126  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_122 -> m4_27  [key=2, style=dotted];
m4_122 -> m4_122  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m4_122 -> m4_123  [key=0, style=solid];
m4_122 -> m4_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_123 -> m4_33  [key=2, style=dotted];
m4_123 -> m4_124  [key=0, style=solid];
m4_124 -> m4_120  [color=blue, key=0, style=bold];
m4_190 -> m4_191  [key=0, style=solid];
m4_191 -> m4_11  [key=2, style=dotted];
m4_191 -> m4_12  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_179  [key=2, style=dotted];
m4_191 -> m4_8  [key=2, style=dotted];
m4_191 -> m4_198  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_191 -> m4_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_192 -> m4_193  [key=0, style=solid];
m4_192 -> m4_99  [key=2, style=dotted];
m4_192 -> m4_194  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_192 -> m4_195  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_119  [key=2, style=dotted];
m4_194 -> m4_196  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_193 -> m4_11  [key=2, style=dotted];
m4_193 -> m4_12  [key=2, style=dotted];
m4_193 -> m4_194  [key=0, style=solid];
m4_193 -> m4_204  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_195 -> m4_81  [key=2, style=dotted];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_161  [key=2, style=dotted];
m4_197 -> m4_190  [color=blue, key=0, style=bold];
m4_51 -> m4_346  [key=0, style=solid];
m4_346 -> m4_347  [key=0, style=solid];
m4_346 -> m4_45  [key=2, style=dotted];
m4_347 -> m4_51  [color=blue, key=0, style=bold];
m4_107 -> m4_108  [key=0, style=solid];
m4_108 -> m4_109  [key=0, style=solid];
m4_108 -> m4_51  [key=2, style=dotted];
m4_109 -> m4_110  [key=0, style=solid];
m4_109 -> m4_55  [key=2, style=dotted];
m4_109 -> m4_33  [key=2, style=dotted];
m4_110 -> m4_107  [color=blue, key=0, style=bold];
m4_73 -> m4_74  [key=0, style=solid];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_80  [key=2, style=dotted];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_51  [key=2, style=dotted];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_55  [key=2, style=dotted];
m4_78 -> m4_79  [key=0, style=solid];
m4_78 -> m4_81  [key=2, style=dotted];
m4_78 -> m4_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_74 -> m4_75  [key=0, style=solid];
m4_74 -> m4_77  [color=darkseagreen4, key=1, label=job, style=dashed];
m4_74 -> m4_8  [key=2, style=dotted];
m4_74 -> m4_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_79 -> m4_73  [color=blue, key=0, style=bold];
m4_336 -> m4_337  [key=0, style=solid];
m4_20 -> m4_21  [key=0, style=solid];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_25 -> m4_26  [color=green, key=0, style=solid];
m4_25 -> m4_27  [color=green, key=2, style=dotted];
m4_25 -> m4_28  [color=green, key=2, style=dotted];
m4_26 -> m4_24  [color=blue, key=0, style=bold];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=2, style=dotted];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_45  [key=2, style=dotted];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_55  [key=2, style=dotted];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_55  [key=2, style=dotted];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_72  [key=2, style=dotted];
m4_101 -> m4_27  [key=2, style=dotted];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_103  [key=2, style=dotted];
m4_101 -> m4_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_105 -> m4_106  [key=0, style=solid];
m4_117 -> m4_118  [key=0, style=solid];
m4_117 -> m4_119  [key=2, style=dotted];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_119  [key=2, style=dotted];
m4_229 -> m4_27  [key=2, style=dotted];
m4_229 -> m4_230  [key=0, style=solid];
m4_229 -> m4_103  [key=2, style=dotted];
m4_229 -> m4_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_267 -> m4_27  [key=2, style=dotted];
m4_267 -> m4_268  [key=0, style=solid];
m4_267 -> m4_269  [key=2, style=dotted];
m4_282 -> m4_27  [key=2, style=dotted];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_284  [key=2, style=dotted];
m4_303 -> m4_27  [key=2, style=dotted];
m4_303 -> m4_304  [key=0, style=solid];
m4_303 -> m4_269  [key=2, style=dotted];
m4_340 -> m4_27  [key=2, style=dotted];
m4_340 -> m4_341  [key=0, style=solid];
m4_340 -> m4_342  [key=2, style=dotted];
m4_340 -> m4_343  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_344 -> m4_345  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=2, style=dotted];
m4_86 -> m4_27  [key=2, style=dotted];
m4_86 -> m4_28  [key=2, style=dotted];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_86 -> m4_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_163 -> m4_27  [key=2, style=dotted];
m4_163 -> m4_164  [key=0, style=solid];
m4_163 -> m4_165  [key=2, style=dotted];
m4_170 -> m4_27  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_103  [key=2, style=dotted];
m4_188 -> m4_27  [key=2, style=dotted];
m4_188 -> m4_189  [key=0, style=solid];
m4_188 -> m4_103  [key=2, style=dotted];
m4_205 -> m4_27  [key=2, style=dotted];
m4_205 -> m4_206  [key=0, style=solid];
m4_205 -> m4_103  [key=2, style=dotted];
m4_208 -> m4_27  [key=2, style=dotted];
m4_208 -> m4_209  [key=0, style=solid];
m4_208 -> m4_103  [key=2, style=dotted];
m4_226 -> m4_27  [key=2, style=dotted];
m4_226 -> m4_227  [key=0, style=solid];
m4_226 -> m4_103  [key=2, style=dotted];
m4_247 -> m4_27  [key=2, style=dotted];
m4_247 -> m4_248  [key=0, style=solid];
m4_247 -> m4_103  [key=2, style=dotted];
m4_247 -> m4_249  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_247 -> m4_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_286 -> m4_27  [key=2, style=dotted];
m4_286 -> m4_287  [key=0, style=solid];
m4_286 -> m4_269  [key=2, style=dotted];
m4_306 -> m4_27  [key=2, style=dotted];
m4_306 -> m4_307  [key=0, style=solid];
m4_306 -> m4_269  [key=2, style=dotted];
m4_306 -> m4_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_306 -> m4_311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_34 -> m4_35  [key=0, style=solid];
m4_36 -> m4_34  [color=blue, key=0, style=bold];
m4_42 -> m4_43  [key=0, style=solid];
m4_44 -> m4_42  [color=blue, key=0, style=bold];
m4_52 -> m4_53  [key=0, style=solid];
m4_54 -> m4_52  [color=blue, key=0, style=bold];
m4_61 -> m4_62  [key=0, style=solid];
m4_63 -> m4_61  [color=blue, key=0, style=bold];
m4_69 -> m4_70  [key=0, style=solid];
m4_71 -> m4_69  [color=blue, key=0, style=bold];
m4_85 -> m4_86  [key=0, style=solid];
m4_100 -> m4_101  [key=0, style=solid];
m4_102 -> m4_100  [color=blue, key=0, style=bold];
m4_104 -> m4_105  [key=0, style=solid];
m4_106 -> m4_104  [color=blue, key=0, style=bold];
m4_116 -> m4_117  [key=0, style=solid];
m4_118 -> m4_116  [color=blue, key=0, style=bold];
m4_126 -> m4_127  [key=0, style=solid];
m4_126 -> m4_128  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_136 -> m4_134  [color=blue, key=0, style=bold];
m4_145 -> m4_146  [key=0, style=solid];
m4_162 -> m4_163  [key=0, style=solid];
m4_166 -> m4_167  [key=0, style=solid];
m4_180 -> m4_181  [key=0, style=solid];
m4_183 -> m4_184  [key=0, style=solid];
m4_198 -> m4_199  [key=0, style=solid];
m4_201 -> m4_202  [key=0, style=solid];
m4_219 -> m4_220  [key=0, style=solid];
m4_222 -> m4_223  [key=0, style=solid];
m4_228 -> m4_229  [key=0, style=solid];
m4_230 -> m4_228  [color=blue, key=0, style=bold];
m4_231 -> m4_232  [key=0, style=solid];
m4_243 -> m4_244  [key=0, style=solid];
m4_266 -> m4_267  [key=0, style=solid];
m4_268 -> m4_266  [color=blue, key=0, style=bold];
m4_281 -> m4_282  [key=0, style=solid];
m4_283 -> m4_281  [color=blue, key=0, style=bold];
m4_302 -> m4_303  [key=0, style=solid];
m4_304 -> m4_302  [color=blue, key=0, style=bold];
m4_339 -> m4_340  [key=0, style=solid];
m4_341 -> m4_339  [color=blue, key=0, style=bold];
m4_343 -> m4_344  [key=0, style=solid];
m4_345 -> m4_343  [color=blue, key=0, style=bold];
m4_19 -> m4_17  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_7  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_18 -> m4_8  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_18 -> m4_9  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_18 -> m4_10  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_18 -> m4_15  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m4_204 -> m4_205  [key=0, style=solid];
m4_225 -> m4_226  [key=0, style=solid];
m4_330 -> m4_331  [key=0, style=solid];
m4_333 -> m4_334  [key=0, style=solid];
m4_87 -> m4_85  [color=blue, key=0, style=bold];
m4_88 -> m4_89  [key=0, style=solid];
m4_91 -> m4_92  [key=0, style=solid];
m4_125 -> m4_126  [key=0, style=solid];
m4_164 -> m4_162  [color=blue, key=0, style=bold];
m4_169 -> m4_170  [key=0, style=solid];
m4_171 -> m4_169  [color=blue, key=0, style=bold];
m4_187 -> m4_188  [key=0, style=solid];
m4_189 -> m4_187  [color=blue, key=0, style=bold];
m4_206 -> m4_204  [color=blue, key=0, style=bold];
m4_207 -> m4_208  [key=0, style=solid];
m4_209 -> m4_207  [color=blue, key=0, style=bold];
m4_227 -> m4_225  [color=blue, key=0, style=bold];
m4_246 -> m4_247  [key=0, style=solid];
m4_248 -> m4_246  [color=blue, key=0, style=bold];
m4_249 -> m4_250  [key=0, style=solid];
m4_252 -> m4_253  [key=0, style=solid];
m4_285 -> m4_286  [key=0, style=solid];
m4_287 -> m4_285  [color=blue, key=0, style=bold];
m4_305 -> m4_306  [key=0, style=solid];
m4_307 -> m4_305  [color=blue, key=0, style=bold];
m4_308 -> m4_309  [key=0, style=solid];
m4_311 -> m4_312  [key=0, style=solid];
m4_15 -> m4_13  [color=blue, key=0, style=bold];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_17  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_16  [key=2, style=dotted];
m4_82 -> m4_83  [key=0, style=solid];
m4_127 -> m4_125  [color=blue, key=0, style=bold];
m4_147 -> m4_145  [color=blue, key=0, style=bold];
m4_146 -> m4_147  [key=0, style=solid];
m4_146 -> m4_148  [key=2, style=dotted];
m4_149 -> m4_150  [key=0, style=solid];
m4_168 -> m4_166  [color=blue, key=0, style=bold];
m4_167 -> m4_165  [key=2, style=dotted];
m4_167 -> m4_168  [key=0, style=solid];
m4_182 -> m4_180  [color=blue, key=0, style=bold];
m4_181 -> m4_165  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_185 -> m4_183  [color=blue, key=0, style=bold];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_186  [key=2, style=dotted];
m4_200 -> m4_198  [color=blue, key=0, style=bold];
m4_199 -> m4_165  [key=2, style=dotted];
m4_199 -> m4_200  [key=0, style=solid];
m4_203 -> m4_201  [color=blue, key=0, style=bold];
m4_202 -> m4_203  [key=0, style=solid];
m4_202 -> m4_186  [key=2, style=dotted];
m4_221 -> m4_219  [color=blue, key=0, style=bold];
m4_220 -> m4_165  [key=2, style=dotted];
m4_220 -> m4_221  [key=0, style=solid];
m4_224 -> m4_222  [color=blue, key=0, style=bold];
m4_223 -> m4_224  [key=0, style=solid];
m4_223 -> m4_186  [key=2, style=dotted];
m4_233 -> m4_231  [color=blue, key=0, style=bold];
m4_232 -> m4_233  [key=0, style=solid];
m4_232 -> m4_234  [key=2, style=dotted];
m4_245 -> m4_243  [color=blue, key=0, style=bold];
m4_244 -> m4_165  [key=2, style=dotted];
m4_244 -> m4_245  [key=0, style=solid];
m4_263 -> m4_264  [key=0, style=solid];
m4_278 -> m4_279  [key=0, style=solid];
m4_299 -> m4_300  [key=0, style=solid];
m4_309 -> m4_310  [key=0, style=solid];
m4_332 -> m4_330  [color=blue, key=0, style=bold];
m4_331 -> m4_332  [key=0, style=solid];
m4_335 -> m4_333  [color=blue, key=0, style=bold];
m4_334 -> m4_335  [key=0, style=solid];
m4_90 -> m4_88  [color=blue, key=0, style=bold];
m4_89 -> m4_90  [key=0, style=solid];
m4_93 -> m4_91  [color=blue, key=0, style=bold];
m4_92 -> m4_93  [key=0, style=solid];
m4_251 -> m4_249  [color=blue, key=0, style=bold];
m4_250 -> m4_251  [key=0, style=solid];
m4_254 -> m4_252  [color=blue, key=0, style=bold];
m4_253 -> m4_254  [key=0, style=solid];
m4_310 -> m4_308  [color=blue, key=0, style=bold];
m4_313 -> m4_311  [color=blue, key=0, style=bold];
m4_312 -> m4_313  [key=0, style=solid];
m4_312 -> m4_314  [key=2, style=dotted];
m4_84 -> m4_82  [color=blue, key=0, style=bold];
m4_83 -> m4_16  [key=2, style=dotted];
m4_83 -> m4_84  [key=0, style=solid];
m4_151 -> m4_149  [color=blue, key=0, style=bold];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_152  [key=2, style=dotted];
m4_265 -> m4_263  [color=blue, key=0, style=bold];
m4_264 -> m4_186  [key=2, style=dotted];
m4_264 -> m4_265  [key=0, style=solid];
m4_280 -> m4_278  [color=blue, key=0, style=bold];
m4_279 -> m4_186  [key=2, style=dotted];
m4_279 -> m4_280  [key=0, style=solid];
m4_301 -> m4_299  [color=blue, key=0, style=bold];
m4_300 -> m4_186  [key=2, style=dotted];
m4_300 -> m4_301  [key=0, style=solid];
m4_337 -> m4_186  [key=2, style=dotted];
m4_337 -> m4_338  [key=0, style=solid];
m4_338 -> m4_336  [color=blue, key=0, style=bold];
m4_56 -> m4_57  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid];
m4_57 -> m4_51  [key=2, style=dotted];
m4_57 -> m4_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_58 -> m4_27  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_33  [key=2, style=dotted];
m4_60 -> m4_56  [color=blue, key=0, style=bold];
m4_46 -> m4_47  [key=0, style=solid];
m4_47 -> m4_48  [key=0, style=solid];
m4_47 -> m4_51  [key=2, style=dotted];
m4_47 -> m4_53  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_48 -> m4_27  [key=2, style=dotted];
m4_48 -> m4_49  [key=0, style=solid];
m4_48 -> m4_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_33  [key=2, style=dotted];
m4_50 -> m4_46  [color=blue, key=0, style=bold];
m4_172 -> m4_173  [key=0, style=solid];
m4_173 -> m4_11  [key=2, style=dotted];
m4_173 -> m4_12  [key=2, style=dotted];
m4_173 -> m4_174  [key=0, style=solid];
m4_173 -> m4_179  [key=2, style=dotted];
m4_173 -> m4_8  [key=2, style=dotted];
m4_173 -> m4_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_173 -> m4_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_99  [key=2, style=dotted];
m4_174 -> m4_177  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_119  [key=2, style=dotted];
m4_177 -> m4_81  [key=2, style=dotted];
m4_177 -> m4_178  [key=0, style=solid];
m4_177 -> m4_187  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_161  [key=2, style=dotted];
m4_178 -> m4_172  [color=blue, key=0, style=bold];
m4_16 -> m4_14  [color=blue, key=0, style=bold];
m4_29 -> m4_30  [key=0, style=solid];
m4_30 -> m4_27  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_31 -> m4_32  [key=0, style=solid];
m4_31 -> m4_33  [key=2, style=dotted];
m4_32 -> m4_29  [color=blue, key=0, style=bold];
m4_64 -> m4_65  [key=0, style=solid];
m4_65 -> m4_66  [key=0, style=solid];
m4_65 -> m4_51  [key=2, style=dotted];
m4_65 -> m4_70  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_66 -> m4_27  [key=2, style=dotted];
m4_66 -> m4_67  [key=0, style=solid];
m4_66 -> m4_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_67 -> m4_68  [key=0, style=solid];
m4_67 -> m4_33  [key=2, style=dotted];
m4_68 -> m4_64  [color=blue, key=0, style=bold];
m4_351 -> m4_5  [color=green, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_6  [color=green, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_1  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_3  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_30  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_35  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_43  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_47  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_53  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_57  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_58  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_62  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_66  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_70  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_78  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_95  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_96  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_97  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_101  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_105  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_108  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_109  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_112  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_113  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_117  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_121  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_130  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_131  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_135  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_139  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_140  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_141  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_154  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_155  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_156  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_158  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_173  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_174  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_175  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_191  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_192  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_194  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_211  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_212  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_214  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_215  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_229  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_236  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_237  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_238  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_256  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_258  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_259  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_267  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_271  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_274  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_282  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_275  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_289  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_292  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_303  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_293  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_320  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_321  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_322  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_324  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_325  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_340  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_344  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_346  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_351 -> m4_348  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.States.StateMachineFacts", style=dashed];
m4_352 -> m4_53  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_353 -> m4_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_354 -> m4_70  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_355 -> m4_117  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_357 -> m4_135  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_358 -> m4_267  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_359 -> m4_282  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_359 -> m4_286  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_361 -> m4_303  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_361 -> m4_306  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_363 -> m4_340  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_363 -> m4_344  [color=darkseagreen4, key=1, label=context, style=dashed];
m4_360 -> m4_286  [color=darkseagreen4, key=1, label=electedState, style=dashed];
m4_362 -> m4_306  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_362 -> m4_309  [color=darkseagreen4, key=1, label=exception, style=dashed];
m4_356 -> m4_126  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m5_21 -> m5_22  [key=0, style=solid];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_24  [key=2, style=dotted];
m5_23 -> m5_21  [color=blue, key=0, style=bold];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=2, style=dotted];
m5_19 -> m5_17  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=long, style=dashed];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label=long, style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_0  [color=blue, key=0, style=bold];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_12  [key=2, style=dotted];
m5_7 -> m5_13  [key=2, style=dotted];
m5_7 -> m5_14  [key=2, style=dotted];
m5_7 -> m5_9  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_7 -> m5_10  [color=darkseagreen4, key=1, label=data, style=dashed];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_10  [key=0, style=solid];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_15  [key=2, style=dotted];
m5_9 -> m5_16  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_11 -> m5_6  [color=blue, key=0, style=bold];
m5_25 -> m5_1  [color=darkseagreen4, key=1, label="Hangfire.States.SucceededState", style=dashed];
m5_25 -> m5_2  [color=darkseagreen4, key=1, label="Hangfire.States.SucceededState", style=dashed];
m5_25 -> m5_3  [color=darkseagreen4, key=1, label="Hangfire.States.SucceededState", style=dashed];
m5_25 -> m5_4  [color=darkseagreen4, key=1, label="Hangfire.States.SucceededState", style=dashed];
m5_25 -> m5_7  [color=darkseagreen4, key=1, label="Hangfire.States.SucceededState", style=dashed];
m5_25 -> m5_8  [color=darkseagreen4, key=1, label="Hangfire.States.SucceededState", style=dashed];
m5_25 -> m5_9  [color=darkseagreen4, key=1, label="Hangfire.States.SucceededState", style=dashed];
m7_17 -> m7_26  [key=0, style=solid];
m7_17 -> m7_17  [key=2, style=dotted];
m7_11 -> m7_12  [color=red, key=0, style=solid];
m7_11 -> m7_14  [color=green, key=1, label="System.Type", style=dashed];
m7_11 -> m7_20  [color=green, key=1, label="System.Type", style=dashed];
m7_11 -> m7_21  [color=green, key=1, label="System.Type", style=dashed];
m7_11 -> m7_25  [color=green, key=1, label=string, style=dashed];
m7_11 -> m7_16  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m7_11 -> m7_18  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m7_11 -> m7_22  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_11 -> m7_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_11 -> m7_13  [color=red, key=1, label=state, style=dashed];
m7_12 -> m7_13  [color=red, key=0, style=solid];
m7_12 -> m7_14  [color=green, key=0, style=solid];
m7_12 -> m7_27  [color=green, key=2, style=dotted];
m7_12 -> m7_24  [color=red, key=2, style=dotted];
m7_13 -> m7_26  [color=green, key=0, style=solid];
m7_13 -> m7_17  [color=green, key=2, style=dotted];
m7_13 -> m7_14  [color=red, key=0, style=solid];
m7_13 -> m7_25  [color=red, key=2, style=dotted];
m7_14 -> m7_15  [color=red, key=0, style=solid];
m7_14 -> m7_16  [color=green, key=0, style=solid];
m7_14 -> m7_27  [color=red, key=2, style=dotted];
m7_15 -> m7_26  [color=green, key=0, style=solid];
m7_15 -> m7_17  [color=green, key=2, style=dotted];
m7_15 -> m7_16  [color=red, key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [key=0, style=solid];
m7_16 -> m7_4  [color=blue, key=0, style=bold];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_20 -> m7_22  [color=green, key=0, style=solid];
m7_20 -> m7_18  [color=green, key=2, style=dotted];
m7_18 -> m7_20  [color=green, key=0, style=solid];
m7_18 -> m7_19  [key=0, style=solid];
m7_21 -> m7_26  [color=green, key=0, style=solid];
m7_21 -> m7_19  [color=green, key=2, style=dotted];
m7_21 -> m7_20  [color=green, key=2, style=dotted];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_31  [key=2, style=dotted];
m7_22 -> m7_63  [color=red, key=0, style=solid];
m7_25 -> m7_26  [color=green, key=0, style=solid];
m7_24 -> m7_25  [color=green, key=0, style=solid];
m7_24 -> m7_27  [key=2, style=dotted];
m7_24 -> m7_53  [key=0, style=solid];
m7_24 -> m7_54  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_24 -> m7_55  [color=red, key=1, label=object, style=dashed];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_25  [key=2, style=dotted];
m7_23 -> m7_26  [key=2, style=dotted];
m7_19 -> m7_26  [key=0, style=solid];
m7_19 -> m7_17  [key=2, style=dotted];
m7_26 -> m7_11  [color=blue, key=0, style=bold];
m7_63 -> m7_64  [color=red, key=0, style=solid];
m7_63 -> m7_65  [color=red, key=2, style=dotted];
m7_63 -> m7_66  [color=red, key=2, style=dotted];
m7_64 -> m7_22  [color=blue, key=0, style=bold];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_51  [key=0, style=solid];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_52  [key=2, style=dotted];
m7_50 -> m7_61  [key=0, style=solid];
m7_51 -> m7_49  [color=blue, key=0, style=bold];
m7_51 -> m7_52  [color=green, key=0, style=solid];
m7_51 -> m7_59  [color=green, key=1, label=descriptor, style=dashed];
m7_51 -> m7_60  [color=green, key=0, style=solid];
m7_51 -> m7_58  [color=green, key=1, label=descriptor, style=dashed];
m7_51 -> m7_62  [key=2, style=dotted];
m7_31 -> m7_39  [key=0, style=solid];
m7_31 -> m7_40  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_31 -> m7_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_33  [color=red, key=0, style=solid];
m7_31 -> m7_18  [key=2, style=dotted];
m7_43 -> m7_44  [color=green, key=0, style=solid];
m7_43 -> m7_28  [color=blue, key=0, style=bold];
m7_39 -> m7_43  [color=green, key=1, label=job, style=dashed];
m7_39 -> m7_40  [color=red, key=0, style=solid];
m7_39 -> m7_59  [key=2, style=dotted];
m7_39 -> m7_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_39 -> m7_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_39 -> m7_24  [color=red, key=2, style=dotted];
m7_42 -> m7_43  [color=green, key=0, style=solid];
m7_42 -> m7_62  [key=2, style=dotted];
m7_40 -> m7_41  [color=red, key=0, style=solid];
m7_40 -> m7_25  [color=red, key=2, style=dotted];
m7_40 -> m7_26  [color=red, key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_61  [key=2, style=dotted];
m7_41 -> m7_27  [key=2, style=dotted];
m7_44 -> m7_31  [color=blue, key=0, style=bold];
m7_61 -> m7_10  [color=blue, key=0, style=bold];
m7_60 -> m7_61  [color=green, key=0, style=solid];
m7_4 -> m7_5  [color=red, key=0, style=solid];
m7_4 -> m7_7  [color=red, key=1, label="System.Type", style=dashed];
m7_4 -> m7_8  [color=red, key=1, label="System.Type", style=dashed];
m7_4 -> m7_9  [color=red, key=1, label="System.Type", style=dashed];
m7_4 -> m7_12  [color=red, key=1, label="System.Type", style=dashed];
m7_4 -> m7_10  [color=red, key=3, label="method methodReturn string Async", style=bold];
m7_4 -> m7_28  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m7_5 -> m7_6  [color=red, key=0, style=solid];
m7_5 -> m7_7  [color=red, key=0, style=solid];
m7_7 -> m7_8  [color=green, key=0, style=solid];
m7_7 -> m7_9  [color=red, key=0, style=solid];
m7_7 -> m7_18  [color=red, key=2, style=dotted];
m7_7 -> m7_11  [color=darkorchid, key=3, label="method methodReturn string CreateJob", style=bold];
m7_8 -> m7_16  [color=red, key=0, style=solid];
m7_8 -> m7_19  [color=red, key=2, style=dotted];
m7_8 -> m7_20  [color=red, key=2, style=dotted];
m7_8 -> m7_9  [color=green, key=0, style=solid];
m7_8 -> m7_10  [color=green, key=2, style=dotted];
m7_8 -> m7_11  [color=green, key=2, style=dotted];
m7_9 -> m7_10  [color=red, key=0, style=solid];
m7_9 -> m7_21  [color=red, key=2, style=dotted];
m7_9 -> m7_11  [color=red, key=1, label=queue, style=dashed];
m7_9 -> m7_7  [color=blue, key=0, style=bold];
m7_6 -> m7_16  [color=red, key=0, style=solid];
m7_6 -> m7_17  [color=red, key=2, style=dotted];
m7_10 -> m7_11  [color=red, key=0, style=solid];
m7_10 -> m7_22  [color=red, key=2, style=dotted];
m7_10 -> m7_13  [color=red, key=1, label=jobId, style=dashed];
m7_10 -> m7_15  [color=red, key=1, label=jobId, style=dashed];
m7_10 -> m7_52  [color=green, key=1, label=object, style=dashed];
m7_10 -> m7_48  [key=0, style=solid];
m7_10 -> m7_49  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_10 -> m7_51  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_0 -> m7_1  [color=red, key=0, style=solid];
m7_1 -> m7_2  [color=red, key=0, style=solid];
m7_1 -> m7_3  [color=red, key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_48 -> m7_59  [color=green, key=1, label=result, style=dashed];
m7_48 -> m7_60  [color=green, key=1, label=result, style=dashed];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_50  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_59 -> m7_51  [color=green, key=0, style=solid];
m7_59 -> m7_68  [color=green, key=2, style=dotted];
m7_67 -> m7_1  [color=red, key=1, label="HangFire.Client.JobClient", style=dashed];
m7_67 -> m7_13  [color=red, key=1, label="HangFire.Client.JobClient", style=dashed];
m7_67 -> m7_14  [color=red, key=1, label="HangFire.Client.JobClient", style=dashed];
m7_67 -> m7_36  [color=red, key=1, label="HangFire.Client.JobClient", style=dashed];
m7_67 -> m7_40  [color=red, key=1, label="HangFire.Client.JobClient", style=dashed];
m7_67 -> m7_41  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m7_67 -> m7_50  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m7_67 -> m7_8  [color=green, key=1, label="HangFire.Client.JobClient", style=dashed];
m7_67 -> m7_24  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m7_67 -> m7_23  [color=darkseagreen4, key=1, label="HangFire.Client.JobClient", style=dashed];
m7_28 -> m7_29  [color=red, key=0, style=solid];
m7_28 -> m7_31  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_28 -> m7_32  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_28 -> m7_33  [color=red, key=1, label="System.TimeSpan", style=dashed];
m7_28 -> m7_36  [color=red, key=1, label="System.Type", style=dashed];
m7_28 -> m7_39  [color=red, key=1, label="System.Type", style=dashed];
m7_28 -> m7_4  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m7_28 -> m7_37  [color=red, key=3, label="method methodReturn string In", style=bold];
m7_29 -> m7_30  [color=red, key=0, style=solid];
m7_29 -> m7_31  [color=red, key=0, style=solid];
m7_32 -> m7_43  [key=0, style=solid];
m7_32 -> m7_19  [key=2, style=dotted];
m7_32 -> m7_20  [key=2, style=dotted];
m7_33 -> m7_34  [color=red, key=0, style=solid];
m7_33 -> m7_35  [color=red, key=0, style=solid];
m7_33 -> m7_44  [color=red, key=2, style=dotted];
m7_33 -> m7_33  [color=red, key=1, label="System.TimeSpan", style=dashed];
m7_36 -> m7_43  [color=red, key=0, style=solid];
m7_36 -> m7_4  [color=red, key=2, style=dotted];
m7_30 -> m7_43  [color=red, key=0, style=solid];
m7_30 -> m7_17  [color=red, key=2, style=dotted];
m7_34 -> m7_43  [color=red, key=0, style=solid];
m7_34 -> m7_45  [color=red, key=2, style=dotted];
m7_35 -> m7_36  [color=red, key=0, style=solid];
m7_35 -> m7_37  [color=red, key=0, style=solid];
m7_35 -> m7_46  [color=red, key=2, style=dotted];
m7_35 -> m7_35  [color=red, key=1, label="System.TimeSpan", style=dashed];
m7_35 -> m7_38  [color=red, key=1, label="System.TimeSpan", style=dashed];
m7_37 -> m7_38  [color=red, key=0, style=solid];
m7_37 -> m7_22  [color=red, key=2, style=dotted];
m7_37 -> m7_40  [color=red, key=1, label=jobId, style=dashed];
m7_37 -> m7_42  [color=red, key=1, label=jobId, style=dashed];
m7_38 -> m7_39  [color=red, key=0, style=solid];
m7_38 -> m7_47  [color=red, key=2, style=dotted];
m7_38 -> m7_48  [color=red, key=2, style=dotted];
m7_38 -> m7_40  [color=red, key=1, label=state, style=dashed];
m7_52 -> m7_53  [color=green, key=0, style=solid];
m7_52 -> m7_63  [color=green, key=2, style=dotted];
m7_52 -> m7_54  [color=green, key=1, label=propertyValue, style=dashed];
m7_52 -> m7_55  [color=green, key=1, label=propertyValue, style=dashed];
m7_52 -> m7_56  [color=green, key=1, label=propertyValue, style=dashed];
m7_53 -> m7_54  [color=green, key=0, style=solid];
m7_53 -> m7_59  [key=2, style=dotted];
m7_53 -> m7_55  [color=red, key=1, label=job, style=dashed];
m7_53 -> m7_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_53 -> m7_57  [color=darkseagreen4, key=1, label=job, style=dashed];
m7_53 -> m7_53  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m7_54 -> m7_55  [color=green, key=0, style=solid];
m7_54 -> m7_59  [color=green, key=0, style=solid];
m7_55 -> m7_56  [color=green, key=0, style=solid];
m7_55 -> m7_60  [color=red, key=2, style=dotted];
m7_55 -> m7_61  [color=red, key=2, style=dotted];
m7_55 -> m7_64  [color=green, key=2, style=dotted];
m7_55 -> m7_65  [color=green, key=2, style=dotted];
m7_56 -> m7_57  [color=green, key=0, style=solid];
m7_56 -> m7_62  [key=2, style=dotted];
m7_56 -> m7_59  [color=green, key=0, style=solid];
m7_56 -> m7_66  [color=green, key=2, style=dotted];
m7_57 -> m7_58  [color=green, key=0, style=solid];
m7_58 -> m7_24  [color=blue, key=0, style=bold];
m7_58 -> m7_61  [color=green, key=0, style=solid];
m7_58 -> m7_67  [color=green, key=2, style=dotted];
m7_58 -> m7_20  [color=green, key=2, style=dotted];
m8_23 -> m8_64  [key=0, style=solid];
m8_23 -> m8_65  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientExceptionContext", style=dashed];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_66  [key=0, style=solid];
m8_64 -> m8_30  [key=2, style=dotted];
m8_65 -> m8_64  [key=0, style=solid];
m8_65 -> m8_67  [key=2, style=dotted];
m8_66 -> m8_23  [color=blue, key=0, style=bold];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_46  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m8_44 -> m8_47  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m8_44 -> m8_50  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m8_44 -> m8_53  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m8_44 -> m8_54  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m8_44 -> m8_58  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m8_44 -> m8_49  [color=darkorchid, key=3, label="method methodReturn HangFire.Filters.CreatedContext InvokeClientFilter", style=bold];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_61  [key=2, style=dotted];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_48  [key=0, style=solid];
m8_47 -> m8_60  [key=0, style=solid];
m8_47 -> m8_38  [key=2, style=dotted];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_57  [key=0, style=solid];
m8_50 -> m8_62  [key=2, style=dotted];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_38  [key=2, style=dotted];
m8_53 -> m8_55  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m8_53 -> m8_58  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m8_53 -> m8_59  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_63  [key=2, style=dotted];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_63  [key=2, style=dotted];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_48  [color=darkorchid, key=3, label="Local variable bool wasError", style=bold];
m8_49 -> m8_50  [key=0, style=solid];
m8_51 -> m8_52  [key=0, style=solid];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_59  [key=0, style=solid];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_57  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_57  [key=0, style=solid];
m8_59 -> m8_60  [key=0, style=solid];
m8_56 -> m8_60  [key=0, style=solid];
m8_60 -> m8_44  [color=blue, key=0, style=bold];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_16  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_20  [key=0, style=solid];
m8_14 -> m8_21  [key=2, style=dotted];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_22  [key=2, style=dotted];
m8_16 -> m8_18  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m8_15 -> m8_16  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_23  [key=2, style=dotted];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_20  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_20 -> m8_13  [color=blue, key=0, style=bold];
m8_3 -> m8_5  [key=0, style=solid];
m8_3 -> m8_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m8_3 -> m8_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m8_3 -> m8_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_6 -> m8_11  [key=0, style=solid];
m8_6 -> m8_12  [key=2, style=dotted];
m8_8 -> m8_11  [key=0, style=solid];
m8_8 -> m8_12  [key=2, style=dotted];
m8_11 -> m8_3  [color=blue, key=0, style=bold];
m8_41 -> m8_42  [key=0, style=solid];
m8_34 -> m8_35  [color=red, key=0, style=solid];
m8_34 -> m8_37  [color=red, key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_38  [key=2, style=dotted];
m8_42 -> m8_43  [key=0, style=solid];
m8_42 -> m8_44  [key=2, style=dotted];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_26  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m8_39 -> m8_42  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m8_33 -> m8_34  [color=red, key=0, style=solid];
m8_36 -> m8_33  [color=blue, key=0, style=bold];
m8_40 -> m8_39  [color=blue, key=0, style=bold];
m8_40 -> m8_33  [color=green, key=0, style=bold];
m8_43 -> m8_41  [color=blue, key=0, style=bold];
m8_21 -> m8_24  [key=0, style=solid];
m8_21 -> m8_25  [color=red, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_21 -> m8_34  [color=red, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m8_21 -> m8_35  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_21 -> m8_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m8_24 -> m8_25  [color=red, key=0, style=solid];
m8_24 -> m8_29  [key=2, style=dotted];
m8_24 -> m8_26  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m8_24 -> m8_42  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m8_25 -> m8_26  [color=red, key=0, style=solid];
m8_25 -> m8_25  [color=red, key=3, label="Local variable System.Func<HangFire.Filters.CreatedContext> continuation", style=bold];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_30  [key=2, style=dotted];
m8_26 -> m8_31  [key=2, style=dotted];
m8_26 -> m8_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_32  [key=2, style=dotted];
m8_28 -> m8_21  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [color=red, key=0, style=solid];
m8_1 -> m8_2  [color=red, key=0, style=solid];
m8_1 -> m8_3  [color=red, key=2, style=dotted];
m8_1 -> m8_4  [color=red, key=2, style=dotted];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_68 -> m8_9  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m8_68 -> m8_10  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m8_68 -> m8_14  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m8_68 -> m8_17  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m8_69 -> m8_34  [color=red, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m8_70 -> m8_35  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m8_71 -> m8_42  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m8_72 -> m8_42  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m8_73 -> m8_42  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [color=blue, key=0, style=bold];
m9_22 -> m9_29  [key=0, style=solid];
m9_22 -> m9_35  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_42  [key=2, style=dotted];
m9_29 -> m9_32  [color=darkseagreen4, key=1, label=connection, style=dashed];
m9_29 -> m9_35  [color=darkseagreen4, key=1, label=connection, style=dashed];
m9_29 -> m9_37  [color=darkseagreen4, key=1, label=connection, style=dashed];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_46  [key=2, style=dotted];
m9_35 -> m9_47  [key=2, style=dotted];
m9_35 -> m9_25  [key=2, style=dotted];
m9_35 -> m9_48  [key=2, style=dotted];
m9_35 -> m9_49  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_43  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_45  [key=2, style=dotted];
m9_32 -> m9_35  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m9_32 -> m9_38  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_50  [key=2, style=dotted];
m9_37 -> m9_39  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_44  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_35  [key=0, style=solid];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_51  [key=2, style=dotted];
m9_34 -> m9_41  [key=0, style=solid];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_40  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_52  [key=2, style=dotted];
m9_41 -> m9_22  [color=blue, key=0, style=bold];
m9_25 -> m9_26  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [key=2, style=dotted];
m9_27 -> m9_25  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_15  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m9_11 -> m9_17  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m9_11 -> m9_20  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_14  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_18  [key=0, style=solid];
m9_15 -> m9_22  [key=2, style=dotted];
m9_17 -> m9_15  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_24  [key=2, style=dotted];
m9_13 -> m9_21  [key=0, style=solid];
m9_13 -> m9_10  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m9_14 -> m9_18  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m9_14 -> m9_19  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_16  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m9_16 -> m9_18  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m9_16 -> m9_19  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_20  [key=0, style=solid];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_23  [key=2, style=dotted];
m9_21 -> m9_11  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_7  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m9_4 -> m9_8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_6 -> m9_9  [key=0, style=solid];
m9_6 -> m9_10  [key=2, style=dotted];
m9_9 -> m9_4  [color=blue, key=0, style=bold];
m9_53 -> m9_7  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m9_53 -> m9_8  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m9_53 -> m9_15  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m9_53 -> m9_20  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m9_53 -> m9_26  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m9_53 -> m9_35  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m10_49 -> m10_84  [color=red, key=0, style=solid];
m10_49 -> m10_85  [color=red, key=1, label=string, style=dashed];
m10_84 -> m10_85  [color=red, key=0, style=solid];
m10_84 -> m10_70  [color=red, key=2, style=dotted];
m10_84 -> m10_86  [color=red, key=1, label=transaction, style=dashed];
m10_85 -> m10_86  [color=red, key=0, style=solid];
m10_85 -> m10_76  [color=red, key=2, style=dotted];
m10_86 -> m10_87  [color=red, key=0, style=solid];
m10_86 -> m10_79  [color=red, key=2, style=dotted];
m10_87 -> m10_49  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_59 -> m10_60  [color=red, key=0, style=solid];
m10_59 -> m10_74  [color=red, key=2, style=dotted];
m10_59 -> m10_80  [color=red, key=1, label="lambda expression", style=dashed];
m10_50 -> m10_51  [color=red, key=0, style=solid];
m10_50 -> m10_52  [color=red, key=1, label="params string[]", style=dashed];
m10_50 -> m10_54  [color=red, key=1, label=IRedisClient, style=dashed];
m10_50 -> m10_58  [color=red, key=1, label=string, style=dashed];
m10_50 -> m10_59  [color=red, key=1, label=string, style=dashed];
m10_50 -> m10_81  [color=red, key=1, label=string, style=dashed];
m10_50 -> m10_60  [color=red, key=1, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>", style=dashed];
m10_50 -> m10_61  [color=red, key=1, label=string, style=dashed];
m10_50 -> m10_62  [color=red, key=1, label=string, style=dashed];
m10_50 -> m10_63  [color=red, key=1, label=string, style=dashed];
m10_50 -> m10_64  [color=red, key=1, label="System.Collections.Generic.IList<HangFire.IStateAppliedFilter>", style=dashed];
m10_50 -> m10_65  [color=red, key=1, label=string, style=dashed];
m10_50 -> m10_38  [color=red, key=3, label="method methodReturn bool ApplyState", style=bold];
m10_51 -> m10_52  [color=red, key=0, style=solid];
m10_51 -> m10_45  [color=red, key=2, style=dotted];
m10_51 -> m10_68  [color=red, key=2, style=dotted];
m10_51 -> m10_55  [color=red, key=1, label=oldState, style=dashed];
m10_51 -> m10_56  [color=red, key=1, label=oldState, style=dashed];
m10_51 -> m10_61  [color=red, key=1, label=oldState, style=dashed];
m10_52 -> m10_53  [color=red, key=0, style=solid];
m10_52 -> m10_54  [color=red, key=0, style=solid];
m10_52 -> m10_69  [color=red, key=2, style=dotted];
m10_54 -> m10_55  [color=red, key=0, style=solid];
m10_54 -> m10_70  [color=red, key=2, style=dotted];
m10_54 -> m10_58  [color=red, key=1, label=transaction, style=dashed];
m10_54 -> m10_59  [color=red, key=1, label=transaction, style=dashed];
m10_54 -> m10_61  [color=red, key=1, label=transaction, style=dashed];
m10_54 -> m10_62  [color=red, key=1, label=transaction, style=dashed];
m10_54 -> m10_63  [color=red, key=1, label=transaction, style=dashed];
m10_54 -> m10_65  [color=red, key=1, label=transaction, style=dashed];
m10_54 -> m10_66  [color=red, key=1, label=transaction, style=dashed];
m10_58 -> m10_59  [color=red, key=0, style=solid];
m10_58 -> m10_73  [color=red, key=2, style=dotted];
m10_60 -> m10_61  [color=red, key=0, style=solid];
m10_60 -> m10_62  [color=red, key=0, style=solid];
m10_61 -> m10_60  [color=red, key=0, style=solid];
m10_61 -> m10_75  [color=red, key=2, style=dotted];
m10_62 -> m10_63  [color=red, key=0, style=solid];
m10_62 -> m10_76  [color=red, key=2, style=dotted];
m10_63 -> m10_64  [color=red, key=0, style=solid];
m10_63 -> m10_77  [color=red, key=2, style=dotted];
m10_64 -> m10_65  [color=red, key=0, style=solid];
m10_64 -> m10_66  [color=red, key=0, style=solid];
m10_65 -> m10_64  [color=red, key=0, style=solid];
m10_65 -> m10_78  [color=red, key=2, style=dotted];
m10_55 -> m10_56  [color=red, key=0, style=solid];
m10_55 -> m10_62  [color=red, key=0, style=solid];
m10_55 -> m10_71  [color=red, key=2, style=dotted];
m10_56 -> m10_57  [color=red, key=0, style=solid];
m10_56 -> m10_72  [color=red, key=2, style=dotted];
m10_56 -> m10_58  [color=red, key=1, label=descriptor, style=dashed];
m10_53 -> m10_67  [color=red, key=0, style=solid];
m10_66 -> m10_67  [color=red, key=0, style=solid];
m10_66 -> m10_79  [color=red, key=2, style=dotted];
m10_57 -> m10_58  [color=red, key=0, style=solid];
m10_57 -> m10_59  [color=red, key=0, style=solid];
m10_67 -> m10_50  [color=blue, key=0, style=bold];
m10_93 -> m10_94  [color=red, key=0, style=solid];
m10_93 -> m10_74  [color=red, key=2, style=dotted];
m10_93 -> m10_100  [color=red, key=1, label="lambda expression", style=dashed];
m10_88 -> m10_89  [color=red, key=0, style=solid];
m10_88 -> m10_91  [color=red, key=1, label="HangFire.States.JobState", style=dashed];
m10_88 -> m10_92  [color=red, key=1, label=bool, style=dashed];
m10_88 -> m10_93  [color=red, key=1, label=IRedisTransaction, style=dashed];
m10_88 -> m10_101  [color=red, key=1, label=string, style=dashed];
m10_88 -> m10_94  [color=red, key=1, label=IRedisTransaction, style=dashed];
m10_88 -> m10_105  [color=red, key=1, label=string, style=dashed];
m10_88 -> m10_95  [color=red, key=1, label="HangFire.States.JobState", style=dashed];
m10_88 -> m10_97  [color=red, key=1, label=IRedisTransaction, style=dashed];
m10_88 -> m10_109  [color=red, key=1, label=string, style=dashed];
m10_89 -> m10_90  [color=red, key=0, style=solid];
m10_89 -> m10_5  [color=red, key=2, style=dotted];
m10_89 -> m10_91  [color=red, key=1, label=properties, style=dashed];
m10_89 -> m10_94  [color=red, key=1, label=properties, style=dashed];
m10_89 -> m10_105  [color=red, key=1, label=properties, style=dashed];
m10_89 -> m10_95  [color=red, key=1, label=properties, style=dashed];
m10_89 -> m10_96  [color=red, key=1, label=properties, style=dashed];
m10_89 -> m10_97  [color=red, key=1, label=properties, style=dashed];
m10_89 -> m10_109  [color=red, key=1, label=properties, style=dashed];
m10_91 -> m10_92  [color=red, key=0, style=solid];
m10_91 -> m10_22  [color=red, key=2, style=dotted];
m10_92 -> m10_93  [color=red, key=0, style=solid];
m10_92 -> m10_95  [color=red, key=0, style=solid];
m10_94 -> m10_95  [color=red, key=0, style=solid];
m10_94 -> m10_74  [color=red, key=2, style=dotted];
m10_94 -> m10_104  [color=red, key=1, label="lambda expression", style=dashed];
m10_95 -> m10_96  [color=red, key=0, style=solid];
m10_95 -> m10_22  [color=red, key=2, style=dotted];
m10_97 -> m10_98  [color=red, key=0, style=solid];
m10_97 -> m10_74  [color=red, key=2, style=dotted];
m10_97 -> m10_108  [color=red, key=1, label="lambda expression", style=dashed];
m10_90 -> m10_91  [color=red, key=0, style=solid];
m10_90 -> m10_96  [color=red, key=1, label=now, style=dashed];
m10_96 -> m10_97  [color=red, key=0, style=solid];
m10_96 -> m10_99  [color=red, key=2, style=dotted];
m10_96 -> m10_22  [color=red, key=2, style=dotted];
m10_98 -> m10_88  [color=blue, key=0, style=bold];
m10_16 -> m10_20  [color=red, key=0, style=solid];
m10_20 -> m10_21  [color=red, key=0, style=solid];
m10_20 -> m10_22  [color=red, key=2, style=dotted];
m10_21 -> m10_16  [color=blue, key=0, style=bold];
m10_27 -> m10_28  [color=red, key=0, style=solid];
m10_27 -> m10_30  [color=red, key=1, label="HangFire.States.JobState", style=dashed];
m10_27 -> m10_33  [color=red, key=1, label=IRedisClient, style=dashed];
m10_27 -> m10_35  [color=red, key=1, label="HangFire.States.JobState", style=dashed];
m10_27 -> m10_36  [color=red, key=1, label=IRedisClient, style=dashed];
m10_27 -> m10_38  [color=red, key=1, label=IRedisClient, style=dashed];
m10_27 -> m10_40  [color=red, key=1, label=IRedisClient, style=dashed];
m10_27 -> m10_50  [color=darkorchid, key=3, label="method methodReturn bool Apply", style=bold];
m10_28 -> m10_29  [color=red, key=0, style=solid];
m10_28 -> m10_30  [color=red, key=0, style=solid];
m10_30 -> m10_31  [color=red, key=0, style=solid];
m10_30 -> m10_32  [color=red, key=0, style=solid];
m10_33 -> m10_34  [color=red, key=0, style=solid];
m10_33 -> m10_45  [color=red, key=2, style=dotted];
m10_33 -> m10_46  [color=red, key=2, style=dotted];
m10_33 -> m10_47  [color=red, key=2, style=dotted];
m10_35 -> m10_36  [color=red, key=0, style=solid];
m10_35 -> m10_37  [color=red, key=1, label=oldState, style=dashed];
m10_35 -> m10_38  [color=red, key=1, label=oldState, style=dashed];
m10_36 -> m10_37  [color=red, key=0, style=solid];
m10_36 -> m10_48  [color=red, key=2, style=dotted];
m10_36 -> m10_40  [color=red, key=1, label="HangFire.States.JobState", style=dashed];
m10_38 -> m10_34  [color=red, key=0, style=solid];
m10_38 -> m10_49  [color=red, key=2, style=dotted];
m10_40 -> m10_41  [color=red, key=0, style=solid];
m10_40 -> m10_50  [color=red, key=2, style=dotted];
m10_29 -> m10_41  [color=red, key=0, style=solid];
m10_29 -> m10_42  [color=red, key=2, style=dotted];
m10_31 -> m10_41  [color=red, key=0, style=solid];
m10_31 -> m10_42  [color=red, key=2, style=dotted];
m10_32 -> m10_33  [color=red, key=0, style=solid];
m10_32 -> m10_43  [color=red, key=2, style=dotted];
m10_32 -> m10_44  [color=red, key=2, style=dotted];
m10_32 -> m10_34  [color=red, key=1, label=changingFilters, style=dashed];
m10_34 -> m10_35  [color=red, key=0, style=solid];
m10_34 -> m10_39  [color=red, key=0, style=solid];
m10_34 -> m10_36  [color=red, key=1, label=filter, style=dashed];
m10_39 -> m10_40  [color=red, key=0, style=solid];
m10_39 -> m10_43  [color=red, key=2, style=dotted];
m10_39 -> m10_44  [color=red, key=2, style=dotted];
m10_37 -> m10_38  [color=red, key=0, style=solid];
m10_37 -> m10_34  [color=red, key=0, style=solid];
m10_41 -> m10_27  [color=blue, key=0, style=bold];
m10_9 -> m10_10  [color=red, key=0, style=solid];
m10_10 -> m10_11  [color=red, key=0, style=solid];
m10_10 -> m10_15  [color=red, key=2, style=dotted];
m10_10 -> m10_16  [color=red, key=2, style=dotted];
m10_11 -> m10_12  [color=red, key=0, style=solid];
m10_11 -> m10_17  [color=red, key=2, style=dotted];
m10_11 -> m10_16  [color=red, key=2, style=dotted];
m10_12 -> m10_13  [color=red, key=0, style=solid];
m10_12 -> m10_18  [color=red, key=2, style=dotted];
m10_12 -> m10_16  [color=red, key=2, style=dotted];
m10_13 -> m10_14  [color=red, key=0, style=solid];
m10_13 -> m10_19  [color=red, key=2, style=dotted];
m10_13 -> m10_16  [color=red, key=2, style=dotted];
m10_14 -> m10_9  [color=blue, key=0, style=bold];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_3  [color=blue, key=0, style=bold];
m10_108 -> m10_109  [color=red, key=0, style=solid];
m10_81 -> m10_82  [color=red, key=0, style=solid];
m10_81 -> m10_45  [color=red, key=2, style=dotted];
m10_81 -> m10_83  [color=red, key=2, style=dotted];
m10_80 -> m10_81  [color=red, key=0, style=solid];
m10_82 -> m10_80  [color=blue, key=0, style=bold];
m10_101 -> m10_102  [color=red, key=0, style=solid];
m10_101 -> m10_45  [color=red, key=2, style=dotted];
m10_101 -> m10_103  [color=red, key=2, style=dotted];
m10_105 -> m10_106  [color=red, key=0, style=solid];
m10_105 -> m10_45  [color=red, key=2, style=dotted];
m10_105 -> m10_107  [color=red, key=2, style=dotted];
m10_109 -> m10_110  [color=red, key=0, style=solid];
m10_109 -> m10_45  [color=red, key=2, style=dotted];
m10_109 -> m10_111  [color=red, key=2, style=dotted];
m10_109 -> m10_112  [color=red, key=2, style=dotted];
m10_100 -> m10_101  [color=red, key=0, style=solid];
m10_104 -> m10_105  [color=red, key=0, style=solid];
m10_102 -> m10_100  [color=blue, key=0, style=bold];
m10_106 -> m10_104  [color=blue, key=0, style=bold];
m10_110 -> m10_108  [color=blue, key=0, style=bold];
m10_23 -> m10_24  [color=red, key=0, style=solid];
m10_24 -> m10_25  [color=red, key=0, style=solid];
m10_24 -> m10_26  [color=red, key=2, style=dotted];
m10_25 -> m10_23  [color=blue, key=0, style=bold];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_8  [key=2, style=dotted];
m10_7 -> m10_5  [color=blue, key=0, style=bold];
m10_113 -> m10_1  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m10_114 -> m10_81  [color=red, key=1, label=string, style=dashed];
m10_115 -> m10_101  [color=red, key=1, label=string, style=dashed];
m10_115 -> m10_105  [color=red, key=1, label=string, style=dashed];
m10_115 -> m10_109  [color=red, key=1, label=string, style=dashed];
m10_116 -> m10_101  [color=red, key=1, label="HangFire.States.JobState", style=dashed];
m10_117 -> m10_105  [color=red, key=1, label=properties, style=dashed];
m10_117 -> m10_109  [color=red, key=1, label=properties, style=dashed];
m12_0 -> m12_1  [color=green, key=0, style=solid];
m12_0 -> m12_3  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m12_1 -> m12_2  [color=green, key=0, style=solid];
m12_1 -> m12_3  [color=green, key=0, style=solid];
m12_2 -> m12_4  [color=green, key=0, style=solid];
m12_2 -> m12_5  [color=green, key=2, style=dotted];
m12_3 -> m12_4  [color=green, key=0, style=solid];
m12_4 -> m12_0  [color=blue, key=0, style=bold];
m12_6 -> m12_7  [key=0, style=solid];
m12_7 -> m12_15  [key=2, style=dotted];
m12_7 -> m12_16  [key=2, style=dotted];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_10  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m12_7 -> m12_21  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m12_8 -> m12_9  [key=0, style=solid];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_13  [key=0, style=solid];
m12_9 -> m12_17  [key=2, style=dotted];
m12_10 -> m12_29  [color=darkorchid, key=3, label="method methodReturn string In", style=bold];
m12_10 -> m12_18  [key=2, style=dotted];
m12_10 -> m12_11  [key=0, style=solid];
m12_10 -> m12_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_11 -> m12_12  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_19  [key=2, style=dotted];
m12_14 -> m12_6  [color=blue, key=0, style=bold];
m12_29 -> m12_30  [color=green, key=0, style=solid];
m12_29 -> m12_31  [color=green, key=1, label=string, style=dashed];
m12_29 -> m12_34  [color=green, key=1, label=string, style=dashed];
m12_29 -> m12_10  [color=darkorchid, key=3, label="Parameter variable object args", style=bold];
m12_30 -> m12_31  [color=green, key=0, style=solid];
m12_30 -> m12_15  [color=green, key=2, style=dotted];
m12_30 -> m12_16  [color=green, key=2, style=dotted];
m12_30 -> m12_34  [color=green, key=1, label=sqlQuery, style=dashed];
m12_31 -> m12_32  [color=green, key=0, style=solid];
m12_31 -> m12_18  [color=green, key=2, style=dotted];
m12_31 -> m12_33  [color=green, key=1, label="lambda expression", style=dashed];
m12_32 -> m12_29  [color=blue, key=0, style=bold];
m12_44 -> m12_45  [key=0, style=solid];
m12_44 -> m12_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_44 -> m12_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_45 -> m12_15  [key=2, style=dotted];
m12_45 -> m12_16  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_49  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m12_46 -> m12_18  [key=2, style=dotted];
m12_46 -> m12_47  [key=0, style=solid];
m12_46 -> m12_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_47 -> m12_44  [color=blue, key=0, style=bold];
m12_18 -> m12_54  [key=0, style=solid];
m12_54 -> m12_55  [key=0, style=solid];
m12_54 -> m12_56  [key=2, style=dotted];
m12_55 -> m12_18  [color=blue, key=0, style=bold];
m12_26 -> m12_27  [key=0, style=solid];
m12_34 -> m12_35  [color=green, key=0, style=solid];
m12_34 -> m12_36  [color=green, key=2, style=dotted];
m12_34 -> m12_25  [color=green, key=2, style=dotted];
m12_34 -> m12_24  [color=green, key=2, style=dotted];
m12_34 -> m12_37  [color=green, key=1, label="lambda expression", style=dashed];
m12_33 -> m12_34  [color=green, key=0, style=solid];
m12_35 -> m12_33  [color=blue, key=0, style=bold];
m12_37 -> m12_38  [color=green, key=0, style=solid];
m12_38 -> m12_39  [color=green, key=0, style=solid];
m12_39 -> m12_37  [color=blue, key=0, style=bold];
m12_49 -> m12_36  [key=2, style=dotted];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_52  [key=2, style=dotted];
m12_21 -> m12_25  [key=2, style=dotted];
m12_21 -> m12_24  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_23  [key=2, style=dotted];
m12_21 -> m12_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_20 -> m12_21  [key=0, style=solid];
m12_48 -> m12_49  [key=0, style=solid];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_53  [key=2, style=dotted];
m12_22 -> m12_20  [color=blue, key=0, style=bold];
m12_51 -> m12_48  [color=blue, key=0, style=bold];
m12_27 -> m12_28  [key=0, style=solid];
m12_28 -> m12_26  [color=blue, key=0, style=bold];
m12_57 -> m12_3  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_30  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_31  [color=green, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_11  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_45  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_46  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_57 -> m12_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerJobQueueMonitoringApi", style=dashed];
m12_59 -> m12_34  [color=green, key=1, label=string, style=dashed];
m12_60 -> m12_34  [color=green, key=1, label=int, style=dashed];
m12_61 -> m12_34  [color=green, key=1, label=int, style=dashed];
m12_62 -> m12_34  [color=green, key=1, label=sqlQuery, style=dashed];
m12_63 -> m12_49  [color=darkseagreen4, key=1, label=string, style=dashed];
m12_64 -> m12_49  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m12_58 -> m12_21  [color=darkseagreen4, key=1, label=sqlQuery, style=dashed];
m14_23 -> m14_19  [color=blue, key=0, style=bold];
m14_23 -> m14_24  [key=0, style=solid];
m14_19 -> m14_20  [key=0, style=solid];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_24  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_17  [key=2, style=dotted];
m14_21 -> m14_31  [key=0, style=solid];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_25  [key=2, style=dotted];
m14_22 -> m14_26  [key=2, style=dotted];
m14_22 -> m14_32  [key=2, style=dotted];
m14_8 -> m14_44  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_6  [key=2, style=dotted];
m14_3 -> m14_7  [key=2, style=dotted];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_39  [key=2, style=dotted];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_24  [key=2, style=dotted];
m14_44 -> m14_34  [color=blue, key=0, style=bold];
m14_45 -> m14_8  [color=blue, key=0, style=bold];
m14_7 -> m14_4  [color=blue, key=0, style=bold];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_19  [key=2, style=dotted];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_33  [key=2, style=dotted];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_34  [key=2, style=dotted];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_35  [key=2, style=dotted];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_36  [key=2, style=dotted];
m14_28 -> m14_33  [key=2, style=dotted];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_37  [key=2, style=dotted];
m14_29 -> m14_24  [key=2, style=dotted];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_17  [key=2, style=dotted];
m14_31 -> m14_20  [color=blue, key=0, style=bold];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_34  [key=2, style=dotted];
m14_32 -> m14_27  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=2, style=dotted];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_0  [color=blue, key=0, style=bold];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_8  [key=2, style=dotted];
m14_5 -> m14_0  [color=blue, key=0, style=bold];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_8  [key=2, style=dotted];
m14_9 -> m14_10  [key=0, style=solid];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_8  [key=2, style=dotted];
m14_10 -> m14_13  [color=darkseagreen4, key=1, label=state, style=dashed];
m14_10 -> m14_17  [key=2, style=dotted];
m14_10 -> m14_15  [color=darkseagreen4, key=1, label=payload, style=dashed];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_17  [key=2, style=dotted];
m14_11 -> m14_13  [color=darkseagreen4, key=1, label=data, style=dashed];
m14_11 -> m14_14  [color=darkseagreen4, key=1, label=data, style=dashed];
m14_11 -> m14_15  [color=darkseagreen4, key=1, label=data, style=dashed];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_18  [key=2, style=dotted];
m14_13 -> m14_3  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_3  [key=2, style=dotted];
m14_12 -> m14_14  [key=0, style=solid];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_3  [key=2, style=dotted];
m14_14 -> m14_19  [key=2, style=dotted];
m14_15 -> m14_16  [key=0, style=solid];
m14_15 -> m14_3  [key=2, style=dotted];
m14_16 -> m14_9  [color=blue, key=0, style=bold];
m14_40 -> m14_41  [color=green, key=0, style=solid];
m14_40 -> m14_46  [key=2, style=dotted];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_8  [key=2, style=dotted];
m14_41 -> m14_39  [color=green, key=0, style=solid];
m14_41 -> m14_47  [color=green, key=2, style=dotted];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_26  [key=2, style=dotted];
m14_43 -> m14_40  [color=blue, key=0, style=bold];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_48  [key=2, style=dotted];
m14_34 -> m14_38  [key=0, style=solid];
m14_39 -> m14_41  [color=green, key=1, label=payload, style=dashed];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_42  [key=0, style=solid];
m14_39 -> m14_44  [key=0, style=solid];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_40  [color=darkseagreen4, key=1, label=enqueuedState, style=dashed];
m14_38 -> m14_45  [key=2, style=dotted];
m14_38 -> m14_35  [color=blue, key=0, style=bold];
m14_49 -> m14_50  [key=0, style=solid];
m14_51 -> m14_52  [key=0, style=solid];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_54  [key=0, style=solid];
m14_53 -> m14_52  [key=0, style=solid];
m14_53 -> m14_62  [key=2, style=dotted];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_63  [key=2, style=dotted];
m14_54 -> m14_56  [color=darkseagreen4, key=1, label=payload, style=dashed];
m14_55 -> m14_56  [key=0, style=solid];
m14_56 -> m14_57  [key=0, style=solid];
m14_56 -> m14_64  [key=2, style=dotted];
m14_57 -> m14_50  [key=0, style=solid];
m14_57 -> m14_65  [key=2, style=dotted];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_66  [key=2, style=dotted];
m14_50 -> m14_51  [key=0, style=solid];
m14_50 -> m14_58  [key=0, style=solid];
m14_50 -> m14_59  [key=0, style=solid];
m14_50 -> m14_61  [key=0, style=solid];
m14_59 -> m14_60  [key=0, style=solid];
m14_58 -> m14_61  [key=0, style=solid];
m14_61 -> m14_49  [color=blue, key=0, style=bold];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_3  [key=2, style=dotted];
m14_35 -> m14_36  [key=0, style=solid];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_8  [key=2, style=dotted];
m14_67 -> m14_41  [color=green, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_1  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_2  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_3  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_4  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_10  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_11  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_12  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_13  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_14  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_21  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_22  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_23  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_24  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_25  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_26  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_27  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_28  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_29  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_30  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_38  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_39  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_40  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_43  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_51  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_52  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_53  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_54  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_55  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_56  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_57  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m14_67 -> m14_60  [color=darkseagreen4, key=1, label="HangFire.Server.PrefetchJobFetcher", style=dashed];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_10  [key=0, style=solid];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_11  [key=2, style=dotted];
m15_8 -> m15_8  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m15_9 -> m15_7  [key=0, style=solid];
m15_9 -> m15_12  [key=2, style=dotted];
m15_10 -> m15_6  [color=blue, key=0, style=bold];
m15_13 -> m15_14  [key=0, style=solid];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_16  [key=2, style=dotted];
m15_15 -> m15_13  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label="Hangfire.Server.IServerComponent", style=dashed];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_2 -> m15_4  [key=0, style=solid];
m15_2 -> m15_5  [key=2, style=dotted];
m15_4 -> m15_0  [color=blue, key=0, style=bold];
m15_17 -> m15_3  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopComponent", style=dashed];
m15_17 -> m15_9  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopComponent", style=dashed];
m15_17 -> m15_14  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopComponent", style=dashed];
m18_45 -> m18_354  [key=0, style=solid];
m18_45 -> m18_355  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_45 -> m18_356  [color=darkseagreen4, key=1, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m18_354 -> m18_355  [key=0, style=solid];
m18_354 -> m18_87  [key=2, style=dotted];
m18_354 -> m18_88  [key=2, style=dotted];
m18_355 -> m18_356  [key=0, style=solid];
m18_355 -> m18_78  [key=2, style=dotted];
m18_355 -> m18_89  [key=2, style=dotted];
m18_356 -> m18_357  [key=0, style=solid];
m18_356 -> m18_336  [key=2, style=dotted];
m18_357 -> m18_45  [color=blue, key=0, style=bold];
m18_27 -> m18_28  [key=0, style=solid];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_10  [key=2, style=dotted];
m18_28 -> m18_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_29 -> m18_27  [color=blue, key=0, style=bold];
m18_358 -> m18_359  [key=0, style=solid];
m18_358 -> m18_360  [color=darkseagreen4, key=1, label="System.Collections.Generic.ICollection<Hangfire.SqlServer.Entities.SqlJob>", style=dashed];
m18_358 -> m18_363  [color=darkseagreen4, key=1, label="System.Func<Hangfire.SqlServer.Entities.SqlJob, Hangfire.Common.Job, System.Collections.Generic.Dictionary<string, string>, TDto>", style=dashed];
m18_359 -> m18_360  [key=0, style=solid];
m18_359 -> m18_367  [key=2, style=dotted];
m18_359 -> m18_364  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_359 -> m18_365  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_360 -> m18_361  [key=0, style=solid];
m18_360 -> m18_365  [key=0, style=solid];
m18_360 -> m18_363  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_360 -> m18_364  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_363 -> m18_364  [key=0, style=solid];
m18_363 -> m18_345  [key=2, style=dotted];
m18_363 -> m18_368  [key=2, style=dotted];
m18_364 -> m18_360  [key=0, style=solid];
m18_364 -> m18_369  [key=2, style=dotted];
m18_364 -> m18_370  [key=2, style=dotted];
m18_364 -> m18_92  [key=2, style=dotted];
m18_365 -> m18_366  [key=0, style=solid];
m18_365 -> m18_371  [key=2, style=dotted];
m18_361 -> m18_362  [key=0, style=solid];
m18_361 -> m18_352  [key=2, style=dotted];
m18_362 -> m18_363  [key=0, style=solid];
m18_362 -> m18_222  [key=2, style=dotted];
m18_366 -> m18_358  [color=blue, key=0, style=bold];
m18_14 -> m18_341  [key=0, style=solid];
m18_14 -> m18_342  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_341 -> m18_342  [key=0, style=solid];
m18_341 -> m18_87  [key=2, style=dotted];
m18_341 -> m18_88  [key=2, style=dotted];
m18_342 -> m18_343  [key=0, style=solid];
m18_342 -> m18_78  [key=2, style=dotted];
m18_342 -> m18_257  [key=2, style=dotted];
m18_343 -> m18_344  [key=0, style=solid];
m18_344 -> m18_14  [color=blue, key=0, style=bold];
m18_229 -> m18_230  [key=0, style=solid];
m18_230 -> m18_231  [key=0, style=solid];
m18_230 -> m18_10  [key=2, style=dotted];
m18_230 -> m18_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_231 -> m18_229  [color=blue, key=0, style=bold];
m18_10 -> m18_329  [key=0, style=solid];
m18_329 -> m18_330  [key=0, style=solid];
m18_329 -> m18_331  [key=2, style=dotted];
m18_330 -> m18_10  [color=blue, key=0, style=bold];
m18_188 -> m18_189  [key=0, style=solid];
m18_189 -> m18_190  [key=0, style=solid];
m18_189 -> m18_10  [key=2, style=dotted];
m18_189 -> m18_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_190 -> m18_188  [color=blue, key=0, style=bold];
m18_235 -> m18_236  [key=0, style=solid];
m18_236 -> m18_237  [key=0, style=solid];
m18_236 -> m18_87  [key=2, style=dotted];
m18_236 -> m18_88  [key=2, style=dotted];
m18_236 -> m18_245  [color=darkseagreen4, key=1, label=sql, style=dashed];
m18_237 -> m18_238  [key=0, style=solid];
m18_237 -> m18_10  [key=2, style=dotted];
m18_237 -> m18_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_237 -> m18_239  [color=darkseagreen4, key=1, label=statistics, style=dashed];
m18_238 -> m18_239  [key=0, style=solid];
m18_238 -> m18_241  [key=2, style=dotted];
m18_238 -> m18_242  [key=2, style=dotted];
m18_238 -> m18_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_239 -> m18_240  [key=0, style=solid];
m18_240 -> m18_235  [color=blue, key=0, style=bold];
m18_171 -> m18_172  [key=0, style=solid];
m18_171 -> m18_173  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_172 -> m18_173  [key=0, style=solid];
m18_172 -> m18_20  [key=2, style=dotted];
m18_173 -> m18_174  [key=0, style=solid];
m18_173 -> m18_176  [key=2, style=dotted];
m18_173 -> m18_178  [color=darkseagreen4, key=1, label=fetchedJobIds, style=dashed];
m18_174 -> m18_175  [key=0, style=solid];
m18_174 -> m18_10  [key=2, style=dotted];
m18_174 -> m18_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_175 -> m18_171  [color=blue, key=0, style=bold];
m18_187 -> m18_262  [key=0, style=solid];
m18_187 -> m18_269  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_187 -> m18_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_187 -> m18_270  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_262 -> m18_263  [key=0, style=solid];
m18_262 -> m18_266  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_262 -> m18_267  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_269 -> m18_270  [key=0, style=solid];
m18_269 -> m18_209  [key=2, style=dotted];
m18_269 -> m18_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_269 -> m18_279  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_270 -> m18_271  [key=0, style=solid];
m18_270 -> m18_273  [key=2, style=dotted];
m18_263 -> m18_264  [key=0, style=solid];
m18_263 -> m18_90  [key=2, style=dotted];
m18_263 -> m18_266  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_263 -> m18_269  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_266 -> m18_267  [key=0, style=solid];
m18_266 -> m18_92  [key=2, style=dotted];
m18_267 -> m18_268  [key=0, style=solid];
m18_267 -> m18_272  [key=2, style=dotted];
m18_267 -> m18_267  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_264 -> m18_265  [key=0, style=solid];
m18_264 -> m18_268  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_265 -> m18_266  [key=0, style=solid];
m18_265 -> m18_269  [key=0, style=solid];
m18_268 -> m18_265  [key=0, style=solid];
m18_268 -> m18_268  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_271 -> m18_187  [color=blue, key=0, style=bold];
m18_125 -> m18_126  [key=0, style=solid];
m18_126 -> m18_127  [key=0, style=solid];
m18_126 -> m18_135  [key=2, style=dotted];
m18_126 -> m18_136  [key=2, style=dotted];
m18_126 -> m18_137  [key=2, style=dotted];
m18_126 -> m18_138  [key=2, style=dotted];
m18_126 -> m18_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_126 -> m18_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_126 -> m18_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_126 -> m18_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_126 -> m18_128  [color=darkseagreen4, key=1, label=tuples, style=dashed];
m18_127 -> m18_128  [key=0, style=solid];
m18_127 -> m18_139  [key=2, style=dotted];
m18_127 -> m18_132  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_127 -> m18_133  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_128 -> m18_129  [key=0, style=solid];
m18_128 -> m18_133  [key=0, style=solid];
m18_128 -> m18_130  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m18_128 -> m18_132  [color=darkseagreen4, key=1, label=tuple, style=dashed];
m18_132 -> m18_128  [key=0, style=solid];
m18_132 -> m18_142  [key=2, style=dotted];
m18_132 -> m18_92  [key=2, style=dotted];
m18_133 -> m18_134  [key=0, style=solid];
m18_129 -> m18_130  [key=0, style=solid];
m18_129 -> m18_140  [key=2, style=dotted];
m18_129 -> m18_131  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m18_129 -> m18_158  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m18_130 -> m18_131  [key=0, style=solid];
m18_130 -> m18_141  [key=2, style=dotted];
m18_130 -> m18_132  [color=darkseagreen4, key=1, label=counters, style=dashed];
m18_131 -> m18_132  [key=0, style=solid];
m18_131 -> m18_10  [key=2, style=dotted];
m18_131 -> m18_157  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_134 -> m18_125  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorage", style=dashed];
m18_0 -> m18_4  [color=darkseagreen4, key=1, label="int?", style=dashed];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_4 -> m18_5  [key=0, style=solid];
m18_2 -> m18_5  [key=0, style=solid];
m18_2 -> m18_6  [key=2, style=dotted];
m18_5 -> m18_0  [color=blue, key=0, style=bold];
m18_115 -> m18_116  [key=0, style=solid];
m18_115 -> m18_119  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_116 -> m18_117  [key=0, style=solid];
m18_116 -> m18_10  [key=2, style=dotted];
m18_116 -> m18_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_117 -> m18_115  [color=blue, key=0, style=bold];
m18_337 -> m18_338  [key=0, style=solid];
m18_11 -> m18_12  [key=0, style=solid];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_14  [key=2, style=dotted];
m18_13 -> m18_11  [color=blue, key=0, style=bold];
m18_30 -> m18_31  [key=0, style=solid];
m18_31 -> m18_32  [key=0, style=solid];
m18_31 -> m18_14  [key=2, style=dotted];
m18_32 -> m18_30  [color=blue, key=0, style=bold];
m18_36 -> m18_37  [key=0, style=solid];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_14  [key=2, style=dotted];
m18_38 -> m18_36  [color=blue, key=0, style=bold];
m18_43 -> m18_44  [color=red, key=0, style=solid];
m18_43 -> m18_45  [color=red, key=2, style=dotted];
m18_43 -> m18_46  [color=red, key=1, label="lambda expression", style=dashed];
m18_42 -> m18_43  [color=red, key=0, style=solid];
m18_44 -> m18_42  [color=blue, key=0, style=bold];
m18_46 -> m18_47  [color=red, key=0, style=solid];
m18_47 -> m18_48  [color=red, key=0, style=solid];
m18_47 -> m18_49  [color=red, key=2, style=dotted];
m18_47 -> m18_50  [color=red, key=2, style=dotted];
m18_47 -> m18_51  [color=red, key=2, style=dotted];
m18_48 -> m18_46  [color=blue, key=0, style=bold];
m18_56 -> m18_57  [color=red, key=0, style=solid];
m18_56 -> m18_45  [color=red, key=2, style=dotted];
m18_56 -> m18_58  [color=red, key=1, label="lambda expression", style=dashed];
m18_55 -> m18_56  [color=red, key=0, style=solid];
m18_57 -> m18_55  [color=blue, key=0, style=bold];
m18_58 -> m18_59  [color=red, key=0, style=solid];
m18_59 -> m18_60  [color=red, key=0, style=solid];
m18_59 -> m18_61  [color=red, key=2, style=dotted];
m18_59 -> m18_51  [color=red, key=2, style=dotted];
m18_60 -> m18_58  [color=blue, key=0, style=bold];
m18_65 -> m18_66  [key=0, style=solid];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_68  [key=2, style=dotted];
m18_67 -> m18_65  [color=blue, key=0, style=bold];
m18_72 -> m18_73  [key=0, style=solid];
m18_73 -> m18_74  [key=0, style=solid];
m18_73 -> m18_68  [key=2, style=dotted];
m18_74 -> m18_72  [color=blue, key=0, style=bold];
m18_79 -> m18_80  [key=0, style=solid];
m18_80 -> m18_81  [key=0, style=solid];
m18_80 -> m18_87  [key=2, style=dotted];
m18_80 -> m18_88  [key=2, style=dotted];
m18_80 -> m18_78  [key=2, style=dotted];
m18_80 -> m18_89  [key=2, style=dotted];
m18_80 -> m18_82  [color=darkseagreen4, key=1, label=servers, style=dashed];
m18_81 -> m18_82  [key=0, style=solid];
m18_81 -> m18_90  [key=2, style=dotted];
m18_81 -> m18_84  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_81 -> m18_85  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_82 -> m18_83  [key=0, style=solid];
m18_82 -> m18_85  [key=0, style=solid];
m18_82 -> m18_84  [color=darkseagreen4, key=1, label=server, style=dashed];
m18_84 -> m18_82  [key=0, style=solid];
m18_84 -> m18_91  [key=2, style=dotted];
m18_84 -> m18_92  [key=2, style=dotted];
m18_85 -> m18_86  [key=0, style=solid];
m18_83 -> m18_84  [key=0, style=solid];
m18_83 -> m18_78  [key=2, style=dotted];
m18_86 -> m18_79  [color=blue, key=0, style=bold];
m18_97 -> m18_98  [key=0, style=solid];
m18_97 -> m18_45  [key=2, style=dotted];
m18_97 -> m18_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_96 -> m18_97  [key=0, style=solid];
m18_98 -> m18_96  [color=blue, key=0, style=bold];
m18_99 -> m18_100  [key=0, style=solid];
m18_100 -> m18_101  [key=0, style=solid];
m18_100 -> m18_102  [key=2, style=dotted];
m18_100 -> m18_103  [key=2, style=dotted];
m18_101 -> m18_99  [color=blue, key=0, style=bold];
m18_108 -> m18_109  [key=0, style=solid];
m18_108 -> m18_45  [key=2, style=dotted];
m18_108 -> m18_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_107 -> m18_108  [key=0, style=solid];
m18_109 -> m18_107  [color=blue, key=0, style=bold];
m18_110 -> m18_111  [key=0, style=solid];
m18_111 -> m18_112  [key=0, style=solid];
m18_111 -> m18_113  [key=2, style=dotted];
m18_111 -> m18_50  [key=2, style=dotted];
m18_111 -> m18_114  [key=2, style=dotted];
m18_111 -> m18_103  [key=2, style=dotted];
m18_112 -> m18_110  [color=blue, key=0, style=bold];
m18_119 -> m18_120  [key=0, style=solid];
m18_119 -> m18_45  [key=2, style=dotted];
m18_119 -> m18_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_118 -> m18_119  [key=0, style=solid];
m18_120 -> m18_118  [color=blue, key=0, style=bold];
m18_121 -> m18_122  [key=0, style=solid];
m18_122 -> m18_123  [key=0, style=solid];
m18_122 -> m18_124  [key=2, style=dotted];
m18_122 -> m18_103  [key=2, style=dotted];
m18_123 -> m18_121  [color=blue, key=0, style=bold];
m18_143 -> m18_144  [key=0, style=solid];
m18_147 -> m18_148  [key=0, style=solid];
m18_151 -> m18_152  [key=0, style=solid];
m18_154 -> m18_155  [key=0, style=solid];
m18_158 -> m18_159  [key=0, style=solid];
m18_158 -> m18_160  [key=2, style=dotted];
m18_157 -> m18_158  [key=0, style=solid];
m18_144 -> m18_145  [key=0, style=solid];
m18_144 -> m18_146  [key=2, style=dotted];
m18_145 -> m18_143  [color=blue, key=0, style=bold];
m18_148 -> m18_149  [key=0, style=solid];
m18_148 -> m18_150  [key=2, style=dotted];
m18_149 -> m18_147  [color=blue, key=0, style=bold];
m18_152 -> m18_153  [key=0, style=solid];
m18_153 -> m18_151  [color=blue, key=0, style=bold];
m18_155 -> m18_156  [key=0, style=solid];
m18_156 -> m18_154  [color=blue, key=0, style=bold];
m18_159 -> m18_157  [color=blue, key=0, style=bold];
m18_168 -> m18_169  [key=0, style=solid];
m18_168 -> m18_170  [key=2, style=dotted];
m18_167 -> m18_168  [key=0, style=solid];
m18_169 -> m18_167  [color=blue, key=0, style=bold];
m18_178 -> m18_179  [key=0, style=solid];
m18_178 -> m18_180  [key=2, style=dotted];
m18_177 -> m18_178  [key=0, style=solid];
m18_179 -> m18_177  [color=blue, key=0, style=bold];
m18_184 -> m18_185  [key=0, style=solid];
m18_185 -> m18_186  [key=0, style=solid];
m18_185 -> m18_187  [key=2, style=dotted];
m18_186 -> m18_184  [color=blue, key=0, style=bold];
m18_191 -> m18_192  [key=0, style=solid];
m18_192 -> m18_193  [key=0, style=solid];
m18_192 -> m18_187  [key=2, style=dotted];
m18_193 -> m18_191  [color=blue, key=0, style=bold];
m18_199 -> m18_200  [key=0, style=solid];
m18_199 -> m18_207  [key=2, style=dotted];
m18_199 -> m18_203  [color=darkseagreen4, key=1, label=multi, style=dashed];
m18_199 -> m18_204  [color=darkseagreen4, key=1, label=multi, style=dashed];
m18_197 -> m18_198  [key=0, style=solid];
m18_197 -> m18_199  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_198 -> m18_199  [key=0, style=solid];
m18_198 -> m18_87  [key=2, style=dotted];
m18_198 -> m18_88  [key=2, style=dotted];
m18_200 -> m18_201  [key=0, style=solid];
m18_200 -> m18_78  [key=2, style=dotted];
m18_200 -> m18_208  [key=2, style=dotted];
m18_200 -> m18_205  [color=darkseagreen4, key=1, label=job, style=dashed];
m18_203 -> m18_204  [key=0, style=solid];
m18_203 -> m18_78  [key=2, style=dotted];
m18_203 -> m18_209  [key=2, style=dotted];
m18_203 -> m18_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_203 -> m18_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_203 -> m18_205  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m18_204 -> m18_205  [key=0, style=solid];
m18_204 -> m18_78  [key=2, style=dotted];
m18_204 -> m18_89  [key=2, style=dotted];
m18_204 -> m18_135  [key=2, style=dotted];
m18_204 -> m18_218  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_201 -> m18_202  [key=0, style=solid];
m18_201 -> m18_203  [key=0, style=solid];
m18_205 -> m18_206  [key=0, style=solid];
m18_205 -> m18_210  [key=2, style=dotted];
m18_205 -> m18_211  [key=2, style=dotted];
m18_202 -> m18_206  [key=0, style=solid];
m18_212 -> m18_213  [key=0, style=solid];
m18_215 -> m18_216  [key=0, style=solid];
m18_218 -> m18_219  [key=0, style=solid];
m18_206 -> m18_197  [color=blue, key=0, style=bold];
m18_213 -> m18_214  [key=0, style=solid];
m18_214 -> m18_212  [color=blue, key=0, style=bold];
m18_216 -> m18_217  [key=0, style=solid];
m18_217 -> m18_215  [color=blue, key=0, style=bold];
m18_219 -> m18_220  [key=0, style=solid];
m18_219 -> m18_221  [key=2, style=dotted];
m18_219 -> m18_222  [key=2, style=dotted];
m18_219 -> m18_78  [key=2, style=dotted];
m18_220 -> m18_218  [color=blue, key=0, style=bold];
m18_226 -> m18_227  [key=0, style=solid];
m18_227 -> m18_228  [key=0, style=solid];
m18_227 -> m18_14  [key=2, style=dotted];
m18_228 -> m18_226  [color=blue, key=0, style=bold];
m18_232 -> m18_233  [key=0, style=solid];
m18_233 -> m18_234  [key=0, style=solid];
m18_233 -> m18_14  [key=2, style=dotted];
m18_234 -> m18_232  [color=blue, key=0, style=bold];
m18_245 -> m18_246  [key=0, style=solid];
m18_245 -> m18_207  [key=2, style=dotted];
m18_245 -> m18_247  [color=darkseagreen4, key=1, label=multi, style=dashed];
m18_245 -> m18_248  [color=darkseagreen4, key=1, label=multi, style=dashed];
m18_245 -> m18_249  [color=darkseagreen4, key=1, label=multi, style=dashed];
m18_245 -> m18_250  [color=darkseagreen4, key=1, label=multi, style=dashed];
m18_245 -> m18_251  [color=darkseagreen4, key=1, label=multi, style=dashed];
m18_245 -> m18_252  [color=darkseagreen4, key=1, label=multi, style=dashed];
m18_245 -> m18_253  [color=darkseagreen4, key=1, label=multi, style=dashed];
m18_243 -> m18_244  [key=0, style=solid];
m18_243 -> m18_245  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_258 -> m18_259  [key=0, style=solid];
m18_244 -> m18_245  [key=0, style=solid];
m18_244 -> m18_256  [key=2, style=dotted];
m18_244 -> m18_246  [color=darkseagreen4, key=1, label=stats, style=dashed];
m18_244 -> m18_247  [color=darkseagreen4, key=1, label=stats, style=dashed];
m18_244 -> m18_248  [color=darkseagreen4, key=1, label=stats, style=dashed];
m18_244 -> m18_249  [color=darkseagreen4, key=1, label=stats, style=dashed];
m18_244 -> m18_250  [color=darkseagreen4, key=1, label=stats, style=dashed];
m18_244 -> m18_251  [color=darkseagreen4, key=1, label=stats, style=dashed];
m18_244 -> m18_252  [color=darkseagreen4, key=1, label=stats, style=dashed];
m18_244 -> m18_253  [color=darkseagreen4, key=1, label=stats, style=dashed];
m18_244 -> m18_254  [color=darkseagreen4, key=1, label=stats, style=dashed];
m18_246 -> m18_247  [key=0, style=solid];
m18_246 -> m18_78  [key=2, style=dotted];
m18_246 -> m18_257  [key=2, style=dotted];
m18_247 -> m18_248  [key=0, style=solid];
m18_247 -> m18_78  [key=2, style=dotted];
m18_247 -> m18_257  [key=2, style=dotted];
m18_248 -> m18_249  [key=0, style=solid];
m18_248 -> m18_78  [key=2, style=dotted];
m18_248 -> m18_257  [key=2, style=dotted];
m18_249 -> m18_250  [key=0, style=solid];
m18_249 -> m18_78  [key=2, style=dotted];
m18_249 -> m18_257  [key=2, style=dotted];
m18_250 -> m18_251  [key=0, style=solid];
m18_250 -> m18_78  [key=2, style=dotted];
m18_250 -> m18_257  [key=2, style=dotted];
m18_251 -> m18_252  [key=0, style=solid];
m18_251 -> m18_78  [key=2, style=dotted];
m18_251 -> m18_208  [key=2, style=dotted];
m18_252 -> m18_253  [key=0, style=solid];
m18_252 -> m18_78  [key=2, style=dotted];
m18_252 -> m18_208  [key=2, style=dotted];
m18_253 -> m18_254  [key=0, style=solid];
m18_253 -> m18_78  [key=2, style=dotted];
m18_253 -> m18_257  [key=2, style=dotted];
m18_254 -> m18_255  [key=0, style=solid];
m18_255 -> m18_243  [color=blue, key=0, style=bold];
m18_259 -> m18_260  [key=0, style=solid];
m18_259 -> m18_146  [key=2, style=dotted];
m18_259 -> m18_261  [key=2, style=dotted];
m18_260 -> m18_258  [color=blue, key=0, style=bold];
m18_275 -> m18_276  [key=0, style=solid];
m18_275 -> m18_277  [key=2, style=dotted];
m18_275 -> m18_278  [key=2, style=dotted];
m18_274 -> m18_275  [key=0, style=solid];
m18_279 -> m18_280  [key=0, style=solid];
m18_276 -> m18_274  [color=blue, key=0, style=bold];
m18_280 -> m18_281  [key=0, style=solid];
m18_281 -> m18_279  [color=blue, key=0, style=bold];
m18_294 -> m18_295  [key=0, style=solid];
m18_294 -> m18_277  [key=2, style=dotted];
m18_294 -> m18_278  [key=2, style=dotted];
m18_293 -> m18_294  [key=0, style=solid];
m18_296 -> m18_297  [key=0, style=solid];
m18_295 -> m18_293  [color=blue, key=0, style=bold];
m18_297 -> m18_298  [key=0, style=solid];
m18_298 -> m18_296  [color=blue, key=0, style=bold];
m18_318 -> m18_319  [key=0, style=solid];
m18_321 -> m18_322  [key=0, style=solid];
m18_319 -> m18_320  [key=0, style=solid];
m18_320 -> m18_318  [color=blue, key=0, style=bold];
m18_322 -> m18_323  [key=0, style=solid];
m18_323 -> m18_321  [color=blue, key=0, style=bold];
m18_338 -> m18_339  [key=0, style=solid];
m18_338 -> m18_340  [key=2, style=dotted];
m18_338 -> m18_103  [key=2, style=dotted];
m18_339 -> m18_337  [color=blue, key=0, style=bold];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_24  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_20  [key=2, style=dotted];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_21  [key=2, style=dotted];
m18_25 -> m18_26  [key=0, style=solid];
m18_26 -> m18_22  [color=blue, key=0, style=bold];
m18_104 -> m18_105  [key=0, style=solid];
m18_104 -> m18_108  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_105 -> m18_106  [key=0, style=solid];
m18_105 -> m18_10  [key=2, style=dotted];
m18_105 -> m18_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_106 -> m18_104  [color=blue, key=0, style=bold];
m18_180 -> m18_372  [key=0, style=solid];
m18_180 -> m18_373  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_372 -> m18_373  [key=0, style=solid];
m18_372 -> m18_87  [key=2, style=dotted];
m18_372 -> m18_88  [key=2, style=dotted];
m18_373 -> m18_374  [key=0, style=solid];
m18_373 -> m18_78  [key=2, style=dotted];
m18_373 -> m18_89  [key=2, style=dotted];
m18_373 -> m18_375  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m18_374 -> m18_375  [key=0, style=solid];
m18_374 -> m18_379  [key=2, style=dotted];
m18_374 -> m18_376  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_374 -> m18_377  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_375 -> m18_376  [key=0, style=solid];
m18_375 -> m18_377  [key=0, style=solid];
m18_376 -> m18_375  [key=0, style=solid];
m18_376 -> m18_380  [key=2, style=dotted];
m18_376 -> m18_381  [key=2, style=dotted];
m18_376 -> m18_382  [key=2, style=dotted];
m18_376 -> m18_211  [key=2, style=dotted];
m18_376 -> m18_92  [key=2, style=dotted];
m18_377 -> m18_378  [key=0, style=solid];
m18_377 -> m18_371  [key=2, style=dotted];
m18_378 -> m18_180  [color=blue, key=0, style=bold];
m18_194 -> m18_195  [key=0, style=solid];
m18_194 -> m18_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_195 -> m18_196  [key=0, style=solid];
m18_195 -> m18_10  [key=2, style=dotted];
m18_195 -> m18_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_196 -> m18_194  [color=blue, key=0, style=bold];
m18_7 -> m18_8  [key=0, style=solid];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_10  [key=2, style=dotted];
m18_8 -> m18_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_9 -> m18_7  [color=blue, key=0, style=bold];
m18_170 -> m18_332  [key=0, style=solid];
m18_170 -> m18_333  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_332 -> m18_333  [key=0, style=solid];
m18_332 -> m18_87  [key=2, style=dotted];
m18_332 -> m18_88  [key=2, style=dotted];
m18_333 -> m18_334  [key=0, style=solid];
m18_333 -> m18_78  [key=2, style=dotted];
m18_333 -> m18_89  [key=2, style=dotted];
m18_334 -> m18_335  [key=0, style=solid];
m18_334 -> m18_336  [key=2, style=dotted];
m18_334 -> m18_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_335 -> m18_170  [color=blue, key=0, style=bold];
m18_223 -> m18_224  [key=0, style=solid];
m18_224 -> m18_225  [key=0, style=solid];
m18_224 -> m18_10  [key=2, style=dotted];
m18_224 -> m18_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_225 -> m18_223  [color=blue, key=0, style=bold];
m18_93 -> m18_94  [key=0, style=solid];
m18_93 -> m18_97  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_94 -> m18_95  [key=0, style=solid];
m18_94 -> m18_10  [key=2, style=dotted];
m18_94 -> m18_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_95 -> m18_93  [color=blue, key=0, style=bold];
m18_345 -> m18_346  [key=0, style=solid];
m18_345 -> m18_347  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_346 -> m18_347  [key=0, style=solid];
m18_346 -> m18_352  [key=2, style=dotted];
m18_346 -> m18_348  [color=darkseagreen4, key=1, label=data, style=dashed];
m18_347 -> m18_348  [key=0, style=solid];
m18_348 -> m18_351  [key=0, style=solid];
m18_348 -> m18_353  [key=2, style=dotted];
m18_349 -> m18_350  [key=0, style=solid];
m18_350 -> m18_351  [key=0, style=solid];
m18_351 -> m18_345  [color=blue, key=0, style=bold];
m18_75 -> m18_76  [key=0, style=solid];
m18_76 -> m18_77  [key=0, style=solid];
m18_76 -> m18_78  [key=2, style=dotted];
m18_76 -> m18_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_77 -> m18_75  [color=blue, key=0, style=bold];
m18_20 -> m18_324  [key=0, style=solid];
m18_324 -> m18_325  [key=0, style=solid];
m18_324 -> m18_328  [key=2, style=dotted];
m18_325 -> m18_326  [key=0, style=solid];
m18_325 -> m18_146  [key=2, style=dotted];
m18_326 -> m18_327  [key=0, style=solid];
m18_327 -> m18_20  [color=blue, key=0, style=bold];
m18_39 -> m18_40  [color=red, key=0, style=solid];
m18_39 -> m18_43  [color=red, key=1, label=int, style=dashed];
m18_40 -> m18_41  [color=red, key=0, style=solid];
m18_40 -> m18_10  [color=red, key=2, style=dotted];
m18_40 -> m18_42  [color=red, key=1, label="lambda expression", style=dashed];
m18_41 -> m18_39  [color=blue, key=0, style=bold];
m18_52 -> m18_53  [color=red, key=0, style=solid];
m18_52 -> m18_56  [color=red, key=1, label=int, style=dashed];
m18_53 -> m18_54  [color=red, key=0, style=solid];
m18_53 -> m18_10  [color=red, key=2, style=dotted];
m18_53 -> m18_55  [color=red, key=1, label="lambda expression", style=dashed];
m18_54 -> m18_52  [color=blue, key=0, style=bold];
m18_69 -> m18_70  [key=0, style=solid];
m18_70 -> m18_71  [key=0, style=solid];
m18_70 -> m18_10  [key=2, style=dotted];
m18_70 -> m18_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_71 -> m18_69  [color=blue, key=0, style=bold];
m18_181 -> m18_182  [key=0, style=solid];
m18_182 -> m18_183  [key=0, style=solid];
m18_182 -> m18_10  [key=2, style=dotted];
m18_182 -> m18_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_183 -> m18_181  [color=blue, key=0, style=bold];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_20  [key=2, style=dotted];
m18_17 -> m18_18  [key=0, style=solid];
m18_17 -> m18_21  [key=2, style=dotted];
m18_18 -> m18_19  [key=0, style=solid];
m18_19 -> m18_15  [color=blue, key=0, style=bold];
m18_62 -> m18_63  [key=0, style=solid];
m18_63 -> m18_64  [key=0, style=solid];
m18_63 -> m18_10  [key=2, style=dotted];
m18_63 -> m18_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_64 -> m18_62  [color=blue, key=0, style=bold];
m18_68 -> m18_282  [key=0, style=solid];
m18_68 -> m18_289  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_68 -> m18_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_68 -> m18_290  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_282 -> m18_283  [key=0, style=solid];
m18_282 -> m18_286  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_282 -> m18_287  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_289 -> m18_290  [key=0, style=solid];
m18_289 -> m18_209  [key=2, style=dotted];
m18_289 -> m18_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_289 -> m18_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_290 -> m18_291  [key=0, style=solid];
m18_290 -> m18_273  [key=2, style=dotted];
m18_283 -> m18_284  [key=0, style=solid];
m18_283 -> m18_90  [key=2, style=dotted];
m18_283 -> m18_286  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_283 -> m18_289  [color=darkseagreen4, key=1, label=dates, style=dashed];
m18_286 -> m18_287  [key=0, style=solid];
m18_286 -> m18_92  [key=2, style=dotted];
m18_287 -> m18_288  [key=0, style=solid];
m18_287 -> m18_292  [key=2, style=dotted];
m18_287 -> m18_287  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m18_284 -> m18_285  [key=0, style=solid];
m18_284 -> m18_288  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_285 -> m18_286  [key=0, style=solid];
m18_285 -> m18_289  [key=0, style=solid];
m18_288 -> m18_285  [key=0, style=solid];
m18_288 -> m18_288  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_291 -> m18_68  [color=blue, key=0, style=bold];
m18_299 -> m18_300  [key=0, style=solid];
m18_299 -> m18_301  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m18_299 -> m18_302  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m18_299 -> m18_307  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m18_299 -> m18_308  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m18_299 -> m18_309  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, System.DateTime>", style=dashed];
m18_300 -> m18_301  [key=0, style=solid];
m18_300 -> m18_87  [key=2, style=dotted];
m18_300 -> m18_88  [key=2, style=dotted];
m18_301 -> m18_302  [key=0, style=solid];
m18_301 -> m18_313  [key=2, style=dotted];
m18_301 -> m18_209  [key=2, style=dotted];
m18_301 -> m18_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_301 -> m18_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_301 -> m18_303  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m18_301 -> m18_304  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m18_301 -> m18_308  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m18_302 -> m18_303  [key=0, style=solid];
m18_302 -> m18_305  [key=0, style=solid];
m18_302 -> m18_304  [color=darkseagreen4, key=1, label=key, style=dashed];
m18_307 -> m18_308  [key=0, style=solid];
m18_307 -> m18_311  [key=0, style=solid];
m18_308 -> m18_309  [key=0, style=solid];
m18_308 -> m18_317  [key=2, style=dotted];
m18_309 -> m18_310  [key=0, style=solid];
m18_309 -> m18_317  [key=2, style=dotted];
m18_309 -> m18_315  [key=2, style=dotted];
m18_303 -> m18_304  [key=0, style=solid];
m18_303 -> m18_302  [key=0, style=solid];
m18_303 -> m18_314  [key=2, style=dotted];
m18_304 -> m18_302  [key=0, style=solid];
m18_304 -> m18_315  [key=2, style=dotted];
m18_305 -> m18_306  [key=0, style=solid];
m18_305 -> m18_316  [key=2, style=dotted];
m18_305 -> m18_309  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_305 -> m18_311  [color=darkseagreen4, key=1, label=result, style=dashed];
m18_306 -> m18_307  [key=0, style=solid];
m18_306 -> m18_308  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_306 -> m18_309  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_306 -> m18_310  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_311 -> m18_312  [key=0, style=solid];
m18_310 -> m18_307  [key=0, style=solid];
m18_310 -> m18_310  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_312 -> m18_299  [color=blue, key=0, style=bold];
m18_161 -> m18_162  [key=0, style=solid];
m18_161 -> m18_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_162 -> m18_163  [key=0, style=solid];
m18_162 -> m18_20  [key=2, style=dotted];
m18_163 -> m18_164  [key=0, style=solid];
m18_163 -> m18_166  [key=2, style=dotted];
m18_163 -> m18_168  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m18_164 -> m18_165  [key=0, style=solid];
m18_164 -> m18_10  [key=2, style=dotted];
m18_164 -> m18_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_165 -> m18_161  [color=blue, key=0, style=bold];
m18_33 -> m18_34  [key=0, style=solid];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_10  [key=2, style=dotted];
m18_34 -> m18_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_35 -> m18_33  [color=blue, key=0, style=bold];
m18_383 -> m18_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_12  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_28  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_31  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_34  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_37  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_40  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_43  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_53  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_56  [color=red, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_63  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_66  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_70  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_73  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_76  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_80  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_94  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_97  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_105  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_108  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_116  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_119  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_126  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_131  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_158  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_162  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_164  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_168  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_172  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_174  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_178  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_182  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_185  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_189  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_192  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_195  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_198  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_205  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_224  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_227  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_230  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_233  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_236  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_237  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_238  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_270  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_290  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_300  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_324  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_329  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_332  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_341  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_342  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_354  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_356  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_372  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_383 -> m18_376  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerMonitoringApi", style=dashed];
m18_384 -> m18_43  [color=red, key=1, label=int, style=dashed];
m18_385 -> m18_43  [color=red, key=1, label=int, style=dashed];
m18_386 -> m18_56  [color=red, key=1, label=int, style=dashed];
m18_387 -> m18_56  [color=red, key=1, label=int, style=dashed];
m18_388 -> m18_97  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_389 -> m18_97  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_390 -> m18_108  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_391 -> m18_108  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_392 -> m18_119  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_393 -> m18_119  [color=darkseagreen4, key=1, label=int, style=dashed];
m18_394 -> m18_158  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m18_395 -> m18_168  [color=darkseagreen4, key=1, label=enqueuedJobIds, style=dashed];
m18_396 -> m18_178  [color=darkseagreen4, key=1, label=fetchedJobIds, style=dashed];
m18_397 -> m18_199  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_398 -> m18_245  [color=darkseagreen4, key=1, label=sql, style=dashed];
m18_399 -> m18_275  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_400 -> m18_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_2  [color=blue, key=0, style=bold];
m19_73 -> m19_74  [key=0, style=solid];
m19_73 -> m19_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_74 -> m19_75  [key=0, style=solid];
m19_74 -> m19_4  [key=2, style=dotted];
m19_75 -> m19_76  [key=0, style=solid];
m19_75 -> m19_21  [key=2, style=dotted];
m19_76 -> m19_73  [color=blue, key=0, style=bold];
m19_65 -> m19_66  [key=0, style=solid];
m19_66 -> m19_67  [key=0, style=solid];
m19_66 -> m19_4  [key=2, style=dotted];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_27  [key=2, style=dotted];
m19_68 -> m19_65  [color=blue, key=0, style=bold];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_42  [key=2, style=dotted];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_43  [key=2, style=dotted];
m19_40 -> m19_44  [key=2, style=dotted];
m19_41 -> m19_38  [color=blue, key=0, style=bold];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_49 -> m19_54  [color=darkseagreen4, key=1, label=Table, style=dashed];
m19_49 -> m19_61  [color=darkorchid, key=3, label="Parameter variable Table table", style=bold];
m19_49 -> m19_69  [color=darkorchid, key=3, label="Parameter variable Table table", style=bold];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_11  [key=2, style=dotted];
m19_50 -> m19_12  [key=2, style=dotted];
m19_50 -> m19_52  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_50 -> m19_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_14  [key=2, style=dotted];
m19_52 -> m19_15  [key=2, style=dotted];
m19_54 -> m19_55  [key=0, style=solid];
m19_54 -> m19_56  [key=2, style=dotted];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_13  [key=2, style=dotted];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_16  [key=2, style=dotted];
m19_55 -> m19_49  [color=blue, key=0, style=bold];
m19_57 -> m19_58  [key=0, style=solid];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_4  [key=2, style=dotted];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_18  [key=2, style=dotted];
m19_60 -> m19_57  [color=blue, key=0, style=bold];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_4 -> m19_57  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_4 -> m19_65  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_4 -> m19_73  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_11  [key=2, style=dotted];
m19_5 -> m19_12  [key=2, style=dotted];
m19_5 -> m19_7  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_5 -> m19_8  [color=darkseagreen4, key=1, label=job, style=dashed];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_14  [key=2, style=dotted];
m19_7 -> m19_15  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_13  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_16  [key=2, style=dotted];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_17  [key=2, style=dotted];
m19_10 -> m19_4  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [color=blue, key=0, style=bold];
m19_18 -> m19_19  [key=0, style=solid];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_21  [key=2, style=dotted];
m19_20 -> m19_18  [color=blue, key=0, style=bold];
m19_45 -> m19_46  [key=0, style=solid];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_42  [key=2, style=dotted];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_44  [key=2, style=dotted];
m19_48 -> m19_45  [color=blue, key=0, style=bold];
m19_27 -> m19_28  [key=0, style=solid];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_34  [key=2, style=dotted];
m19_28 -> m19_15  [key=2, style=dotted];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_35  [key=2, style=dotted];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_36  [key=2, style=dotted];
m19_30 -> m19_32  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_37  [key=2, style=dotted];
m19_31 -> m19_15  [key=2, style=dotted];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_37  [key=2, style=dotted];
m19_32 -> m19_15  [key=2, style=dotted];
m19_33 -> m19_27  [color=blue, key=0, style=bold];
m19_61 -> m19_62  [key=0, style=solid];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_49  [key=2, style=dotted];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_18  [key=2, style=dotted];
m19_64 -> m19_61  [color=blue, key=0, style=bold];
m19_69 -> m19_70  [key=0, style=solid];
m19_70 -> m19_71  [key=0, style=solid];
m19_70 -> m19_49  [key=2, style=dotted];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_27  [key=2, style=dotted];
m19_72 -> m19_69  [color=blue, key=0, style=bold];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_19  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m19_21 -> m19_73  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_11  [key=2, style=dotted];
m19_22 -> m19_26  [key=2, style=dotted];
m19_22 -> m19_24  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_17  [key=2, style=dotted];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_17  [key=2, style=dotted];
m19_25 -> m19_21  [color=blue, key=0, style=bold];
m19_77 -> m19_5  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_19  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_24  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_28  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_29  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_39  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_40  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_46  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_47  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_50  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_58  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_59  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_62  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_63  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_67  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_71  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_74  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m19_77 -> m19_75  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
}
