digraph  {
n4 [label="HangFire.Web.JavaScriptHandler", span=""];
n0 [label="Entry HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()"];
n1 [label="ContentType = ''application/javascript''", span="36-36", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", color=red, community=0];
n2 [label="ContentEncoding = Encoding.UTF8", span="37-37", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()"];
n3 [label="Exit HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33", cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()"];
d3 [label="traversedStates == null", span="32-32", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", color=green, community=0];
d0 [label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d1 [label="newState == null", span="31-31", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d4 [label="throw new ArgumentNullException(''traversedStates'');", span="32-32", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", color=green, community=0];
d5 [label="OldStateName = oldStateName", span="34-34", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", color=green, community=0];
d12 [label="Hangfire.States.ApplyStateContext", span=""];
d6 [label="NewState = newState", span="35-35", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", color=green, community=0];
d7 [label="TraversedStates = traversedStates", span="36-36", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d9 [label="Exit Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d2 [label="throw new ArgumentNullException(''newState'');", span="31-31", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d8 [label="JobExpirationTimeout = TimeSpan.FromDays(1)", span="37-37", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)"];
d11 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)"];
m0_29 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ApplyStateContext(_stateContext.Object, _newState.Object, OldState, null))", span="47-48", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="ApplyStateContextFacts.cs", color=green, community=0];
m0_30 [label="Assert.Equal(''traversedStates'', exception.ParamName)", span="50-50", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="ApplyStateContextFacts.cs", color=green, community=0];
m0_31 [label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", span="45-45", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="ApplyStateContextFacts.cs"];
m0_32 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_33 [label="new ApplyStateContext(_stateContext.Object, _newState.Object, OldState, null)", span="48-48", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_8 [label="Entry Unk.>", span="", cluster="Unk.>", file="ApplyStateContextFacts.cs"];
m0_43 [label="processingJob.Dispose()", span="71-71", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_39 [label="Assert.Same(_newState.Object, context.NewState)", span="63-63", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_23 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(_connection.Object, JobId, null))", span="42-43", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ApplyStateContextFacts.cs"];
m0_9 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ApplyStateContextFacts.cs"];
m0_34 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_61 [label="return new SqlServerProcessingJob(_connection.Object, JobId, Queue);", span="110-110", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="ApplyStateContextFacts.cs"];
m0_62 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", span="108-108", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.CreateProcessingJob()", file="ApplyStateContextFacts.cs"];
m0_21 [label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", span="36-36", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="ApplyStateContextFacts.cs"];
m0_3 [label="_newState = new Mock<IState>()", span="31-31", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.ApplyStateContextFacts()", file="ApplyStateContextFacts.cs", color=green, community=0];
m0_0 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="16-16", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="ApplyStateContextFacts.cs"];
m0_2 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", span="16-16", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", color=green, community=0, file="ApplyStateContextFacts.cs"];
m0_1 [label="_connection = new Mock<IDbConnection>()", span="18-18", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.SqlServerProcessingJobFacts()", file="ApplyStateContextFacts.cs"];
m0_4 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="22-22", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="ApplyStateContextFacts.cs"];
m0_5 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerProcessingJob(null, JobId, Queue))", span="24-25", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ApplyStateContextFacts.cs", color=red, community=0];
m0_35 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", span="58-58", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.DeleteJobFromQueue_ReallyDeletesTheJobFromTheQueue()", file="ApplyStateContextFacts.cs"];
m0_22 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="40-40", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ApplyStateContextFacts.cs"];
m0_24 [label="Entry lambda expression", span="39-39", cluster="lambda expression", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_25 [label="new ApplyStateContext(_stateContext.Object, null, OldState, _traversedStates)", span="39-39", cluster="lambda expression", file="ApplyStateContextFacts.cs", color=green, community=0];
m0_14 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="31-31", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ApplyStateContextFacts.cs"];
m0_15 [label="Entry lambda expression", span="32-32", cluster="lambda expression", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_16 [label="x.Name", span="32-32", cluster="lambda expression", color=green, community=0, file="ApplyStateContextFacts.cs"];
m0_17 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_63 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.UseConnection(System.Action<IDbConnection>)", span="113-113", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.UseConnection(System.Action<IDbConnection>)", file="ApplyStateContextFacts.cs"];
m0_64 [label="var connection = ConnectionUtils.CreateConnection()", span="115-115", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.UseConnection(System.Action<IDbConnection>)", file="ApplyStateContextFacts.cs"];
m0_65 [label="action(connection)", span="117-117", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.UseConnection(System.Action<IDbConnection>)", file="ApplyStateContextFacts.cs"];
m0_66 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.UseConnection(System.Action<IDbConnection>)", span="113-113", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.UseConnection(System.Action<IDbConnection>)", file="ApplyStateContextFacts.cs"];
m0_50 [label="Entry HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="80-80", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ApplyStateContextFacts.cs"];
m0_51 [label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@id, @queue)''", span="82-84", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ApplyStateContextFacts.cs"];
m0_52 [label="UseConnection(sql =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    });\r\n\r\n                var processingJob = new SqlServerProcessingJob(sql, ''1'', ''default'');\r\n\r\n                // Act\r\n                processingJob.Dispose();\r\n\r\n                // Assert\r\n                var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single();\r\n                Assert.Equal(2, count);\r\n            })", span="86-105", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ApplyStateContextFacts.cs"];
m0_53 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", span="80-80", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.DeleteJobFromQueue_DoesNotDelete_UnrelatedJobs()", file="ApplyStateContextFacts.cs"];
m0_36 [label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="54-54", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_37 [label="var context = new ApplyStateContext(\r\n                _stateContext.Object,\r\n                _newState.Object,\r\n                OldState,\r\n                _traversedStates)", span="56-60", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_38 [label="Assert.Equal(OldState, context.OldStateName)", span="62-62", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_10 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ApplyStateContextFacts.cs"];
m0_11 [label="new SqlServerProcessingJob(null, JobId, Queue)", span="25-25", cluster="lambda expression", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_12 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_18 [label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", span="36-36", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="ApplyStateContextFacts.cs"];
m0_19 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ApplyStateContext(_stateContext.Object, null, OldState, _traversedStates))", span="38-39", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="ApplyStateContextFacts.cs", color=green, community=0];
m0_20 [label="Assert.Equal(''newState'', exception.ParamName)", span="41-41", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenNewStateIsNull()", file="ApplyStateContextFacts.cs"];
m0_26 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_27 [label="new SqlServerProcessingJob(_connection.Object, JobId, null)", span="43-43", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_28 [label="Entry Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", span="45-45", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ThrowsAnException_WhenTraversedStatesIsNull()", file="ApplyStateContextFacts.cs"];
m0_41 [label="Assert.Same(_traversedStates, context.TraversedStates)", span="65-65", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_40 [label="Assert.Same(_job, context.Job)", span="64-64", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_42 [label="Exit Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", span="54-54", cluster="Hangfire.Core.Tests.States.ApplyStateContextFacts.Ctor_ShouldSetPropertiesCorrectly()", file="ApplyStateContextFacts.cs"];
m0_44 [label="Hangfire.Core.Tests.States.ApplyStateContextFacts", span="", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_45 [label="Assert.Equal(0, count)", span="75-75", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_46 [label="Exit lambda expression", span="64-76", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_55 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    { \r\n                        new { id = ''1'', queue = ''critical'' },\r\n                        new { id = ''2'', queue = ''default'' } \r\n                    })", span="89-95", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_54 [label="Entry lambda expression", span="86-105", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_56 [label="var processingJob = new SqlServerProcessingJob(sql, ''1'', ''default'')", span="97-97", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_58 [label="var count = sql.Query<int>(''select count(*) from HangFire.JobQueue'').Single()", span="103-103", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_57 [label="processingJob.Dispose()", span="100-100", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_59 [label="Assert.Equal(2, count)", span="104-104", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_60 [label="Exit lambda expression", span="86-105", cluster="lambda expression", file="ApplyStateContextFacts.cs"];
m0_49 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="ApplyStateContextFacts.cs"];
m0_13 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", span="27-27", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", file="ApplyStateContextFacts.cs"];
m0_47 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="ApplyStateContextFacts.cs"];
m0_67 [label="Entry HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="HangFire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="ApplyStateContextFacts.cs"];
m0_68 [label="Entry Unk.action", span="", cluster="Unk.action", file="ApplyStateContextFacts.cs"];
m0_7 [label="Exit HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="22-22", cluster="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ApplyStateContextFacts.cs"];
m0_6 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=red, community=0, file="ApplyStateContextFacts.cs"];
m0_48 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.Dispose()", span="42-42", cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", file="ApplyStateContextFacts.cs"];
m0_69 [label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts", span="", file="ApplyStateContextFacts.cs"];
m0_70 [label=arrangeSql, span="", file="ApplyStateContextFacts.cs"];
m0_71 [label=arrangeSql, span="", file="ApplyStateContextFacts.cs"];
m1_8 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ApplyStateContextMock.cs"];
m1_10 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ApplyStateContextMock.cs"];
m1_7 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ApplyStateContextMock.cs"];
m1_0 [label="Entry Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="12-12", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs"];
m1_1 [label="StateContextValue = new StateContextMock()", span="14-14", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs"];
m1_2 [label="NewStateValue = new Mock<IState>().Object", span="15-15", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs"];
m1_3 [label="OldStateValue = null", span="16-16", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs"];
m1_4 [label="TraversedStatesValue = Enumerable.Empty<IState>()", span="17-17", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", color=red, community=0, file="ApplyStateContextMock.cs"];
m1_5 [label="_context = new Lazy<ApplyStateContext>(\r\n                () => new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue,\r\n                    TraversedStatesValue))", span="19-24", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", color=green, community=0, file="ApplyStateContextMock.cs"];
m1_6 [label="Exit Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="12-12", cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs"];
m1_11 [label="Entry lambda expression", span="20-24", cluster="lambda expression", file="ApplyStateContextMock.cs"];
m1_12 [label="new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue,\r\n                    TraversedStatesValue)", span="20-24", cluster="lambda expression", color=green, community=0, file="ApplyStateContextMock.cs"];
m1_13 [label="Exit lambda expression", span="20-24", cluster="lambda expression", file="ApplyStateContextMock.cs"];
m1_9 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="ApplyStateContextMock.cs"];
m1_15 [label="Hangfire.Core.Tests.ApplyStateContextMock", span="", file="ApplyStateContextMock.cs"];
m2_342 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="BackgroundJobClient.cs"];
m2_601 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="853-853", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_602 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="855-858", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_603 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="853-853", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_600 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="BackgroundJobClient.cs"];
m2_134 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="BackgroundJobClient.cs"];
m2_380 [label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="286-286", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="BackgroundJobClient.cs"];
m2_36 [label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="52-52", cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="BackgroundJobClient.cs"];
m2_789 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1168-1168", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="BackgroundJobClient.cs"];
m2_791 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1174-1189", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="BackgroundJobClient.cs"];
m2_790 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1170-1172", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="BackgroundJobClient.cs"];
m2_792 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1168-1168", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="BackgroundJobClient.cs"];
m2_457 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="644-644", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="BackgroundJobClient.cs"];
m2_458 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="646-647", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="BackgroundJobClient.cs"];
m2_459 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="644-644", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="BackgroundJobClient.cs"];
m2_439 [label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="323-323", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="BackgroundJobClient.cs"];
m2_343 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="492-492", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="BackgroundJobClient.cs"];
m2_344 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="494-495", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="BackgroundJobClient.cs"];
m2_345 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="492-492", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="BackgroundJobClient.cs"];
m2_718 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1054-1054", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_719 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1056-1060", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_720 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1054-1054", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_646 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="932-932", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="BackgroundJobClient.cs"];
m2_648 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="938-951", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="BackgroundJobClient.cs"];
m2_647 [label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="934-936", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="BackgroundJobClient.cs"];
m2_649 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="932-932", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="BackgroundJobClient.cs"];
m2_843 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1262-1262", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="BackgroundJobClient.cs"];
m2_845 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1268-1283", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="BackgroundJobClient.cs"];
m2_844 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1264-1266", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="BackgroundJobClient.cs"];
m2_846 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1262-1262", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="BackgroundJobClient.cs"];
m2_554 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="271-271", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="BackgroundJobClient.cs"];
m2_250 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="340-340", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="BackgroundJobClient.cs"];
m2_251 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="342-348", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="BackgroundJobClient.cs"];
m2_252 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="340-340", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="BackgroundJobClient.cs"];
m2_322 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="456-456", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="BackgroundJobClient.cs"];
m2_324 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="467-476", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="BackgroundJobClient.cs"];
m2_323 [label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="458-465", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="BackgroundJobClient.cs"];
m2_325 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="456-456", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="BackgroundJobClient.cs"];
m2_887 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="BackgroundJobClient.cs"];
m2_283 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="399-399", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="BackgroundJobClient.cs"];
m2_285 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="406-418", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="BackgroundJobClient.cs"];
m2_284 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="401-404", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="BackgroundJobClient.cs"];
m2_286 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="399-399", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="BackgroundJobClient.cs"];
m2_132 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="BackgroundJobClient.cs"];
m2_836 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1252-1252", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_837 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1254-1258", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_838 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1252-1252", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_895 [label="Entry SqlServerConnection.cstr", span="", cluster="SqlServerConnection.cstr", file="BackgroundJobClient.cs"];
m2_188 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="213-213", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_189 [label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="215-217", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_190 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="213-213", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_862 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1296-1296", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="BackgroundJobClient.cs"];
m2_863 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1298-1302", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="BackgroundJobClient.cs"];
m2_864 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1296-1296", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="BackgroundJobClient.cs"];
m2_808 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="473-473", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="BackgroundJobClient.cs"];
m2_429 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="BackgroundJobClient.cs"];
m2_698 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1019-1019", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="BackgroundJobClient.cs"];
m2_700 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1025-1040", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="BackgroundJobClient.cs"];
m2_699 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1021-1023", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="BackgroundJobClient.cs"];
m2_701 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1019-1019", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="BackgroundJobClient.cs"];
m2_260 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="352-352", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="BackgroundJobClient.cs"];
m2_262 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="359-371", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="BackgroundJobClient.cs"];
m2_261 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="354-357", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="BackgroundJobClient.cs"];
m2_263 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="352-352", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="BackgroundJobClient.cs"];
m2_332 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="480-480", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_333 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="482-488", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_334 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="480-480", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_771 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="432-432", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="BackgroundJobClient.cs"];
m2_409 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="587-587", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundJobClient.cs"];
m2_410 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="589-590", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundJobClient.cs"];
m2_411 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="587-587", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundJobClient.cs"];
m2_751 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1109-1109", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="BackgroundJobClient.cs"];
m2_753 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1115-1130", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="BackgroundJobClient.cs"];
m2_752 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1111-1113", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="BackgroundJobClient.cs"];
m2_754 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1109-1109", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="BackgroundJobClient.cs"];
m2_368 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="BackgroundJobClient.cs"];
m2_218 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="268-268", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="BackgroundJobClient.cs"];
m2_220 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="284-299", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="BackgroundJobClient.cs"];
m2_219 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="270-282", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="BackgroundJobClient.cs"];
m2_221 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="268-268", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="BackgroundJobClient.cs"];
m2_637 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="907-907", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="BackgroundJobClient.cs"];
m2_639 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="913-928", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="BackgroundJobClient.cs"];
m2_638 [label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="909-911", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="BackgroundJobClient.cs"];
m2_640 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="907-907", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="BackgroundJobClient.cs"];
m2_238 [label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="BackgroundJobClient.cs"];
m2_826 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1242-1242", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_827 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1244-1248", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_828 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1242-1242", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_467 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="335-335", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="BackgroundJobClient.cs"];
m2_6 [label="Entry Mock<IPersistentJobQueue>.cstr", span="", cluster="Mock<IPersistentJobQueue>.cstr", file="BackgroundJobClient.cs"];
m2_381 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="544-544", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="BackgroundJobClient.cs"];
m2_382 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="546-552", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="BackgroundJobClient.cs"];
m2_383 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="544-544", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="BackgroundJobClient.cs"];
m2_743 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="456-456", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="BackgroundJobClient.cs"];
m2_664 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="404-404", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="BackgroundJobClient.cs"];
m2_184 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="BackgroundJobClient.cs"];
m2_305 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="434-434", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="BackgroundJobClient.cs"];
m2_306 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="436-442", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="BackgroundJobClient.cs"];
m2_307 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="434-434", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="BackgroundJobClient.cs"];
m2_182 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="BackgroundJobClient.cs"];
m2_229 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="303-303", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="BackgroundJobClient.cs"];
m2_231 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="310-324", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="BackgroundJobClient.cs"];
m2_230 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="305-308", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="BackgroundJobClient.cs"];
m2_232 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="303-303", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="BackgroundJobClient.cs"];
m2_869 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1306-1306", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="BackgroundJobClient.cs"];
m2_871 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1312-1327", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="BackgroundJobClient.cs"];
m2_870 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1308-1310", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="BackgroundJobClient.cs"];
m2_872 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1306-1306", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="BackgroundJobClient.cs"];
m2_629 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="389-389", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="BackgroundJobClient.cs"];
m2_135 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="BackgroundJobClient.cs"];
m2_418 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="311-311", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="BackgroundJobClient.cs"];
m2_7 [label="Entry Mock<IPersistentJobQueueProvider>.cstr", span="", cluster="Mock<IPersistentJobQueueProvider>.cstr", file="BackgroundJobClient.cs"];
m2_133 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="BackgroundJobClient.cs"];
m2_545 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="766-766", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_546 [label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="768-769", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_547 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="766-766", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_490 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="682-682", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_491 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="684-690", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_492 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="682-682", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_198 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="221-221", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="BackgroundJobClient.cs"];
m2_199 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="223-227", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="BackgroundJobClient.cs"];
m2_200 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="221-221", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="BackgroundJobClient.cs"];
m2_555 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="773-773", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="BackgroundJobClient.cs"];
m2_556 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="775-779", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="BackgroundJobClient.cs"];
m2_557 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="773-773", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="BackgroundJobClient.cs"];
m2_419 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="594-594", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="BackgroundJobClient.cs"];
m2_421 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="602-610", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="BackgroundJobClient.cs"];
m2_420 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="596-600", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="BackgroundJobClient.cs"];
m2_422 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="594-594", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="BackgroundJobClient.cs"];
m2_562 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="783-783", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="BackgroundJobClient.cs"];
m2_564 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="789-807", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="BackgroundJobClient.cs"];
m2_563 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="785-787", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="BackgroundJobClient.cs"];
m2_565 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="783-783", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="BackgroundJobClient.cs"];
m2_761 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1134-1134", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_762 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1136-1142", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_763 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1134-1134", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_15 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="32-32", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClient.cs"];
m2_16 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null))", span="34-35", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClient.cs"];
m2_17 [label="Assert.Equal(''storage'', exception.ParamName)", span="37-37", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClient.cs"];
m2_18 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="32-32", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClient.cs"];
m2_772 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1146-1146", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="BackgroundJobClient.cs"];
m2_773 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1148-1154", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="BackgroundJobClient.cs"];
m2_774 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1146-1146", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="BackgroundJobClient.cs"];
m2_691 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1009-1009", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="BackgroundJobClient.cs"];
m2_692 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1011-1015", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="BackgroundJobClient.cs"];
m2_693 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1009-1009", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="BackgroundJobClient.cs"];
m2_391 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="556-556", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="BackgroundJobClient.cs"];
m2_392 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="558-583", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="BackgroundJobClient.cs"];
m2_393 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="556-556", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="BackgroundJobClient.cs"];
m2_542 [label="Entry lambda expression", span="758-758", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_29 [label="Entry lambda expression", span="43-51", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_31 [label="var queues = new[] { ''default'' }", span="46-46", cluster="lambda expression", color=green, community=0, file="BackgroundJobClient.cs"];
m2_30 [label="var token = new CancellationToken()", span="45-45", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_32 [label="connection.FetchNextJob(queues, token)", span="48-48", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_33 [label="_queue.Verify(x => x.Dequeue(queues, token))", span="50-50", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_39 [label="x.Dequeue(queues, token)", span="50-50", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_77 [label="Entry lambda expression", span="91-101", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_89 [label="Entry lambda expression", span="107-117", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_90 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="109-114", cluster="lambda expression", color=green, community=0, file="BackgroundJobClient.cs"];
m2_91 [label="Assert.Equal(''parameters'', exception.ParamName)", span="116-116", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_93 [label="Entry lambda expression", span="110-114", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_94 [label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="110-114", cluster="lambda expression", color=green, community=0, file="BackgroundJobClient.cs"];
m2_95 [label="Exit lambda expression", span="110-114", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_97 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_49 [label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="61-61", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_34 [label="Exit lambda expression", span="43-51", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_38 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_40 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_80 [label="Exit lambda expression", span="91-101", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_78 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="93-98", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_82 [label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="94-98", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_92 [label="Exit lambda expression", span="107-117", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_50 [label="Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="63-64", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_152 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="165-166", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_192 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="216-217", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_243 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="332-333", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_254 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="344-345", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_298 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="426-427", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_309 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="438-439", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_327 [label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="469-471", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_336 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="484-485", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_347 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="494-495", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_373 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="536-537", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_385 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="548-549", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_413 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="589-590", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_434 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="616-617", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_461 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="646-647", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_484 [label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="678-678", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_513 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="725-726", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_524 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="737-738", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_549 [label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="769-769", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_578 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="815-816", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_605 [label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="857-857", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_624 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="891-892", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_659 [label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="959-959", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_685 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1003-1004", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_712 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1048-1049", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_738 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1093-1094", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_765 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1138-1139", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_776 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1150-1151", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_802 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1197-1198", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_830 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1246-1247", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_856 [label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1291-1291", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_107 [label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="126-130", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_171 [label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="189-189", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_99 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_98 [label="SampleMethod(''hello'')", span="111-111", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_11 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_46 [label="Entry lambda expression", span="57-65", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_48 [label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="60-60", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_59 [label="Entry lambda expression", span="71-75", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_68 [label="Entry lambda expression", span="81-85", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_105 [label="Entry lambda expression", span="123-159", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_151 [label="Entry lambda expression", span="165-166", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_161 [label="Entry lambda expression", span="172-176", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_170 [label="Entry lambda expression", span="187-209", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_191 [label="Entry lambda expression", span="216-217", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_201 [label="Entry lambda expression", span="223-227", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_209 [label="Entry lambda expression", span="247-264", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_222 [label="Entry lambda expression", span="284-299", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_233 [label="Entry lambda expression", span="310-324", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_242 [label="Entry lambda expression", span="330-336", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_253 [label="Entry lambda expression", span="342-348", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_264 [label="Entry lambda expression", span="359-371", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_275 [label="Entry lambda expression", span="382-395", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_287 [label="Entry lambda expression", span="406-418", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_297 [label="Entry lambda expression", span="424-430", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_308 [label="Entry lambda expression", span="436-442", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_318 [label="Entry lambda expression", span="448-452", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_326 [label="Entry lambda expression", span="467-476", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_335 [label="Entry lambda expression", span="482-488", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_346 [label="Entry lambda expression", span="494-495", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_355 [label="Entry lambda expression", span="501-507", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_363 [label="Entry lambda expression", span="521-528", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_372 [label="Entry lambda expression", span="534-540", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_384 [label="Entry lambda expression", span="546-552", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_394 [label="Entry lambda expression", span="558-583", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_412 [label="Entry lambda expression", span="589-590", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_423 [label="Entry lambda expression", span="602-610", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_433 [label="Entry lambda expression", span="616-617", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_444 [label="Entry lambda expression", span="629-640", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_460 [label="Entry lambda expression", span="646-647", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_472 [label="Entry lambda expression", span="657-671", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_483 [label="Entry lambda expression", span="677-678", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_493 [label="Entry lambda expression", span="684-690", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_502 [label="Entry lambda expression", span="700-717", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_512 [label="Entry lambda expression", span="723-729", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_523 [label="Entry lambda expression", span="735-741", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_533 [label="Entry lambda expression", span="747-762", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_548 [label="Entry lambda expression", span="768-769", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_558 [label="Entry lambda expression", span="775-779", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_566 [label="Entry lambda expression", span="789-807", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_577 [label="Entry lambda expression", span="813-817", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_587 [label="Entry lambda expression", span="823-827", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_595 [label="Entry lambda expression", span="837-849", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_604 [label="Entry lambda expression", span="855-858", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_615 [label="Entry lambda expression", span="868-883", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_623 [label="Entry lambda expression", span="889-893", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_633 [label="Entry lambda expression", span="899-903", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_641 [label="Entry lambda expression", span="913-928", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_650 [label="Entry lambda expression", span="938-951", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_658 [label="Entry lambda expression", span="957-960", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_668 [label="Entry lambda expression", span="966-970", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_676 [label="Entry lambda expression", span="980-995", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_684 [label="Entry lambda expression", span="1001-1005", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_694 [label="Entry lambda expression", span="1011-1015", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_702 [label="Entry lambda expression", span="1025-1040", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_711 [label="Entry lambda expression", span="1046-1050", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_721 [label="Entry lambda expression", span="1056-1060", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_729 [label="Entry lambda expression", span="1070-1085", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_737 [label="Entry lambda expression", span="1091-1095", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_747 [label="Entry lambda expression", span="1101-1105", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_755 [label="Entry lambda expression", span="1115-1130", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_764 [label="Entry lambda expression", span="1136-1142", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_775 [label="Entry lambda expression", span="1148-1154", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_785 [label="Entry lambda expression", span="1160-1164", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_793 [label="Entry lambda expression", span="1174-1189", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_801 [label="Entry lambda expression", span="1195-1201", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_812 [label="Entry lambda expression", span="1207-1211", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_821 [label="Entry lambda expression", span="1221-1238", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_829 [label="Entry lambda expression", span="1244-1248", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_839 [label="Entry lambda expression", span="1254-1258", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_847 [label="Entry lambda expression", span="1268-1283", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_855 [label="Entry lambda expression", span="1289-1292", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_865 [label="Entry lambda expression", span="1298-1302", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_873 [label="Entry lambda expression", span="1312-1327", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_897 [label="Entry lambda expression", span="1347-1347", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_47 [label="var token = new CancellationToken()", span="59-59", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_54 [label="connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="64-64", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_79 [label="Assert.Equal(''job'', exception.ParamName)", span="100-100", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_81 [label="Entry lambda expression", span="94-98", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_83 [label="Exit lambda expression", span="94-98", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_112 [label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="137-137", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_111 [label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="136-136", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_113 [label="Assert.Equal(null, (int?) sqlJob.StateId)", span="138-138", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_114 [label="Assert.Equal(null, (string) sqlJob.StateName)", span="139-139", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_118 [label="Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="145-145", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_119 [label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="146-146", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_120 [label="Assert.Equal(''\''Hello\'''', job.Arguments[0])", span="147-147", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_124 [label="Assert.Equal(''Value1'', parameters[''Key1''])", span="157-157", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_125 [label="Assert.Equal(''Value2'', parameters[''Key2''])", span="158-158", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_176 [label="Assert.Equal(''Succeeded'', result.State)", span="204-204", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_177 [label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="205-205", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_214 [label="Assert.Equal(''Name'', result.Name)", span="261-261", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_215 [label="Assert.Equal(''Reason'', result.Reason)", span="262-262", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_216 [label="Assert.Equal(''Value'', result.Data[''Key''])", span="263-263", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_227 [label="Assert.Equal(''Value'', result.Data[''Key''])", span="298-298", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_244 [label="Assert.Equal(''id'', exception.ParamName)", span="335-335", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_255 [label="Assert.Equal(''name'', exception.ParamName)", span="347-347", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_269 [label="Assert.Equal(''Value'', parameter.Value)", span="370-370", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_281 [label="Assert.Equal(''AnotherValue'', parameter.Value)", span="394-394", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_292 [label="Assert.Equal((string) null, parameter.Value)", span="417-417", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_299 [label="Assert.Equal(''id'', exception.ParamName)", span="429-429", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_310 [label="Assert.Equal(''name'', exception.ParamName)", span="441-441", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_329 [label="Assert.Equal(''value'', value)", span="475-475", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_337 [label="Assert.Equal(''key'', exception.ParamName)", span="487-487", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_366 [label="Assert.Equal(''-1.0'', result)", span="527-527", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_374 [label="Assert.Equal(''serverId'', exception.ParamName)", span="539-539", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_386 [label="Assert.Equal(''context'', exception.ParamName)", span="551-551", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_398 [label="Assert.Equal(''server'', server.Id)", span="568-568", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_404 [label="Assert.Equal(''server'', sameServer.Id)", span="581-581", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_449 [label="Assert.Equal(2012, servers[''server2''].Year)", span="639-639", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_476 [label="Assert.Equal(''server2'', liveServer.Id)", span="670-670", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_496 [label="Assert.Equal(0, result.Count)", span="689-689", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_505 [label="Assert.Equal(2, result.Count)", span="714-714", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_514 [label="Assert.Equal(''key'', exception.ParamName)", span="728-728", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_525 [label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="740-740", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_536 [label="Assert.Equal(''Value1'', result[''Key1''])", span="760-760", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_537 [label="Assert.Equal(''Value2'', result[''Key2''])", span="761-761", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_570 [label="Assert.Equal(2, result.Count)", span="804-804", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_571 [label="Assert.Equal(''Value1'', result[''Key1''])", span="805-805", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_572 [label="Assert.Equal(''Value2'', result[''Key2''])", span="806-806", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_589 [label="Assert.Equal(0, result)", span="826-826", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_598 [label="Assert.Equal(2, result)", span="848-848", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_618 [label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="882-882", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_635 [label="Assert.Equal(0, result)", span="902-902", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_644 [label="Assert.Equal(2, result)", span="927-927", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_653 [label="Assert.Equal(12, result)", span="950-950", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_670 [label="Assert.Equal(0, result)", span="969-969", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_679 [label="Assert.Equal(2, result)", span="994-994", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_723 [label="Assert.Equal(0, result)", span="1059-1059", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_732 [label="Assert.Equal(2, result)", span="1084-1084", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_766 [label="Assert.Equal(''key'', exception.ParamName)", span="1141-1141", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_777 [label="Assert.Equal(''name'', exception.ParamName)", span="1153-1153", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_796 [label="Assert.Equal(''1'', result)", span="1188-1188", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_803 [label="Assert.Equal(''key'', exception.ParamName)", span="1200-1200", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_824 [label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1237-1237", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_850 [label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1282-1282", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_21 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_51 [label="Exit lambda expression", span="57-65", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_53 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_153 [label="Exit lambda expression", span="165-166", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_154 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_193 [label="Exit lambda expression", span="216-217", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_194 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_246 [label="Entry lambda expression", span="333-333", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_257 [label="Entry lambda expression", span="345-345", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_301 [label="Entry lambda expression", span="427-427", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_312 [label="Entry lambda expression", span="439-439", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_328 [label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="473-473", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_339 [label="Entry lambda expression", span="485-485", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_348 [label="Exit lambda expression", span="494-495", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_349 [label="Entry lambda expression", span="495-495", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_376 [label="Entry lambda expression", span="537-537", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_388 [label="Entry lambda expression", span="549-549", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_414 [label="Exit lambda expression", span="589-590", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_415 [label="Entry lambda expression", span="590-590", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_435 [label="Exit lambda expression", span="616-617", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_436 [label="Entry lambda expression", span="617-617", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_462 [label="Exit lambda expression", span="646-647", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_463 [label="Entry lambda expression", span="647-647", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_485 [label="Exit lambda expression", span="677-678", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_486 [label="Entry lambda expression", span="678-678", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_516 [label="Entry lambda expression", span="726-726", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_527 [label="Entry lambda expression", span="738-738", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_550 [label="Exit lambda expression", span="768-769", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_551 [label="Entry lambda expression", span="769-769", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_579 [label="Exit lambda expression", span="813-817", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_580 [label="Entry lambda expression", span="816-816", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_606 [label="Exit lambda expression", span="855-858", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_607 [label="Entry lambda expression", span="857-857", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_625 [label="Exit lambda expression", span="889-893", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_626 [label="Entry lambda expression", span="892-892", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_660 [label="Exit lambda expression", span="957-960", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_661 [label="Entry lambda expression", span="959-959", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_686 [label="Exit lambda expression", span="1001-1005", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_687 [label="Entry lambda expression", span="1004-1004", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_713 [label="Exit lambda expression", span="1046-1050", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_714 [label="Entry lambda expression", span="1049-1049", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_739 [label="Exit lambda expression", span="1091-1095", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_740 [label="Entry lambda expression", span="1094-1094", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_768 [label="Entry lambda expression", span="1139-1139", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_779 [label="Entry lambda expression", span="1151-1151", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_805 [label="Entry lambda expression", span="1198-1198", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_831 [label="Exit lambda expression", span="1244-1248", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_832 [label="Entry lambda expression", span="1247-1247", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_857 [label="Exit lambda expression", span="1289-1292", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_858 [label="Entry lambda expression", span="1291-1291", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_106 [label="var createdAt = new DateTime(2012, 12, 12)", span="125-125", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_108 [label="Assert.NotNull(jobId)", span="132-132", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_139 [label="Entry lambda expression", span="127-127", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_109 [label="Assert.NotEmpty(jobId)", span="133-133", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_123 [label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="152-155", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_172 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="191-198", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_185 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_13 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_12 [label="x.GetJobQueue()", span="25-25", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_62 [label="Exit lambda expression", span="71-75", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_60 [label="var transaction = connection.CreateWriteTransaction()", span="73-73", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_71 [label="Exit lambda expression", span="81-85", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_69 [label="var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1))", span="83-83", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_126 [label="Exit lambda expression", span="123-159", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_110 [label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="135-135", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_155 [label="connection.GetJobData(null)", span="166-166", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_164 [label="Exit lambda expression", span="172-176", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_162 [label="var result = connection.GetJobData(''1'')", span="174-174", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_181 [label="Exit lambda expression", span="187-209", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_173 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="200-200", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_195 [label="connection.GetStateData(null)", span="217-217", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_204 [label="Exit lambda expression", span="223-227", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_202 [label="var result = connection.GetStateData(''1'')", span="225-225", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_211 [label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="254-256", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_217 [label="Exit lambda expression", span="247-264", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_210 [label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="249-252", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_212 [label="var result = connection.GetStateData(jobId.ToString())", span="258-258", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_224 [label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="291-293", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_228 [label="Exit lambda expression", span="284-299", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_223 [label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="286-289", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_225 [label="var result = connection.GetStateData(jobId.ToString())", span="295-295", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_234 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="312-319", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_237 [label="Exit lambda expression", span="310-324", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_235 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="321-321", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_245 [label="Exit lambda expression", span="330-336", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_247 [label="connection.SetJobParameter(null, ''name'', ''value'')", span="333-333", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_256 [label="Exit lambda expression", span="342-348", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_258 [label="connection.SetJobParameter(''1'', null, ''value'')", span="345-345", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_265 [label="var job = sql.Query(arrangeSql).Single()", span="361-361", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_270 [label="Exit lambda expression", span="359-371", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_267 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="364-364", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_268 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="366-368", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_276 [label="var job = sql.Query(arrangeSql).Single()", span="384-384", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_282 [label="Exit lambda expression", span="382-395", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_278 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="387-387", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_279 [label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="388-388", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_280 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="390-392", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_288 [label="var job = sql.Query(arrangeSql).Single()", span="408-408", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_293 [label="Exit lambda expression", span="406-418", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_290 [label="connection.SetJobParameter(jobId, ''Name'', null)", span="411-411", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_291 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="413-415", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_300 [label="Exit lambda expression", span="424-430", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_302 [label="connection.GetJobParameter(null, ''hello'')", span="427-427", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_311 [label="Exit lambda expression", span="436-442", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_313 [label="connection.GetJobParameter(''1'', null)", span="439-439", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_321 [label="Exit lambda expression", span="448-452", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_319 [label="var value = connection.GetJobParameter(''1'', ''hello'')", span="450-450", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_330 [label="Exit lambda expression", span="467-476", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_338 [label="Exit lambda expression", span="482-488", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_340 [label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="485-485", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_350 [label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="495-495", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_358 [label="Exit lambda expression", span="501-507", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_356 [label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="503-504", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_364 [label="sql.Execute(arrangeSql)", span="523-523", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_367 [label="Exit lambda expression", span="521-528", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_365 [label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="525-525", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_375 [label="Exit lambda expression", span="534-540", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_377 [label="connection.AnnounceServer(null, new ServerContext())", span="537-537", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_387 [label="Exit lambda expression", span="546-552", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_389 [label="connection.AnnounceServer(''server'', null)", span="549-549", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_406 [label="Exit lambda expression", span="558-583", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_395 [label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="560-564", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_396 [label="connection.AnnounceServer(''server'', context1)", span="565-565", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_397 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="567-567", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_402 [label="connection.AnnounceServer(''server'', context2)", span="579-579", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_403 [label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="580-580", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_416 [label="connection.RemoveServer(null)", span="590-590", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_424 [label="sql.Execute(arrangeSql)", span="604-604", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_428 [label="Exit lambda expression", span="602-610", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_425 [label="connection.RemoveServer(''Server1'')", span="606-606", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_426 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="608-608", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_437 [label="connection.Heartbeat(null)", span="617-617", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_445 [label="sql.Execute(arrangeSql)", span="631-631", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_450 [label="Exit lambda expression", span="629-640", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_446 [label="connection.Heartbeat(''server1'')", span="633-633", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_447 [label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="635-636", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_464 [label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="647-647", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_473 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="659-665", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_477 [label="Exit lambda expression", span="657-671", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_474 [label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="667-667", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_475 [label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="669-669", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_487 [label="connection.GetAllItemsFromSet(null)", span="678-678", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_497 [label="Exit lambda expression", span="684-690", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_494 [label="var result = connection.GetAllItemsFromSet(''some-set'')", span="686-686", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_503 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="703-708", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_508 [label="Exit lambda expression", span="700-717", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_504 [label="var result = connection.GetAllItemsFromSet(''some-set'')", span="711-711", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_515 [label="Exit lambda expression", span="723-729", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_517 [label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="726-726", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_526 [label="Exit lambda expression", span="735-741", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_528 [label="connection.SetRangeInHash(''some-hash'', null)", span="738-738", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_538 [label="Exit lambda expression", span="747-762", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_534 [label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="749-753", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_535 [label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="755-758", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_552 [label="connection.GetAllEntriesFromHash(null)", span="769-769", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_561 [label="Exit lambda expression", span="775-779", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_559 [label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="777-777", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_567 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="792-797", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_573 [label="Exit lambda expression", span="789-807", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_568 [label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="800-800", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_581 [label="connection.GetSetCount(null)", span="816-816", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_590 [label="Exit lambda expression", span="823-827", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_588 [label="var result = connection.GetSetCount(''my-set'')", span="825-825", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_596 [label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                })", span="839-844", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_599 [label="Exit lambda expression", span="837-849", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_597 [label="var result = connection.GetSetCount(''set-1'')", span="846-846", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_608 [label="connection.GetRangeFromSet(null, 0, 1)", span="857-857", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_616 [label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="870-878", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_619 [label="Exit lambda expression", span="868-883", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_617 [label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="880-880", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_627 [label="connection.GetCounter(null)", span="892-892", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_636 [label="Exit lambda expression", span="899-903", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_634 [label="var result = connection.GetCounter(''my-counter'')", span="901-901", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_642 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="916-921", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_645 [label="Exit lambda expression", span="913-928", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_643 [label="var result = connection.GetCounter(''counter-1'')", span="924-924", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_651 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="941-945", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_654 [label="Exit lambda expression", span="938-951", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_652 [label="var result = connection.GetCounter(''counter-1'')", span="948-948", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_662 [label="connection.GetHashCount(null)", span="959-959", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_671 [label="Exit lambda expression", span="966-970", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_669 [label="var result = connection.GetHashCount(''my-hash'')", span="968-968", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_677 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="983-988", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_680 [label="Exit lambda expression", span="980-995", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_678 [label="var result = connection.GetHashCount(''hash-1'')", span="991-991", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_688 [label="connection.GetHashTtl(null)", span="1004-1004", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_697 [label="Exit lambda expression", span="1011-1015", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_695 [label="var result = connection.GetHashTtl(''my-hash'')", span="1013-1013", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_703 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1028-1032", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_707 [label="Exit lambda expression", span="1025-1040", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_704 [label="var result = connection.GetHashTtl(''hash-1'')", span="1035-1035", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_715 [label="connection.GetListCount(null)", span="1049-1049", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_724 [label="Exit lambda expression", span="1056-1060", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_722 [label="var result = connection.GetListCount(''my-list'')", span="1058-1058", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_730 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1073-1078", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_733 [label="Exit lambda expression", span="1070-1085", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_731 [label="var result = connection.GetListCount(''list-1'')", span="1081-1081", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_741 [label="connection.GetListTtl(null)", span="1094-1094", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_750 [label="Exit lambda expression", span="1101-1105", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_748 [label="var result = connection.GetListTtl(''my-list'')", span="1103-1103", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_756 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1118-1122", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_760 [label="Exit lambda expression", span="1115-1130", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_757 [label="var result = connection.GetListTtl(''list-1'')", span="1125-1125", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_767 [label="Exit lambda expression", span="1136-1142", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_769 [label="connection.GetValueFromHash(null, ''name'')", span="1139-1139", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_778 [label="Exit lambda expression", span="1148-1154", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_780 [label="connection.GetValueFromHash(''key'', null)", span="1151-1151", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_788 [label="Exit lambda expression", span="1160-1164", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_786 [label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1162-1162", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_794 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1177-1182", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_797 [label="Exit lambda expression", span="1174-1189", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_795 [label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1185-1185", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_804 [label="Exit lambda expression", span="1195-1201", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_806 [label="connection.GetRangeFromList(null, 0, 1)", span="1198-1198", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_815 [label="Exit lambda expression", span="1207-1211", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_813 [label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1209-1209", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_822 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1224-1231", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_825 [label="Exit lambda expression", span="1221-1238", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_823 [label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1234-1234", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_833 [label="connection.GetAllItemsFromList(null)", span="1247-1247", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_842 [label="Exit lambda expression", span="1254-1258", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_840 [label="var result = connection.GetAllItemsFromList(''my-list'')", span="1256-1256", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_848 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1271-1276", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_851 [label="Exit lambda expression", span="1268-1283", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_849 [label="var result = connection.GetAllItemsFromList(''list-1'')", span="1279-1279", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_859 [label="connection.GetSetTtl(null)", span="1291-1291", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_868 [label="Exit lambda expression", span="1298-1302", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_866 [label="var result = connection.GetSetTtl(''my-set'')", span="1300-1300", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_874 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1315-1319", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_878 [label="Exit lambda expression", span="1312-1327", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_875 [label="var result = connection.GetSetTtl(''set-1'')", span="1322-1322", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_899 [label="Exit lambda expression", span="1347-1347", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_898 [label="x.QueueProviders", span="1347-1347", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_55 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_115 [label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="141-141", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_117 [label="var job = invocationData.Deserialize()", span="144-144", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_121 [label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="149-149", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_175 [label="Assert.NotNull(result.Job)", span="203-203", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_178 [label="Assert.Null(result.LoadException)", span="206-206", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_213 [label="Assert.NotNull(result)", span="259-259", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_226 [label="Assert.NotNull(result)", span="296-296", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_399 [label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="569-571", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_405 [label="Assert.Contains(''1000'', sameServer.Data)", span="582-582", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_448 [label="Assert.NotEqual(2012, servers[''server1''].Year)", span="638-638", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_495 [label="Assert.NotNull(result)", span="688-688", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_506 [label="Assert.Contains(''1'', result)", span="715-715", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_569 [label="Assert.NotNull(result)", span="803-803", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_23 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_22 [label="new SqlServerConnection(null)", span="35-35", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_156 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_196 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_248 [label="Exit lambda expression", span="333-333", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_259 [label="Exit lambda expression", span="345-345", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_303 [label="Exit lambda expression", span="427-427", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_314 [label="Exit lambda expression", span="439-439", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_341 [label="Exit lambda expression", span="485-485", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_351 [label="Exit lambda expression", span="495-495", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_378 [label="Exit lambda expression", span="537-537", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_390 [label="Exit lambda expression", span="549-549", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_417 [label="Exit lambda expression", span="590-590", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_438 [label="Exit lambda expression", span="617-617", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_465 [label="Exit lambda expression", span="647-647", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_488 [label="Exit lambda expression", span="678-678", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_518 [label="Exit lambda expression", span="726-726", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_529 [label="Exit lambda expression", span="738-738", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_553 [label="Exit lambda expression", span="769-769", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_582 [label="Exit lambda expression", span="816-816", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_609 [label="Exit lambda expression", span="857-857", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_628 [label="Exit lambda expression", span="892-892", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_663 [label="Exit lambda expression", span="959-959", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_689 [label="Exit lambda expression", span="1004-1004", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_716 [label="Exit lambda expression", span="1049-1049", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_742 [label="Exit lambda expression", span="1094-1094", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_770 [label="Exit lambda expression", span="1139-1139", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_781 [label="Exit lambda expression", span="1151-1151", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_807 [label="Exit lambda expression", span="1198-1198", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_834 [label="Exit lambda expression", span="1247-1247", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_860 [label="Exit lambda expression", span="1291-1291", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_122 [label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="150-150", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_141 [label="Exit lambda expression", span="127-127", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_140 [label="SampleMethod(''Hello'')", span="127-127", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_142 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_145 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_187 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_186 [label="SampleMethod(''wrong'')", span="189-189", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_61 [label="Assert.NotNull(transaction)", span="74-74", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_70 [label="Assert.NotNull(@lock)", span="84-84", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_116 [label="invocationData.Arguments = sqlJob.Arguments", span="142-142", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_163 [label="Assert.Null(result)", span="175-175", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_180 [label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="208-208", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_174 [label="Assert.NotNull(result)", span="202-202", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_179 [label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="207-207", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_203 [label="Assert.Null(result)", span="226-226", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_236 [label="Assert.NotNull(result.LoadException)", span="323-323", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_266 [label="string jobId = job.Id.ToString()", span="362-362", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_277 [label="string jobId = job.Id.ToString()", span="385-385", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_289 [label="string jobId = job.Id.ToString()", span="409-409", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_320 [label="Assert.Null(value)", span="451-451", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_357 [label="Assert.Null(result)", span="506-506", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_400 [label="Assert.NotNull(server.LastHeartbeat)", span="572-572", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_401 [label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="574-578", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_427 [label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="609-609", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_451 [label="Entry lambda expression", span="636-636", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_454 [label="Entry lambda expression", span="636-636", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_507 [label="Assert.Contains(''2'', result)", span="716-716", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_539 [label="Entry lambda expression", span="758-758", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_560 [label="Assert.Null(result)", span="778-778", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_696 [label="Assert.True(result < TimeSpan.Zero)", span="1014-1014", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_706 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1039-1039", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_705 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1038-1038", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_749 [label="Assert.True(result < TimeSpan.Zero)", span="1104-1104", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_759 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1129-1129", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_758 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1128-1128", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_787 [label="Assert.Null(result)", span="1163-1163", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_814 [label="Assert.Empty(result)", span="1210-1210", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_841 [label="Assert.Empty(result)", span="1257-1257", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_867 [label="Assert.True(result < TimeSpan.Zero)", span="1301-1301", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_877 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1326-1326", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_876 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1325-1325", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_144 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_143 [label="(string) x.Name", span="155-155", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_147 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_146 [label="(string) x.Value", span="155-155", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_453 [label="Exit lambda expression", span="636-636", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_452 [label="(string)x.Id", span="636-636", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_456 [label="Exit lambda expression", span="636-636", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_455 [label="(DateTime)x.LastHeartbeat", span="636-636", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_541 [label="Exit lambda expression", span="758-758", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_540 [label="(string)x.Field", span="758-758", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_543 [label="(string)x.Value", span="758-758", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_544 [label="Exit lambda expression", span="758-758", cluster="lambda expression", file="BackgroundJobClient.cs"];
m2_672 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="974-974", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="BackgroundJobClient.cs"];
m2_674 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="980-995", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="BackgroundJobClient.cs"];
m2_673 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="976-978", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="BackgroundJobClient.cs"];
m2_675 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="974-974", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="BackgroundJobClient.cs"];
m2_41 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", file="BackgroundJobClient.cs"];
m2_104 [label="Entry Unk.UseConnections", span="", cluster="Unk.UseConnections", file="BackgroundJobClient.cs"];
m2_63 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="39-39", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="BackgroundJobClient.cs"];
m2_519 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="BackgroundJobClient.cs"];
m2_24 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="BackgroundJobClient.cs"];
m2_9 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BackgroundJobClient.cs"];
m2_369 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="532-532", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundJobClient.cs"];
m2_370 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="534-540", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundJobClient.cs"];
m2_371 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="532-532", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundJobClient.cs"];
m2_480 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="675-675", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_481 [label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="677-678", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_482 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="675-675", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_96 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClient.cs"];
m2_879 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1330-1330", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_880 [label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1332-1332", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_881 [label="var storage = new SqlServerStorage(sqlConnection)", span="1334-1334", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_883 [label="action(sqlConnection, connection)", span="1337-1337", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_882 [label="var connection = new SqlServerConnection(storage)", span="1335-1335", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_884 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1330-1330", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_690 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="415-415", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="BackgroundJobClient.cs"];
m2_239 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="328-328", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_240 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="330-336", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_241 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="328-328", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_886 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="BackgroundJobClient.cs"];
m2_158 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="170-170", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="BackgroundJobClient.cs"];
m2_159 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="172-176", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="BackgroundJobClient.cs"];
m2_160 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="170-170", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="BackgroundJobClient.cs"];
m2_56 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="69-69", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="BackgroundJobClient.cs"];
m2_57 [label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="71-75", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="BackgroundJobClient.cs"];
m2_58 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="69-69", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="BackgroundJobClient.cs"];
m2_136 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="BackgroundJobClient.cs"];
m2_315 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="446-446", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="BackgroundJobClient.cs"];
m2_316 [label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="448-452", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="BackgroundJobClient.cs"];
m2_317 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="446-446", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="BackgroundJobClient.cs"];
m2_45 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="BackgroundJobClient.cs"];
m2_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobClient.cs"];
m2_708 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1044-1044", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_709 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1046-1050", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_710 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1044-1044", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_100 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1356-1356", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="BackgroundJobClient.cs"];
m2_900 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1356-1356", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="BackgroundJobClient.cs"];
m2_610 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="356-356", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="BackgroundJobClient.cs"];
m2_35 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="BackgroundJobClient.cs"];
m2_509 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="721-721", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_510 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="723-729", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_511 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="721-721", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_0 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="20-20", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="BackgroundJobClient.cs"];
m2_1 [label="_queue = new Mock<IPersistentJobQueue>()", span="22-22", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="BackgroundJobClient.cs"];
m2_3 [label="provider.Setup(x => x.GetJobQueue())\r\n                .Returns(_queue.Object)", span="25-26", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="BackgroundJobClient.cs"];
m2_4 [label="_providers = new PersistentJobQueueProviderCollection(provider.Object)", span="28-28", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="BackgroundJobClient.cs"];
m2_2 [label="var provider = new Mock<IPersistentJobQueueProvider>()", span="24-24", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="BackgroundJobClient.cs"];
m2_5 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="20-20", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="BackgroundJobClient.cs"];
m2_885 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="BackgroundJobClient.cs"];
m2_157 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="125-125", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="BackgroundJobClient.cs"];
m2_894 [label="Entry Mock<SqlServerStorage>.cstr", span="", cluster="Mock<SqlServerStorage>.cstr", file="BackgroundJobClient.cs"];
m2_73 [label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="44-44", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="BackgroundJobClient.cs"];
m2_86 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="105-105", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="BackgroundJobClient.cs"];
m2_87 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="107-117", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", color=green, community=0, file="BackgroundJobClient.cs"];
m2_88 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="105-105", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="BackgroundJobClient.cs"];
m2_591 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="831-831", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="BackgroundJobClient.cs"];
m2_593 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="837-849", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="BackgroundJobClient.cs"];
m2_592 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="833-835", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="BackgroundJobClient.cs"];
m2_594 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="831-831", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="BackgroundJobClient.cs"];
m2_744 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1099-1099", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_745 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1101-1105", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_746 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1099-1099", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_468 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="651-651", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="BackgroundJobClient.cs"];
m2_470 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="657-671", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="BackgroundJobClient.cs"];
m2_469 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="653-655", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="BackgroundJobClient.cs"];
m2_471 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="651-651", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="BackgroundJobClient.cs"];
m2_734 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1089-1089", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_735 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1091-1095", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_736 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1089-1089", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_130 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="BackgroundJobClient.cs"];
m2_896 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="BackgroundJobClient.cs"];
m2_205 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="231-231", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="BackgroundJobClient.cs"];
m2_207 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="247-264", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="BackgroundJobClient.cs"];
m2_206 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="233-245", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="BackgroundJobClient.cs"];
m2_208 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="231-231", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="BackgroundJobClient.cs"];
m2_782 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1158-1158", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="BackgroundJobClient.cs"];
m2_783 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1160-1164", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="BackgroundJobClient.cs"];
m2_784 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1158-1158", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="BackgroundJobClient.cs"];
m2_52 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="BackgroundJobClient.cs"];
m2_64 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="BackgroundJobClient.cs"];
m2_42 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="55-55", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="BackgroundJobClient.cs"];
m2_43 [label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="57-65", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="BackgroundJobClient.cs"];
m2_44 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="55-55", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="BackgroundJobClient.cs"];
m2_8 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BackgroundJobClient.cs"];
m2_655 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="955-955", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_656 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="957-960", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_657 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="955-955", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_165 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="BackgroundJobClient.cs"];
m2_25 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="41-41", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="BackgroundJobClient.cs"];
m2_26 [label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", span="43-51", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", color=green, community=0, file="BackgroundJobClient.cs"];
m2_27 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="41-41", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="BackgroundJobClient.cs"];
m2_498 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="694-694", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="BackgroundJobClient.cs"];
m2_500 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="700-717", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="BackgroundJobClient.cs"];
m2_499 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="696-698", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="BackgroundJobClient.cs"];
m2_501 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="694-694", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="BackgroundJobClient.cs"];
m2_85 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="72-72", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="BackgroundJobClient.cs"];
m2_10 [label="Entry PersistentJobQueueProviderCollection.cstr", span="", cluster="PersistentJobQueueProviderCollection.cstr", file="BackgroundJobClient.cs"];
m2_183 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="BackgroundJobClient.cs"];
m2_478 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="BackgroundJobClient.cs"];
m2_129 [label="Entry Unk.NotEmpty", span="", cluster="Unk.NotEmpty", file="BackgroundJobClient.cs"];
m2_14 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="BackgroundJobClient.cs"];
m2_816 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="BackgroundJobClient.cs"];
m2_520 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="733-733", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="BackgroundJobClient.cs"];
m2_521 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="735-741", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="BackgroundJobClient.cs"];
m2_522 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="733-733", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="BackgroundJobClient.cs"];
m2_665 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="964-964", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_666 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="966-970", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_667 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="964-964", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_681 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="999-999", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_682 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1001-1005", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_683 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="999-999", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_28 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1342-1342", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_890 [label="storage.Setup(x => x.QueueProviders).Returns(_providers)", span="1347-1347", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_888 [label="var sql = ConnectionUtils.CreateConnection()", span="1344-1344", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_892 [label="action(connection)", span="1351-1351", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_889 [label="var storage = new Mock<SqlServerStorage>(sql)", span="1346-1346", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_891 [label="var connection = new SqlServerConnection(storage.Object)", span="1349-1349", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_893 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1342-1342", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="BackgroundJobClient.cs"];
m2_620 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="887-887", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_621 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="889-893", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_622 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="887-887", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_37 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobClient.cs"];
m2_489 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="225-225", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="BackgroundJobClient.cs"];
m2_798 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1193-1193", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_799 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1195-1201", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_800 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1193-1193", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_294 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="422-422", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_295 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="424-430", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_296 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="422-422", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_407 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="BackgroundJobClient.cs"];
m2_817 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1215-1215", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="BackgroundJobClient.cs"];
m2_819 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1221-1238", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="BackgroundJobClient.cs"];
m2_818 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1217-1219", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="BackgroundJobClient.cs"];
m2_820 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1215-1215", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="BackgroundJobClient.cs"];
m2_466 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="BackgroundJobClient.cs"];
m2_138 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="BackgroundJobClient.cs"];
m2_479 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="BackgroundJobClient.cs"];
m2_74 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="89-89", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClient.cs"];
m2_75 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="91-101", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", color=green, community=0, file="BackgroundJobClient.cs"];
m2_76 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="89-89", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClient.cs"];
m2_630 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="897-897", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_631 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="899-903", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_632 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="897-897", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_835 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="489-489", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="BackgroundJobClient.cs"];
m2_852 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1287-1287", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_853 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1289-1292", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_854 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1287-1287", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_65 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="79-79", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="BackgroundJobClient.cs"];
m2_66 [label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="81-85", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="BackgroundJobClient.cs"];
m2_67 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="79-79", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="BackgroundJobClient.cs"];
m2_127 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="BackgroundJobClient.cs"];
m2_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobClient.cs"];
m2_249 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="196-196", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="BackgroundJobClient.cs"];
m2_574 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="811-811", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_575 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="813-817", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_576 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="811-811", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="BackgroundJobClient.cs"];
m2_359 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="511-511", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="BackgroundJobClient.cs"];
m2_361 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="521-528", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="BackgroundJobClient.cs"];
m2_360 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="513-519", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="BackgroundJobClient.cs"];
m2_362 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="511-511", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="BackgroundJobClient.cs"];
m2_72 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="BackgroundJobClient.cs"];
m2_611 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="862-862", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="BackgroundJobClient.cs"];
m2_613 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="868-883", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="BackgroundJobClient.cs"];
m2_612 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@Key, @Value, 0.0)''", span="864-866", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="BackgroundJobClient.cs"];
m2_614 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="862-862", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="BackgroundJobClient.cs"];
m2_271 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="375-375", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="BackgroundJobClient.cs"];
m2_273 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="382-395", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="BackgroundJobClient.cs"];
m2_272 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="377-380", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="BackgroundJobClient.cs"];
m2_274 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="375-375", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="BackgroundJobClient.cs"];
m2_861 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="372-372", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="BackgroundJobClient.cs"];
m2_304 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="214-214", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="BackgroundJobClient.cs"];
m2_379 [label="Entry Hangfire.Server.ServerContext.ServerContext()", span="20-20", cluster="Hangfire.Server.ServerContext.ServerContext()", file="BackgroundJobClient.cs"];
m2_84 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundJobClient.cs"];
m2_331 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="BackgroundJobClient.cs"];
m2_197 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="165-165", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="BackgroundJobClient.cs"];
m2_440 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="621-621", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="BackgroundJobClient.cs"];
m2_442 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="629-640", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="BackgroundJobClient.cs"];
m2_441 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="623-627", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="BackgroundJobClient.cs"];
m2_443 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="621-621", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="BackgroundJobClient.cs"];
m2_809 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1205-1205", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_810 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1207-1211", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_811 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1205-1205", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="BackgroundJobClient.cs"];
m2_530 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="745-745", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="BackgroundJobClient.cs"];
m2_531 [label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="747-762", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="BackgroundJobClient.cs"];
m2_532 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="745-745", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="BackgroundJobClient.cs"];
m2_166 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="180-180", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="BackgroundJobClient.cs"];
m2_168 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="187-209", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="BackgroundJobClient.cs"];
m2_167 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="182-185", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="BackgroundJobClient.cs"];
m2_169 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="180-180", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="BackgroundJobClient.cs"];
m2_408 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="BackgroundJobClient.cs"];
m2_430 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="614-614", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundJobClient.cs"];
m2_431 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="616-617", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundJobClient.cs"];
m2_432 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="614-614", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="BackgroundJobClient.cs"];
m2_725 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1064-1064", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="BackgroundJobClient.cs"];
m2_727 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1070-1085", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="BackgroundJobClient.cs"];
m2_726 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key])\r\nvalues (@key)''", span="1066-1068", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="BackgroundJobClient.cs"];
m2_728 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1064-1064", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="BackgroundJobClient.cs"];
m2_583 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="347-347", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="BackgroundJobClient.cs"];
m2_148 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="163-163", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_149 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="165-166", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_150 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="163-163", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClient.cs"];
m2_131 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="BackgroundJobClient.cs"];
m2_101 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="BackgroundJobClient.cs"];
m2_102 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''\''Hello\'''', job.Arguments[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="123-159", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="BackgroundJobClient.cs"];
m2_103 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="BackgroundJobClient.cs"];
m2_137 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobClient.cs"];
m2_352 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="499-499", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_353 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="501-507", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_354 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="499-499", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="BackgroundJobClient.cs"];
m2_717 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="445-445", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="BackgroundJobClient.cs"];
m2_584 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="821-821", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="BackgroundJobClient.cs"];
m2_585 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="823-827", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="BackgroundJobClient.cs"];
m2_586 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="821-821", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="BackgroundJobClient.cs"];
m2_901 [label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span="", file="BackgroundJobClient.cs"];
m2_907 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_902 [label=token, span="", file="BackgroundJobClient.cs"];
m2_903 [label=queues, span="", file="BackgroundJobClient.cs"];
m2_906 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_921 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_904 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_905 [label=token, span="", file="BackgroundJobClient.cs"];
m2_909 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_908 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_910 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_911 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_912 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_913 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_914 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_915 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_916 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_917 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_918 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_919 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_920 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_922 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_923 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_924 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_925 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_926 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_927 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_928 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_929 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_930 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_931 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_932 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_933 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_934 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_935 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_936 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_937 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_938 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_939 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_940 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_941 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_942 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_943 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_944 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_945 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_946 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_947 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_948 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_949 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_950 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_951 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_952 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_953 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_954 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_955 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_956 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_957 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_958 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_959 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_960 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m2_961 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="BackgroundJobClient.cs"];
m2_962 [label=arrangeSql, span="", file="BackgroundJobClient.cs"];
m3_31 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="200-200", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs"];
m3_172 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="200-200", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="BackgroundJobClientFacts.cs"];
m3_16 [label="Entry Mock<IStateMachineFactory>.cstr", span="", cluster="Mock<IStateMachineFactory>.cstr", file="BackgroundJobClientFacts.cs"];
m3_18 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="BackgroundJobClientFacts.cs"];
m3_37 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="BackgroundJobClientFacts.cs"];
m3_17 [label="Entry Mock<IJobCreationProcess>.cstr", span="", cluster="Mock<IJobCreationProcess>.cstr", file="BackgroundJobClientFacts.cs"];
m3_60 [label="Entry Unk.DoesNotThrow", span="", cluster="Unk.DoesNotThrow", file="BackgroundJobClientFacts.cs"];
m3_94 [label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="80-80", cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="BackgroundJobClientFacts.cs"];
m3_104 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="BackgroundJobClientFacts.cs"];
m3_32 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m3_33 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object))", span="39-40", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m3_34 [label="Assert.Equal(''storage'', exception.ParamName)", span="42-42", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m3_35 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="BackgroundJobClientFacts.cs"];
m3_36 [label="Entry Unk.>", span="", cluster="Unk.>", file="BackgroundJobClientFacts.cs"];
m3_77 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="84-84", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m3_78 [label="var client = CreateClient()", span="86-86", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m3_79 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="88-89", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m3_80 [label="Assert.Equal(''job'', exception.ParamName)", span="91-91", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m3_81 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="84-84", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="BackgroundJobClientFacts.cs"];
m3_56 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m3_57 [label="JobStorage.Current = new Mock<JobStorage>().Object", span="66-66", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m3_58 [label="Assert.DoesNotThrow(() => new BackgroundJobClient())", span="67-67", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m3_59 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="BackgroundJobClientFacts.cs"];
m3_95 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="106-106", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_96 [label="var client = CreateClient()", span="108-108", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_97 [label="client.Create(_job, _state.Object)", span="110-110", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_98 [label="_process.Verify(x => x.Run(It.IsNotNull<CreateContext>(), It.IsNotNull<IStateMachine>()))", span="112-112", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m3_99 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", span="106-106", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_RunsTheJobCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_23 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="BackgroundJobClientFacts.cs"];
m3_136 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="BackgroundJobClientFacts.cs"];
m3_121 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="BackgroundJobClientFacts.cs"];
m3_114 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="127-127", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_115 [label="var client = CreateClient()", span="129-129", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_116 [label="_process.Setup(x => x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>()))\r\n                .Throws<InvalidOperationException>()", span="130-131", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", color=red, community=1, file="BackgroundJobClientFacts.cs"];
m3_117 [label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="133-134", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_118 [label="Assert.NotNull(exception.InnerException)", span="136-136", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_119 [label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="137-137", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_120 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", span="127-127", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsProcessException_IntoItsOwnException()", file="BackgroundJobClientFacts.cs"];
m3_145 [label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="102-102", cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="BackgroundJobClientFacts.cs"];
m3_146 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="163-163", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m3_147 [label="var client = CreateClient()", span="165-165", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m3_148 [label="client.ChangeState(''job-id'', _state.Object, null)", span="167-167", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m3_149 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null))", span="169-172", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m3_150 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="163-163", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="BackgroundJobClientFacts.cs"];
m3_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="BackgroundJobClientFacts.cs"];
m3_64 [label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="38-38", cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="BackgroundJobClientFacts.cs"];
m3_42 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m3_43 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _process.Object))", span="48-49", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m3_44 [label="Assert.Equal(''stateMachineFactory'', exception.ParamName)", span="51-51", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m3_45 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", span="46-46", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateMachineFactoryIsNull()", file="BackgroundJobClientFacts.cs"];
m3_169 [label="Entry lambda expression", span="191-191", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_20 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_24 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_28 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_21 [label="x.GetConnection()", span="24-24", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_22 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_25 [label="x.Create(_connection.Object)", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_26 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_29 [label="Method()", span="33-33", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_30 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_38 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_39 [label="new BackgroundJobClient(null, _stateMachineFactory.Object, _process.Object)", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_40 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_46 [label="Entry lambda expression", span="49-49", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_47 [label="new BackgroundJobClient(_storage.Object, null, _process.Object)", span="49-49", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_48 [label="Exit lambda expression", span="49-49", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_53 [label="Entry lambda expression", span="58-58", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_54 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null)", span="58-58", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_55 [label="Exit lambda expression", span="58-58", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_61 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_62 [label="new BackgroundJobClient()", span="67-67", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_63 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_68 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_69 [label="new BackgroundJobClient(_storage.Object)", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_70 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_74 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_75 [label="new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object)", span="80-80", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_76 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_84 [label="client.Create(null, _state.Object)", span="89-89", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_83 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_85 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_92 [label="client.Create(_job, null)", span="100-100", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_91 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_93 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_101 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_102 [label="x.Run(It.IsNotNull<CreateContext>(), It.IsNotNull<IStateMachine>())", span="112-112", cluster="lambda expression", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m3_103 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_111 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_112 [label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())", span="118-118", cluster="lambda expression", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m3_113 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_126 [label="client.Create(_job, _state.Object)", span="134-134", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_122 [label="Entry lambda expression", span="130-130", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_125 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_123 [label="x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())", span="130-130", cluster="lambda expression", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m3_124 [label="Exit lambda expression", span="130-130", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_127 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_134 [label="client.ChangeState(null, _state.Object, null)", span="146-146", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_133 [label="Entry lambda expression", span="146-146", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_135 [label="Exit lambda expression", span="146-146", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_143 [label="client.ChangeState(''jobId'', null, null)", span="157-157", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_142 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_144 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_151 [label="Entry lambda expression", span="169-172", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_152 [label="x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                null)", span="169-172", cluster="lambda expression", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m3_153 [label="Exit lambda expression", span="169-172", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_159 [label="Entry lambda expression", span="182-185", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_160 [label="x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' })", span="182-185", cluster="lambda expression", color=red, community=1, file="BackgroundJobClientFacts.cs"];
m3_161 [label="Exit lambda expression", span="182-185", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_170 [label="x.ChangeState(''job-id'', _state.Object, null)", span="191-191", cluster="lambda expression", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m3_171 [label="Exit lambda expression", span="191-191", cluster="lambda expression", file="BackgroundJobClientFacts.cs"];
m3_86 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="95-95", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_87 [label="var client = CreateClient()", span="97-97", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_88 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="99-100", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_89 [label="Assert.Equal(''state'', exception.ParamName)", span="102-102", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_90 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="95-95", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_105 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", span="116-116", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="BackgroundJobClientFacts.cs"];
m3_106 [label="_process.Setup(x => x.Run(It.IsAny<CreateContext>(), It.IsAny<IStateMachine>())).Returns(''some-job'')", span="118-118", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m3_107 [label="var client = CreateClient()", span="119-119", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", color=green, community=0, file="BackgroundJobClientFacts.cs"];
m3_108 [label="var id = client.Create(_job, _state.Object)", span="121-121", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m3_109 [label="Assert.Equal(''some-job'', id)", span="123-123", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", color=red, community=0, file="BackgroundJobClientFacts.cs"];
m3_110 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", span="116-116", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="BackgroundJobClientFacts.cs"];
m3_82 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="204-204", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs"];
m3_173 [label="return new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, _process.Object);", span="206-206", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs"];
m3_174 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="204-204", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="BackgroundJobClientFacts.cs"];
m3_100 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="BackgroundJobClientFacts.cs"];
m3_65 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs"];
m3_66 [label="Assert.DoesNotThrow(() => new BackgroundJobClient(_storage.Object))", span="73-73", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs"];
m3_67 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", span="71-71", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForStateMachineFactory()", file="BackgroundJobClientFacts.cs"];
m3_128 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="141-141", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m3_129 [label="var client = CreateClient()", span="143-143", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m3_130 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="145-146", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m3_131 [label="Assert.Equal(''jobId'', exception.ParamName)", span="148-148", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m3_132 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="141-141", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="BackgroundJobClientFacts.cs"];
m3_0 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_1 [label="_connection = new Mock<IStorageConnection>()", span="22-22", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_2 [label="_storage = new Mock<JobStorage>()", span="23-23", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_3 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="24-24", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_4 [label="_stateMachine = new Mock<IStateMachine>()", span="26-26", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_5 [label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="28-28", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_6 [label="_stateMachineFactory.Setup(x => x.Create(_connection.Object)).Returns(_stateMachine.Object)", span="29-29", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_7 [label="_process = new Mock<IJobCreationProcess>()", span="31-31", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_8 [label="_state = new Mock<IState>()", span="32-32", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_9 [label="_job = Job.FromExpression(() => Method())", span="33-33", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_10 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="20-20", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="BackgroundJobClientFacts.cs"];
m3_15 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="BackgroundJobClientFacts.cs"];
m3_49 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m3_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object, null))", span="57-58", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m3_51 [label="Assert.Equal(''process'', exception.ParamName)", span="60-60", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m3_52 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", span="55-55", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenCreationProcessIsNull()", file="BackgroundJobClientFacts.cs"];
m3_27 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="BackgroundJobClientFacts.cs"];
m3_154 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="176-176", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m3_155 [label="var client = CreateClient()", span="178-178", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m3_156 [label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="180-180", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs", color=green, community=0];
m3_157 [label="_stateMachine.Verify(x => x.ChangeState(\r\n                ''job-id'',\r\n                _state.Object,\r\n                new[] { ''State'' }))", span="182-185", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", color=red, community=1, file="BackgroundJobClientFacts.cs"];
m3_158 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="176-176", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="BackgroundJobClientFacts.cs"];
m3_162 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="189-189", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m3_163 [label="_stateMachine.Setup(x => x.ChangeState(''job-id'', _state.Object, null))\r\n                .Returns(true)", span="191-192", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", color=red, community=1, file="BackgroundJobClientFacts.cs"];
m3_164 [label="var client = CreateClient()", span="193-193", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m3_165 [label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="195-195", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m3_166 [label="Assert.True(result)", span="197-197", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m3_167 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", span="189-189", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateMachineInvocation()", file="BackgroundJobClientFacts.cs"];
m3_168 [label="Entry Unk.True", span="", cluster="Unk.True", file="BackgroundJobClientFacts.cs"];
m3_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="BackgroundJobClientFacts.cs"];
m3_41 [label="Entry BackgroundJobClient.cstr", span="", cluster="BackgroundJobClient.cstr", file="BackgroundJobClientFacts.cs"];
m3_137 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="152-152", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_138 [label="var client = CreateClient()", span="154-154", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_139 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="156-157", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_140 [label="Assert.Equal(''state'', exception.ParamName)", span="159-159", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_141 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="152-152", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="BackgroundJobClientFacts.cs"];
m3_71 [label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_72 [label="Assert.DoesNotThrow(\r\n                () => new BackgroundJobClient(_storage.Object, _stateMachineFactory.Object))", span="79-80", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_73 [label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", span="77-77", cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_HasDefaultValue_ForCreationProcess()", file="BackgroundJobClientFacts.cs"];
m3_11 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="BackgroundJobClientFacts.cs"];
m3_12 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="BackgroundJobClientFacts.cs"];
m3_19 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJobClientFacts.cs"];
m3_175 [label="Hangfire.Core.Tests.BackgroundJobClientFacts", span="", file="BackgroundJobClientFacts.cs"];
m3_176 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m3_177 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m3_178 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m3_179 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m3_180 [label=client, span="", file="BackgroundJobClientFacts.cs"];
m4_0 [label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="20-20", cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="BackgroundJobServer.cs"];
m4_1 [label="Exit Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", span="20-20", cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext)", file="BackgroundJobServer.cs"];
m5_0 [label="Entry HangFire.SqlServer.IPersistentJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="26-26", cluster="HangFire.SqlServer.IPersistentJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs"];
m5_1 [label="Exit HangFire.SqlServer.IPersistentJobQueue.Dequeue(string[], System.Threading.CancellationToken)", span="26-26", cluster="HangFire.SqlServer.IPersistentJobQueue.Dequeue(string[], System.Threading.CancellationToken)", file="ClientExceptionContextFacts.cs"];
m5_2 [label="Entry HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="27-27", cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="ClientExceptionContextFacts.cs"];
m5_3 [label="Exit HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", span="27-27", cluster="HangFire.SqlServer.IPersistentJobQueue.Enqueue(System.Collections.Generic.Queue<System.Action<SqlConnection>>, string, string)", file="ClientExceptionContextFacts.cs"];
m6_22 [label="Entry HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="CreateContext.cs"];
m6_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="CreateContext.cs"];
m6_24 [label="Exit HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.StateMachineFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="CreateContext.cs"];
m6_26 [label="Entry HangFire.Tests.StateMachineFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="CreateContext.cs"];
m6_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="CreateContext.cs"];
m6_28 [label="Exit HangFire.Tests.StateMachineFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.StateMachineFeature.ScenarioCleanup()", file="CreateContext.cs"];
m6_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="CreateContext.cs"];
m6_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="CreateContext.cs"];
m6_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="CreateContext.cs"];
m6_156 [label="Entry HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", span="363-363", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="CreateContext.cs"];
m6_160 [label="testRunner.When(''I change the state of the \'unexisting\' job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="371-371", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="CreateContext.cs"];
m6_161 [label="testRunner.Then(''the \'Test\' state was not applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="373-373", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="CreateContext.cs"];
m6_158 [label="this.ScenarioSetup(scenarioInfo)", span="367-367", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="CreateContext.cs"];
m6_162 [label="this.ScenarioCleanup()", span="375-375", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="CreateContext.cs"];
m6_157 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state of the unexisting job should not be changed'', ((string[])(null)))", span="365-365", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="CreateContext.cs"];
m6_159 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="369-369", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="CreateContext.cs"];
m6_163 [label="Exit HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", span="363-363", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheUnexistingJobShouldNotBeChanged()", file="CreateContext.cs"];
m6_0 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="30-30", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", file="CreateContext.cs"];
m6_1 [label="Items = context.Items", span="33-33", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", color=green, community=0, file="CreateContext.cs"];
m6_2 [label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", span="30-30", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Client.CreateContext)", color=green, community=0, file="CreateContext.cs"];
m6_3 [label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="36-36", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="CreateContext.cs"];
m6_4 [label="connection == null", span="38-38", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m6_41 [label="Entry Unk.And", span="", cluster="Unk.And", file="CreateContext.cs"];
m6_126 [label="Entry HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", span="293-293", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_132 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="305-305", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_133 [label="testRunner.Then(''the job state is changed to \'AnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="307-307", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_128 [label="this.ScenarioSetup(scenarioInfo)", span="297-297", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_139 [label="this.ScenarioCleanup()", span="322-322", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_127 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state changing filters could modify the state'', ((string[])(null)))", span="295-295", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_129 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="299-299", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_130 [label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="301-301", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_131 [label="testRunner.And(''a state changing filter \'first\' that changes the state to the \'AnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="303-303", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_134 [label="testRunner.And(''the \'Test\' state was not applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="309-309", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_135 [label="testRunner.And(''the \'AnotherTest\' state was applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="311-311", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_138 [label="testRunner.And(''the job\'s state entry contains the following items:'', ((string)(null)), table5, ''And '')", span="320-320", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_136 [label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="313-315", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_137 [label="table5.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''AnotherTest''})", span="316-318", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_140 [label="Exit HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", span="293-293", cluster="HangFire.Tests.StateMachineFeature.TheStateChangingFiltersCouldModifyTheState()", file="CreateContext.cs"];
m6_5 [label="throw new ArgumentNullException(''connection'');", span="38-38", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m6_173 [label="Entry HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", span="404-404", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", file="CreateContext.cs"];
m6_179 [label="testRunner.When(''I change the state of the job to the \'Test\' allowing only transition from the \'En'' +\r\n                    ''queued\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="417-418", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", file="CreateContext.cs"];
m6_180 [label="testRunner.Then(''changing filters were not executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="420-420", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", file="CreateContext.cs"];
m6_175 [label="this.ScenarioSetup(scenarioInfo)", span="409-409", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", file="CreateContext.cs"];
m6_181 [label="this.ScenarioCleanup()", span="422-422", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", file="CreateContext.cs"];
m6_174 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Changing filters are not executing if the transition is not allowed for the curre'' +\r\n                    ''nt state'', ((string[])(null)))", span="406-407", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", file="CreateContext.cs"];
m6_176 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="411-411", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", file="CreateContext.cs"];
m6_177 [label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="413-413", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", file="CreateContext.cs"];
m6_178 [label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="415-415", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", file="CreateContext.cs"];
m6_182 [label="Exit HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", span="404-404", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingIfTheTransitionIsNotAllowedForTheCurrentState()", file="CreateContext.cs"];
m6_112 [label="Entry HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", span="261-261", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_119 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="275-275", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_123 [label="testRunner.Then(''changing filters were executed in the following order:'', ((string)(null)), table4, ''Then '')", span="284-284", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_114 [label="this.ScenarioSetup(scenarioInfo)", span="265-265", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_124 [label="this.ScenarioCleanup()", span="286-286", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_113 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State changing filters are run in the order they were defined'', ((string[])(null)))", span="263-263", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_115 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="267-267", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_116 [label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="269-269", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_117 [label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="271-271", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_118 [label="testRunner.And(''a state changing filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="273-273", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_120 [label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="277-278", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_121 [label="table4.AddRow(new string[] {\r\n                        ''first''})", span="279-280", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_122 [label="table4.AddRow(new string[] {\r\n                        ''second''})", span="281-282", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_125 [label="Exit HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", span="261-261", cluster="HangFire.Tests.StateMachineFeature.StateChangingFiltersAreRunInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_199 [label="Entry HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", span="465-465", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_205 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="477-477", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_208 [label="testRunner.Then(''state applied filter methods were executed in the following order:'', ((string)(null)), table8, ''Then '')", span="484-484", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_201 [label="this.ScenarioSetup(scenarioInfo)", span="469-469", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_209 [label="this.ScenarioCleanup()", span="486-486", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_200 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''OnStateUnapplied method is not called when the state is empty'', ((string[])(null)))", span="467-467", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_202 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="471-471", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_203 [label="testRunner.And(''a job with empty state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="473-473", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_204 [label="testRunner.And(''a state applied filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="475-475", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_206 [label="TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="479-480", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_207 [label="table8.AddRow(new string[] {\r\n                        ''first::OnStateApplied''})", span="481-482", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_210 [label="Exit HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", span="465-465", cluster="HangFire.Tests.StateMachineFeature.OnStateUnappliedMethodIsNotCalledWhenTheStateIsEmpty()", file="CreateContext.cs"];
m6_14 [label="Exit Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="36-36", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m6_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''State machine''))", span="48-49", cluster="HangFire.Tests.StateMachineFeature.TestInitialize()", color=green, community=0, file="CreateContext.cs"];
m6_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CreateContext.cs"];
m6_17 [label="Hangfire.Client.CreateContext", span="", cluster="HangFire.Tests.StateMachineFeature.TestInitialize()", file="CreateContext.cs"];
m6_13 [label="Items = new Dictionary<string, object>()", span="46-46", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m6_7 [label="throw new ArgumentNullException(''job'');", span="39-39", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m6_44 [label="Entry HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", span="96-96", cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="CreateContext.cs"];
m6_45 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The new state should be applied'', ((string[])(null)))", span="98-98", cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", color=green, community=0, file="CreateContext.cs"];
m6_46 [label="this.ScenarioSetup(scenarioInfo)", span="100-100", cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", color=green, community=0, file="CreateContext.cs"];
m6_47 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102", cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", color=green, community=0, file="CreateContext.cs"];
m6_48 [label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104", cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", color=green, community=0, file="CreateContext.cs"];
m6_49 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106", cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", color=green, community=0, file="CreateContext.cs"];
m6_50 [label="testRunner.Then(''the \'Test\' state was applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108", cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", color=green, community=0, file="CreateContext.cs"];
m6_51 [label="this.ScenarioCleanup()", span="110-110", cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", color=green, community=0, file="CreateContext.cs"];
m6_52 [label="Exit HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", span="96-96", cluster="HangFire.Tests.StateMachineFeature.TheNewStateShouldBeApplied()", file="CreateContext.cs"];
m6_164 [label="Entry HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", span="382-382", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", file="CreateContext.cs"];
m6_169 [label="testRunner.When(''I change the state of the \'unexisting\' job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="392-392", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", file="CreateContext.cs"];
m6_170 [label="testRunner.Then(''changing filters were not executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="394-394", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", file="CreateContext.cs"];
m6_166 [label="this.ScenarioSetup(scenarioInfo)", span="386-386", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", file="CreateContext.cs"];
m6_171 [label="this.ScenarioCleanup()", span="396-396", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", file="CreateContext.cs"];
m6_165 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Changing filters are not executing for unexisting job'', ((string[])(null)))", span="384-384", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", file="CreateContext.cs"];
m6_167 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="388-388", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", file="CreateContext.cs"];
m6_168 [label="testRunner.And(''a state changing filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="390-390", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", file="CreateContext.cs"];
m6_172 [label="Exit HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", span="382-382", cluster="HangFire.Tests.StateMachineFeature.ChangingFiltersAreNotExecutingForUnexistingJob()", file="CreateContext.cs"];
m6_183 [label="Entry HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", span="429-429", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_190 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="443-443", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_196 [label="testRunner.Then(''state applied filter methods were executed in the following order:'', ((string)(null)), table7, ''Then '')", span="456-456", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_185 [label="this.ScenarioSetup(scenarioInfo)", span="433-433", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_197 [label="this.ScenarioCleanup()", span="458-458", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_184 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State applied filters are executed in the order they were defined'', ((string[])(null)))", span="431-431", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_186 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="435-435", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_187 [label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="437-437", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_188 [label="testRunner.And(''a state applied filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="439-439", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_189 [label="testRunner.And(''a state applied filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="441-441", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_191 [label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="445-446", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_192 [label="table7.AddRow(new string[] {\r\n                        ''first::OnStateUnapplied''})", span="447-448", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_193 [label="table7.AddRow(new string[] {\r\n                        ''second::OnStateUnapplied''})", span="449-450", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_194 [label="table7.AddRow(new string[] {\r\n                        ''first::OnStateApplied''})", span="451-452", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_195 [label="table7.AddRow(new string[] {\r\n                        ''second::OnStateApplied''})", span="453-454", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_198 [label="Exit HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", span="429-429", cluster="HangFire.Tests.StateMachineFeature.StateAppliedFiltersAreExecutedInTheOrderTheyWereDefined()", file="CreateContext.cs"];
m6_42 [label="Entry Unk.When", span="", cluster="Unk.When", file="CreateContext.cs"];
m6_9 [label="throw new ArgumentNullException(''initialState'');", span="40-40", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m6_10 [label="Connection = connection", span="42-42", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="CreateContext.cs"];
m6_11 [label="Job = job", span="43-43", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="CreateContext.cs"];
m6_12 [label="InitialState = initialState", span="44-44", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m6_75 [label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", span="166-166", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_80 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="176-176", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_85 [label="testRunner.Then(''the last history entry contains the following items:'', ((string)(null)), table2, ''Then '')", span="191-191", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_77 [label="this.ScenarioSetup(scenarioInfo)", span="170-170", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_86 [label="this.ScenarioCleanup()", span="193-193", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_76 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job history should be appended'', ((string[])(null)))", span="168-168", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_78 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="172-172", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_79 [label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="174-174", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_81 [label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="178-180", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_82 [label="table2.AddRow(new string[] {\r\n                        ''CreatedAt'',\r\n                        ''<UtcNow timestamp>''})", span="181-183", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_83 [label="table2.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="184-186", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_84 [label="table2.AddRow(new string[] {\r\n                        ''Reason'',\r\n                        ''SomeReason''})", span="187-189", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_87 [label="Exit HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", span="166-166", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldBeAppended()", file="CreateContext.cs"];
m6_74 [label="Entry Unk.AddRow", span="", cluster="Unk.AddRow", file="CreateContext.cs"];
m6_39 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="CreateContext.cs"];
m6_101 [label="Entry HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", span="234-234", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_106 [label="testRunner.When(''I change the state of the job to the \'Test\' allowing only transition from the \'En'' +\r\n                    ''queued\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="245-246", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_107 [label="testRunner.Then(''the job remains to be in the Old state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="248-248", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_103 [label="this.ScenarioSetup(scenarioInfo)", span="239-239", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_110 [label="this.ScenarioCleanup()", span="254-254", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_102 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the state is not changing if allowed current states array does not contain the cu'' +\r\n                    ''rrent state'', ((string[])(null)))", span="236-237", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_104 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="241-241", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_105 [label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="243-243", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_108 [label="testRunner.And(''the old state was not unapplied'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="250-250", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_109 [label="testRunner.And(''the \'Test\' state was not applied to the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="252-252", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_111 [label="Exit HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", span="234-234", cluster="HangFire.Tests.StateMachineFeature.TheStateIsNotChangingIfAllowedCurrentStatesArrayDoesNotContainTheCurrentState()", file="CreateContext.cs"];
m6_141 [label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", span="329-329", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_148 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="343-343", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_153 [label="testRunner.Then(''the history for following states were added:'', ((string)(null)), table6, ''Then '')", span="354-354", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_143 [label="this.ScenarioSetup(scenarioInfo)", span="333-333", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_154 [label="this.ScenarioCleanup()", span="356-356", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_142 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job history should contain every changed state'', ((string[])(null)))", span="331-331", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_144 [label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="335-335", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_145 [label="testRunner.And(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="337-337", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_146 [label="testRunner.And(''a state changing filter \'first\' that changes the state to the \'AnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="339-339", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_147 [label="testRunner.And(''a state changing filter \'second\' that changes the state to the \'YetAnotherTest\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="341-341", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_149 [label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''State''})", span="345-346", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_150 [label="table6.AddRow(new string[] {\r\n                        ''YetAnotherTest''})", span="347-348", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_151 [label="table6.AddRow(new string[] {\r\n                        ''AnotherTest''})", span="349-350", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_152 [label="table6.AddRow(new string[] {\r\n                        ''Test''})", span="351-352", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_155 [label="Exit HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", span="329-329", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryShouldContainEveryChangedState()", file="CreateContext.cs"];
m6_43 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="CreateContext.cs"];
m6_40 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="CreateContext.cs"];
m6_88 [label="Entry HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", span="200-200", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_96 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="220-220", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_97 [label="testRunner.Then(''the last history entry should contain all of the above properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="222-222", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_90 [label="this.ScenarioSetup(scenarioInfo)", span="204-204", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_99 [label="this.ScenarioCleanup()", span="226-226", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_89 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the job history record and the state entry should contain the state properties'', ((string[])(null)))", span="202-202", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_94 [label="testRunner.Given(''a \'Test\' state with the following properties:'', ((string)(null)), table3, ''Given '')", span="216-216", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_95 [label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="218-218", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_98 [label="testRunner.And(''the state entry should contain all of the above properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="224-224", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_91 [label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="206-208", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_92 [label="table3.AddRow(new string[] {\r\n                        ''Server'',\r\n                        ''TestServer''})", span="209-211", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_93 [label="table3.AddRow(new string[] {\r\n                        ''Worker'',\r\n                        ''#3''})", span="212-214", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_100 [label="Exit HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", span="200-200", cluster="HangFire.Tests.StateMachineFeature.TheJobHistoryRecordAndTheStateEntryShouldContainTheStateProperties()", file="CreateContext.cs"];
m6_6 [label="job == null", span="39-39", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m6_73 [label="Entry TechTalk.SpecFlow.Table.cstr", span="", cluster="TechTalk.SpecFlow.Table.cstr", file="CreateContext.cs"];
m6_18 [label="Entry HangFire.Tests.StateMachineFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.StateMachineFeature.ScenarioTearDown()", file="CreateContext.cs"];
m6_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.StateMachineFeature.ScenarioTearDown()", color=green, community=0, file="CreateContext.cs"];
m6_20 [label="Exit HangFire.Tests.StateMachineFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.StateMachineFeature.ScenarioTearDown()", file="CreateContext.cs"];
m6_72 [label="Exit HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", span="138-138", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="CreateContext.cs"];
m6_63 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state entry should contain the state name'', ((string[])(null)))", span="140-140", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", color=green, community=0, file="CreateContext.cs"];
m6_62 [label="Entry HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", span="138-138", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="CreateContext.cs"];
m6_64 [label="this.ScenarioSetup(scenarioInfo)", span="142-142", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", color=green, community=0, file="CreateContext.cs"];
m6_65 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="144-144", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", color=green, community=0, file="CreateContext.cs"];
m6_66 [label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="146-146", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", color=green, community=0, file="CreateContext.cs"];
m6_67 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="148-148", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", color=green, community=0, file="CreateContext.cs"];
m6_68 [label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="150-152", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", color=green, community=0, file="CreateContext.cs"];
m6_69 [label="table1.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Test''})", span="153-155", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", color=green, community=0, file="CreateContext.cs"];
m6_70 [label="testRunner.Then(''the job\'s state entry contains the following items:'', ((string)(null)), table1, ''Then '')", span="157-157", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="CreateContext.cs"];
m6_71 [label="this.ScenarioCleanup()", span="159-159", cluster="HangFire.Tests.StateMachineFeature.TheStateEntryShouldContainTheStateName()", file="CreateContext.cs"];
m6_8 [label="initialState == null", span="40-40", cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="CreateContext.cs"];
m6_30 [label="Entry HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", span="75-75", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="CreateContext.cs"];
m6_35 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", color=green, community=0, file="CreateContext.cs"];
m6_34 [label="testRunner.And(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="CreateContext.cs"];
m6_36 [label="testRunner.Then(''the job state is changed to \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", color=green, community=0, file="CreateContext.cs"];
m6_37 [label="this.ScenarioCleanup()", span="89-89", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", color=green, community=0, file="CreateContext.cs"];
m6_33 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="CreateContext.cs"];
m6_32 [label="this.ScenarioSetup(scenarioInfo)", span="79-79", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="CreateContext.cs"];
m6_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The state of the job should be changed'', ((string[])(null)))", span="77-77", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="CreateContext.cs"];
m6_38 [label="Exit HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", span="75-75", cluster="HangFire.Tests.StateMachineFeature.TheStateOfTheJobShouldBeChanged()", file="CreateContext.cs"];
m6_53 [label="Entry HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", span="117-117", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="CreateContext.cs"];
m6_54 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''An old state should be unapplied'', ((string[])(null)))", span="119-119", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", color=green, community=0, file="CreateContext.cs"];
m6_55 [label="this.ScenarioSetup(scenarioInfo)", span="121-121", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", color=green, community=0, file="CreateContext.cs"];
m6_56 [label="testRunner.Given(''a \'Test\' state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="123-123", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", color=green, community=0, file="CreateContext.cs"];
m6_57 [label="testRunner.And(''a job in the \'Old\' state with registered descriptor'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="125-125", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", color=green, community=0, file="CreateContext.cs"];
m6_58 [label="testRunner.When(''I change the state of the job to the \'Test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="127-127", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", color=green, community=0, file="CreateContext.cs"];
m6_59 [label="testRunner.Then(''the old state was unapplied'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="129-129", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", color=green, community=0, file="CreateContext.cs"];
m6_60 [label="this.ScenarioCleanup()", span="131-131", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", color=green, community=0, file="CreateContext.cs"];
m6_61 [label="Exit HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", span="117-117", cluster="HangFire.Tests.StateMachineFeature.AnOldStateShouldBeUnapplied()", file="CreateContext.cs"];
m6_211 [label="HangFire.Tests.StateMachineFeature", span="", file="CreateContext.cs"];
m7_57 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", span="119-119", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", file="CreateContextFacts.cs"];
m7_88 [label="return new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, jobId, queue);", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", file="CreateContextFacts.cs", color=green, community=0];
m7_89 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", span="119-119", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.CreateFetchedJob(string, string)", file="CreateContextFacts.cs"];
m7_14 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="CreateContextFacts.cs"];
m7_7 [label="Entry Mock<SqlServerStorage>.cstr", span="", cluster="Mock<SqlServerStorage>.cstr", file="CreateContextFacts.cs"];
m7_19 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="36-36", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs"];
m7_20 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, null, _transaction.Object, JobId, Queue))", span="38-39", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs"];
m7_21 [label="Assert.Equal(''connection'', exception.ParamName)", span="41-41", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs", color=green, community=0];
m7_22 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="36-36", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="CreateContextFacts.cs"];
m7_5 [label="Entry Mock<IDbConnection>.cstr", span="", cluster="Mock<IDbConnection>.cstr", file="CreateContextFacts.cs"];
m7_13 [label="Entry Unk.>", span="", cluster="Unk.>", file="CreateContextFacts.cs"];
m7_0 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", span="19-19", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="CreateContextFacts.cs"];
m7_1 [label="_connection = new Mock<IDbConnection>()", span="21-21", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="CreateContextFacts.cs"];
m7_2 [label="_transaction = new Mock<IDbTransaction>()", span="22-22", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="CreateContextFacts.cs"];
m7_3 [label="_storage = new Mock<SqlServerStorage>(ConnectionUtils.GetConnectionString())", span="23-23", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="CreateContextFacts.cs"];
m7_4 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", span="19-19", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.SqlServerFetchedJobFacts()", file="CreateContextFacts.cs"];
m7_9 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CreateContextFacts.cs"];
m7_10 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(null, _connection.Object, _transaction.Object, JobId, Queue))", span="29-30", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CreateContextFacts.cs"];
m7_11 [label="Assert.Equal(''storage'', exception.ParamName)", span="32-32", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CreateContextFacts.cs"];
m7_12 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="27-27", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="CreateContextFacts.cs"];
m7_18 [label="Entry SqlServerFetchedJob.cstr", span="", cluster="SqlServerFetchedJob.cstr", file="CreateContextFacts.cs"];
m7_47 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="72-72", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="CreateContextFacts.cs"];
m7_48 [label="var fetchedJob = new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, Queue)", span="74-74", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="CreateContextFacts.cs"];
m7_49 [label="Assert.Equal(JobId, fetchedJob.JobId)", span="76-76", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="CreateContextFacts.cs"];
m7_50 [label="Assert.Equal(Queue, fetchedJob.Queue)", span="77-77", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="CreateContextFacts.cs"];
m7_51 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="72-72", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="CreateContextFacts.cs"];
m7_73 [label="Entry Unk.Rollback", span="", cluster="Unk.Rollback", file="CreateContextFacts.cs"];
m7_26 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="45-45", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="CreateContextFacts.cs"];
m7_27 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, _connection.Object, null, JobId, Queue))", span="47-48", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="CreateContextFacts.cs", color=green, community=0];
m7_28 [label="Assert.Equal(''transaction'', exception.ParamName)", span="50-50", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="CreateContextFacts.cs"];
m7_29 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", span="45-45", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenTransactionIsNull()", file="CreateContextFacts.cs"];
m7_74 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", span="107-107", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="CreateContextFacts.cs"];
m7_75 [label="var processingJob = CreateFetchedJob(''1'', ''queue'')", span="109-109", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="CreateContextFacts.cs", color=green, community=0];
m7_76 [label="processingJob.Dispose()", span="112-112", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="CreateContextFacts.cs", color=green, community=0];
m7_77 [label="_transaction.Verify(x => x.Dispose())", span="115-115", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="CreateContextFacts.cs", color=green, community=0];
m7_78 [label="_connection.Verify(x => x.Dispose())", span="116-116", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="CreateContextFacts.cs", color=green, community=0];
m7_79 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", span="107-107", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Dispose_DisposesTheTransactionAndConnection()", file="CreateContextFacts.cs"];
m7_33 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="54-54", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="CreateContextFacts.cs"];
m7_34 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, null, Queue))", span="56-57", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="CreateContextFacts.cs"];
m7_35 [label="Assert.Equal(''jobId'', exception.ParamName)", span="59-59", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="CreateContextFacts.cs"];
m7_36 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="54-54", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="CreateContextFacts.cs"];
m7_6 [label="Entry Mock<IDbTransaction>.cstr", span="", cluster="Mock<IDbTransaction>.cstr", file="CreateContextFacts.cs"];
m7_84 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="CreateContextFacts.cs"];
m7_58 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", span="53-53", cluster="Hangfire.SqlServer.SqlServerFetchedJob.RemoveFromQueue()", file="CreateContextFacts.cs"];
m7_85 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_15 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_16 [label="new SqlServerFetchedJob(null, _connection.Object, _transaction.Object, JobId, Queue)", span="30-30", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_17 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_23 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_24 [label="new SqlServerFetchedJob(_storage.Object, null, _transaction.Object, JobId, Queue)", span="39-39", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_25 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_30 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_31 [label="new SqlServerFetchedJob(_storage.Object, _connection.Object, null, JobId, Queue)", span="48-48", cluster="lambda expression", file="CreateContextFacts.cs", color=green, community=0];
m7_32 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_37 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_38 [label="new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, null, Queue)", span="57-57", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_39 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_44 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_45 [label="new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, null)", span="66-66", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_46 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_60 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_61 [label="x.Commit()", span="90-90", cluster="lambda expression", file="CreateContextFacts.cs", color=green, community=0];
m7_62 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_70 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_71 [label="x.Rollback()", span="103-103", cluster="lambda expression", file="CreateContextFacts.cs", color=green, community=0];
m7_72 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_81 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_82 [label="x.Dispose()", span="115-115", cluster="lambda expression", file="CreateContextFacts.cs", color=green, community=0];
m7_83 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_86 [label="x.Dispose()", span="116-116", cluster="lambda expression", file="CreateContextFacts.cs", color=green, community=0];
m7_87 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="CreateContextFacts.cs"];
m7_64 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", span="94-94", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="CreateContextFacts.cs"];
m7_65 [label="var processingJob = CreateFetchedJob(''1'', ''default'')", span="97-97", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="CreateContextFacts.cs", color=green, community=0];
m7_66 [label="processingJob.Requeue()", span="100-100", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="CreateContextFacts.cs", color=green, community=0];
m7_67 [label="_transaction.Verify(x => x.Rollback())", span="103-103", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="CreateContextFacts.cs", color=green, community=0];
m7_68 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", span="94-94", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Requeue_RollsbackTheTransaction()", file="CreateContextFacts.cs"];
m7_63 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="CreateContextFacts.cs"];
m7_69 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", span="58-58", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Requeue()", file="CreateContextFacts.cs"];
m7_8 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", span="26-26", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.GetConnectionString()", file="CreateContextFacts.cs"];
m7_80 [label="Entry Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", span="63-63", cluster="Hangfire.SqlServer.SqlServerFetchedJob.Dispose()", file="CreateContextFacts.cs"];
m7_59 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="CreateContextFacts.cs"];
m7_52 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", span="81-81", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="CreateContextFacts.cs"];
m7_53 [label="var processingJob = CreateFetchedJob(''1'', ''default'')", span="84-84", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="CreateContextFacts.cs"];
m7_54 [label="processingJob.RemoveFromQueue()", span="87-87", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="CreateContextFacts.cs"];
m7_55 [label="_transaction.Verify(x => x.Commit())", span="90-90", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="CreateContextFacts.cs", color=green, community=0];
m7_56 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", span="81-81", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.RemoveFromQueue_CommitsTheTransaction()", file="CreateContextFacts.cs"];
m7_40 [label="Entry Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="63-63", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="CreateContextFacts.cs"];
m7_41 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerFetchedJob(_storage.Object, _connection.Object, _transaction.Object, JobId, null))", span="65-66", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="CreateContextFacts.cs"];
m7_42 [label="Assert.Equal(''queue'', exception.ParamName)", span="68-68", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="CreateContextFacts.cs"];
m7_43 [label="Exit Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="63-63", cluster="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="CreateContextFacts.cs"];
m7_90 [label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts", span="", file="CreateContextFacts.cs"];
m9_8 [label="Entry HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", span="33-33", cluster="HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", file="CreatedContextFacts.cs"];
m9_9 [label="Exit HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", span="33-33", cluster="HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", file="CreatedContextFacts.cs"];
m9_4 [label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CreatedContextFacts.cs"];
m9_5 [label="Exit HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="CreatedContextFacts.cs"];
m9_14 [label="Entry HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="38-38", cluster="HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="CreatedContextFacts.cs"];
m9_15 [label="Exit HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="38-38", cluster="HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="CreatedContextFacts.cs"];
m9_0 [label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="CreatedContextFacts.cs"];
m9_1 [label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="26-26", cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="CreatedContextFacts.cs"];
m9_20 [label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="42-42", cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="CreatedContextFacts.cs"];
m9_21 [label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="42-42", cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="CreatedContextFacts.cs"];
m9_10 [label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="35-35", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="CreatedContextFacts.cs"];
m9_11 [label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="35-35", cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="CreatedContextFacts.cs"];
m9_22 [label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="43-43", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="CreatedContextFacts.cs"];
m9_23 [label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="43-43", cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="CreatedContextFacts.cs"];
m9_12 [label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="36-36", cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="CreatedContextFacts.cs"];
m9_13 [label="Exit HangFire.Storage.IStorageConnection.GetJobData(string)", span="36-36", cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="CreatedContextFacts.cs"];
m9_18 [label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="41-41", cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="CreatedContextFacts.cs"];
m9_19 [label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="41-41", cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="CreatedContextFacts.cs"];
m9_16 [label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="40-40", cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="CreatedContextFacts.cs"];
m9_17 [label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="40-40", cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="CreatedContextFacts.cs"];
m9_2 [label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="28-28", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CreatedContextFacts.cs"];
m9_3 [label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="28-28", cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="CreatedContextFacts.cs"];
m9_6 [label="Entry HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="32-32", cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="CreatedContextFacts.cs"];
m9_7 [label="Exit HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="32-32", cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="CreatedContextFacts.cs"];
m10_21 [label="Entry Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", span="89-89", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="CreatingContext.cs"];
m10_22 [label="String.IsNullOrWhiteSpace(name)", span="91-91", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", color=red, community=0, file="CreatingContext.cs"];
m10_24 [label="return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="95-97", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", color=red, community=1, file="CreatingContext.cs"];
m10_26 [label="throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="101-103", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", color=red, community=1, file="CreatingContext.cs"];
m10_23 [label="throw new ArgumentNullException(''name'');", span="91-91", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", color=red, community=0, file="CreatingContext.cs"];
m10_25 [label=Exception, span="99-99", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", color=red, community=0, file="CreatingContext.cs"];
m10_27 [label="Exit Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", span="89-89", cluster="Hangfire.Client.CreatingContext.GetJobParameter<T>(string)", file="CreatingContext.cs"];
m10_29 [label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="CreatingContext.cs"];
m10_28 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="CreatingContext.cs"];
m10_30 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="CreatingContext.cs"];
m10_16 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="CreatingContext.cs"];
m10_19 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="CreatingContext.cs"];
m10_18 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="CreatingContext.cs"];
m10_0 [label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="32-32", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="CreatingContext.cs"];
m10_1 [label="Exit Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="32-32", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="CreatingContext.cs"];
m10_8 [label="Entry Hangfire.Client.CreatingContext.SetJobParameter(string, object)", span="61-61", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="CreatingContext.cs"];
m10_9 [label="String.IsNullOrWhiteSpace(name)", span="63-63", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", color=red, community=0, file="CreatingContext.cs"];
m10_11 [label="var serializedValue = JobHelper.ToJson(value)", span="65-65", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", color=red, community=0, file="CreatingContext.cs"];
m10_12 [label="!_parameters.ContainsKey(name)", span="67-67", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", color=red, community=0, file="CreatingContext.cs"];
m10_13 [label="_parameters.Add(name, serializedValue)", span="69-69", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", color=red, community=0, file="CreatingContext.cs"];
m10_14 [label="_parameters[name] = serializedValue", span="73-73", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", color=red, community=0, file="CreatingContext.cs"];
m10_10 [label="throw new ArgumentNullException(''name'');", span="63-63", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", color=red, community=0, file="CreatingContext.cs"];
m10_15 [label="Exit Hangfire.Client.CreatingContext.SetJobParameter(string, object)", span="61-61", cluster="Hangfire.Client.CreatingContext.SetJobParameter(string, object)", file="CreatingContext.cs"];
m10_20 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="CreatingContext.cs"];
m10_5 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="CreatingContext.cs"];
m10_2 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="CreatingContext.cs"];
m10_3 [label="x.Key", span="41-41", cluster="lambda expression", color=red, community=0, file="CreatingContext.cs"];
m10_4 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="CreatingContext.cs"];
m10_6 [label="x.Value", span="41-41", cluster="lambda expression", color=red, community=0, file="CreatingContext.cs"];
m10_7 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="CreatingContext.cs"];
m10_31 [label="Hangfire.Client.CreatingContext", span="", file="CreatingContext.cs"];
m11_0 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", span="27-27", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", file="CreatingContextFacts.cs"];
m11_1 [label="connection == null", span="29-29", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", color=red, community=0, file="CreatingContextFacts.cs"];
m11_3 [label="jobId == null", span="30-30", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", color=red, community=0, file="CreatingContextFacts.cs"];
m11_5 [label="queue == null", span="31-31", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", color=red, community=0, file="CreatingContextFacts.cs"];
m11_7 [label="_connection = connection", span="33-33", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", color=red, community=0, file="CreatingContextFacts.cs"];
m11_8 [label="JobId = jobId", span="35-35", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", color=red, community=0, file="CreatingContextFacts.cs"];
m11_9 [label="Queue = queue", span="36-36", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", color=red, community=0, file="CreatingContextFacts.cs"];
m11_2 [label="throw new ArgumentNullException(''connection'');", span="29-29", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", color=red, community=0, file="CreatingContextFacts.cs"];
m11_4 [label="throw new ArgumentNullException(''jobId'');", span="30-30", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", color=red, community=0, file="CreatingContextFacts.cs"];
m11_6 [label="throw new ArgumentNullException(''queue'');", span="31-31", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", color=red, community=0, file="CreatingContextFacts.cs"];
m11_10 [label="Exit HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", span="27-27", cluster="HangFire.SqlServer.SqlServerProcessingJob.SqlServerProcessingJob(IDbConnection, string, string)", file="CreatingContextFacts.cs"];
m11_15 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="CreatingContextFacts.cs"];
m11_12 [label="Entry HangFire.SqlServer.SqlServerProcessingJob.Dispose()", span="42-42", cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", file="CreatingContextFacts.cs"];
m11_13 [label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = JobId, queueName = Queue })", span="44-45", cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", color=red, community=0, file="CreatingContextFacts.cs"];
m11_14 [label="Exit HangFire.SqlServer.SqlServerProcessingJob.Dispose()", span="42-42", cluster="HangFire.SqlServer.SqlServerProcessingJob.Dispose()", file="CreatingContextFacts.cs"];
m11_16 [label="HangFire.SqlServer.SqlServerProcessingJob", span="", file="CreatingContextFacts.cs"];
m12_25 [label="var exceptionContext = new ClientExceptionContext(context, ex)", span="59-59", cluster="Hangfire.Client.DefaultJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="DefaultJobCreationProcess.cs"];
m12_38 [label="Entry Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", span="40-40", cluster="Hangfire.Common.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>)", file="DefaultJobCreationProcess.cs"];
m12_35 [label="Entry HangFire.Redis.RedisStorage.ToString()", span="70-70", cluster="HangFire.Redis.RedisStorage.ToString()", file="DefaultJobCreationProcess.cs"];
m12_80 [label="filters.Reverse()", span="135-135", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="DefaultJobCreationProcess.cs"];
m12_81 [label="filter.OnClientException(context)", span="137-137", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="DefaultJobCreationProcess.cs"];
m12_82 [label="Exit Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", span="132-132", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeExceptionFilters(Hangfire.Client.ClientExceptionContext, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientExceptionFilter>)", file="DefaultJobCreationProcess.cs"];
m12_46 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="DefaultJobCreationProcess.cs"];
m12_34 [label="Entry Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", span="26-26", cluster="Hangfire.Client.ClientExceptionContext.ClientExceptionContext(Hangfire.Client.CreateContext, System.Exception)", file="DefaultJobCreationProcess.cs"];
m12_16 [label="return new RedisConnection(this, _pooledManager.GetClient());", span="53-53", cluster="HangFire.Redis.RedisStorage.GetConnection()", file="DefaultJobCreationProcess.cs"];
m12_22 [label="yield return new ServerWatchdog(this);", span="60-60", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="DefaultJobCreationProcess.cs"];
m12_21 [label="yield return new DequeuedJobsWatcher(this);", span="59-59", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="DefaultJobCreationProcess.cs"];
m12_23 [label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="56-56", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="DefaultJobCreationProcess.cs"];
m12_17 [label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="51-51", cluster="HangFire.Redis.RedisStorage.GetConnection()", file="DefaultJobCreationProcess.cs"];
m12_19 [label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="56-56", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="DefaultJobCreationProcess.cs"];
m12_29 [label="yield return new ProcessingStateHandler();", span="66-66", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DefaultJobCreationProcess.cs", color=red, community=0];
m12_26 [label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33", cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="DefaultJobCreationProcess.cs"];
m12_18 [label="Entry RedisConnection.cstr", span="", cluster="RedisConnection.cstr", file="DefaultJobCreationProcess.cs"];
m12_20 [label="yield return new SchedulePoller(this, _options.PollInterval);", span="58-58", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="DefaultJobCreationProcess.cs"];
m12_28 [label="yield return new FailedStateHandler();", span="65-65", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DefaultJobCreationProcess.cs"];
m12_24 [label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34", cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="DefaultJobCreationProcess.cs"];
m12_27 [label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="63-63", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DefaultJobCreationProcess.cs"];
m12_30 [label="yield return new SucceededStateHandler();", span="67-67", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DefaultJobCreationProcess.cs", color=red, community=0];
m12_31 [label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="63-63", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DefaultJobCreationProcess.cs"];
m12_39 [label="HangFire.Redis.RedisStorage", span="", cluster="System.Func<T, TResult>.Invoke(T)", file="DefaultJobCreationProcess.cs"];
m12_79 [label="Entry Hangfire.Client.IClientFilter.OnCreated(Hangfire.Client.CreatedContext)", span="33-33", cluster="Hangfire.Client.IClientFilter.OnCreated(Hangfire.Client.CreatedContext)", file="DefaultJobCreationProcess.cs"];
m12_48 [label="Entry Unk.thunk", span="", cluster="Unk.thunk", file="DefaultJobCreationProcess.cs"];
m12_45 [label="Entry Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", span="32-32", cluster="Hangfire.Client.CreatingContext.CreatingContext(Hangfire.Client.CreateContext)", file="DefaultJobCreationProcess.cs"];
m12_47 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="DefaultJobCreationProcess.cs"];
m12_33 [label="Entry Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", span="76-76", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="DefaultJobCreationProcess.cs"];
m12_77 [label="Entry Hangfire.Client.IClientFilter.OnCreating(Hangfire.Client.CreatingContext)", span="27-27", cluster="Hangfire.Client.IClientFilter.OnCreating(Hangfire.Client.CreatingContext)", file="DefaultJobCreationProcess.cs"];
m12_14 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_53 [label="Entry Hangfire.Client.IJobCreator.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="24-24", cluster="Hangfire.Client.IJobCreator.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="DefaultJobCreationProcess.cs"];
m12_83 [label="Entry Hangfire.Client.IClientExceptionFilter.OnClientException(Hangfire.Client.ClientExceptionContext)", span="27-27", cluster="Hangfire.Client.IClientExceptionFilter.OnClientException(Hangfire.Client.ClientExceptionContext)", file="DefaultJobCreationProcess.cs"];
m12_13 [label="new JobFilter(f, JobFilterScope.Type, null)", span="42-42", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_36 [label="return new JobFilterInfo(_getFiltersThunk(job));", span="73-73", cluster="Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", file="DefaultJobCreationProcess.cs"];
m12_37 [label="Exit Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", span="71-71", cluster="Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", file="DefaultJobCreationProcess.cs"];
m12_54 [label="Entry Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", span="27-27", cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="DefaultJobCreationProcess.cs"];
m12_3 [label="_host = host", span="30-30", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="DefaultJobCreationProcess.cs"];
m12_1 [label="Exit HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="23-23", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", color=green, community=0, file="DefaultJobCreationProcess.cs"];
m12_0 [label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int)", span="23-23", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int)", file="DefaultJobCreationProcess.cs"];
m12_2 [label="Entry HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", span="28-28", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="DefaultJobCreationProcess.cs"];
m12_4 [label="_db = db", span="31-31", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="DefaultJobCreationProcess.cs"];
m12_12 [label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46", cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="DefaultJobCreationProcess.cs"];
m12_50 [label="var jobId = creator.CreateJob(context.Job, preContext.Parameters, context.InitialState)", span="84-84", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_51 [label="return new CreatedContext(context, jobId, false, null);", span="85-85", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_58 [label="InvokeClientFilter(filter, preContext, next)", span="89-89", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_55 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_49 [label="Entry lambda expression", span="82-86", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_52 [label="Exit lambda expression", span="82-86", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_57 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_59 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_56 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="DefaultJobCreationProcess.cs"];
m12_9 [label="Entry RedisClientManagerConfig.cstr", span="", cluster="RedisClientManagerConfig.cstr", file="DefaultJobCreationProcess.cs"];
m12_8 [label="Entry PooledRedisClientManager.cstr", span="", cluster="PooledRedisClientManager.cstr", file="DefaultJobCreationProcess.cs"];
m12_10 [label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46", cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="DefaultJobCreationProcess.cs"];
m12_5 [label="Entry Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="DefaultJobCreationProcess.cs"];
m12_6 [label="_getFiltersThunk = jd => filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="42-42", cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", color=red, community=0, file="DefaultJobCreationProcess.cs"];
m12_7 [label="Exit Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", span="39-39", cluster="Hangfire.Client.DefaultJobCreationProcess.DefaultJobCreationProcess(System.Collections.Generic.IEnumerable<object>)", file="DefaultJobCreationProcess.cs"];
m12_32 [label="Entry Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", span="71-71", cluster="Hangfire.Client.DefaultJobCreationProcess.GetFilters(Hangfire.Common.Job)", file="DefaultJobCreationProcess.cs"];
m12_15 [label="Entry Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", span="38-38", cluster="Hangfire.Common.JobFilter.JobFilter(object, Hangfire.Common.JobFilterScope, int?)", file="DefaultJobCreationProcess.cs"];
m12_11 [label="Entry Unk.Select", span="", cluster="Unk.Select", color=red, community=0, file="DefaultJobCreationProcess.cs"];
m12_41 [label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                var jobId = creator.CreateJob(context.Job, preContext.Parameters, context.InitialState);\r\n                return new CreatedContext(context, jobId, false, null);\r\n            }", span="82-86", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", color=green, community=0, file="DefaultJobCreationProcess.cs"];
m12_40 [label="var preContext = new CreatingContext(context)", span="81-81", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="DefaultJobCreationProcess.cs"];
m12_42 [label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="88-89", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="DefaultJobCreationProcess.cs"];
m12_43 [label="return thunk();", span="91-91", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="DefaultJobCreationProcess.cs"];
m12_44 [label="Exit Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", span="76-76", cluster="Hangfire.Client.DefaultJobCreationProcess.CreateWithFilters(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator, System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>)", file="DefaultJobCreationProcess.cs"];
m12_60 [label="Entry Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", span="94-94", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_67 [label=Exception, span="111-111", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", color=green, community=0, file="DefaultJobCreationProcess.cs"];
m12_66 [label="postContext = continuation()", span="109-109", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_68 [label="wasError = true", span="113-113", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_65 [label="CreatedContext postContext", span="106-106", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_73 [label="!wasError", span="124-124", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_69 [label="postContext = new CreatedContext(preContext, null, false, ex)", span="114-114", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_61 [label="filter.OnCreating(preContext)", span="99-99", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_62 [label="preContext.Canceled", span="100-100", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_63 [label="return new CreatedContext(preContext, null, true, null);", span="102-102", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_70 [label="filter.OnCreated(postContext)", span="116-116", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_74 [label="filter.OnCreated(postContext)", span="126-126", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_64 [label="var wasError = false", span="105-105", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_71 [label="!postContext.ExceptionHandled", span="118-118", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_75 [label="return postContext;", span="129-129", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_72 [label="throw;", span="120-120", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_76 [label="Exit Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", span="94-94", cluster="Hangfire.Client.DefaultJobCreationProcess.InvokeClientFilter(Hangfire.Client.IClientFilter, Hangfire.Client.CreatingContext, System.Func<Hangfire.Client.CreatedContext>)", file="DefaultJobCreationProcess.cs"];
m12_78 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="DefaultJobCreationProcess.cs"];
m12_86 [label="Hangfire.Client.CreateContext", span="", file="DefaultJobCreationProcess.cs"];
m12_87 [label="Hangfire.Client.IJobCreator", span="", file="DefaultJobCreationProcess.cs"];
m12_88 [label=preContext, span="", file="DefaultJobCreationProcess.cs"];
m12_89 [label="System.Func<Hangfire.Client.CreatedContext>", span="", file="DefaultJobCreationProcess.cs"];
m12_90 [label="Hangfire.Client.IClientFilter", span="", file="DefaultJobCreationProcess.cs"];
m12_84 [label="Hangfire.Client.DefaultJobCreationProcess", span="", file="DefaultJobCreationProcess.cs"];
m12_85 [label="System.Collections.Generic.IEnumerable<object>", span="", file="DefaultJobCreationProcess.cs"];
m13_25 [label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39", cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="DefaultJobCreationProcessFacts.cs"];
m13_38 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="DefaultJobCreationProcessFacts.cs"];
m13_34 [label="Entry HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", span="6-6", cluster="HangFire.Redis.States.SucceededStateHandler.SucceededStateHandler()", file="DefaultJobCreationProcessFacts.cs"];
m13_26 [label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33", cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="DefaultJobCreationProcessFacts.cs"];
m13_27 [label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="63-63", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DefaultJobCreationProcessFacts.cs"];
m13_29 [label="yield return new ProcessingStateHandler();", span="66-66", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", color=green, community=0, file="DefaultJobCreationProcessFacts.cs"];
m13_28 [label="yield return new FailedStateHandler();", span="65-65", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DefaultJobCreationProcessFacts.cs"];
m13_30 [label="yield return new SucceededStateHandler();", span="67-67", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DefaultJobCreationProcessFacts.cs"];
m13_31 [label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="63-63", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DefaultJobCreationProcessFacts.cs"];
m13_3 [label="_host = host", span="30-30", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="DefaultJobCreationProcessFacts.cs"];
m13_18 [label="Entry RedisConnection.cstr", span="", cluster="RedisConnection.cstr", file="DefaultJobCreationProcessFacts.cs"];
m13_33 [label="Entry HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", span="8-8", cluster="HangFire.Redis.States.ProcessingStateHandler.ProcessingStateHandler()", file="DefaultJobCreationProcessFacts.cs"];
m13_14 [label="Entry Unk.GetClient", span="", cluster="Unk.GetClient", file="DefaultJobCreationProcessFacts.cs"];
m13_24 [label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34", cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="DefaultJobCreationProcessFacts.cs"];
m13_13 [label="Entry RedisMonitoringApi.cstr", span="", cluster="RedisMonitoringApi.cstr", file="DefaultJobCreationProcessFacts.cs"];
m13_35 [label="Entry HangFire.Redis.RedisStorage.ToString()", span="70-70", cluster="HangFire.Redis.RedisStorage.ToString()", file="DefaultJobCreationProcessFacts.cs"];
m13_36 [label="return String.Format(''redis://{0}/{1}'', _host, _db);", span="72-72", cluster="HangFire.Redis.RedisStorage.ToString()", file="DefaultJobCreationProcessFacts.cs"];
m13_37 [label="Exit HangFire.Redis.RedisStorage.ToString()", span="70-70", cluster="HangFire.Redis.RedisStorage.ToString()", file="DefaultJobCreationProcessFacts.cs"];
m13_4 [label="_db = db", span="31-31", cluster="HangFire.Redis.RedisStorage.RedisStorage(string, int, HangFire.Redis.RedisStorageOptions)", file="DefaultJobCreationProcessFacts.cs"];
m13_2 [label="Exit HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="DefaultJobCreationProcessFacts.cs"];
m13_6 [label="transaction.RemoveFromSet(''processing'', context.JobId)", span="22-22", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=green, community=0, file="DefaultJobCreationProcessFacts.cs"];
m13_5 [label="Entry HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="DefaultJobCreationProcessFacts.cs"];
m13_7 [label="Exit HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19", cluster="HangFire.Redis.States.ProcessingStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="DefaultJobCreationProcessFacts.cs"];
m13_32 [label="Entry HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", span="8-8", cluster="HangFire.Redis.States.FailedStateHandler.FailedStateHandler()", file="DefaultJobCreationProcessFacts.cs"];
m13_15 [label="Entry HangFire.Redis.RedisStorage.GetConnection()", span="51-51", cluster="HangFire.Redis.RedisStorage.GetConnection()", file="DefaultJobCreationProcessFacts.cs"];
m13_16 [label="return new RedisConnection(this, _pooledManager.GetClient());", span="53-53", cluster="HangFire.Redis.RedisStorage.GetConnection()", color=green, community=0, file="DefaultJobCreationProcessFacts.cs"];
m13_17 [label="Exit HangFire.Redis.RedisStorage.GetConnection()", span="51-51", cluster="HangFire.Redis.RedisStorage.GetConnection()", file="DefaultJobCreationProcessFacts.cs"];
m13_9 [label="Entry RedisClientManagerConfig.cstr", span="", cluster="RedisClientManagerConfig.cstr", file="DefaultJobCreationProcessFacts.cs"];
m13_10 [label="Entry HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46", cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="DefaultJobCreationProcessFacts.cs"];
m13_11 [label="return new RedisMonitoringApi(_pooledManager.GetClient());", span="48-48", cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="DefaultJobCreationProcessFacts.cs"];
m13_12 [label="Exit HangFire.Redis.RedisStorage.GetMonitoringApi()", span="46-46", cluster="HangFire.Redis.RedisStorage.GetMonitoringApi()", file="DefaultJobCreationProcessFacts.cs"];
m13_19 [label="Entry HangFire.Redis.RedisStorage.GetComponents()", span="56-56", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="DefaultJobCreationProcessFacts.cs"];
m13_20 [label="yield return new SchedulePoller(this, _options.PollInterval);", span="58-58", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="DefaultJobCreationProcessFacts.cs"];
m13_21 [label="yield return new DequeuedJobsWatcher(this);", span="59-59", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="DefaultJobCreationProcessFacts.cs"];
m13_22 [label="yield return new ServerWatchdog(this);", span="60-60", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="DefaultJobCreationProcessFacts.cs"];
m13_23 [label="Exit HangFire.Redis.RedisStorage.GetComponents()", span="56-56", cluster="HangFire.Redis.RedisStorage.GetComponents()", file="DefaultJobCreationProcessFacts.cs"];
m13_8 [label="Entry PooledRedisClientManager.cstr", span="", cluster="PooledRedisClientManager.cstr", file="DefaultJobCreationProcessFacts.cs"];
m13_0 [label="Entry HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="DefaultJobCreationProcessFacts.cs"];
m13_1 [label="transaction.AddToSet(\r\n                ''processing'',\r\n                context.JobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow))", span="13-16", cluster="HangFire.Redis.States.ProcessingStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", color=red, community=0, file="DefaultJobCreationProcessFacts.cs"];
m13_39 [label="HangFire.Redis.RedisStorage", span="", file="DefaultJobCreationProcessFacts.cs"];
m14_342 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="239-239", cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="DefaultJobPerformanceProcess.cs"];
m14_601 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="853-853", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_602 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="855-858", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_603 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="853-853", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_600 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DefaultJobPerformanceProcess.cs"];
m14_134 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="DefaultJobPerformanceProcess.cs"];
m14_380 [label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="286-286", cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="DefaultJobPerformanceProcess.cs"];
m14_36 [label="int parameterIndex = 0", span="93-93", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="DefaultJobPerformanceProcess.cs"];
m14_789 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1168-1168", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="DefaultJobPerformanceProcess.cs"];
m14_791 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1174-1189", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="DefaultJobPerformanceProcess.cs"];
m14_790 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1170-1172", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="DefaultJobPerformanceProcess.cs"];
m14_792 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1168-1168", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="DefaultJobPerformanceProcess.cs"];
m14_457 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="644-644", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="DefaultJobPerformanceProcess.cs"];
m14_458 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="646-647", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="DefaultJobPerformanceProcess.cs"];
m14_459 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="644-644", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="DefaultJobPerformanceProcess.cs"];
m14_26 [label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", span="43-51", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="DefaultJobPerformanceProcess.cs"];
m14_27 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="41-41", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="DefaultJobPerformanceProcess.cs"];
m14_29 [label="Entry lambda expression", span="43-51", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_32 [label="connection.FetchNextJob(queues, token)", span="48-48", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_33 [label="_queue.Verify(x => x.Dequeue(queues, token))", span="50-50", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_34 [label="Exit lambda expression", span="43-51", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_35 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="DefaultJobPerformanceProcess.cs"];
m14_37 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="DefaultJobPerformanceProcess.cs"];
m14_28 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1342-1342", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_30 [label="var token = new CancellationToken()", span="45-45", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_31 [label="var queues = new[] { ''default'' }", span="46-46", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_38 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_41 [label="Entry Unk.Dequeue", span="", cluster="Unk.Dequeue", file="DefaultJobPerformanceProcess.cs"];
m14_40 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_39 [label="x.Dequeue(queues, token)", span="50-50", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_42 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="55-55", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="DefaultJobPerformanceProcess.cs"];
m14_439 [label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="323-323", cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="DefaultJobPerformanceProcess.cs"];
m14_343 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="492-492", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="DefaultJobPerformanceProcess.cs"];
m14_344 [label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="494-495", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="DefaultJobPerformanceProcess.cs"];
m14_345 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="492-492", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="DefaultJobPerformanceProcess.cs"];
m14_718 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1054-1054", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_719 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1056-1060", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_720 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1054-1054", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_646 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="932-932", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="DefaultJobPerformanceProcess.cs"];
m14_648 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="938-951", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="DefaultJobPerformanceProcess.cs"];
m14_647 [label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="934-936", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="DefaultJobPerformanceProcess.cs"];
m14_649 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="932-932", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="DefaultJobPerformanceProcess.cs"];
m14_843 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1262-1262", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="DefaultJobPerformanceProcess.cs"];
m14_845 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1268-1283", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="DefaultJobPerformanceProcess.cs"];
m14_844 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1264-1266", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="DefaultJobPerformanceProcess.cs"];
m14_846 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1262-1262", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="DefaultJobPerformanceProcess.cs"];
m14_554 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="271-271", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="DefaultJobPerformanceProcess.cs"];
m14_250 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="340-340", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_251 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="342-348", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_252 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="340-340", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_322 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="456-456", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="DefaultJobPerformanceProcess.cs"];
m14_324 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="467-476", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="DefaultJobPerformanceProcess.cs"];
m14_323 [label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="458-465", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="DefaultJobPerformanceProcess.cs"];
m14_325 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="456-456", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="DefaultJobPerformanceProcess.cs"];
m14_887 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="DefaultJobPerformanceProcess.cs"];
m14_283 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="399-399", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="DefaultJobPerformanceProcess.cs"];
m14_285 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="406-418", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="DefaultJobPerformanceProcess.cs"];
m14_284 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="401-404", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="DefaultJobPerformanceProcess.cs"];
m14_286 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="399-399", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="DefaultJobPerformanceProcess.cs"];
m14_132 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="DefaultJobPerformanceProcess.cs"];
m14_48 [label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="60-60", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="DefaultJobPerformanceProcess.cs"];
m14_836 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1252-1252", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_837 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1254-1258", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_838 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1252-1252", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_895 [label="Entry SqlServerConnection.cstr", span="", cluster="SqlServerConnection.cstr", file="DefaultJobPerformanceProcess.cs"];
m14_188 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="213-213", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_189 [label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="215-217", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_190 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="213-213", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_862 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1296-1296", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_863 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1298-1302", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_864 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1296-1296", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_808 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="473-473", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="DefaultJobPerformanceProcess.cs"];
m14_429 [label="Entry Unk.NotEqual", span="", cluster="Unk.NotEqual", file="DefaultJobPerformanceProcess.cs"];
m14_698 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1019-1019", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="DefaultJobPerformanceProcess.cs"];
m14_700 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1025-1040", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="DefaultJobPerformanceProcess.cs"];
m14_699 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1021-1023", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="DefaultJobPerformanceProcess.cs"];
m14_701 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1019-1019", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="DefaultJobPerformanceProcess.cs"];
m14_260 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="352-352", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="DefaultJobPerformanceProcess.cs"];
m14_262 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="359-371", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="DefaultJobPerformanceProcess.cs"];
m14_261 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="354-357", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="DefaultJobPerformanceProcess.cs"];
m14_263 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="352-352", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="DefaultJobPerformanceProcess.cs"];
m14_16 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null))", span="34-35", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_332 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="480-480", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_333 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="482-488", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_334 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="480-480", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_771 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="432-432", cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_83 [label="Exit lambda expression", span="94-98", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_84 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultJobPerformanceProcess.cs"];
m14_86 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="105-105", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_88 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="105-105", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_85 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="72-72", cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="DefaultJobPerformanceProcess.cs"];
m14_87 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="107-117", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_89 [label="Entry lambda expression", span="107-117", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_409 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="587-587", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_410 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="589-590", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_411 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="587-587", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_68 [label="Entry lambda expression", span="81-85", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_368 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="DefaultJobPerformanceProcess.cs"];
m14_49 [label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="61-61", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_67 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="79-79", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="DefaultJobPerformanceProcess.cs"];
m14_218 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="268-268", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="DefaultJobPerformanceProcess.cs"];
m14_220 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="284-299", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="DefaultJobPerformanceProcess.cs"];
m14_219 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="270-282", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="DefaultJobPerformanceProcess.cs"];
m14_221 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="268-268", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="DefaultJobPerformanceProcess.cs"];
m14_637 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="907-907", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="DefaultJobPerformanceProcess.cs"];
m14_639 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="913-928", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="DefaultJobPerformanceProcess.cs"];
m14_638 [label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="909-911", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="DefaultJobPerformanceProcess.cs"];
m14_640 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="907-907", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="DefaultJobPerformanceProcess.cs"];
m14_751 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1109-1109", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="DefaultJobPerformanceProcess.cs"];
m14_753 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1115-1130", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="DefaultJobPerformanceProcess.cs"];
m14_752 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1111-1113", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="DefaultJobPerformanceProcess.cs"];
m14_754 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1109-1109", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="DefaultJobPerformanceProcess.cs"];
m14_238 [label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26", cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_826 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1242-1242", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_827 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1244-1248", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_828 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1242-1242", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_467 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="335-335", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="DefaultJobPerformanceProcess.cs"];
m14_25 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="41-41", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="DefaultJobPerformanceProcess.cs"];
m14_91 [label="Assert.Equal(''parameters'', exception.ParamName)", span="116-116", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_92 [label="Exit lambda expression", span="107-117", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_94 [label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="110-114", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_96 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="150-150", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="DefaultJobPerformanceProcess.cs"];
m14_97 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_93 [label="Entry lambda expression", span="110-114", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_95 [label="Exit lambda expression", span="110-114", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_98 [label="SampleMethod(''hello'')", span="111-111", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_6 [label="_connection = connection", span="40-40", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", file="DefaultJobPerformanceProcess.cs"];
m14_381 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="544-544", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_382 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="546-552", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_383 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="544-544", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_743 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="456-456", cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="DefaultJobPerformanceProcess.cs"];
m14_664 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="404-404", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="DefaultJobPerformanceProcess.cs"];
m14_50 [label="Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="63-64", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_51 [label="Exit lambda expression", span="57-65", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_54 [label="connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="64-64", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_52 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="DefaultJobPerformanceProcess.cs"];
m14_53 [label="Entry lambda expression", span="64-64", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_55 [label="Exit lambda expression", span="64-64", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_57 [label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="71-75", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="DefaultJobPerformanceProcess.cs"];
m14_58 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="69-69", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="DefaultJobPerformanceProcess.cs"];
m14_64 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="DefaultJobPerformanceProcess.cs"];
m14_56 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="69-69", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="DefaultJobPerformanceProcess.cs"];
m14_61 [label="Assert.NotNull(transaction)", span="74-74", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_59 [label="Entry lambda expression", span="71-75", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_60 [label="var transaction = connection.CreateWriteTransaction()", span="73-73", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_62 [label="Exit lambda expression", span="71-75", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_63 [label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="39-39", cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="DefaultJobPerformanceProcess.cs"];
m14_65 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="79-79", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="DefaultJobPerformanceProcess.cs"];
m14_13 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_14 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="DefaultJobPerformanceProcess.cs"];
m14_15 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="32-32", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_184 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="DefaultJobPerformanceProcess.cs"];
m14_305 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="434-434", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_306 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="436-442", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_307 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="434-434", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_182 [label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67", cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="DefaultJobPerformanceProcess.cs"];
m14_229 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="303-303", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="DefaultJobPerformanceProcess.cs"];
m14_231 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="310-324", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="DefaultJobPerformanceProcess.cs"];
m14_230 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="305-308", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="DefaultJobPerformanceProcess.cs"];
m14_232 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="303-303", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="DefaultJobPerformanceProcess.cs"];
m14_869 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1306-1306", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="DefaultJobPerformanceProcess.cs"];
m14_871 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1312-1327", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="DefaultJobPerformanceProcess.cs"];
m14_870 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1308-1310", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="DefaultJobPerformanceProcess.cs"];
m14_872 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1306-1306", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="DefaultJobPerformanceProcess.cs"];
m14_629 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="389-389", cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="DefaultJobPerformanceProcess.cs"];
m14_135 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="DefaultJobPerformanceProcess.cs"];
m14_418 [label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="311-311", cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="DefaultJobPerformanceProcess.cs"];
m14_7 [label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", file="DefaultJobPerformanceProcess.cs"];
m14_22 [label="new SqlServerConnection(null)", span="35-35", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_23 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_24 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="33-33", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="DefaultJobPerformanceProcess.cs"];
m14_133 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="DefaultJobPerformanceProcess.cs"];
m14_545 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="766-766", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_546 [label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="768-769", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_547 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="766-766", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_110 [label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="135-135", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_111 [label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="136-136", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_112 [label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="137-137", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_113 [label="Assert.Equal(null, (int?) sqlJob.StateId)", span="138-138", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_114 [label="Assert.Equal(null, (string) sqlJob.StateName)", span="139-139", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_12 [label="x.GetJobQueue()", span="25-25", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_198 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="221-221", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="DefaultJobPerformanceProcess.cs"];
m14_199 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="223-227", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="DefaultJobPerformanceProcess.cs"];
m14_200 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="221-221", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="DefaultJobPerformanceProcess.cs"];
m14_490 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="682-682", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_491 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="684-690", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_492 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="682-682", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_419 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="594-594", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="DefaultJobPerformanceProcess.cs"];
m14_421 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="602-610", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="DefaultJobPerformanceProcess.cs"];
m14_420 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="596-600", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="DefaultJobPerformanceProcess.cs"];
m14_422 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="594-594", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="DefaultJobPerformanceProcess.cs"];
m14_555 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="773-773", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_556 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="775-779", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_557 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="773-773", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_562 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="783-783", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="DefaultJobPerformanceProcess.cs"];
m14_564 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="789-807", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="DefaultJobPerformanceProcess.cs"];
m14_563 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="785-787", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="DefaultJobPerformanceProcess.cs"];
m14_565 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="783-783", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="DefaultJobPerformanceProcess.cs"];
m14_115 [label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="141-141", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_761 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1134-1134", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_762 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1136-1142", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_763 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1134-1134", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_691 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1009-1009", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_692 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1011-1015", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_693 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1009-1009", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_9 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="DefaultJobPerformanceProcess.cs"];
m14_10 [label="Entry PersistentJobQueueProviderCollection.cstr", span="", cluster="PersistentJobQueueProviderCollection.cstr", file="DefaultJobPerformanceProcess.cs"];
m14_11 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_772 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1146-1146", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_773 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1148-1154", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_774 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1146-1146", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_17 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="53-53", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="DefaultJobPerformanceProcess.cs"];
m14_18 [label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="55-57", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="DefaultJobPerformanceProcess.cs"];
m14_391 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="556-556", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="DefaultJobPerformanceProcess.cs"];
m14_392 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="558-583", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="DefaultJobPerformanceProcess.cs"];
m14_393 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="556-556", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="DefaultJobPerformanceProcess.cs"];
m14_21 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="DefaultJobPerformanceProcess.cs"];
m14_46 [label="Entry Unk.>", span="", cluster="Unk.>", file="DefaultJobPerformanceProcess.cs"];
m14_77 [label="id == null", span="166-166", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_105 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="DefaultJobPerformanceProcess.cs"];
m14_151 [label="Entry lambda expression", span="165-166", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_161 [label="Entry lambda expression", span="172-176", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_170 [label="Entry lambda expression", span="187-209", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_191 [label="Entry lambda expression", span="216-217", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_201 [label="Entry lambda expression", span="223-227", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_209 [label="Entry lambda expression", span="247-264", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_222 [label="Entry lambda expression", span="284-299", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_233 [label="Entry lambda expression", span="310-324", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_242 [label="Entry lambda expression", span="330-336", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_253 [label="Entry lambda expression", span="342-348", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_264 [label="Entry lambda expression", span="359-371", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_275 [label="Entry lambda expression", span="382-395", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_287 [label="Entry lambda expression", span="406-418", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_297 [label="Entry lambda expression", span="424-430", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_308 [label="Entry lambda expression", span="436-442", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_318 [label="Entry lambda expression", span="448-452", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_326 [label="Entry lambda expression", span="467-476", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_335 [label="Entry lambda expression", span="482-488", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_346 [label="Entry lambda expression", span="494-495", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_355 [label="Entry lambda expression", span="501-507", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_363 [label="Entry lambda expression", span="521-528", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_372 [label="Entry lambda expression", span="534-540", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_384 [label="Entry lambda expression", span="546-552", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_394 [label="Entry lambda expression", span="558-583", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_412 [label="Entry lambda expression", span="589-590", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_423 [label="Entry lambda expression", span="602-610", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_433 [label="Entry lambda expression", span="616-617", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_444 [label="Entry lambda expression", span="629-640", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_460 [label="Entry lambda expression", span="646-647", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_472 [label="Entry lambda expression", span="657-671", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_483 [label="Entry lambda expression", span="677-678", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_493 [label="Entry lambda expression", span="684-690", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_502 [label="Entry lambda expression", span="700-717", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_512 [label="Entry lambda expression", span="723-729", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_523 [label="Entry lambda expression", span="735-741", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_533 [label="Entry lambda expression", span="747-762", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_548 [label="Entry lambda expression", span="768-769", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_558 [label="Entry lambda expression", span="775-779", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_566 [label="Entry lambda expression", span="789-807", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_577 [label="Entry lambda expression", span="813-817", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_587 [label="Entry lambda expression", span="823-827", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_595 [label="Entry lambda expression", span="837-849", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_604 [label="Entry lambda expression", span="855-858", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_615 [label="Entry lambda expression", span="868-883", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_623 [label="Entry lambda expression", span="889-893", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_633 [label="Entry lambda expression", span="899-903", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_641 [label="Entry lambda expression", span="913-928", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_650 [label="Entry lambda expression", span="938-951", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_658 [label="Entry lambda expression", span="957-960", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_668 [label="Entry lambda expression", span="966-970", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_676 [label="Entry lambda expression", span="980-995", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_684 [label="Entry lambda expression", span="1001-1005", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_694 [label="Entry lambda expression", span="1011-1015", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_702 [label="Entry lambda expression", span="1025-1040", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_711 [label="Entry lambda expression", span="1046-1050", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_721 [label="Entry lambda expression", span="1056-1060", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_729 [label="Entry lambda expression", span="1070-1085", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_737 [label="Entry lambda expression", span="1091-1095", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_747 [label="Entry lambda expression", span="1101-1105", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_755 [label="Entry lambda expression", span="1115-1130", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_764 [label="Entry lambda expression", span="1136-1142", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_775 [label="Entry lambda expression", span="1148-1154", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_785 [label="Entry lambda expression", span="1160-1164", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_793 [label="Entry lambda expression", span="1174-1189", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_801 [label="Entry lambda expression", span="1195-1201", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_812 [label="Entry lambda expression", span="1207-1211", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_821 [label="Entry lambda expression", span="1221-1238", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_829 [label="Entry lambda expression", span="1244-1248", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_839 [label="Entry lambda expression", span="1254-1258", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_847 [label="Entry lambda expression", span="1268-1283", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_855 [label="Entry lambda expression", span="1289-1292", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_865 [label="Entry lambda expression", span="1298-1302", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_873 [label="Entry lambda expression", span="1312-1327", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_897 [label="Entry lambda expression", span="1347-1347", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_47 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="DefaultJobPerformanceProcess.cs"];
m14_71 [label="throw new ArgumentNullException(''id'');", span="152-152", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_69 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="150-150", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_80 [label="throw new ArgumentNullException(''name'');", span="167-167", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_78 [label="throw new ArgumentNullException(''id'');", span="166-166", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_82 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="164-164", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_140 [label="SampleMethod(''Hello'')", span="127-127", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_186 [label="SampleMethod(''wrong'')", span="189-189", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_90 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="DefaultJobPerformanceProcess.cs"];
m14_126 [label="Exit lambda expression", span="123-159", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_106 [label="serverId == null", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="DefaultJobPerformanceProcess.cs"];
m14_107 [label="throw new ArgumentNullException(''serverId'');", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="DefaultJobPerformanceProcess.cs"];
m14_123 [label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="152-155", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_153 [label="Exit lambda expression", span="165-166", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_152 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="165-166", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_155 [label="connection.GetJobData(null)", span="166-166", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_164 [label="Exit lambda expression", span="172-176", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_162 [label="var result = connection.GetJobData(''1'')", span="174-174", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_172 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="191-198", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_181 [label="Exit lambda expression", span="187-209", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_171 [label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="189-189", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_173 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="200-200", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_193 [label="Exit lambda expression", span="216-217", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_192 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="216-217", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_195 [label="connection.GetStateData(null)", span="217-217", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_204 [label="Exit lambda expression", span="223-227", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_202 [label="var result = connection.GetStateData(''1'')", span="225-225", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_211 [label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="254-256", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_217 [label="Exit lambda expression", span="247-264", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_210 [label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="249-252", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_212 [label="var result = connection.GetStateData(jobId.ToString())", span="258-258", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_224 [label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="291-293", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_228 [label="Exit lambda expression", span="284-299", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_223 [label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="286-289", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_225 [label="var result = connection.GetStateData(jobId.ToString())", span="295-295", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_234 [label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="312-319", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_237 [label="Exit lambda expression", span="310-324", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_235 [label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="321-321", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_245 [label="Exit lambda expression", span="330-336", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_243 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="332-333", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_247 [label="connection.SetJobParameter(null, ''name'', ''value'')", span="333-333", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_256 [label="Exit lambda expression", span="342-348", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_254 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="344-345", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_258 [label="connection.SetJobParameter(''1'', null, ''value'')", span="345-345", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_265 [label="var job = sql.Query(arrangeSql).Single()", span="361-361", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_270 [label="Exit lambda expression", span="359-371", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_267 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="364-364", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_268 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="366-368", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_276 [label="var job = sql.Query(arrangeSql).Single()", span="384-384", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_282 [label="Exit lambda expression", span="382-395", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_278 [label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="387-387", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_279 [label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="388-388", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_280 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="390-392", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_288 [label="var job = sql.Query(arrangeSql).Single()", span="408-408", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_293 [label="Exit lambda expression", span="406-418", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_290 [label="connection.SetJobParameter(jobId, ''Name'', null)", span="411-411", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_291 [label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="413-415", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_300 [label="Exit lambda expression", span="424-430", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_298 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="426-427", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_302 [label="connection.GetJobParameter(null, ''hello'')", span="427-427", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_311 [label="Exit lambda expression", span="436-442", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_309 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="438-439", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_313 [label="connection.GetJobParameter(''1'', null)", span="439-439", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_321 [label="Exit lambda expression", span="448-452", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_319 [label="var value = connection.GetJobParameter(''1'', ''hello'')", span="450-450", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_327 [label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="469-471", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_330 [label="Exit lambda expression", span="467-476", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_328 [label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="473-473", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_338 [label="Exit lambda expression", span="482-488", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_336 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="484-485", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_340 [label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="485-485", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_348 [label="Exit lambda expression", span="494-495", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_347 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="494-495", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_350 [label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="495-495", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_358 [label="Exit lambda expression", span="501-507", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_356 [label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="503-504", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_364 [label="sql.Execute(arrangeSql)", span="523-523", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_367 [label="Exit lambda expression", span="521-528", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_365 [label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="525-525", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_375 [label="Exit lambda expression", span="534-540", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_373 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="536-537", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_377 [label="connection.AnnounceServer(null, new ServerContext())", span="537-537", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_387 [label="Exit lambda expression", span="546-552", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_385 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="548-549", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_389 [label="connection.AnnounceServer(''server'', null)", span="549-549", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_406 [label="Exit lambda expression", span="558-583", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_395 [label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="560-564", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_396 [label="connection.AnnounceServer(''server'', context1)", span="565-565", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_397 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="567-567", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_402 [label="connection.AnnounceServer(''server'', context2)", span="579-579", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_403 [label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="580-580", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_414 [label="Exit lambda expression", span="589-590", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_413 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="589-590", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_416 [label="connection.RemoveServer(null)", span="590-590", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_424 [label="sql.Execute(arrangeSql)", span="604-604", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_428 [label="Exit lambda expression", span="602-610", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_425 [label="connection.RemoveServer(''Server1'')", span="606-606", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_426 [label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="608-608", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_435 [label="Exit lambda expression", span="616-617", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_434 [label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="616-617", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_437 [label="connection.Heartbeat(null)", span="617-617", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_445 [label="sql.Execute(arrangeSql)", span="631-631", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_450 [label="Exit lambda expression", span="629-640", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_446 [label="connection.Heartbeat(''server1'')", span="633-633", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_447 [label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="635-636", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_462 [label="Exit lambda expression", span="646-647", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_461 [label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="646-647", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_464 [label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="647-647", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_473 [label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="659-665", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_477 [label="Exit lambda expression", span="657-671", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_474 [label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="667-667", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_475 [label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="669-669", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_485 [label="Exit lambda expression", span="677-678", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_484 [label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="678-678", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_487 [label="connection.GetAllItemsFromSet(null)", span="678-678", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_497 [label="Exit lambda expression", span="684-690", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_494 [label="var result = connection.GetAllItemsFromSet(''some-set'')", span="686-686", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_503 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="703-708", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_508 [label="Exit lambda expression", span="700-717", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_504 [label="var result = connection.GetAllItemsFromSet(''some-set'')", span="711-711", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_515 [label="Exit lambda expression", span="723-729", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_513 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="725-726", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_517 [label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="726-726", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_526 [label="Exit lambda expression", span="735-741", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_524 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="737-738", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_528 [label="connection.SetRangeInHash(''some-hash'', null)", span="738-738", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_538 [label="Exit lambda expression", span="747-762", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_534 [label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="749-753", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_535 [label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="755-758", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_550 [label="Exit lambda expression", span="768-769", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_549 [label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="769-769", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_552 [label="connection.GetAllEntriesFromHash(null)", span="769-769", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_561 [label="Exit lambda expression", span="775-779", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_559 [label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="777-777", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_567 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="792-797", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_573 [label="Exit lambda expression", span="789-807", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_568 [label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="800-800", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_579 [label="Exit lambda expression", span="813-817", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_578 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="815-816", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_581 [label="connection.GetSetCount(null)", span="816-816", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_590 [label="Exit lambda expression", span="823-827", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_588 [label="var result = connection.GetSetCount(''my-set'')", span="825-825", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_596 [label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                })", span="839-844", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_599 [label="Exit lambda expression", span="837-849", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_597 [label="var result = connection.GetSetCount(''set-1'')", span="846-846", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_606 [label="Exit lambda expression", span="855-858", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_605 [label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="857-857", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_608 [label="connection.GetRangeFromSet(null, 0, 1)", span="857-857", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_616 [label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="870-878", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_619 [label="Exit lambda expression", span="868-883", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_617 [label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="880-880", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_625 [label="Exit lambda expression", span="889-893", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_624 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="891-892", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_627 [label="connection.GetCounter(null)", span="892-892", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_636 [label="Exit lambda expression", span="899-903", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_634 [label="var result = connection.GetCounter(''my-counter'')", span="901-901", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_642 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="916-921", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_645 [label="Exit lambda expression", span="913-928", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_643 [label="var result = connection.GetCounter(''counter-1'')", span="924-924", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_651 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="941-945", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_654 [label="Exit lambda expression", span="938-951", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_652 [label="var result = connection.GetCounter(''counter-1'')", span="948-948", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_660 [label="Exit lambda expression", span="957-960", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_659 [label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="959-959", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_662 [label="connection.GetHashCount(null)", span="959-959", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_671 [label="Exit lambda expression", span="966-970", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_669 [label="var result = connection.GetHashCount(''my-hash'')", span="968-968", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_677 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="983-988", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_680 [label="Exit lambda expression", span="980-995", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_678 [label="var result = connection.GetHashCount(''hash-1'')", span="991-991", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_686 [label="Exit lambda expression", span="1001-1005", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_685 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1003-1004", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_688 [label="connection.GetHashTtl(null)", span="1004-1004", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_697 [label="Exit lambda expression", span="1011-1015", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_695 [label="var result = connection.GetHashTtl(''my-hash'')", span="1013-1013", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_703 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1028-1032", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_707 [label="Exit lambda expression", span="1025-1040", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_704 [label="var result = connection.GetHashTtl(''hash-1'')", span="1035-1035", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_713 [label="Exit lambda expression", span="1046-1050", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_712 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1048-1049", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_715 [label="connection.GetListCount(null)", span="1049-1049", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_724 [label="Exit lambda expression", span="1056-1060", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_722 [label="var result = connection.GetListCount(''my-list'')", span="1058-1058", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_730 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1073-1078", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_733 [label="Exit lambda expression", span="1070-1085", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_731 [label="var result = connection.GetListCount(''list-1'')", span="1081-1081", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_739 [label="Exit lambda expression", span="1091-1095", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_738 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1093-1094", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_741 [label="connection.GetListTtl(null)", span="1094-1094", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_750 [label="Exit lambda expression", span="1101-1105", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_748 [label="var result = connection.GetListTtl(''my-list'')", span="1103-1103", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_756 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1118-1122", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_760 [label="Exit lambda expression", span="1115-1130", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_757 [label="var result = connection.GetListTtl(''list-1'')", span="1125-1125", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_767 [label="Exit lambda expression", span="1136-1142", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_765 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1138-1139", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_769 [label="connection.GetValueFromHash(null, ''name'')", span="1139-1139", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_778 [label="Exit lambda expression", span="1148-1154", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_776 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1150-1151", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_780 [label="connection.GetValueFromHash(''key'', null)", span="1151-1151", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_788 [label="Exit lambda expression", span="1160-1164", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_786 [label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1162-1162", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_794 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1177-1182", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_797 [label="Exit lambda expression", span="1174-1189", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_795 [label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1185-1185", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_804 [label="Exit lambda expression", span="1195-1201", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_802 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1197-1198", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_806 [label="connection.GetRangeFromList(null, 0, 1)", span="1198-1198", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_815 [label="Exit lambda expression", span="1207-1211", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_813 [label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1209-1209", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_822 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1224-1231", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_825 [label="Exit lambda expression", span="1221-1238", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_823 [label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1234-1234", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_831 [label="Exit lambda expression", span="1244-1248", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_830 [label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1246-1247", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_833 [label="connection.GetAllItemsFromList(null)", span="1247-1247", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_842 [label="Exit lambda expression", span="1254-1258", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_840 [label="var result = connection.GetAllItemsFromList(''my-list'')", span="1256-1256", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_848 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1271-1276", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_851 [label="Exit lambda expression", span="1268-1283", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_849 [label="var result = connection.GetAllItemsFromList(''list-1'')", span="1279-1279", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_857 [label="Exit lambda expression", span="1289-1292", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_856 [label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1291-1291", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_859 [label="connection.GetSetTtl(null)", span="1291-1291", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_868 [label="Exit lambda expression", span="1298-1302", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_866 [label="var result = connection.GetSetTtl(''my-set'')", span="1300-1300", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_874 [label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1315-1319", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_878 [label="Exit lambda expression", span="1312-1327", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_875 [label="var result = connection.GetSetTtl(''set-1'')", span="1322-1322", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_899 [label="Exit lambda expression", span="1347-1347", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_898 [label="x.QueueProviders", span="1347-1347", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_70 [label="id == null", span="152-152", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_79 [label="name == null", span="167-167", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_81 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="169-172", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_99 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="DefaultJobPerformanceProcess.cs"];
m14_139 [label="Entry lambda expression", span="127-127", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_141 [label="Exit lambda expression", span="127-127", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_185 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_187 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_125 [label="Assert.Equal(''Value2'', parameters[''Key2''])", span="158-158", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_121 [label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="149-149", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_122 [label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="150-150", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_108 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="220-222", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="DefaultJobPerformanceProcess.cs"];
m14_109 [label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="DefaultJobPerformanceProcess.cs"];
m14_116 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_124 [label="Assert.Equal(''Value1'', parameters[''Key1''])", span="157-157", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_142 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_145 [label="Entry lambda expression", span="155-155", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_154 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_156 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_163 [label="Assert.Null(result)", span="175-175", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_180 [label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="208-208", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_174 [label="Assert.NotNull(result)", span="202-202", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_175 [label="Assert.NotNull(result.Job)", span="203-203", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_176 [label="Assert.Equal(''Succeeded'', result.State)", span="204-204", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_177 [label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="205-205", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_178 [label="Assert.Null(result.LoadException)", span="206-206", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_179 [label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="207-207", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_194 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_196 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_203 [label="Assert.Null(result)", span="226-226", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_216 [label="Assert.Equal(''Value'', result.Data[''Key''])", span="263-263", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_213 [label="Assert.NotNull(result)", span="259-259", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_214 [label="Assert.Equal(''Name'', result.Name)", span="261-261", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_215 [label="Assert.Equal(''Reason'', result.Reason)", span="262-262", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_227 [label="Assert.Equal(''Value'', result.Data[''Key''])", span="298-298", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_226 [label="Assert.NotNull(result)", span="296-296", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_236 [label="Assert.NotNull(result.LoadException)", span="323-323", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_244 [label="Assert.Equal(''id'', exception.ParamName)", span="335-335", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_246 [label="Entry lambda expression", span="333-333", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_248 [label="Exit lambda expression", span="333-333", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_255 [label="Assert.Equal(''name'', exception.ParamName)", span="347-347", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_257 [label="Entry lambda expression", span="345-345", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_259 [label="Exit lambda expression", span="345-345", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_266 [label="string jobId = job.Id.ToString()", span="362-362", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_269 [label="Assert.Equal(''Value'', parameter.Value)", span="370-370", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_277 [label="string jobId = job.Id.ToString()", span="385-385", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_281 [label="Assert.Equal(''AnotherValue'', parameter.Value)", span="394-394", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_289 [label="string jobId = job.Id.ToString()", span="409-409", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_292 [label="Assert.Equal((string) null, parameter.Value)", span="417-417", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_299 [label="Assert.Equal(''id'', exception.ParamName)", span="429-429", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_301 [label="Entry lambda expression", span="427-427", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_303 [label="Exit lambda expression", span="427-427", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_310 [label="Assert.Equal(''name'', exception.ParamName)", span="441-441", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_312 [label="Entry lambda expression", span="439-439", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_314 [label="Exit lambda expression", span="439-439", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_320 [label="Assert.Null(value)", span="451-451", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_329 [label="Assert.Equal(''value'', value)", span="475-475", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_337 [label="Assert.Equal(''key'', exception.ParamName)", span="487-487", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_339 [label="Entry lambda expression", span="485-485", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_341 [label="Exit lambda expression", span="485-485", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_349 [label="Entry lambda expression", span="495-495", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_351 [label="Exit lambda expression", span="495-495", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_357 [label="Assert.Null(result)", span="506-506", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_366 [label="Assert.Equal(''-1.0'', result)", span="527-527", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_374 [label="Assert.Equal(''serverId'', exception.ParamName)", span="539-539", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_376 [label="Entry lambda expression", span="537-537", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_378 [label="Exit lambda expression", span="537-537", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_386 [label="Assert.Equal(''context'', exception.ParamName)", span="551-551", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_388 [label="Entry lambda expression", span="549-549", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_390 [label="Exit lambda expression", span="549-549", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_405 [label="Assert.Contains(''1000'', sameServer.Data)", span="582-582", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_398 [label="Assert.Equal(''server'', server.Id)", span="568-568", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_399 [label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="569-571", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_400 [label="Assert.NotNull(server.LastHeartbeat)", span="572-572", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_401 [label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="574-578", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_404 [label="Assert.Equal(''server'', sameServer.Id)", span="581-581", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_415 [label="Entry lambda expression", span="590-590", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_417 [label="Exit lambda expression", span="590-590", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_427 [label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="609-609", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_436 [label="Entry lambda expression", span="617-617", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_438 [label="Exit lambda expression", span="617-617", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_449 [label="Assert.Equal(2012, servers[''server2''].Year)", span="639-639", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_448 [label="Assert.NotEqual(2012, servers[''server1''].Year)", span="638-638", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_451 [label="Entry lambda expression", span="636-636", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_454 [label="Entry lambda expression", span="636-636", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_463 [label="Entry lambda expression", span="647-647", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_465 [label="Exit lambda expression", span="647-647", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_476 [label="Assert.Equal(''server2'', liveServer.Id)", span="670-670", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_486 [label="Entry lambda expression", span="678-678", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_488 [label="Exit lambda expression", span="678-678", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_496 [label="Assert.Equal(0, result.Count)", span="689-689", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_495 [label="Assert.NotNull(result)", span="688-688", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_507 [label="Assert.Contains(''2'', result)", span="716-716", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_505 [label="Assert.Equal(2, result.Count)", span="714-714", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_506 [label="Assert.Contains(''1'', result)", span="715-715", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_514 [label="Assert.Equal(''key'', exception.ParamName)", span="728-728", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_516 [label="Entry lambda expression", span="726-726", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_518 [label="Exit lambda expression", span="726-726", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_525 [label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="740-740", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_527 [label="Entry lambda expression", span="738-738", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_529 [label="Exit lambda expression", span="738-738", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_537 [label="Assert.Equal(''Value2'', result[''Key2''])", span="761-761", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_536 [label="Assert.Equal(''Value1'', result[''Key1''])", span="760-760", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_539 [label="Entry lambda expression", span="758-758", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_542 [label="Entry lambda expression", span="758-758", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_551 [label="Entry lambda expression", span="769-769", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_553 [label="Exit lambda expression", span="769-769", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_560 [label="Assert.Null(result)", span="778-778", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_572 [label="Assert.Equal(''Value2'', result[''Key2''])", span="806-806", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_569 [label="Assert.NotNull(result)", span="803-803", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_570 [label="Assert.Equal(2, result.Count)", span="804-804", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_571 [label="Assert.Equal(''Value1'', result[''Key1''])", span="805-805", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_580 [label="Entry lambda expression", span="816-816", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_582 [label="Exit lambda expression", span="816-816", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_589 [label="Assert.Equal(0, result)", span="826-826", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_598 [label="Assert.Equal(2, result)", span="848-848", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_607 [label="Entry lambda expression", span="857-857", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_609 [label="Exit lambda expression", span="857-857", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_618 [label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="882-882", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_626 [label="Entry lambda expression", span="892-892", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_628 [label="Exit lambda expression", span="892-892", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_635 [label="Assert.Equal(0, result)", span="902-902", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_644 [label="Assert.Equal(2, result)", span="927-927", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_653 [label="Assert.Equal(12, result)", span="950-950", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_661 [label="Entry lambda expression", span="959-959", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_663 [label="Exit lambda expression", span="959-959", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_670 [label="Assert.Equal(0, result)", span="969-969", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_679 [label="Assert.Equal(2, result)", span="994-994", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_687 [label="Entry lambda expression", span="1004-1004", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_689 [label="Exit lambda expression", span="1004-1004", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_696 [label="Assert.True(result < TimeSpan.Zero)", span="1014-1014", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_706 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1039-1039", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_705 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1038-1038", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_714 [label="Entry lambda expression", span="1049-1049", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_716 [label="Exit lambda expression", span="1049-1049", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_723 [label="Assert.Equal(0, result)", span="1059-1059", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_732 [label="Assert.Equal(2, result)", span="1084-1084", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_740 [label="Entry lambda expression", span="1094-1094", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_742 [label="Exit lambda expression", span="1094-1094", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_749 [label="Assert.True(result < TimeSpan.Zero)", span="1104-1104", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_759 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1129-1129", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_758 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1128-1128", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_766 [label="Assert.Equal(''key'', exception.ParamName)", span="1141-1141", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_768 [label="Entry lambda expression", span="1139-1139", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_770 [label="Exit lambda expression", span="1139-1139", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_777 [label="Assert.Equal(''name'', exception.ParamName)", span="1153-1153", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_779 [label="Entry lambda expression", span="1151-1151", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_781 [label="Exit lambda expression", span="1151-1151", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_787 [label="Assert.Null(result)", span="1163-1163", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_796 [label="Assert.Equal(''1'', result)", span="1188-1188", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_803 [label="Assert.Equal(''key'', exception.ParamName)", span="1200-1200", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_805 [label="Entry lambda expression", span="1198-1198", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_807 [label="Exit lambda expression", span="1198-1198", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_814 [label="Assert.Empty(result)", span="1210-1210", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_824 [label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1237-1237", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_832 [label="Entry lambda expression", span="1247-1247", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_834 [label="Exit lambda expression", span="1247-1247", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_841 [label="Assert.Empty(result)", span="1257-1257", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_850 [label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1282-1282", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_858 [label="Entry lambda expression", span="1291-1291", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_860 [label="Exit lambda expression", span="1291-1291", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_867 [label="Assert.True(result < TimeSpan.Zero)", span="1301-1301", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_877 [label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1326-1326", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_876 [label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1325-1325", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_120 [label="Assert.Equal(''\''Hello\'''', job.Arguments[0])", span="147-147", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_117 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="DefaultJobPerformanceProcess.cs"];
m14_144 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_143 [label="(string) x.Name", span="155-155", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_147 [label="Exit lambda expression", span="155-155", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_146 [label="(string) x.Value", span="155-155", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_453 [label="Exit lambda expression", span="636-636", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_452 [label="(string)x.Id", span="636-636", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_456 [label="Exit lambda expression", span="636-636", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_455 [label="(DateTime)x.LastHeartbeat", span="636-636", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_541 [label="Exit lambda expression", span="758-758", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_540 [label="(string)x.Field", span="758-758", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_544 [label="Exit lambda expression", span="758-758", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_543 [label="(string)x.Value", span="758-758", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_118 [label="HangFire.SqlServer.SqlServerConnection", span="", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_119 [label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="146-146", cluster="lambda expression", file="DefaultJobPerformanceProcess.cs"];
m14_672 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="974-974", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="DefaultJobPerformanceProcess.cs"];
m14_674 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="980-995", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="DefaultJobPerformanceProcess.cs"];
m14_673 [label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="976-978", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="DefaultJobPerformanceProcess.cs"];
m14_675 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="974-974", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="DefaultJobPerformanceProcess.cs"];
m14_104 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="DefaultJobPerformanceProcess.cs"];
m14_72 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="DefaultJobPerformanceProcess.cs"];
m14_74 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="89-89", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_73 [label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="44-44", cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DefaultJobPerformanceProcess.cs"];
m14_75 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="91-101", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_519 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="250-250", cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DefaultJobPerformanceProcess.cs"];
m14_369 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="532-532", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_370 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="534-540", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_371 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="532-532", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_480 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="675-675", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_481 [label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="677-678", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_482 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="675-675", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_690 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="415-415", cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="DefaultJobPerformanceProcess.cs"];
m14_879 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1330-1330", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_880 [label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1332-1332", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_881 [label="var storage = new SqlServerStorage(sqlConnection)", span="1334-1334", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_883 [label="action(sqlConnection, connection)", span="1337-1337", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_882 [label="var connection = new SqlServerConnection(storage)", span="1335-1335", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_884 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1330-1330", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_239 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="328-328", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_240 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="330-336", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_241 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="328-328", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_886 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", span="96-96", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(SqlConnection)", file="DefaultJobPerformanceProcess.cs"];
m14_76 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="89-89", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_158 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="170-170", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="DefaultJobPerformanceProcess.cs"];
m14_159 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="172-176", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="DefaultJobPerformanceProcess.cs"];
m14_160 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="170-170", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="DefaultJobPerformanceProcess.cs"];
m14_315 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="446-446", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="DefaultJobPerformanceProcess.cs"];
m14_316 [label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="448-452", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="DefaultJobPerformanceProcess.cs"];
m14_317 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="446-446", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="DefaultJobPerformanceProcess.cs"];
m14_136 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="DefaultJobPerformanceProcess.cs"];
m14_45 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="DefaultJobPerformanceProcess.cs"];
m14_708 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1044-1044", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_709 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1046-1050", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_710 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1044-1044", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_100 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="DefaultJobPerformanceProcess.cs"];
m14_900 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1356-1356", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="DefaultJobPerformanceProcess.cs"];
m14_610 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="356-356", cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="DefaultJobPerformanceProcess.cs"];
m14_509 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="721-721", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_510 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="723-729", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_511 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="721-721", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_0 [label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", file="DefaultJobPerformanceProcess.cs"];
m14_4 [label="throw new ArgumentNullException(''connection'');", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", color=green, community=0, file="DefaultJobPerformanceProcess.cs"];
m14_2 [label="throw new ArgumentNullException(''queue'');", span="36-36", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", file="DefaultJobPerformanceProcess.cs"];
m14_3 [label="connection == null", span="37-37", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", file="DefaultJobPerformanceProcess.cs"];
m14_1 [label="queue == null", span="36-36", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", file="DefaultJobPerformanceProcess.cs"];
m14_5 [label="_queue = queue", span="39-39", cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.IPersistentJobQueue, SqlConnection)", file="DefaultJobPerformanceProcess.cs"];
m14_885 [label="Entry Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", span="37-37", cluster="Hangfire.SqlServer.Tests.ConnectionUtils.CreateConnection()", file="DefaultJobPerformanceProcess.cs"];
m14_157 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="125-125", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="DefaultJobPerformanceProcess.cs"];
m14_894 [label="Entry Mock<SqlServerStorage>.cstr", span="", cluster="Mock<SqlServerStorage>.cstr", file="DefaultJobPerformanceProcess.cs"];
m14_591 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="831-831", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="DefaultJobPerformanceProcess.cs"];
m14_593 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { key = ''set-1'', value = ''value-1'' },\r\n                    new { key = ''set-2'', value = ''value-1'' },\r\n                    new { key = ''set-1'', value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="837-849", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="DefaultJobPerformanceProcess.cs"];
m14_592 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="833-835", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="DefaultJobPerformanceProcess.cs"];
m14_594 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="831-831", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="DefaultJobPerformanceProcess.cs"];
m14_744 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1099-1099", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_745 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1101-1105", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_746 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1099-1099", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_468 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="651-651", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="DefaultJobPerformanceProcess.cs"];
m14_470 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="657-671", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="DefaultJobPerformanceProcess.cs"];
m14_469 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="653-655", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="DefaultJobPerformanceProcess.cs"];
m14_471 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="651-651", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="DefaultJobPerformanceProcess.cs"];
m14_734 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1089-1089", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_735 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1091-1095", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_736 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1089-1089", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_130 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="DefaultJobPerformanceProcess.cs"];
m14_896 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="DefaultJobPerformanceProcess.cs"];
m14_205 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="231-231", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="DefaultJobPerformanceProcess.cs"];
m14_207 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="247-264", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="DefaultJobPerformanceProcess.cs"];
m14_206 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="233-245", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="DefaultJobPerformanceProcess.cs"];
m14_208 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="231-231", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="DefaultJobPerformanceProcess.cs"];
m14_782 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1158-1158", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_783 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1160-1164", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_784 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1158-1158", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_43 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="DefaultJobPerformanceProcess.cs"];
m14_44 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="DefaultJobPerformanceProcess.cs"];
m14_8 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="DefaultJobPerformanceProcess.cs"];
m14_655 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="955-955", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_656 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="957-960", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_657 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="955-955", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_165 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="DefaultJobPerformanceProcess.cs"];
m14_498 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="694-694", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="DefaultJobPerformanceProcess.cs"];
m14_500 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="700-717", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="DefaultJobPerformanceProcess.cs"];
m14_499 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="696-698", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="DefaultJobPerformanceProcess.cs"];
m14_501 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="694-694", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="DefaultJobPerformanceProcess.cs"];
m14_183 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="DefaultJobPerformanceProcess.cs"];
m14_478 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="DefaultJobPerformanceProcess.cs"];
m14_19 [label="Entry Unk.>", span="", cluster="Unk.>", file="DefaultJobPerformanceProcess.cs"];
m14_129 [label="Entry Unk.NotEmpty", span="", cluster="Unk.NotEmpty", file="DefaultJobPerformanceProcess.cs"];
m14_101 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="DefaultJobPerformanceProcess.cs"];
m14_103 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="121-121", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="DefaultJobPerformanceProcess.cs"];
m14_102 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''\''Hello\'''', job.Arguments[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="123-159", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="DefaultJobPerformanceProcess.cs"];
m14_816 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="DefaultJobPerformanceProcess.cs"];
m14_520 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="733-733", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_521 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="735-741", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_522 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="733-733", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_665 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="964-964", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_666 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="966-970", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_667 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="964-964", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_681 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="999-999", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_682 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1001-1005", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_683 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="999-999", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_620 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="887-887", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_621 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="889-893", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_622 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="887-887", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_890 [label="storage.Setup(x => x.QueueProviders).Returns(_providers)", span="1347-1347", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_889 [label="var storage = new Mock<SqlServerStorage>(sql)", span="1346-1346", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_891 [label="var connection = new SqlServerConnection(storage.Object)", span="1349-1349", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_888 [label="var sql = ConnectionUtils.CreateConnection()", span="1344-1344", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_892 [label="action(connection)", span="1351-1351", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_893 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1342-1342", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="DefaultJobPerformanceProcess.cs"];
m14_489 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="225-225", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="DefaultJobPerformanceProcess.cs"];
m14_798 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1193-1193", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_799 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1195-1201", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_800 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1193-1193", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_294 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="422-422", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_295 [label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="424-430", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_296 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="422-422", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_407 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="DefaultJobPerformanceProcess.cs"];
m14_817 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1215-1215", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="DefaultJobPerformanceProcess.cs"];
m14_819 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1221-1238", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="DefaultJobPerformanceProcess.cs"];
m14_818 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1217-1219", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="DefaultJobPerformanceProcess.cs"];
m14_820 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1215-1215", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="DefaultJobPerformanceProcess.cs"];
m14_466 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="DefaultJobPerformanceProcess.cs"];
m14_138 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="DefaultJobPerformanceProcess.cs"];
m14_479 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="DefaultJobPerformanceProcess.cs"];
m14_630 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="897-897", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_631 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="899-903", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_632 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="897-897", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_835 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="489-489", cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="DefaultJobPerformanceProcess.cs"];
m14_852 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1287-1287", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_853 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1289-1292", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_854 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1287-1287", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_66 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="DefaultJobPerformanceProcess.cs"];
m14_127 [label="Entry System.DateTime.DateTime(int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int)", file="DefaultJobPerformanceProcess.cs"];
m14_249 [label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="196-196", cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_574 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="811-811", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_575 [label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="813-817", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_576 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="811-811", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_359 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="511-511", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="DefaultJobPerformanceProcess.cs"];
m14_361 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="521-528", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="DefaultJobPerformanceProcess.cs"];
m14_360 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="513-519", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="DefaultJobPerformanceProcess.cs"];
m14_362 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="511-511", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="DefaultJobPerformanceProcess.cs"];
m14_611 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="862-862", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="DefaultJobPerformanceProcess.cs"];
m14_613 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="868-883", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="DefaultJobPerformanceProcess.cs"];
m14_612 [label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [Score])\r\nvalues (@Key, @Value, 0.0)''", span="864-866", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="DefaultJobPerformanceProcess.cs"];
m14_614 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="862-862", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="DefaultJobPerformanceProcess.cs"];
m14_271 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="375-375", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="DefaultJobPerformanceProcess.cs"];
m14_273 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="382-395", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="DefaultJobPerformanceProcess.cs"];
m14_272 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="377-380", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="DefaultJobPerformanceProcess.cs"];
m14_274 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="375-375", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="DefaultJobPerformanceProcess.cs"];
m14_128 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="DefaultJobPerformanceProcess.cs"];
m14_861 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="372-372", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="DefaultJobPerformanceProcess.cs"];
m14_304 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="214-214", cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="DefaultJobPerformanceProcess.cs"];
m14_379 [label="Entry Hangfire.Server.ServerContext.ServerContext()", span="20-20", cluster="Hangfire.Server.ServerContext.ServerContext()", file="DefaultJobPerformanceProcess.cs"];
m14_197 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="165-165", cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="DefaultJobPerformanceProcess.cs"];
m14_331 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="DefaultJobPerformanceProcess.cs"];
m14_440 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="621-621", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="DefaultJobPerformanceProcess.cs"];
m14_442 [label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="629-640", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="DefaultJobPerformanceProcess.cs"];
m14_441 [label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="623-627", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="DefaultJobPerformanceProcess.cs"];
m14_443 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="621-621", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="DefaultJobPerformanceProcess.cs"];
m14_809 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1205-1205", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_810 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1207-1211", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_811 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1205-1205", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_530 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="745-745", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="DefaultJobPerformanceProcess.cs"];
m14_531 [label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="747-762", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="DefaultJobPerformanceProcess.cs"];
m14_532 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="745-745", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="DefaultJobPerformanceProcess.cs"];
m14_166 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="180-180", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="DefaultJobPerformanceProcess.cs"];
m14_168 [label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="187-209", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="DefaultJobPerformanceProcess.cs"];
m14_167 [label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="182-185", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="DefaultJobPerformanceProcess.cs"];
m14_169 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="180-180", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="DefaultJobPerformanceProcess.cs"];
m14_408 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="DefaultJobPerformanceProcess.cs"];
m14_430 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="614-614", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_431 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="616-617", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_432 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="614-614", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_725 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1064-1064", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="DefaultJobPerformanceProcess.cs"];
m14_727 [label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1070-1085", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="DefaultJobPerformanceProcess.cs"];
m14_726 [label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key])\r\nvalues (@key)''", span="1066-1068", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="DefaultJobPerformanceProcess.cs"];
m14_728 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1064-1064", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="DefaultJobPerformanceProcess.cs"];
m14_583 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="347-347", cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="DefaultJobPerformanceProcess.cs"];
m14_131 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="DefaultJobPerformanceProcess.cs"];
m14_148 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="163-163", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_149 [label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="165-166", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_150 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="163-163", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="DefaultJobPerformanceProcess.cs"];
m14_137 [label="Entry Unk.True", span="", cluster="Unk.True", file="DefaultJobPerformanceProcess.cs"];
m14_352 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="499-499", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_353 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="501-507", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_354 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="499-499", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_717 [label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="445-445", cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="DefaultJobPerformanceProcess.cs"];
m14_584 [label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="821-821", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_585 [label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="823-827", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_586 [label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="821-821", cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="DefaultJobPerformanceProcess.cs"];
m14_901 [label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span="", file="DefaultJobPerformanceProcess.cs"];
m14_902 [label=token, span="", file="DefaultJobPerformanceProcess.cs"];
m14_903 [label=queues, span="", file="DefaultJobPerformanceProcess.cs"];
m14_904 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_905 [label=token, span="", file="DefaultJobPerformanceProcess.cs"];
m14_906 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_907 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_908 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_909 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_910 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_911 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_912 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_913 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_914 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_915 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_916 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_917 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_918 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_919 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_920 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_921 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_922 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_923 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_924 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_925 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_926 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_927 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_928 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_929 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_930 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_931 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_932 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_933 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_934 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_935 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_936 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_937 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_938 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_939 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_940 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_941 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_942 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_943 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_944 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_945 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_946 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_947 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_948 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_949 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_950 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_951 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_952 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_953 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_954 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_955 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_956 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_957 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_958 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_959 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_960 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m14_961 [label="Hangfire.SqlServer.SqlServerConnection", span="", file="DefaultJobPerformanceProcess.cs"];
m14_962 [label=arrangeSql, span="", file="DefaultJobPerformanceProcess.cs"];
m16_15 [label="Entry HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", span="215-215", cluster="HangFire.Redis.RedisConnection.DeleteJobFromQueue(string, string)", file="DefaultStateChangeProcess.cs"];
m16_12 [label="Entry HangFire.Redis.RedisProcessingJob.Dispose()", span="40-40", cluster="HangFire.Redis.RedisProcessingJob.Dispose()", file="DefaultStateChangeProcess.cs"];
m16_13 [label="_connection.DeleteJobFromQueue(JobId, Queue)", span="42-42", cluster="HangFire.Redis.RedisProcessingJob.Dispose()", color=red, community=0, file="DefaultStateChangeProcess.cs"];
m16_14 [label="Exit HangFire.Redis.RedisProcessingJob.Dispose()", span="40-40", cluster="HangFire.Redis.RedisProcessingJob.Dispose()", file="DefaultStateChangeProcess.cs"];
m16_0 [label="Entry HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", span="25-25", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="DefaultStateChangeProcess.cs"];
m16_1 [label="connection == null", span="27-27", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="DefaultStateChangeProcess.cs"];
m16_3 [label="jobId == null", span="28-28", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="DefaultStateChangeProcess.cs"];
m16_5 [label="queue == null", span="29-29", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="DefaultStateChangeProcess.cs"];
m16_7 [label="_connection = connection", span="31-31", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="DefaultStateChangeProcess.cs"];
m16_8 [label="JobId = jobId", span="33-33", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="DefaultStateChangeProcess.cs"];
m16_9 [label="Queue = queue", span="34-34", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="DefaultStateChangeProcess.cs"];
m16_2 [label="throw new ArgumentNullException(''connection'');", span="27-27", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="DefaultStateChangeProcess.cs"];
m16_4 [label="throw new ArgumentNullException(''jobId'');", span="28-28", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="DefaultStateChangeProcess.cs"];
m16_6 [label="throw new ArgumentNullException(''queue'');", span="29-29", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", color=red, community=0, file="DefaultStateChangeProcess.cs"];
m16_10 [label="Exit HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", span="25-25", cluster="HangFire.Redis.RedisProcessingJob.RedisProcessingJob(HangFire.Redis.RedisConnection, string, string)", file="DefaultStateChangeProcess.cs"];
m16_16 [label="HangFire.Redis.RedisProcessingJob", span="", file="DefaultStateChangeProcess.cs"];
m17_44 [label="Entry HangFire.JobHelper.FromJson<T>(string)", span="33-33", cluster="HangFire.JobHelper.FromJson<T>(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_120 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="DefaultStateChangeProcessFacts.cs"];
m17_303 [label="Entry Unk.TryParse", span="", cluster="Unk.TryParse", file="DefaultStateChangeProcessFacts.cs"];
m17_38 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="DefaultStateChangeProcessFacts.cs"];
m17_140 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_50 [label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="91-91", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_51 [label=Redis, span="93-93", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_52 [label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="95-98", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_53 [label="scheduledJobs.Count == 0", span="100-100", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_58 [label=scheduledJobs, span="110-110", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_63 [label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="130-140", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_54 [label="return new Dictionary<string, ScheduleDto>();", span="102-102", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_55 [label="var jobs = new Dictionary<string, List<string>>()", span="105-105", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_56 [label="var states = new Dictionary<string, string>()", span="106-106", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_60 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="114-118", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_57 [label="var pipeline = Redis.CreatePipeline()", span="108-108", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_61 [label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="120-124", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_62 [label="pipeline.Flush()", span="127-127", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_59 [label="var job = scheduledJob", span="112-112", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_64 [label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="91-91", cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_45 [label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="61-61", cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_221 [label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5", cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="DefaultStateChangeProcessFacts.cs"];
m17_398 [label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2", cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="DefaultStateChangeProcessFacts.cs"];
m17_37 [label="Entry Unk.GetJobsWithProperties", span="", cluster="Unk.GetJobsWithProperties", file="DefaultStateChangeProcessFacts.cs"];
m17_39 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="DefaultStateChangeProcessFacts.cs"];
m17_371 [label="Entry KeyValuePair<string, T>.cstr", span="", cluster="KeyValuePair<string, T>.cstr", file="DefaultStateChangeProcessFacts.cs"];
m17_204 [label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5", cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="DefaultStateChangeProcessFacts.cs"];
m17_67 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="DefaultStateChangeProcessFacts.cs"];
m17_83 [label="Entry Unk.GetValueFromHash", span="", cluster="Unk.GetValueFromHash", file="DefaultStateChangeProcessFacts.cs"];
m17_31 [label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="63-63", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_32 [label=Redis, span="66-66", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_33 [label="var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="68-71", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_34 [label="return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="73-87", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_35 [label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="63-63", cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_141 [label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="56-56", cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_269 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="DefaultStateChangeProcessFacts.cs"];
m17_180 [label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="511-511", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_336 [label="jobIds.Count == 0", span="518-518", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_338 [label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="520-520", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_339 [label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="521-521", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_340 [label="var pipeline = redis.CreatePipeline()", span="523-523", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_341 [label=jobIds, span="525-525", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_343 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="529-531", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_344 [label="stateProperties != null", span="533-533", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_345 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="535-537", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_347 [label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="544-554", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_337 [label="return new List<KeyValuePair<string, T>>();", span="518-518", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_346 [label="pipeline.Flush()", span="541-541", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_342 [label="var id = jobId", span="527-527", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_348 [label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="511-511", cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="DefaultStateChangeProcessFacts.cs"];
m17_373 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="DefaultStateChangeProcessFacts.cs"];
m17_245 [label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="86-86", cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="DefaultStateChangeProcessFacts.cs"];
m17_243 [label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32", cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="DefaultStateChangeProcessFacts.cs"];
m17_357 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="DefaultStateChangeProcessFacts.cs"];
m17_19 [label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="39-39", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_20 [label=Redis, span="41-41", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_21 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="43-43", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_22 [label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="39-39", cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_226 [label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="450-450", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_281 [label="var endDate = DateTime.UtcNow", span="453-453", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_288 [label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="461-461", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_289 [label="var valuesMap = redis.GetValuesMap(keys)", span="462-462", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_282 [label="var dates = new List<DateTime>()", span="454-454", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_285 [label="dates.Add(endDate)", span="457-457", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_286 [label="endDate = endDate.AddHours(-1)", span="458-458", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_283 [label="var i = 0", span="455-455", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_292 [label="i < dates.Count", span="465-465", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_296 [label="result.Add(dates[i], value)", span="473-473", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_284 [label="i < 24", span="455-455", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_287 [label="i++", span="455-455", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_290 [label="var result = new Dictionary<DateTime, long>()", span="464-464", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_294 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="468-468", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_291 [label="var i = 0", span="465-465", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_298 [label="return result;", span="476-476", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_297 [label="i++", span="465-465", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_293 [label="long value", span="467-467", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_295 [label="value = 0", span="470-470", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_299 [label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="450-450", cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_241 [label="Entry Unk.TryToGetQueue", span="", cluster="Unk.TryToGetQueue", file="DefaultStateChangeProcessFacts.cs"];
m17_65 [label="Entry Unk.GetRangeWithScoresFromSortedSet", span="", cluster="Unk.GetRangeWithScoresFromSortedSet", file="DefaultStateChangeProcessFacts.cs"];
m17_139 [label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5", cluster="HangFire.Web.ServerDto.ServerDto()", file="DefaultStateChangeProcessFacts.cs"];
m17_244 [label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10", cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_270 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="DefaultStateChangeProcessFacts.cs"];
m17_246 [label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="404-404", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_247 [label=Redis, span="406-406", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_248 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="408-408", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_254 [label="return stateMachine.ChangeState(jobId, state, ScheduledState.Name);", span="419-419", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_249 [label="var queue = TryToGetQueue(jobType)", span="409-409", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_250 [label="String.IsNullOrEmpty(queue)", span="411-411", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_253 [label="var state = new EnqueuedState(''The job has been enqueued by a user.'', queue)", span="417-417", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_251 [label="return false;", span="413-413", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_252 [label="var stateMachine = new StateMachine(Redis)", span="416-416", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_255 [label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="404-404", cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_181 [label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4", cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="DefaultStateChangeProcessFacts.cs"];
m17_329 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="DefaultStateChangeProcessFacts.cs"];
m17_372 [label="Entry Unk.TrueForAll", span="", cluster="Unk.TrueForAll", file="DefaultStateChangeProcessFacts.cs"];
m17_441 [label="Entry lambda expression", span="604-604", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_40 [label="Entry lambda expression", span="77-87", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_47 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_41 [label="new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="77-87", cluster="lambda expression", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_42 [label="Exit lambda expression", span="77-87", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_48 [label="x.Value.StartedAt", span="87-87", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_49 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_77 [label="jobs.Add(job.Key, x)", span="118-118", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_91 [label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="132-140", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_85 [label="states.Add(job.Key, x)", span="124-124", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_72 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="115-117", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_81 [label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="121-123", cluster="lambda expression", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_71 [label="Entry lambda expression", span="115-117", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_76 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_80 [label="Entry lambda expression", span="121-123", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_84 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_87 [label="Entry lambda expression", span="131-131", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_90 [label="Entry lambda expression", span="132-140", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_73 [label="Exit lambda expression", span="115-117", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_78 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_82 [label="Exit lambda expression", span="121-123", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_86 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_88 [label="job.Key", span="131-131", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_89 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_92 [label="Exit lambda expression", span="132-140", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_127 [label="servers.Add(name, x)", span="184-184", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_137 [label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="195-202", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_134 [label="queues.Add(name, x)", span="189-189", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_124 [label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="181-183", cluster="lambda expression", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_130 [label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="187-188", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_123 [label="Entry lambda expression", span="181-183", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_126 [label="Entry lambda expression", span="184-184", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_129 [label="Entry lambda expression", span="187-188", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_133 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_136 [label="Entry lambda expression", span="195-202", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_125 [label="Exit lambda expression", span="181-183", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_128 [label="Exit lambda expression", span="184-184", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_131 [label="Exit lambda expression", span="187-188", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_135 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_138 [label="Exit lambda expression", span="195-202", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_148 [label="Entry lambda expression", span="220-230", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_149 [label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="220-230", cluster="lambda expression", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_150 [label="Exit lambda expression", span="220-230", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_158 [label="Entry lambda expression", span="248-255", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_159 [label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="248-255", cluster="lambda expression", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_160 [label="Exit lambda expression", span="248-255", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_184 [label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="275-276", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_190 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="280-280", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_196 [label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="284-284", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_183 [label="Entry lambda expression", span="275-276", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_186 [label="Entry lambda expression", span="277-277", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_189 [label="Entry lambda expression", span="280-280", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_192 [label="Entry lambda expression", span="281-281", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_195 [label="Entry lambda expression", span="284-284", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_198 [label="Entry lambda expression", span="285-285", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_201 [label="Entry lambda expression", span="295-301", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_185 [label="Exit lambda expression", span="275-276", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_187 [label="firstJobIds = x", span="277-277", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_188 [label="Exit lambda expression", span="277-277", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_191 [label="Exit lambda expression", span="280-280", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_193 [label="length = x", span="281-281", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_194 [label="Exit lambda expression", span="281-281", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_197 [label="Exit lambda expression", span="284-284", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_199 [label="dequeued = x", span="285-285", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_200 [label="Exit lambda expression", span="285-285", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_202 [label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="295-301", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_203 [label="Exit lambda expression", span="295-301", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_210 [label="Entry lambda expression", span="331-337", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_211 [label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="331-337", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_212 [label="Exit lambda expression", span="331-337", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_218 [label="Entry lambda expression", span="355-363", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_219 [label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="355-363", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_220 [label="Exit lambda expression", span="355-363", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_272 [label="!hiddenProperties.Contains(x.Key)", span="444-444", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_271 [label="Entry lambda expression", span="444-444", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_275 [label="Entry lambda expression", span="444-444", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_278 [label="Entry lambda expression", span="444-444", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_273 [label="Exit lambda expression", span="444-444", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_276 [label="x.Key", span="444-444", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_277 [label="Exit lambda expression", span="444-444", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_279 [label="x.Value", span="444-444", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_280 [label="Exit lambda expression", span="444-444", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_306 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="461-461", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_305 [label="Entry lambda expression", span="461-461", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_307 [label="Exit lambda expression", span="461-461", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_334 [label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="493-493", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_330 [label="Entry lambda expression", span="492-492", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_333 [label="Entry lambda expression", span="493-493", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_331 [label="x.ToString(''yyyy-MM-dd'')", span="492-492", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_332 [label="Exit lambda expression", span="492-492", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_335 [label="Exit lambda expression", span="493-493", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_351 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="530-530", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_359 [label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="536-536", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_369 [label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="551-553", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_354 [label="!jobs.ContainsKey(id)", span="531-531", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_355 [label="jobs.Add(id, x)", span="531-531", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_366 [label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="545-550", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_362 [label="!states.ContainsKey(id)", span="537-537", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_363 [label="states.Add(id, x)", span="537-537", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_350 [label="Entry lambda expression", span="530-530", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_353 [label="Entry lambda expression", span="531-531", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_358 [label="Entry lambda expression", span="536-536", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_361 [label="Entry lambda expression", span="537-537", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_365 [label="Entry lambda expression", span="545-550", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_368 [label="Entry lambda expression", span="551-553", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_352 [label="Exit lambda expression", span="530-530", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_356 [label="Exit lambda expression", span="531-531", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_360 [label="Exit lambda expression", span="536-536", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_364 [label="Exit lambda expression", span="537-537", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_367 [label="Exit lambda expression", span="545-550", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_370 [label="Exit lambda expression", span="551-553", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_374 [label="Entry lambda expression", span="553-553", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_375 [label="y == null", span="553-553", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_376 [label="Exit lambda expression", span="553-553", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_404 [label="stats.Servers = x", span="577-577", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_410 [label="stats.Queues = x", span="581-581", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_416 [label="stats.Scheduled = x", span="585-585", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_422 [label="stats.Processing = x", span="589-589", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_429 [label="stats.Succeeded = long.Parse(x ?? ''0'')", span="593-593", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_436 [label="stats.Failed = x", span="597-597", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_442 [label="stats.Enqueued += x", span="604-604", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_399 [label="Entry lambda expression", span="576-576", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_403 [label="Entry lambda expression", span="577-577", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_406 [label="Entry lambda expression", span="580-580", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_409 [label="Entry lambda expression", span="581-581", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_412 [label="Entry lambda expression", span="584-584", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_415 [label="Entry lambda expression", span="585-585", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_418 [label="Entry lambda expression", span="588-588", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_421 [label="Entry lambda expression", span="589-589", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_424 [label="Entry lambda expression", span="592-592", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_428 [label="Entry lambda expression", span="593-593", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_432 [label="Entry lambda expression", span="596-596", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_435 [label="Entry lambda expression", span="597-597", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_439 [label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="603-603", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_438 [label="Entry lambda expression", span="603-603", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_400 [label="x.GetSetCount(''hangfire:servers'')", span="576-576", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_401 [label="Exit lambda expression", span="576-576", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_405 [label="Exit lambda expression", span="577-577", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_407 [label="x.GetSetCount(''hangfire:queues'')", span="580-580", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_408 [label="Exit lambda expression", span="580-580", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_411 [label="Exit lambda expression", span="581-581", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_413 [label="x.GetSortedSetCount(''hangfire:schedule'')", span="584-584", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_414 [label="Exit lambda expression", span="584-584", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_417 [label="Exit lambda expression", span="585-585", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_419 [label="x.GetSortedSetCount(''hangfire:processing'')", span="588-588", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_420 [label="Exit lambda expression", span="588-588", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_423 [label="Exit lambda expression", span="589-589", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_425 [label="x.GetValue(''hangfire:stats:succeeded'')", span="592-592", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_426 [label="Exit lambda expression", span="592-592", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_430 [label="Exit lambda expression", span="593-593", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_433 [label="x.GetSortedSetCount(''hangfire:failed'')", span="596-596", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_434 [label="Exit lambda expression", span="596-596", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_437 [label="Exit lambda expression", span="597-597", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_440 [label="Exit lambda expression", span="603-603", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_443 [label="Exit lambda expression", span="604-604", cluster="lambda expression", file="DefaultStateChangeProcessFacts.cs"];
m17_36 [label="Entry Unk.GetRangeFromSortedSet", span="", cluster="Unk.GetRangeFromSortedSet", file="DefaultStateChangeProcessFacts.cs"];
m17_182 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="DefaultStateChangeProcessFacts.cs"];
m17_122 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="DefaultStateChangeProcessFacts.cs"];
m17_74 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="DefaultStateChangeProcessFacts.cs"];
m17_227 [label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="375-375", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="DefaultStateChangeProcessFacts.cs"];
m17_228 [label=Redis, span="377-377", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="DefaultStateChangeProcessFacts.cs"];
m17_229 [label="return GetHourlyTimelineStats(Redis, ''failed'');", span="379-379", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="DefaultStateChangeProcessFacts.cs"];
m17_230 [label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="375-375", cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="DefaultStateChangeProcessFacts.cs"];
m17_43 [label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5", cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="DefaultStateChangeProcessFacts.cs"];
m17_68 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="DefaultStateChangeProcessFacts.cs"];
m17_142 [label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="206-206", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_143 [label=Redis, span="208-208", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_144 [label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="210-213", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_145 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="215-230", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_146 [label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="206-206", cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_8 [label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="23-23", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_9 [label=Redis, span="25-25", cluster="HangFire.Web.JobStorage.ScheduledCount()", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_10 [label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="27-27", cluster="HangFire.Web.JobStorage.ScheduledCount()", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_11 [label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="23-23", cluster="HangFire.Web.JobStorage.ScheduledCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_151 [label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5", cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="DefaultStateChangeProcessFacts.cs"];
m17_94 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="46-46", cluster="HangFire.JobHelper.FromTimestamp(long)", file="DefaultStateChangeProcessFacts.cs"];
m17_308 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_152 [label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="234-234", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_153 [label=Redis, span="236-236", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_154 [label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="238-241", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_155 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="243-255", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_156 [label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="234-234", cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_179 [label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span="", cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="DefaultStateChangeProcessFacts.cs"];
m17_302 [label="Entry Unk.ElementAt", span="", cluster="Unk.ElementAt", file="DefaultStateChangeProcessFacts.cs"];
m17_157 [label="Entry Unk.GetRangeFromList", span="", cluster="Unk.GetRangeFromList", file="DefaultStateChangeProcessFacts.cs"];
m17_162 [label="Entry HangFire.Web.JobStorage.Queues()", span="259-259", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_163 [label=Redis, span="261-261", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_164 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="263-263", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_165 [label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="264-264", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_166 [label=queues, span="266-266", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_176 [label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="303-309", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_177 [label="return result;", span="312-312", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_167 [label="IList<string> firstJobIds = null", span="268-268", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_171 [label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="274-277", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_172 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="279-281", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_173 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="283-285", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_168 [label="long length = 0", span="269-269", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_169 [label="long dequeued = 0", span="270-270", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_170 [label="var pipeline = Redis.CreatePipeline()", span="272-272", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_174 [label="pipeline.Flush()", span="287-287", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_175 [label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="290-301", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_178 [label="Exit HangFire.Web.JobStorage.Queues()", span="259-259", cluster="HangFire.Web.JobStorage.Queues()", file="DefaultStateChangeProcessFacts.cs"];
m17_95 [label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="144-144", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_96 [label=Redis, span="146-146", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_97 [label="return GetTimelineStats(Redis, ''succeeded'');", span="148-148", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_98 [label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="144-144", cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_69 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="DefaultStateChangeProcessFacts.cs"];
m17_161 [label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5", cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="DefaultStateChangeProcessFacts.cs"];
m17_431 [label="Entry Unk.Parse", span="", cluster="Unk.Parse", file="DefaultStateChangeProcessFacts.cs"];
m17_79 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="DefaultStateChangeProcessFacts.cs"];
m17_104 [label="Entry HangFire.Web.JobStorage.Servers()", span="160-160", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_105 [label=Redis, span="162-162", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_106 [label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="164-164", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_107 [label="serverNames.Count == 0", span="166-166", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_112 [label=serverNames, span="176-176", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_117 [label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="195-202", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_108 [label="return new List<ServerDto>();", span="168-168", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_109 [label="var servers = new Dictionary<string, List<string>>()", span="171-171", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_110 [label="var queues = new Dictionary<string, List<string>>()", span="172-172", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_114 [label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="180-184", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_111 [label="var pipeline = Redis.CreatePipeline()", span="174-174", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_115 [label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="186-189", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_116 [label="pipeline.Flush()", span="192-192", cluster="HangFire.Web.JobStorage.Servers()", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_113 [label="var name = serverName", span="178-178", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_118 [label="Exit HangFire.Web.JobStorage.Servers()", span="160-160", cluster="HangFire.Web.JobStorage.Servers()", file="DefaultStateChangeProcessFacts.cs"];
m17_381 [label="Entry HangFire.Web.JobStorage.GetStatistics()", span="565-565", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_382 [label=Redis, span="567-567", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_383 [label="var stats = new StatisticsDto()", span="569-569", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_384 [label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="571-571", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_386 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="575-577", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_387 [label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="579-581", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_388 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="583-585", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_389 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="587-589", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_390 [label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="591-593", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_391 [label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="595-597", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_394 [label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="602-604", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_396 [label="return stats;", span="610-610", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_385 [label="var pipeline = Redis.CreatePipeline()", span="573-573", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_392 [label=queues, span="599-599", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_395 [label="pipeline.Flush()", span="607-607", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_393 [label="var queueName = queue", span="601-601", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_397 [label="Exit HangFire.Web.JobStorage.GetStatistics()", span="565-565", cluster="HangFire.Web.JobStorage.GetStatistics()", file="DefaultStateChangeProcessFacts.cs"];
m17_377 [label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="557-557", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_378 [label=Redis, span="559-559", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_379 [label="return Redis.GetListCount(''hangfire:succeeded'');", span="561-561", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_380 [label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="557-557", cluster="HangFire.Web.JobStorage.SucceededListCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_222 [label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="367-367", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="DefaultStateChangeProcessFacts.cs"];
m17_223 [label=Redis, span="369-369", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="DefaultStateChangeProcessFacts.cs"];
m17_224 [label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="371-371", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="DefaultStateChangeProcessFacts.cs"];
m17_225 [label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="367-367", cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="DefaultStateChangeProcessFacts.cs"];
m17_46 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="DefaultStateChangeProcessFacts.cs"];
m17_300 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="DefaultStateChangeProcessFacts.cs"];
m17_99 [label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="479-479", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_310 [label="var endDate = DateTime.UtcNow.Date", span="482-482", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_317 [label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="493-493", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_318 [label="var valuesMap = redis.GetValuesMap(keys)", span="495-495", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_311 [label="var startDate = endDate.AddDays(-7)", span="483-483", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_313 [label="startDate <= endDate", span="486-486", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_314 [label="dates.Add(endDate)", span="488-488", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_315 [label="endDate = endDate.AddDays(-1)", span="489-489", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_312 [label="var dates = new List<DateTime>()", span="484-484", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_316 [label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="492-492", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_325 [label="result.Add(dates[i], value)", span="505-505", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_321 [label="i < stringDates.Count", span="498-498", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_319 [label="var result = new Dictionary<DateTime, long>()", span="497-497", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_323 [label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="501-501", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_320 [label="var i = 0", span="498-498", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_327 [label="return result;", span="508-508", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_326 [label="i++", span="498-498", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_322 [label="long value", span="500-500", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_324 [label="value = 0", span="503-503", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_328 [label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="479-479", cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="DefaultStateChangeProcessFacts.cs"];
m17_12 [label="Entry Unk.GetSortedSetCount", span="", cluster="Unk.GetSortedSetCount", file="DefaultStateChangeProcessFacts.cs"];
m17_23 [label="Entry HangFire.Web.JobStorage.FailedCount()", span="47-47", cluster="HangFire.Web.JobStorage.FailedCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_24 [label=Redis, span="49-49", cluster="HangFire.Web.JobStorage.FailedCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_25 [label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="51-51", cluster="HangFire.Web.JobStorage.FailedCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_26 [label="Exit HangFire.Web.JobStorage.FailedCount()", span="47-47", cluster="HangFire.Web.JobStorage.FailedCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_267 [label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4", cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="DefaultStateChangeProcessFacts.cs"];
m17_256 [label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="423-423", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_257 [label=Redis, span="425-425", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_258 [label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="427-427", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_262 [label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="432-433", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_259 [label="job.Count == 0", span="428-428", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_264 [label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="439-446", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_260 [label="return null;", span="428-428", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_261 [label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="430-430", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_263 [label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="435-437", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_265 [label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="423-423", cluster="HangFire.Web.JobStorage.JobDetails(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_304 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DefaultStateChangeProcessFacts.cs"];
m17_13 [label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="31-31", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_14 [label=Redis, span="33-33", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_15 [label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="35-35", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_16 [label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="31-31", cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_309 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="DefaultStateChangeProcessFacts.cs"];
m17_266 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="DefaultStateChangeProcessFacts.cs"];
m17_70 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="DefaultStateChangeProcessFacts.cs"];
m17_349 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="DefaultStateChangeProcessFacts.cs"];
m17_402 [label="Entry Unk.GetSetCount", span="", cluster="Unk.GetSetCount", file="DefaultStateChangeProcessFacts.cs"];
m17_213 [label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="341-341", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_214 [label=Redis, span="344-344", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_215 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="346-348", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_216 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="350-363", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_217 [label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="341-341", cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_17 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="DefaultStateChangeProcessFacts.cs"];
m17_100 [label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="152-152", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_101 [label=Redis, span="154-154", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_102 [label="return GetTimelineStats(Redis, ''failed'');", span="156-156", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_103 [label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="152-152", cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_268 [label="Entry Unk.>", span="", cluster="Unk.>", file="DefaultStateChangeProcessFacts.cs"];
m17_7 [label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="11-11", cluster="HangFire.JobHelper.GetQueue(System.Type)", file="DefaultStateChangeProcessFacts.cs"];
m17_18 [label="Entry Unk.GetListCount", span="", cluster="Unk.GetListCount", file="DefaultStateChangeProcessFacts.cs"];
m17_6 [label="Entry System.Type.GetType(string)", span="0-0", cluster="System.Type.GetType(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_93 [label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5", cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="DefaultStateChangeProcessFacts.cs"];
m17_66 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DefaultStateChangeProcessFacts.cs"];
m17_242 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_301 [label="Entry Unk.GetValuesMap", span="", cluster="Unk.GetValuesMap", file="DefaultStateChangeProcessFacts.cs"];
m17_27 [label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="55-55", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_28 [label=Redis, span="57-57", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_29 [label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="59-59", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_30 [label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="55-55", cluster="HangFire.Web.JobStorage.ProcessingCount()", file="DefaultStateChangeProcessFacts.cs"];
m17_0 [label="Entry HangFire.Web.JobStorage.TryToGetQueue(string)", span="12-12", cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_1 [label="var type = Type.GetType(jobType)", span="14-14", cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_2 [label="type == null", span="15-15", cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_4 [label="return JobHelper.GetQueue(type);", span="20-20", cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", color=red, community=0, file="DefaultStateChangeProcessFacts.cs"];
m17_3 [label="return null;", span="17-17", cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_5 [label="Exit HangFire.Web.JobStorage.TryToGetQueue(string)", span="12-12", cluster="HangFire.Web.JobStorage.TryToGetQueue(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_132 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="DefaultStateChangeProcessFacts.cs"];
m17_274 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="DefaultStateChangeProcessFacts.cs"];
m17_121 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="DefaultStateChangeProcessFacts.cs"];
m17_119 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="DefaultStateChangeProcessFacts.cs"];
m17_147 [label="Entry Unk.GetRangeFromSortedSetDesc", span="", cluster="Unk.GetRangeFromSortedSetDesc", file="DefaultStateChangeProcessFacts.cs"];
m17_427 [label="Entry Unk.GetValue", span="", cluster="Unk.GetValue", file="DefaultStateChangeProcessFacts.cs"];
m17_75 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="DefaultStateChangeProcessFacts.cs"];
m17_231 [label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="383-383", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_232 [label=Redis, span="385-385", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_233 [label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="387-387", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_239 [label="return stateMachine.ChangeState(jobId, state, FailedState.Name);", span="400-400", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_234 [label="var queue = TryToGetQueue(jobType)", span="389-389", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_235 [label="String.IsNullOrEmpty(queue)", span="390-390", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_238 [label="var state = new EnqueuedState(''The job has been retried by a user.'', queue)", span="398-398", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_236 [label="return false;", span="392-392", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_237 [label="var stateMachine = new StateMachine(Redis)", span="397-397", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_240 [label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="383-383", cluster="HangFire.Web.JobStorage.RetryJob(string)", file="DefaultStateChangeProcessFacts.cs"];
m17_205 [label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="316-316", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_206 [label=Redis, span="319-319", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_207 [label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="321-324", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_208 [label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="326-337", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_209 [label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="316-316", cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="DefaultStateChangeProcessFacts.cs"];
m17_444 [label=job, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_445 [label=jobs, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_446 [label=states, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_447 [label=name, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_448 [label=servers, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_449 [label=queues, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_450 [label=queue, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_451 [label=hiddenProperties, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_452 [label=string, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_453 [label=string, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_454 [label="string[]", span="", file="DefaultStateChangeProcessFacts.cs"];
m17_455 [label=id, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_456 [label=jobs, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_457 [label="string[]", span="", file="DefaultStateChangeProcessFacts.cs"];
m17_458 [label=states, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_459 [label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span="", file="DefaultStateChangeProcessFacts.cs"];
m17_460 [label=stats, span="", file="DefaultStateChangeProcessFacts.cs"];
m17_461 [label=queueName, span="", file="DefaultStateChangeProcessFacts.cs"];
m18_0 [label="Entry Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", span="30-30", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m18_1 [label="connection == null", span="38-38", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=red, community=0, file="ElectStateContext.cs"];
m18_3 [label="stateMachine == null", span="39-39", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=red, community=0, file="ElectStateContext.cs"];
m18_5 [label="candidateState == null", span="40-40", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m18_7 [label="_candidateState = candidateState", span="42-42", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=red, community=0, file="ElectStateContext.cs"];
m18_8 [label="Connection = connection", span="44-44", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=red, community=0, file="ElectStateContext.cs"];
m18_9 [label="StateMachine = stateMachine", span="45-45", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=red, community=0, file="ElectStateContext.cs"];
m18_10 [label="CurrentState = currentState", span="46-46", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m18_2 [label="throw new ArgumentNullException(''connection'');", span="38-38", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=red, community=0, file="ElectStateContext.cs"];
m18_4 [label="throw new ArgumentNullException(''stateMachine'');", span="39-39", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", color=red, community=0, file="ElectStateContext.cs"];
m18_6 [label="throw new ArgumentNullException(''candidateState'');", span="40-40", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m18_11 [label="Exit Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", span="30-30", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="ElectStateContext.cs"];
m18_22 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="ElectStateContext.cs"];
m18_21 [label="Entry Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39", cluster="Hangfire.Storage.IStorageConnection.GetJobParameter(string, string)", file="ElectStateContext.cs"];
m18_18 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="85-85", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs"];
m18_19 [label="return JobHelper.FromJson<T>(Connection.GetJobParameter(\r\n                JobId, name));", span="87-88", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs"];
m18_20 [label="Exit Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="85-85", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContext.cs"];
m18_16 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContext.cs"];
m18_13 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="80-80", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContext.cs"];
m18_14 [label="Connection.SetJobParameter(JobId, name, JobHelper.ToJson(value))", span="82-82", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContext.cs"];
m18_15 [label="Exit Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="80-80", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContext.cs"];
m18_17 [label="Entry Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38", cluster="Hangfire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="ElectStateContext.cs"];
m18_23 [label="Hangfire.States.ElectStateContext", span="", file="ElectStateContext.cs"];
m19_61 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", span="105-105", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m19_62 [label="var context = CreateContext()", span="107-107", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_63 [label="var state = new Mock<IState>()", span="108-108", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_64 [label="context.CandidateState = state.Object", span="110-110", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_65 [label="Assert.Contains(_candidateState.Object, context.TraversedStates)", span="112-112", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_66 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", span="105-105", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_AddsPreviousCandidateState_ToTraversedStatesList()", file="ElectStateContextFacts.cs"];
m19_10 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ElectStateContextFacts.cs"];
m19_46 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ElectStateContextFacts.cs"];
m19_16 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ElectStateContextFacts.cs"];
m19_80 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="127-127", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m19_81 [label="var context = CreateContext()", span="129-129", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m19_82 [label="context.SetJobParameter(''Name'', (string)null)", span="131-131", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m19_83 [label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null)))", span="133-134", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m19_84 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", span="127-127", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CanReceiveNullValue()", file="ElectStateContextFacts.cs"];
m19_73 [label="Entry Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", span="80-80", cluster="Hangfire.States.ElectStateContext.SetJobParameter<T>(string, T)", file="ElectStateContextFacts.cs"];
m19_68 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="116-116", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m19_69 [label="var context = CreateContext()", span="118-118", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m19_70 [label="context.SetJobParameter(''Name'', ''Value'')", span="120-120", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m19_71 [label="_connection.Verify(x => x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value'')))", span="122-123", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m19_72 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", span="116-116", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetJobParameter_CallsTheCorrespondingMethod_WithJsonEncodedValue()", file="ElectStateContextFacts.cs"];
m19_15 [label="Entry Unk.>", span="", cluster="Unk.>", file="ElectStateContextFacts.cs"];
m19_101 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="150-150", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m19_102 [label="var context = CreateContext()", span="152-152", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m19_103 [label="_connection.Setup(x => x.GetJobParameter(''1'', ''Value''))\r\n                .Returns(JobHelper.ToJson(null))", span="153-154", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m19_104 [label="var value = context.GetJobParameter<int>(''Name'')", span="156-156", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m19_105 [label="Assert.Equal(default(int), value)", span="158-158", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m19_106 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", span="150-150", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_ReturnsDefaultValue_WhenNoValueProvided()", file="ElectStateContextFacts.cs"];
m19_96 [label="Entry Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", span="85-85", cluster="Hangfire.States.ElectStateContext.GetJobParameter<T>(string)", file="ElectStateContextFacts.cs"];
m19_48 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="86-86", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m19_49 [label="var context = CreateContext()", span="88-88", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m19_50 [label="Assert.Throws<ArgumentNullException>(() => context.CandidateState = null)", span="90-90", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m19_51 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", span="86-86", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_ThrowsAnException_WhenValueIsNull()", file="ElectStateContextFacts.cs"];
m19_0 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="17-17", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m19_1 [label="_connection = new Mock<IStorageConnection>()", span="19-19", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m19_2 [label="_stateMachine = new Mock<IStateMachine>()", span="20-20", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_3 [label="_stateContext = new StateContextMock()", span="22-22", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m19_4 [label="_stateContext.JobIdValue = JobId", span="23-23", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m19_5 [label="_candidateState = new Mock<IState>()", span="25-25", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m19_6 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", span="17-17", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs"];
m19_21 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", span="43-43", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", file="ElectStateContextFacts.cs"];
m19_22 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    _candidateState.Object,\r\n                    null))", span="45-51", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", color=red, community=1, file="ElectStateContextFacts.cs"];
m19_23 [label="Assert.Equal(''stateMachine'', exception.ParamName)", span="53-53", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_24 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", span="43-43", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenStateMachineIsNull()", file="ElectStateContextFacts.cs"];
m19_11 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="29-29", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m19_12 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    null,\r\n                    _stateMachine.Object,\r\n                    _candidateState.Object,\r\n                    null))", span="31-37", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=1, file="ElectStateContextFacts.cs"];
m19_13 [label="Assert.Equal(''connection'', exception.ParamName)", span="39-39", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_14 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="29-29", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ElectStateContextFacts.cs"];
m19_88 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="138-138", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m19_89 [label="var context = CreateContext()", span="140-140", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m19_90 [label="_connection.Setup(x => x.GetJobParameter(''1'', ''Name''))\r\n                .Returns(JobHelper.ToJson(''Value''))", span="141-142", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m19_91 [label="var value = context.GetJobParameter<string>(''Name'')", span="144-144", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m19_92 [label="Assert.Equal(''Value'', value)", span="146-146", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m19_93 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="138-138", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs"];
m19_100 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="ElectStateContextFacts.cs"];
m19_94 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="ElectStateContextFacts.cs"];
m19_78 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContextFacts.cs"];
m19_107 [label="Entry lambda expression", span="153-153", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_17 [label="Entry lambda expression", span="32-37", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_18 [label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    null,\r\n                    _stateMachine.Object,\r\n                    _candidateState.Object,\r\n                    null)", span="32-37", cluster="lambda expression", color=red, community=1, file="ElectStateContextFacts.cs"];
m19_19 [label="Exit lambda expression", span="32-37", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_25 [label="Entry lambda expression", span="46-51", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_26 [label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    null,\r\n                    _candidateState.Object,\r\n                    null)", span="46-51", cluster="lambda expression", color=red, community=1, file="ElectStateContextFacts.cs"];
m19_27 [label="Exit lambda expression", span="46-51", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_32 [label="Entry lambda expression", span="60-65", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_33 [label="new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    _stateMachine.Object,\r\n                    null,\r\n                    null)", span="60-65", cluster="lambda expression", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_34 [label="Exit lambda expression", span="60-65", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_53 [label="context.CandidateState = null", span="90-90", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_52 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_54 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_75 [label="Entry lambda expression", span="122-123", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_76 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(''Value''))", span="122-123", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_77 [label="Exit lambda expression", span="122-123", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_85 [label="Entry lambda expression", span="133-134", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_86 [label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null))", span="133-134", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_87 [label="Exit lambda expression", span="133-134", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_97 [label="Entry lambda expression", span="141-141", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_98 [label="x.GetJobParameter(''1'', ''Name'')", span="141-141", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_99 [label="Exit lambda expression", span="141-141", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_108 [label="x.GetJobParameter(''1'', ''Value'')", span="153-153", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_109 [label="Exit lambda expression", span="153-153", cluster="lambda expression", file="ElectStateContextFacts.cs"];
m19_67 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ElectStateContextFacts.cs"];
m19_74 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="ElectStateContextFacts.cs"];
m19_55 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="94-94", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m19_56 [label="var context = CreateContext()", span="96-96", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m19_57 [label="var newState = new Mock<IState>()", span="97-97", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m19_58 [label="context.CandidateState = newState.Object", span="99-99", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m19_59 [label="Assert.Same(newState.Object, context.CandidateState)", span="101-101", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m19_60 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="94-94", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs"];
m19_28 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="57-57", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m19_29 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    _connection.Object,\r\n                    _stateMachine.Object,\r\n                    null,\r\n                    null))", span="59-65", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_30 [label="Assert.Equal(''candidateState'', exception.ParamName)", span="67-67", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m19_31 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="57-57", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs"];
m19_35 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="71-71", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m19_36 [label="var context = CreateContext()", span="73-73", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m19_37 [label="Assert.Equal(_stateContext.Object.JobId, context.JobId)", span="75-75", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m19_38 [label="Assert.Equal(_stateContext.Object.Job, context.Job)", span="76-76", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m19_39 [label="Assert.Same(_connection.Object, context.Connection)", span="78-78", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_40 [label="Assert.Same(_stateMachine.Object, context.StateMachine)", span="79-79", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_41 [label="Assert.Same(_candidateState.Object, context.CandidateState)", span="80-80", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m19_42 [label="Assert.Equal(''State'', context.CurrentState)", span="81-81", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m19_43 [label="Assert.Empty(context.TraversedStates)", span="82-82", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_44 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="71-71", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs"];
m19_8 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="ElectStateContextFacts.cs"];
m19_9 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ElectStateContextFacts.cs"];
m19_47 [label="Entry Unk.Empty", span="", cluster="Unk.Empty", file="ElectStateContextFacts.cs"];
m19_95 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="ElectStateContextFacts.cs"];
m19_20 [label="Entry ElectStateContext.cstr", span="", cluster="ElectStateContext.cstr", file="ElectStateContextFacts.cs"];
m19_45 [label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="161-161", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m19_110 [label="return new ElectStateContext(\r\n                _stateContext.Object,\r\n                _connection.Object,\r\n                _stateMachine.Object,\r\n                _candidateState.Object,\r\n                ''State'');", span="163-168", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", color=red, community=0, file="ElectStateContextFacts.cs"];
m19_111 [label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="161-161", cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs"];
m19_7 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ElectStateContextFacts.cs"];
m19_79 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="ElectStateContextFacts.cs"];
m19_112 [label="Hangfire.Core.Tests.States.ElectStateContextFacts", span="", file="ElectStateContextFacts.cs"];
m19_113 [label=context, span="", file="ElectStateContextFacts.cs"];
m20_0 [label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="ElectStateContextMock.cs"];
m20_1 [label="InScheduledState = true", span="9-9", cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="ElectStateContextMock.cs"];
m20_2 [label="Exit HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7", cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="ElectStateContextMock.cs"];
m20_3 [label="HangFire.Storage.Monitoring.ScheduleDto", span="", file="ElectStateContextMock.cs"];
m21_0 [label="Entry Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="IJobCreationProcess.cs"];
m21_1 [label="Exit Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", span="32-32", cluster="Hangfire.Client.IJobCreationProcess.Run(Hangfire.Client.CreateContext, Hangfire.Client.IJobCreator)", file="IJobCreationProcess.cs"];
m22_0 [label="Entry Hangfire.Client.IJobCreator.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="24-24", cluster="Hangfire.Client.IJobCreator.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IJobCreator.cs"];
m22_1 [label="Exit Hangfire.Client.IJobCreator.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="24-24", cluster="Hangfire.Client.IJobCreator.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="IJobCreator.cs"];
m23_2 [label="Entry Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", span="23-23", cluster="Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", file="IStateChangeProcess.cs"];
m23_3 [label="Exit Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", span="23-23", cluster="Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", file="IStateChangeProcess.cs"];
m23_0 [label="Entry Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="22-22", cluster="Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="IStateChangeProcess.cs"];
m23_1 [label="Exit Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="22-22", cluster="Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="IStateChangeProcess.cs"];
m24_0 [label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="22-22", cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs"];
m24_1 [label="Exit Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="22-22", cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="IStateMachine.cs"];
m26_196 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="241-241", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="PreserveCultureAttributeFacts.cs"];
m26_197 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException() })", span="244-245", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="PreserveCultureAttributeFacts.cs"];
m26_198 [label="var worker = CreateWorker()", span="247-247", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="PreserveCultureAttributeFacts.cs"];
m26_199 [label="worker.Execute(_token)", span="250-250", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="PreserveCultureAttributeFacts.cs"];
m26_200 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>()))", span="253-256", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="PreserveCultureAttributeFacts.cs"];
m26_201 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="241-241", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="PreserveCultureAttributeFacts.cs"];
m26_141 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="174-174", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="PreserveCultureAttributeFacts.cs"];
m26_142 [label="var worker = CreateWorker()", span="176-176", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="PreserveCultureAttributeFacts.cs"];
m26_143 [label="worker.Execute(_token)", span="178-178", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="PreserveCultureAttributeFacts.cs"];
m26_144 [label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="180-182", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="PreserveCultureAttributeFacts.cs"];
m26_145 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="174-174", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="PreserveCultureAttributeFacts.cs"];
m26_56 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="PreserveCultureAttributeFacts.cs"];
m26_68 [label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="PreserveCultureAttributeFacts.cs"];
m26_23 [label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0", cluster="System.Threading.CancellationToken.CancellationToken()", file="PreserveCultureAttributeFacts.cs"];
m26_89 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="97-97", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="PreserveCultureAttributeFacts.cs"];
m26_90 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="100-104", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="PreserveCultureAttributeFacts.cs"];
m26_91 [label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="106-107", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="PreserveCultureAttributeFacts.cs"];
m26_92 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>()))\r\n                .InSequence()\r\n                .Returns(true)", span="109-113", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="PreserveCultureAttributeFacts.cs"];
m26_93 [label="var worker = CreateWorker()", span="115-115", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="PreserveCultureAttributeFacts.cs"];
m26_94 [label="worker.Execute(_token)", span="118-118", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="PreserveCultureAttributeFacts.cs"];
m26_95 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="97-97", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="PreserveCultureAttributeFacts.cs"];
m26_15 [label="Entry HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9", cluster="HangFire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="PreserveCultureAttributeFacts.cs"];
m26_202 [label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33", cluster="HangFire.Common.JobLoadException.JobLoadException()", file="PreserveCultureAttributeFacts.cs"];
m26_19 [label="Entry Mock<IProcessingJob>.cstr", span="", cluster="Mock<IProcessingJob>.cstr", file="PreserveCultureAttributeFacts.cs"];
m26_103 [label="Entry Unk.Run", span="", cluster="Unk.Run", file="PreserveCultureAttributeFacts.cs"];
m26_160 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="199-199", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="PreserveCultureAttributeFacts.cs"];
m26_162 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="203-205", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="PreserveCultureAttributeFacts.cs"];
m26_163 [label="var worker = CreateWorker()", span="207-207", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="PreserveCultureAttributeFacts.cs"];
m26_164 [label="worker.Execute(_token)", span="210-210", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="PreserveCultureAttributeFacts.cs"];
m26_165 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>()))", span="213-216", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="PreserveCultureAttributeFacts.cs"];
m26_161 [label="var exception = new InvalidOperationException()", span="202-202", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="PreserveCultureAttributeFacts.cs"];
m26_166 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="199-199", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="PreserveCultureAttributeFacts.cs"];
m26_167 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="PreserveCultureAttributeFacts.cs"];
m26_186 [label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22", cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="PreserveCultureAttributeFacts.cs"];
m26_34 [label="Entry Unk.>", span="", cluster="Unk.>", file="PreserveCultureAttributeFacts.cs"];
m26_43 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Method()", span="264-264", cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="PreserveCultureAttributeFacts.cs"];
m26_211 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Method()", span="264-264", cluster="HangFire.Core.Tests.Server.WorkerFacts.Method()", file="PreserveCultureAttributeFacts.cs"];
m26_27 [label="Entry Unk.GetConnection", span="", cluster="Unk.GetConnection", file="PreserveCultureAttributeFacts.cs"];
m26_179 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="220-220", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="PreserveCultureAttributeFacts.cs"];
m26_181 [label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="224-226", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="PreserveCultureAttributeFacts.cs"];
m26_182 [label="var worker = CreateWorker()", span="228-228", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="PreserveCultureAttributeFacts.cs"];
m26_183 [label="worker.Execute(_token)", span="231-231", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="PreserveCultureAttributeFacts.cs"];
m26_184 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>()))", span="234-237", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="PreserveCultureAttributeFacts.cs"];
m26_180 [label="var exception = new InvalidOperationException()", span="223-223", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="PreserveCultureAttributeFacts.cs"];
m26_185 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="220-220", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="PreserveCultureAttributeFacts.cs"];
m26_96 [label="Entry Unk.InSequence", span="", cluster="Unk.InSequence", file="PreserveCultureAttributeFacts.cs"];
m26_77 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDisposesIt()", span="83-83", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDisposesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_78 [label="var worker = CreateWorker()", span="85-85", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDisposesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_79 [label="worker.Execute(_token)", span="87-87", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDisposesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_80 [label="_connection.Verify(\r\n                x => x.FetchNextJob(_context.SharedContext.Queues, _token),\r\n                Times.Once)", span="89-91", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDisposesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_81 [label="_processingJob.Verify(x => x.Dispose())", span="93-93", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDisposesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_82 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDisposesIt()", span="83-83", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndDisposesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_118 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="137-137", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_119 [label="var worker = CreateWorker()", span="139-139", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_120 [label="worker.Execute(_token)", span="141-141", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_121 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName)))", span="143-148", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_122 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="137-137", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_0 [label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="PreserveCultureAttributeFacts.cs"];
m26_1 [label="InSucceededState = true", span="9-9", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", color=green, community=0, file="PreserveCultureAttributeFacts.cs"];
m26_2 [label="Exit HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7", cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="PreserveCultureAttributeFacts.cs"];
m26_3 [label="HangFire.Storage.Monitoring.SucceededJobDto", span="", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_4 [label="_connection = new Mock<IStorageConnection>()", span="31-31", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_5 [label="_storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="33-33", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_6 [label="_processingJob = new Mock<IProcessingJob>()", span="35-35", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_7 [label="_processingJob.Setup(x => x.JobId).Returns(JobId)", span="36-36", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_8 [label="_connection\r\n                .Setup(x => x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>()))\r\n                .Returns(_processingJob.Object)", span="38-40", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_9 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="42-46", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_10 [label="_stateMachine = new Mock<IStateMachine>()", span="48-48", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_11 [label="_context.SharedContext.StateMachineFactory\r\n                .Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="50-52", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_12 [label="_stateMachine.Setup(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())).Returns(true)", span="54-57", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_13 [label="_token = new CancellationToken()", span="59-59", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_14 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="25-25", cluster="HangFire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="PreserveCultureAttributeFacts.cs"];
m26_17 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="PreserveCultureAttributeFacts.cs"];
m26_168 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="PreserveCultureAttributeFacts.cs"];
m26_129 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="152-152", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="PreserveCultureAttributeFacts.cs"];
m26_130 [label="_stateMachine\r\n                .Setup(x => x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>()))\r\n                .Returns(false)", span="155-160", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="PreserveCultureAttributeFacts.cs"];
m26_131 [label="var worker = CreateWorker()", span="162-162", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="PreserveCultureAttributeFacts.cs"];
m26_132 [label="worker.Execute(_token)", span="165-165", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="PreserveCultureAttributeFacts.cs"];
m26_133 [label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="168-170", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="PreserveCultureAttributeFacts.cs"];
m26_134 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="152-152", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="PreserveCultureAttributeFacts.cs"];
m26_61 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="72-72", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_62 [label="var worker = CreateWorker()", span="74-74", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_63 [label="worker.Execute(_token)", span="76-76", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_64 [label="_storage.Verify(x => x.GetConnection(), Times.Once)", span="78-78", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_65 [label="_connection.Verify(x => x.Dispose(), Times.Once)", span="79-79", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_66 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="72-72", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="PreserveCultureAttributeFacts.cs"];
m26_35 [label="Entry Unk.FetchNextJob", span="", cluster="Unk.FetchNextJob", file="PreserveCultureAttributeFacts.cs"];
m26_76 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="PreserveCultureAttributeFacts.cs"];
m26_51 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="PreserveCultureAttributeFacts.cs"];
m26_193 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_32 [label="x.FetchNextJob(_context.SharedContext.Queues, It.IsNotNull<CancellationToken>())", span="39-39", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_45 [label="x.Create(_connection.Object)", span="51-51", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_84 [label="x.FetchNextJob(_context.SharedContext.Queues, _token)", span="90-90", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_113 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.Object.ServerId),\r\n                It.IsAny<string[]>())", span="130-133", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_116 [label="state.ServerName == _context.Object.ServerId", span="132-132", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_24 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_28 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_31 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_33 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_36 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_40 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_44 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_46 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_48 [label="Entry lambda expression", span="54-57", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_70 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_73 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_83 [label="Entry lambda expression", span="90-90", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_85 [label="Exit lambda expression", span="90-90", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_86 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_97 [label="Entry lambda expression", span="101-102", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_100 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_104 [label="Entry lambda expression", span="110-111", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_112 [label="Entry lambda expression", span="130-133", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_114 [label="Exit lambda expression", span="130-133", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_115 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_117 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_123 [label="Entry lambda expression", span="143-148", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_135 [label="Entry lambda expression", span="156-159", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_138 [label="Entry lambda expression", span="169-169", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_146 [label="Entry lambda expression", span="180-182", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_154 [label="Entry lambda expression", span="192-195", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_169 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_172 [label="Entry lambda expression", span="213-216", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_187 [label="Entry lambda expression", span="225-225", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_190 [label="Entry lambda expression", span="234-237", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_203 [label="Entry lambda expression", span="244-244", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_206 [label="Entry lambda expression", span="253-256", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_26 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_25 [label="x.GetConnection()", span="33-33", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_30 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_29 [label="x.JobId", span="36-36", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_49 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>())", span="54-57", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_98 [label="x.TryToChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>())", span="101-102", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_101 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="106-106", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_105 [label="x.TryToChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>())", span="110-111", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_124 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName))", span="143-148", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_136 [label="x.TryToChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>())", span="156-159", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_139 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="169-169", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_147 [label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="180-182", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_155 [label="x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName))", span="192-195", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_173 [label="x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>())", span="213-216", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_170 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="204-204", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_191 [label="x.TryToChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>())", span="234-237", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_188 [label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="225-225", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_207 [label="x.TryToChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>())", span="253-256", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_38 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_37 [label="x.GetJobData(JobId)", span="42-42", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_42 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_41 [label="Method()", span="45-45", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_50 [label="Exit lambda expression", span="54-57", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_72 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_71 [label="x.GetConnection()", span="78-78", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_75 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_74 [label="x.Dispose()", span="79-79", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_88 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_87 [label="x.Dispose()", span="93-93", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_99 [label="Exit lambda expression", span="101-102", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_102 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_106 [label="Exit lambda expression", span="110-111", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_125 [label="Exit lambda expression", span="143-148", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_137 [label="Exit lambda expression", span="156-159", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_140 [label="Exit lambda expression", span="169-169", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_148 [label="Exit lambda expression", span="180-182", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_156 [label="Exit lambda expression", span="192-195", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_176 [label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="215-215", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_171 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_174 [label="Exit lambda expression", span="213-216", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_194 [label="state.Exception == exception && state.Reason == ''hello''", span="236-236", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_189 [label="Exit lambda expression", span="225-225", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_192 [label="Exit lambda expression", span="234-237", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_205 [label="Exit lambda expression", span="244-244", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_204 [label="x.GetJobData(JobId)", span="244-244", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_208 [label="Exit lambda expression", span="253-256", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_58 [label="new Worker(null)", span="66-66", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_57 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_126 [label="Entry lambda expression", span="147-148", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_157 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_175 [label="Entry lambda expression", span="215-215", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_177 [label="Exit lambda expression", span="215-215", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_195 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_59 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_128 [label="Exit lambda expression", span="147-148", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_127 [label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="147-148", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_158 [label="states.Length == 1 && states[0] == ProcessingState.StateName", span="195-195", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_159 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="PreserveCultureAttributeFacts.cs"];
m26_107 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="124-124", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_108 [label="var worker = CreateWorker()", span="126-126", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_109 [label="worker.Execute(_token)", span="128-128", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_110 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerName == _context.Object.ServerId),\r\n                It.IsAny<string[]>()))", span="130-133", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_111 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="124-124", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_60 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="PreserveCultureAttributeFacts.cs"];
m26_178 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="PreserveCultureAttributeFacts.cs"];
m26_67 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="259-259", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="PreserveCultureAttributeFacts.cs"];
m26_209 [label="return new Worker(_context.Object);", span="261-261", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="PreserveCultureAttributeFacts.cs"];
m26_210 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="259-259", cluster="HangFire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="PreserveCultureAttributeFacts.cs"];
m26_69 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="PreserveCultureAttributeFacts.cs"];
m26_52 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="63-63", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m26_53 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new Worker(null))", span="65-66", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m26_54 [label="Assert.Equal(''context'', exception.ParamName)", span="68-68", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m26_55 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="63-63", cluster="HangFire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="PreserveCultureAttributeFacts.cs"];
m26_20 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="PreserveCultureAttributeFacts.cs"];
m26_22 [label="Entry Mock<IStateMachine>.cstr", span="", cluster="Mock<IStateMachine>.cstr", file="PreserveCultureAttributeFacts.cs"];
m26_21 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="PreserveCultureAttributeFacts.cs"];
m26_47 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="PreserveCultureAttributeFacts.cs"];
m26_18 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="PreserveCultureAttributeFacts.cs"];
m26_16 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="PreserveCultureAttributeFacts.cs"];
m26_39 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="PreserveCultureAttributeFacts.cs"];
m26_149 [label="Entry HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="186-186", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_150 [label="var worker = CreateWorker()", span="188-188", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_151 [label="worker.Execute(_token)", span="190-190", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_152 [label="_stateMachine.Verify(x => x.TryToChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName)))", span="192-195", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_153 [label="Exit HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="186-186", cluster="HangFire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="PreserveCultureAttributeFacts.cs"];
m26_212 [label="HangFire.Core.Tests.Server.WorkerFacts", span="", file="PreserveCultureAttributeFacts.cs"];
m26_213 [label=exception, span="", file="PreserveCultureAttributeFacts.cs"];
m26_214 [label=exception, span="", file="PreserveCultureAttributeFacts.cs"];
m27_8 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="RetryAttributeFacts.cs"];
m27_59 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="RetryAttributeFacts.cs"];
m27_35 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="RetryAttributeFacts.cs"];
m27_90 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", span="116-116", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_91 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''0'')", span="118-118", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_93 [label="filter.OnStateElection(_context.Object)", span="121-121", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_94 [label="Assert.IsType<DeletedState>(_context.Object.CandidateState)", span="123-123", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_92 [label="var filter = new AutomaticRetryAttribute { Attempts = 0, OnAttemptsExceeded = AttemptsExceededAction.Delete }", span="119-119", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_95 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", span="116-116", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberIsZeroAndOnAttemptsExceedIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_17 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="RetryAttributeFacts.cs"];
m27_9 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="RetryAttributeFacts.cs"];
m27_21 [label="Entry Unk.>", span="", cluster="Unk.>", file="RetryAttributeFacts.cs"];
m27_16 [label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RetryAttributeFacts.cs"];
m27_11 [label="Entry Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", span="11-11", cluster="Hangfire.Core.Tests.ElectStateContextMock.ElectStateContextMock()", file="RetryAttributeFacts.cs"];
m27_44 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", span="126-126", cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="RetryAttributeFacts.cs"];
m27_99 [label="return new AutomaticRetryAttribute { Attempts = 1 };", span="128-128", cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="RetryAttributeFacts.cs"];
m27_100 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", span="126-126", cluster="Hangfire.Core.Tests.RetryAttributeFacts.CreateFilter()", file="RetryAttributeFacts.cs"];
m27_34 [label="Entry Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="44-44", cluster="Hangfire.AutomaticRetryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="RetryAttributeFacts.cs"];
m27_71 [label="Entry Unk.GetJobParameter", span="", cluster="Unk.GetJobParameter", file="RetryAttributeFacts.cs"];
m27_66 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="RetryAttributeFacts.cs"];
m27_36 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="RetryAttributeFacts.cs"];
m27_38 [label="filter.OnStateElection(_context.Object)", span="61-61", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="RetryAttributeFacts.cs"];
m27_39 [label="Assert.IsType<ScheduledState>(_context.Object.CandidateState)", span="63-63", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="RetryAttributeFacts.cs"];
m27_40 [label="Assert.True(((ScheduledState)_context.Object.CandidateState).EnqueueAt > DateTime.UtcNow)", span="64-64", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="RetryAttributeFacts.cs"];
m27_41 [label="Assert.Contains(''1 of 1'', _context.Object.CandidateState.Reason)", span="65-65", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="RetryAttributeFacts.cs"];
m27_42 [label="_connection.Verify(x => x.SetJobParameter(JobId, ''RetryCount'', ''1''))", span="67-67", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="RetryAttributeFacts.cs"];
m27_37 [label="var filter = CreateFilter()", span="60-60", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="RetryAttributeFacts.cs"];
m27_43 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", span="58-58", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangeStateToScheduled_IfRetryAttemptsWereNotExceeded()", file="RetryAttributeFacts.cs"];
m27_60 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="RetryAttributeFacts.cs"];
m27_61 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="85-85", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="RetryAttributeFacts.cs"];
m27_63 [label="filter.OnStateElection(_context.Object)", span="88-88", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="RetryAttributeFacts.cs"];
m27_64 [label="Assert.Same(_failedState, _context.Object.CandidateState)", span="90-90", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="RetryAttributeFacts.cs"];
m27_62 [label="var filter = CreateFilter()", span="86-86", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="RetryAttributeFacts.cs"];
m27_65 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", span="83-83", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsNumberExceeded()", file="RetryAttributeFacts.cs"];
m27_52 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="RetryAttributeFacts.cs"];
m27_55 [label="_context.CandidateStateValue = state.Object", span="75-75", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="RetryAttributeFacts.cs"];
m27_56 [label="filter.OnStateElection(_context.Object)", span="77-77", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="RetryAttributeFacts.cs"];
m27_57 [label="Assert.Same(state.Object, _context.Object.CandidateState)", span="79-79", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="RetryAttributeFacts.cs"];
m27_54 [label="var state = new Mock<IState>()", span="74-74", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="RetryAttributeFacts.cs"];
m27_53 [label="var filter = CreateFilter()", span="73-73", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="RetryAttributeFacts.cs"];
m27_58 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", span="71-71", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeAnything_IfCandidateStateIsNotFailedState()", file="RetryAttributeFacts.cs"];
m27_29 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="RetryAttributeFacts.cs"];
m27_31 [label="filter.OnStateElection(_context.Object)", span="52-52", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="RetryAttributeFacts.cs"];
m27_32 [label="Assert.Same(_failedState, _context.Object.CandidateState)", span="54-54", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="RetryAttributeFacts.cs"];
m27_30 [label="var filter = new AutomaticRetryAttribute { Attempts = 0 }", span="51-51", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="RetryAttributeFacts.cs"];
m27_33 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", span="49-49", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_DoesNotChangeState_IfRetryAttemptsIsSetToZero()", file="RetryAttributeFacts.cs"];
m27_12 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", span="28-28", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="RetryAttributeFacts.cs"];
m27_13 [label="var filter = new AutomaticRetryAttribute()", span="30-30", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="RetryAttributeFacts.cs"];
m27_14 [label="Assert.Equal(10, filter.Attempts)", span="31-31", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="RetryAttributeFacts.cs"];
m27_15 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", span="28-28", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsPositiveRetryAttemptsNumber_ByDefault()", file="RetryAttributeFacts.cs"];
m27_22 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_48 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_68 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_78 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_87 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_96 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_50 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_49 [label="x.SetJobParameter(JobId, ''RetryCount'', ''1'')", span="67-67", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_70 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_69 [label="x.GetJobParameter(JobId, ''RetryCount'')", span="85-85", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_80 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_79 [label="x.GetJobParameter(JobId, ''RetryCount'')", span="96-96", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_89 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_88 [label="x.GetJobParameter(JobId, ''RetryCount'')", span="107-107", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_98 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_97 [label="x.GetJobParameter(JobId, ''RetryCount'')", span="118-118", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_23 [label="new AutomaticRetryAttribute { Attempts = -1 }", span="38-38", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_24 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="RetryAttributeFacts.cs"];
m27_46 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="RetryAttributeFacts.cs"];
m27_47 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="RetryAttributeFacts.cs"];
m27_81 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", span="105-105", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="RetryAttributeFacts.cs"];
m27_82 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="107-107", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="RetryAttributeFacts.cs"];
m27_84 [label="filter.OnStateElection(_context.Object)", span="110-110", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="RetryAttributeFacts.cs"];
m27_85 [label="Assert.IsType<FailedState>(_context.Object.CandidateState)", span="112-112", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="RetryAttributeFacts.cs"];
m27_83 [label="var filter = new AutomaticRetryAttribute { Attempts = 1, OnAttemptsExceeded = AttemptsExceededAction.Fail }", span="108-108", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="RetryAttributeFacts.cs"];
m27_86 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", span="105-105", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToFailed_IfRetryAttemptsNumberExceededAndOnAttemptsExceedIsSetToFail()", file="RetryAttributeFacts.cs"];
m27_72 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", span="94-94", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_73 [label="_connection.Setup(x => x.GetJobParameter(JobId, ''RetryCount'')).Returns(''1'')", span="96-96", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_75 [label="filter.OnStateElection(_context.Object)", span="99-99", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_76 [label="Assert.IsType<DeletedState>(_context.Object.CandidateState)", span="101-101", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_74 [label="var filter = new AutomaticRetryAttribute { Attempts = 1, OnAttemptsExceeded = AttemptsExceededAction.Delete }", span="97-97", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_77 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", span="94-94", cluster="Hangfire.Core.Tests.RetryAttributeFacts.OnStateElection_ChangesStateToDeleted_IfRetryAttemptsNumberExceededAndOnAttemptsExceededIsSetToDelete()", file="RetryAttributeFacts.cs"];
m27_45 [label="Entry Unk.True", span="", cluster="Unk.True", file="RetryAttributeFacts.cs"];
m27_0 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="16-16", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="RetryAttributeFacts.cs"];
m27_5 [label="_context.ConnectionValue = _connection", span="23-23", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", color=green, community=0, file="RetryAttributeFacts.cs"];
m27_4 [label="_context.StateContextValue.JobIdValue = JobId", span="22-22", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="RetryAttributeFacts.cs"];
m27_6 [label="_context.CandidateStateValue = _failedState", span="24-24", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="RetryAttributeFacts.cs"];
m27_1 [label="_failedState = new FailedState(new InvalidOperationException())", span="18-18", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="RetryAttributeFacts.cs"];
m27_2 [label="_connection = new Mock<IStorageConnection>()", span="19-19", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="RetryAttributeFacts.cs"];
m27_3 [label="_context = new ElectStateContextMock()", span="21-21", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="RetryAttributeFacts.cs"];
m27_7 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", span="16-16", cluster="Hangfire.Core.Tests.RetryAttributeFacts.RetryAttributeFacts()", file="RetryAttributeFacts.cs"];
m27_67 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="RetryAttributeFacts.cs"];
m27_10 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="RetryAttributeFacts.cs"];
m27_51 [label="Entry Unk.SetJobParameter", span="", cluster="Unk.SetJobParameter", file="RetryAttributeFacts.cs"];
m27_18 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", span="35-35", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="RetryAttributeFacts.cs"];
m27_19 [label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new AutomaticRetryAttribute { Attempts = -1 })", span="37-38", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="RetryAttributeFacts.cs"];
m27_20 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", span="35-35", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_ThrowsAnException_WhenAttemptsValueIsNegative()", file="RetryAttributeFacts.cs"];
m27_25 [label="Entry Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", span="42-42", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="RetryAttributeFacts.cs"];
m27_26 [label="var filter = new AutomaticRetryAttribute()", span="44-44", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="RetryAttributeFacts.cs"];
m27_27 [label="Assert.Equal(AttemptsExceededAction.Fail, filter.OnAttemptsExceeded)", span="45-45", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="RetryAttributeFacts.cs"];
m27_28 [label="Exit Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", span="42-42", cluster="Hangfire.Core.Tests.RetryAttributeFacts.Ctor_SetsOnAttemptsExceededAction_ByDefault()", file="RetryAttributeFacts.cs"];
m27_101 [label="Hangfire.Core.Tests.RetryAttributeFacts", span="", file="RetryAttributeFacts.cs"];
m29_35 [label="Entry Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", span="57-57", cluster="Hangfire.Common.JobHelper.ToTimestamp(System.DateTime)", file="SchedulePoller.cs"];
m29_0 [label="Entry Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="34-34", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs"];
m29_1 [label="storage == null", span="39-39", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs"];
m29_3 [label="stateMachineFactory == null", span="40-40", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs"];
m29_5 [label="_storage = storage", span="42-42", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs"];
m29_6 [label="_stateMachineFactory = stateMachineFactory", span="43-43", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs"];
m29_7 [label="_pollInterval = pollInterval", span="44-44", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs"];
m29_2 [label="throw new ArgumentNullException(''storage'');", span="39-39", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs"];
m29_4 [label="throw new ArgumentNullException(''stateMachineFactory'');", span="40-40", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs"];
m29_8 [label="Exit Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", span="34-34", cluster="Hangfire.Server.SchedulePoller.SchedulePoller(Hangfire.JobStorage, Hangfire.States.IStateMachineFactory, System.TimeSpan)", file="SchedulePoller.cs"];
m29_34 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="SchedulePoller.cs"];
m29_20 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SchedulePoller.cs"];
m29_21 [label="Entry Hangfire.Server.SchedulePoller.ToString()", span="66-66", cluster="Hangfire.Server.SchedulePoller.ToString()", file="SchedulePoller.cs"];
m29_22 [label="return ''Schedule Poller'';", span="68-68", cluster="Hangfire.Server.SchedulePoller.ToString()", file="SchedulePoller.cs"];
m29_23 [label="Exit Hangfire.Server.SchedulePoller.ToString()", span="66-66", cluster="Hangfire.Server.SchedulePoller.ToString()", file="SchedulePoller.cs"];
m29_37 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SchedulePoller.cs"];
m29_36 [label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57", cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="SchedulePoller.cs"];
m29_39 [label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="SchedulePoller.cs"];
m29_19 [label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="209-209", cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="SchedulePoller.cs"];
m29_18 [label="Entry Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="71-71", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m29_24 [label="var connection = _storage.GetConnection()", span="73-73", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m29_25 [label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="75-75", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m29_26 [label="var jobId = connection\r\n                    .GetFirstByLowestScoreFromSet(''schedule'', 0, timestamp)", span="78-79", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m29_29 [label="var stateMachine = _stateMachineFactory.Create(connection)", span="86-86", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m29_27 [label="String.IsNullOrEmpty(jobId)", span="81-81", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m29_31 [label="stateMachine.ChangeState(jobId, enqueuedState, new[] { ScheduledState.StateName })", span="92-92", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", color=red, community=0, file="SchedulePoller.cs"];
m29_28 [label="return false;", span="83-83", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m29_30 [label="var enqueuedState = new EnqueuedState\r\n                {\r\n                    Reason = ''Enqueued as a scheduled job''\r\n                }", span="87-90", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m29_32 [label="return true;", span="94-94", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m29_33 [label="Exit Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="71-71", cluster="Hangfire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs"];
m29_40 [label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="22-22", cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="SchedulePoller.cs"];
m29_10 [label="Entry Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m29_11 [label="!EnqueueNextScheduledJob()", span="49-49", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m29_15 [label="cancellationToken.WaitHandle.WaitOne(_pollInterval)", span="57-57", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m29_12 [label="_enqueuedCount != 0", span="51-51", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m29_16 [label="_enqueuedCount++", span="62-62", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m29_13 [label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', _enqueuedCount)", span="53-53", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m29_14 [label="_enqueuedCount = 0", span="54-54", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m29_17 [label="Exit Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", span="47-47", cluster="Hangfire.Server.SchedulePoller.Execute(System.Threading.CancellationToken)", file="SchedulePoller.cs"];
m29_38 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="SchedulePoller.cs"];
m29_41 [label="Hangfire.Server.SchedulePoller", span="", file="SchedulePoller.cs"];
m32_7 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="StateContext.cs"];
m32_0 [label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="24-24", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="StateContext.cs"];
m32_1 [label="String.IsNullOrEmpty(jobId)", span="26-26", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="StateContext.cs", color=green, community=0];
m32_3 [label="JobId = jobId", span="28-28", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="StateContext.cs"];
m32_4 [label="Job = job", span="29-29", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="StateContext.cs"];
m32_5 [label="CreatedAt = createdAt", span="30-30", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="StateContext.cs"];
m32_2 [label="throw new ArgumentNullException(''jobId'');", span="26-26", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="StateContext.cs", color=green, community=0];
m32_6 [label="Exit Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="24-24", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="StateContext.cs"];
m32_9 [label="Entry Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="33-33", cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", file="StateContext.cs"];
m32_10 [label="Exit Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", span="33-33", cluster="Hangfire.States.StateContext.StateContext(Hangfire.States.StateContext)", file="StateContext.cs"];
m32_11 [label="Hangfire.States.StateContext", span="", file="StateContext.cs"];
m33_11 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateContextFacts.cs"];
m33_6 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="StateContextFacts.cs"];
m33_0 [label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="27-27", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateContextFacts.cs"];
m33_1 [label="String.IsNullOrWhiteSpace(serverName)", span="29-29", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateContextFacts.cs"];
m33_3 [label="ServerName = serverName", span="31-31", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateContextFacts.cs"];
m33_2 [label="throw new ArgumentNullException(''serverName'');", span="29-29", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateContextFacts.cs"];
m33_4 [label="StartedAt = DateTime.UtcNow", span="32-32", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateContextFacts.cs"];
m33_5 [label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="27-27", cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StateContextFacts.cs"];
m33_8 [label="Entry HangFire.States.ProcessingState.Serialize()", span="40-40", cluster="HangFire.States.ProcessingState.Serialize()", file="StateContextFacts.cs"];
m33_9 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''StartedAt'', JobHelper.ToStringTimestamp(StartedAt) },\r\n                { ''ServerName'', ServerName }\r\n            };", span="42-46", cluster="HangFire.States.ProcessingState.Serialize()", color=green, community=0, file="StateContextFacts.cs"];
m33_10 [label="Exit HangFire.States.ProcessingState.Serialize()", span="40-40", cluster="HangFire.States.ProcessingState.Serialize()", file="StateContextFacts.cs"];
m33_12 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StateContextFacts.cs"];
m33_13 [label="HangFire.States.ProcessingState", span="", file="StateContextFacts.cs"];
m34_7 [label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0", cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="StateContextMock.cs"];
m34_0 [label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="StateContextMock.cs"];
m34_1 [label="JobIdValue = ''job-id''", span="12-12", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="StateContextMock.cs"];
m34_2 [label="JobValue = Job.FromExpression(() => Console.WriteLine())", span="13-13", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="StateContextMock.cs"];
m34_3 [label="CreatedAtValue = DateTime.UtcNow", span="14-14", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="StateContextMock.cs"];
m34_4 [label="_context = new Lazy<StateContext>(\r\n                () => new StateContext(JobIdValue, JobValue, CreatedAtValue))", span="16-17", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", color=green, community=0, file="StateContextMock.cs"];
m34_5 [label="Exit Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="10-10", cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="StateContextMock.cs"];
m34_15 [label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="24-24", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="StateContextMock.cs"];
m34_11 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="StateContextMock.cs"];
m34_12 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="StateContextMock.cs"];
m34_8 [label="Entry lambda expression", span="13-13", cluster="lambda expression", file="StateContextMock.cs"];
m34_9 [label="Console.WriteLine()", span="13-13", cluster="lambda expression", file="StateContextMock.cs"];
m34_10 [label="Exit lambda expression", span="13-13", cluster="lambda expression", file="StateContextMock.cs"];
m34_13 [label="new StateContext(JobIdValue, JobValue, CreatedAtValue)", span="17-17", cluster="lambda expression", color=green, community=0, file="StateContextMock.cs"];
m34_14 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="StateContextMock.cs"];
m34_6 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateContextMock.cs"];
m34_16 [label="Hangfire.Core.Tests.StateContextMock", span="", file="StateContextMock.cs"];
m35_52 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource, System.Collections.Generic.IEqualityComparer<TSource>)", file="StateMachine.cs"];
m35_9 [label="pager = new Pager(from, perPage, monitor.EnqueuedCount(Queue))\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/queues/'' + Queue)\r\n        }", span="100-103", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs"];
m35_17 [label="WriteLiteral(''                <tr class=\'''')", span="164-164", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", color=red, community=0, file="StateMachine.cs"];
m35_16 [label=enqueuedJobs, span="158-158", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs", color=red, community=0];
m35_18 [label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="169-169", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs", color=red, community=0];
m35_20 [label="Write(Request.LinkTo(''/job/'' + job.Key))", span="179-179", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs"];
m35_19 [label="WriteLiteral(''\''>\r\n                    <td>\r\n                        <a href=\'''')", span="174-174", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs"];
m35_10 [label="enqueuedJobs = monitor\r\n            .EnqueuedJobs(Queue, pager.FromRecord, pager.RecordsPerPage)", span="105-106", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs"];
m35_12 [label="pager.TotalPageCount == 0", span="118-118", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs"];
m35_14 [label="Write(RenderPartial(new PerPageSelector(pager)))", span="138-138", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs", color=red, community=0];
m35_11 [label="WriteLiteral(''\r\n'')", span="113-113", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs"];
m35_13 [label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        The queue is empty.\r\n    </div>\r\n'')", span="124-124", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs"];
m35_15 [label="WriteLiteral(''    <table class=\''table\''>\r\n        <thead>\r\n            <tr>\r\n                <th'' +\r\n''>Id</th>\r\n                <th>Job type</th>\r\n                <th>Enqueued</th>\r\n'' +\r\n''            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="151-153", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs", color=red, community=0];
m35_21 [label="WriteLiteral(''\''>'')", span="184-184", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs"];
m35_0 [label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m35_1 [label="connection == null", span="33-33", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m35_2 [label="throw new ArgumentNullException(''connection'');", span="33-33", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m35_3 [label="stateChangeProcess == null", span="34-34", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m35_4 [label="throw new ArgumentNullException(''stateChangeProcess'');", span="34-34", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m35_5 [label="_connection = connection", span="36-36", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m35_6 [label="_stateChangeProcess = stateChangeProcess", span="37-37", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m35_7 [label="Exit Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachine.cs"];
m35_8 [label="var monitor = JobStorage.Current.GetMonitoringApi()", span="98-98", cluster="HangFire.Web.Pages.EnqueuedJobsPage.Execute()", file="StateMachine.cs"];
m35_37 [label="fromStates != null && !fromStates.Contains(jobData.State, StringComparer.OrdinalIgnoreCase)", span="91-91", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_36 [label="return false;", span="88-88", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_22 [label="Entry System.TimeSpan.FromHours(double)", span="0-0", cluster="System.TimeSpan.FromHours(double)", file="StateMachine.cs"];
m35_23 [label="Entry Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="30-30", cluster="Hangfire.Storage.IStorageConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="StateMachine.cs"];
m35_24 [label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", span="24-24", cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime)", file="StateMachine.cs"];
m35_25 [label="Entry Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="129-129", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_26 [label="Entry Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="64-64", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_27 [label="jobId == null", span="67-67", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_28 [label="throw new ArgumentNullException(''jobId'');", span="67-67", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_29 [label="toState == null", span="68-68", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_30 [label="throw new ArgumentNullException(''toState'');", span="68-68", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_35 [label="jobData == null", span="84-84", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_31 [label="fromStates != null && fromStates.Length == 0", span="69-69", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_32 [label="throw new ArgumentException(''From states array should be null or non-empty.'', ''fromStates'');", span="71-71", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_33 [label="_connection.AcquireDistributedJobLock(jobId, JobLockTimeout)", span="80-80", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", color=green, community=0];
m35_34 [label="var jobData = _connection.GetJobData(jobId)", span="82-82", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_38 [label="return false;", span="93-93", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_54 [label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", span="34-34", cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.JobMethod)", file="StateMachine.cs"];
m35_68 [label="Entry Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", span="22-22", cluster="Hangfire.States.IStateChangeProcess.ElectState(Hangfire.Storage.IStorageConnection, Hangfire.States.ElectStateContext)", file="StateMachine.cs"];
m35_67 [label="Entry Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", span="30-30", cluster="Hangfire.States.ElectStateContext.ElectStateContext(Hangfire.States.StateContext, Hangfire.Storage.IStorageConnection, Hangfire.States.IStateMachine, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_47 [label="return loadSucceeded && stateChanged;", span="125-125", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_48 [label="Exit Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="64-64", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_55 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StateMachine.cs"];
m35_46 [label="var stateChanged = ChangeState(context, toState, jobData.State)", span="123-123", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs", color=green, community=0];
m35_50 [label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89", cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="StateMachine.cs"];
m35_69 [label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", span="24-24", cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string, System.Collections.Generic.IEnumerable<Hangfire.States.IState>)", file="StateMachine.cs"];
m35_44 [label="loadSucceeded = false", span="118-118", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_39 [label="bool loadSucceeded = true", span="96-96", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_41 [label=JobLoadException, span="102-102", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachine.cs"];
m35_77 [label="Entry Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", span="23-23", cluster="Hangfire.States.IStateChangeProcess.ApplyState(Hangfire.Storage.IWriteOnlyTransaction, Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m35_76 [label="Entry Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27", cluster="Hangfire.Storage.IStorageConnection.CreateWriteTransaction()", file="StateMachine.cs"];
m35_51 [label="Entry Unk.Write", span="", cluster="Unk.Write", file="StateMachine.cs"];
m35_45 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="43-43", cluster="HangFire.JobStorage.GetMonitoringApi()", color=green, community=0, file="StateMachine.cs"];
m35_42 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachine.cs"];
m35_40 [label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4", cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="StateMachine.cs"];
m35_43 [label="Entry HttpRequestBase.LinkTo(string)", span="24-24", cluster="HttpRequestBase.LinkTo(string)", file="StateMachine.cs"];
m35_49 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="StateMachine.cs"];
m35_78 [label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54", cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="StateMachine.cs"];
m35_53 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="StateMachine.cs"];
m35_56 [label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6", cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="StateMachine.cs"];
m35_57 [label="HangFire.Web.Pages.EnqueuedJobsPage", span="", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_59 [label="ApplyState(applyStateContext, true)", span="142-142", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_64 [label="ApplyState(applyStateContext, false)", span="158-158", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_58 [label="var applyStateContext = new ApplyStateContext(\r\n                    context,\r\n                    electStateContext.CandidateState,\r\n                    oldStateName,\r\n                    electStateContext.TraversedStates)", span="136-140", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_63 [label="var applyStateContext = new ApplyStateContext(context, failedState, oldStateName, Enumerable.Empty<IState>())", span="154-154", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_60 [label="return true;", span="145-145", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_65 [label="return false;", span="161-161", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_62 [label="var failedState = new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occurred during the transition of job's state''\r\n                }", span="149-152", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_61 [label=Exception, span="147-147", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_66 [label="Exit Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="129-129", cluster="Hangfire.States.StateMachine.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="StateMachine.cs"];
m35_70 [label="Entry Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", span="165-165", cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m35_72 [label="var transaction = _connection.CreateWriteTransaction()", span="167-167", cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m35_73 [label="_stateChangeProcess.ApplyState(transaction, context, useFilters)", span="169-169", cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m35_74 [label="transaction.Commit()", span="171-171", cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m35_75 [label="Exit Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", span="165-165", cluster="Hangfire.States.StateMachine.ApplyState(Hangfire.States.ApplyStateContext, bool)", file="StateMachine.cs"];
m35_71 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateMachine.cs"];
m35_79 [label="Hangfire.States.StateMachine", span="", file="StateMachine.cs"];
m36_9 [label="Entry Hangfire.States.StateHandlerCollection.AddRange(System.Collections.Generic.IEnumerable<Hangfire.States.IStateHandler>)", span="27-27", cluster="Hangfire.States.StateHandlerCollection.AddRange(System.Collections.Generic.IEnumerable<Hangfire.States.IStateHandler>)", file="StateMachineFactory.cs"];
m36_17 [label="Entry Hangfire.States.StateMachineFactory.CreateProcess()", span="42-42", cluster="Hangfire.States.StateMachineFactory.CreateProcess()", file="StateMachineFactory.cs"];
m36_19 [label="return new DefaultStateChangeProcess(_handlers);", span="44-44", cluster="Hangfire.States.StateMachineFactory.CreateProcess()", color=red, community=0, file="StateMachineFactory.cs"];
m36_20 [label="Exit Hangfire.States.StateMachineFactory.CreateProcess()", span="42-42", cluster="Hangfire.States.StateMachineFactory.CreateProcess()", file="StateMachineFactory.cs"];
m36_18 [label="Entry Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", span="31-31", cluster="Hangfire.States.StateMachine.StateMachine(Hangfire.Storage.IStorageConnection, Hangfire.States.IStateChangeProcess)", file="StateMachineFactory.cs"];
m36_21 [label="Entry Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", span="32-32", cluster="Hangfire.States.DefaultStateChangeProcess.DefaultStateChangeProcess(Hangfire.States.StateHandlerCollection)", file="StateMachineFactory.cs"];
m36_8 [label="Entry Hangfire.States.StateHandlerCollection.StateHandlerCollection()", span="22-22", cluster="Hangfire.States.StateHandlerCollection.StateHandlerCollection()", file="StateMachineFactory.cs"];
m36_10 [label="Entry Hangfire.JobStorage.GetStateHandlers()", span="63-63", cluster="Hangfire.JobStorage.GetStateHandlers()", file="StateMachineFactory.cs"];
m36_0 [label="Entry Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs"];
m36_1 [label="storage == null", span="27-27", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs"];
m36_5 [label="_handlers.AddRange(storage.GetStateHandlers())", span="31-31", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", color=green, community=0, file="StateMachineFactory.cs"];
m36_2 [label="throw new ArgumentNullException(''storage'');", span="27-27", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs"];
m36_3 [label="_handlers = new StateHandlerCollection()", span="29-29", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", color=green, community=0, file="StateMachineFactory.cs"];
m36_4 [label="_handlers.AddRange(GlobalStateHandlers.Handlers)", span="30-30", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", color=green, community=0, file="StateMachineFactory.cs"];
m36_6 [label="Exit Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", span="25-25", cluster="Hangfire.States.StateMachineFactory.StateMachineFactory(Hangfire.JobStorage)", file="StateMachineFactory.cs"];
m36_11 [label="Entry Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="34-34", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m36_12 [label="connection == null", span="36-36", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m36_15 [label="return new StateMachine(connection, process);", span="39-39", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StateMachineFactory.cs"];
m36_13 [label="throw new ArgumentNullException(''connection'');", span="36-36", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m36_14 [label="var process = CreateProcess()", span="38-38", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", color=red, community=0, file="StateMachineFactory.cs"];
m36_16 [label="Exit Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="34-34", cluster="Hangfire.States.StateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="StateMachineFactory.cs"];
m36_22 [label="Hangfire.States.StateMachineFactory", span="", file="StateMachineFactory.cs"];
m37_91 [label="Entry Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", span="40-40", cluster="Hangfire.States.StateMachine.CreateJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, Hangfire.States.IState)", file="StateMachineFacts.cs"];
m37_123 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", span="141-141", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m37_124 [label="var stateMachine = CreateStateMachine()", span="143-143", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m37_125 [label="Assert.Equal(JobId, stateMachine.CreateJob(_job, _parameters, _state.Object))", span="144-144", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", color=red, community=0, file="StateMachineFacts.cs"];
m37_126 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", span="141-141", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m37_214 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="265-265", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m37_215 [label="_process.Setup(x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(new Exception())", span="268-269", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", color=red, community=1, file="StateMachineFacts.cs"];
m37_216 [label="var stateMachine = CreateStateMachine()", span="271-271", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m37_217 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="274-274", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", color=red, community=0, file="StateMachineFacts.cs"];
m37_218 [label="_process.Verify(x => x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false))", span="277-277", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", color=red, community=0, file="StateMachineFacts.cs"];
m37_219 [label="Assert.False(result)", span="279-279", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m37_220 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", span="265-265", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenApplyStateThrowsException()", file="StateMachineFacts.cs"];
m37_99 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachineFacts.cs"];
m37_17 [label="var stateMachine = _context.StateMachineFactory.Create(connection)", span="61-61", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_58 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="68-68", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m37_59 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null))", span="70-71", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m37_60 [label="Assert.Equal(''stateChangeProcess'', exception.ParamName)", span="73-73", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m37_61 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", span="68-68", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenStateChangeProcessIsNull()", file="StateMachineFacts.cs"];
m37_247 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="309-309", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m37_248 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new Exception())\r\n                })", span="312-318", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m37_249 [label="_state.Setup(x => x.IgnoreJobLoadException).Returns(true)", span="320-320", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m37_250 [label="var stateMachine = CreateStateMachine()", span="322-322", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m37_251 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="325-325", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", color=red, community=0, file="StateMachineFacts.cs"];
m37_252 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true))", span="328-331", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", color=red, community=1, file="StateMachineFacts.cs"];
m37_253 [label="Assert.True(result)", span="333-333", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", color=red, community=0, file="StateMachineFacts.cs"];
m37_254 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", span="309-309", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheGivenState_IfStateIgnoresThisException_AndMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m37_41 [label="x.GetJobData(JobId)", span="45-45", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_21 [label="IState state", span="77-77", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_53 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StateMachineFacts.cs"];
m37_221 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="StateMachineFacts.cs"];
m37_0 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="StateMachineFacts.cs"];
m37_1 [label="context == null", span="29-29", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", color=red, community=0, file="StateMachineFacts.cs"];
m37_2 [label="throw new ArgumentNullException(''context'');", span="29-29", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="StateMachineFacts.cs"];
m37_3 [label="_context = context", span="31-31", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="StateMachineFacts.cs"];
m37_4 [label="Exit HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", span="27-27", cluster="HangFire.Server.Worker.Worker(HangFire.Server.WorkerContext)", file="StateMachineFacts.cs"];
m37_5 [label="_state.Setup(x => x.Name).Returns(StateName)", span="32-32", cluster="Hangfire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m37_6 [label="Entry HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="StateMachineFacts.cs"];
m37_7 [label="var connection = _context.Storage.GetConnection()", span="36-36", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=red, community=0, file="StateMachineFacts.cs"];
m37_8 [label="var nextJob = connection.FetchNextJob(_context.Queues, cancellationToken)", span="37-37", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", color=red, community=0, file="StateMachineFacts.cs"];
m37_9 [label="ProcessJob(nextJob.JobId, connection, _context.PerformanceProcess)", span="39-39", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="StateMachineFacts.cs"];
m37_10 [label="Exit HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", span="34-34", cluster="HangFire.Server.Worker.Execute(System.Threading.CancellationToken)", file="StateMachineFacts.cs"];
m37_11 [label="Entry HangFire.JobStorage.GetConnection()", span="56-56", cluster="HangFire.JobStorage.GetConnection()", file="StateMachineFacts.cs"];
m37_12 [label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="30-30", cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="StateMachineFacts.cs"];
m37_13 [label="Entry HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="56-56", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_39 [label="Entry Unk.CreateExpiredJob", span="", cluster="Unk.CreateExpiredJob", file="StateMachineFacts.cs"];
m37_295 [label="Entry Unk.ElectState", span="", cluster="Unk.ElectState", file="StateMachineFacts.cs"];
m37_47 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateMachineFacts.cs"];
m37_34 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="StateMachineFacts.cs"];
m37_36 [label="x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="39-43", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_237 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="StateMachineFacts.cs"];
m37_145 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="170-170", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m37_146 [label="var stateMachine = CreateStateMachine()", span="172-172", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m37_147 [label="var exception = Assert.Throws<ArgumentException>(\r\n                () => stateMachine.ChangeState(JobId, _state.Object, new string[0]))", span="174-175", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", color=red, community=0, file="StateMachineFacts.cs"];
m37_148 [label="Assert.Equal(''fromStates'', exception.ParamName)", span="177-177", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m37_149 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", span="170-170", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenFromStatesIsEmpty()", file="StateMachineFacts.cs"];
m37_14 [label="Entry Mock<IStateChangeProcess>.cstr", span="", cluster="Mock<IStateChangeProcess>.cstr", file="StateMachineFacts.cs"];
m37_15 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="148-148", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=green, community=0, file="StateMachineFacts.cs"];
m37_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachineFacts.cs"];
m37_38 [label="Entry HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", span="35-35", cluster="HangFire.Server.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.Job)", file="StateMachineFacts.cs"];
m37_267 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="337-337", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m37_268 [label="var machine = CreateStateMachine()", span="340-340", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", color=red, community=0, file="StateMachineFacts.cs"];
m37_269 [label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="343-343", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", color=red, community=0, file="StateMachineFacts.cs"];
m37_270 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true))", span="346-350", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", color=red, community=1, file="StateMachineFacts.cs"];
m37_272 [label="Assert.True(result)", span="354-354", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m37_271 [label="_transaction.Verify(x => x.Commit())", span="352-352", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", color=red, community=0, file="StateMachineFacts.cs"];
m37_273 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", span="337-337", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_CommitsTheNewState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m37_176 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="210-210", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m37_177 [label="var stateMachine = CreateStateMachine()", span="213-213", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m37_178 [label="stateMachine.ChangeState(JobId, _state.Object, null)", span="216-216", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m37_179 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName),\r\n                true))", span="219-222", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", color=red, community=1, file="StateMachineFacts.cs"];
m37_180 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", span="210-210", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ChangesTheStateOfTheJob_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m37_57 [label="Entry StateMachine.cstr", span="", cluster="StateMachine.cstr", file="StateMachineFacts.cs"];
m37_195 [label="Entry Unk.False", span="", cluster="Unk.False", file="StateMachineFacts.cs"];
m37_83 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="99-99", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m37_84 [label="var stateMachine = CreateStateMachine()", span="101-101", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m37_85 [label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateJob(_job, _parameters, null))", span="103-104", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m37_86 [label="Assert.Equal(''state'', exception.ParamName)", span="106-106", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m37_87 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="99-99", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m37_127 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="148-148", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m37_128 [label="var stateMachine = CreateStateMachine()", span="150-150", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m37_129 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(null, _state.Object, FromOldState))", span="152-153", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m37_130 [label="Assert.Equal(''jobId'', exception.ParamName)", span="155-155", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m37_131 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="148-148", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m37_35 [label="Entry lambda expression", span="39-43", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_49 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m37_50 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _process.Object))", span="61-62", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m37_51 [label="Assert.Equal(''connection'', exception.ParamName)", span="64-64", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m37_52 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="59-59", cluster="Hangfire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m37_111 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", span="127-127", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m37_112 [label="var stateMachine = CreateStateMachine()", span="129-129", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m37_113 [label="stateMachine.CreateJob(_job, _parameters, _state.Object)", span="131-131", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", color=red, community=0, file="StateMachineFacts.cs"];
m37_114 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null),\r\n                true))", span="133-137", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", color=red, community=1, file="StateMachineFacts.cs"];
m37_115 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", span="127-127", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m37_37 [label="Exit lambda expression", span="39-43", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_27 [label=JobPerformanceException, span="90-90", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_135 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="StateMachineFacts.cs"];
m37_144 [label="Entry Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="62-62", cluster="Hangfire.States.StateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="StateMachineFacts.cs"];
m37_153 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", span="181-181", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m37_154 [label="var stateMachine = CreateStateMachine()", span="183-183", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m37_155 [label="stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="185-185", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", color=red, community=0, file="StateMachineFacts.cs"];
m37_156 [label="_distributedLock.Verify(x => x.Dispose())", span="187-187", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m37_157 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", span="181-181", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m37_313 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="StateMachineFacts.cs"];
m37_40 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_70 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="402-402", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs"];
m37_323 [label="return new StateMachine(\r\n                _connection.Object,\r\n                _process.Object);", span="404-406", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", color=red, community=0, file="StateMachineFacts.cs"];
m37_324 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="402-402", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs"];
m37_136 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="159-159", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m37_137 [label="var stateMachine = CreateStateMachine()", span="161-161", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m37_138 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.ChangeState(JobId, null, FromOldState))", span="163-164", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m37_139 [label="Assert.Equal(''toState'', exception.ParamName)", span="166-166", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m37_140 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", span="159-159", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m37_33 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_18 [label="var processingState = new ProcessingState(_context.ServerId)", span="62-62", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_305 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="379-379", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateMachineFacts.cs"];
m37_306 [label="var exception = new NotSupportedException()", span="382-382", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="StateMachineFacts.cs"];
m37_307 [label="_process.Setup(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true))\r\n                .Throws(exception)", span="384-386", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=1, file="StateMachineFacts.cs"];
m37_310 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false))", span="394-397", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=1, file="StateMachineFacts.cs"];
m37_308 [label="var machine = CreateStateMachine()", span="388-388", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="StateMachineFacts.cs"];
m37_309 [label="var result = machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="391-391", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="StateMachineFacts.cs"];
m37_311 [label="Assert.False(result)", span="399-399", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", color=red, community=0, file="StateMachineFacts.cs"];
m37_312 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", span="379-379", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException_AndReturnsFalse()", file="StateMachineFacts.cs"];
m37_161 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="StateMachineFacts.cs"];
m37_222 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="StateMachineFacts.cs"];
m37_92 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", span="110-110", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m37_93 [label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="112-112", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m37_94 [label="_parameters.Add(''Name'', ''Value'')", span="113-113", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m37_96 [label="stateMachine.CreateJob(job, _parameters, _state.Object)", span="117-117", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", color=red, community=0, file="StateMachineFacts.cs"];
m37_97 [label="_connection.Verify(x => x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>()))", span="119-123", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m37_95 [label="var stateMachine = CreateStateMachine()", span="115-115", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m37_98 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", span="110-110", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m37_205 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="247-247", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m37_206 [label="var stateMachine = CreateStateMachine()", span="250-250", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m37_207 [label="var result = stateMachine.ChangeState(\r\n                JobId, _state.Object, new [] { ''AnotherState'' })", span="253-254", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", color=red, community=1, file="StateMachineFacts.cs"];
m37_208 [label="Assert.False(result)", span="257-257", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m37_209 [label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="259-261", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", color=red, community=1, file="StateMachineFacts.cs"];
m37_210 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="247-247", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m37_75 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", span="88-88", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m37_76 [label="var stateMachine = CreateStateMachine()", span="90-90", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m37_77 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateJob(_job, null, _state.Object))", span="92-93", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m37_78 [label="Assert.Equal(''parameters'', exception.ParamName)", span="95-95", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m37_79 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", span="88-88", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m37_48 [label="Entry Unk.AcquireDistributedLock", span="", cluster="Unk.AcquireDistributedLock", file="StateMachineFacts.cs"];
m37_65 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="77-77", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m37_66 [label="var stateMachine = CreateStateMachine()", span="79-79", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m37_67 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateJob(null, _parameters, _state.Object))", span="81-82", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", color=red, community=0, file="StateMachineFacts.cs"];
m37_68 [label="Assert.Equal(''job'', exception.ParamName)", span="84-84", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m37_69 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="77-77", cluster="Hangfire.Core.Tests.States.StateMachineFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m37_23 [label="jobData.EnsureLoaded()", span="82-82", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_162 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="191-191", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m37_163 [label="var stateMachine = CreateStateMachine()", span="194-194", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m37_164 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="197-197", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", color=red, community=0, file="StateMachineFacts.cs"];
m37_165 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName),\r\n                true))", span="200-204", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", color=red, community=1, file="StateMachineFacts.cs"];
m37_166 [label="Assert.True(result)", span="206-206", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m37_167 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", span="191-191", cluster="Hangfire.Core.Tests.States.StateMachineFacts.TryToChangeState_ChangesTheStateOfTheJob()", file="StateMachineFacts.cs"];
m37_320 [label="Entry lambda expression", span="396-396", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_24 [label="var performContext = new PerformContext(_context, connection, jobId, jobData.Job)", span="84-84", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_28 [label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="92-95", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_31 [label="stateMachine.TryToChangeState(jobId, state, new[] { ProcessingState.StateName })", span="107-107", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs", color=green, community=0];
m37_44 [label="Entry lambda expression", span="54-54", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_25 [label="process.Run(performContext, jobData.Job)", span="86-86", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_26 [label="state = new SucceededState()", span="88-88", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_29 [label=Exception, span="97-97", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_30 [label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal HangFire Server exception occurred. Please, report it to HangFire developers.''\r\n                }", span="99-102", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs", color=green, community=0];
m37_32 [label="Exit HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", span="56-56", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", color=red, community=0, file="StateMachineFacts.cs"];
m37_42 [label="HangFire.Server.Worker", span="", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_45 [label="x.AcquireDistributedLock(String.Format(''job:{0}:state-lock'', JobId), It.IsAny<TimeSpan>())", span="54-54", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_46 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_54 [label="Entry lambda expression", span="62-62", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_55 [label="new StateMachine(null, _process.Object)", span="62-62", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_56 [label="Exit lambda expression", span="62-62", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_62 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_63 [label="new StateMachine(_connection.Object, null)", span="71-71", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_64 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_72 [label="stateMachine.CreateJob(null, _parameters, _state.Object)", span="82-82", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_71 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_73 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_81 [label="stateMachine.CreateJob(_job, null, _state.Object)", span="93-93", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_80 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_82 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_89 [label="stateMachine.CreateJob(_job, _parameters, null)", span="104-104", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_88 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_90 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_101 [label="Entry lambda expression", span="112-112", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_106 [label="x.CreateExpiredJob(\r\n				job,\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<DateTime>(),\r\n                It.IsAny<TimeSpan>())", span="119-123", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_105 [label="Entry lambda expression", span="119-123", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_102 [label="Console.WriteLine(''SomeString'')", span="112-112", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_103 [label="Exit lambda expression", span="112-112", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_107 [label="Exit lambda expression", span="119-123", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_108 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_109 [label="d[''Name''] == ''Value''", span="121-121", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_110 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_116 [label="Entry lambda expression", span="133-137", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_117 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null),\r\n                true)", span="133-137", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_118 [label="Exit lambda expression", span="133-137", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_120 [label="Entry lambda expression", span="135-136", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_121 [label="sc.JobId == JobId && sc.Job == _job\r\n                    && sc.NewState == _state.Object && sc.OldStateName == null", span="135-136", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_122 [label="Exit lambda expression", span="135-136", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_133 [label="stateMachine.ChangeState(null, _state.Object, FromOldState)", span="153-153", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_132 [label="Entry lambda expression", span="153-153", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_134 [label="Exit lambda expression", span="153-153", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_142 [label="stateMachine.ChangeState(JobId, null, FromOldState)", span="164-164", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_141 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_143 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_151 [label="stateMachine.ChangeState(JobId, _state.Object, new string[0])", span="175-175", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_150 [label="Entry lambda expression", span="175-175", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_152 [label="Exit lambda expression", span="175-175", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_158 [label="Entry lambda expression", span="187-187", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_159 [label="x.Dispose()", span="187-187", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_160 [label="Exit lambda expression", span="187-187", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_169 [label="Entry lambda expression", span="200-204", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_170 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(sc => sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName),\r\n                true)", span="200-204", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_171 [label="Exit lambda expression", span="200-204", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_172 [label="Entry lambda expression", span="202-203", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_173 [label="sc.JobId == JobId && sc.Job.Type.Name.Equals(''Console'')\r\n                    && sc.NewState == _state.Object && sc.OldStateName == OldStateName", span="202-203", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_174 [label="Exit lambda expression", span="202-203", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_181 [label="Entry lambda expression", span="219-222", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_182 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName),\r\n                true)", span="219-222", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_183 [label="Exit lambda expression", span="219-222", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_184 [label="Entry lambda expression", span="221-221", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_185 [label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName", span="221-221", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_186 [label="Exit lambda expression", span="221-221", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_196 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_199 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_202 [label="Entry lambda expression", span="242-242", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_197 [label="x.GetJobData(It.IsAny<string>())", span="229-229", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_198 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_200 [label="x.GetJobData(JobId)", span="239-239", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_201 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_203 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="242-242", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_204 [label="Exit lambda expression", span="242-242", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_211 [label="Entry lambda expression", span="260-260", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_212 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>())", span="260-260", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_213 [label="Exit lambda expression", span="260-260", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_223 [label="Entry lambda expression", span="268-268", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_226 [label="Entry lambda expression", span="277-277", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_224 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="268-268", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_225 [label="Exit lambda expression", span="268-268", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_227 [label="x.ApplyState(_transaction.Object, It.IsNotNull<ApplyStateContext>(), false)", span="277-277", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_228 [label="Exit lambda expression", span="277-277", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_238 [label="Entry lambda expression", span="286-286", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_241 [label="Entry lambda expression", span="300-303", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_239 [label="x.GetJobData(JobId)", span="286-286", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_240 [label="Exit lambda expression", span="286-286", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_242 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true)", span="300-303", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_243 [label="Exit lambda expression", span="300-303", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_244 [label="Entry lambda expression", span="302-302", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_245 [label="ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState", span="302-302", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_246 [label="Exit lambda expression", span="302-302", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_255 [label="Entry lambda expression", span="312-312", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_258 [label="Entry lambda expression", span="320-320", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_261 [label="Entry lambda expression", span="328-331", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_256 [label="x.GetJobData(JobId)", span="312-312", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_257 [label="Exit lambda expression", span="312-312", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_259 [label="x.IgnoreJobLoadException", span="320-320", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_260 [label="Exit lambda expression", span="320-320", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_262 [label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object),\r\n                true)", span="328-331", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_263 [label="Exit lambda expression", span="328-331", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_264 [label="Entry lambda expression", span="330-330", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_265 [label="ctx.NewState == _state.Object", span="330-330", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_266 [label="Exit lambda expression", span="330-330", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_274 [label="Entry lambda expression", span="346-350", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_280 [label="Entry lambda expression", span="352-352", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_275 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId),\r\n                true)", span="346-350", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_276 [label="Exit lambda expression", span="346-350", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_277 [label="Entry lambda expression", span="348-349", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_278 [label="ctx.NewState == _state.Object && ctx.OldStateName == OldStateName\r\n                    && ctx.Job == _job && ctx.JobId == JobId", span="348-349", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_279 [label="Exit lambda expression", span="348-349", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_281 [label="x.Commit()", span="352-352", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_282 [label="Exit lambda expression", span="352-352", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_297 [label="context.CandidateState = anotherState.Object", span="364-364", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_300 [label="x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true)", span="372-375", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_303 [label="ctx.NewState == anotherState.Object", span="374-374", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_292 [label="Entry lambda expression", span="363-363", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_296 [label="Entry lambda expression", span="364-364", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_299 [label="Entry lambda expression", span="372-375", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_293 [label="x.ElectState(_connection.Object, It.IsAny<ElectStateContext>())", span="363-363", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_294 [label="Exit lambda expression", span="363-363", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_298 [label="Exit lambda expression", span="364-364", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_301 [label="Exit lambda expression", span="372-375", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_302 [label="Entry lambda expression", span="374-374", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_304 [label="Exit lambda expression", span="374-374", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_318 [label="x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception),\r\n                false)", span="394-397", cluster="lambda expression", color=red, community=1, file="StateMachineFacts.cs"];
m37_321 [label="ctx.NewState is FailedState && ((FailedState)ctx.NewState).Exception == exception", span="396-396", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_314 [label="Entry lambda expression", span="385-385", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_317 [label="Entry lambda expression", span="394-397", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_315 [label="x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), true)", span="385-385", cluster="lambda expression", color=red, community=0, file="StateMachineFacts.cs"];
m37_316 [label="Exit lambda expression", span="385-385", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_319 [label="Exit lambda expression", span="394-397", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_322 [label="Exit lambda expression", span="396-396", cluster="lambda expression", file="StateMachineFacts.cs"];
m37_22 [label="var jobData = connection.GetJobData(jobId)", span="81-81", cluster="HangFire.Server.Worker.ProcessJob(string, HangFire.Storage.IStorageConnection, HangFire.Server.IJobPerformanceProcess)", file="StateMachineFacts.cs"];
m37_284 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="358-358", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateMachineFacts.cs"];
m37_285 [label="var anotherState = new Mock<IState>()", span="361-361", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="StateMachineFacts.cs"];
m37_286 [label="_process.Setup(x => x.ElectState(_connection.Object, It.IsAny<ElectStateContext>()))\r\n                .Callback((IStorageConnection connection, ElectStateContext context) => context.CandidateState = anotherState.Object)", span="363-364", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=1, file="StateMachineFacts.cs"];
m37_289 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object, \r\n                It.Is<ApplyStateContext>(ctx => ctx.NewState == anotherState.Object),\r\n                true))", span="372-375", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=1, file="StateMachineFacts.cs"];
m37_287 [label="var machine = CreateStateMachine()", span="366-366", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="StateMachineFacts.cs"];
m37_288 [label="machine.ChangeState(JobId, _state.Object, new[] { OldStateName })", span="369-369", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", color=red, community=0, file="StateMachineFacts.cs"];
m37_290 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", span="358-358", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_SetsAnotherState_WhenItWasElected()", file="StateMachineFacts.cs"];
m37_100 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StateMachineFacts.cs"];
m37_229 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="283-283", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m37_230 [label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    State = OldStateName,\r\n                    Job = null,\r\n                    LoadException = new JobLoadException(''asd'', new InvalidOperationException())\r\n                })", span="286-292", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m37_231 [label="var stateMachine = CreateStateMachine()", span="294-294", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m37_232 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="297-297", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", color=red, community=0, file="StateMachineFacts.cs"];
m37_233 [label="_process.Verify(x => x.ApplyState(\r\n                _transaction.Object,\r\n                It.Is<ApplyStateContext>(ctx => ctx.JobId == JobId && ctx.Job == null && ctx.NewState is FailedState),\r\n                true))", span="300-303", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", color=red, community=1, file="StateMachineFacts.cs"];
m37_234 [label="Assert.False(result)", span="305-305", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m37_235 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="283-283", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m37_283 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StateMachineFacts.cs"];
m37_19 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", color=green, community=0, file="StateMachineFacts.cs"];
m37_20 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="StateMachineFacts.cs"];
m37_168 [label="Entry Unk.True", span="", cluster="Unk.True", file="StateMachineFacts.cs"];
m37_175 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="StateMachineFacts.cs"];
m37_187 [label="Entry Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="226-226", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m37_188 [label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="229-230", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m37_189 [label="var stateMachine = CreateStateMachine()", span="232-232", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m37_190 [label="var result = stateMachine.ChangeState(JobId, _state.Object, FromOldState)", span="235-235", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", color=red, community=0, file="StateMachineFacts.cs"];
m37_191 [label="Assert.False(result)", span="238-238", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m37_192 [label="_connection.Verify(x => x.GetJobData(JobId))", span="239-239", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m37_193 [label="_process.Verify(\r\n                x => x.ApplyState(It.IsAny<IWriteOnlyTransaction>(), It.IsAny<ApplyStateContext>(), It.IsAny<bool>()),\r\n                Times.Never)", span="241-243", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", color=red, community=1, file="StateMachineFacts.cs"];
m37_194 [label="Exit Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", span="226-226", cluster="Hangfire.Core.Tests.States.StateMachineFacts.ChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m37_236 [label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="33-33", cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="StateMachineFacts.cs"];
m37_291 [label="Entry Unk.Callback", span="", cluster="Unk.Callback", file="StateMachineFacts.cs"];
m37_74 [label="Entry Unk.CreateJob", span="", cluster="Unk.CreateJob", file="StateMachineFacts.cs"];
m37_104 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="StateMachineFacts.cs"];
m37_43 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="StateMachineFacts.cs"];
m37_119 [label="Entry Unk.ApplyState", span="", cluster="Unk.ApplyState", file="StateMachineFacts.cs"];
m37_325 [label="Hangfire.Core.Tests.States.StateMachineFacts", span="", file="StateMachineFacts.cs"];
m37_326 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m37_327 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m37_328 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m37_329 [label=job, span="", file="StateMachineFacts.cs"];
m37_330 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m37_331 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m37_332 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m37_333 [label=anotherState, span="", file="StateMachineFacts.cs"];
m37_334 [label=exception, span="", file="StateMachineFacts.cs"];
m38_56 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="StatisticsHistoryAttributeFacts.cs"];
m38_33 [label="Entry Hangfire.StatisticsHistoryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", span="30-30", cluster="Hangfire.StatisticsHistoryAttribute.OnStateElection(Hangfire.States.ElectStateContext)", file="StatisticsHistoryAttributeFacts.cs"];
m38_74 [label="Entry System.DateTime.ToString(string)", span="0-0", cluster="System.DateTime.ToString(string)", file="StatisticsHistoryAttributeFacts.cs"];
m38_12 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="StatisticsHistoryAttributeFacts.cs"];
m38_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="StatisticsHistoryAttributeFacts.cs"];
m38_27 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", span="39-39", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m38_28 [label="_filter.OnStateElection(_context.Object)", span="41-41", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m38_29 [label="_connection.Verify(x => x.CreateWriteTransaction(), Times.Once)", span="43-43", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m38_30 [label="_transaction.Verify(x => x.Dispose(), Times.Once)", span="44-44", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m38_31 [label="_transaction.Verify(x => x.Commit())", span="45-45", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m38_32 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", span="39-39", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_WithinTransaction()", file="StatisticsHistoryAttributeFacts.cs"];
m38_0 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", span="15-15", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m38_3 [label="_context.ConnectionValue = _connection", span="20-20", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", color=red, community=0, file="StatisticsHistoryAttributeFacts.cs"];
m38_2 [label="_context = new ElectStateContextMock()", span="19-19", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m38_1 [label="_connection = new Mock<IStorageConnection>()", span="17-17", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m38_4 [label="_context.CandidateStateValue = new SucceededState(null, 11, 123)", span="21-21", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m38_58 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", span="67-67", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_59 [label="_context.CandidateStateValue = new ProcessingState(''server'', 1)", span="69-69", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_60 [label="_filter.OnStateElection(_context.Object)", span="71-71", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_61 [label="_connection.Verify(x => x.CreateWriteTransaction(), Times.Never)", span="73-73", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_62 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", span="67-67", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_DoesNotCreateTransaction_ForUnsuitableState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_57 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="StatisticsHistoryAttributeFacts.cs"];
m38_80 [label="Entry Unk.>", span="", cluster="Unk.>", file="StatisticsHistoryAttributeFacts.cs"];
m38_5 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m38_6 [label="_connection.Setup(x => x.CreateWriteTransaction()).Returns(_transaction.Object)", span="24-24", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m38_7 [label="_filter = new StatisticsHistoryAttribute()", span="26-26", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m38_8 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", span="15-15", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryAttributeFacts()", file="StatisticsHistoryAttributeFacts.cs"];
m38_20 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", span="30-30", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", file="StatisticsHistoryAttributeFacts.cs"];
m38_21 [label="var statisticsHistoryFilter = new StatisticsHistoryAttribute()", span="32-32", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", file="StatisticsHistoryAttributeFacts.cs"];
m38_22 [label="var retryFilter = new AutomaticRetryAttribute()", span="33-33", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", file="StatisticsHistoryAttributeFacts.cs"];
m38_23 [label="Assert.True(statisticsHistoryFilter.Order > retryFilter.Order)", span="35-35", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", file="StatisticsHistoryAttributeFacts.cs"];
m38_24 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", span="30-30", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.StatisticsHistoryFilter_ActsBefore_RetryFilter()", file="StatisticsHistoryAttributeFacts.cs"];
m38_11 [label="HangFire.Dashboard.CombinedResourceDispatcher", span="", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="StatisticsHistoryAttributeFacts.cs"];
m38_25 [label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="20-20", cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="StatisticsHistoryAttributeFacts.cs"];
m38_10 [label="Entry HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", span="46-46", cluster="HangFire.Dashboard.EmbeddedResourceDispatcher.WriteResource(IOwinResponse, System.Reflection.Assembly, string)", file="StatisticsHistoryAttributeFacts.cs"];
m38_75 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="StatisticsHistoryAttributeFacts.cs"];
m38_15 [label="Entry Hangfire.StatisticsHistoryAttribute.StatisticsHistoryAttribute()", span="25-25", cluster="Hangfire.StatisticsHistoryAttribute.StatisticsHistoryAttribute()", file="StatisticsHistoryAttributeFacts.cs"];
m38_13 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StatisticsHistoryAttributeFacts.cs"];
m38_41 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="StatisticsHistoryAttributeFacts.cs"];
m38_81 [label="Entry Unk.IncrementCounter", span="", cluster="Unk.IncrementCounter", file="StatisticsHistoryAttributeFacts.cs"];
m38_92 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_16 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_17 [label="x.CreateWriteTransaction()", span="24-24", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_18 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_35 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_38 [label="Entry lambda expression", span="44-44", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_42 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_36 [label="x.CreateWriteTransaction()", span="43-43", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_37 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_39 [label="x.Dispose()", span="44-44", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_40 [label="Exit lambda expression", span="44-44", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_43 [label="x.Commit()", span="45-45", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_44 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_64 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_65 [label="x.CreateWriteTransaction()", span="73-73", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_66 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_78 [label="x.IncrementCounter(\r\n                It.Is<string>(key => key == prefix + thisDay || key == prefix + prevDay),\r\n                It.Is<TimeSpan>(expire => expire.TotalDays >= 28))", span="84-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_83 [label="key == prefix + thisDay || key == prefix + prevDay", span="85-85", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_89 [label="x.IncrementCounter(\r\n                It.Is<string>(date => date == prefix + thisHour || date == prefix + prevHour),\r\n                TimeSpan.FromDays(1))", span="88-90", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_93 [label="date == prefix + thisHour || date == prefix + prevHour", span="89-89", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_77 [label="Entry lambda expression", span="84-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_88 [label="Entry lambda expression", span="88-90", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_79 [label="Exit lambda expression", span="84-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_82 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_85 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_84 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_86 [label="expire.TotalDays >= 28", span="86-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_87 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_90 [label="Exit lambda expression", span="88-90", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_94 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="StatisticsHistoryAttributeFacts.cs"];
m38_34 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StatisticsHistoryAttributeFacts.cs"];
m38_50 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", span="76-76", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m38_67 [label="var thisDay = DateTime.UtcNow.ToString(''yyyy-MM-dd'')", span="78-78", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m38_71 [label="_transaction.Verify(x => x.IncrementCounter(\r\n                It.Is<string>(key => key == prefix + thisDay || key == prefix + prevDay),\r\n                It.Is<TimeSpan>(expire => expire.TotalDays >= 28)))", span="84-86", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m38_72 [label="_transaction.Verify(x => x.IncrementCounter(\r\n                It.Is<string>(date => date == prefix + thisHour || date == prefix + prevHour),\r\n                TimeSpan.FromDays(1)))", span="88-90", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m38_68 [label="var prevDay = DateTime.UtcNow.AddDays(-1).ToString(''yyyy-MM-dd'')", span="79-79", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m38_69 [label="var thisHour = DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')", span="81-81", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m38_70 [label="var prevHour = DateTime.UtcNow.AddHours(1).ToString(''yyyy-MM-dd-HH'')", span="82-82", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m38_73 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", span="76-76", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.VerifyCountersIncremented(string)", file="StatisticsHistoryAttributeFacts.cs"];
m38_76 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="StatisticsHistoryAttributeFacts.cs"];
m38_45 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StatisticsHistoryAttributeFacts.cs"];
m38_19 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="StatisticsHistoryAttributeFacts.cs"];
m38_26 [label="Entry Unk.True", span="", cluster="Unk.True", file="StatisticsHistoryAttributeFacts.cs"];
m38_51 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", span="57-57", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_52 [label="_context.CandidateStateValue = new FailedState(new InvalidOperationException())", span="59-59", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_53 [label="_filter.OnStateElection(_context.Object)", span="61-61", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_54 [label="VerifyCountersIncremented(''stats:failed:'')", span="63-63", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_55 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", span="57-57", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForFailedState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_14 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StatisticsHistoryAttributeFacts.cs"];
m38_46 [label="Entry Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", span="49-49", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_47 [label="_filter.OnStateElection(_context.Object)", span="51-51", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_48 [label="VerifyCountersIncremented(''stats:succeeded:'')", span="53-53", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_49 [label="Exit Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", span="49-49", cluster="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts.OnStateElection_IncrementsCounters_ForSucceededState()", file="StatisticsHistoryAttributeFacts.cs"];
m38_63 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27", cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="StatisticsHistoryAttributeFacts.cs"];
m38_95 [label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts", span="", file="StatisticsHistoryAttributeFacts.cs"];
m38_96 [label=string, span="", file="StatisticsHistoryAttributeFacts.cs"];
m38_97 [label=thisDay, span="", file="StatisticsHistoryAttributeFacts.cs"];
m38_98 [label=prevDay, span="", file="StatisticsHistoryAttributeFacts.cs"];
m38_99 [label=thisHour, span="", file="StatisticsHistoryAttributeFacts.cs"];
m38_100 [label=prevHour, span="", file="StatisticsHistoryAttributeFacts.cs"];
m39_38 [label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55", cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="StorageConnectionExtensions.cs"];
m39_44 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="StorageConnectionExtensions.cs"];
m39_9 [label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28", cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="StorageConnectionExtensions.cs"];
m39_37 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="StorageConnectionExtensions.cs"];
m39_43 [label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40", cluster="Hangfire.Storage.InvocationData.Deserialize()", file="StorageConnectionExtensions.cs"];
m39_47 [label="Entry Hangfire.Storage.IStorageConnection.GetStateData(string)", span="45-45", cluster="Hangfire.Storage.IStorageConnection.GetStateData(string)", file="StorageConnectionExtensions.cs"];
m39_42 [label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39", cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="StorageConnectionExtensions.cs"];
m39_0 [label="Entry Hangfire.Storage.StorageConnectionExtensions.AcquireDistributedJobLock(Hangfire.Storage.IStorageConnection, string, System.TimeSpan)", span="25-25", cluster="Hangfire.Storage.StorageConnectionExtensions.AcquireDistributedJobLock(Hangfire.Storage.IStorageConnection, string, System.TimeSpan)", file="StorageConnectionExtensions.cs"];
m39_1 [label="connection == null", span="30-30", cluster="Hangfire.Storage.StorageConnectionExtensions.AcquireDistributedJobLock(Hangfire.Storage.IStorageConnection, string, System.TimeSpan)", color=red, community=0, file="StorageConnectionExtensions.cs"];
m39_3 [label="jobId == null", span="31-31", cluster="Hangfire.Storage.StorageConnectionExtensions.AcquireDistributedJobLock(Hangfire.Storage.IStorageConnection, string, System.TimeSpan)", color=red, community=0, file="StorageConnectionExtensions.cs"];
m39_5 [label="return connection.AcquireDistributedLock(\r\n                String.Format(''job:{0}:state-lock'', jobId),\r\n                timeout);", span="33-35", cluster="Hangfire.Storage.StorageConnectionExtensions.AcquireDistributedJobLock(Hangfire.Storage.IStorageConnection, string, System.TimeSpan)", color=red, community=1, file="StorageConnectionExtensions.cs"];
m39_2 [label="throw new ArgumentNullException(''connection'');", span="30-30", cluster="Hangfire.Storage.StorageConnectionExtensions.AcquireDistributedJobLock(Hangfire.Storage.IStorageConnection, string, System.TimeSpan)", color=red, community=0, file="StorageConnectionExtensions.cs"];
m39_4 [label="throw new ArgumentNullException(''jobId'');", span="31-31", cluster="Hangfire.Storage.StorageConnectionExtensions.AcquireDistributedJobLock(Hangfire.Storage.IStorageConnection, string, System.TimeSpan)", color=red, community=0, file="StorageConnectionExtensions.cs"];
m39_6 [label="Exit Hangfire.Storage.StorageConnectionExtensions.AcquireDistributedJobLock(Hangfire.Storage.IStorageConnection, string, System.TimeSpan)", span="25-25", cluster="Hangfire.Storage.StorageConnectionExtensions.AcquireDistributedJobLock(Hangfire.Storage.IStorageConnection, string, System.TimeSpan)", file="StorageConnectionExtensions.cs"];
m39_41 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="StorageConnectionExtensions.cs"];
m39_39 [label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64", cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="StorageConnectionExtensions.cs"];
m39_45 [label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73", cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="StorageConnectionExtensions.cs"];
m39_46 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="StorageConnectionExtensions.cs"];
m39_10 [label="Entry Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="38-38", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_11 [label="connection == null", span="40-40", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_14 [label="var ids = connection.GetAllItemsFromSet(''recurring-jobs'')", span="44-44", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_16 [label="var hash = connection.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', id))", span="48-48", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_29 [label="var stateData = connection.GetStateData(dto.LastJobId)", span="78-78", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_12 [label="throw new ArgumentNullException(''connection'');", span="40-40", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_13 [label="var result = new List<RecurringJobDto>()", span="42-42", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_18 [label="result.Add(new RecurringJobDto { Id = id, Removed = true })", span="52-52", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_34 [label="result.Add(dto)", span="90-90", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_35 [label="return result;", span="93-93", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_15 [label=ids, span="46-46", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_19 [label="var dto = new RecurringJobDto { Id = id }", span="56-56", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_17 [label="hash == null", span="50-50", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_20 [label="dto.Cron = hash[''Cron'']", span="57-57", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_21 [label="var invocationData = JobHelper.FromJson<InvocationData>(hash[''Job''])", span="61-61", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_25 [label="hash.ContainsKey(''NextExecution'')", span="69-69", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_26 [label="dto.NextExecution = JobHelper.DeserializeDateTime(hash[''NextExecution''])", span="71-71", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_27 [label="hash.ContainsKey(''LastJobId'') && !string.IsNullOrWhiteSpace(hash[''LastJobId''])", span="74-74", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_28 [label="dto.LastJobId = hash[''LastJobId'']", span="76-76", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_32 [label="hash.ContainsKey(''LastExecution'')", span="85-85", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_33 [label="dto.LastExecution = JobHelper.DeserializeDateTime(hash[''LastExecution''])", span="87-87", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_22 [label="dto.Job = invocationData.Deserialize()", span="62-62", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_24 [label="dto.LoadException = ex", span="66-66", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_31 [label="dto.LastJobState = stateData.Name", span="81-81", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_23 [label=JobLoadException, span="64-64", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_30 [label="stateData != null", span="79-79", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_36 [label="Exit Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", span="38-38", cluster="Hangfire.Storage.StorageConnectionExtensions.GetRecurringJobs(Hangfire.Storage.IStorageConnection)", file="StorageConnectionExtensions.cs"];
m39_40 [label="Entry Hangfire.Storage.RecurringJobDto.RecurringJobDto()", span="21-21", cluster="Hangfire.Storage.RecurringJobDto.RecurringJobDto()", file="StorageConnectionExtensions.cs"];
m39_8 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StorageConnectionExtensions.cs"];
m40_0 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", span="23-23", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m40_1 [label="Exit Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", span="23-23", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Receive(MessageQueue, System.TimeSpan)", file="StorageConnectionExtensionsFacts.cs"];
m40_2 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", span="25-25", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", file="StorageConnectionExtensionsFacts.cs"];
m40_3 [label="Exit Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", span="25-25", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", file="StorageConnectionExtensionsFacts.cs"];
m40_4 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", span="26-26", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", file="StorageConnectionExtensionsFacts.cs"];
m40_5 [label="Exit Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", span="26-26", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", file="StorageConnectionExtensionsFacts.cs"];
m41_22 [label="Entry Hangfire.Server.Worker.ToString()", span="66-66", cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs"];
m41_23 [label="return ''Worker #'' + _context.WorkerNumber;", span="68-68", cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs"];
m41_24 [label="Exit Hangfire.Server.Worker.ToString()", span="66-66", cluster="Hangfire.Server.Worker.ToString()", file="Worker.cs"];
m41_6 [label="Entry Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="35-35", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_7 [label="var connection = _context.Storage.GetConnection()", span="37-37", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_8 [label="var fetchedJob = connection.FetchNextJob(_context.Queues, cancellationToken)", span="38-38", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_9 [label="ProcessJob(fetchedJob.JobId, connection, _context.PerformanceProcess, cancellationToken)", span="42-42", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_10 [label="fetchedJob.RemoveFromQueue()", span="49-49", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_12 [label="fetchedJob.RemoveFromQueue()", span="56-56", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_14 [label="fetchedJob.Requeue()", span="60-60", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_11 [label=JobAbortedException, span="54-54", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_13 [label=Exception, span="58-58", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_15 [label="throw;", span="61-61", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_16 [label="Exit Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="35-35", cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="Worker.cs"];
m41_54 [label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0", cluster="System.Diagnostics.Stopwatch.StartNew()", file="Worker.cs"];
m41_58 [label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26", cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="Worker.cs"];
m41_17 [label="Entry Hangfire.JobStorage.GetConnection()", span="56-56", cluster="Hangfire.JobStorage.GetConnection()", file="Worker.cs"];
m41_47 [label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22", cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="Worker.cs"];
m41_56 [label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0", cluster="System.Diagnostics.Stopwatch.Stop()", file="Worker.cs"];
m41_57 [label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="28-28", cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="Worker.cs"];
m41_50 [label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42", cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="Worker.cs"];
m41_52 [label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", span="32-32", cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="Worker.cs"];
m41_20 [label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24", cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="Worker.cs"];
m41_21 [label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25", cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="Worker.cs"];
m41_19 [label="Entry Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", span="71-71", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_25 [label="var stateMachine = _context.StateMachineFactory.Create(connection)", span="77-77", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_27 [label="!stateMachine.ChangeState(\r\n                jobId,\r\n                processingState,\r\n                new[] { EnqueuedState.StateName, ProcessingState.StateName })", span="80-83", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", color=red, community=1, file="Worker.cs"];
m41_30 [label="var jobData = connection.GetJobData(jobId)", span="97-97", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_32 [label="var cancellationToken = new ServerJobCancellationToken(\r\n                    jobId, connection, _context, shutdownToken)", span="100-101", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_33 [label="var performContext = new PerformContext(\r\n                    _context, connection, jobId, jobData.Job, jobData.CreatedAt, cancellationToken)", span="103-104", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_36 [label="var result = process.Run(performContext, jobData.Job)", span="109-109", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_45 [label="stateMachine.ChangeState(jobId, state, new[] { ProcessingState.StateName })", span="135-135", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", color=red, community=0, file="Worker.cs"];
m41_26 [label="var processingState = new ProcessingState(_context.ServerId, _context.WorkerNumber)", span="78-78", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_28 [label="return;", span="85-85", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_29 [label="IState state", span="93-93", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_31 [label="jobData.EnsureLoaded()", span="98-98", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_34 [label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="106-106", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_35 [label="var duration = Stopwatch.StartNew()", span="107-107", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_38 [label="state = new SucceededState(result, (long) latency, duration.ElapsedMilliseconds)", span="112-112", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_37 [label="duration.Stop()", span="110-110", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_39 [label=OperationCanceledException, span="114-114", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_41 [label=JobPerformanceException, span="118-118", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_43 [label=Exception, span="125-125", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_40 [label="throw;", span="116-116", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_42 [label="state = new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                }", span="120-123", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_44 [label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal Hangfire Server exception occurred. Please, report it to Hangfire developers.''\r\n                }", span="127-130", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_46 [label="Exit Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", span="71-71", cluster="Hangfire.Server.Worker.ProcessJob(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.IJobPerformanceProcess, System.Threading.CancellationToken)", file="Worker.cs"];
m41_53 [label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", span="35-35", cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", file="Worker.cs"];
m41_55 [label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="20-20", cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="Worker.cs"];
m41_49 [label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="22-22", cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="Worker.cs"];
m41_18 [label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36", cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="Worker.cs"];
m41_0 [label="Entry Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs"];
m41_1 [label="context == null", span="30-30", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs"];
m41_3 [label="_context = context", span="32-32", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs"];
m41_2 [label="throw new ArgumentNullException(''context'');", span="30-30", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs"];
m41_4 [label="Exit Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", span="28-28", cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext)", file="Worker.cs"];
m41_51 [label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29", cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="Worker.cs"];
m41_48 [label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27", cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="Worker.cs"];
m41_59 [label="Hangfire.Server.Worker", span="", file="Worker.cs"];
m42_29 [label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", span="58-58", cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="WorkerFacts.cs"];
m42_30 [label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId))", span="60-62", cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="WorkerFacts.cs"];
m42_31 [label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", span="58-58", cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="WorkerFacts.cs"];
m42_7 [label="Entry System.DateTime.AddMinutes(double)", span="0-0", cluster="System.DateTime.AddMinutes(double)", file="WorkerFacts.cs"];
m42_10 [label="Entry HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", span="25-25", cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="WorkerFacts.cs"];
m42_11 [label="Given(String.Format(''a job of the '{0}' type'', type))", span="27-27", cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="WorkerFacts.cs"];
m42_12 [label="And(''its state is Scheduled'')", span="28-28", cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="WorkerFacts.cs"];
m42_13 [label="Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddMinutes(-1)))", span="30-33", cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="WorkerFacts.cs"];
m42_14 [label="Exit HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", span="25-25", cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="WorkerFacts.cs"];
m42_32 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="WorkerFacts.cs"];
m42_37 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="WorkerFacts.cs"];
m42_15 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="WorkerFacts.cs"];
m42_34 [label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", span="66-66", cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="WorkerFacts.cs"];
m42_35 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId))", span="68-70", cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="WorkerFacts.cs"];
m42_36 [label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", span="66-66", cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="WorkerFacts.cs"];
m42_6 [label="Entry Unk.And", span="", cluster="Unk.And", file="WorkerFacts.cs"];
m42_26 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", span="21-21", cluster="HangFire.Server.SchedulePoller.SchedulePoller(IRedisClientsManager, System.TimeSpan)", file="WorkerFacts.cs"];
m42_8 [label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="40-40", cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="WorkerFacts.cs"];
m42_27 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="WorkerFacts.cs"];
m42_9 [label="Entry Unk.AddItemToSortedSet", span="", cluster="Unk.AddItemToSortedSet", file="WorkerFacts.cs"];
m42_33 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="WorkerFacts.cs"];
m42_41 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="WorkerFacts.cs"];
m42_22 [label="Entry HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", span="49-49", cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", file="WorkerFacts.cs"];
m42_23 [label="var poller = new SchedulePoller(RedisFactory.BasicManager, TimeSpan.FromSeconds(15))", span="51-51", cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", file="WorkerFacts.cs"];
m42_24 [label="_pollerResult = poller.EnqueueNextScheduledJob()", span="53-53", cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", file="WorkerFacts.cs"];
m42_25 [label="Exit HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", span="49-49", cluster="HangFire.Tests.SchedulePollerSteps.WhenThePollerRuns()", file="WorkerFacts.cs"];
m42_38 [label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", span="74-74", cluster="HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", file="WorkerFacts.cs"];
m42_39 [label="Assert.AreEqual(result, _pollerResult)", span="76-76", cluster="HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", file="WorkerFacts.cs"];
m42_40 [label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", span="74-74", cluster="HangFire.Tests.SchedulePollerSteps.ThenTheSchedulePollerReturns(bool)", file="WorkerFacts.cs"];
m42_21 [label="Entry System.DateTime.AddHours(double)", span="0-0", cluster="System.DateTime.AddHours(double)", file="WorkerFacts.cs"];
m42_16 [label="Entry HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", span="37-37", cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="WorkerFacts.cs"];
m42_17 [label="Given(''a job'')", span="39-39", cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="WorkerFacts.cs"];
m42_18 [label="And(''its state is Scheduled'')", span="40-40", cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="WorkerFacts.cs"];
m42_19 [label="Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddHours(1)))", span="42-45", cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="WorkerFacts.cs"];
m42_20 [label="Exit HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", span="37-37", cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="WorkerFacts.cs"];
m42_5 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="WorkerFacts.cs"];
m42_0 [label="Entry HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", span="13-13", cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="WorkerFacts.cs"];
m42_1 [label="Given(''a job'')", span="15-15", cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="WorkerFacts.cs"];
m42_2 [label="And(''its state is Scheduled'')", span="16-16", cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="WorkerFacts.cs"];
m42_3 [label="Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddMinutes(-1)))", span="18-21", cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="WorkerFacts.cs"];
m42_4 [label="Exit HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", span="13-13", cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="WorkerFacts.cs"];
m42_28 [label="Entry HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", span="29-29", cluster="HangFire.Server.SchedulePoller.EnqueueNextScheduledJob()", file="WorkerFacts.cs"];
m42_42 [label="HangFire.Tests.SchedulePollerSteps", span="", file="WorkerFacts.cs"];
n4 -> n1  [key=1, style=dashed, color=red, label="HangFire.Web.JavaScriptHandler"];
n4 -> n2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.JavaScriptHandler"];
n0 -> n1  [key=0, style=solid, color=red];
n1 -> n2  [key=0, style=solid, color=red];
n2 -> n3  [key=0, style=solid];
n3 -> n0  [key=0, style=bold, color=blue];
d3 -> d4  [key=0, style=solid, color=green];
d3 -> d5  [key=0, style=solid, color=green];
d0 -> d3  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<Hangfire.States.IState>"];
d0 -> d5  [key=1, style=dashed, color=green, label=string];
d0 -> d6  [key=1, style=dashed, color=green, label="Hangfire.States.IState"];
d0 -> d1  [key=0, style=solid];
d0 -> d7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.States.IState>"];
d1 -> d3  [key=0, style=solid, color=green];
d1 -> d2  [key=0, style=solid];
d4 -> d9  [key=0, style=solid, color=green];
d4 -> d10  [key=2, style=dotted, color=green];
d5 -> d6  [key=0, style=solid, color=green];
d12 -> d5  [key=1, style=dashed, color=green, label="Hangfire.States.ApplyStateContext"];
d12 -> d6  [key=1, style=dashed, color=green, label="Hangfire.States.ApplyStateContext"];
d12 -> d7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
d12 -> d8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
d6 -> d7  [key=0, style=solid, color=green];
d7 -> d8  [key=0, style=solid];
d9 -> d0  [key=0, style=bold, color=blue];
d2 -> d9  [key=0, style=solid];
d2 -> d10  [key=2, style=dotted];
d8 -> d9  [key=0, style=solid];
d8 -> d11  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid, color=green];
m0_29 -> m0_8  [key=2, style=dotted, color=green];
m0_29 -> m0_32  [key=1, style=dashed, color=green, label="lambda expression"];
m0_30 -> m0_31  [key=0, style=solid, color=green];
m0_30 -> m0_34  [key=2, style=dotted];
m0_30 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=processingJob];
m0_30 -> m0_23  [key=2, style=dotted, color=green];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_9  [key=2, style=dotted];
m0_31 -> m0_28  [key=0, style=bold, color=blue];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_9  [key=2, style=dotted];
m0_33 -> m0_29  [key=0, style=bold, color=blue];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_35  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_48  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_43  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid, color=red];
m0_23 -> m0_8  [key=2, style=dotted];
m0_23 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_34 -> m0_61  [key=0, style=solid];
m0_34 -> m0_32  [key=0, style=bold, color=blue];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_21  [key=2, style=dotted];
m0_62 -> m0_34  [key=0, style=bold, color=blue];
m0_21 -> m0_18  [key=0, style=bold, color=blue];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_8  [key=2, style=dotted, color=green];
m0_0 -> m0_1  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_7  [key=2, style=dotted, color=green];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_1 -> m0_3  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid, color=red];
m0_4 -> m0_9  [key=2, style=dotted, color=green];
m0_4 -> m0_10  [key=2, style=dotted, color=green];
m0_4 -> m0_15  [key=1, style=dashed, color=green, label="lambda expression"];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid, color=red];
m0_5 -> m0_8  [key=2, style=dotted, color=red];
m0_5 -> m0_10  [key=1, style=dashed, color=red, label="lambda expression"];
m0_35 -> m0_36  [key=0, style=solid, color=red];
m0_22 -> m0_23  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid, color=green];
m0_24 -> m0_9  [key=2, style=dotted, color=red];
m0_25 -> m0_22  [key=0, style=bold, color=blue];
m0_25 -> m0_26  [key=0, style=solid, color=green];
m0_25 -> d0  [key=2, style=dotted, color=green];
m0_14 -> m0_15  [key=0, style=solid, color=red];
m0_15 -> m0_16  [key=0, style=solid, color=green];
m0_15 -> m0_8  [key=2, style=dotted, color=red];
m0_15 -> m0_18  [key=1, style=dashed, color=red, label="lambda expression"];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_16 -> m0_9  [key=2, style=dotted, color=red];
m0_17 -> m0_14  [key=0, style=bold, color=blue];
m0_17 -> m0_15  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label="System.Action<IDbConnection>"];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_67  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_68  [key=2, style=dotted];
m0_66 -> m0_63  [key=0, style=bold, color=blue];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_39  [key=2, style=dotted];
m0_52 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_53 -> m0_50  [key=0, style=bold, color=blue];
m0_36 -> m0_37  [key=0, style=solid, color=red];
m0_36 -> m0_41  [key=1, style=dashed, color=red, label=arrangeSql];
m0_37 -> m0_38  [key=0, style=solid, color=red];
m0_37 -> m0_39  [key=2, style=dotted, color=red];
m0_37 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_37 -> m0_35  [key=2, style=dotted];
m0_37 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=context];
m0_38 -> m0_35  [key=0, style=bold, color=blue];
m0_38 -> m0_23  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid, color=red];
m0_11 -> m0_12  [key=0, style=solid, color=red];
m0_11 -> m0_13  [key=2, style=dotted, color=red];
m0_12 -> m0_10  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid, color=green];
m0_19 -> m0_20  [key=0, style=solid, color=green];
m0_19 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_8  [key=2, style=dotted, color=green];
m0_19 -> m0_24  [key=1, style=dashed, color=green, label="lambda expression"];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_23  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_21  [key=2, style=dotted];
m0_28 -> m0_26  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid, color=green];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_47  [key=2, style=dotted];
m0_41 -> m0_43  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m0_40 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m0_40 -> m0_43  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_13  [key=2, style=dotted];
m0_42 -> m0_36  [key=0, style=bold, color=blue];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_8  [key=2, style=dotted];
m0_44 -> m0_49  [key=2, style=dotted];
m0_44 -> m0_2  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_3  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_19  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_25  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_29  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_44 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ApplyStateContextFacts"];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_9  [key=2, style=dotted];
m0_46 -> m0_40  [key=0, style=bold, color=blue];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_47  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m0_54 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_13  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_8  [key=2, style=dotted];
m0_58 -> m0_49  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_48  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_9  [key=2, style=dotted];
m0_60 -> m0_54  [key=0, style=bold, color=blue];
m0_7 -> m0_4  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_6 -> m0_9  [key=2, style=dotted, color=red];
m0_69 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m0_69 -> m0_15  [key=1, style=dashed, color=red, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m0_69 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m0_69 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m0_69 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m0_69 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m0_69 -> m0_37  [key=1, style=dashed, color=red, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m0_69 -> m0_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m0_69 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.Tests.SqlServerProcessingJobFacts"];
m0_70 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m0_71 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid, color=red];
m1_4 -> m1_5  [key=0, style=solid, color=green];
m1_4 -> m1_9  [key=2, style=dotted, color=red];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_5 -> m1_10  [key=2, style=dotted, color=green];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid, color=green];
m1_12 -> m1_13  [key=0, style=solid, color=green];
m1_12 -> d0  [key=2, style=dotted, color=green];
m1_13 -> m1_11  [key=0, style=bold, color=blue];
m1_15 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_15 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_15 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_15 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_15 -> m1_5  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m1_15 -> m1_12  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.ApplyStateContextMock"];
m2_601 -> m2_602  [key=0, style=solid];
m2_602 -> m2_45  [key=2, style=dotted];
m2_602 -> m2_603  [key=0, style=solid];
m2_602 -> m2_604  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_603 -> m2_601  [key=0, style=bold, color=blue];
m2_789 -> m2_790  [key=0, style=solid];
m2_791 -> m2_792  [key=0, style=solid];
m2_791 -> m2_104  [key=2, style=dotted];
m2_791 -> m2_793  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_790 -> m2_791  [key=0, style=solid];
m2_790 -> m2_794  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_792 -> m2_789  [key=0, style=bold, color=blue];
m2_457 -> m2_458  [key=0, style=solid];
m2_458 -> m2_45  [key=2, style=dotted];
m2_458 -> m2_459  [key=0, style=solid];
m2_458 -> m2_460  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_459 -> m2_457  [key=0, style=bold, color=blue];
m2_343 -> m2_344  [key=0, style=solid];
m2_344 -> m2_45  [key=2, style=dotted];
m2_344 -> m2_345  [key=0, style=solid];
m2_344 -> m2_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_345 -> m2_343  [key=0, style=bold, color=blue];
m2_718 -> m2_719  [key=0, style=solid];
m2_719 -> m2_45  [key=2, style=dotted];
m2_719 -> m2_720  [key=0, style=solid];
m2_719 -> m2_721  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_720 -> m2_718  [key=0, style=bold, color=blue];
m2_646 -> m2_647  [key=0, style=solid];
m2_648 -> m2_649  [key=0, style=solid];
m2_648 -> m2_104  [key=2, style=dotted];
m2_648 -> m2_650  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_647 -> m2_648  [key=0, style=solid];
m2_647 -> m2_651  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_649 -> m2_646  [key=0, style=bold, color=blue];
m2_843 -> m2_844  [key=0, style=solid];
m2_845 -> m2_846  [key=0, style=solid];
m2_845 -> m2_104  [key=2, style=dotted];
m2_845 -> m2_847  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_844 -> m2_845  [key=0, style=solid];
m2_844 -> m2_848  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_846 -> m2_843  [key=0, style=bold, color=blue];
m2_250 -> m2_251  [key=0, style=solid];
m2_251 -> m2_45  [key=2, style=dotted];
m2_251 -> m2_252  [key=0, style=solid];
m2_251 -> m2_253  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_252 -> m2_250  [key=0, style=bold, color=blue];
m2_322 -> m2_323  [key=0, style=solid];
m2_324 -> m2_325  [key=0, style=solid];
m2_324 -> m2_104  [key=2, style=dotted];
m2_324 -> m2_326  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_323 -> m2_324  [key=0, style=solid];
m2_323 -> m2_327  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_325 -> m2_322  [key=0, style=bold, color=blue];
m2_283 -> m2_284  [key=0, style=solid];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_104  [key=2, style=dotted];
m2_285 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_286 -> m2_283  [key=0, style=bold, color=blue];
m2_836 -> m2_837  [key=0, style=solid];
m2_837 -> m2_45  [key=2, style=dotted];
m2_837 -> m2_838  [key=0, style=solid];
m2_837 -> m2_839  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_838 -> m2_836  [key=0, style=bold, color=blue];
m2_188 -> m2_189  [key=0, style=solid];
m2_189 -> m2_45  [key=2, style=dotted];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_190 -> m2_188  [key=0, style=bold, color=blue];
m2_862 -> m2_863  [key=0, style=solid];
m2_863 -> m2_45  [key=2, style=dotted];
m2_863 -> m2_864  [key=0, style=solid];
m2_863 -> m2_865  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_864 -> m2_862  [key=0, style=bold, color=blue];
m2_698 -> m2_699  [key=0, style=solid];
m2_700 -> m2_701  [key=0, style=solid];
m2_700 -> m2_104  [key=2, style=dotted];
m2_700 -> m2_702  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_699 -> m2_700  [key=0, style=solid];
m2_699 -> m2_703  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_701 -> m2_698  [key=0, style=bold, color=blue];
m2_260 -> m2_261  [key=0, style=solid];
m2_262 -> m2_263  [key=0, style=solid];
m2_262 -> m2_104  [key=2, style=dotted];
m2_262 -> m2_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_261 -> m2_262  [key=0, style=solid];
m2_261 -> m2_265  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_263 -> m2_260  [key=0, style=bold, color=blue];
m2_332 -> m2_333  [key=0, style=solid];
m2_333 -> m2_45  [key=2, style=dotted];
m2_333 -> m2_334  [key=0, style=solid];
m2_333 -> m2_335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_334 -> m2_332  [key=0, style=bold, color=blue];
m2_409 -> m2_410  [key=0, style=solid];
m2_410 -> m2_45  [key=2, style=dotted];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_411 -> m2_409  [key=0, style=bold, color=blue];
m2_751 -> m2_752  [key=0, style=solid];
m2_753 -> m2_754  [key=0, style=solid];
m2_753 -> m2_104  [key=2, style=dotted];
m2_753 -> m2_755  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_752 -> m2_753  [key=0, style=solid];
m2_752 -> m2_756  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_754 -> m2_751  [key=0, style=bold, color=blue];
m2_218 -> m2_219  [key=0, style=solid];
m2_220 -> m2_221  [key=0, style=solid];
m2_220 -> m2_104  [key=2, style=dotted];
m2_220 -> m2_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_219 -> m2_220  [key=0, style=solid];
m2_219 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_221 -> m2_218  [key=0, style=bold, color=blue];
m2_637 -> m2_638  [key=0, style=solid];
m2_639 -> m2_640  [key=0, style=solid];
m2_639 -> m2_104  [key=2, style=dotted];
m2_639 -> m2_641  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_638 -> m2_639  [key=0, style=solid];
m2_638 -> m2_642  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_640 -> m2_637  [key=0, style=bold, color=blue];
m2_826 -> m2_827  [key=0, style=solid];
m2_827 -> m2_45  [key=2, style=dotted];
m2_827 -> m2_828  [key=0, style=solid];
m2_827 -> m2_829  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_828 -> m2_826  [key=0, style=bold, color=blue];
m2_381 -> m2_382  [key=0, style=solid];
m2_382 -> m2_45  [key=2, style=dotted];
m2_382 -> m2_383  [key=0, style=solid];
m2_382 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_383 -> m2_381  [key=0, style=bold, color=blue];
m2_305 -> m2_306  [key=0, style=solid];
m2_306 -> m2_45  [key=2, style=dotted];
m2_306 -> m2_307  [key=0, style=solid];
m2_306 -> m2_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_307 -> m2_305  [key=0, style=bold, color=blue];
m2_229 -> m2_230  [key=0, style=solid];
m2_231 -> m2_232  [key=0, style=solid];
m2_231 -> m2_104  [key=2, style=dotted];
m2_231 -> m2_233  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_230 -> m2_231  [key=0, style=solid];
m2_230 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_232 -> m2_229  [key=0, style=bold, color=blue];
m2_869 -> m2_870  [key=0, style=solid];
m2_871 -> m2_872  [key=0, style=solid];
m2_871 -> m2_104  [key=2, style=dotted];
m2_871 -> m2_873  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_870 -> m2_871  [key=0, style=solid];
m2_870 -> m2_874  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_872 -> m2_869  [key=0, style=bold, color=blue];
m2_545 -> m2_546  [key=0, style=solid];
m2_546 -> m2_45  [key=2, style=dotted];
m2_546 -> m2_547  [key=0, style=solid];
m2_546 -> m2_548  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_547 -> m2_545  [key=0, style=bold, color=blue];
m2_490 -> m2_491  [key=0, style=solid];
m2_491 -> m2_45  [key=2, style=dotted];
m2_491 -> m2_492  [key=0, style=solid];
m2_491 -> m2_493  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_492 -> m2_490  [key=0, style=bold, color=blue];
m2_198 -> m2_199  [key=0, style=solid];
m2_199 -> m2_45  [key=2, style=dotted];
m2_199 -> m2_200  [key=0, style=solid];
m2_199 -> m2_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_200 -> m2_198  [key=0, style=bold, color=blue];
m2_555 -> m2_556  [key=0, style=solid];
m2_556 -> m2_45  [key=2, style=dotted];
m2_556 -> m2_557  [key=0, style=solid];
m2_556 -> m2_558  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_557 -> m2_555  [key=0, style=bold, color=blue];
m2_419 -> m2_420  [key=0, style=solid];
m2_421 -> m2_422  [key=0, style=solid];
m2_421 -> m2_104  [key=2, style=dotted];
m2_421 -> m2_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_420 -> m2_421  [key=0, style=solid];
m2_420 -> m2_424  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_422 -> m2_419  [key=0, style=bold, color=blue];
m2_562 -> m2_563  [key=0, style=solid];
m2_564 -> m2_565  [key=0, style=solid];
m2_564 -> m2_104  [key=2, style=dotted];
m2_564 -> m2_566  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_563 -> m2_564  [key=0, style=solid];
m2_563 -> m2_567  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_565 -> m2_562  [key=0, style=bold, color=blue];
m2_761 -> m2_762  [key=0, style=solid];
m2_762 -> m2_45  [key=2, style=dotted];
m2_762 -> m2_763  [key=0, style=solid];
m2_762 -> m2_764  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_763 -> m2_761  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_19  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_17 -> m2_20  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_15  [key=0, style=bold, color=blue];
m2_772 -> m2_773  [key=0, style=solid];
m2_773 -> m2_45  [key=2, style=dotted];
m2_773 -> m2_774  [key=0, style=solid];
m2_773 -> m2_775  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_774 -> m2_772  [key=0, style=bold, color=blue];
m2_691 -> m2_692  [key=0, style=solid];
m2_692 -> m2_45  [key=2, style=dotted];
m2_692 -> m2_693  [key=0, style=solid];
m2_692 -> m2_694  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_693 -> m2_691  [key=0, style=bold, color=blue];
m2_391 -> m2_392  [key=0, style=solid];
m2_392 -> m2_393  [key=0, style=solid];
m2_392 -> m2_104  [key=2, style=dotted];
m2_392 -> m2_394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_393 -> m2_391  [key=0, style=bold, color=blue];
m2_542 -> m2_543  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_31 -> m2_32  [key=0, style=solid, color=green];
m2_31 -> m2_33  [key=1, style=dashed, color=green, label=queues];
m2_31 -> m2_39  [key=1, style=dashed, color=green, label=queues];
m2_30 -> m2_31  [key=0, style=solid, color=green];
m2_30 -> m2_35  [key=2, style=dotted];
m2_30 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_30 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_30 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_36  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_37  [key=2, style=dotted];
m2_33 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_89 -> m2_90  [key=0, style=solid, color=green];
m2_89 -> m2_94  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m2_90 -> m2_91  [key=0, style=solid, color=green];
m2_90 -> m2_19  [key=2, style=dotted, color=green];
m2_90 -> m2_93  [key=1, style=dashed, color=green, label="lambda expression"];
m2_91 -> m2_92  [key=0, style=solid];
m2_91 -> m2_20  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid, color=green];
m2_94 -> m2_95  [key=0, style=solid, color=green];
m2_94 -> m2_96  [key=2, style=dotted, color=green];
m2_94 -> m2_85  [key=2, style=dotted, color=green];
m2_94 -> m2_97  [key=1, style=dashed, color=green, label="lambda expression"];
m2_95 -> m2_93  [key=0, style=bold, color=blue];
m2_97 -> m2_98  [key=0, style=solid];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_52  [key=2, style=dotted];
m2_34 -> m2_29  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_40 -> m2_38  [key=0, style=bold, color=blue];
m2_80 -> m2_77  [key=0, style=bold, color=blue];
m2_78 -> m2_19  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_82 -> m2_85  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_84  [key=2, style=dotted];
m2_92 -> m2_89  [key=0, style=bold, color=blue];
m2_50 -> m2_19  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_152 -> m2_19  [key=2, style=dotted];
m2_152 -> m2_153  [key=0, style=solid];
m2_152 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_192 -> m2_19  [key=2, style=dotted];
m2_192 -> m2_193  [key=0, style=solid];
m2_192 -> m2_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_243 -> m2_19  [key=2, style=dotted];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_254 -> m2_19  [key=2, style=dotted];
m2_254 -> m2_255  [key=0, style=solid];
m2_254 -> m2_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_298 -> m2_19  [key=2, style=dotted];
m2_298 -> m2_299  [key=0, style=solid];
m2_298 -> m2_301  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_309 -> m2_19  [key=2, style=dotted];
m2_309 -> m2_310  [key=0, style=solid];
m2_309 -> m2_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_327 -> m2_19  [key=2, style=dotted];
m2_327 -> m2_328  [key=0, style=solid];
m2_327 -> m2_131  [key=2, style=dotted];
m2_336 -> m2_19  [key=2, style=dotted];
m2_336 -> m2_337  [key=0, style=solid];
m2_336 -> m2_339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_347 -> m2_19  [key=2, style=dotted];
m2_347 -> m2_348  [key=0, style=solid];
m2_347 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_373 -> m2_19  [key=2, style=dotted];
m2_373 -> m2_374  [key=0, style=solid];
m2_373 -> m2_376  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_385 -> m2_19  [key=2, style=dotted];
m2_385 -> m2_386  [key=0, style=solid];
m2_385 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_413 -> m2_19  [key=2, style=dotted];
m2_413 -> m2_414  [key=0, style=solid];
m2_413 -> m2_415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_434 -> m2_19  [key=2, style=dotted];
m2_434 -> m2_435  [key=0, style=solid];
m2_434 -> m2_436  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_461 -> m2_19  [key=2, style=dotted];
m2_461 -> m2_462  [key=0, style=solid];
m2_461 -> m2_463  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_484 -> m2_19  [key=2, style=dotted];
m2_484 -> m2_485  [key=0, style=solid];
m2_484 -> m2_486  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_513 -> m2_19  [key=2, style=dotted];
m2_513 -> m2_514  [key=0, style=solid];
m2_513 -> m2_516  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_524 -> m2_19  [key=2, style=dotted];
m2_524 -> m2_525  [key=0, style=solid];
m2_524 -> m2_527  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_549 -> m2_19  [key=2, style=dotted];
m2_549 -> m2_550  [key=0, style=solid];
m2_549 -> m2_551  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_578 -> m2_19  [key=2, style=dotted];
m2_578 -> m2_579  [key=0, style=solid];
m2_578 -> m2_580  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_605 -> m2_19  [key=2, style=dotted];
m2_605 -> m2_606  [key=0, style=solid];
m2_605 -> m2_607  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_624 -> m2_19  [key=2, style=dotted];
m2_624 -> m2_625  [key=0, style=solid];
m2_624 -> m2_626  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_659 -> m2_19  [key=2, style=dotted];
m2_659 -> m2_660  [key=0, style=solid];
m2_659 -> m2_661  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_685 -> m2_19  [key=2, style=dotted];
m2_685 -> m2_686  [key=0, style=solid];
m2_685 -> m2_687  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_712 -> m2_19  [key=2, style=dotted];
m2_712 -> m2_713  [key=0, style=solid];
m2_712 -> m2_714  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_738 -> m2_19  [key=2, style=dotted];
m2_738 -> m2_739  [key=0, style=solid];
m2_738 -> m2_740  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_765 -> m2_19  [key=2, style=dotted];
m2_765 -> m2_766  [key=0, style=solid];
m2_765 -> m2_768  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_776 -> m2_19  [key=2, style=dotted];
m2_776 -> m2_777  [key=0, style=solid];
m2_776 -> m2_779  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_802 -> m2_19  [key=2, style=dotted];
m2_802 -> m2_803  [key=0, style=solid];
m2_802 -> m2_805  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_830 -> m2_19  [key=2, style=dotted];
m2_830 -> m2_831  [key=0, style=solid];
m2_830 -> m2_832  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_856 -> m2_19  [key=2, style=dotted];
m2_856 -> m2_857  [key=0, style=solid];
m2_856 -> m2_858  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_107 -> m2_96  [key=2, style=dotted];
m2_107 -> m2_85  [key=2, style=dotted];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_84  [key=2, style=dotted];
m2_107 -> d11  [key=2, style=dotted];
m2_107 -> m2_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_107 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_107 -> m2_111  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_107 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_171 -> m2_96  [key=2, style=dotted];
m2_171 -> m2_172  [key=0, style=solid];
m2_171 -> m2_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_99 -> m2_97  [key=0, style=bold, color=blue];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_100  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_46 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_7  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_105 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_110  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_105 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_161 -> m2_162  [key=0, style=solid];
m2_170 -> m2_171  [key=0, style=solid];
m2_170 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_170 -> m2_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_201 -> m2_202  [key=0, style=solid];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_209 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_222 -> m2_223  [key=0, style=solid];
m2_222 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_222 -> m2_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_233 -> m2_234  [key=0, style=solid];
m2_233 -> m2_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_253 -> m2_254  [key=0, style=solid];
m2_253 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_264 -> m2_265  [key=0, style=solid];
m2_264 -> m2_267  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_264 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_278  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_275 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_275 -> m2_280  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_290  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_287 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_297 -> m2_298  [key=0, style=solid];
m2_297 -> m2_302  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_308 -> m2_309  [key=0, style=solid];
m2_308 -> m2_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_318 -> m2_319  [key=0, style=solid];
m2_326 -> m2_327  [key=0, style=solid];
m2_326 -> m2_328  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_335 -> m2_336  [key=0, style=solid];
m2_335 -> m2_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_346 -> m2_347  [key=0, style=solid];
m2_346 -> m2_350  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_355 -> m2_356  [key=0, style=solid];
m2_363 -> m2_364  [key=0, style=solid];
m2_363 -> m2_365  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_372 -> m2_373  [key=0, style=solid];
m2_372 -> m2_377  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_384 -> m2_385  [key=0, style=solid];
m2_384 -> m2_389  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_394 -> m2_395  [key=0, style=solid];
m2_394 -> m2_396  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_394 -> m2_397  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_394 -> m2_402  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_394 -> m2_403  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_412 -> m2_413  [key=0, style=solid];
m2_412 -> m2_416  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_423 -> m2_424  [key=0, style=solid];
m2_423 -> m2_425  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_423 -> m2_426  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_437  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_444 -> m2_445  [key=0, style=solid];
m2_444 -> m2_446  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_444 -> m2_447  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_460 -> m2_461  [key=0, style=solid];
m2_460 -> m2_464  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_472 -> m2_473  [key=0, style=solid];
m2_472 -> m2_474  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_472 -> m2_475  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_483 -> m2_484  [key=0, style=solid];
m2_483 -> m2_487  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_493 -> m2_494  [key=0, style=solid];
m2_502 -> m2_503  [key=0, style=solid];
m2_502 -> m2_504  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_512 -> m2_513  [key=0, style=solid];
m2_512 -> m2_517  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_523 -> m2_524  [key=0, style=solid];
m2_523 -> m2_528  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_533 -> m2_534  [key=0, style=solid];
m2_533 -> m2_535  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m2_548 -> m2_549  [key=0, style=solid];
m2_548 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_558 -> m2_559  [key=0, style=solid];
m2_566 -> m2_567  [key=0, style=solid];
m2_566 -> m2_568  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_577 -> m2_578  [key=0, style=solid];
m2_577 -> m2_581  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_587 -> m2_588  [key=0, style=solid];
m2_595 -> m2_596  [key=0, style=solid];
m2_595 -> m2_597  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_604 -> m2_605  [key=0, style=solid];
m2_604 -> m2_608  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_615 -> m2_616  [key=0, style=solid];
m2_615 -> m2_617  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_623 -> m2_624  [key=0, style=solid];
m2_623 -> m2_627  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_633 -> m2_634  [key=0, style=solid];
m2_641 -> m2_642  [key=0, style=solid];
m2_641 -> m2_643  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_650 -> m2_651  [key=0, style=solid];
m2_650 -> m2_652  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_658 -> m2_659  [key=0, style=solid];
m2_658 -> m2_662  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_668 -> m2_669  [key=0, style=solid];
m2_676 -> m2_677  [key=0, style=solid];
m2_676 -> m2_678  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_684 -> m2_685  [key=0, style=solid];
m2_684 -> m2_688  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_694 -> m2_695  [key=0, style=solid];
m2_702 -> m2_703  [key=0, style=solid];
m2_702 -> m2_704  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_711 -> m2_712  [key=0, style=solid];
m2_711 -> m2_715  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_721 -> m2_722  [key=0, style=solid];
m2_729 -> m2_730  [key=0, style=solid];
m2_729 -> m2_731  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_737 -> m2_738  [key=0, style=solid];
m2_737 -> m2_741  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_747 -> m2_748  [key=0, style=solid];
m2_755 -> m2_756  [key=0, style=solid];
m2_755 -> m2_757  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_764 -> m2_765  [key=0, style=solid];
m2_764 -> m2_769  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_775 -> m2_776  [key=0, style=solid];
m2_775 -> m2_780  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_785 -> m2_786  [key=0, style=solid];
m2_793 -> m2_794  [key=0, style=solid];
m2_793 -> m2_795  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_801 -> m2_802  [key=0, style=solid];
m2_801 -> m2_806  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_812 -> m2_813  [key=0, style=solid];
m2_821 -> m2_822  [key=0, style=solid];
m2_821 -> m2_823  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_829 -> m2_830  [key=0, style=solid];
m2_829 -> m2_833  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_839 -> m2_840  [key=0, style=solid];
m2_847 -> m2_848  [key=0, style=solid];
m2_847 -> m2_849  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_855 -> m2_856  [key=0, style=solid];
m2_855 -> m2_859  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_865 -> m2_866  [key=0, style=solid];
m2_873 -> m2_874  [key=0, style=solid];
m2_873 -> m2_875  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_897 -> m2_898  [key=0, style=solid];
m2_47 -> m2_35  [key=2, style=dotted];
m2_47 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_54 -> m2_36  [key=2, style=dotted];
m2_54 -> m2_55  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_20  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_83 -> m2_81  [key=0, style=bold, color=blue];
m2_112 -> m2_20  [key=2, style=dotted];
m2_112 -> m2_113  [key=0, style=solid];
m2_111 -> m2_20  [key=2, style=dotted];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_132  [key=2, style=dotted];
m2_113 -> m2_20  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_114 -> m2_20  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_118 -> m2_20  [key=2, style=dotted];
m2_118 -> m2_119  [key=0, style=solid];
m2_119 -> m2_20  [key=2, style=dotted];
m2_119 -> m2_120  [key=0, style=solid];
m2_120 -> m2_20  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_124 -> m2_20  [key=2, style=dotted];
m2_124 -> m2_125  [key=0, style=solid];
m2_125 -> m2_20  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_176 -> m2_20  [key=2, style=dotted];
m2_176 -> m2_177  [key=0, style=solid];
m2_177 -> m2_20  [key=2, style=dotted];
m2_177 -> m2_178  [key=0, style=solid];
m2_214 -> m2_20  [key=2, style=dotted];
m2_214 -> m2_215  [key=0, style=solid];
m2_215 -> m2_20  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_216 -> m2_20  [key=2, style=dotted];
m2_216 -> m2_217  [key=0, style=solid];
m2_227 -> m2_20  [key=2, style=dotted];
m2_227 -> m2_228  [key=0, style=solid];
m2_244 -> m2_20  [key=2, style=dotted];
m2_244 -> m2_245  [key=0, style=solid];
m2_255 -> m2_20  [key=2, style=dotted];
m2_255 -> m2_256  [key=0, style=solid];
m2_269 -> m2_20  [key=2, style=dotted];
m2_269 -> m2_270  [key=0, style=solid];
m2_281 -> m2_20  [key=2, style=dotted];
m2_281 -> m2_282  [key=0, style=solid];
m2_292 -> m2_20  [key=2, style=dotted];
m2_292 -> m2_293  [key=0, style=solid];
m2_299 -> m2_20  [key=2, style=dotted];
m2_299 -> m2_300  [key=0, style=solid];
m2_310 -> m2_20  [key=2, style=dotted];
m2_310 -> m2_311  [key=0, style=solid];
m2_329 -> m2_20  [key=2, style=dotted];
m2_329 -> m2_330  [key=0, style=solid];
m2_337 -> m2_20  [key=2, style=dotted];
m2_337 -> m2_338  [key=0, style=solid];
m2_366 -> m2_20  [key=2, style=dotted];
m2_366 -> m2_367  [key=0, style=solid];
m2_374 -> m2_20  [key=2, style=dotted];
m2_374 -> m2_375  [key=0, style=solid];
m2_386 -> m2_20  [key=2, style=dotted];
m2_386 -> m2_387  [key=0, style=solid];
m2_398 -> m2_20  [key=2, style=dotted];
m2_398 -> m2_399  [key=0, style=solid];
m2_404 -> m2_20  [key=2, style=dotted];
m2_404 -> m2_405  [key=0, style=solid];
m2_449 -> m2_20  [key=2, style=dotted];
m2_449 -> m2_450  [key=0, style=solid];
m2_476 -> m2_20  [key=2, style=dotted];
m2_476 -> m2_477  [key=0, style=solid];
m2_496 -> m2_20  [key=2, style=dotted];
m2_496 -> m2_497  [key=0, style=solid];
m2_505 -> m2_20  [key=2, style=dotted];
m2_505 -> m2_506  [key=0, style=solid];
m2_514 -> m2_20  [key=2, style=dotted];
m2_514 -> m2_515  [key=0, style=solid];
m2_525 -> m2_20  [key=2, style=dotted];
m2_525 -> m2_526  [key=0, style=solid];
m2_536 -> m2_20  [key=2, style=dotted];
m2_536 -> m2_537  [key=0, style=solid];
m2_537 -> m2_20  [key=2, style=dotted];
m2_537 -> m2_538  [key=0, style=solid];
m2_570 -> m2_20  [key=2, style=dotted];
m2_570 -> m2_571  [key=0, style=solid];
m2_571 -> m2_20  [key=2, style=dotted];
m2_571 -> m2_572  [key=0, style=solid];
m2_572 -> m2_20  [key=2, style=dotted];
m2_572 -> m2_573  [key=0, style=solid];
m2_589 -> m2_20  [key=2, style=dotted];
m2_589 -> m2_590  [key=0, style=solid];
m2_598 -> m2_20  [key=2, style=dotted];
m2_598 -> m2_599  [key=0, style=solid];
m2_618 -> m2_20  [key=2, style=dotted];
m2_618 -> m2_619  [key=0, style=solid];
m2_635 -> m2_20  [key=2, style=dotted];
m2_635 -> m2_636  [key=0, style=solid];
m2_644 -> m2_20  [key=2, style=dotted];
m2_644 -> m2_645  [key=0, style=solid];
m2_653 -> m2_20  [key=2, style=dotted];
m2_653 -> m2_654  [key=0, style=solid];
m2_670 -> m2_20  [key=2, style=dotted];
m2_670 -> m2_671  [key=0, style=solid];
m2_679 -> m2_20  [key=2, style=dotted];
m2_679 -> m2_680  [key=0, style=solid];
m2_723 -> m2_20  [key=2, style=dotted];
m2_723 -> m2_724  [key=0, style=solid];
m2_732 -> m2_20  [key=2, style=dotted];
m2_732 -> m2_733  [key=0, style=solid];
m2_766 -> m2_20  [key=2, style=dotted];
m2_766 -> m2_767  [key=0, style=solid];
m2_777 -> m2_20  [key=2, style=dotted];
m2_777 -> m2_778  [key=0, style=solid];
m2_796 -> m2_20  [key=2, style=dotted];
m2_796 -> m2_797  [key=0, style=solid];
m2_803 -> m2_20  [key=2, style=dotted];
m2_803 -> m2_804  [key=0, style=solid];
m2_824 -> m2_20  [key=2, style=dotted];
m2_824 -> m2_825  [key=0, style=solid];
m2_850 -> m2_20  [key=2, style=dotted];
m2_850 -> m2_851  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_51 -> m2_46  [key=0, style=bold, color=blue];
m2_53 -> m2_54  [key=0, style=solid];
m2_153 -> m2_151  [key=0, style=bold, color=blue];
m2_154 -> m2_155  [key=0, style=solid];
m2_193 -> m2_191  [key=0, style=bold, color=blue];
m2_194 -> m2_195  [key=0, style=solid];
m2_246 -> m2_247  [key=0, style=solid];
m2_257 -> m2_258  [key=0, style=solid];
m2_301 -> m2_302  [key=0, style=solid];
m2_312 -> m2_313  [key=0, style=solid];
m2_328 -> m2_329  [key=0, style=solid];
m2_328 -> m2_132  [key=2, style=dotted];
m2_328 -> m2_331  [key=2, style=dotted];
m2_339 -> m2_340  [key=0, style=solid];
m2_348 -> m2_346  [key=0, style=bold, color=blue];
m2_349 -> m2_350  [key=0, style=solid];
m2_376 -> m2_377  [key=0, style=solid];
m2_388 -> m2_389  [key=0, style=solid];
m2_414 -> m2_412  [key=0, style=bold, color=blue];
m2_415 -> m2_416  [key=0, style=solid];
m2_435 -> m2_433  [key=0, style=bold, color=blue];
m2_436 -> m2_437  [key=0, style=solid];
m2_462 -> m2_460  [key=0, style=bold, color=blue];
m2_463 -> m2_464  [key=0, style=solid];
m2_485 -> m2_483  [key=0, style=bold, color=blue];
m2_486 -> m2_487  [key=0, style=solid];
m2_516 -> m2_517  [key=0, style=solid];
m2_527 -> m2_528  [key=0, style=solid];
m2_550 -> m2_548  [key=0, style=bold, color=blue];
m2_551 -> m2_552  [key=0, style=solid];
m2_579 -> m2_577  [key=0, style=bold, color=blue];
m2_580 -> m2_581  [key=0, style=solid];
m2_606 -> m2_604  [key=0, style=bold, color=blue];
m2_607 -> m2_608  [key=0, style=solid];
m2_625 -> m2_623  [key=0, style=bold, color=blue];
m2_626 -> m2_627  [key=0, style=solid];
m2_660 -> m2_658  [key=0, style=bold, color=blue];
m2_661 -> m2_662  [key=0, style=solid];
m2_686 -> m2_684  [key=0, style=bold, color=blue];
m2_687 -> m2_688  [key=0, style=solid];
m2_713 -> m2_711  [key=0, style=bold, color=blue];
m2_714 -> m2_715  [key=0, style=solid];
m2_739 -> m2_737  [key=0, style=bold, color=blue];
m2_740 -> m2_741  [key=0, style=solid];
m2_768 -> m2_769  [key=0, style=solid];
m2_779 -> m2_780  [key=0, style=solid];
m2_805 -> m2_806  [key=0, style=solid];
m2_831 -> m2_829  [key=0, style=bold, color=blue];
m2_832 -> m2_833  [key=0, style=solid];
m2_857 -> m2_855  [key=0, style=bold, color=blue];
m2_858 -> m2_859  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m2_106 -> m2_127  [key=2, style=dotted];
m2_106 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m2_106 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m2_108 -> m2_109  [key=0, style=solid];
m2_108 -> m2_64  [key=2, style=dotted];
m2_139 -> m2_140  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_129  [key=2, style=dotted];
m2_123 -> m2_124  [key=0, style=solid];
m2_123 -> m2_125  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m2_123 -> m2_130  [key=2, style=dotted];
m2_123 -> m2_138  [key=2, style=dotted];
m2_123 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_123 -> m2_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_172 -> m2_131  [key=2, style=dotted];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_182  [key=2, style=dotted];
m2_172 -> m2_183  [key=2, style=dotted];
m2_172 -> m2_130  [key=2, style=dotted];
m2_185 -> m2_186  [key=0, style=solid];
m2_13 -> m2_11  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=2, style=dotted];
m2_62 -> m2_59  [key=0, style=bold, color=blue];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_63  [key=2, style=dotted];
m2_71 -> m2_68  [key=0, style=bold, color=blue];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_72  [key=2, style=dotted];
m2_69 -> m2_73  [key=2, style=dotted];
m2_126 -> m2_105  [key=0, style=bold, color=blue];
m2_110 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_110 -> m2_114  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_110 -> m2_131  [key=2, style=dotted];
m2_110 -> m2_130  [key=2, style=dotted];
m2_110 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_110 -> m2_116  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_110 -> m2_121  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_110 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_157  [key=2, style=dotted];
m2_164 -> m2_161  [key=0, style=bold, color=blue];
m2_162 -> m2_163  [key=0, style=solid];
m2_162 -> m2_157  [key=2, style=dotted];
m2_181 -> m2_170  [key=0, style=bold, color=blue];
m2_173 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_173 -> m2_177  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_173 -> m2_174  [key=0, style=solid];
m2_173 -> m2_184  [key=2, style=dotted];
m2_173 -> m2_157  [key=2, style=dotted];
m2_173 -> m2_175  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_173 -> m2_178  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_173 -> m2_179  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_173 -> m2_180  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_195 -> m2_196  [key=0, style=solid];
m2_195 -> m2_197  [key=2, style=dotted];
m2_204 -> m2_201  [key=0, style=bold, color=blue];
m2_202 -> m2_203  [key=0, style=solid];
m2_202 -> m2_197  [key=2, style=dotted];
m2_211 -> m2_131  [key=2, style=dotted];
m2_211 -> m2_212  [key=0, style=solid];
m2_211 -> m2_183  [key=2, style=dotted];
m2_211 -> m2_130  [key=2, style=dotted];
m2_217 -> m2_209  [key=0, style=bold, color=blue];
m2_210 -> m2_84  [key=2, style=dotted];
m2_210 -> m2_211  [key=0, style=solid];
m2_212 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_212 -> m2_215  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_212 -> m2_216  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_184  [key=2, style=dotted];
m2_212 -> m2_197  [key=2, style=dotted];
m2_224 -> m2_131  [key=2, style=dotted];
m2_224 -> m2_225  [key=0, style=solid];
m2_224 -> m2_183  [key=2, style=dotted];
m2_224 -> m2_130  [key=2, style=dotted];
m2_228 -> m2_222  [key=0, style=bold, color=blue];
m2_223 -> m2_84  [key=2, style=dotted];
m2_223 -> m2_224  [key=0, style=solid];
m2_225 -> m2_227  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_225 -> m2_226  [key=0, style=solid];
m2_225 -> m2_184  [key=2, style=dotted];
m2_225 -> m2_197  [key=2, style=dotted];
m2_234 -> m2_131  [key=2, style=dotted];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_238  [key=2, style=dotted];
m2_234 -> m2_183  [key=2, style=dotted];
m2_234 -> m2_130  [key=2, style=dotted];
m2_237 -> m2_233  [key=0, style=bold, color=blue];
m2_235 -> m2_236  [key=0, style=solid];
m2_235 -> m2_184  [key=2, style=dotted];
m2_235 -> m2_157  [key=2, style=dotted];
m2_245 -> m2_242  [key=0, style=bold, color=blue];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_249  [key=2, style=dotted];
m2_256 -> m2_253  [key=0, style=bold, color=blue];
m2_258 -> m2_259  [key=0, style=solid];
m2_258 -> m2_249  [key=2, style=dotted];
m2_265 -> m2_131  [key=2, style=dotted];
m2_265 -> m2_266  [key=0, style=solid];
m2_265 -> m2_130  [key=2, style=dotted];
m2_270 -> m2_264  [key=0, style=bold, color=blue];
m2_267 -> m2_268  [key=0, style=solid];
m2_267 -> m2_249  [key=2, style=dotted];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_131  [key=2, style=dotted];
m2_268 -> m2_130  [key=2, style=dotted];
m2_276 -> m2_131  [key=2, style=dotted];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_130  [key=2, style=dotted];
m2_282 -> m2_275  [key=0, style=bold, color=blue];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_249  [key=2, style=dotted];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_249  [key=2, style=dotted];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_131  [key=2, style=dotted];
m2_280 -> m2_130  [key=2, style=dotted];
m2_288 -> m2_131  [key=2, style=dotted];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_130  [key=2, style=dotted];
m2_293 -> m2_287  [key=0, style=bold, color=blue];
m2_290 -> m2_291  [key=0, style=solid];
m2_290 -> m2_249  [key=2, style=dotted];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_131  [key=2, style=dotted];
m2_291 -> m2_130  [key=2, style=dotted];
m2_300 -> m2_297  [key=0, style=bold, color=blue];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_304  [key=2, style=dotted];
m2_311 -> m2_308  [key=0, style=bold, color=blue];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_304  [key=2, style=dotted];
m2_321 -> m2_318  [key=0, style=bold, color=blue];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_304  [key=2, style=dotted];
m2_330 -> m2_326  [key=0, style=bold, color=blue];
m2_338 -> m2_335  [key=0, style=bold, color=blue];
m2_340 -> m2_341  [key=0, style=solid];
m2_340 -> m2_342  [key=2, style=dotted];
m2_350 -> m2_351  [key=0, style=solid];
m2_350 -> m2_342  [key=2, style=dotted];
m2_358 -> m2_355  [key=0, style=bold, color=blue];
m2_356 -> m2_357  [key=0, style=solid];
m2_356 -> m2_342  [key=2, style=dotted];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_368  [key=2, style=dotted];
m2_367 -> m2_363  [key=0, style=bold, color=blue];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_342  [key=2, style=dotted];
m2_375 -> m2_372  [key=0, style=bold, color=blue];
m2_377 -> m2_378  [key=0, style=solid];
m2_377 -> m2_379  [key=2, style=dotted];
m2_377 -> m2_380  [key=2, style=dotted];
m2_387 -> m2_384  [key=0, style=bold, color=blue];
m2_389 -> m2_390  [key=0, style=solid];
m2_389 -> m2_380  [key=2, style=dotted];
m2_406 -> m2_394  [key=0, style=bold, color=blue];
m2_395 -> m2_396  [key=0, style=solid];
m2_395 -> m2_379  [key=2, style=dotted];
m2_396 -> m2_397  [key=0, style=solid];
m2_396 -> m2_380  [key=2, style=dotted];
m2_397 -> m2_398  [key=0, style=solid];
m2_397 -> m2_131  [key=2, style=dotted];
m2_397 -> m2_130  [key=2, style=dotted];
m2_397 -> m2_399  [key=1, style=dashed, color=darkseagreen4, label=server];
m2_397 -> m2_400  [key=1, style=dashed, color=darkseagreen4, label=server];
m2_402 -> m2_403  [key=0, style=solid];
m2_402 -> m2_380  [key=2, style=dotted];
m2_403 -> m2_404  [key=0, style=solid];
m2_403 -> m2_131  [key=2, style=dotted];
m2_403 -> m2_130  [key=2, style=dotted];
m2_403 -> m2_405  [key=1, style=dashed, color=darkseagreen4, label=sameServer];
m2_416 -> m2_417  [key=0, style=solid];
m2_416 -> m2_418  [key=2, style=dotted];
m2_424 -> m2_425  [key=0, style=solid];
m2_424 -> m2_368  [key=2, style=dotted];
m2_428 -> m2_423  [key=0, style=bold, color=blue];
m2_425 -> m2_426  [key=0, style=solid];
m2_425 -> m2_418  [key=2, style=dotted];
m2_426 -> m2_131  [key=2, style=dotted];
m2_426 -> m2_427  [key=0, style=solid];
m2_426 -> m2_130  [key=2, style=dotted];
m2_437 -> m2_438  [key=0, style=solid];
m2_437 -> m2_439  [key=2, style=dotted];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_368  [key=2, style=dotted];
m2_450 -> m2_444  [key=0, style=bold, color=blue];
m2_446 -> m2_447  [key=0, style=solid];
m2_446 -> m2_439  [key=2, style=dotted];
m2_447 -> m2_449  [key=1, style=dashed, color=darkseagreen4, label=servers];
m2_447 -> m2_448  [key=0, style=solid];
m2_447 -> m2_130  [key=2, style=dotted];
m2_447 -> m2_138  [key=2, style=dotted];
m2_447 -> m2_451  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_447 -> m2_454  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_464 -> m2_465  [key=0, style=solid];
m2_464 -> m2_466  [key=2, style=dotted];
m2_464 -> m2_467  [key=2, style=dotted];
m2_473 -> m2_474  [key=0, style=solid];
m2_473 -> m2_135  [key=2, style=dotted];
m2_473 -> m2_478  [key=2, style=dotted];
m2_473 -> m2_368  [key=2, style=dotted];
m2_477 -> m2_472  [key=0, style=bold, color=blue];
m2_474 -> m2_475  [key=0, style=solid];
m2_474 -> m2_479  [key=2, style=dotted];
m2_474 -> m2_467  [key=2, style=dotted];
m2_475 -> m2_476  [key=0, style=solid];
m2_475 -> m2_131  [key=2, style=dotted];
m2_475 -> m2_130  [key=2, style=dotted];
m2_487 -> m2_488  [key=0, style=solid];
m2_487 -> m2_489  [key=2, style=dotted];
m2_497 -> m2_493  [key=0, style=bold, color=blue];
m2_494 -> m2_496  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_494 -> m2_495  [key=0, style=solid];
m2_494 -> m2_489  [key=2, style=dotted];
m2_503 -> m2_504  [key=0, style=solid];
m2_503 -> m2_368  [key=2, style=dotted];
m2_508 -> m2_502  [key=0, style=bold, color=blue];
m2_504 -> m2_505  [key=0, style=solid];
m2_504 -> m2_489  [key=2, style=dotted];
m2_504 -> m2_506  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_504 -> m2_507  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_515 -> m2_512  [key=0, style=bold, color=blue];
m2_517 -> m2_84  [key=2, style=dotted];
m2_517 -> m2_518  [key=0, style=solid];
m2_517 -> m2_519  [key=2, style=dotted];
m2_526 -> m2_523  [key=0, style=bold, color=blue];
m2_528 -> m2_529  [key=0, style=solid];
m2_528 -> m2_519  [key=2, style=dotted];
m2_538 -> m2_533  [key=0, style=bold, color=blue];
m2_534 -> m2_84  [key=2, style=dotted];
m2_534 -> m2_535  [key=0, style=solid];
m2_534 -> m2_519  [key=2, style=dotted];
m2_535 -> m2_536  [key=0, style=solid];
m2_535 -> m2_537  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_535 -> m2_130  [key=2, style=dotted];
m2_535 -> m2_138  [key=2, style=dotted];
m2_535 -> m2_539  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_535 -> m2_542  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_552 -> m2_553  [key=0, style=solid];
m2_552 -> m2_554  [key=2, style=dotted];
m2_561 -> m2_558  [key=0, style=bold, color=blue];
m2_559 -> m2_560  [key=0, style=solid];
m2_559 -> m2_554  [key=2, style=dotted];
m2_567 -> m2_568  [key=0, style=solid];
m2_567 -> m2_368  [key=2, style=dotted];
m2_573 -> m2_566  [key=0, style=bold, color=blue];
m2_568 -> m2_570  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_568 -> m2_571  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_568 -> m2_572  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_568 -> m2_569  [key=0, style=solid];
m2_568 -> m2_554  [key=2, style=dotted];
m2_581 -> m2_582  [key=0, style=solid];
m2_581 -> m2_583  [key=2, style=dotted];
m2_590 -> m2_587  [key=0, style=bold, color=blue];
m2_588 -> m2_589  [key=0, style=solid];
m2_588 -> m2_583  [key=2, style=dotted];
m2_596 -> m2_597  [key=0, style=solid];
m2_596 -> m2_600  [key=2, style=dotted];
m2_596 -> m2_368  [key=2, style=dotted];
m2_599 -> m2_595  [key=0, style=bold, color=blue];
m2_597 -> m2_598  [key=0, style=solid];
m2_597 -> m2_583  [key=2, style=dotted];
m2_608 -> m2_609  [key=0, style=solid];
m2_608 -> m2_610  [key=2, style=dotted];
m2_616 -> m2_617  [key=0, style=solid];
m2_616 -> m2_600  [key=2, style=dotted];
m2_616 -> m2_368  [key=2, style=dotted];
m2_619 -> m2_615  [key=0, style=bold, color=blue];
m2_617 -> m2_618  [key=0, style=solid];
m2_617 -> m2_610  [key=2, style=dotted];
m2_627 -> m2_628  [key=0, style=solid];
m2_627 -> m2_629  [key=2, style=dotted];
m2_636 -> m2_633  [key=0, style=bold, color=blue];
m2_634 -> m2_635  [key=0, style=solid];
m2_634 -> m2_629  [key=2, style=dotted];
m2_642 -> m2_643  [key=0, style=solid];
m2_642 -> m2_368  [key=2, style=dotted];
m2_645 -> m2_641  [key=0, style=bold, color=blue];
m2_643 -> m2_644  [key=0, style=solid];
m2_643 -> m2_629  [key=2, style=dotted];
m2_651 -> m2_652  [key=0, style=solid];
m2_651 -> m2_368  [key=2, style=dotted];
m2_654 -> m2_650  [key=0, style=bold, color=blue];
m2_652 -> m2_653  [key=0, style=solid];
m2_652 -> m2_629  [key=2, style=dotted];
m2_662 -> m2_663  [key=0, style=solid];
m2_662 -> m2_664  [key=2, style=dotted];
m2_671 -> m2_668  [key=0, style=bold, color=blue];
m2_669 -> m2_670  [key=0, style=solid];
m2_669 -> m2_664  [key=2, style=dotted];
m2_677 -> m2_678  [key=0, style=solid];
m2_677 -> m2_368  [key=2, style=dotted];
m2_680 -> m2_676  [key=0, style=bold, color=blue];
m2_678 -> m2_679  [key=0, style=solid];
m2_678 -> m2_664  [key=2, style=dotted];
m2_688 -> m2_689  [key=0, style=solid];
m2_688 -> m2_690  [key=2, style=dotted];
m2_697 -> m2_694  [key=0, style=bold, color=blue];
m2_695 -> m2_696  [key=0, style=solid];
m2_695 -> m2_690  [key=2, style=dotted];
m2_703 -> m2_704  [key=0, style=solid];
m2_703 -> m2_478  [key=2, style=dotted];
m2_703 -> m2_368  [key=2, style=dotted];
m2_707 -> m2_702  [key=0, style=bold, color=blue];
m2_704 -> m2_705  [key=0, style=solid];
m2_704 -> m2_690  [key=2, style=dotted];
m2_704 -> m2_706  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_715 -> m2_716  [key=0, style=solid];
m2_715 -> m2_717  [key=2, style=dotted];
m2_724 -> m2_721  [key=0, style=bold, color=blue];
m2_722 -> m2_723  [key=0, style=solid];
m2_722 -> m2_717  [key=2, style=dotted];
m2_730 -> m2_731  [key=0, style=solid];
m2_730 -> m2_368  [key=2, style=dotted];
m2_733 -> m2_729  [key=0, style=bold, color=blue];
m2_731 -> m2_732  [key=0, style=solid];
m2_731 -> m2_717  [key=2, style=dotted];
m2_741 -> m2_742  [key=0, style=solid];
m2_741 -> m2_743  [key=2, style=dotted];
m2_750 -> m2_747  [key=0, style=bold, color=blue];
m2_748 -> m2_749  [key=0, style=solid];
m2_748 -> m2_743  [key=2, style=dotted];
m2_756 -> m2_757  [key=0, style=solid];
m2_756 -> m2_478  [key=2, style=dotted];
m2_756 -> m2_368  [key=2, style=dotted];
m2_760 -> m2_755  [key=0, style=bold, color=blue];
m2_757 -> m2_758  [key=0, style=solid];
m2_757 -> m2_743  [key=2, style=dotted];
m2_757 -> m2_759  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_767 -> m2_764  [key=0, style=bold, color=blue];
m2_769 -> m2_770  [key=0, style=solid];
m2_769 -> m2_771  [key=2, style=dotted];
m2_778 -> m2_775  [key=0, style=bold, color=blue];
m2_780 -> m2_781  [key=0, style=solid];
m2_780 -> m2_771  [key=2, style=dotted];
m2_788 -> m2_785  [key=0, style=bold, color=blue];
m2_786 -> m2_787  [key=0, style=solid];
m2_786 -> m2_771  [key=2, style=dotted];
m2_794 -> m2_795  [key=0, style=solid];
m2_794 -> m2_368  [key=2, style=dotted];
m2_797 -> m2_793  [key=0, style=bold, color=blue];
m2_795 -> m2_796  [key=0, style=solid];
m2_795 -> m2_771  [key=2, style=dotted];
m2_804 -> m2_801  [key=0, style=bold, color=blue];
m2_806 -> m2_807  [key=0, style=solid];
m2_806 -> m2_808  [key=2, style=dotted];
m2_815 -> m2_812  [key=0, style=bold, color=blue];
m2_813 -> m2_814  [key=0, style=solid];
m2_813 -> m2_808  [key=2, style=dotted];
m2_822 -> m2_823  [key=0, style=solid];
m2_822 -> m2_368  [key=2, style=dotted];
m2_825 -> m2_821  [key=0, style=bold, color=blue];
m2_823 -> m2_824  [key=0, style=solid];
m2_823 -> m2_808  [key=2, style=dotted];
m2_833 -> m2_834  [key=0, style=solid];
m2_833 -> m2_835  [key=2, style=dotted];
m2_842 -> m2_839  [key=0, style=bold, color=blue];
m2_840 -> m2_841  [key=0, style=solid];
m2_840 -> m2_835  [key=2, style=dotted];
m2_848 -> m2_849  [key=0, style=solid];
m2_848 -> m2_368  [key=2, style=dotted];
m2_851 -> m2_847  [key=0, style=bold, color=blue];
m2_849 -> m2_850  [key=0, style=solid];
m2_849 -> m2_835  [key=2, style=dotted];
m2_859 -> m2_860  [key=0, style=solid];
m2_859 -> m2_861  [key=2, style=dotted];
m2_868 -> m2_865  [key=0, style=bold, color=blue];
m2_866 -> m2_867  [key=0, style=solid];
m2_866 -> m2_861  [key=2, style=dotted];
m2_874 -> m2_875  [key=0, style=solid];
m2_874 -> m2_136  [key=2, style=dotted];
m2_874 -> m2_368  [key=2, style=dotted];
m2_878 -> m2_873  [key=0, style=bold, color=blue];
m2_875 -> m2_876  [key=0, style=solid];
m2_875 -> m2_861  [key=2, style=dotted];
m2_875 -> m2_877  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_899 -> m2_897  [key=0, style=bold, color=blue];
m2_898 -> m2_899  [key=0, style=solid];
m2_55 -> m2_53  [key=0, style=bold, color=blue];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_133  [key=2, style=dotted];
m2_115 -> m2_117  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m2_117 -> m2_118  [key=0, style=solid];
m2_117 -> m2_119  [key=1, style=dashed, color=darkseagreen4, label=job];
m2_117 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label=job];
m2_117 -> m2_134  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_135  [key=2, style=dotted];
m2_121 -> m2_136  [key=2, style=dotted];
m2_121 -> m2_137  [key=2, style=dotted];
m2_175 -> m2_176  [key=0, style=solid];
m2_175 -> m2_64  [key=2, style=dotted];
m2_178 -> m2_179  [key=0, style=solid];
m2_178 -> m2_165  [key=2, style=dotted];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_64  [key=2, style=dotted];
m2_226 -> m2_227  [key=0, style=solid];
m2_226 -> m2_64  [key=2, style=dotted];
m2_399 -> m2_400  [key=0, style=solid];
m2_399 -> m2_407  [key=2, style=dotted];
m2_399 -> m2_137  [key=2, style=dotted];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_408  [key=2, style=dotted];
m2_448 -> m2_449  [key=0, style=solid];
m2_448 -> m2_429  [key=2, style=dotted];
m2_495 -> m2_496  [key=0, style=solid];
m2_495 -> m2_64  [key=2, style=dotted];
m2_506 -> m2_507  [key=0, style=solid];
m2_506 -> m2_408  [key=2, style=dotted];
m2_569 -> m2_570  [key=0, style=solid];
m2_569 -> m2_64  [key=2, style=dotted];
m2_23 -> m2_21  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=2, style=dotted];
m2_156 -> m2_154  [key=0, style=bold, color=blue];
m2_196 -> m2_194  [key=0, style=bold, color=blue];
m2_248 -> m2_246  [key=0, style=bold, color=blue];
m2_259 -> m2_257  [key=0, style=bold, color=blue];
m2_303 -> m2_301  [key=0, style=bold, color=blue];
m2_314 -> m2_312  [key=0, style=bold, color=blue];
m2_341 -> m2_339  [key=0, style=bold, color=blue];
m2_351 -> m2_349  [key=0, style=bold, color=blue];
m2_378 -> m2_376  [key=0, style=bold, color=blue];
m2_390 -> m2_388  [key=0, style=bold, color=blue];
m2_417 -> m2_415  [key=0, style=bold, color=blue];
m2_438 -> m2_436  [key=0, style=bold, color=blue];
m2_465 -> m2_463  [key=0, style=bold, color=blue];
m2_488 -> m2_486  [key=0, style=bold, color=blue];
m2_518 -> m2_516  [key=0, style=bold, color=blue];
m2_529 -> m2_527  [key=0, style=bold, color=blue];
m2_553 -> m2_551  [key=0, style=bold, color=blue];
m2_582 -> m2_580  [key=0, style=bold, color=blue];
m2_609 -> m2_607  [key=0, style=bold, color=blue];
m2_628 -> m2_626  [key=0, style=bold, color=blue];
m2_663 -> m2_661  [key=0, style=bold, color=blue];
m2_689 -> m2_687  [key=0, style=bold, color=blue];
m2_716 -> m2_714  [key=0, style=bold, color=blue];
m2_742 -> m2_740  [key=0, style=bold, color=blue];
m2_770 -> m2_768  [key=0, style=bold, color=blue];
m2_781 -> m2_779  [key=0, style=bold, color=blue];
m2_807 -> m2_805  [key=0, style=bold, color=blue];
m2_834 -> m2_832  [key=0, style=bold, color=blue];
m2_860 -> m2_858  [key=0, style=bold, color=blue];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_135  [key=2, style=dotted];
m2_122 -> m2_136  [key=2, style=dotted];
m2_122 -> m2_137  [key=2, style=dotted];
m2_141 -> m2_139  [key=0, style=bold, color=blue];
m2_140 -> m2_100  [key=2, style=dotted];
m2_140 -> m2_141  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_145 -> m2_146  [key=0, style=solid];
m2_187 -> m2_185  [key=0, style=bold, color=blue];
m2_186 -> m2_100  [key=2, style=dotted];
m2_186 -> m2_187  [key=0, style=solid];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_64  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_64  [key=2, style=dotted];
m2_116 -> m2_117  [key=0, style=solid];
m2_163 -> m2_164  [key=0, style=solid];
m2_163 -> m2_165  [key=2, style=dotted];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_136  [key=2, style=dotted];
m2_180 -> m2_137  [key=2, style=dotted];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_64  [key=2, style=dotted];
m2_179 -> m2_180  [key=0, style=solid];
m2_179 -> m2_136  [key=2, style=dotted];
m2_179 -> m2_137  [key=2, style=dotted];
m2_203 -> m2_204  [key=0, style=solid];
m2_203 -> m2_165  [key=2, style=dotted];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_64  [key=2, style=dotted];
m2_266 -> m2_267  [key=0, style=solid];
m2_266 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_266 -> m2_132  [key=2, style=dotted];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_279  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_277 -> m2_280  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_277 -> m2_132  [key=2, style=dotted];
m2_289 -> m2_290  [key=0, style=solid];
m2_289 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m2_289 -> m2_132  [key=2, style=dotted];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_165  [key=2, style=dotted];
m2_357 -> m2_358  [key=0, style=solid];
m2_357 -> m2_165  [key=2, style=dotted];
m2_400 -> m2_64  [key=2, style=dotted];
m2_400 -> m2_401  [key=0, style=solid];
m2_401 -> m2_402  [key=0, style=solid];
m2_401 -> m2_379  [key=2, style=dotted];
m2_427 -> m2_428  [key=0, style=solid];
m2_427 -> m2_429  [key=2, style=dotted];
m2_451 -> m2_452  [key=0, style=solid];
m2_454 -> m2_455  [key=0, style=solid];
m2_507 -> m2_508  [key=0, style=solid];
m2_507 -> m2_408  [key=2, style=dotted];
m2_539 -> m2_540  [key=0, style=solid];
m2_560 -> m2_561  [key=0, style=solid];
m2_560 -> m2_165  [key=2, style=dotted];
m2_696 -> m2_697  [key=0, style=solid];
m2_696 -> m2_137  [key=2, style=dotted];
m2_706 -> m2_707  [key=0, style=solid];
m2_706 -> m2_466  [key=2, style=dotted];
m2_706 -> m2_137  [key=2, style=dotted];
m2_705 -> m2_466  [key=2, style=dotted];
m2_705 -> m2_706  [key=0, style=solid];
m2_705 -> m2_137  [key=2, style=dotted];
m2_749 -> m2_750  [key=0, style=solid];
m2_749 -> m2_137  [key=2, style=dotted];
m2_759 -> m2_760  [key=0, style=solid];
m2_759 -> m2_466  [key=2, style=dotted];
m2_759 -> m2_137  [key=2, style=dotted];
m2_758 -> m2_466  [key=2, style=dotted];
m2_758 -> m2_759  [key=0, style=solid];
m2_758 -> m2_137  [key=2, style=dotted];
m2_787 -> m2_788  [key=0, style=solid];
m2_787 -> m2_165  [key=2, style=dotted];
m2_814 -> m2_815  [key=0, style=solid];
m2_814 -> m2_816  [key=2, style=dotted];
m2_841 -> m2_842  [key=0, style=solid];
m2_841 -> m2_816  [key=2, style=dotted];
m2_867 -> m2_868  [key=0, style=solid];
m2_867 -> m2_137  [key=2, style=dotted];
m2_877 -> m2_878  [key=0, style=solid];
m2_877 -> m2_466  [key=2, style=dotted];
m2_877 -> m2_137  [key=2, style=dotted];
m2_876 -> m2_466  [key=2, style=dotted];
m2_876 -> m2_877  [key=0, style=solid];
m2_876 -> m2_137  [key=2, style=dotted];
m2_144 -> m2_142  [key=0, style=bold, color=blue];
m2_143 -> m2_144  [key=0, style=solid];
m2_147 -> m2_145  [key=0, style=bold, color=blue];
m2_146 -> m2_147  [key=0, style=solid];
m2_453 -> m2_451  [key=0, style=bold, color=blue];
m2_452 -> m2_453  [key=0, style=solid];
m2_456 -> m2_454  [key=0, style=bold, color=blue];
m2_455 -> m2_456  [key=0, style=solid];
m2_541 -> m2_539  [key=0, style=bold, color=blue];
m2_540 -> m2_541  [key=0, style=solid];
m2_543 -> m2_544  [key=0, style=solid];
m2_544 -> m2_542  [key=0, style=bold, color=blue];
m2_672 -> m2_673  [key=0, style=solid];
m2_674 -> m2_675  [key=0, style=solid];
m2_674 -> m2_104  [key=2, style=dotted];
m2_674 -> m2_676  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_673 -> m2_674  [key=0, style=solid];
m2_673 -> m2_677  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_675 -> m2_672  [key=0, style=bold, color=blue];
m2_369 -> m2_370  [key=0, style=solid];
m2_370 -> m2_45  [key=2, style=dotted];
m2_370 -> m2_371  [key=0, style=solid];
m2_370 -> m2_372  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_371 -> m2_369  [key=0, style=bold, color=blue];
m2_480 -> m2_481  [key=0, style=solid];
m2_481 -> m2_45  [key=2, style=dotted];
m2_481 -> m2_482  [key=0, style=solid];
m2_481 -> m2_483  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_482 -> m2_480  [key=0, style=bold, color=blue];
m2_879 -> m2_880  [key=0, style=solid];
m2_879 -> m2_883  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>"];
m2_880 -> m2_885  [key=2, style=dotted];
m2_880 -> m2_881  [key=0, style=solid];
m2_880 -> m2_883  [key=1, style=dashed, color=darkseagreen4, label=sqlConnection];
m2_881 -> m2_882  [key=0, style=solid];
m2_881 -> m2_886  [key=2, style=dotted];
m2_883 -> m2_884  [key=0, style=solid];
m2_883 -> m2_887  [key=2, style=dotted];
m2_882 -> m2_883  [key=0, style=solid];
m2_882 -> m2_24  [key=2, style=dotted];
m2_884 -> m2_879  [key=0, style=bold, color=blue];
m2_239 -> m2_240  [key=0, style=solid];
m2_240 -> m2_45  [key=2, style=dotted];
m2_240 -> m2_241  [key=0, style=solid];
m2_240 -> m2_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_241 -> m2_239  [key=0, style=bold, color=blue];
m2_158 -> m2_159  [key=0, style=solid];
m2_159 -> m2_45  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_160 -> m2_158  [key=0, style=bold, color=blue];
m2_56 -> m2_57  [key=0, style=solid];
m2_57 -> m2_45  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_58 -> m2_56  [key=0, style=bold, color=blue];
m2_315 -> m2_316  [key=0, style=solid];
m2_316 -> m2_45  [key=2, style=dotted];
m2_316 -> m2_317  [key=0, style=solid];
m2_316 -> m2_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_317 -> m2_315  [key=0, style=bold, color=blue];
m2_708 -> m2_709  [key=0, style=solid];
m2_709 -> m2_45  [key=2, style=dotted];
m2_709 -> m2_710  [key=0, style=solid];
m2_709 -> m2_711  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_710 -> m2_708  [key=0, style=bold, color=blue];
m2_100 -> m2_900  [key=0, style=solid];
m2_900 -> m2_100  [key=0, style=bold, color=blue];
m2_509 -> m2_510  [key=0, style=solid];
m2_510 -> m2_45  [key=2, style=dotted];
m2_510 -> m2_511  [key=0, style=solid];
m2_510 -> m2_512  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_511 -> m2_509  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=provider];
m2_2 -> m2_7  [key=2, style=dotted];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_86 -> m2_87  [key=0, style=solid, color=green];
m2_87 -> m2_88  [key=0, style=solid, color=green];
m2_87 -> m2_45  [key=2, style=dotted, color=green];
m2_87 -> m2_89  [key=1, style=dashed, color=green, label="lambda expression"];
m2_88 -> m2_86  [key=0, style=bold, color=blue];
m2_591 -> m2_592  [key=0, style=solid];
m2_593 -> m2_594  [key=0, style=solid];
m2_593 -> m2_104  [key=2, style=dotted];
m2_593 -> m2_595  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_592 -> m2_593  [key=0, style=solid];
m2_592 -> m2_596  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_594 -> m2_591  [key=0, style=bold, color=blue];
m2_744 -> m2_745  [key=0, style=solid];
m2_745 -> m2_45  [key=2, style=dotted];
m2_745 -> m2_746  [key=0, style=solid];
m2_745 -> m2_747  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_746 -> m2_744  [key=0, style=bold, color=blue];
m2_468 -> m2_469  [key=0, style=solid];
m2_470 -> m2_471  [key=0, style=solid];
m2_470 -> m2_104  [key=2, style=dotted];
m2_470 -> m2_472  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_469 -> m2_470  [key=0, style=solid];
m2_469 -> m2_473  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_471 -> m2_468  [key=0, style=bold, color=blue];
m2_734 -> m2_735  [key=0, style=solid];
m2_735 -> m2_45  [key=2, style=dotted];
m2_735 -> m2_736  [key=0, style=solid];
m2_735 -> m2_737  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_736 -> m2_734  [key=0, style=bold, color=blue];
m2_205 -> m2_206  [key=0, style=solid];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_104  [key=2, style=dotted];
m2_207 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_208 -> m2_205  [key=0, style=bold, color=blue];
m2_782 -> m2_783  [key=0, style=solid];
m2_783 -> m2_45  [key=2, style=dotted];
m2_783 -> m2_784  [key=0, style=solid];
m2_783 -> m2_785  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_784 -> m2_782  [key=0, style=bold, color=blue];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_45  [key=2, style=dotted];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_44 -> m2_42  [key=0, style=bold, color=blue];
m2_655 -> m2_656  [key=0, style=solid];
m2_656 -> m2_45  [key=2, style=dotted];
m2_656 -> m2_657  [key=0, style=solid];
m2_656 -> m2_658  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_657 -> m2_655  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid, color=green];
m2_26 -> m2_27  [key=0, style=solid, color=green];
m2_26 -> m2_28  [key=2, style=dotted, color=green];
m2_26 -> m2_29  [key=1, style=dashed, color=green, label="lambda expression"];
m2_27 -> m2_25  [key=0, style=bold, color=blue];
m2_498 -> m2_499  [key=0, style=solid];
m2_500 -> m2_501  [key=0, style=solid];
m2_500 -> m2_104  [key=2, style=dotted];
m2_500 -> m2_502  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_499 -> m2_500  [key=0, style=solid];
m2_499 -> m2_503  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_501 -> m2_498  [key=0, style=bold, color=blue];
m2_520 -> m2_521  [key=0, style=solid];
m2_521 -> m2_45  [key=2, style=dotted];
m2_521 -> m2_522  [key=0, style=solid];
m2_521 -> m2_523  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_522 -> m2_520  [key=0, style=bold, color=blue];
m2_665 -> m2_666  [key=0, style=solid];
m2_666 -> m2_45  [key=2, style=dotted];
m2_666 -> m2_667  [key=0, style=solid];
m2_666 -> m2_668  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_667 -> m2_665  [key=0, style=bold, color=blue];
m2_681 -> m2_682  [key=0, style=solid];
m2_682 -> m2_45  [key=2, style=dotted];
m2_682 -> m2_683  [key=0, style=solid];
m2_682 -> m2_684  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_683 -> m2_681  [key=0, style=bold, color=blue];
m2_28 -> m2_888  [key=0, style=solid];
m2_28 -> m2_892  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Hangfire.SqlServer.SqlServerConnection>"];
m2_890 -> m2_891  [key=0, style=solid];
m2_890 -> m2_8  [key=2, style=dotted];
m2_890 -> m2_9  [key=2, style=dotted];
m2_890 -> m2_897  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_888 -> m2_889  [key=0, style=solid];
m2_888 -> m2_885  [key=2, style=dotted];
m2_892 -> m2_893  [key=0, style=solid];
m2_892 -> m2_896  [key=2, style=dotted];
m2_889 -> m2_890  [key=0, style=solid];
m2_889 -> m2_894  [key=2, style=dotted];
m2_889 -> m2_891  [key=1, style=dashed, color=darkseagreen4, label=storage];
m2_891 -> m2_892  [key=0, style=solid];
m2_891 -> m2_895  [key=2, style=dotted];
m2_893 -> m2_28  [key=0, style=bold, color=blue];
m2_620 -> m2_621  [key=0, style=solid];
m2_621 -> m2_45  [key=2, style=dotted];
m2_621 -> m2_622  [key=0, style=solid];
m2_621 -> m2_623  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_622 -> m2_620  [key=0, style=bold, color=blue];
m2_798 -> m2_799  [key=0, style=solid];
m2_799 -> m2_45  [key=2, style=dotted];
m2_799 -> m2_800  [key=0, style=solid];
m2_799 -> m2_801  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_800 -> m2_798  [key=0, style=bold, color=blue];
m2_294 -> m2_295  [key=0, style=solid];
m2_295 -> m2_45  [key=2, style=dotted];
m2_295 -> m2_296  [key=0, style=solid];
m2_295 -> m2_297  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_296 -> m2_294  [key=0, style=bold, color=blue];
m2_817 -> m2_818  [key=0, style=solid];
m2_819 -> m2_820  [key=0, style=solid];
m2_819 -> m2_104  [key=2, style=dotted];
m2_819 -> m2_821  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_818 -> m2_819  [key=0, style=solid];
m2_818 -> m2_822  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_820 -> m2_817  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid, color=green];
m2_75 -> m2_76  [key=0, style=solid, color=green];
m2_75 -> m2_45  [key=2, style=dotted, color=green];
m2_75 -> m2_77  [key=1, style=dashed, color=green, label="lambda expression"];
m2_76 -> m2_74  [key=0, style=bold, color=blue];
m2_630 -> m2_631  [key=0, style=solid];
m2_631 -> m2_45  [key=2, style=dotted];
m2_631 -> m2_632  [key=0, style=solid];
m2_631 -> m2_633  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_632 -> m2_630  [key=0, style=bold, color=blue];
m2_852 -> m2_853  [key=0, style=solid];
m2_853 -> m2_45  [key=2, style=dotted];
m2_853 -> m2_854  [key=0, style=solid];
m2_853 -> m2_855  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_854 -> m2_852  [key=0, style=bold, color=blue];
m2_65 -> m2_66  [key=0, style=solid];
m2_66 -> m2_45  [key=2, style=dotted];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_67 -> m2_65  [key=0, style=bold, color=blue];
m2_574 -> m2_575  [key=0, style=solid];
m2_575 -> m2_45  [key=2, style=dotted];
m2_575 -> m2_576  [key=0, style=solid];
m2_575 -> m2_577  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_576 -> m2_574  [key=0, style=bold, color=blue];
m2_359 -> m2_360  [key=0, style=solid];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_104  [key=2, style=dotted];
m2_361 -> m2_363  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_360 -> m2_361  [key=0, style=solid];
m2_360 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_362 -> m2_359  [key=0, style=bold, color=blue];
m2_611 -> m2_612  [key=0, style=solid];
m2_613 -> m2_614  [key=0, style=solid];
m2_613 -> m2_104  [key=2, style=dotted];
m2_613 -> m2_615  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_612 -> m2_613  [key=0, style=solid];
m2_612 -> m2_616  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_614 -> m2_611  [key=0, style=bold, color=blue];
m2_271 -> m2_272  [key=0, style=solid];
m2_273 -> m2_274  [key=0, style=solid];
m2_273 -> m2_104  [key=2, style=dotted];
m2_273 -> m2_275  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_272 -> m2_273  [key=0, style=solid];
m2_272 -> m2_276  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_274 -> m2_271  [key=0, style=bold, color=blue];
m2_440 -> m2_441  [key=0, style=solid];
m2_442 -> m2_443  [key=0, style=solid];
m2_442 -> m2_104  [key=2, style=dotted];
m2_442 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_441 -> m2_442  [key=0, style=solid];
m2_441 -> m2_445  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_443 -> m2_440  [key=0, style=bold, color=blue];
m2_809 -> m2_810  [key=0, style=solid];
m2_810 -> m2_45  [key=2, style=dotted];
m2_810 -> m2_811  [key=0, style=solid];
m2_810 -> m2_812  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_811 -> m2_809  [key=0, style=bold, color=blue];
m2_530 -> m2_531  [key=0, style=solid];
m2_531 -> m2_532  [key=0, style=solid];
m2_531 -> m2_104  [key=2, style=dotted];
m2_531 -> m2_533  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_532 -> m2_530  [key=0, style=bold, color=blue];
m2_166 -> m2_167  [key=0, style=solid];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_104  [key=2, style=dotted];
m2_168 -> m2_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_169 -> m2_166  [key=0, style=bold, color=blue];
m2_430 -> m2_431  [key=0, style=solid];
m2_431 -> m2_45  [key=2, style=dotted];
m2_431 -> m2_432  [key=0, style=solid];
m2_431 -> m2_433  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_432 -> m2_430  [key=0, style=bold, color=blue];
m2_725 -> m2_726  [key=0, style=solid];
m2_727 -> m2_728  [key=0, style=solid];
m2_727 -> m2_104  [key=2, style=dotted];
m2_727 -> m2_729  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_726 -> m2_727  [key=0, style=solid];
m2_726 -> m2_730  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_728 -> m2_725  [key=0, style=bold, color=blue];
m2_148 -> m2_149  [key=0, style=solid];
m2_149 -> m2_45  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_150 -> m2_148  [key=0, style=bold, color=blue];
m2_101 -> m2_102  [key=0, style=solid];
m2_102 -> m2_103  [key=0, style=solid];
m2_102 -> m2_104  [key=2, style=dotted];
m2_102 -> m2_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_103 -> m2_101  [key=0, style=bold, color=blue];
m2_352 -> m2_353  [key=0, style=solid];
m2_353 -> m2_45  [key=2, style=dotted];
m2_353 -> m2_354  [key=0, style=solid];
m2_353 -> m2_355  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_354 -> m2_352  [key=0, style=bold, color=blue];
m2_584 -> m2_585  [key=0, style=solid];
m2_585 -> m2_45  [key=2, style=dotted];
m2_585 -> m2_586  [key=0, style=solid];
m2_585 -> m2_587  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_586 -> m2_584  [key=0, style=bold, color=blue];
m2_901 -> m2_26  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_75  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_87  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_168  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_207  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_231  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_240  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_251  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_273  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_285  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_295  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_306  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_316  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_324  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_333  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_344  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_353  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_361  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_370  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_382  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_392  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_410  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_421  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_442  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_458  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_470  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_481  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_491  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_500  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_510  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_521  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_531  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_546  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_556  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_564  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_575  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_585  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_593  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_602  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_613  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_621  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_631  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_639  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_648  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_656  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_666  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_674  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_682  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_692  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_700  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_709  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_719  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_727  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_735  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_745  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_753  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_762  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_773  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_783  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_791  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_799  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_810  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_819  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_827  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_837  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_845  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_853  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_863  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_871  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_901 -> m2_890  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m2_907 -> m2_94  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.SqlServerConnection"];
m2_902 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_903 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=queues];
m2_906 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_921 -> m2_327  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_904 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_905 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label=token];
m2_909 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_908 -> m2_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_910 -> m2_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_911 -> m2_211  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_912 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_913 -> m2_234  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_914 -> m2_247  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_915 -> m2_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_916 -> m2_265  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_917 -> m2_276  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_918 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_919 -> m2_302  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_920 -> m2_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_922 -> m2_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_923 -> m2_350  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_924 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_925 -> m2_377  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_926 -> m2_389  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_927 -> m2_416  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_928 -> m2_424  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_929 -> m2_437  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_930 -> m2_445  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_931 -> m2_464  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_932 -> m2_473  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_933 -> m2_487  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_934 -> m2_503  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_935 -> m2_517  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_936 -> m2_528  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_937 -> m2_552  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_938 -> m2_567  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_939 -> m2_581  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_940 -> m2_596  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_941 -> m2_608  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_942 -> m2_616  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_943 -> m2_627  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_944 -> m2_642  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_945 -> m2_651  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_946 -> m2_662  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_947 -> m2_677  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_948 -> m2_688  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_949 -> m2_703  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_950 -> m2_715  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_951 -> m2_730  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_952 -> m2_741  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_953 -> m2_756  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_954 -> m2_769  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_955 -> m2_780  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_956 -> m2_794  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_957 -> m2_806  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_958 -> m2_822  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_959 -> m2_833  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_960 -> m2_848  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m2_961 -> m2_859  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m2_962 -> m2_874  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m3_31 -> m3_172  [key=0, style=solid];
m3_172 -> m3_31  [key=0, style=bold, color=blue];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_36  [key=2, style=dotted];
m3_33 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_37  [key=2, style=dotted];
m3_35 -> m3_32  [key=0, style=bold, color=blue];
m3_77 -> m3_78  [key=0, style=solid];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_82  [key=2, style=dotted];
m3_78 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_36  [key=2, style=dotted];
m3_79 -> m3_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_37  [key=2, style=dotted];
m3_81 -> m3_77  [key=0, style=bold, color=blue];
m3_56 -> m3_57  [key=0, style=solid];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_12  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_60  [key=2, style=dotted];
m3_58 -> m3_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_59 -> m3_56  [key=0, style=bold, color=blue];
m3_95 -> m3_96  [key=0, style=solid];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_82  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid, color=green];
m3_97 -> m3_27  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid, color=green];
m3_98 -> m3_100  [key=2, style=dotted, color=green];
m3_98 -> m3_101  [key=1, style=dashed, color=green, label="lambda expression"];
m3_99 -> m3_95  [key=0, style=bold, color=blue];
m3_114 -> m3_115  [key=0, style=solid];
m3_115 -> m3_116  [key=0, style=solid, color=red];
m3_115 -> m3_82  [key=2, style=dotted];
m3_115 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_115 -> m3_126  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_116 -> m3_117  [key=0, style=solid, color=red];
m3_116 -> m3_13  [key=2, style=dotted, color=red];
m3_116 -> m3_36  [key=2, style=dotted, color=red];
m3_116 -> m3_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_36  [key=2, style=dotted];
m3_117 -> m3_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_117 -> m3_119  [key=1, style=dashed, color=darkseagreen4, label=exception];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_121  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_36  [key=2, style=dotted];
m3_120 -> m3_114  [key=0, style=bold, color=blue];
m3_146 -> m3_147  [key=0, style=solid];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_82  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid, color=green];
m3_148 -> m3_136  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid, color=green];
m3_149 -> m3_100  [key=2, style=dotted, color=green];
m3_149 -> m3_151  [key=1, style=dashed, color=green, label="lambda expression"];
m3_150 -> m3_146  [key=0, style=bold, color=blue];
m3_42 -> m3_43  [key=0, style=solid];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_36  [key=2, style=dotted];
m3_43 -> m3_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_37  [key=2, style=dotted];
m3_45 -> m3_42  [key=0, style=bold, color=blue];
m3_169 -> m3_170  [key=0, style=solid, color=red];
m3_20 -> m3_21  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=2, style=dotted];
m3_22 -> m3_20  [key=0, style=bold, color=blue];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=2, style=dotted];
m3_26 -> m3_24  [key=0, style=bold, color=blue];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_31  [key=2, style=dotted];
m3_30 -> m3_28  [key=0, style=bold, color=blue];
m3_38 -> m3_39  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_41  [key=2, style=dotted];
m3_40 -> m3_38  [key=0, style=bold, color=blue];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_41  [key=2, style=dotted];
m3_48 -> m3_46  [key=0, style=bold, color=blue];
m3_53 -> m3_54  [key=0, style=solid];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_41  [key=2, style=dotted];
m3_55 -> m3_53  [key=0, style=bold, color=blue];
m3_61 -> m3_62  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_64  [key=2, style=dotted];
m3_63 -> m3_61  [key=0, style=bold, color=blue];
m3_68 -> m3_69  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_41  [key=2, style=dotted];
m3_70 -> m3_68  [key=0, style=bold, color=blue];
m3_74 -> m3_75  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_41  [key=2, style=dotted];
m3_76 -> m3_74  [key=0, style=bold, color=blue];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_27  [key=2, style=dotted];
m3_83 -> m3_84  [key=0, style=solid];
m3_85 -> m3_83  [key=0, style=bold, color=blue];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_94  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_93 -> m3_91  [key=0, style=bold, color=blue];
m3_101 -> m3_102  [key=0, style=solid, color=green];
m3_102 -> m3_103  [key=0, style=solid, color=green];
m3_102 -> m3_36  [key=2, style=dotted, color=green];
m3_102 -> m3_104  [key=2, style=dotted, color=green];
m3_103 -> m3_101  [key=0, style=bold, color=blue];
m3_111 -> m3_112  [key=0, style=solid, color=red];
m3_112 -> m3_113  [key=0, style=solid, color=red];
m3_112 -> m3_36  [key=2, style=dotted, color=red];
m3_112 -> m3_104  [key=2, style=dotted, color=red];
m3_113 -> m3_111  [key=0, style=bold, color=blue];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_27  [key=2, style=dotted];
m3_122 -> m3_123  [key=0, style=solid, color=red];
m3_125 -> m3_126  [key=0, style=solid];
m3_123 -> m3_124  [key=0, style=solid, color=red];
m3_123 -> m3_36  [key=2, style=dotted, color=red];
m3_123 -> m3_104  [key=2, style=dotted, color=red];
m3_124 -> m3_122  [key=0, style=bold, color=blue];
m3_127 -> m3_125  [key=0, style=bold, color=blue];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_136  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_135 -> m3_133  [key=0, style=bold, color=blue];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_145  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_144 -> m3_142  [key=0, style=bold, color=blue];
m3_151 -> m3_152  [key=0, style=solid, color=green];
m3_152 -> m3_153  [key=0, style=solid, color=green];
m3_152 -> m3_136  [key=2, style=dotted, color=green];
m3_153 -> m3_151  [key=0, style=bold, color=blue];
m3_159 -> m3_160  [key=0, style=solid, color=red];
m3_160 -> m3_161  [key=0, style=solid, color=red];
m3_160 -> m3_136  [key=2, style=dotted, color=red];
m3_161 -> m3_159  [key=0, style=bold, color=blue];
m3_170 -> m3_171  [key=0, style=solid, color=red];
m3_170 -> m3_136  [key=2, style=dotted, color=red];
m3_171 -> m3_169  [key=0, style=bold, color=blue];
m3_86 -> m3_87  [key=0, style=solid];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_82  [key=2, style=dotted];
m3_87 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_36  [key=2, style=dotted];
m3_88 -> m3_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_37  [key=2, style=dotted];
m3_90 -> m3_86  [key=0, style=bold, color=blue];
m3_105 -> m3_106  [key=0, style=solid, color=red];
m3_106 -> m3_107  [key=0, style=solid, color=green];
m3_106 -> m3_13  [key=2, style=dotted, color=red];
m3_106 -> m3_14  [key=2, style=dotted, color=red];
m3_106 -> m3_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_107 -> m3_108  [key=0, style=solid, color=green];
m3_107 -> m3_82  [key=2, style=dotted, color=green];
m3_108 -> m3_109  [key=0, style=solid, color=red];
m3_108 -> m3_27  [key=2, style=dotted, color=red];
m3_109 -> m3_110  [key=0, style=solid, color=red];
m3_109 -> m3_37  [key=2, style=dotted, color=red];
m3_110 -> m3_105  [key=0, style=bold, color=blue];
m3_82 -> m3_173  [key=0, style=solid];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_41  [key=2, style=dotted];
m3_174 -> m3_82  [key=0, style=bold, color=blue];
m3_65 -> m3_66  [key=0, style=solid];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_60  [key=2, style=dotted];
m3_66 -> m3_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_67 -> m3_65  [key=0, style=bold, color=blue];
m3_128 -> m3_129  [key=0, style=solid];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_82  [key=2, style=dotted];
m3_129 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_36  [key=2, style=dotted];
m3_130 -> m3_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_37  [key=2, style=dotted];
m3_132 -> m3_128  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_11  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_12  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_13  [key=2, style=dotted];
m3_3 -> m3_14  [key=2, style=dotted];
m3_3 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_15  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_16  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_13  [key=2, style=dotted];
m3_6 -> m3_14  [key=2, style=dotted];
m3_6 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_17  [key=2, style=dotted];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_18  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_19  [key=2, style=dotted];
m3_9 -> m3_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_10 -> m3_0  [key=0, style=bold, color=blue];
m3_49 -> m3_50  [key=0, style=solid];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_36  [key=2, style=dotted];
m3_50 -> m3_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_37  [key=2, style=dotted];
m3_52 -> m3_49  [key=0, style=bold, color=blue];
m3_154 -> m3_155  [key=0, style=solid];
m3_155 -> m3_156  [key=0, style=solid, color=green];
m3_155 -> m3_82  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid, color=green];
m3_156 -> m3_136  [key=2, style=dotted, color=green];
m3_157 -> m3_158  [key=0, style=solid, color=red];
m3_157 -> m3_100  [key=2, style=dotted, color=red];
m3_157 -> m3_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_158 -> m3_154  [key=0, style=bold, color=blue];
m3_162 -> m3_163  [key=0, style=solid, color=red];
m3_163 -> m3_164  [key=0, style=solid, color=red];
m3_163 -> m3_13  [key=2, style=dotted, color=red];
m3_163 -> m3_14  [key=2, style=dotted, color=red];
m3_163 -> m3_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_164 -> m3_165  [key=0, style=solid];
m3_164 -> m3_82  [key=2, style=dotted];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_136  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_168  [key=2, style=dotted];
m3_167 -> m3_162  [key=0, style=bold, color=blue];
m3_137 -> m3_138  [key=0, style=solid];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_82  [key=2, style=dotted];
m3_138 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_36  [key=2, style=dotted];
m3_139 -> m3_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_37  [key=2, style=dotted];
m3_141 -> m3_137  [key=0, style=bold, color=blue];
m3_71 -> m3_72  [key=0, style=solid];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_60  [key=2, style=dotted];
m3_72 -> m3_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_73 -> m3_71  [key=0, style=bold, color=blue];
m3_175 -> m3_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_78  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_79  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_96  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_98  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_106  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_107  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_116  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_126  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_130  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_138  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_147  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_148  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_149  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_152  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_156  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_160  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_164  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_165  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_175 -> m3_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.BackgroundJobClientFacts"];
m3_176 -> m3_84  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_177 -> m3_92  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_178 -> m3_126  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_179 -> m3_134  [key=1, style=dashed, color=darkseagreen4, label=client];
m3_180 -> m3_143  [key=1, style=dashed, color=darkseagreen4, label=client];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_0  [key=0, style=bold, color=blue];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_2  [key=0, style=bold, color=blue];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=2, style=dotted];
m6_24 -> m6_22  [key=0, style=bold, color=blue];
m6_26 -> m6_27  [key=0, style=solid];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_29  [key=2, style=dotted];
m6_28 -> m6_26  [key=0, style=bold, color=blue];
m6_156 -> m6_157  [key=0, style=solid];
m6_160 -> m6_42  [key=2, style=dotted];
m6_160 -> m6_161  [key=0, style=solid];
m6_161 -> m6_43  [key=2, style=dotted];
m6_161 -> m6_162  [key=0, style=solid];
m6_158 -> m6_22  [key=2, style=dotted];
m6_158 -> m6_159  [key=0, style=solid];
m6_162 -> m6_26  [key=2, style=dotted];
m6_162 -> m6_163  [key=0, style=solid];
m6_157 -> m6_39  [key=2, style=dotted];
m6_157 -> m6_158  [key=0, style=solid];
m6_159 -> m6_40  [key=2, style=dotted];
m6_159 -> m6_160  [key=0, style=solid];
m6_163 -> m6_156  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid, color=green];
m6_1 -> m6_2  [key=0, style=solid, color=green];
m6_1 -> m6_5  [key=2, style=dotted, color=green];
m6_2 -> m6_3  [key=0, style=solid, color=green];
m6_2 -> m6_6  [key=2, style=dotted, color=green];
m6_2 -> m6_7  [key=2, style=dotted, color=green];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_3 -> m6_4  [key=0, style=solid, color=green];
m6_3 -> m6_8  [key=2, style=dotted, color=green];
m6_3 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m6_3 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m6_3 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m6_3 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m6_4 -> m6_0  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [key=0, style=solid];
m6_126 -> m6_127  [key=0, style=solid];
m6_132 -> m6_42  [key=2, style=dotted];
m6_132 -> m6_133  [key=0, style=solid];
m6_133 -> m6_43  [key=2, style=dotted];
m6_133 -> m6_134  [key=0, style=solid];
m6_128 -> m6_22  [key=2, style=dotted];
m6_128 -> m6_129  [key=0, style=solid];
m6_139 -> m6_26  [key=2, style=dotted];
m6_139 -> m6_140  [key=0, style=solid];
m6_127 -> m6_39  [key=2, style=dotted];
m6_127 -> m6_128  [key=0, style=solid];
m6_129 -> m6_40  [key=2, style=dotted];
m6_129 -> m6_130  [key=0, style=solid];
m6_130 -> m6_41  [key=2, style=dotted];
m6_130 -> m6_131  [key=0, style=solid];
m6_131 -> m6_41  [key=2, style=dotted];
m6_131 -> m6_132  [key=0, style=solid];
m6_134 -> m6_41  [key=2, style=dotted];
m6_134 -> m6_135  [key=0, style=solid];
m6_135 -> m6_41  [key=2, style=dotted];
m6_135 -> m6_136  [key=0, style=solid];
m6_138 -> m6_41  [key=2, style=dotted];
m6_138 -> m6_139  [key=0, style=solid];
m6_136 -> m6_73  [key=2, style=dotted];
m6_136 -> m6_138  [key=1, style=dashed, color=darkseagreen4, label=table5];
m6_136 -> m6_137  [key=0, style=solid];
m6_137 -> m6_74  [key=2, style=dotted];
m6_137 -> m6_138  [key=0, style=solid];
m6_140 -> m6_126  [key=0, style=bold, color=blue];
m6_5 -> m6_14  [key=0, style=solid];
m6_5 -> d10  [key=2, style=dotted];
m6_173 -> m6_174  [key=0, style=solid];
m6_179 -> m6_42  [key=2, style=dotted];
m6_179 -> m6_180  [key=0, style=solid];
m6_180 -> m6_43  [key=2, style=dotted];
m6_180 -> m6_181  [key=0, style=solid];
m6_175 -> m6_22  [key=2, style=dotted];
m6_175 -> m6_176  [key=0, style=solid];
m6_181 -> m6_26  [key=2, style=dotted];
m6_181 -> m6_182  [key=0, style=solid];
m6_174 -> m6_39  [key=2, style=dotted];
m6_174 -> m6_175  [key=0, style=solid];
m6_176 -> m6_40  [key=2, style=dotted];
m6_176 -> m6_177  [key=0, style=solid];
m6_177 -> m6_41  [key=2, style=dotted];
m6_177 -> m6_178  [key=0, style=solid];
m6_178 -> m6_41  [key=2, style=dotted];
m6_178 -> m6_179  [key=0, style=solid];
m6_182 -> m6_173  [key=0, style=bold, color=blue];
m6_112 -> m6_113  [key=0, style=solid];
m6_119 -> m6_42  [key=2, style=dotted];
m6_119 -> m6_120  [key=0, style=solid];
m6_123 -> m6_43  [key=2, style=dotted];
m6_123 -> m6_124  [key=0, style=solid];
m6_114 -> m6_22  [key=2, style=dotted];
m6_114 -> m6_115  [key=0, style=solid];
m6_124 -> m6_26  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_113 -> m6_39  [key=2, style=dotted];
m6_113 -> m6_114  [key=0, style=solid];
m6_115 -> m6_40  [key=2, style=dotted];
m6_115 -> m6_116  [key=0, style=solid];
m6_116 -> m6_41  [key=2, style=dotted];
m6_116 -> m6_117  [key=0, style=solid];
m6_117 -> m6_41  [key=2, style=dotted];
m6_117 -> m6_118  [key=0, style=solid];
m6_118 -> m6_41  [key=2, style=dotted];
m6_118 -> m6_119  [key=0, style=solid];
m6_120 -> m6_73  [key=2, style=dotted];
m6_120 -> m6_123  [key=1, style=dashed, color=darkseagreen4, label=table4];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label=table4];
m6_121 -> m6_74  [key=2, style=dotted];
m6_121 -> m6_122  [key=0, style=solid];
m6_122 -> m6_74  [key=2, style=dotted];
m6_122 -> m6_123  [key=0, style=solid];
m6_125 -> m6_112  [key=0, style=bold, color=blue];
m6_199 -> m6_200  [key=0, style=solid];
m6_205 -> m6_42  [key=2, style=dotted];
m6_205 -> m6_206  [key=0, style=solid];
m6_208 -> m6_43  [key=2, style=dotted];
m6_208 -> m6_209  [key=0, style=solid];
m6_201 -> m6_22  [key=2, style=dotted];
m6_201 -> m6_202  [key=0, style=solid];
m6_209 -> m6_26  [key=2, style=dotted];
m6_209 -> m6_210  [key=0, style=solid];
m6_200 -> m6_39  [key=2, style=dotted];
m6_200 -> m6_201  [key=0, style=solid];
m6_202 -> m6_40  [key=2, style=dotted];
m6_202 -> m6_203  [key=0, style=solid];
m6_203 -> m6_41  [key=2, style=dotted];
m6_203 -> m6_204  [key=0, style=solid];
m6_204 -> m6_41  [key=2, style=dotted];
m6_204 -> m6_205  [key=0, style=solid];
m6_206 -> m6_73  [key=2, style=dotted];
m6_206 -> m6_208  [key=1, style=dashed, color=darkseagreen4, label=table8];
m6_206 -> m6_207  [key=0, style=solid];
m6_207 -> m6_74  [key=2, style=dotted];
m6_207 -> m6_208  [key=0, style=solid];
m6_210 -> m6_199  [key=0, style=bold, color=blue];
m6_14 -> m6_15  [key=0, style=solid, color=green];
m6_14 -> m6_3  [key=0, style=bold, color=blue];
m6_15 -> m6_16  [key=0, style=solid, color=green];
m6_15 -> m6_17  [key=0, style=solid, color=green];
m6_16 -> m6_0  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_17 -> m6_14  [key=0, style=bold, color=blue];
m6_17 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m6_17 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m6_17 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m6_17 -> m6_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m6_17 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_16  [key=2, style=dotted];
m6_7 -> m6_14  [key=0, style=solid];
m6_7 -> d10  [key=2, style=dotted];
m6_44 -> m6_45  [key=0, style=solid, color=green];
m6_45 -> m6_46  [key=0, style=solid, color=green];
m6_45 -> m6_39  [key=2, style=dotted, color=green];
m6_46 -> m6_47  [key=0, style=solid, color=green];
m6_46 -> m6_22  [key=2, style=dotted, color=green];
m6_47 -> m6_48  [key=0, style=solid, color=green];
m6_47 -> m6_40  [key=2, style=dotted, color=green];
m6_48 -> m6_49  [key=0, style=solid, color=green];
m6_48 -> m6_41  [key=2, style=dotted, color=green];
m6_49 -> m6_50  [key=0, style=solid, color=green];
m6_49 -> m6_42  [key=2, style=dotted, color=green];
m6_50 -> m6_51  [key=0, style=solid, color=green];
m6_50 -> m6_43  [key=2, style=dotted, color=green];
m6_51 -> m6_52  [key=0, style=solid, color=green];
m6_51 -> m6_26  [key=2, style=dotted, color=green];
m6_52 -> m6_44  [key=0, style=bold, color=blue];
m6_164 -> m6_165  [key=0, style=solid];
m6_169 -> m6_42  [key=2, style=dotted];
m6_169 -> m6_170  [key=0, style=solid];
m6_170 -> m6_43  [key=2, style=dotted];
m6_170 -> m6_171  [key=0, style=solid];
m6_166 -> m6_22  [key=2, style=dotted];
m6_166 -> m6_167  [key=0, style=solid];
m6_171 -> m6_26  [key=2, style=dotted];
m6_171 -> m6_172  [key=0, style=solid];
m6_165 -> m6_39  [key=2, style=dotted];
m6_165 -> m6_166  [key=0, style=solid];
m6_167 -> m6_40  [key=2, style=dotted];
m6_167 -> m6_168  [key=0, style=solid];
m6_168 -> m6_41  [key=2, style=dotted];
m6_168 -> m6_169  [key=0, style=solid];
m6_172 -> m6_164  [key=0, style=bold, color=blue];
m6_183 -> m6_184  [key=0, style=solid];
m6_190 -> m6_42  [key=2, style=dotted];
m6_190 -> m6_191  [key=0, style=solid];
m6_196 -> m6_43  [key=2, style=dotted];
m6_196 -> m6_197  [key=0, style=solid];
m6_185 -> m6_22  [key=2, style=dotted];
m6_185 -> m6_186  [key=0, style=solid];
m6_197 -> m6_26  [key=2, style=dotted];
m6_197 -> m6_198  [key=0, style=solid];
m6_184 -> m6_39  [key=2, style=dotted];
m6_184 -> m6_185  [key=0, style=solid];
m6_186 -> m6_40  [key=2, style=dotted];
m6_186 -> m6_187  [key=0, style=solid];
m6_187 -> m6_41  [key=2, style=dotted];
m6_187 -> m6_188  [key=0, style=solid];
m6_188 -> m6_41  [key=2, style=dotted];
m6_188 -> m6_189  [key=0, style=solid];
m6_189 -> m6_41  [key=2, style=dotted];
m6_189 -> m6_190  [key=0, style=solid];
m6_191 -> m6_73  [key=2, style=dotted];
m6_191 -> m6_196  [key=1, style=dashed, color=darkseagreen4, label=table7];
m6_191 -> m6_192  [key=0, style=solid];
m6_191 -> m6_193  [key=1, style=dashed, color=darkseagreen4, label=table7];
m6_191 -> m6_194  [key=1, style=dashed, color=darkseagreen4, label=table7];
m6_191 -> m6_195  [key=1, style=dashed, color=darkseagreen4, label=table7];
m6_192 -> m6_74  [key=2, style=dotted];
m6_192 -> m6_193  [key=0, style=solid];
m6_193 -> m6_74  [key=2, style=dotted];
m6_193 -> m6_194  [key=0, style=solid];
m6_194 -> m6_74  [key=2, style=dotted];
m6_194 -> m6_195  [key=0, style=solid];
m6_195 -> m6_74  [key=2, style=dotted];
m6_195 -> m6_196  [key=0, style=solid];
m6_198 -> m6_183  [key=0, style=bold, color=blue];
m6_9 -> m6_10  [key=0, style=solid, color=green];
m6_9 -> m6_14  [key=0, style=solid];
m6_9 -> d10  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid, color=green];
m6_10 -> m6_13  [key=2, style=dotted, color=green];
m6_11 -> m6_12  [key=0, style=solid, color=green];
m6_12 -> m6_9  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_75 -> m6_76  [key=0, style=solid];
m6_80 -> m6_42  [key=2, style=dotted];
m6_80 -> m6_81  [key=0, style=solid];
m6_85 -> m6_43  [key=2, style=dotted];
m6_85 -> m6_86  [key=0, style=solid];
m6_77 -> m6_22  [key=2, style=dotted];
m6_77 -> m6_78  [key=0, style=solid];
m6_86 -> m6_26  [key=2, style=dotted];
m6_86 -> m6_87  [key=0, style=solid];
m6_76 -> m6_39  [key=2, style=dotted];
m6_76 -> m6_77  [key=0, style=solid];
m6_78 -> m6_40  [key=2, style=dotted];
m6_78 -> m6_79  [key=0, style=solid];
m6_79 -> m6_41  [key=2, style=dotted];
m6_79 -> m6_80  [key=0, style=solid];
m6_81 -> m6_73  [key=2, style=dotted];
m6_81 -> m6_85  [key=1, style=dashed, color=darkseagreen4, label=table2];
m6_81 -> m6_82  [key=0, style=solid];
m6_81 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label=table2];
m6_81 -> m6_84  [key=1, style=dashed, color=darkseagreen4, label=table2];
m6_82 -> m6_74  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_83 -> m6_74  [key=2, style=dotted];
m6_83 -> m6_84  [key=0, style=solid];
m6_84 -> m6_74  [key=2, style=dotted];
m6_84 -> m6_85  [key=0, style=solid];
m6_87 -> m6_75  [key=0, style=bold, color=blue];
m6_101 -> m6_102  [key=0, style=solid];
m6_106 -> m6_42  [key=2, style=dotted];
m6_106 -> m6_107  [key=0, style=solid];
m6_107 -> m6_43  [key=2, style=dotted];
m6_107 -> m6_108  [key=0, style=solid];
m6_103 -> m6_22  [key=2, style=dotted];
m6_103 -> m6_104  [key=0, style=solid];
m6_110 -> m6_26  [key=2, style=dotted];
m6_110 -> m6_111  [key=0, style=solid];
m6_102 -> m6_39  [key=2, style=dotted];
m6_102 -> m6_103  [key=0, style=solid];
m6_104 -> m6_40  [key=2, style=dotted];
m6_104 -> m6_105  [key=0, style=solid];
m6_105 -> m6_41  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_108 -> m6_41  [key=2, style=dotted];
m6_108 -> m6_109  [key=0, style=solid];
m6_109 -> m6_41  [key=2, style=dotted];
m6_109 -> m6_110  [key=0, style=solid];
m6_111 -> m6_101  [key=0, style=bold, color=blue];
m6_141 -> m6_142  [key=0, style=solid];
m6_148 -> m6_42  [key=2, style=dotted];
m6_148 -> m6_149  [key=0, style=solid];
m6_153 -> m6_43  [key=2, style=dotted];
m6_153 -> m6_154  [key=0, style=solid];
m6_143 -> m6_22  [key=2, style=dotted];
m6_143 -> m6_144  [key=0, style=solid];
m6_154 -> m6_26  [key=2, style=dotted];
m6_154 -> m6_155  [key=0, style=solid];
m6_142 -> m6_39  [key=2, style=dotted];
m6_142 -> m6_143  [key=0, style=solid];
m6_144 -> m6_40  [key=2, style=dotted];
m6_144 -> m6_145  [key=0, style=solid];
m6_145 -> m6_41  [key=2, style=dotted];
m6_145 -> m6_146  [key=0, style=solid];
m6_146 -> m6_41  [key=2, style=dotted];
m6_146 -> m6_147  [key=0, style=solid];
m6_147 -> m6_41  [key=2, style=dotted];
m6_147 -> m6_148  [key=0, style=solid];
m6_149 -> m6_73  [key=2, style=dotted];
m6_149 -> m6_153  [key=1, style=dashed, color=darkseagreen4, label=table6];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_151  [key=1, style=dashed, color=darkseagreen4, label=table6];
m6_149 -> m6_152  [key=1, style=dashed, color=darkseagreen4, label=table6];
m6_150 -> m6_74  [key=2, style=dotted];
m6_150 -> m6_151  [key=0, style=solid];
m6_151 -> m6_74  [key=2, style=dotted];
m6_151 -> m6_152  [key=0, style=solid];
m6_152 -> m6_74  [key=2, style=dotted];
m6_152 -> m6_153  [key=0, style=solid];
m6_155 -> m6_141  [key=0, style=bold, color=blue];
m6_88 -> m6_89  [key=0, style=solid];
m6_96 -> m6_42  [key=2, style=dotted];
m6_96 -> m6_97  [key=0, style=solid];
m6_97 -> m6_43  [key=2, style=dotted];
m6_97 -> m6_98  [key=0, style=solid];
m6_90 -> m6_22  [key=2, style=dotted];
m6_90 -> m6_91  [key=0, style=solid];
m6_99 -> m6_26  [key=2, style=dotted];
m6_99 -> m6_100  [key=0, style=solid];
m6_89 -> m6_39  [key=2, style=dotted];
m6_89 -> m6_90  [key=0, style=solid];
m6_94 -> m6_40  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid];
m6_95 -> m6_41  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_98 -> m6_41  [key=2, style=dotted];
m6_98 -> m6_99  [key=0, style=solid];
m6_91 -> m6_73  [key=2, style=dotted];
m6_91 -> m6_94  [key=1, style=dashed, color=darkseagreen4, label=table3];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_93  [key=1, style=dashed, color=darkseagreen4, label=table3];
m6_92 -> m6_74  [key=2, style=dotted];
m6_92 -> m6_93  [key=0, style=solid];
m6_93 -> m6_74  [key=2, style=dotted];
m6_93 -> m6_94  [key=0, style=solid];
m6_100 -> m6_88  [key=0, style=bold, color=blue];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_8  [key=0, style=solid];
m6_18 -> m6_19  [key=0, style=solid, color=green];
m6_19 -> m6_20  [key=0, style=solid, color=green];
m6_19 -> m6_21  [key=2, style=dotted, color=green];
m6_20 -> m6_18  [key=0, style=bold, color=blue];
m6_72 -> m6_62  [key=0, style=bold, color=blue];
m6_63 -> m6_64  [key=0, style=solid, color=green];
m6_63 -> m6_39  [key=2, style=dotted, color=green];
m6_62 -> m6_63  [key=0, style=solid, color=green];
m6_64 -> m6_65  [key=0, style=solid, color=green];
m6_64 -> m6_22  [key=2, style=dotted, color=green];
m6_65 -> m6_66  [key=0, style=solid, color=green];
m6_65 -> m6_40  [key=2, style=dotted, color=green];
m6_66 -> m6_67  [key=0, style=solid, color=green];
m6_66 -> m6_41  [key=2, style=dotted, color=green];
m6_67 -> m6_68  [key=0, style=solid, color=green];
m6_67 -> m6_42  [key=2, style=dotted, color=green];
m6_68 -> m6_69  [key=0, style=solid, color=green];
m6_68 -> m6_73  [key=2, style=dotted, color=green];
m6_68 -> m6_70  [key=1, style=dashed, color=green, label=table1];
m6_69 -> m6_70  [key=0, style=solid, color=green];
m6_69 -> m6_74  [key=2, style=dotted, color=green];
m6_70 -> m6_43  [key=2, style=dotted];
m6_70 -> m6_71  [key=0, style=solid];
m6_71 -> m6_26  [key=2, style=dotted];
m6_71 -> m6_72  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_10  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid, color=green];
m6_35 -> m6_42  [key=2, style=dotted, color=green];
m6_34 -> m6_35  [key=0, style=solid, color=green];
m6_34 -> m6_41  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid, color=green];
m6_36 -> m6_43  [key=2, style=dotted, color=green];
m6_37 -> m6_38  [key=0, style=solid, color=green];
m6_37 -> m6_26  [key=2, style=dotted, color=green];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_40  [key=2, style=dotted];
m6_32 -> m6_22  [key=2, style=dotted];
m6_32 -> m6_33  [key=0, style=solid];
m6_31 -> m6_39  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_38 -> m6_30  [key=0, style=bold, color=blue];
m6_53 -> m6_54  [key=0, style=solid, color=green];
m6_54 -> m6_55  [key=0, style=solid, color=green];
m6_54 -> m6_39  [key=2, style=dotted, color=green];
m6_55 -> m6_56  [key=0, style=solid, color=green];
m6_55 -> m6_22  [key=2, style=dotted, color=green];
m6_56 -> m6_57  [key=0, style=solid, color=green];
m6_56 -> m6_40  [key=2, style=dotted, color=green];
m6_57 -> m6_58  [key=0, style=solid, color=green];
m6_57 -> m6_41  [key=2, style=dotted, color=green];
m6_58 -> m6_59  [key=0, style=solid, color=green];
m6_58 -> m6_42  [key=2, style=dotted, color=green];
m6_59 -> m6_60  [key=0, style=solid, color=green];
m6_59 -> m6_43  [key=2, style=dotted, color=green];
m6_60 -> m6_61  [key=0, style=solid, color=green];
m6_60 -> m6_26  [key=2, style=dotted, color=green];
m6_61 -> m6_53  [key=0, style=bold, color=blue];
m6_211 -> m6_37  [key=1, style=dashed, color=green, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_46  [key=1, style=dashed, color=green, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_51  [key=1, style=dashed, color=green, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_55  [key=1, style=dashed, color=green, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_60  [key=1, style=dashed, color=green, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_64  [key=1, style=dashed, color=green, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_99  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_128  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_166  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_171  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_185  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_201  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m6_211 -> m6_209  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.StateMachineFeature"];
m7_57 -> m7_88  [key=0, style=solid, color=green];
m7_57 -> m7_53  [key=3, color=darkorchid, style=bold, label="Parameter variable string queue"];
m7_88 -> m7_89  [key=0, style=solid, color=green];
m7_88 -> m7_18  [key=2, style=dotted, color=green];
m7_89 -> m7_57  [key=0, style=bold, color=blue];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_21  [key=0, style=solid, color=green];
m7_20 -> m7_13  [key=2, style=dotted];
m7_20 -> m7_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_21 -> m7_22  [key=0, style=solid, color=green];
m7_21 -> m7_14  [key=2, style=dotted, color=green];
m7_22 -> m7_19  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_6  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_7  [key=2, style=dotted];
m7_3 -> m7_8  [key=2, style=dotted];
m7_4 -> m7_0  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_13  [key=2, style=dotted];
m7_10 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_14  [key=2, style=dotted];
m7_12 -> m7_9  [key=0, style=bold, color=blue];
m7_47 -> m7_48  [key=0, style=solid];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_18  [key=2, style=dotted];
m7_48 -> m7_50  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_14  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_14  [key=2, style=dotted];
m7_51 -> m7_47  [key=0, style=bold, color=blue];
m7_26 -> m7_27  [key=0, style=solid, color=green];
m7_27 -> m7_28  [key=0, style=solid, color=green];
m7_27 -> m7_13  [key=2, style=dotted, color=green];
m7_27 -> m7_30  [key=1, style=dashed, color=green, label="lambda expression"];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_14  [key=2, style=dotted];
m7_28 -> m7_47  [key=3, color=darkorchid, style=bold, label="Local variable Hangfire.Client.CreateContext context"];
m7_29 -> m7_26  [key=0, style=bold, color=blue];
m7_74 -> m7_75  [key=0, style=solid, color=green];
m7_75 -> m7_76  [key=0, style=solid, color=green];
m7_75 -> m7_57  [key=2, style=dotted, color=green];
m7_76 -> m7_77  [key=0, style=solid, color=green];
m7_76 -> m7_80  [key=2, style=dotted, color=green];
m7_77 -> m7_78  [key=0, style=solid, color=green];
m7_77 -> m7_59  [key=2, style=dotted, color=green];
m7_77 -> m7_81  [key=1, style=dashed, color=green, label="lambda expression"];
m7_78 -> m7_79  [key=0, style=solid, color=green];
m7_78 -> m7_59  [key=2, style=dotted, color=green];
m7_78 -> m7_85  [key=1, style=dashed, color=green, label="lambda expression"];
m7_79 -> m7_74  [key=0, style=bold, color=blue];
m7_33 -> m7_34  [key=0, style=solid];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_13  [key=2, style=dotted];
m7_34 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_14  [key=2, style=dotted];
m7_36 -> m7_33  [key=0, style=bold, color=blue];
m7_85 -> m7_86  [key=0, style=solid, color=green];
m7_15 -> m7_16  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [key=2, style=dotted];
m7_17 -> m7_15  [key=0, style=bold, color=blue];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_18  [key=2, style=dotted];
m7_25 -> m7_23  [key=0, style=bold, color=blue];
m7_30 -> m7_31  [key=0, style=solid, color=green];
m7_31 -> m7_32  [key=0, style=solid, color=green];
m7_31 -> m7_18  [key=2, style=dotted, color=green];
m7_32 -> m7_30  [key=0, style=bold, color=blue];
m7_37 -> m7_38  [key=0, style=solid];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_18  [key=2, style=dotted];
m7_39 -> m7_37  [key=0, style=bold, color=blue];
m7_44 -> m7_45  [key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_18  [key=2, style=dotted];
m7_46 -> m7_44  [key=0, style=bold, color=blue];
m7_60 -> m7_61  [key=0, style=solid, color=green];
m7_61 -> m7_62  [key=0, style=solid, color=green];
m7_61 -> m7_63  [key=2, style=dotted, color=green];
m7_62 -> m7_60  [key=0, style=bold, color=blue];
m7_70 -> m7_71  [key=0, style=solid, color=green];
m7_71 -> m7_72  [key=0, style=solid, color=green];
m7_71 -> m7_73  [key=2, style=dotted, color=green];
m7_72 -> m7_70  [key=0, style=bold, color=blue];
m7_81 -> m7_82  [key=0, style=solid, color=green];
m7_82 -> m7_83  [key=0, style=solid, color=green];
m7_82 -> m7_84  [key=2, style=dotted, color=green];
m7_83 -> m7_81  [key=0, style=bold, color=blue];
m7_86 -> m7_87  [key=0, style=solid, color=green];
m7_86 -> m7_84  [key=2, style=dotted, color=green];
m7_87 -> m7_85  [key=0, style=bold, color=blue];
m7_64 -> m7_65  [key=0, style=solid, color=green];
m7_65 -> m7_66  [key=0, style=solid, color=green];
m7_65 -> m7_57  [key=2, style=dotted, color=green];
m7_66 -> m7_67  [key=0, style=solid, color=green];
m7_66 -> m7_69  [key=2, style=dotted, color=green];
m7_67 -> m7_68  [key=0, style=solid, color=green];
m7_67 -> m7_59  [key=2, style=dotted, color=green];
m7_67 -> m7_70  [key=1, style=dashed, color=green, label="lambda expression"];
m7_68 -> m7_64  [key=0, style=bold, color=blue];
m7_52 -> m7_53  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_57  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid, color=green];
m7_54 -> m7_58  [key=2, style=dotted];
m7_55 -> m7_56  [key=0, style=solid, color=green];
m7_55 -> m7_59  [key=2, style=dotted, color=green];
m7_55 -> m7_60  [key=1, style=dashed, color=green, label="lambda expression"];
m7_56 -> m7_52  [key=0, style=bold, color=blue];
m7_40 -> m7_41  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_13  [key=2, style=dotted];
m7_41 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_14  [key=2, style=dotted];
m7_43 -> m7_40  [key=0, style=bold, color=blue];
m7_90 -> m7_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_27  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_31  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_55  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_65  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_67  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_75  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_77  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_78  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m7_90 -> m7_88  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerFetchedJobFacts"];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_8  [key=0, style=bold, color=blue];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_4  [key=0, style=bold, color=blue];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_14  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m9_20 -> m9_21  [key=0, style=solid];
m9_21 -> m9_20  [key=0, style=bold, color=blue];
m9_10 -> m9_11  [key=0, style=solid];
m9_11 -> m9_10  [key=0, style=bold, color=blue];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_22  [key=0, style=bold, color=blue];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_12  [key=0, style=bold, color=blue];
m9_18 -> m9_19  [key=0, style=solid];
m9_19 -> m9_18  [key=0, style=bold, color=blue];
m9_16 -> m9_17  [key=0, style=solid];
m9_17 -> m9_16  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [key=0, style=bold, color=blue];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_6  [key=0, style=bold, color=blue];
m10_21 -> m10_22  [key=0, style=solid, color=red];
m10_21 -> m10_24  [key=1, style=dashed, color=red, label=string];
m10_21 -> m10_26  [key=1, style=dashed, color=red, label=string];
m10_22 -> m10_23  [key=0, style=solid, color=red];
m10_22 -> m10_24  [key=0, style=solid, color=red];
m10_22 -> m10_16  [key=2, style=dotted, color=red];
m10_24 -> m10_27  [key=0, style=solid, color=red];
m10_24 -> m10_19  [key=2, style=dotted, color=red];
m10_24 -> m10_28  [key=2, style=dotted, color=red];
m10_26 -> m10_27  [key=0, style=solid, color=red];
m10_26 -> m10_29  [key=2, style=dotted, color=red];
m10_26 -> m10_30  [key=2, style=dotted, color=red];
m10_23 -> m10_27  [key=0, style=solid, color=red];
m10_23 -> d10  [key=2, style=dotted, color=red];
m10_25 -> m10_26  [key=0, style=solid, color=red];
m10_27 -> m10_21  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_0  [key=0, style=bold, color=blue];
m10_8 -> m10_9  [key=0, style=solid, color=red];
m10_8 -> m10_11  [key=1, style=dashed, color=red, label=object];
m10_8 -> m10_12  [key=1, style=dashed, color=red, label=string];
m10_8 -> m10_13  [key=1, style=dashed, color=red, label=string];
m10_8 -> m10_14  [key=1, style=dashed, color=red, label=string];
m10_9 -> m10_10  [key=0, style=solid, color=red];
m10_9 -> m10_11  [key=0, style=solid, color=red];
m10_9 -> m10_16  [key=2, style=dotted, color=red];
m10_11 -> m10_12  [key=0, style=solid, color=red];
m10_11 -> m10_18  [key=2, style=dotted, color=red];
m10_11 -> m10_13  [key=1, style=dashed, color=red, label=serializedValue];
m10_11 -> m10_14  [key=1, style=dashed, color=red, label=serializedValue];
m10_12 -> m10_13  [key=0, style=solid, color=red];
m10_12 -> m10_14  [key=0, style=solid, color=red];
m10_12 -> m10_19  [key=2, style=dotted, color=red];
m10_13 -> m10_15  [key=0, style=solid, color=red];
m10_13 -> m10_20  [key=2, style=dotted, color=red];
m10_14 -> m10_15  [key=0, style=solid, color=red];
m10_10 -> m10_15  [key=0, style=solid, color=red];
m10_10 -> d10  [key=2, style=dotted, color=red];
m10_15 -> m10_8  [key=0, style=bold, color=blue];
m10_5 -> m10_6  [key=0, style=solid, color=red];
m10_2 -> m10_3  [key=0, style=solid, color=red];
m10_3 -> m10_4  [key=0, style=solid, color=red];
m10_3 -> m10_3  [key=1, style=dashed, color=red, label="System.Collections.Generic.KeyValuePair<string, string>"];
m10_4 -> m10_2  [key=0, style=bold, color=blue];
m10_6 -> m10_7  [key=0, style=solid, color=red];
m10_6 -> m10_6  [key=1, style=dashed, color=red, label="System.Collections.Generic.KeyValuePair<string, string>"];
m10_7 -> m10_5  [key=0, style=bold, color=blue];
m10_31 -> m10_12  [key=1, style=dashed, color=red, label="Hangfire.Client.CreatingContext"];
m10_31 -> m10_13  [key=1, style=dashed, color=red, label="Hangfire.Client.CreatingContext"];
m10_31 -> m10_14  [key=1, style=dashed, color=red, label="Hangfire.Client.CreatingContext"];
m10_31 -> m10_24  [key=1, style=dashed, color=red, label="Hangfire.Client.CreatingContext"];
m11_0 -> m11_1  [key=0, style=solid, color=red];
m11_0 -> m11_3  [key=1, style=dashed, color=red, label=string];
m11_0 -> m11_5  [key=1, style=dashed, color=red, label=string];
m11_0 -> m11_7  [key=1, style=dashed, color=red, label=IDbConnection];
m11_0 -> m11_8  [key=1, style=dashed, color=red, label=string];
m11_0 -> m11_9  [key=1, style=dashed, color=red, label=string];
m11_1 -> m11_2  [key=0, style=solid, color=red];
m11_1 -> m11_3  [key=0, style=solid, color=red];
m11_3 -> m11_4  [key=0, style=solid, color=red];
m11_3 -> m11_5  [key=0, style=solid, color=red];
m11_5 -> m11_6  [key=0, style=solid, color=red];
m11_5 -> m11_7  [key=0, style=solid, color=red];
m11_7 -> m11_8  [key=0, style=solid, color=red];
m11_8 -> m11_9  [key=0, style=solid, color=red];
m11_9 -> m11_10  [key=0, style=solid, color=red];
m11_2 -> m11_10  [key=0, style=solid, color=red];
m11_2 -> d10  [key=2, style=dotted, color=red];
m11_4 -> m11_10  [key=0, style=solid, color=red];
m11_4 -> d10  [key=2, style=dotted, color=red];
m11_6 -> m11_10  [key=0, style=solid, color=red];
m11_6 -> d10  [key=2, style=dotted, color=red];
m11_10 -> m11_0  [key=0, style=bold, color=blue];
m11_12 -> m11_13  [key=0, style=solid, color=red];
m11_13 -> m11_14  [key=0, style=solid, color=red];
m11_13 -> m11_15  [key=2, style=dotted, color=red];
m11_14 -> m11_12  [key=0, style=bold, color=blue];
m11_16 -> m11_7  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerProcessingJob"];
m11_16 -> m11_8  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerProcessingJob"];
m11_16 -> m11_9  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerProcessingJob"];
m11_16 -> m11_13  [key=1, style=dashed, color=red, label="HangFire.SqlServer.SqlServerProcessingJob"];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_34  [key=2, style=dotted];
m12_25 -> m12_27  [key=1, style=dashed, color=darkseagreen4, label=exceptionContext];
m12_35 -> m12_80  [key=0, style=solid];
m12_35 -> m12_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.ClientExceptionContext"];
m12_35 -> m12_36  [key=0, style=solid];
m12_80 -> m12_46  [key=2, style=dotted];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_82  [key=0, style=solid];
m12_81 -> m12_80  [key=0, style=solid];
m12_81 -> m12_83  [key=2, style=dotted];
m12_82 -> m12_35  [key=0, style=bold, color=blue];
m12_16 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m12_16 -> m12_17  [key=0, style=solid];
m12_16 -> m12_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreator"];
m12_16 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m12_16 -> m12_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m12_16 -> m12_29  [key=3, color=darkorchid, style=bold, label="method methodReturn string Run"];
m12_16 -> m12_18  [key=2, style=dotted];
m12_16 -> m12_14  [key=2, style=dotted];
m12_22 -> m12_33  [key=2, style=dotted];
m12_22 -> m12_23  [key=0, style=solid];
m12_22 -> m12_26  [key=2, style=dotted];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_32  [key=2, style=dotted];
m12_21 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label=filterInfo];
m12_21 -> m12_25  [key=2, style=dotted];
m12_23 -> m12_30  [key=0, style=solid];
m12_23 -> m12_19  [key=0, style=bold, color=blue];
m12_17 -> m12_18  [key=0, style=solid];
m12_17 -> m12_19  [key=0, style=solid];
m12_17 -> m12_15  [key=0, style=bold, color=blue];
m12_19 -> m12_21  [key=0, style=bold, color=crimson];
m12_19 -> m12_20  [key=0, style=solid];
m12_19 -> m12_22  [key=0, style=bold, color=crimson];
m12_29 -> m12_30  [key=0, style=solid, color=red];
m12_29 -> m12_33  [key=2, style=dotted, color=red];
m12_26 -> m12_27  [key=0, style=solid];
m12_26 -> m12_35  [key=2, style=dotted];
m12_18 -> m12_30  [key=0, style=solid];
m12_18 -> d10  [key=2, style=dotted];
m12_20 -> m12_30  [key=0, style=solid];
m12_20 -> d10  [key=2, style=dotted];
m12_20 -> m12_21  [key=0, style=solid];
m12_20 -> m12_24  [key=2, style=dotted];
m12_28 -> m12_30  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid, color=red];
m12_28 -> m12_32  [key=2, style=dotted];
m12_24 -> m12_25  [key=0, style=solid];
m12_27 -> m12_29  [key=0, style=bold, color=red];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_30  [key=0, style=bold, color=red];
m12_30 -> m12_16  [key=0, style=bold, color=blue];
m12_30 -> m12_31  [key=0, style=solid, color=red];
m12_30 -> m12_34  [key=2, style=dotted, color=red];
m12_31 -> m12_27  [key=0, style=bold, color=blue];
m12_39 -> m12_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m12_39 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m12_39 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m12_39 -> m12_6  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisStorage"];
m12_39 -> m12_11  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisStorage"];
m12_39 -> m12_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m12_39 -> m12_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m12_39 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m12_39 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m12_39 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m12_45 -> m12_6  [key=3, color=darkorchid, style=bold, label="Field variable System.Func<Hangfire.Common.Job, System.Collections.Generic.IEnumerable<Hangfire.Common.JobFilter>> _getFiltersThunk"];
m12_33 -> m12_41  [key=1, style=dashed, color=green, label="Hangfire.Client.CreateContext"];
m12_33 -> m12_40  [key=0, style=solid];
m12_33 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m12_33 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m12_33 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<Hangfire.Client.IClientFilter>"];
m12_14 -> m12_12  [key=0, style=bold, color=blue];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_15  [key=2, style=dotted];
m12_36 -> m12_37  [key=0, style=solid];
m12_36 -> m12_38  [key=2, style=dotted];
m12_36 -> m12_39  [key=2, style=dotted];
m12_37 -> m12_35  [key=0, style=bold, color=blue];
m12_37 -> m12_32  [key=0, style=bold, color=blue];
m12_3 -> m12_4  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid, color=green];
m12_1 -> m12_3  [key=2, style=dotted, color=green];
m12_1 -> m12_0  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid, color=green];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_2 -> m12_3  [key=0, style=solid];
m12_2 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m12_2 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageOptions"];
m12_2 -> m12_6  [key=1, style=dashed, color=red, label=string];
m12_4 -> m12_3  [key=0, style=bold, color=blue];
m12_4 -> m12_5  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_10  [key=0, style=bold, color=blue];
m12_50 -> m12_51  [key=0, style=solid];
m12_50 -> m12_53  [key=2, style=dotted];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_54  [key=2, style=dotted];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_60  [key=2, style=dotted];
m12_55 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Client.CreatedContext>"];
m12_55 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Client.CreatedContext>"];
m12_55 -> m12_56  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_52 -> m12_49  [key=0, style=bold, color=blue];
m12_57 -> m12_58  [key=0, style=solid];
m12_59 -> m12_57  [key=0, style=bold, color=blue];
m12_56 -> m12_55  [key=0, style=bold, color=blue];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_11  [key=2, style=dotted];
m12_9 -> m12_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_8 -> m12_9  [key=0, style=solid];
m12_10 -> m12_8  [key=0, style=bold, color=blue];
m12_10 -> m12_11  [key=0, style=solid, color=red];
m12_5 -> m12_6  [key=0, style=solid, color=red];
m12_5 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m12_6 -> m12_7  [key=0, style=solid, color=red];
m12_6 -> m12_8  [key=2, style=dotted, color=red];
m12_6 -> m12_9  [key=2, style=dotted, color=red];
m12_7 -> m12_2  [key=0, style=bold, color=blue];
m12_7 -> m12_5  [key=0, style=bold, color=blue];
m12_32 -> m12_36  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid, color=red];
m12_11 -> m12_13  [key=2, style=dotted, color=red];
m12_11 -> m12_14  [key=2, style=dotted, color=red];
m12_41 -> m12_41  [key=3, color=green, style=bold, label="Local variable System.Func<Hangfire.Client.CreatedContext> continuation"];
m12_41 -> m12_42  [key=0, style=solid, color=green];
m12_40 -> m12_41  [key=0, style=solid, color=green];
m12_40 -> m12_45  [key=2, style=dotted];
m12_40 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m12_40 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m12_40 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_46  [key=2, style=dotted];
m12_42 -> m12_47  [key=2, style=dotted];
m12_42 -> m12_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_48  [key=2, style=dotted];
m12_44 -> m12_33  [key=0, style=bold, color=blue];
m12_60 -> m12_66  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Client.CreatedContext>"];
m12_60 -> m12_61  [key=0, style=solid];
m12_60 -> m12_62  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m12_60 -> m12_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m12_60 -> m12_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreatingContext"];
m12_60 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IClientFilter"];
m12_60 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IClientFilter"];
m12_60 -> m12_65  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Client.CreatedContext InvokeClientFilter"];
m12_67 -> m12_68  [key=0, style=solid, color=green];
m12_66 -> m12_67  [key=0, style=solid, color=green];
m12_66 -> m12_73  [key=0, style=solid];
m12_66 -> m12_78  [key=2, style=dotted];
m12_68 -> m12_69  [key=0, style=solid];
m12_68 -> m12_73  [key=1, style=dashed, color=darkseagreen4, label=wasError];
m12_65 -> m12_66  [key=0, style=solid];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_75  [key=0, style=solid];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_54  [key=2, style=dotted];
m12_69 -> m12_71  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m12_69 -> m12_74  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m12_69 -> m12_75  [key=1, style=dashed, color=darkseagreen4, label=postContext];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_77  [key=2, style=dotted];
m12_62 -> m12_63  [key=0, style=solid];
m12_62 -> m12_64  [key=0, style=solid];
m12_63 -> m12_54  [key=2, style=dotted];
m12_63 -> m12_76  [key=0, style=solid];
m12_70 -> m12_71  [key=0, style=solid];
m12_70 -> m12_79  [key=2, style=dotted];
m12_74 -> m12_75  [key=0, style=solid];
m12_74 -> m12_79  [key=2, style=dotted];
m12_64 -> m12_65  [key=0, style=solid];
m12_64 -> m12_64  [key=3, color=darkorchid, style=bold, label="Local variable bool wasError"];
m12_71 -> m12_73  [key=0, style=solid];
m12_71 -> m12_72  [key=0, style=solid];
m12_75 -> m12_76  [key=0, style=solid];
m12_72 -> m12_76  [key=0, style=solid];
m12_76 -> m12_60  [key=0, style=bold, color=blue];
m12_86 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m12_86 -> m12_51  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.CreateContext"];
m12_87 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IJobCreator"];
m12_88 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m12_88 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label=preContext];
m12_89 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="System.Func<Hangfire.Client.CreatedContext>"];
m12_90 -> m12_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.IClientFilter"];
m12_84 -> m12_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.DefaultJobCreationProcess"];
m12_84 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.DefaultJobCreationProcess"];
m12_84 -> m12_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Client.DefaultJobCreationProcess"];
m12_85 -> m12_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m13_27 -> m13_29  [key=0, style=bold, color=green];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_30  [key=0, style=bold, color=crimson];
m13_29 -> m13_30  [key=0, style=solid, color=green];
m13_29 -> m13_33  [key=2, style=dotted, color=green];
m13_28 -> m13_29  [key=0, style=solid, color=green];
m13_28 -> m13_32  [key=2, style=dotted];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_34  [key=2, style=dotted];
m13_31 -> m13_27  [key=0, style=bold, color=blue];
m13_3 -> m13_4  [key=0, style=solid];
m13_35 -> m13_36  [key=0, style=solid];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_38  [key=2, style=dotted];
m13_37 -> m13_35  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_2 -> m13_6  [key=1, style=dashed, color=green, label=string];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_2 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageOptions"];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_6 -> m13_7  [key=0, style=solid, color=green];
m13_6 -> m13_8  [key=2, style=dotted, color=green];
m13_6 -> m13_9  [key=2, style=dotted, color=green];
m13_5 -> m13_6  [key=0, style=solid, color=green];
m13_7 -> m13_2  [key=0, style=bold, color=blue];
m13_7 -> m13_5  [key=0, style=bold, color=blue];
m13_15 -> m13_16  [key=0, style=solid, color=green];
m13_16 -> m13_17  [key=0, style=solid, color=green];
m13_16 -> m13_18  [key=2, style=dotted, color=green];
m13_16 -> m13_14  [key=2, style=dotted, color=green];
m13_17 -> m13_15  [key=0, style=bold, color=blue];
m13_10 -> m13_11  [key=0, style=solid];
m13_11 -> m13_14  [key=2, style=dotted];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_13  [key=2, style=dotted];
m13_12 -> m13_10  [key=0, style=bold, color=blue];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_21  [key=0, style=bold, color=crimson];
m13_19 -> m13_22  [key=0, style=bold, color=crimson];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_24  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_25  [key=2, style=dotted];
m13_22 -> m13_23  [key=0, style=solid];
m13_22 -> m13_26  [key=2, style=dotted];
m13_23 -> m13_19  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid, color=red];
m13_1 -> m13_2  [key=0, style=solid, color=red];
m13_1 -> m13_3  [key=2, style=dotted, color=red];
m13_1 -> m13_4  [key=2, style=dotted, color=red];
m13_1 -> m13_1  [key=3, color=red, style=bold, label="Field variable string JobId"];
m13_39 -> m13_6  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisStorage"];
m13_39 -> m13_16  [key=1, style=dashed, color=green, label="HangFire.Redis.RedisStorage"];
m13_39 -> m13_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m13_39 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m13_39 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m13_39 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m13_39 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m13_39 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m13_39 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m13_39 -> m13_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m14_601 -> m14_602  [key=0, style=solid];
m14_602 -> m14_603  [key=0, style=solid];
m14_602 -> m14_45  [key=2, style=dotted];
m14_602 -> m14_604  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_603 -> m14_601  [key=0, style=bold, color=blue];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m14_789 -> m14_790  [key=0, style=solid];
m14_791 -> m14_792  [key=0, style=solid];
m14_791 -> m14_104  [key=2, style=dotted];
m14_791 -> m14_793  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_790 -> m14_791  [key=0, style=solid];
m14_790 -> m14_563  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_790 -> m14_794  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_792 -> m14_789  [key=0, style=bold, color=blue];
m14_457 -> m14_458  [key=0, style=solid];
m14_458 -> m14_459  [key=0, style=solid];
m14_458 -> m14_45  [key=2, style=dotted];
m14_458 -> m14_460  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_459 -> m14_457  [key=0, style=bold, color=blue];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_26 -> m14_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m14_26 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m14_26 -> m14_34  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m14_26 -> m14_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m14_26 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m14_26 -> m14_28  [key=2, style=dotted];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_29  [key=0, style=solid];
m14_27 -> m14_25  [key=0, style=bold, color=blue];
m14_29 -> m14_30  [key=0, style=solid];
m14_29 -> m14_31  [key=0, style=solid];
m14_29 -> m14_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_43  [key=2, style=dotted];
m14_32 -> m14_36  [key=2, style=dotted];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_44  [key=2, style=dotted];
m14_33 -> m14_45  [key=2, style=dotted];
m14_33 -> m14_46  [key=2, style=dotted];
m14_33 -> m14_47  [key=2, style=dotted];
m14_33 -> m14_48  [key=2, style=dotted];
m14_33 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_33 -> m14_41  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m14_33 -> m14_37  [key=2, style=dotted];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_41  [key=0, style=solid];
m14_34 -> m14_29  [key=0, style=bold, color=blue];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m14_35 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_39  [key=0, style=solid];
m14_28 -> m14_42  [key=0, style=solid];
m14_28 -> d10  [key=2, style=dotted];
m14_28 -> m14_26  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<Hangfire.SqlServer.SqlServerConnection> action"];
m14_28 -> m14_888  [key=0, style=solid];
m14_28 -> m14_892  [key=1, style=dashed, color=darkseagreen4, label="System.Action<Hangfire.SqlServer.SqlServerConnection>"];
m14_30 -> m14_42  [key=0, style=solid];
m14_30 -> d10  [key=2, style=dotted];
m14_30 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label=token];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_35  [key=2, style=dotted];
m14_30 -> m14_32  [key=1, style=dashed, color=darkseagreen4, label=token];
m14_30 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label=token];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label=queues];
m14_31 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label=queues];
m14_38 -> m14_37  [key=0, style=solid];
m14_38 -> m14_38  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m14_38 -> m14_39  [key=0, style=solid];
m14_41 -> m14_42  [key=0, style=solid];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_49  [key=2, style=dotted];
m14_40 -> m14_38  [key=0, style=bold, color=blue];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_41  [key=2, style=dotted];
m14_42 -> m14_26  [key=0, style=bold, color=blue];
m14_42 -> m14_43  [key=0, style=solid];
m14_343 -> m14_344  [key=0, style=solid];
m14_344 -> m14_345  [key=0, style=solid];
m14_344 -> m14_45  [key=2, style=dotted];
m14_344 -> m14_346  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_345 -> m14_343  [key=0, style=bold, color=blue];
m14_718 -> m14_719  [key=0, style=solid];
m14_719 -> m14_720  [key=0, style=solid];
m14_719 -> m14_45  [key=2, style=dotted];
m14_719 -> m14_721  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_720 -> m14_718  [key=0, style=bold, color=blue];
m14_646 -> m14_647  [key=0, style=solid];
m14_648 -> m14_649  [key=0, style=solid];
m14_648 -> m14_104  [key=2, style=dotted];
m14_648 -> m14_650  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_647 -> m14_648  [key=0, style=solid];
m14_647 -> m14_647  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_647 -> m14_651  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_649 -> m14_646  [key=0, style=bold, color=blue];
m14_843 -> m14_844  [key=0, style=solid];
m14_845 -> m14_846  [key=0, style=solid];
m14_845 -> m14_104  [key=2, style=dotted];
m14_845 -> m14_847  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_844 -> m14_845  [key=0, style=solid];
m14_844 -> m14_844  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_844 -> m14_848  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_846 -> m14_843  [key=0, style=bold, color=blue];
m14_250 -> m14_251  [key=0, style=solid];
m14_251 -> m14_252  [key=0, style=solid];
m14_251 -> m14_45  [key=2, style=dotted];
m14_251 -> m14_253  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_252 -> m14_250  [key=0, style=bold, color=blue];
m14_322 -> m14_323  [key=0, style=solid];
m14_324 -> m14_325  [key=0, style=solid];
m14_324 -> m14_104  [key=2, style=dotted];
m14_324 -> m14_326  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_323 -> m14_324  [key=0, style=solid];
m14_323 -> m14_323  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_323 -> m14_327  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_325 -> m14_322  [key=0, style=bold, color=blue];
m14_283 -> m14_284  [key=0, style=solid];
m14_285 -> m14_286  [key=0, style=solid];
m14_285 -> m14_104  [key=2, style=dotted];
m14_285 -> m14_287  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_284 -> m14_285  [key=0, style=solid];
m14_284 -> m14_261  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_284 -> m14_288  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_286 -> m14_283  [key=0, style=bold, color=blue];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_7  [key=2, style=dotted];
m14_836 -> m14_837  [key=0, style=solid];
m14_837 -> m14_838  [key=0, style=solid];
m14_837 -> m14_45  [key=2, style=dotted];
m14_837 -> m14_839  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_838 -> m14_836  [key=0, style=bold, color=blue];
m14_188 -> m14_189  [key=0, style=solid];
m14_189 -> m14_190  [key=0, style=solid];
m14_189 -> m14_45  [key=2, style=dotted];
m14_189 -> m14_191  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_190 -> m14_188  [key=0, style=bold, color=blue];
m14_862 -> m14_863  [key=0, style=solid];
m14_863 -> m14_864  [key=0, style=solid];
m14_863 -> m14_45  [key=2, style=dotted];
m14_863 -> m14_865  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_864 -> m14_862  [key=0, style=bold, color=blue];
m14_698 -> m14_699  [key=0, style=solid];
m14_700 -> m14_701  [key=0, style=solid];
m14_700 -> m14_104  [key=2, style=dotted];
m14_700 -> m14_702  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_699 -> m14_700  [key=0, style=solid];
m14_699 -> m14_699  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_699 -> m14_703  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_701 -> m14_698  [key=0, style=bold, color=blue];
m14_260 -> m14_261  [key=0, style=solid];
m14_262 -> m14_263  [key=0, style=solid];
m14_262 -> m14_104  [key=2, style=dotted];
m14_262 -> m14_264  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_261 -> m14_262  [key=0, style=solid];
m14_261 -> m14_261  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_261 -> m14_265  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_263 -> m14_260  [key=0, style=bold, color=blue];
m14_16 -> m14_19  [key=2, style=dotted];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_332 -> m14_333  [key=0, style=solid];
m14_333 -> m14_334  [key=0, style=solid];
m14_333 -> m14_45  [key=2, style=dotted];
m14_333 -> m14_335  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_334 -> m14_332  [key=0, style=bold, color=blue];
m14_83 -> m14_84  [key=0, style=solid];
m14_83 -> m14_86  [key=1, style=dashed, color=darkseagreen4, label=double];
m14_83 -> m14_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_83 -> m14_81  [key=0, style=bold, color=blue];
m14_84 -> m14_85  [key=0, style=solid];
m14_84 -> m14_86  [key=0, style=solid];
m14_86 -> m14_87  [key=0, style=solid];
m14_86 -> m14_88  [key=0, style=solid];
m14_88 -> m14_89  [key=0, style=solid];
m14_88 -> m14_46  [key=2, style=dotted];
m14_88 -> m14_66  [key=2, style=dotted];
m14_88 -> m14_86  [key=0, style=bold, color=blue];
m14_85 -> m14_89  [key=0, style=solid];
m14_85 -> d10  [key=2, style=dotted];
m14_87 -> m14_89  [key=0, style=solid];
m14_87 -> m14_90  [key=2, style=dotted];
m14_87 -> m14_88  [key=0, style=solid];
m14_87 -> m14_45  [key=2, style=dotted];
m14_89 -> m14_83  [key=0, style=bold, color=blue];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_409 -> m14_410  [key=0, style=solid];
m14_410 -> m14_411  [key=0, style=solid];
m14_410 -> m14_45  [key=2, style=dotted];
m14_410 -> m14_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_411 -> m14_409  [key=0, style=bold, color=blue];
m14_68 -> m14_69  [key=0, style=solid];
m14_49 -> m14_50  [key=0, style=solid];
m14_49 -> m14_52  [key=2, style=dotted];
m14_67 -> m14_65  [key=0, style=bold, color=blue];
m14_218 -> m14_219  [key=0, style=solid];
m14_220 -> m14_221  [key=0, style=solid];
m14_220 -> m14_104  [key=2, style=dotted];
m14_220 -> m14_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_219 -> m14_220  [key=0, style=solid];
m14_219 -> m14_206  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_219 -> m14_224  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_221 -> m14_218  [key=0, style=bold, color=blue];
m14_637 -> m14_638  [key=0, style=solid];
m14_639 -> m14_640  [key=0, style=solid];
m14_639 -> m14_104  [key=2, style=dotted];
m14_639 -> m14_641  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_638 -> m14_639  [key=0, style=solid];
m14_638 -> m14_638  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_638 -> m14_642  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_640 -> m14_637  [key=0, style=bold, color=blue];
m14_751 -> m14_752  [key=0, style=solid];
m14_753 -> m14_754  [key=0, style=solid];
m14_753 -> m14_104  [key=2, style=dotted];
m14_753 -> m14_755  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_752 -> m14_753  [key=0, style=solid];
m14_752 -> m14_752  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_752 -> m14_756  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_754 -> m14_751  [key=0, style=bold, color=blue];
m14_826 -> m14_827  [key=0, style=solid];
m14_827 -> m14_828  [key=0, style=solid];
m14_827 -> m14_45  [key=2, style=dotted];
m14_827 -> m14_829  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_828 -> m14_826  [key=0, style=bold, color=blue];
m14_25 -> m14_26  [key=0, style=solid];
m14_91 -> m14_92  [key=0, style=solid];
m14_91 -> m14_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m14_91 -> m14_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m14_91 -> m14_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_91 -> m14_20  [key=2, style=dotted];
m14_92 -> m14_93  [key=0, style=solid];
m14_92 -> m14_94  [key=0, style=solid];
m14_92 -> m14_89  [key=0, style=bold, color=blue];
m14_94 -> m14_95  [key=0, style=solid];
m14_94 -> m14_96  [key=0, style=solid];
m14_94 -> m14_85  [key=2, style=dotted];
m14_94 -> m14_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_96 -> m14_97  [key=0, style=solid];
m14_96 -> m14_99  [key=2, style=dotted];
m14_97 -> m14_98  [key=0, style=solid];
m14_97 -> m14_44  [key=2, style=dotted];
m14_97 -> m14_49  [key=2, style=dotted];
m14_93 -> m14_98  [key=0, style=solid];
m14_93 -> d10  [key=2, style=dotted];
m14_93 -> m14_94  [key=0, style=solid];
m14_95 -> m14_98  [key=0, style=solid];
m14_95 -> d10  [key=2, style=dotted];
m14_95 -> m14_93  [key=0, style=bold, color=blue];
m14_98 -> m14_91  [key=0, style=bold, color=blue];
m14_98 -> m14_100  [key=2, style=dotted];
m14_98 -> m14_99  [key=0, style=solid];
m14_6 -> m14_7  [key=0, style=solid];
m14_381 -> m14_382  [key=0, style=solid];
m14_382 -> m14_383  [key=0, style=solid];
m14_382 -> m14_45  [key=2, style=dotted];
m14_382 -> m14_384  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_383 -> m14_381  [key=0, style=bold, color=blue];
m14_50 -> m14_51  [key=0, style=solid];
m14_50 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_50 -> m14_19  [key=2, style=dotted];
m14_50 -> m14_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_53  [key=0, style=solid];
m14_51 -> m14_46  [key=0, style=bold, color=blue];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_46  [key=2, style=dotted];
m14_54 -> m14_66  [key=2, style=dotted];
m14_54 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m14_54 -> m14_58  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m14_54 -> m14_64  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m14_54 -> m14_36  [key=2, style=dotted];
m14_52 -> m14_65  [key=0, style=solid];
m14_52 -> d10  [key=2, style=dotted];
m14_53 -> m14_54  [key=0, style=solid];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_57  [key=0, style=solid];
m14_55 -> m14_53  [key=0, style=bold, color=blue];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_46  [key=2, style=dotted];
m14_57 -> m14_61  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m14_57 -> m14_45  [key=2, style=dotted];
m14_57 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_58 -> m14_59  [key=0, style=solid];
m14_58 -> m14_56  [key=0, style=bold, color=blue];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_68  [key=2, style=dotted];
m14_56 -> m14_65  [key=0, style=solid];
m14_56 -> m14_57  [key=0, style=solid];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_64  [key=0, style=solid];
m14_61 -> m14_67  [key=2, style=dotted];
m14_59 -> m14_60  [key=0, style=solid];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_63  [key=2, style=dotted];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_59  [key=0, style=bold, color=blue];
m14_63 -> m14_64  [key=0, style=solid];
m14_65 -> m14_50  [key=0, style=bold, color=blue];
m14_65 -> m14_66  [key=0, style=solid];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_11  [key=0, style=bold, color=blue];
m14_14 -> m14_15  [key=0, style=solid];
m14_14 -> m14_16  [key=2, style=dotted];
m14_15 -> m14_13  [key=0, style=bold, color=blue];
m14_15 -> m14_16  [key=0, style=solid];
m14_305 -> m14_306  [key=0, style=solid];
m14_306 -> m14_307  [key=0, style=solid];
m14_306 -> m14_45  [key=2, style=dotted];
m14_306 -> m14_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_307 -> m14_305  [key=0, style=bold, color=blue];
m14_229 -> m14_230  [key=0, style=solid];
m14_231 -> m14_232  [key=0, style=solid];
m14_231 -> m14_104  [key=2, style=dotted];
m14_231 -> m14_233  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_230 -> m14_231  [key=0, style=solid];
m14_230 -> m14_167  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_230 -> m14_234  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_232 -> m14_229  [key=0, style=bold, color=blue];
m14_869 -> m14_870  [key=0, style=solid];
m14_871 -> m14_872  [key=0, style=solid];
m14_871 -> m14_104  [key=2, style=dotted];
m14_871 -> m14_873  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_870 -> m14_871  [key=0, style=solid];
m14_870 -> m14_870  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_870 -> m14_874  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_872 -> m14_869  [key=0, style=bold, color=blue];
m14_7 -> m14_0  [key=0, style=bold, color=blue];
m14_22 -> m14_23  [key=0, style=solid];
m14_22 -> m14_24  [key=2, style=dotted];
m14_23 -> m14_24  [key=0, style=solid];
m14_23 -> m14_25  [key=2, style=dotted];
m14_23 -> m14_21  [key=0, style=bold, color=blue];
m14_24 -> m14_22  [key=0, style=bold, color=blue];
m14_545 -> m14_546  [key=0, style=solid];
m14_546 -> m14_547  [key=0, style=solid];
m14_546 -> m14_45  [key=2, style=dotted];
m14_546 -> m14_548  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_547 -> m14_545  [key=0, style=bold, color=blue];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_130  [key=2, style=dotted];
m14_110 -> m14_131  [key=2, style=dotted];
m14_110 -> m14_112  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m14_110 -> m14_113  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m14_110 -> m14_114  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m14_110 -> m14_115  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m14_110 -> m14_116  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m14_110 -> m14_121  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m14_110 -> m14_122  [key=1, style=dashed, color=darkseagreen4, label=sqlJob];
m14_111 -> m14_112  [key=0, style=solid];
m14_111 -> m14_113  [key=0, style=solid];
m14_111 -> m14_115  [key=2, style=dotted];
m14_111 -> m14_111  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m14_111 -> m14_132  [key=2, style=dotted];
m14_111 -> m14_20  [key=2, style=dotted];
m14_112 -> m14_114  [key=0, style=solid];
m14_112 -> m14_116  [key=2, style=dotted];
m14_112 -> m14_113  [key=0, style=solid];
m14_112 -> m14_20  [key=2, style=dotted];
m14_113 -> m14_114  [key=0, style=solid];
m14_113 -> m14_117  [key=2, style=dotted];
m14_113 -> m14_45  [key=2, style=dotted];
m14_113 -> m14_49  [key=2, style=dotted];
m14_113 -> m14_113  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m14_113 -> m14_20  [key=2, style=dotted];
m14_114 -> m14_110  [key=0, style=bold, color=blue];
m14_114 -> m14_115  [key=0, style=solid];
m14_114 -> m14_20  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_14  [key=2, style=dotted];
m14_198 -> m14_199  [key=0, style=solid];
m14_199 -> m14_200  [key=0, style=solid];
m14_199 -> m14_45  [key=2, style=dotted];
m14_199 -> m14_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_200 -> m14_198  [key=0, style=bold, color=blue];
m14_490 -> m14_491  [key=0, style=solid];
m14_491 -> m14_492  [key=0, style=solid];
m14_491 -> m14_45  [key=2, style=dotted];
m14_491 -> m14_493  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_492 -> m14_490  [key=0, style=bold, color=blue];
m14_419 -> m14_420  [key=0, style=solid];
m14_421 -> m14_422  [key=0, style=solid];
m14_421 -> m14_104  [key=2, style=dotted];
m14_421 -> m14_423  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_420 -> m14_421  [key=0, style=solid];
m14_420 -> m14_420  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_420 -> m14_424  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_422 -> m14_419  [key=0, style=bold, color=blue];
m14_555 -> m14_556  [key=0, style=solid];
m14_556 -> m14_557  [key=0, style=solid];
m14_556 -> m14_45  [key=2, style=dotted];
m14_556 -> m14_558  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_557 -> m14_555  [key=0, style=bold, color=blue];
m14_562 -> m14_563  [key=0, style=solid];
m14_564 -> m14_565  [key=0, style=solid];
m14_564 -> m14_104  [key=2, style=dotted];
m14_564 -> m14_566  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_563 -> m14_564  [key=0, style=solid];
m14_563 -> m14_563  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_563 -> m14_567  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_565 -> m14_562  [key=0, style=bold, color=blue];
m14_115 -> m14_116  [key=0, style=solid];
m14_115 -> m14_133  [key=2, style=dotted];
m14_115 -> m14_117  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m14_761 -> m14_762  [key=0, style=solid];
m14_762 -> m14_763  [key=0, style=solid];
m14_762 -> m14_45  [key=2, style=dotted];
m14_762 -> m14_764  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_763 -> m14_761  [key=0, style=bold, color=blue];
m14_691 -> m14_692  [key=0, style=solid];
m14_692 -> m14_693  [key=0, style=solid];
m14_692 -> m14_45  [key=2, style=dotted];
m14_692 -> m14_694  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_693 -> m14_691  [key=0, style=bold, color=blue];
m14_9 -> m14_10  [key=0, style=solid];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_12  [key=2, style=dotted];
m14_11 -> m14_9  [key=0, style=bold, color=blue];
m14_11 -> m14_12  [key=0, style=solid];
m14_772 -> m14_773  [key=0, style=solid];
m14_773 -> m14_774  [key=0, style=solid];
m14_773 -> m14_45  [key=2, style=dotted];
m14_773 -> m14_775  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_774 -> m14_772  [key=0, style=bold, color=blue];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_20  [key=2, style=dotted];
m14_18 -> m14_15  [key=0, style=bold, color=blue];
m14_18 -> m14_19  [key=0, style=solid];
m14_18 -> m14_20  [key=2, style=dotted];
m14_18 -> m14_21  [key=2, style=dotted];
m14_391 -> m14_392  [key=0, style=solid];
m14_392 -> m14_393  [key=0, style=solid];
m14_392 -> m14_104  [key=2, style=dotted];
m14_392 -> m14_394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_393 -> m14_391  [key=0, style=bold, color=blue];
m14_21 -> m14_22  [key=0, style=solid];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_50  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_46 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_77 -> m14_78  [key=0, style=solid];
m14_77 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_77 -> m14_79  [key=0, style=solid];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_105 -> m14_110  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_105 -> m14_123  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_105 -> m14_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_151 -> m14_152  [key=0, style=solid];
m14_151 -> m14_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_161 -> m14_162  [key=0, style=solid];
m14_170 -> m14_171  [key=0, style=solid];
m14_170 -> m14_172  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_170 -> m14_173  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_191 -> m14_192  [key=0, style=solid];
m14_191 -> m14_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_201 -> m14_202  [key=0, style=solid];
m14_209 -> m14_210  [key=0, style=solid];
m14_209 -> m14_211  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_209 -> m14_212  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_222 -> m14_223  [key=0, style=solid];
m14_222 -> m14_224  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_222 -> m14_225  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_233 -> m14_234  [key=0, style=solid];
m14_233 -> m14_235  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_242 -> m14_243  [key=0, style=solid];
m14_242 -> m14_247  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_253 -> m14_254  [key=0, style=solid];
m14_253 -> m14_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_264 -> m14_265  [key=0, style=solid];
m14_264 -> m14_267  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_264 -> m14_268  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_275 -> m14_276  [key=0, style=solid];
m14_275 -> m14_278  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_275 -> m14_279  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_275 -> m14_280  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_287 -> m14_288  [key=0, style=solid];
m14_287 -> m14_290  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_287 -> m14_291  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_297 -> m14_298  [key=0, style=solid];
m14_297 -> m14_302  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_308 -> m14_309  [key=0, style=solid];
m14_308 -> m14_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_318 -> m14_319  [key=0, style=solid];
m14_326 -> m14_327  [key=0, style=solid];
m14_326 -> m14_328  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_335 -> m14_336  [key=0, style=solid];
m14_335 -> m14_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_346 -> m14_347  [key=0, style=solid];
m14_346 -> m14_350  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_355 -> m14_356  [key=0, style=solid];
m14_363 -> m14_364  [key=0, style=solid];
m14_363 -> m14_365  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_372 -> m14_373  [key=0, style=solid];
m14_372 -> m14_377  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_384 -> m14_385  [key=0, style=solid];
m14_384 -> m14_389  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_394 -> m14_395  [key=0, style=solid];
m14_394 -> m14_396  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_394 -> m14_397  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_394 -> m14_402  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_394 -> m14_403  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_412 -> m14_413  [key=0, style=solid];
m14_412 -> m14_416  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_423 -> m14_424  [key=0, style=solid];
m14_423 -> m14_425  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_423 -> m14_426  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_433 -> m14_434  [key=0, style=solid];
m14_433 -> m14_437  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_444 -> m14_445  [key=0, style=solid];
m14_444 -> m14_446  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_444 -> m14_447  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_460 -> m14_461  [key=0, style=solid];
m14_460 -> m14_464  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_472 -> m14_473  [key=0, style=solid];
m14_472 -> m14_474  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_472 -> m14_475  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_483 -> m14_484  [key=0, style=solid];
m14_483 -> m14_487  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_493 -> m14_494  [key=0, style=solid];
m14_502 -> m14_503  [key=0, style=solid];
m14_502 -> m14_504  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_512 -> m14_513  [key=0, style=solid];
m14_512 -> m14_517  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_523 -> m14_524  [key=0, style=solid];
m14_523 -> m14_528  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_533 -> m14_534  [key=0, style=solid];
m14_533 -> m14_535  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_548 -> m14_549  [key=0, style=solid];
m14_548 -> m14_552  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_558 -> m14_559  [key=0, style=solid];
m14_566 -> m14_567  [key=0, style=solid];
m14_566 -> m14_568  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_577 -> m14_578  [key=0, style=solid];
m14_577 -> m14_581  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_587 -> m14_588  [key=0, style=solid];
m14_595 -> m14_596  [key=0, style=solid];
m14_595 -> m14_597  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_604 -> m14_605  [key=0, style=solid];
m14_604 -> m14_608  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_615 -> m14_616  [key=0, style=solid];
m14_615 -> m14_617  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_623 -> m14_624  [key=0, style=solid];
m14_623 -> m14_627  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_633 -> m14_634  [key=0, style=solid];
m14_641 -> m14_642  [key=0, style=solid];
m14_641 -> m14_643  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_650 -> m14_651  [key=0, style=solid];
m14_650 -> m14_652  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_658 -> m14_659  [key=0, style=solid];
m14_658 -> m14_662  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_668 -> m14_669  [key=0, style=solid];
m14_676 -> m14_677  [key=0, style=solid];
m14_676 -> m14_678  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_684 -> m14_685  [key=0, style=solid];
m14_684 -> m14_688  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_694 -> m14_695  [key=0, style=solid];
m14_702 -> m14_703  [key=0, style=solid];
m14_702 -> m14_704  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_711 -> m14_712  [key=0, style=solid];
m14_711 -> m14_715  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_721 -> m14_722  [key=0, style=solid];
m14_729 -> m14_730  [key=0, style=solid];
m14_729 -> m14_731  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_737 -> m14_738  [key=0, style=solid];
m14_737 -> m14_741  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_747 -> m14_748  [key=0, style=solid];
m14_755 -> m14_756  [key=0, style=solid];
m14_755 -> m14_757  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_764 -> m14_765  [key=0, style=solid];
m14_764 -> m14_769  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_775 -> m14_776  [key=0, style=solid];
m14_775 -> m14_780  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_785 -> m14_786  [key=0, style=solid];
m14_793 -> m14_794  [key=0, style=solid];
m14_793 -> m14_795  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_801 -> m14_802  [key=0, style=solid];
m14_801 -> m14_806  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_812 -> m14_813  [key=0, style=solid];
m14_821 -> m14_822  [key=0, style=solid];
m14_821 -> m14_823  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_829 -> m14_830  [key=0, style=solid];
m14_829 -> m14_833  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_839 -> m14_840  [key=0, style=solid];
m14_847 -> m14_848  [key=0, style=solid];
m14_847 -> m14_849  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_855 -> m14_856  [key=0, style=solid];
m14_855 -> m14_859  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_865 -> m14_866  [key=0, style=solid];
m14_873 -> m14_874  [key=0, style=solid];
m14_873 -> m14_875  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_897 -> m14_898  [key=0, style=solid];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_50  [key=1, style=dashed, color=darkseagreen4, label=token];
m14_47 -> m14_35  [key=2, style=dotted];
m14_47 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label=token];
m14_71 -> m14_68  [key=0, style=bold, color=blue];
m14_71 -> m14_75  [key=0, style=solid];
m14_71 -> d10  [key=2, style=dotted];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_72  [key=2, style=dotted];
m14_69 -> m14_73  [key=2, style=dotted];
m14_69 -> m14_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_80 -> m14_77  [key=0, style=bold, color=blue];
m14_80 -> m14_82  [key=0, style=solid];
m14_80 -> d10  [key=2, style=dotted];
m14_78 -> m14_19  [key=2, style=dotted];
m14_78 -> m14_79  [key=0, style=solid];
m14_78 -> m14_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_78 -> m14_82  [key=0, style=solid];
m14_78 -> d10  [key=2, style=dotted];
m14_82 -> m14_83  [key=0, style=solid];
m14_82 -> m14_84  [key=2, style=dotted];
m14_82 -> m14_85  [key=2, style=dotted];
m14_82 -> m14_76  [key=0, style=bold, color=blue];
m14_140 -> m14_100  [key=2, style=dotted];
m14_140 -> m14_141  [key=0, style=solid];
m14_186 -> m14_100  [key=2, style=dotted];
m14_186 -> m14_187  [key=0, style=solid];
m14_90 -> m14_19  [key=2, style=dotted];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_126 -> m14_105  [key=0, style=bold, color=blue];
m14_106 -> m14_107  [key=0, style=solid];
m14_106 -> m14_127  [key=2, style=dotted];
m14_106 -> m14_112  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m14_106 -> m14_121  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m14_106 -> m14_122  [key=1, style=dashed, color=darkseagreen4, label=createdAt];
m14_106 -> m14_108  [key=0, style=solid];
m14_107 -> m14_108  [key=0, style=solid];
m14_107 -> m14_96  [key=2, style=dotted];
m14_107 -> m14_84  [key=2, style=dotted];
m14_107 -> m14_128  [key=2, style=dotted];
m14_107 -> m14_85  [key=2, style=dotted];
m14_107 -> m14_139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_107 -> m14_109  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m14_107 -> m14_111  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m14_107 -> m14_123  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m14_107 -> d10  [key=2, style=dotted];
m14_123 -> m14_124  [key=0, style=solid];
m14_123 -> m14_130  [key=2, style=dotted];
m14_123 -> m14_138  [key=2, style=dotted];
m14_123 -> m14_142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_123 -> m14_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_123 -> m14_125  [key=1, style=dashed, color=darkseagreen4, label=parameters];
m14_153 -> m14_151  [key=0, style=bold, color=blue];
m14_152 -> m14_19  [key=2, style=dotted];
m14_152 -> m14_153  [key=0, style=solid];
m14_152 -> m14_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_155 -> m14_156  [key=0, style=solid];
m14_155 -> m14_157  [key=2, style=dotted];
m14_164 -> m14_161  [key=0, style=bold, color=blue];
m14_162 -> m14_163  [key=0, style=solid];
m14_162 -> m14_157  [key=2, style=dotted];
m14_172 -> m14_173  [key=0, style=solid];
m14_172 -> m14_182  [key=2, style=dotted];
m14_172 -> m14_183  [key=2, style=dotted];
m14_172 -> m14_130  [key=2, style=dotted];
m14_172 -> m14_131  [key=2, style=dotted];
m14_181 -> m14_170  [key=0, style=bold, color=blue];
m14_171 -> m14_172  [key=0, style=solid];
m14_171 -> m14_96  [key=2, style=dotted];
m14_171 -> m14_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_173 -> m14_174  [key=0, style=solid];
m14_173 -> m14_184  [key=2, style=dotted];
m14_173 -> m14_157  [key=2, style=dotted];
m14_173 -> m14_175  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_173 -> m14_176  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_173 -> m14_177  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_173 -> m14_178  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_173 -> m14_179  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_173 -> m14_180  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_193 -> m14_191  [key=0, style=bold, color=blue];
m14_192 -> m14_19  [key=2, style=dotted];
m14_192 -> m14_193  [key=0, style=solid];
m14_192 -> m14_194  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_195 -> m14_196  [key=0, style=solid];
m14_195 -> m14_197  [key=2, style=dotted];
m14_204 -> m14_201  [key=0, style=bold, color=blue];
m14_202 -> m14_203  [key=0, style=solid];
m14_202 -> m14_197  [key=2, style=dotted];
m14_211 -> m14_212  [key=0, style=solid];
m14_211 -> m14_183  [key=2, style=dotted];
m14_211 -> m14_130  [key=2, style=dotted];
m14_211 -> m14_131  [key=2, style=dotted];
m14_217 -> m14_209  [key=0, style=bold, color=blue];
m14_210 -> m14_211  [key=0, style=solid];
m14_210 -> m14_84  [key=2, style=dotted];
m14_212 -> m14_213  [key=0, style=solid];
m14_212 -> m14_184  [key=2, style=dotted];
m14_212 -> m14_197  [key=2, style=dotted];
m14_212 -> m14_214  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_212 -> m14_215  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_212 -> m14_216  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_224 -> m14_225  [key=0, style=solid];
m14_224 -> m14_183  [key=2, style=dotted];
m14_224 -> m14_130  [key=2, style=dotted];
m14_224 -> m14_131  [key=2, style=dotted];
m14_228 -> m14_222  [key=0, style=bold, color=blue];
m14_223 -> m14_224  [key=0, style=solid];
m14_223 -> m14_84  [key=2, style=dotted];
m14_225 -> m14_226  [key=0, style=solid];
m14_225 -> m14_184  [key=2, style=dotted];
m14_225 -> m14_197  [key=2, style=dotted];
m14_225 -> m14_227  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_234 -> m14_235  [key=0, style=solid];
m14_234 -> m14_238  [key=2, style=dotted];
m14_234 -> m14_183  [key=2, style=dotted];
m14_234 -> m14_130  [key=2, style=dotted];
m14_234 -> m14_131  [key=2, style=dotted];
m14_237 -> m14_233  [key=0, style=bold, color=blue];
m14_235 -> m14_236  [key=0, style=solid];
m14_235 -> m14_184  [key=2, style=dotted];
m14_235 -> m14_157  [key=2, style=dotted];
m14_245 -> m14_242  [key=0, style=bold, color=blue];
m14_243 -> m14_19  [key=2, style=dotted];
m14_243 -> m14_244  [key=0, style=solid];
m14_243 -> m14_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_247 -> m14_248  [key=0, style=solid];
m14_247 -> m14_249  [key=2, style=dotted];
m14_256 -> m14_253  [key=0, style=bold, color=blue];
m14_254 -> m14_19  [key=2, style=dotted];
m14_254 -> m14_255  [key=0, style=solid];
m14_254 -> m14_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_258 -> m14_259  [key=0, style=solid];
m14_258 -> m14_249  [key=2, style=dotted];
m14_265 -> m14_266  [key=0, style=solid];
m14_265 -> m14_130  [key=2, style=dotted];
m14_265 -> m14_131  [key=2, style=dotted];
m14_270 -> m14_264  [key=0, style=bold, color=blue];
m14_267 -> m14_268  [key=0, style=solid];
m14_267 -> m14_249  [key=2, style=dotted];
m14_268 -> m14_269  [key=0, style=solid];
m14_268 -> m14_130  [key=2, style=dotted];
m14_268 -> m14_131  [key=2, style=dotted];
m14_276 -> m14_277  [key=0, style=solid];
m14_276 -> m14_130  [key=2, style=dotted];
m14_276 -> m14_131  [key=2, style=dotted];
m14_282 -> m14_275  [key=0, style=bold, color=blue];
m14_278 -> m14_279  [key=0, style=solid];
m14_278 -> m14_249  [key=2, style=dotted];
m14_279 -> m14_280  [key=0, style=solid];
m14_279 -> m14_249  [key=2, style=dotted];
m14_280 -> m14_281  [key=0, style=solid];
m14_280 -> m14_130  [key=2, style=dotted];
m14_280 -> m14_131  [key=2, style=dotted];
m14_288 -> m14_289  [key=0, style=solid];
m14_288 -> m14_130  [key=2, style=dotted];
m14_288 -> m14_131  [key=2, style=dotted];
m14_293 -> m14_287  [key=0, style=bold, color=blue];
m14_290 -> m14_291  [key=0, style=solid];
m14_290 -> m14_249  [key=2, style=dotted];
m14_291 -> m14_292  [key=0, style=solid];
m14_291 -> m14_130  [key=2, style=dotted];
m14_291 -> m14_131  [key=2, style=dotted];
m14_300 -> m14_297  [key=0, style=bold, color=blue];
m14_298 -> m14_19  [key=2, style=dotted];
m14_298 -> m14_299  [key=0, style=solid];
m14_298 -> m14_301  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_302 -> m14_303  [key=0, style=solid];
m14_302 -> m14_304  [key=2, style=dotted];
m14_311 -> m14_308  [key=0, style=bold, color=blue];
m14_309 -> m14_19  [key=2, style=dotted];
m14_309 -> m14_310  [key=0, style=solid];
m14_309 -> m14_312  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_313 -> m14_314  [key=0, style=solid];
m14_313 -> m14_304  [key=2, style=dotted];
m14_321 -> m14_318  [key=0, style=bold, color=blue];
m14_319 -> m14_320  [key=0, style=solid];
m14_319 -> m14_304  [key=2, style=dotted];
m14_327 -> m14_19  [key=2, style=dotted];
m14_327 -> m14_328  [key=0, style=solid];
m14_327 -> m14_131  [key=2, style=dotted];
m14_330 -> m14_326  [key=0, style=bold, color=blue];
m14_328 -> m14_329  [key=0, style=solid];
m14_328 -> m14_132  [key=2, style=dotted];
m14_328 -> m14_331  [key=2, style=dotted];
m14_338 -> m14_335  [key=0, style=bold, color=blue];
m14_336 -> m14_19  [key=2, style=dotted];
m14_336 -> m14_337  [key=0, style=solid];
m14_336 -> m14_339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_340 -> m14_341  [key=0, style=solid];
m14_340 -> m14_342  [key=2, style=dotted];
m14_348 -> m14_346  [key=0, style=bold, color=blue];
m14_347 -> m14_19  [key=2, style=dotted];
m14_347 -> m14_348  [key=0, style=solid];
m14_347 -> m14_349  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_350 -> m14_351  [key=0, style=solid];
m14_350 -> m14_342  [key=2, style=dotted];
m14_358 -> m14_355  [key=0, style=bold, color=blue];
m14_356 -> m14_357  [key=0, style=solid];
m14_356 -> m14_342  [key=2, style=dotted];
m14_364 -> m14_365  [key=0, style=solid];
m14_364 -> m14_368  [key=2, style=dotted];
m14_367 -> m14_363  [key=0, style=bold, color=blue];
m14_365 -> m14_366  [key=0, style=solid];
m14_365 -> m14_342  [key=2, style=dotted];
m14_375 -> m14_372  [key=0, style=bold, color=blue];
m14_373 -> m14_19  [key=2, style=dotted];
m14_373 -> m14_374  [key=0, style=solid];
m14_373 -> m14_376  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_377 -> m14_378  [key=0, style=solid];
m14_377 -> m14_379  [key=2, style=dotted];
m14_377 -> m14_380  [key=2, style=dotted];
m14_387 -> m14_384  [key=0, style=bold, color=blue];
m14_385 -> m14_19  [key=2, style=dotted];
m14_385 -> m14_386  [key=0, style=solid];
m14_385 -> m14_388  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_389 -> m14_390  [key=0, style=solid];
m14_389 -> m14_380  [key=2, style=dotted];
m14_406 -> m14_394  [key=0, style=bold, color=blue];
m14_395 -> m14_396  [key=0, style=solid];
m14_395 -> m14_379  [key=2, style=dotted];
m14_396 -> m14_397  [key=0, style=solid];
m14_396 -> m14_380  [key=2, style=dotted];
m14_397 -> m14_398  [key=0, style=solid];
m14_397 -> m14_130  [key=2, style=dotted];
m14_397 -> m14_131  [key=2, style=dotted];
m14_397 -> m14_399  [key=1, style=dashed, color=darkseagreen4, label=server];
m14_397 -> m14_400  [key=1, style=dashed, color=darkseagreen4, label=server];
m14_402 -> m14_403  [key=0, style=solid];
m14_402 -> m14_380  [key=2, style=dotted];
m14_403 -> m14_404  [key=0, style=solid];
m14_403 -> m14_130  [key=2, style=dotted];
m14_403 -> m14_131  [key=2, style=dotted];
m14_403 -> m14_405  [key=1, style=dashed, color=darkseagreen4, label=sameServer];
m14_414 -> m14_412  [key=0, style=bold, color=blue];
m14_413 -> m14_19  [key=2, style=dotted];
m14_413 -> m14_414  [key=0, style=solid];
m14_413 -> m14_415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_416 -> m14_417  [key=0, style=solid];
m14_416 -> m14_418  [key=2, style=dotted];
m14_424 -> m14_425  [key=0, style=solid];
m14_424 -> m14_368  [key=2, style=dotted];
m14_428 -> m14_423  [key=0, style=bold, color=blue];
m14_425 -> m14_426  [key=0, style=solid];
m14_425 -> m14_418  [key=2, style=dotted];
m14_426 -> m14_427  [key=0, style=solid];
m14_426 -> m14_130  [key=2, style=dotted];
m14_426 -> m14_131  [key=2, style=dotted];
m14_435 -> m14_433  [key=0, style=bold, color=blue];
m14_434 -> m14_19  [key=2, style=dotted];
m14_434 -> m14_435  [key=0, style=solid];
m14_434 -> m14_436  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_437 -> m14_438  [key=0, style=solid];
m14_437 -> m14_439  [key=2, style=dotted];
m14_445 -> m14_446  [key=0, style=solid];
m14_445 -> m14_368  [key=2, style=dotted];
m14_450 -> m14_444  [key=0, style=bold, color=blue];
m14_446 -> m14_447  [key=0, style=solid];
m14_446 -> m14_439  [key=2, style=dotted];
m14_447 -> m14_448  [key=0, style=solid];
m14_447 -> m14_130  [key=2, style=dotted];
m14_447 -> m14_138  [key=2, style=dotted];
m14_447 -> m14_451  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_447 -> m14_454  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_447 -> m14_449  [key=1, style=dashed, color=darkseagreen4, label=servers];
m14_462 -> m14_460  [key=0, style=bold, color=blue];
m14_461 -> m14_19  [key=2, style=dotted];
m14_461 -> m14_462  [key=0, style=solid];
m14_461 -> m14_463  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_464 -> m14_465  [key=0, style=solid];
m14_464 -> m14_466  [key=2, style=dotted];
m14_464 -> m14_467  [key=2, style=dotted];
m14_473 -> m14_474  [key=0, style=solid];
m14_473 -> m14_135  [key=2, style=dotted];
m14_473 -> m14_478  [key=2, style=dotted];
m14_473 -> m14_368  [key=2, style=dotted];
m14_477 -> m14_472  [key=0, style=bold, color=blue];
m14_474 -> m14_475  [key=0, style=solid];
m14_474 -> m14_479  [key=2, style=dotted];
m14_474 -> m14_467  [key=2, style=dotted];
m14_475 -> m14_476  [key=0, style=solid];
m14_475 -> m14_130  [key=2, style=dotted];
m14_475 -> m14_131  [key=2, style=dotted];
m14_485 -> m14_483  [key=0, style=bold, color=blue];
m14_484 -> m14_19  [key=2, style=dotted];
m14_484 -> m14_485  [key=0, style=solid];
m14_484 -> m14_486  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_487 -> m14_488  [key=0, style=solid];
m14_487 -> m14_489  [key=2, style=dotted];
m14_497 -> m14_493  [key=0, style=bold, color=blue];
m14_494 -> m14_495  [key=0, style=solid];
m14_494 -> m14_489  [key=2, style=dotted];
m14_494 -> m14_496  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_503 -> m14_504  [key=0, style=solid];
m14_503 -> m14_368  [key=2, style=dotted];
m14_508 -> m14_502  [key=0, style=bold, color=blue];
m14_504 -> m14_505  [key=0, style=solid];
m14_504 -> m14_489  [key=2, style=dotted];
m14_504 -> m14_506  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_504 -> m14_507  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_515 -> m14_512  [key=0, style=bold, color=blue];
m14_513 -> m14_19  [key=2, style=dotted];
m14_513 -> m14_514  [key=0, style=solid];
m14_513 -> m14_516  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_517 -> m14_518  [key=0, style=solid];
m14_517 -> m14_84  [key=2, style=dotted];
m14_517 -> m14_519  [key=2, style=dotted];
m14_526 -> m14_523  [key=0, style=bold, color=blue];
m14_524 -> m14_19  [key=2, style=dotted];
m14_524 -> m14_525  [key=0, style=solid];
m14_524 -> m14_527  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_528 -> m14_529  [key=0, style=solid];
m14_528 -> m14_519  [key=2, style=dotted];
m14_538 -> m14_533  [key=0, style=bold, color=blue];
m14_534 -> m14_535  [key=0, style=solid];
m14_534 -> m14_84  [key=2, style=dotted];
m14_534 -> m14_519  [key=2, style=dotted];
m14_535 -> m14_536  [key=0, style=solid];
m14_535 -> m14_130  [key=2, style=dotted];
m14_535 -> m14_138  [key=2, style=dotted];
m14_535 -> m14_539  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_535 -> m14_542  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_535 -> m14_537  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_550 -> m14_548  [key=0, style=bold, color=blue];
m14_549 -> m14_19  [key=2, style=dotted];
m14_549 -> m14_550  [key=0, style=solid];
m14_549 -> m14_551  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_552 -> m14_553  [key=0, style=solid];
m14_552 -> m14_554  [key=2, style=dotted];
m14_561 -> m14_558  [key=0, style=bold, color=blue];
m14_559 -> m14_560  [key=0, style=solid];
m14_559 -> m14_554  [key=2, style=dotted];
m14_567 -> m14_568  [key=0, style=solid];
m14_567 -> m14_368  [key=2, style=dotted];
m14_573 -> m14_566  [key=0, style=bold, color=blue];
m14_568 -> m14_569  [key=0, style=solid];
m14_568 -> m14_554  [key=2, style=dotted];
m14_568 -> m14_570  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_568 -> m14_571  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_568 -> m14_572  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_579 -> m14_577  [key=0, style=bold, color=blue];
m14_578 -> m14_19  [key=2, style=dotted];
m14_578 -> m14_579  [key=0, style=solid];
m14_578 -> m14_580  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_581 -> m14_582  [key=0, style=solid];
m14_581 -> m14_583  [key=2, style=dotted];
m14_590 -> m14_587  [key=0, style=bold, color=blue];
m14_588 -> m14_589  [key=0, style=solid];
m14_588 -> m14_583  [key=2, style=dotted];
m14_596 -> m14_597  [key=0, style=solid];
m14_596 -> m14_600  [key=2, style=dotted];
m14_596 -> m14_368  [key=2, style=dotted];
m14_599 -> m14_595  [key=0, style=bold, color=blue];
m14_597 -> m14_598  [key=0, style=solid];
m14_597 -> m14_583  [key=2, style=dotted];
m14_606 -> m14_604  [key=0, style=bold, color=blue];
m14_605 -> m14_19  [key=2, style=dotted];
m14_605 -> m14_606  [key=0, style=solid];
m14_605 -> m14_607  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_608 -> m14_609  [key=0, style=solid];
m14_608 -> m14_610  [key=2, style=dotted];
m14_616 -> m14_617  [key=0, style=solid];
m14_616 -> m14_600  [key=2, style=dotted];
m14_616 -> m14_368  [key=2, style=dotted];
m14_619 -> m14_615  [key=0, style=bold, color=blue];
m14_617 -> m14_618  [key=0, style=solid];
m14_617 -> m14_610  [key=2, style=dotted];
m14_625 -> m14_623  [key=0, style=bold, color=blue];
m14_624 -> m14_19  [key=2, style=dotted];
m14_624 -> m14_625  [key=0, style=solid];
m14_624 -> m14_626  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_627 -> m14_628  [key=0, style=solid];
m14_627 -> m14_629  [key=2, style=dotted];
m14_636 -> m14_633  [key=0, style=bold, color=blue];
m14_634 -> m14_635  [key=0, style=solid];
m14_634 -> m14_629  [key=2, style=dotted];
m14_642 -> m14_643  [key=0, style=solid];
m14_642 -> m14_368  [key=2, style=dotted];
m14_645 -> m14_641  [key=0, style=bold, color=blue];
m14_643 -> m14_644  [key=0, style=solid];
m14_643 -> m14_629  [key=2, style=dotted];
m14_651 -> m14_652  [key=0, style=solid];
m14_651 -> m14_368  [key=2, style=dotted];
m14_654 -> m14_650  [key=0, style=bold, color=blue];
m14_652 -> m14_653  [key=0, style=solid];
m14_652 -> m14_629  [key=2, style=dotted];
m14_660 -> m14_658  [key=0, style=bold, color=blue];
m14_659 -> m14_19  [key=2, style=dotted];
m14_659 -> m14_660  [key=0, style=solid];
m14_659 -> m14_661  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_662 -> m14_663  [key=0, style=solid];
m14_662 -> m14_664  [key=2, style=dotted];
m14_671 -> m14_668  [key=0, style=bold, color=blue];
m14_669 -> m14_670  [key=0, style=solid];
m14_669 -> m14_664  [key=2, style=dotted];
m14_677 -> m14_678  [key=0, style=solid];
m14_677 -> m14_368  [key=2, style=dotted];
m14_680 -> m14_676  [key=0, style=bold, color=blue];
m14_678 -> m14_679  [key=0, style=solid];
m14_678 -> m14_664  [key=2, style=dotted];
m14_686 -> m14_684  [key=0, style=bold, color=blue];
m14_685 -> m14_19  [key=2, style=dotted];
m14_685 -> m14_686  [key=0, style=solid];
m14_685 -> m14_687  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_688 -> m14_689  [key=0, style=solid];
m14_688 -> m14_690  [key=2, style=dotted];
m14_697 -> m14_694  [key=0, style=bold, color=blue];
m14_695 -> m14_696  [key=0, style=solid];
m14_695 -> m14_690  [key=2, style=dotted];
m14_703 -> m14_704  [key=0, style=solid];
m14_703 -> m14_478  [key=2, style=dotted];
m14_703 -> m14_368  [key=2, style=dotted];
m14_707 -> m14_702  [key=0, style=bold, color=blue];
m14_704 -> m14_705  [key=0, style=solid];
m14_704 -> m14_690  [key=2, style=dotted];
m14_704 -> m14_706  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_713 -> m14_711  [key=0, style=bold, color=blue];
m14_712 -> m14_19  [key=2, style=dotted];
m14_712 -> m14_713  [key=0, style=solid];
m14_712 -> m14_714  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_715 -> m14_716  [key=0, style=solid];
m14_715 -> m14_717  [key=2, style=dotted];
m14_724 -> m14_721  [key=0, style=bold, color=blue];
m14_722 -> m14_723  [key=0, style=solid];
m14_722 -> m14_717  [key=2, style=dotted];
m14_730 -> m14_731  [key=0, style=solid];
m14_730 -> m14_368  [key=2, style=dotted];
m14_733 -> m14_729  [key=0, style=bold, color=blue];
m14_731 -> m14_732  [key=0, style=solid];
m14_731 -> m14_717  [key=2, style=dotted];
m14_739 -> m14_737  [key=0, style=bold, color=blue];
m14_738 -> m14_19  [key=2, style=dotted];
m14_738 -> m14_739  [key=0, style=solid];
m14_738 -> m14_740  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_741 -> m14_742  [key=0, style=solid];
m14_741 -> m14_743  [key=2, style=dotted];
m14_750 -> m14_747  [key=0, style=bold, color=blue];
m14_748 -> m14_749  [key=0, style=solid];
m14_748 -> m14_743  [key=2, style=dotted];
m14_756 -> m14_757  [key=0, style=solid];
m14_756 -> m14_478  [key=2, style=dotted];
m14_756 -> m14_368  [key=2, style=dotted];
m14_760 -> m14_755  [key=0, style=bold, color=blue];
m14_757 -> m14_758  [key=0, style=solid];
m14_757 -> m14_743  [key=2, style=dotted];
m14_757 -> m14_759  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_767 -> m14_764  [key=0, style=bold, color=blue];
m14_765 -> m14_19  [key=2, style=dotted];
m14_765 -> m14_766  [key=0, style=solid];
m14_765 -> m14_768  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_769 -> m14_770  [key=0, style=solid];
m14_769 -> m14_771  [key=2, style=dotted];
m14_778 -> m14_775  [key=0, style=bold, color=blue];
m14_776 -> m14_19  [key=2, style=dotted];
m14_776 -> m14_777  [key=0, style=solid];
m14_776 -> m14_779  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_780 -> m14_781  [key=0, style=solid];
m14_780 -> m14_771  [key=2, style=dotted];
m14_788 -> m14_785  [key=0, style=bold, color=blue];
m14_786 -> m14_787  [key=0, style=solid];
m14_786 -> m14_771  [key=2, style=dotted];
m14_794 -> m14_795  [key=0, style=solid];
m14_794 -> m14_368  [key=2, style=dotted];
m14_797 -> m14_793  [key=0, style=bold, color=blue];
m14_795 -> m14_796  [key=0, style=solid];
m14_795 -> m14_771  [key=2, style=dotted];
m14_804 -> m14_801  [key=0, style=bold, color=blue];
m14_802 -> m14_19  [key=2, style=dotted];
m14_802 -> m14_803  [key=0, style=solid];
m14_802 -> m14_805  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_806 -> m14_807  [key=0, style=solid];
m14_806 -> m14_808  [key=2, style=dotted];
m14_815 -> m14_812  [key=0, style=bold, color=blue];
m14_813 -> m14_814  [key=0, style=solid];
m14_813 -> m14_808  [key=2, style=dotted];
m14_822 -> m14_823  [key=0, style=solid];
m14_822 -> m14_368  [key=2, style=dotted];
m14_825 -> m14_821  [key=0, style=bold, color=blue];
m14_823 -> m14_824  [key=0, style=solid];
m14_823 -> m14_808  [key=2, style=dotted];
m14_831 -> m14_829  [key=0, style=bold, color=blue];
m14_830 -> m14_19  [key=2, style=dotted];
m14_830 -> m14_831  [key=0, style=solid];
m14_830 -> m14_832  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_833 -> m14_834  [key=0, style=solid];
m14_833 -> m14_835  [key=2, style=dotted];
m14_842 -> m14_839  [key=0, style=bold, color=blue];
m14_840 -> m14_841  [key=0, style=solid];
m14_840 -> m14_835  [key=2, style=dotted];
m14_848 -> m14_849  [key=0, style=solid];
m14_848 -> m14_368  [key=2, style=dotted];
m14_851 -> m14_847  [key=0, style=bold, color=blue];
m14_849 -> m14_850  [key=0, style=solid];
m14_849 -> m14_835  [key=2, style=dotted];
m14_857 -> m14_855  [key=0, style=bold, color=blue];
m14_856 -> m14_19  [key=2, style=dotted];
m14_856 -> m14_857  [key=0, style=solid];
m14_856 -> m14_858  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_859 -> m14_860  [key=0, style=solid];
m14_859 -> m14_861  [key=2, style=dotted];
m14_868 -> m14_865  [key=0, style=bold, color=blue];
m14_866 -> m14_867  [key=0, style=solid];
m14_866 -> m14_861  [key=2, style=dotted];
m14_874 -> m14_875  [key=0, style=solid];
m14_874 -> m14_136  [key=2, style=dotted];
m14_874 -> m14_368  [key=2, style=dotted];
m14_878 -> m14_873  [key=0, style=bold, color=blue];
m14_875 -> m14_876  [key=0, style=solid];
m14_875 -> m14_861  [key=2, style=dotted];
m14_875 -> m14_877  [key=1, style=dashed, color=darkseagreen4, label=result];
m14_899 -> m14_897  [key=0, style=bold, color=blue];
m14_898 -> m14_899  [key=0, style=solid];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_64  [key=2, style=dotted];
m14_70 -> m14_72  [key=0, style=solid];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_20  [key=2, style=dotted];
m14_79 -> m14_81  [key=0, style=solid];
m14_81 -> m14_82  [key=0, style=solid];
m14_81 -> m14_46  [key=2, style=dotted];
m14_81 -> m14_66  [key=2, style=dotted];
m14_99 -> m14_97  [key=0, style=bold, color=blue];
m14_139 -> m14_140  [key=0, style=solid];
m14_141 -> m14_139  [key=0, style=bold, color=blue];
m14_185 -> m14_186  [key=0, style=solid];
m14_187 -> m14_185  [key=0, style=bold, color=blue];
m14_125 -> m14_126  [key=0, style=solid];
m14_125 -> m14_20  [key=2, style=dotted];
m14_121 -> m14_122  [key=0, style=solid];
m14_121 -> m14_135  [key=2, style=dotted];
m14_121 -> m14_136  [key=2, style=dotted];
m14_121 -> m14_137  [key=2, style=dotted];
m14_122 -> m14_123  [key=0, style=solid];
m14_122 -> m14_135  [key=2, style=dotted];
m14_122 -> m14_136  [key=2, style=dotted];
m14_122 -> m14_137  [key=2, style=dotted];
m14_108 -> m14_109  [key=0, style=solid];
m14_108 -> m14_64  [key=2, style=dotted];
m14_108 -> m14_49  [key=2, style=dotted];
m14_109 -> m14_110  [key=0, style=solid];
m14_109 -> m14_129  [key=2, style=dotted];
m14_109 -> m14_105  [key=0, style=bold, color=blue];
m14_116 -> m14_117  [key=0, style=solid];
m14_124 -> m14_125  [key=0, style=solid];
m14_124 -> m14_20  [key=2, style=dotted];
m14_142 -> m14_143  [key=0, style=solid];
m14_145 -> m14_146  [key=0, style=solid];
m14_154 -> m14_155  [key=0, style=solid];
m14_156 -> m14_154  [key=0, style=bold, color=blue];
m14_163 -> m14_164  [key=0, style=solid];
m14_163 -> m14_165  [key=2, style=dotted];
m14_180 -> m14_181  [key=0, style=solid];
m14_180 -> m14_136  [key=2, style=dotted];
m14_180 -> m14_137  [key=2, style=dotted];
m14_174 -> m14_175  [key=0, style=solid];
m14_174 -> m14_64  [key=2, style=dotted];
m14_175 -> m14_176  [key=0, style=solid];
m14_175 -> m14_64  [key=2, style=dotted];
m14_176 -> m14_177  [key=0, style=solid];
m14_176 -> m14_20  [key=2, style=dotted];
m14_177 -> m14_178  [key=0, style=solid];
m14_177 -> m14_20  [key=2, style=dotted];
m14_178 -> m14_179  [key=0, style=solid];
m14_178 -> m14_165  [key=2, style=dotted];
m14_179 -> m14_180  [key=0, style=solid];
m14_179 -> m14_136  [key=2, style=dotted];
m14_179 -> m14_137  [key=2, style=dotted];
m14_194 -> m14_195  [key=0, style=solid];
m14_196 -> m14_194  [key=0, style=bold, color=blue];
m14_203 -> m14_204  [key=0, style=solid];
m14_203 -> m14_165  [key=2, style=dotted];
m14_216 -> m14_217  [key=0, style=solid];
m14_216 -> m14_20  [key=2, style=dotted];
m14_213 -> m14_214  [key=0, style=solid];
m14_213 -> m14_64  [key=2, style=dotted];
m14_214 -> m14_215  [key=0, style=solid];
m14_214 -> m14_20  [key=2, style=dotted];
m14_215 -> m14_216  [key=0, style=solid];
m14_215 -> m14_20  [key=2, style=dotted];
m14_227 -> m14_228  [key=0, style=solid];
m14_227 -> m14_20  [key=2, style=dotted];
m14_226 -> m14_227  [key=0, style=solid];
m14_226 -> m14_64  [key=2, style=dotted];
m14_236 -> m14_237  [key=0, style=solid];
m14_236 -> m14_64  [key=2, style=dotted];
m14_244 -> m14_245  [key=0, style=solid];
m14_244 -> m14_20  [key=2, style=dotted];
m14_246 -> m14_247  [key=0, style=solid];
m14_248 -> m14_246  [key=0, style=bold, color=blue];
m14_255 -> m14_256  [key=0, style=solid];
m14_255 -> m14_20  [key=2, style=dotted];
m14_257 -> m14_258  [key=0, style=solid];
m14_259 -> m14_257  [key=0, style=bold, color=blue];
m14_266 -> m14_267  [key=0, style=solid];
m14_266 -> m14_268  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m14_266 -> m14_132  [key=2, style=dotted];
m14_269 -> m14_270  [key=0, style=solid];
m14_269 -> m14_20  [key=2, style=dotted];
m14_277 -> m14_278  [key=0, style=solid];
m14_277 -> m14_279  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m14_277 -> m14_280  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m14_277 -> m14_132  [key=2, style=dotted];
m14_281 -> m14_282  [key=0, style=solid];
m14_281 -> m14_20  [key=2, style=dotted];
m14_289 -> m14_290  [key=0, style=solid];
m14_289 -> m14_291  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m14_289 -> m14_132  [key=2, style=dotted];
m14_292 -> m14_293  [key=0, style=solid];
m14_292 -> m14_20  [key=2, style=dotted];
m14_299 -> m14_300  [key=0, style=solid];
m14_299 -> m14_20  [key=2, style=dotted];
m14_301 -> m14_302  [key=0, style=solid];
m14_303 -> m14_301  [key=0, style=bold, color=blue];
m14_310 -> m14_311  [key=0, style=solid];
m14_310 -> m14_20  [key=2, style=dotted];
m14_312 -> m14_313  [key=0, style=solid];
m14_314 -> m14_312  [key=0, style=bold, color=blue];
m14_320 -> m14_321  [key=0, style=solid];
m14_320 -> m14_165  [key=2, style=dotted];
m14_329 -> m14_330  [key=0, style=solid];
m14_329 -> m14_20  [key=2, style=dotted];
m14_337 -> m14_338  [key=0, style=solid];
m14_337 -> m14_20  [key=2, style=dotted];
m14_339 -> m14_340  [key=0, style=solid];
m14_341 -> m14_339  [key=0, style=bold, color=blue];
m14_349 -> m14_350  [key=0, style=solid];
m14_351 -> m14_349  [key=0, style=bold, color=blue];
m14_357 -> m14_358  [key=0, style=solid];
m14_357 -> m14_165  [key=2, style=dotted];
m14_366 -> m14_367  [key=0, style=solid];
m14_366 -> m14_20  [key=2, style=dotted];
m14_374 -> m14_375  [key=0, style=solid];
m14_374 -> m14_20  [key=2, style=dotted];
m14_376 -> m14_377  [key=0, style=solid];
m14_378 -> m14_376  [key=0, style=bold, color=blue];
m14_386 -> m14_387  [key=0, style=solid];
m14_386 -> m14_20  [key=2, style=dotted];
m14_388 -> m14_389  [key=0, style=solid];
m14_390 -> m14_388  [key=0, style=bold, color=blue];
m14_405 -> m14_406  [key=0, style=solid];
m14_405 -> m14_408  [key=2, style=dotted];
m14_398 -> m14_399  [key=0, style=solid];
m14_398 -> m14_20  [key=2, style=dotted];
m14_399 -> m14_400  [key=0, style=solid];
m14_399 -> m14_407  [key=2, style=dotted];
m14_399 -> m14_137  [key=2, style=dotted];
m14_400 -> m14_401  [key=0, style=solid];
m14_400 -> m14_64  [key=2, style=dotted];
m14_401 -> m14_402  [key=0, style=solid];
m14_401 -> m14_379  [key=2, style=dotted];
m14_404 -> m14_405  [key=0, style=solid];
m14_404 -> m14_20  [key=2, style=dotted];
m14_415 -> m14_416  [key=0, style=solid];
m14_417 -> m14_415  [key=0, style=bold, color=blue];
m14_427 -> m14_428  [key=0, style=solid];
m14_427 -> m14_429  [key=2, style=dotted];
m14_436 -> m14_437  [key=0, style=solid];
m14_438 -> m14_436  [key=0, style=bold, color=blue];
m14_449 -> m14_450  [key=0, style=solid];
m14_449 -> m14_20  [key=2, style=dotted];
m14_448 -> m14_449  [key=0, style=solid];
m14_448 -> m14_429  [key=2, style=dotted];
m14_451 -> m14_452  [key=0, style=solid];
m14_454 -> m14_455  [key=0, style=solid];
m14_463 -> m14_464  [key=0, style=solid];
m14_465 -> m14_463  [key=0, style=bold, color=blue];
m14_476 -> m14_477  [key=0, style=solid];
m14_476 -> m14_20  [key=2, style=dotted];
m14_486 -> m14_487  [key=0, style=solid];
m14_488 -> m14_486  [key=0, style=bold, color=blue];
m14_496 -> m14_497  [key=0, style=solid];
m14_496 -> m14_20  [key=2, style=dotted];
m14_495 -> m14_496  [key=0, style=solid];
m14_495 -> m14_64  [key=2, style=dotted];
m14_507 -> m14_508  [key=0, style=solid];
m14_507 -> m14_408  [key=2, style=dotted];
m14_505 -> m14_506  [key=0, style=solid];
m14_505 -> m14_20  [key=2, style=dotted];
m14_506 -> m14_507  [key=0, style=solid];
m14_506 -> m14_408  [key=2, style=dotted];
m14_514 -> m14_515  [key=0, style=solid];
m14_514 -> m14_20  [key=2, style=dotted];
m14_516 -> m14_517  [key=0, style=solid];
m14_518 -> m14_516  [key=0, style=bold, color=blue];
m14_525 -> m14_526  [key=0, style=solid];
m14_525 -> m14_20  [key=2, style=dotted];
m14_527 -> m14_528  [key=0, style=solid];
m14_529 -> m14_527  [key=0, style=bold, color=blue];
m14_537 -> m14_538  [key=0, style=solid];
m14_537 -> m14_20  [key=2, style=dotted];
m14_536 -> m14_537  [key=0, style=solid];
m14_536 -> m14_20  [key=2, style=dotted];
m14_539 -> m14_540  [key=0, style=solid];
m14_542 -> m14_543  [key=0, style=solid];
m14_551 -> m14_552  [key=0, style=solid];
m14_553 -> m14_551  [key=0, style=bold, color=blue];
m14_560 -> m14_561  [key=0, style=solid];
m14_560 -> m14_165  [key=2, style=dotted];
m14_572 -> m14_573  [key=0, style=solid];
m14_572 -> m14_20  [key=2, style=dotted];
m14_569 -> m14_570  [key=0, style=solid];
m14_569 -> m14_64  [key=2, style=dotted];
m14_570 -> m14_571  [key=0, style=solid];
m14_570 -> m14_20  [key=2, style=dotted];
m14_571 -> m14_572  [key=0, style=solid];
m14_571 -> m14_20  [key=2, style=dotted];
m14_580 -> m14_581  [key=0, style=solid];
m14_582 -> m14_580  [key=0, style=bold, color=blue];
m14_589 -> m14_590  [key=0, style=solid];
m14_589 -> m14_20  [key=2, style=dotted];
m14_598 -> m14_599  [key=0, style=solid];
m14_598 -> m14_20  [key=2, style=dotted];
m14_607 -> m14_608  [key=0, style=solid];
m14_609 -> m14_607  [key=0, style=bold, color=blue];
m14_618 -> m14_619  [key=0, style=solid];
m14_618 -> m14_20  [key=2, style=dotted];
m14_626 -> m14_627  [key=0, style=solid];
m14_628 -> m14_626  [key=0, style=bold, color=blue];
m14_635 -> m14_636  [key=0, style=solid];
m14_635 -> m14_20  [key=2, style=dotted];
m14_644 -> m14_645  [key=0, style=solid];
m14_644 -> m14_20  [key=2, style=dotted];
m14_653 -> m14_654  [key=0, style=solid];
m14_653 -> m14_20  [key=2, style=dotted];
m14_661 -> m14_662  [key=0, style=solid];
m14_663 -> m14_661  [key=0, style=bold, color=blue];
m14_670 -> m14_671  [key=0, style=solid];
m14_670 -> m14_20  [key=2, style=dotted];
m14_679 -> m14_680  [key=0, style=solid];
m14_679 -> m14_20  [key=2, style=dotted];
m14_687 -> m14_688  [key=0, style=solid];
m14_689 -> m14_687  [key=0, style=bold, color=blue];
m14_696 -> m14_697  [key=0, style=solid];
m14_696 -> m14_137  [key=2, style=dotted];
m14_706 -> m14_707  [key=0, style=solid];
m14_706 -> m14_466  [key=2, style=dotted];
m14_706 -> m14_137  [key=2, style=dotted];
m14_705 -> m14_466  [key=2, style=dotted];
m14_705 -> m14_706  [key=0, style=solid];
m14_705 -> m14_137  [key=2, style=dotted];
m14_714 -> m14_715  [key=0, style=solid];
m14_716 -> m14_714  [key=0, style=bold, color=blue];
m14_723 -> m14_724  [key=0, style=solid];
m14_723 -> m14_20  [key=2, style=dotted];
m14_732 -> m14_733  [key=0, style=solid];
m14_732 -> m14_20  [key=2, style=dotted];
m14_740 -> m14_741  [key=0, style=solid];
m14_742 -> m14_740  [key=0, style=bold, color=blue];
m14_749 -> m14_750  [key=0, style=solid];
m14_749 -> m14_137  [key=2, style=dotted];
m14_759 -> m14_760  [key=0, style=solid];
m14_759 -> m14_466  [key=2, style=dotted];
m14_759 -> m14_137  [key=2, style=dotted];
m14_758 -> m14_466  [key=2, style=dotted];
m14_758 -> m14_759  [key=0, style=solid];
m14_758 -> m14_137  [key=2, style=dotted];
m14_766 -> m14_767  [key=0, style=solid];
m14_766 -> m14_20  [key=2, style=dotted];
m14_768 -> m14_769  [key=0, style=solid];
m14_770 -> m14_768  [key=0, style=bold, color=blue];
m14_777 -> m14_778  [key=0, style=solid];
m14_777 -> m14_20  [key=2, style=dotted];
m14_779 -> m14_780  [key=0, style=solid];
m14_781 -> m14_779  [key=0, style=bold, color=blue];
m14_787 -> m14_788  [key=0, style=solid];
m14_787 -> m14_165  [key=2, style=dotted];
m14_796 -> m14_797  [key=0, style=solid];
m14_796 -> m14_20  [key=2, style=dotted];
m14_803 -> m14_804  [key=0, style=solid];
m14_803 -> m14_20  [key=2, style=dotted];
m14_805 -> m14_806  [key=0, style=solid];
m14_807 -> m14_805  [key=0, style=bold, color=blue];
m14_814 -> m14_815  [key=0, style=solid];
m14_814 -> m14_816  [key=2, style=dotted];
m14_824 -> m14_825  [key=0, style=solid];
m14_824 -> m14_20  [key=2, style=dotted];
m14_832 -> m14_833  [key=0, style=solid];
m14_834 -> m14_832  [key=0, style=bold, color=blue];
m14_841 -> m14_842  [key=0, style=solid];
m14_841 -> m14_816  [key=2, style=dotted];
m14_850 -> m14_851  [key=0, style=solid];
m14_850 -> m14_20  [key=2, style=dotted];
m14_858 -> m14_859  [key=0, style=solid];
m14_860 -> m14_858  [key=0, style=bold, color=blue];
m14_867 -> m14_868  [key=0, style=solid];
m14_867 -> m14_137  [key=2, style=dotted];
m14_877 -> m14_878  [key=0, style=solid];
m14_877 -> m14_466  [key=2, style=dotted];
m14_877 -> m14_137  [key=2, style=dotted];
m14_876 -> m14_466  [key=2, style=dotted];
m14_876 -> m14_877  [key=0, style=solid];
m14_876 -> m14_137  [key=2, style=dotted];
m14_120 -> m14_121  [key=0, style=solid];
m14_120 -> m14_20  [key=2, style=dotted];
m14_117 -> m14_120  [key=1, style=dashed, color=darkseagreen4, label=job];
m14_117 -> m14_118  [key=0, style=solid];
m14_117 -> m14_134  [key=2, style=dotted];
m14_117 -> m14_119  [key=1, style=dashed, color=darkseagreen4, label=job];
m14_144 -> m14_142  [key=0, style=bold, color=blue];
m14_143 -> m14_144  [key=0, style=solid];
m14_147 -> m14_145  [key=0, style=bold, color=blue];
m14_146 -> m14_147  [key=0, style=solid];
m14_453 -> m14_451  [key=0, style=bold, color=blue];
m14_452 -> m14_453  [key=0, style=solid];
m14_456 -> m14_454  [key=0, style=bold, color=blue];
m14_455 -> m14_456  [key=0, style=solid];
m14_541 -> m14_539  [key=0, style=bold, color=blue];
m14_540 -> m14_541  [key=0, style=solid];
m14_544 -> m14_542  [key=0, style=bold, color=blue];
m14_543 -> m14_544  [key=0, style=solid];
m14_118 -> m14_20  [key=2, style=dotted];
m14_118 -> m14_119  [key=0, style=solid];
m14_118 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_118 -> m14_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m14_119 -> m14_20  [key=2, style=dotted];
m14_119 -> m14_120  [key=0, style=solid];
m14_672 -> m14_673  [key=0, style=solid];
m14_674 -> m14_675  [key=0, style=solid];
m14_674 -> m14_104  [key=2, style=dotted];
m14_674 -> m14_676  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_673 -> m14_674  [key=0, style=solid];
m14_673 -> m14_673  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_673 -> m14_677  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_675 -> m14_672  [key=0, style=bold, color=blue];
m14_104 -> m14_100  [key=0, style=bold, color=blue];
m14_72 -> m14_73  [key=0, style=solid];
m14_72 -> m14_74  [key=0, style=solid];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_49  [key=2, style=dotted];
m14_73 -> m14_75  [key=0, style=solid];
m14_73 -> d10  [key=2, style=dotted];
m14_75 -> m14_69  [key=0, style=bold, color=blue];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_45  [key=2, style=dotted];
m14_75 -> m14_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_369 -> m14_370  [key=0, style=solid];
m14_370 -> m14_371  [key=0, style=solid];
m14_370 -> m14_45  [key=2, style=dotted];
m14_370 -> m14_372  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_371 -> m14_369  [key=0, style=bold, color=blue];
m14_480 -> m14_481  [key=0, style=solid];
m14_481 -> m14_482  [key=0, style=solid];
m14_481 -> m14_45  [key=2, style=dotted];
m14_481 -> m14_483  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_482 -> m14_480  [key=0, style=bold, color=blue];
m14_879 -> m14_880  [key=0, style=solid];
m14_879 -> m14_883  [key=1, style=dashed, color=darkseagreen4, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>"];
m14_880 -> m14_885  [key=2, style=dotted];
m14_880 -> m14_881  [key=0, style=solid];
m14_880 -> m14_883  [key=1, style=dashed, color=darkseagreen4, label=sqlConnection];
m14_881 -> m14_882  [key=0, style=solid];
m14_881 -> m14_886  [key=2, style=dotted];
m14_883 -> m14_884  [key=0, style=solid];
m14_883 -> m14_887  [key=2, style=dotted];
m14_882 -> m14_883  [key=0, style=solid];
m14_882 -> m14_24  [key=2, style=dotted];
m14_884 -> m14_879  [key=0, style=bold, color=blue];
m14_239 -> m14_240  [key=0, style=solid];
m14_240 -> m14_241  [key=0, style=solid];
m14_240 -> m14_45  [key=2, style=dotted];
m14_240 -> m14_242  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_241 -> m14_239  [key=0, style=bold, color=blue];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_76 -> m14_81  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_76 -> m14_74  [key=0, style=bold, color=blue];
m14_158 -> m14_159  [key=0, style=solid];
m14_159 -> m14_160  [key=0, style=solid];
m14_159 -> m14_45  [key=2, style=dotted];
m14_159 -> m14_161  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_160 -> m14_158  [key=0, style=bold, color=blue];
m14_315 -> m14_316  [key=0, style=solid];
m14_316 -> m14_317  [key=0, style=solid];
m14_316 -> m14_45  [key=2, style=dotted];
m14_316 -> m14_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_317 -> m14_315  [key=0, style=bold, color=blue];
m14_708 -> m14_709  [key=0, style=solid];
m14_709 -> m14_710  [key=0, style=solid];
m14_709 -> m14_45  [key=2, style=dotted];
m14_709 -> m14_711  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_710 -> m14_708  [key=0, style=bold, color=blue];
m14_100 -> m14_87  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
m14_100 -> m14_102  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
m14_100 -> m14_168  [key=3, color=darkorchid, style=bold, label="Parameter variable string arg"];
m14_100 -> m14_900  [key=0, style=solid];
m14_100 -> m14_101  [key=0, style=solid];
m14_100 -> m14_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_900 -> m14_100  [key=0, style=bold, color=blue];
m14_509 -> m14_510  [key=0, style=solid];
m14_510 -> m14_511  [key=0, style=solid];
m14_510 -> m14_45  [key=2, style=dotted];
m14_510 -> m14_512  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_511 -> m14_509  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_0 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.IPersistentJobQueue"];
m14_0 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m14_4 -> m14_5  [key=0, style=solid, color=green];
m14_4 -> m14_10  [key=2, style=dotted, color=green];
m14_4 -> m14_7  [key=0, style=solid];
m14_4 -> d10  [key=2, style=dotted];
m14_2 -> m14_4  [key=1, style=dashed, color=green, label=provider];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_7  [key=2, style=dotted];
m14_2 -> d10  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid, color=green];
m14_3 -> m14_8  [key=2, style=dotted];
m14_3 -> m14_9  [key=2, style=dotted];
m14_3 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_3 -> m14_5  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_6  [key=2, style=dotted];
m14_1 -> m14_3  [key=0, style=solid];
m14_5 -> m14_0  [key=0, style=bold, color=blue];
m14_5 -> m14_6  [key=0, style=solid];
m14_591 -> m14_592  [key=0, style=solid];
m14_593 -> m14_594  [key=0, style=solid];
m14_593 -> m14_104  [key=2, style=dotted];
m14_593 -> m14_595  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_592 -> m14_593  [key=0, style=solid];
m14_592 -> m14_592  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_592 -> m14_596  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_594 -> m14_591  [key=0, style=bold, color=blue];
m14_744 -> m14_745  [key=0, style=solid];
m14_745 -> m14_746  [key=0, style=solid];
m14_745 -> m14_45  [key=2, style=dotted];
m14_745 -> m14_747  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_746 -> m14_744  [key=0, style=bold, color=blue];
m14_468 -> m14_469  [key=0, style=solid];
m14_470 -> m14_471  [key=0, style=solid];
m14_470 -> m14_104  [key=2, style=dotted];
m14_470 -> m14_472  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_469 -> m14_470  [key=0, style=solid];
m14_469 -> m14_469  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_469 -> m14_473  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_471 -> m14_468  [key=0, style=bold, color=blue];
m14_734 -> m14_735  [key=0, style=solid];
m14_735 -> m14_736  [key=0, style=solid];
m14_735 -> m14_45  [key=2, style=dotted];
m14_735 -> m14_737  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_736 -> m14_734  [key=0, style=bold, color=blue];
m14_205 -> m14_206  [key=0, style=solid];
m14_207 -> m14_208  [key=0, style=solid];
m14_207 -> m14_104  [key=2, style=dotted];
m14_207 -> m14_209  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_206 -> m14_207  [key=0, style=solid];
m14_206 -> m14_206  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_206 -> m14_211  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_208 -> m14_205  [key=0, style=bold, color=blue];
m14_782 -> m14_783  [key=0, style=solid];
m14_783 -> m14_784  [key=0, style=solid];
m14_783 -> m14_45  [key=2, style=dotted];
m14_783 -> m14_785  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_784 -> m14_782  [key=0, style=bold, color=blue];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_45  [key=2, style=dotted];
m14_43 -> m14_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_44 -> m14_42  [key=0, style=bold, color=blue];
m14_655 -> m14_656  [key=0, style=solid];
m14_656 -> m14_657  [key=0, style=solid];
m14_656 -> m14_45  [key=2, style=dotted];
m14_656 -> m14_658  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_657 -> m14_655  [key=0, style=bold, color=blue];
m14_498 -> m14_499  [key=0, style=solid];
m14_500 -> m14_501  [key=0, style=solid];
m14_500 -> m14_104  [key=2, style=dotted];
m14_500 -> m14_502  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_499 -> m14_500  [key=0, style=solid];
m14_499 -> m14_499  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_499 -> m14_503  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_501 -> m14_498  [key=0, style=bold, color=blue];
m14_19 -> m14_17  [key=0, style=bold, color=blue];
m14_101 -> m14_102  [key=0, style=solid];
m14_101 -> m14_103  [key=0, style=solid];
m14_103 -> m14_104  [key=0, style=solid];
m14_103 -> m14_49  [key=2, style=dotted];
m14_103 -> m14_101  [key=0, style=bold, color=blue];
m14_102 -> m14_104  [key=0, style=solid];
m14_102 -> d10  [key=2, style=dotted];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_520 -> m14_521  [key=0, style=solid];
m14_521 -> m14_522  [key=0, style=solid];
m14_521 -> m14_45  [key=2, style=dotted];
m14_521 -> m14_523  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_522 -> m14_520  [key=0, style=bold, color=blue];
m14_665 -> m14_666  [key=0, style=solid];
m14_666 -> m14_667  [key=0, style=solid];
m14_666 -> m14_45  [key=2, style=dotted];
m14_666 -> m14_668  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_667 -> m14_665  [key=0, style=bold, color=blue];
m14_681 -> m14_682  [key=0, style=solid];
m14_682 -> m14_683  [key=0, style=solid];
m14_682 -> m14_45  [key=2, style=dotted];
m14_682 -> m14_684  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_683 -> m14_681  [key=0, style=bold, color=blue];
m14_620 -> m14_621  [key=0, style=solid];
m14_621 -> m14_622  [key=0, style=solid];
m14_621 -> m14_45  [key=2, style=dotted];
m14_621 -> m14_623  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_622 -> m14_620  [key=0, style=bold, color=blue];
m14_890 -> m14_891  [key=0, style=solid];
m14_890 -> m14_8  [key=2, style=dotted];
m14_890 -> m14_9  [key=2, style=dotted];
m14_890 -> m14_897  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_889 -> m14_890  [key=0, style=solid];
m14_889 -> m14_894  [key=2, style=dotted];
m14_889 -> m14_891  [key=1, style=dashed, color=darkseagreen4, label=storage];
m14_891 -> m14_892  [key=0, style=solid];
m14_891 -> m14_895  [key=2, style=dotted];
m14_888 -> m14_889  [key=0, style=solid];
m14_888 -> m14_885  [key=2, style=dotted];
m14_892 -> m14_893  [key=0, style=solid];
m14_892 -> m14_896  [key=2, style=dotted];
m14_893 -> m14_28  [key=0, style=bold, color=blue];
m14_798 -> m14_799  [key=0, style=solid];
m14_799 -> m14_800  [key=0, style=solid];
m14_799 -> m14_45  [key=2, style=dotted];
m14_799 -> m14_801  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_800 -> m14_798  [key=0, style=bold, color=blue];
m14_294 -> m14_295  [key=0, style=solid];
m14_295 -> m14_296  [key=0, style=solid];
m14_295 -> m14_45  [key=2, style=dotted];
m14_295 -> m14_297  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_296 -> m14_294  [key=0, style=bold, color=blue];
m14_817 -> m14_818  [key=0, style=solid];
m14_819 -> m14_820  [key=0, style=solid];
m14_819 -> m14_104  [key=2, style=dotted];
m14_819 -> m14_821  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_818 -> m14_819  [key=0, style=solid];
m14_818 -> m14_818  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_818 -> m14_822  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_820 -> m14_817  [key=0, style=bold, color=blue];
m14_630 -> m14_631  [key=0, style=solid];
m14_631 -> m14_632  [key=0, style=solid];
m14_631 -> m14_45  [key=2, style=dotted];
m14_631 -> m14_633  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_632 -> m14_630  [key=0, style=bold, color=blue];
m14_852 -> m14_853  [key=0, style=solid];
m14_853 -> m14_854  [key=0, style=solid];
m14_853 -> m14_45  [key=2, style=dotted];
m14_853 -> m14_855  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_854 -> m14_852  [key=0, style=bold, color=blue];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_45  [key=2, style=dotted];
m14_66 -> m14_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_574 -> m14_575  [key=0, style=solid];
m14_575 -> m14_576  [key=0, style=solid];
m14_575 -> m14_45  [key=2, style=dotted];
m14_575 -> m14_577  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_576 -> m14_574  [key=0, style=bold, color=blue];
m14_359 -> m14_360  [key=0, style=solid];
m14_361 -> m14_362  [key=0, style=solid];
m14_361 -> m14_104  [key=2, style=dotted];
m14_361 -> m14_363  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_360 -> m14_361  [key=0, style=solid];
m14_360 -> m14_360  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_360 -> m14_364  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_362 -> m14_359  [key=0, style=bold, color=blue];
m14_611 -> m14_612  [key=0, style=solid];
m14_613 -> m14_614  [key=0, style=solid];
m14_613 -> m14_104  [key=2, style=dotted];
m14_613 -> m14_615  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_612 -> m14_613  [key=0, style=solid];
m14_612 -> m14_612  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_612 -> m14_616  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_614 -> m14_611  [key=0, style=bold, color=blue];
m14_271 -> m14_272  [key=0, style=solid];
m14_273 -> m14_274  [key=0, style=solid];
m14_273 -> m14_104  [key=2, style=dotted];
m14_273 -> m14_275  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_272 -> m14_273  [key=0, style=solid];
m14_272 -> m14_261  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_272 -> m14_276  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_274 -> m14_271  [key=0, style=bold, color=blue];
m14_440 -> m14_441  [key=0, style=solid];
m14_442 -> m14_443  [key=0, style=solid];
m14_442 -> m14_104  [key=2, style=dotted];
m14_442 -> m14_444  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_441 -> m14_442  [key=0, style=solid];
m14_441 -> m14_441  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_441 -> m14_445  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_443 -> m14_440  [key=0, style=bold, color=blue];
m14_809 -> m14_810  [key=0, style=solid];
m14_810 -> m14_811  [key=0, style=solid];
m14_810 -> m14_45  [key=2, style=dotted];
m14_810 -> m14_812  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_811 -> m14_809  [key=0, style=bold, color=blue];
m14_530 -> m14_531  [key=0, style=solid];
m14_531 -> m14_532  [key=0, style=solid];
m14_531 -> m14_104  [key=2, style=dotted];
m14_531 -> m14_533  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_532 -> m14_530  [key=0, style=bold, color=blue];
m14_166 -> m14_167  [key=0, style=solid];
m14_168 -> m14_169  [key=0, style=solid];
m14_168 -> m14_104  [key=2, style=dotted];
m14_168 -> m14_170  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_167 -> m14_168  [key=0, style=solid];
m14_167 -> m14_167  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_167 -> m14_172  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_169 -> m14_166  [key=0, style=bold, color=blue];
m14_430 -> m14_431  [key=0, style=solid];
m14_431 -> m14_432  [key=0, style=solid];
m14_431 -> m14_45  [key=2, style=dotted];
m14_431 -> m14_433  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_432 -> m14_430  [key=0, style=bold, color=blue];
m14_725 -> m14_726  [key=0, style=solid];
m14_727 -> m14_728  [key=0, style=solid];
m14_727 -> m14_104  [key=2, style=dotted];
m14_727 -> m14_729  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_726 -> m14_727  [key=0, style=solid];
m14_726 -> m14_726  [key=3, color=darkorchid, style=bold, label="Local variable string arrangeSql"];
m14_726 -> m14_730  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_728 -> m14_725  [key=0, style=bold, color=blue];
m14_148 -> m14_149  [key=0, style=solid];
m14_149 -> m14_150  [key=0, style=solid];
m14_149 -> m14_45  [key=2, style=dotted];
m14_149 -> m14_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_150 -> m14_148  [key=0, style=bold, color=blue];
m14_352 -> m14_353  [key=0, style=solid];
m14_353 -> m14_354  [key=0, style=solid];
m14_353 -> m14_45  [key=2, style=dotted];
m14_353 -> m14_355  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_354 -> m14_352  [key=0, style=bold, color=blue];
m14_584 -> m14_585  [key=0, style=solid];
m14_585 -> m14_586  [key=0, style=solid];
m14_585 -> m14_45  [key=2, style=dotted];
m14_585 -> m14_587  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_586 -> m14_584  [key=0, style=bold, color=blue];
m14_901 -> m14_4  [key=1, style=dashed, color=green, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_87  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_149  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_159  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_168  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_199  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_207  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_220  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_231  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_240  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_251  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_262  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_273  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_285  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_295  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_306  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_316  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_324  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_333  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_344  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_353  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_361  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_370  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_382  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_392  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_410  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_421  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_431  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_442  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_458  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_470  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_481  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_491  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_500  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_510  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_521  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_531  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_546  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_556  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_564  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_575  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_585  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_593  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_602  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_613  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_621  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_631  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_639  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_648  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_656  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_666  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_674  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_682  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_692  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_700  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_709  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_719  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_727  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_735  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_745  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_753  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_762  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_773  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_783  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_791  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_799  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_810  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_819  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_827  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_837  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_845  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_853  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_863  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_871  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_901 -> m14_890  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts"];
m14_902 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label=token];
m14_903 -> m14_39  [key=1, style=dashed, color=darkseagreen4, label=queues];
m14_904 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_905 -> m14_54  [key=1, style=dashed, color=darkseagreen4, label=token];
m14_906 -> m14_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_907 -> m14_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_908 -> m14_155  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_909 -> m14_172  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_910 -> m14_195  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_911 -> m14_211  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_912 -> m14_224  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_913 -> m14_234  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_914 -> m14_247  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_915 -> m14_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_916 -> m14_265  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_917 -> m14_276  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_918 -> m14_288  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_919 -> m14_302  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_920 -> m14_313  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_921 -> m14_327  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_922 -> m14_340  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_923 -> m14_350  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_924 -> m14_364  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_925 -> m14_377  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_926 -> m14_389  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_927 -> m14_416  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_928 -> m14_424  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_929 -> m14_437  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_930 -> m14_445  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_931 -> m14_464  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_932 -> m14_473  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_933 -> m14_487  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_934 -> m14_503  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_935 -> m14_517  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_936 -> m14_528  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_937 -> m14_552  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_938 -> m14_567  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_939 -> m14_581  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_940 -> m14_596  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_941 -> m14_608  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_942 -> m14_616  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_943 -> m14_627  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_944 -> m14_642  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_945 -> m14_651  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_946 -> m14_662  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_947 -> m14_677  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_948 -> m14_688  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_949 -> m14_703  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_950 -> m14_715  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_951 -> m14_730  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_952 -> m14_741  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_953 -> m14_756  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_954 -> m14_769  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_955 -> m14_780  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_956 -> m14_794  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_957 -> m14_806  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_958 -> m14_822  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_959 -> m14_833  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_960 -> m14_848  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m14_961 -> m14_859  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerConnection"];
m14_962 -> m14_874  [key=1, style=dashed, color=darkseagreen4, label=arrangeSql];
m16_12 -> m16_13  [key=0, style=solid, color=red];
m16_13 -> m16_14  [key=0, style=solid, color=red];
m16_13 -> m16_15  [key=2, style=dotted, color=red];
m16_14 -> m16_12  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid, color=red];
m16_0 -> m16_3  [key=1, style=dashed, color=red, label=string];
m16_0 -> m16_5  [key=1, style=dashed, color=red, label=string];
m16_0 -> m16_7  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisConnection"];
m16_0 -> m16_8  [key=1, style=dashed, color=red, label=string];
m16_0 -> m16_9  [key=1, style=dashed, color=red, label=string];
m16_1 -> m16_2  [key=0, style=solid, color=red];
m16_1 -> m16_3  [key=0, style=solid, color=red];
m16_3 -> m16_4  [key=0, style=solid, color=red];
m16_3 -> m16_5  [key=0, style=solid, color=red];
m16_5 -> m16_6  [key=0, style=solid, color=red];
m16_5 -> m16_7  [key=0, style=solid, color=red];
m16_7 -> m16_8  [key=0, style=solid, color=red];
m16_8 -> m16_9  [key=0, style=solid, color=red];
m16_9 -> m16_10  [key=0, style=solid, color=red];
m16_2 -> m16_10  [key=0, style=solid, color=red];
m16_2 -> d10  [key=2, style=dotted, color=red];
m16_4 -> m16_10  [key=0, style=solid, color=red];
m16_4 -> d10  [key=2, style=dotted, color=red];
m16_6 -> m16_10  [key=0, style=solid, color=red];
m16_6 -> d10  [key=2, style=dotted, color=red];
m16_10 -> m16_0  [key=0, style=bold, color=blue];
m16_16 -> m16_7  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisProcessingJob"];
m16_16 -> m16_8  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisProcessingJob"];
m16_16 -> m16_9  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisProcessingJob"];
m16_16 -> m16_13  [key=1, style=dashed, color=red, label="HangFire.Redis.RedisProcessingJob"];
m17_50 -> m17_51  [key=0, style=solid];
m17_50 -> m17_52  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_50 -> m17_155  [key=3, color=red, style=bold, label="Local variable Mock<Hangfire.States.IStateHandler> handler1"];
m17_51 -> m17_52  [key=0, style=solid];
m17_52 -> m17_53  [key=0, style=solid];
m17_52 -> m17_65  [key=2, style=dotted];
m17_52 -> m17_58  [key=1, style=dashed, color=darkseagreen4, label=scheduledJobs];
m17_52 -> m17_63  [key=1, style=dashed, color=red, label=scheduledJobs];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_55  [key=0, style=solid];
m17_58 -> m17_59  [key=0, style=solid];
m17_58 -> m17_62  [key=0, style=solid];
m17_63 -> m17_64  [key=0, style=solid, color=red];
m17_63 -> m17_70  [key=2, style=dotted, color=red];
m17_63 -> m17_87  [key=1, style=dashed, color=red, label="lambda expression"];
m17_63 -> m17_90  [key=1, style=dashed, color=red, label="lambda expression"];
m17_63 -> m17_155  [key=3, color=red, style=bold, label="Local variable Mock<Hangfire.States.IStateHandler> handler2"];
m17_54 -> m17_64  [key=0, style=solid];
m17_54 -> m17_66  [key=2, style=dotted];
m17_55 -> m17_56  [key=0, style=solid];
m17_55 -> m17_66  [key=2, style=dotted];
m17_55 -> m17_60  [key=1, style=dashed, color=red, label=jobs];
m17_55 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_55 -> m17_63  [key=1, style=dashed, color=red, label=jobs];
m17_55 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_55 -> m17_155  [key=3, color=red, style=bold, label="Local variable Hangfire.States.DefaultStateChangeProcess process"];
m17_56 -> m17_57  [key=0, style=solid, color=red];
m17_56 -> m17_66  [key=2, style=dotted];
m17_56 -> m17_61  [key=1, style=dashed, color=red, label=states];
m17_56 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_56 -> m17_63  [key=1, style=dashed, color=red, label=states];
m17_56 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_60 -> m17_61  [key=0, style=solid, color=red];
m17_60 -> m17_68  [key=2, style=dotted, color=red];
m17_60 -> m17_71  [key=1, style=dashed, color=red, label="lambda expression"];
m17_60 -> m17_76  [key=1, style=dashed, color=red, label="lambda expression"];
m17_60 -> m17_155  [key=3, color=red, style=bold, label="Local variable Hangfire.States.DefaultStateChangeProcess process"];
m17_57 -> m17_58  [key=0, style=solid, color=red];
m17_57 -> m17_67  [key=2, style=dotted, color=red];
m17_57 -> m17_60  [key=1, style=dashed, color=red, label=pipeline];
m17_57 -> m17_61  [key=1, style=dashed, color=red, label=pipeline];
m17_57 -> m17_62  [key=1, style=dashed, color=red, label=pipeline];
m17_61 -> m17_58  [key=0, style=solid, color=red];
m17_61 -> m17_68  [key=2, style=dotted, color=red];
m17_61 -> m17_80  [key=1, style=dashed, color=red, label="lambda expression"];
m17_61 -> m17_84  [key=1, style=dashed, color=red, label="lambda expression"];
m17_62 -> m17_63  [key=0, style=solid, color=red];
m17_62 -> m17_69  [key=2, style=dotted];
m17_59 -> m17_60  [key=0, style=solid, color=red];
m17_59 -> m17_72  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_59 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_59 -> m17_61  [key=1, style=dashed, color=red, label=job];
m17_59 -> m17_81  [key=1, style=dashed, color=red, label=job];
m17_59 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_64 -> m17_50  [key=0, style=bold, color=blue];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_33  [key=1, style=dashed, color=red, label=int];
m17_32 -> m17_33  [key=0, style=solid, color=red];
m17_33 -> m17_34  [key=0, style=solid, color=red];
m17_33 -> m17_36  [key=2, style=dotted, color=red];
m17_33 -> m17_164  [key=3, color=red, style=bold, label="Local variable Mock<Hangfire.States.IElectStateFilter> filter1"];
m17_34 -> m17_35  [key=0, style=solid, color=red];
m17_34 -> m17_37  [key=2, style=dotted, color=red];
m17_34 -> m17_38  [key=2, style=dotted, color=red];
m17_34 -> m17_39  [key=2, style=dotted, color=red];
m17_34 -> m17_40  [key=1, style=dashed, color=red, label="lambda expression"];
m17_34 -> m17_47  [key=1, style=dashed, color=red, label="lambda expression"];
m17_34 -> m17_155  [key=3, color=red, style=bold, label="Local variable Hangfire.States.DefaultStateChangeProcess process"];
m17_35 -> m17_31  [key=0, style=bold, color=blue];
m17_180 -> m17_336  [key=0, style=solid];
m17_180 -> m17_338  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m17_180 -> m17_339  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m17_180 -> m17_340  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m17_180 -> m17_341  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m17_180 -> m17_343  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_180 -> m17_351  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_180 -> m17_344  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_180 -> m17_345  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_180 -> m17_359  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_180 -> m17_347  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m17_180 -> m17_369  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m17_336 -> m17_337  [key=0, style=solid];
m17_336 -> m17_338  [key=0, style=solid];
m17_338 -> m17_339  [key=0, style=solid];
m17_338 -> m17_349  [key=2, style=dotted];
m17_338 -> m17_343  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_338 -> m17_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_338 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_338 -> m17_347  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_338 -> m17_366  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_339 -> m17_340  [key=0, style=solid];
m17_339 -> m17_349  [key=2, style=dotted];
m17_339 -> m17_345  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_339 -> m17_362  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_339 -> m17_363  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_339 -> m17_347  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_339 -> m17_366  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_340 -> m17_341  [key=0, style=solid];
m17_340 -> m17_67  [key=2, style=dotted];
m17_340 -> m17_343  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_340 -> m17_345  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_340 -> m17_346  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_341 -> m17_342  [key=0, style=solid];
m17_341 -> m17_346  [key=0, style=solid];
m17_343 -> m17_344  [key=0, style=solid];
m17_343 -> m17_68  [key=2, style=dotted];
m17_343 -> m17_350  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_343 -> m17_353  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_344 -> m17_345  [key=0, style=solid];
m17_344 -> m17_341  [key=0, style=solid];
m17_345 -> m17_341  [key=0, style=solid];
m17_345 -> m17_68  [key=2, style=dotted];
m17_345 -> m17_358  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_345 -> m17_361  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_347 -> m17_348  [key=0, style=solid];
m17_347 -> m17_121  [key=2, style=dotted];
m17_347 -> m17_122  [key=2, style=dotted];
m17_347 -> m17_365  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_347 -> m17_368  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_337 -> m17_348  [key=0, style=solid];
m17_337 -> m17_120  [key=2, style=dotted];
m17_346 -> m17_347  [key=0, style=solid];
m17_346 -> m17_69  [key=2, style=dotted];
m17_342 -> m17_343  [key=0, style=solid];
m17_342 -> m17_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_342 -> m17_354  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_342 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_342 -> m17_345  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_342 -> m17_359  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_342 -> m17_362  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_342 -> m17_363  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_348 -> m17_180  [key=0, style=bold, color=blue];
m17_19 -> m17_20  [key=0, style=solid, color=red];
m17_19 -> m17_21  [key=1, style=dashed, color=red, label=string];
m17_20 -> m17_21  [key=0, style=solid, color=red];
m17_21 -> m17_22  [key=0, style=solid, color=red];
m17_21 -> m17_17  [key=2, style=dotted, color=red];
m17_21 -> m17_18  [key=2, style=dotted, color=red];
m17_22 -> m17_19  [key=0, style=bold, color=blue];
m17_226 -> m17_281  [key=0, style=solid];
m17_226 -> m17_288  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_226 -> m17_306  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_226 -> m17_289  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m17_281 -> m17_282  [key=0, style=solid];
m17_281 -> m17_285  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_281 -> m17_286  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_288 -> m17_289  [key=0, style=solid];
m17_288 -> m17_121  [key=2, style=dotted];
m17_288 -> m17_122  [key=2, style=dotted];
m17_288 -> m17_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_289 -> m17_290  [key=0, style=solid];
m17_289 -> m17_301  [key=2, style=dotted];
m17_289 -> m17_294  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m17_282 -> m17_283  [key=0, style=solid];
m17_282 -> m17_120  [key=2, style=dotted];
m17_282 -> m17_285  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_282 -> m17_288  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_282 -> m17_292  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_282 -> m17_296  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_285 -> m17_286  [key=0, style=solid];
m17_285 -> m17_182  [key=2, style=dotted];
m17_286 -> m17_287  [key=0, style=solid];
m17_286 -> m17_300  [key=2, style=dotted];
m17_286 -> m17_286  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_283 -> m17_284  [key=0, style=solid];
m17_283 -> m17_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_292 -> m17_293  [key=0, style=solid];
m17_292 -> m17_298  [key=0, style=solid];
m17_296 -> m17_297  [key=0, style=solid];
m17_296 -> m17_304  [key=2, style=dotted];
m17_284 -> m17_285  [key=0, style=solid];
m17_284 -> m17_288  [key=0, style=solid];
m17_287 -> m17_284  [key=0, style=solid];
m17_287 -> m17_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_290 -> m17_291  [key=0, style=solid];
m17_290 -> m17_66  [key=2, style=dotted];
m17_290 -> m17_296  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_290 -> m17_298  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_294 -> m17_295  [key=0, style=solid];
m17_294 -> m17_296  [key=0, style=solid];
m17_294 -> m17_302  [key=2, style=dotted];
m17_294 -> m17_303  [key=2, style=dotted];
m17_291 -> m17_292  [key=0, style=solid];
m17_291 -> m17_294  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_291 -> m17_296  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_291 -> m17_297  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_298 -> m17_299  [key=0, style=solid];
m17_297 -> m17_292  [key=0, style=solid];
m17_297 -> m17_297  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_293 -> m17_294  [key=0, style=solid];
m17_295 -> m17_296  [key=0, style=solid];
m17_299 -> m17_226  [key=0, style=bold, color=blue];
m17_246 -> m17_247  [key=0, style=solid];
m17_246 -> m17_248  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_246 -> m17_254  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_247 -> m17_248  [key=0, style=solid];
m17_248 -> m17_249  [key=0, style=solid];
m17_248 -> m17_17  [key=2, style=dotted];
m17_248 -> m17_83  [key=2, style=dotted];
m17_254 -> m17_255  [key=0, style=solid];
m17_254 -> m17_245  [key=2, style=dotted];
m17_249 -> m17_250  [key=0, style=solid];
m17_249 -> m17_241  [key=2, style=dotted];
m17_249 -> m17_253  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_250 -> m17_251  [key=0, style=solid];
m17_250 -> m17_252  [key=0, style=solid];
m17_250 -> m17_242  [key=2, style=dotted];
m17_253 -> m17_254  [key=0, style=solid];
m17_253 -> m17_244  [key=2, style=dotted];
m17_251 -> m17_255  [key=0, style=solid];
m17_252 -> m17_253  [key=0, style=solid];
m17_252 -> m17_243  [key=2, style=dotted];
m17_252 -> m17_254  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m17_255 -> m17_246  [key=0, style=bold, color=blue];
m17_441 -> m17_442  [key=0, style=solid];
m17_40 -> m17_41  [key=0, style=solid, color=red];
m17_47 -> m17_48  [key=0, style=solid];
m17_41 -> m17_42  [key=0, style=solid, color=red];
m17_41 -> m17_43  [key=2, style=dotted, color=red];
m17_41 -> m17_44  [key=2, style=dotted, color=red];
m17_41 -> m17_0  [key=2, style=dotted, color=red];
m17_41 -> m17_45  [key=2, style=dotted, color=red];
m17_41 -> m17_46  [key=2, style=dotted, color=red];
m17_42 -> m17_40  [key=0, style=bold, color=blue];
m17_48 -> m17_49  [key=0, style=solid];
m17_48 -> m17_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>"];
m17_49 -> m17_47  [key=0, style=bold, color=blue];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_79  [key=2, style=dotted];
m17_91 -> m17_92  [key=0, style=solid];
m17_91 -> m17_93  [key=2, style=dotted];
m17_91 -> m17_94  [key=2, style=dotted];
m17_91 -> m17_44  [key=2, style=dotted];
m17_91 -> m17_0  [key=2, style=dotted];
m17_91 -> m17_46  [key=2, style=dotted];
m17_85 -> m17_86  [key=0, style=solid];
m17_85 -> m17_79  [key=2, style=dotted];
m17_72 -> m17_73  [key=0, style=solid];
m17_72 -> m17_74  [key=2, style=dotted];
m17_72 -> m17_75  [key=2, style=dotted];
m17_81 -> m17_82  [key=0, style=solid, color=red];
m17_81 -> m17_74  [key=2, style=dotted, color=red];
m17_81 -> m17_83  [key=2, style=dotted, color=red];
m17_71 -> m17_72  [key=0, style=solid];
m17_76 -> m17_77  [key=0, style=solid];
m17_80 -> m17_81  [key=0, style=solid, color=red];
m17_84 -> m17_85  [key=0, style=solid];
m17_87 -> m17_88  [key=0, style=solid];
m17_90 -> m17_91  [key=0, style=solid];
m17_73 -> m17_71  [key=0, style=bold, color=blue];
m17_78 -> m17_76  [key=0, style=bold, color=blue];
m17_82 -> m17_80  [key=0, style=bold, color=blue];
m17_86 -> m17_84  [key=0, style=bold, color=blue];
m17_88 -> m17_89  [key=0, style=solid];
m17_89 -> m17_87  [key=0, style=bold, color=blue];
m17_92 -> m17_90  [key=0, style=bold, color=blue];
m17_127 -> m17_128  [key=0, style=solid];
m17_127 -> m17_79  [key=2, style=dotted];
m17_137 -> m17_138  [key=0, style=solid];
m17_137 -> m17_139  [key=2, style=dotted];
m17_137 -> m17_140  [key=2, style=dotted];
m17_137 -> m17_141  [key=2, style=dotted];
m17_137 -> m17_45  [key=2, style=dotted];
m17_134 -> m17_135  [key=0, style=solid];
m17_134 -> m17_79  [key=2, style=dotted];
m17_124 -> m17_125  [key=0, style=solid, color=red];
m17_124 -> m17_74  [key=2, style=dotted, color=red];
m17_124 -> m17_75  [key=2, style=dotted, color=red];
m17_130 -> m17_131  [key=0, style=solid];
m17_130 -> m17_74  [key=2, style=dotted];
m17_130 -> m17_132  [key=2, style=dotted];
m17_123 -> m17_124  [key=0, style=solid, color=red];
m17_126 -> m17_127  [key=0, style=solid];
m17_129 -> m17_130  [key=0, style=solid];
m17_133 -> m17_134  [key=0, style=solid];
m17_136 -> m17_137  [key=0, style=solid];
m17_125 -> m17_123  [key=0, style=bold, color=blue];
m17_128 -> m17_126  [key=0, style=bold, color=blue];
m17_131 -> m17_129  [key=0, style=bold, color=blue];
m17_135 -> m17_133  [key=0, style=bold, color=blue];
m17_138 -> m17_136  [key=0, style=bold, color=blue];
m17_148 -> m17_149  [key=0, style=solid, color=red];
m17_149 -> m17_150  [key=0, style=solid, color=red];
m17_149 -> m17_151  [key=2, style=dotted, color=red];
m17_149 -> m17_0  [key=2, style=dotted, color=red];
m17_149 -> m17_44  [key=2, style=dotted, color=red];
m17_149 -> m17_45  [key=2, style=dotted, color=red];
m17_149 -> m17_46  [key=2, style=dotted, color=red];
m17_150 -> m17_148  [key=0, style=bold, color=blue];
m17_158 -> m17_159  [key=0, style=solid, color=red];
m17_159 -> m17_160  [key=0, style=solid, color=red];
m17_159 -> m17_161  [key=2, style=dotted, color=red];
m17_159 -> m17_0  [key=2, style=dotted, color=red];
m17_159 -> m17_44  [key=2, style=dotted, color=red];
m17_159 -> m17_45  [key=2, style=dotted, color=red];
m17_159 -> m17_46  [key=2, style=dotted, color=red];
m17_160 -> m17_158  [key=0, style=bold, color=blue];
m17_184 -> m17_185  [key=0, style=solid];
m17_184 -> m17_74  [key=2, style=dotted];
m17_184 -> m17_157  [key=2, style=dotted];
m17_190 -> m17_191  [key=0, style=solid];
m17_190 -> m17_74  [key=2, style=dotted];
m17_190 -> m17_18  [key=2, style=dotted];
m17_196 -> m17_197  [key=0, style=solid];
m17_196 -> m17_74  [key=2, style=dotted];
m17_196 -> m17_18  [key=2, style=dotted];
m17_183 -> m17_184  [key=0, style=solid];
m17_186 -> m17_187  [key=0, style=solid];
m17_189 -> m17_190  [key=0, style=solid];
m17_192 -> m17_193  [key=0, style=solid];
m17_195 -> m17_196  [key=0, style=solid];
m17_198 -> m17_199  [key=0, style=solid];
m17_201 -> m17_202  [key=0, style=solid];
m17_185 -> m17_183  [key=0, style=bold, color=blue];
m17_187 -> m17_188  [key=0, style=solid];
m17_188 -> m17_186  [key=0, style=bold, color=blue];
m17_191 -> m17_189  [key=0, style=bold, color=blue];
m17_193 -> m17_194  [key=0, style=solid];
m17_194 -> m17_192  [key=0, style=bold, color=blue];
m17_197 -> m17_195  [key=0, style=bold, color=blue];
m17_199 -> m17_200  [key=0, style=solid];
m17_200 -> m17_198  [key=0, style=bold, color=blue];
m17_202 -> m17_203  [key=0, style=solid];
m17_202 -> m17_204  [key=2, style=dotted];
m17_202 -> m17_44  [key=2, style=dotted];
m17_202 -> m17_45  [key=2, style=dotted];
m17_202 -> m17_46  [key=2, style=dotted];
m17_203 -> m17_201  [key=0, style=bold, color=blue];
m17_210 -> m17_211  [key=0, style=solid];
m17_211 -> m17_212  [key=0, style=solid];
m17_211 -> m17_204  [key=2, style=dotted];
m17_211 -> m17_44  [key=2, style=dotted];
m17_211 -> m17_45  [key=2, style=dotted];
m17_211 -> m17_46  [key=2, style=dotted];
m17_212 -> m17_210  [key=0, style=bold, color=blue];
m17_218 -> m17_219  [key=0, style=solid];
m17_219 -> m17_220  [key=0, style=solid];
m17_219 -> m17_221  [key=2, style=dotted];
m17_219 -> m17_44  [key=2, style=dotted];
m17_219 -> m17_45  [key=2, style=dotted];
m17_220 -> m17_218  [key=0, style=bold, color=blue];
m17_272 -> m17_273  [key=0, style=solid];
m17_272 -> m17_274  [key=2, style=dotted];
m17_271 -> m17_272  [key=0, style=solid];
m17_275 -> m17_276  [key=0, style=solid];
m17_278 -> m17_279  [key=0, style=solid];
m17_273 -> m17_271  [key=0, style=bold, color=blue];
m17_276 -> m17_277  [key=0, style=solid];
m17_277 -> m17_275  [key=0, style=bold, color=blue];
m17_279 -> m17_280  [key=0, style=solid];
m17_280 -> m17_278  [key=0, style=bold, color=blue];
m17_306 -> m17_307  [key=0, style=solid];
m17_306 -> m17_308  [key=2, style=dotted];
m17_306 -> m17_309  [key=2, style=dotted];
m17_305 -> m17_306  [key=0, style=solid];
m17_307 -> m17_305  [key=0, style=bold, color=blue];
m17_334 -> m17_335  [key=0, style=solid];
m17_334 -> m17_74  [key=2, style=dotted];
m17_330 -> m17_331  [key=0, style=solid];
m17_333 -> m17_334  [key=0, style=solid];
m17_331 -> m17_332  [key=0, style=solid];
m17_331 -> m17_308  [key=2, style=dotted];
m17_332 -> m17_330  [key=0, style=bold, color=blue];
m17_335 -> m17_333  [key=0, style=bold, color=blue];
m17_351 -> m17_352  [key=0, style=solid];
m17_351 -> m17_17  [key=2, style=dotted];
m17_351 -> m17_75  [key=2, style=dotted];
m17_359 -> m17_360  [key=0, style=solid];
m17_359 -> m17_17  [key=2, style=dotted];
m17_359 -> m17_75  [key=2, style=dotted];
m17_369 -> m17_370  [key=0, style=solid];
m17_369 -> m17_371  [key=2, style=dotted];
m17_369 -> m17_372  [key=2, style=dotted];
m17_369 -> m17_373  [key=2, style=dotted];
m17_369 -> m17_374  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_354 -> m17_355  [key=0, style=solid];
m17_354 -> m17_356  [key=0, style=solid];
m17_354 -> m17_357  [key=2, style=dotted];
m17_355 -> m17_356  [key=0, style=solid];
m17_355 -> m17_79  [key=2, style=dotted];
m17_366 -> m17_367  [key=0, style=solid];
m17_366 -> m17_357  [key=2, style=dotted];
m17_362 -> m17_363  [key=0, style=solid];
m17_362 -> m17_364  [key=0, style=solid];
m17_362 -> m17_357  [key=2, style=dotted];
m17_363 -> m17_364  [key=0, style=solid];
m17_363 -> m17_79  [key=2, style=dotted];
m17_350 -> m17_351  [key=0, style=solid];
m17_353 -> m17_354  [key=0, style=solid];
m17_353 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label="?"];
m17_358 -> m17_359  [key=0, style=solid];
m17_361 -> m17_362  [key=0, style=solid];
m17_361 -> m17_363  [key=1, style=dashed, color=darkseagreen4, label="?"];
m17_365 -> m17_366  [key=0, style=solid];
m17_368 -> m17_369  [key=0, style=solid];
m17_352 -> m17_350  [key=0, style=bold, color=blue];
m17_356 -> m17_353  [key=0, style=bold, color=blue];
m17_360 -> m17_358  [key=0, style=bold, color=blue];
m17_364 -> m17_361  [key=0, style=bold, color=blue];
m17_367 -> m17_365  [key=0, style=bold, color=blue];
m17_370 -> m17_368  [key=0, style=bold, color=blue];
m17_374 -> m17_375  [key=0, style=solid];
m17_375 -> m17_376  [key=0, style=solid];
m17_376 -> m17_374  [key=0, style=bold, color=blue];
m17_404 -> m17_405  [key=0, style=solid];
m17_410 -> m17_411  [key=0, style=solid];
m17_416 -> m17_417  [key=0, style=solid];
m17_422 -> m17_423  [key=0, style=solid];
m17_429 -> m17_430  [key=0, style=solid];
m17_429 -> m17_431  [key=2, style=dotted];
m17_436 -> m17_437  [key=0, style=solid];
m17_442 -> m17_443  [key=0, style=solid];
m17_399 -> m17_400  [key=0, style=solid];
m17_403 -> m17_404  [key=0, style=solid];
m17_406 -> m17_407  [key=0, style=solid];
m17_409 -> m17_410  [key=0, style=solid];
m17_412 -> m17_413  [key=0, style=solid];
m17_415 -> m17_416  [key=0, style=solid];
m17_418 -> m17_419  [key=0, style=solid];
m17_421 -> m17_422  [key=0, style=solid];
m17_424 -> m17_425  [key=0, style=solid];
m17_428 -> m17_429  [key=0, style=solid];
m17_432 -> m17_433  [key=0, style=solid];
m17_435 -> m17_436  [key=0, style=solid];
m17_439 -> m17_440  [key=0, style=solid];
m17_439 -> m17_74  [key=2, style=dotted];
m17_439 -> m17_18  [key=2, style=dotted];
m17_438 -> m17_439  [key=0, style=solid];
m17_400 -> m17_401  [key=0, style=solid];
m17_400 -> m17_402  [key=2, style=dotted];
m17_401 -> m17_399  [key=0, style=bold, color=blue];
m17_405 -> m17_403  [key=0, style=bold, color=blue];
m17_407 -> m17_408  [key=0, style=solid];
m17_407 -> m17_402  [key=2, style=dotted];
m17_408 -> m17_406  [key=0, style=bold, color=blue];
m17_411 -> m17_409  [key=0, style=bold, color=blue];
m17_413 -> m17_414  [key=0, style=solid];
m17_413 -> m17_12  [key=2, style=dotted];
m17_414 -> m17_412  [key=0, style=bold, color=blue];
m17_417 -> m17_415  [key=0, style=bold, color=blue];
m17_419 -> m17_420  [key=0, style=solid];
m17_419 -> m17_12  [key=2, style=dotted];
m17_420 -> m17_418  [key=0, style=bold, color=blue];
m17_423 -> m17_421  [key=0, style=bold, color=blue];
m17_425 -> m17_426  [key=0, style=solid];
m17_425 -> m17_427  [key=2, style=dotted];
m17_426 -> m17_424  [key=0, style=bold, color=blue];
m17_430 -> m17_428  [key=0, style=bold, color=blue];
m17_433 -> m17_434  [key=0, style=solid];
m17_433 -> m17_12  [key=2, style=dotted];
m17_434 -> m17_432  [key=0, style=bold, color=blue];
m17_437 -> m17_435  [key=0, style=bold, color=blue];
m17_440 -> m17_438  [key=0, style=bold, color=blue];
m17_443 -> m17_441  [key=0, style=bold, color=blue];
m17_227 -> m17_228  [key=0, style=solid];
m17_228 -> m17_229  [key=0, style=solid];
m17_229 -> m17_230  [key=0, style=solid];
m17_229 -> m17_226  [key=2, style=dotted];
m17_230 -> m17_227  [key=0, style=bold, color=blue];
m17_142 -> m17_143  [key=0, style=solid];
m17_142 -> m17_144  [key=1, style=dashed, color=darkseagreen4, label=int];
m17_142 -> m17_155  [key=3, color=red, style=bold, label="Local variable Hangfire.States.DefaultStateChangeProcess process"];
m17_143 -> m17_144  [key=0, style=solid];
m17_144 -> m17_145  [key=0, style=solid, color=red];
m17_144 -> m17_147  [key=2, style=dotted];
m17_145 -> m17_146  [key=0, style=solid, color=red];
m17_145 -> m17_37  [key=2, style=dotted, color=red];
m17_145 -> m17_148  [key=1, style=dashed, color=red, label="lambda expression"];
m17_145 -> m17_164  [key=3, color=red, style=bold, label="Local variable Mock<Hangfire.States.IApplyStateFilter> filter2"];
m17_145 -> m17_155  [key=3, color=red, style=bold, label="Local variable Hangfire.States.DefaultStateChangeProcess process"];
m17_146 -> m17_142  [key=0, style=bold, color=blue];
m17_8 -> m17_9  [key=0, style=solid, color=red];
m17_9 -> m17_10  [key=0, style=solid, color=red];
m17_10 -> m17_11  [key=0, style=solid, color=red];
m17_10 -> m17_12  [key=2, style=dotted, color=red];
m17_11 -> m17_8  [key=0, style=bold, color=blue];
m17_152 -> m17_153  [key=0, style=solid];
m17_152 -> m17_154  [key=1, style=dashed, color=red, label=int];
m17_153 -> m17_154  [key=0, style=solid, color=red];
m17_154 -> m17_155  [key=0, style=solid, color=red];
m17_154 -> m17_157  [key=2, style=dotted, color=red];
m17_155 -> m17_156  [key=0, style=solid, color=red];
m17_155 -> m17_37  [key=2, style=dotted, color=red];
m17_155 -> m17_158  [key=1, style=dashed, color=red, label="lambda expression"];
m17_155 -> m17_0  [key=3, color=red, style=bold, label="Parameter variable string stateName"];
m17_156 -> m17_152  [key=0, style=bold, color=blue];
m17_162 -> m17_163  [key=0, style=solid];
m17_163 -> m17_164  [key=0, style=solid];
m17_164 -> m17_165  [key=0, style=solid];
m17_164 -> m17_119  [key=2, style=dotted];
m17_164 -> m17_166  [key=1, style=dashed, color=darkseagreen4, label=queues];
m17_165 -> m17_166  [key=0, style=solid];
m17_165 -> m17_179  [key=2, style=dotted];
m17_165 -> m17_176  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_165 -> m17_177  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_166 -> m17_167  [key=0, style=solid];
m17_166 -> m17_177  [key=0, style=solid];
m17_166 -> m17_171  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_166 -> m17_184  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_166 -> m17_172  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_166 -> m17_190  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_166 -> m17_173  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_166 -> m17_196  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_166 -> m17_176  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_176 -> m17_166  [key=0, style=solid];
m17_176 -> m17_181  [key=2, style=dotted];
m17_176 -> m17_182  [key=2, style=dotted];
m17_177 -> m17_178  [key=0, style=solid];
m17_167 -> m17_168  [key=0, style=solid];
m17_171 -> m17_172  [key=0, style=solid];
m17_171 -> m17_68  [key=2, style=dotted];
m17_171 -> m17_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_171 -> m17_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_171 -> m17_175  [key=1, style=dashed, color=darkseagreen4, label=firstJobIds];
m17_172 -> m17_173  [key=0, style=solid];
m17_172 -> m17_68  [key=2, style=dotted];
m17_172 -> m17_189  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_172 -> m17_192  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_172 -> m17_176  [key=1, style=dashed, color=darkseagreen4, label=length];
m17_173 -> m17_174  [key=0, style=solid];
m17_173 -> m17_68  [key=2, style=dotted];
m17_173 -> m17_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_173 -> m17_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_173 -> m17_176  [key=1, style=dashed, color=darkseagreen4, label=dequeued];
m17_168 -> m17_169  [key=0, style=solid];
m17_169 -> m17_170  [key=0, style=solid];
m17_170 -> m17_171  [key=0, style=solid];
m17_170 -> m17_67  [key=2, style=dotted];
m17_170 -> m17_172  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_170 -> m17_173  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_170 -> m17_174  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_174 -> m17_175  [key=0, style=solid];
m17_174 -> m17_69  [key=2, style=dotted];
m17_175 -> m17_176  [key=0, style=solid];
m17_175 -> m17_180  [key=2, style=dotted];
m17_175 -> m17_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_178 -> m17_162  [key=0, style=bold, color=blue];
m17_95 -> m17_96  [key=0, style=solid];
m17_96 -> m17_97  [key=0, style=solid, color=red];
m17_97 -> m17_98  [key=0, style=solid, color=red];
m17_97 -> m17_99  [key=2, style=dotted, color=red];
m17_98 -> m17_95  [key=0, style=bold, color=blue];
m17_104 -> m17_105  [key=0, style=solid];
m17_105 -> m17_106  [key=0, style=solid];
m17_106 -> m17_107  [key=0, style=solid];
m17_106 -> m17_119  [key=2, style=dotted];
m17_106 -> m17_112  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m17_106 -> m17_117  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m17_107 -> m17_108  [key=0, style=solid];
m17_107 -> m17_109  [key=0, style=solid];
m17_112 -> m17_113  [key=0, style=solid];
m17_112 -> m17_116  [key=0, style=solid, color=red];
m17_117 -> m17_118  [key=0, style=solid];
m17_117 -> m17_121  [key=2, style=dotted];
m17_117 -> m17_122  [key=2, style=dotted];
m17_117 -> m17_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_117 -> m17_164  [key=3, color=darkorchid, style=bold, label="Local variable Mock<Hangfire.States.IApplyStateFilter> filter2"];
m17_108 -> m17_118  [key=0, style=solid];
m17_108 -> m17_120  [key=2, style=dotted];
m17_109 -> m17_110  [key=0, style=solid];
m17_109 -> m17_66  [key=2, style=dotted];
m17_109 -> m17_114  [key=1, style=dashed, color=red, label=servers];
m17_109 -> m17_127  [key=1, style=dashed, color=darkseagreen4, label=servers];
m17_109 -> m17_117  [key=1, style=dashed, color=darkseagreen4, label=servers];
m17_109 -> m17_137  [key=1, style=dashed, color=darkseagreen4, label=servers];
m17_110 -> m17_111  [key=0, style=solid];
m17_110 -> m17_66  [key=2, style=dotted];
m17_110 -> m17_115  [key=1, style=dashed, color=red, label=queues];
m17_110 -> m17_134  [key=1, style=dashed, color=darkseagreen4, label=queues];
m17_110 -> m17_117  [key=1, style=dashed, color=darkseagreen4, label=queues];
m17_110 -> m17_137  [key=1, style=dashed, color=darkseagreen4, label=queues];
m17_114 -> m17_115  [key=0, style=solid, color=red];
m17_114 -> m17_68  [key=2, style=dotted, color=red];
m17_114 -> m17_123  [key=1, style=dashed, color=red, label="lambda expression"];
m17_114 -> m17_126  [key=1, style=dashed, color=red, label="lambda expression"];
m17_114 -> m17_155  [key=3, color=red, style=bold, label="Local variable Hangfire.States.DefaultStateChangeProcess process"];
m17_111 -> m17_112  [key=0, style=solid];
m17_111 -> m17_67  [key=2, style=dotted];
m17_111 -> m17_114  [key=1, style=dashed, color=red, label=pipeline];
m17_111 -> m17_115  [key=1, style=dashed, color=red, label=pipeline];
m17_111 -> m17_116  [key=1, style=dashed, color=red, label=pipeline];
m17_115 -> m17_112  [key=0, style=solid, color=red];
m17_115 -> m17_68  [key=2, style=dotted, color=red];
m17_115 -> m17_129  [key=1, style=dashed, color=red, label="lambda expression"];
m17_115 -> m17_133  [key=1, style=dashed, color=red, label="lambda expression"];
m17_116 -> m17_117  [key=0, style=solid, color=red];
m17_116 -> m17_69  [key=2, style=dotted, color=red];
m17_113 -> m17_114  [key=0, style=solid, color=red];
m17_113 -> m17_124  [key=1, style=dashed, color=red, label=name];
m17_113 -> m17_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m17_113 -> m17_115  [key=1, style=dashed, color=red, label=name];
m17_113 -> m17_130  [key=1, style=dashed, color=darkseagreen4, label=name];
m17_113 -> m17_134  [key=1, style=dashed, color=darkseagreen4, label=name];
m17_118 -> m17_104  [key=0, style=bold, color=blue];
m17_381 -> m17_382  [key=0, style=solid];
m17_382 -> m17_383  [key=0, style=solid];
m17_383 -> m17_384  [key=0, style=solid];
m17_383 -> m17_398  [key=2, style=dotted];
m17_383 -> m17_386  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_387  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_388  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_416  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_389  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_422  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_390  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_429  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_391  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_436  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_394  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_442  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_383 -> m17_396  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_384 -> m17_385  [key=0, style=solid];
m17_384 -> m17_119  [key=2, style=dotted];
m17_384 -> m17_392  [key=1, style=dashed, color=darkseagreen4, label=queues];
m17_386 -> m17_387  [key=0, style=solid];
m17_386 -> m17_68  [key=2, style=dotted];
m17_386 -> m17_399  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_386 -> m17_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_387 -> m17_388  [key=0, style=solid];
m17_387 -> m17_68  [key=2, style=dotted];
m17_387 -> m17_406  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_387 -> m17_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_388 -> m17_389  [key=0, style=solid];
m17_388 -> m17_68  [key=2, style=dotted];
m17_388 -> m17_412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_388 -> m17_415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_389 -> m17_390  [key=0, style=solid];
m17_389 -> m17_68  [key=2, style=dotted];
m17_389 -> m17_418  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_389 -> m17_421  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_390 -> m17_391  [key=0, style=solid];
m17_390 -> m17_68  [key=2, style=dotted];
m17_390 -> m17_424  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_390 -> m17_428  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_391 -> m17_392  [key=0, style=solid];
m17_391 -> m17_68  [key=2, style=dotted];
m17_391 -> m17_432  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_391 -> m17_435  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_394 -> m17_392  [key=0, style=solid];
m17_394 -> m17_68  [key=2, style=dotted];
m17_394 -> m17_438  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_394 -> m17_441  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_396 -> m17_397  [key=0, style=solid];
m17_385 -> m17_386  [key=0, style=solid];
m17_385 -> m17_67  [key=2, style=dotted];
m17_385 -> m17_387  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_385 -> m17_388  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_385 -> m17_389  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_385 -> m17_390  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_385 -> m17_391  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_385 -> m17_394  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_385 -> m17_395  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m17_392 -> m17_393  [key=0, style=solid];
m17_392 -> m17_395  [key=0, style=solid];
m17_395 -> m17_396  [key=0, style=solid];
m17_395 -> m17_69  [key=2, style=dotted];
m17_393 -> m17_394  [key=0, style=solid];
m17_393 -> m17_439  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m17_397 -> m17_381  [key=0, style=bold, color=blue];
m17_377 -> m17_378  [key=0, style=solid];
m17_378 -> m17_379  [key=0, style=solid];
m17_379 -> m17_380  [key=0, style=solid];
m17_379 -> m17_18  [key=2, style=dotted];
m17_380 -> m17_377  [key=0, style=bold, color=blue];
m17_222 -> m17_223  [key=0, style=solid];
m17_223 -> m17_224  [key=0, style=solid];
m17_224 -> m17_225  [key=0, style=solid];
m17_224 -> m17_226  [key=2, style=dotted];
m17_225 -> m17_222  [key=0, style=bold, color=blue];
m17_99 -> m17_310  [key=0, style=solid];
m17_99 -> m17_317  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_99 -> m17_334  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_99 -> m17_318  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m17_310 -> m17_311  [key=0, style=solid];
m17_310 -> m17_313  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_310 -> m17_314  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_310 -> m17_315  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_317 -> m17_318  [key=0, style=solid];
m17_317 -> m17_121  [key=2, style=dotted];
m17_317 -> m17_122  [key=2, style=dotted];
m17_317 -> m17_333  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_318 -> m17_319  [key=0, style=solid];
m17_318 -> m17_301  [key=2, style=dotted];
m17_318 -> m17_323  [key=1, style=dashed, color=darkseagreen4, label=valuesMap];
m17_311 -> m17_312  [key=0, style=solid];
m17_311 -> m17_329  [key=2, style=dotted];
m17_311 -> m17_313  [key=1, style=dashed, color=darkseagreen4, label=startDate];
m17_313 -> m17_314  [key=0, style=solid];
m17_313 -> m17_316  [key=0, style=solid];
m17_314 -> m17_315  [key=0, style=solid];
m17_314 -> m17_182  [key=2, style=dotted];
m17_315 -> m17_313  [key=0, style=solid];
m17_315 -> m17_329  [key=2, style=dotted];
m17_315 -> m17_315  [key=1, style=dashed, color=darkseagreen4, label=endDate];
m17_312 -> m17_313  [key=0, style=solid];
m17_312 -> m17_120  [key=2, style=dotted];
m17_312 -> m17_314  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_312 -> m17_316  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_312 -> m17_325  [key=1, style=dashed, color=darkseagreen4, label=dates];
m17_316 -> m17_317  [key=0, style=solid];
m17_316 -> m17_121  [key=2, style=dotted];
m17_316 -> m17_122  [key=2, style=dotted];
m17_316 -> m17_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_316 -> m17_321  [key=1, style=dashed, color=darkseagreen4, label=stringDates];
m17_325 -> m17_326  [key=0, style=solid];
m17_325 -> m17_304  [key=2, style=dotted];
m17_321 -> m17_322  [key=0, style=solid];
m17_321 -> m17_327  [key=0, style=solid];
m17_319 -> m17_320  [key=0, style=solid];
m17_319 -> m17_66  [key=2, style=dotted];
m17_319 -> m17_325  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_319 -> m17_327  [key=1, style=dashed, color=darkseagreen4, label=result];
m17_323 -> m17_324  [key=0, style=solid];
m17_323 -> m17_325  [key=0, style=solid];
m17_323 -> m17_302  [key=2, style=dotted];
m17_323 -> m17_303  [key=2, style=dotted];
m17_320 -> m17_321  [key=0, style=solid];
m17_320 -> m17_323  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_320 -> m17_325  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_320 -> m17_326  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_327 -> m17_328  [key=0, style=solid];
m17_326 -> m17_321  [key=0, style=solid];
m17_326 -> m17_326  [key=1, style=dashed, color=darkseagreen4, label=i];
m17_322 -> m17_323  [key=0, style=solid];
m17_324 -> m17_325  [key=0, style=solid];
m17_328 -> m17_99  [key=0, style=bold, color=blue];
m17_23 -> m17_24  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_12  [key=2, style=dotted];
m17_26 -> m17_23  [key=0, style=bold, color=blue];
m17_256 -> m17_257  [key=0, style=solid];
m17_256 -> m17_258  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_256 -> m17_262  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_257 -> m17_258  [key=0, style=solid];
m17_258 -> m17_259  [key=0, style=solid];
m17_258 -> m17_17  [key=2, style=dotted];
m17_258 -> m17_266  [key=2, style=dotted];
m17_258 -> m17_264  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_262 -> m17_263  [key=0, style=solid];
m17_262 -> m17_17  [key=2, style=dotted];
m17_262 -> m17_132  [key=2, style=dotted];
m17_259 -> m17_260  [key=0, style=solid];
m17_259 -> m17_261  [key=0, style=solid];
m17_264 -> m17_265  [key=0, style=solid];
m17_264 -> m17_267  [key=2, style=dotted];
m17_264 -> m17_268  [key=2, style=dotted];
m17_264 -> m17_269  [key=2, style=dotted];
m17_264 -> m17_270  [key=2, style=dotted];
m17_264 -> m17_70  [key=2, style=dotted];
m17_264 -> m17_271  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_264 -> m17_275  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_264 -> m17_278  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_260 -> m17_265  [key=0, style=solid];
m17_261 -> m17_262  [key=0, style=solid];
m17_261 -> m17_264  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m17_261 -> m17_272  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m17_263 -> m17_264  [key=0, style=solid];
m17_263 -> m17_121  [key=2, style=dotted];
m17_263 -> m17_122  [key=2, style=dotted];
m17_265 -> m17_256  [key=0, style=bold, color=blue];
m17_13 -> m17_14  [key=0, style=solid, color=red];
m17_13 -> m17_15  [key=1, style=dashed, color=red, label=string];
m17_14 -> m17_15  [key=0, style=solid, color=red];
m17_15 -> m17_16  [key=0, style=solid, color=red];
m17_15 -> m17_17  [key=2, style=dotted, color=red];
m17_15 -> m17_18  [key=2, style=dotted, color=red];
m17_16 -> m17_13  [key=0, style=bold, color=blue];
m17_213 -> m17_214  [key=0, style=solid];
m17_213 -> m17_215  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_214 -> m17_215  [key=0, style=solid];
m17_215 -> m17_216  [key=0, style=solid];
m17_215 -> m17_17  [key=2, style=dotted];
m17_215 -> m17_157  [key=2, style=dotted];
m17_216 -> m17_217  [key=0, style=solid];
m17_216 -> m17_37  [key=2, style=dotted];
m17_216 -> m17_218  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_217 -> m17_213  [key=0, style=bold, color=blue];
m17_100 -> m17_101  [key=0, style=solid, color=red];
m17_101 -> m17_102  [key=0, style=solid, color=red];
m17_102 -> m17_103  [key=0, style=solid];
m17_102 -> m17_99  [key=2, style=dotted];
m17_103 -> m17_100  [key=0, style=bold, color=blue];
m17_27 -> m17_28  [key=0, style=solid];
m17_28 -> m17_29  [key=0, style=solid];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> m17_12  [key=2, style=dotted];
m17_30 -> m17_27  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_0  [key=3, color=darkorchid, style=bold, label="Field variable string OldStateName"];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_6  [key=2, style=dotted];
m17_1 -> m17_4  [key=1, style=dashed, color=red, label=type];
m17_1 -> m17_1  [key=3, color=darkorchid, style=bold, label="Field variable string JobId"];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_4  [key=0, style=solid, color=red];
m17_4 -> m17_5  [key=0, style=solid, color=red];
m17_4 -> m17_7  [key=2, style=dotted, color=red];
m17_3 -> m17_5  [key=0, style=solid];
m17_5 -> m17_0  [key=0, style=bold, color=blue];
m17_231 -> m17_232  [key=0, style=solid];
m17_231 -> m17_233  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_231 -> m17_239  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_232 -> m17_233  [key=0, style=solid];
m17_233 -> m17_234  [key=0, style=solid];
m17_233 -> m17_17  [key=2, style=dotted];
m17_233 -> m17_83  [key=2, style=dotted];
m17_239 -> m17_240  [key=0, style=solid];
m17_239 -> m17_245  [key=2, style=dotted];
m17_234 -> m17_235  [key=0, style=solid];
m17_234 -> m17_241  [key=2, style=dotted];
m17_234 -> m17_238  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_235 -> m17_236  [key=0, style=solid];
m17_235 -> m17_237  [key=0, style=solid];
m17_235 -> m17_242  [key=2, style=dotted];
m17_238 -> m17_239  [key=0, style=solid];
m17_238 -> m17_244  [key=2, style=dotted];
m17_236 -> m17_240  [key=0, style=solid];
m17_237 -> m17_238  [key=0, style=solid];
m17_237 -> m17_243  [key=2, style=dotted];
m17_237 -> m17_239  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m17_240 -> m17_231  [key=0, style=bold, color=blue];
m17_205 -> m17_206  [key=0, style=solid];
m17_205 -> m17_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_206 -> m17_207  [key=0, style=solid];
m17_207 -> m17_208  [key=0, style=solid];
m17_207 -> m17_17  [key=2, style=dotted];
m17_207 -> m17_157  [key=2, style=dotted];
m17_208 -> m17_209  [key=0, style=solid];
m17_208 -> m17_37  [key=2, style=dotted];
m17_208 -> m17_210  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_209 -> m17_205  [key=0, style=bold, color=blue];
m17_444 -> m17_72  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_444 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_444 -> m17_81  [key=1, style=dashed, color=red, label=job];
m17_444 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label=job];
m17_445 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_445 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_446 -> m17_85  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_446 -> m17_91  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_447 -> m17_124  [key=1, style=dashed, color=red, label=name];
m17_447 -> m17_127  [key=1, style=dashed, color=darkseagreen4, label=name];
m17_447 -> m17_130  [key=1, style=dashed, color=darkseagreen4, label=name];
m17_447 -> m17_134  [key=1, style=dashed, color=darkseagreen4, label=name];
m17_448 -> m17_127  [key=1, style=dashed, color=darkseagreen4, label=servers];
m17_448 -> m17_137  [key=1, style=dashed, color=darkseagreen4, label=servers];
m17_449 -> m17_134  [key=1, style=dashed, color=darkseagreen4, label=queues];
m17_449 -> m17_137  [key=1, style=dashed, color=darkseagreen4, label=queues];
m17_450 -> m17_184  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_450 -> m17_190  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_450 -> m17_196  [key=1, style=dashed, color=darkseagreen4, label=queue];
m17_451 -> m17_272  [key=1, style=dashed, color=darkseagreen4, label=hiddenProperties];
m17_452 -> m17_306  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_453 -> m17_334  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_454 -> m17_351  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_455 -> m17_351  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_455 -> m17_354  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_455 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_455 -> m17_359  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_455 -> m17_362  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_455 -> m17_363  [key=1, style=dashed, color=darkseagreen4, label=id];
m17_456 -> m17_354  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_456 -> m17_355  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_456 -> m17_366  [key=1, style=dashed, color=darkseagreen4, label=jobs];
m17_457 -> m17_359  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m17_458 -> m17_362  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_458 -> m17_363  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_458 -> m17_366  [key=1, style=dashed, color=darkseagreen4, label=states];
m17_459 -> m17_369  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>"];
m17_460 -> m17_404  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_460 -> m17_410  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_460 -> m17_416  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_460 -> m17_422  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_460 -> m17_429  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_460 -> m17_436  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_460 -> m17_442  [key=1, style=dashed, color=darkseagreen4, label=stats];
m17_461 -> m17_439  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m18_0 -> m18_1  [key=0, style=solid, color=red];
m18_0 -> m18_3  [key=1, style=dashed, color=red, label="Hangfire.States.IStateMachine"];
m18_0 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m18_0 -> m18_7  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m18_0 -> m18_8  [key=1, style=dashed, color=red, label="Hangfire.Storage.IStorageConnection"];
m18_0 -> m18_9  [key=1, style=dashed, color=red, label="Hangfire.States.IStateMachine"];
m18_0 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_1 -> m18_2  [key=0, style=solid, color=red];
m18_1 -> m18_3  [key=0, style=solid, color=red];
m18_3 -> m18_4  [key=0, style=solid, color=red];
m18_3 -> m18_5  [key=0, style=solid, color=red];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_7  [key=0, style=solid, color=red];
m18_7 -> m18_8  [key=0, style=solid, color=red];
m18_8 -> m18_9  [key=0, style=solid, color=red];
m18_9 -> m18_10  [key=0, style=solid, color=red];
m18_10 -> m18_11  [key=0, style=solid];
m18_2 -> m18_11  [key=0, style=solid, color=red];
m18_2 -> d10  [key=2, style=dotted, color=red];
m18_4 -> m18_11  [key=0, style=solid, color=red];
m18_4 -> d10  [key=2, style=dotted, color=red];
m18_6 -> m18_11  [key=0, style=solid];
m18_6 -> d10  [key=2, style=dotted];
m18_11 -> m18_0  [key=0, style=bold, color=blue];
m18_18 -> m18_19  [key=0, style=solid];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_21  [key=2, style=dotted];
m18_19 -> m18_22  [key=2, style=dotted];
m18_20 -> m18_18  [key=0, style=bold, color=blue];
m18_13 -> m18_14  [key=0, style=solid];
m18_14 -> m18_15  [key=0, style=solid];
m18_14 -> m18_16  [key=2, style=dotted];
m18_14 -> m18_17  [key=2, style=dotted];
m18_15 -> m18_13  [key=0, style=bold, color=blue];
m18_23 -> m18_7  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m18_23 -> m18_8  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m18_23 -> m18_9  [key=1, style=dashed, color=red, label="Hangfire.States.ElectStateContext"];
m18_23 -> m18_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m18_23 -> m18_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m18_23 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ElectStateContext"];
m19_61 -> m19_62  [key=0, style=solid, color=red];
m19_62 -> m19_63  [key=0, style=solid, color=red];
m19_62 -> m19_45  [key=2, style=dotted, color=red];
m19_62 -> m19_64  [key=1, style=dashed, color=red, label=context];
m19_62 -> m19_65  [key=1, style=dashed, color=red, label=context];
m19_63 -> m19_64  [key=0, style=solid, color=red];
m19_63 -> m19_10  [key=2, style=dotted, color=red];
m19_64 -> m19_65  [key=0, style=solid, color=red];
m19_65 -> m19_66  [key=0, style=solid, color=red];
m19_65 -> m19_67  [key=2, style=dotted, color=red];
m19_66 -> m19_61  [key=0, style=bold, color=blue];
m19_80 -> m19_81  [key=0, style=solid];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_45  [key=2, style=dotted];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_73  [key=2, style=dotted];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_74  [key=2, style=dotted];
m19_83 -> m19_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_84 -> m19_80  [key=0, style=bold, color=blue];
m19_68 -> m19_69  [key=0, style=solid];
m19_69 -> m19_70  [key=0, style=solid];
m19_69 -> m19_45  [key=2, style=dotted];
m19_70 -> m19_71  [key=0, style=solid];
m19_70 -> m19_73  [key=2, style=dotted];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_74  [key=2, style=dotted];
m19_71 -> m19_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_72 -> m19_68  [key=0, style=bold, color=blue];
m19_101 -> m19_102  [key=0, style=solid];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_45  [key=2, style=dotted];
m19_102 -> m19_104  [key=1, style=dashed, color=darkseagreen4, label=context];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_94  [key=2, style=dotted];
m19_103 -> m19_78  [key=2, style=dotted];
m19_103 -> m19_95  [key=2, style=dotted];
m19_103 -> m19_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_104 -> m19_105  [key=0, style=solid];
m19_104 -> m19_96  [key=2, style=dotted];
m19_105 -> m19_106  [key=0, style=solid];
m19_105 -> m19_16  [key=2, style=dotted];
m19_106 -> m19_101  [key=0, style=bold, color=blue];
m19_48 -> m19_49  [key=0, style=solid];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_45  [key=2, style=dotted];
m19_49 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=context];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_15  [key=2, style=dotted];
m19_50 -> m19_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_51 -> m19_48  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid, color=red];
m19_1 -> m19_7  [key=2, style=dotted];
m19_2 -> m19_3  [key=0, style=solid, color=red];
m19_2 -> m19_8  [key=2, style=dotted, color=red];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_9  [key=2, style=dotted];
m19_4 -> m19_5  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_10  [key=2, style=dotted];
m19_6 -> m19_0  [key=0, style=bold, color=blue];
m19_21 -> m19_22  [key=0, style=solid, color=red];
m19_22 -> m19_23  [key=0, style=solid, color=red];
m19_22 -> m19_15  [key=2, style=dotted, color=red];
m19_22 -> m19_25  [key=1, style=dashed, color=red, label="lambda expression"];
m19_23 -> m19_24  [key=0, style=solid, color=red];
m19_23 -> m19_16  [key=2, style=dotted, color=red];
m19_24 -> m19_21  [key=0, style=bold, color=blue];
m19_11 -> m19_12  [key=0, style=solid, color=red];
m19_12 -> m19_13  [key=0, style=solid, color=red];
m19_12 -> m19_15  [key=2, style=dotted, color=red];
m19_12 -> m19_17  [key=1, style=dashed, color=red, label="lambda expression"];
m19_13 -> m19_14  [key=0, style=solid, color=red];
m19_13 -> m19_16  [key=2, style=dotted, color=red];
m19_14 -> m19_11  [key=0, style=bold, color=blue];
m19_88 -> m19_89  [key=0, style=solid];
m19_89 -> m19_90  [key=0, style=solid];
m19_89 -> m19_45  [key=2, style=dotted];
m19_89 -> m19_91  [key=1, style=dashed, color=darkseagreen4, label=context];
m19_90 -> m19_91  [key=0, style=solid];
m19_90 -> m19_94  [key=2, style=dotted];
m19_90 -> m19_78  [key=2, style=dotted];
m19_90 -> m19_95  [key=2, style=dotted];
m19_90 -> m19_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_96  [key=2, style=dotted];
m19_92 -> m19_93  [key=0, style=solid];
m19_92 -> m19_16  [key=2, style=dotted];
m19_93 -> m19_88  [key=0, style=bold, color=blue];
m19_107 -> m19_108  [key=0, style=solid];
m19_17 -> m19_18  [key=0, style=solid, color=red];
m19_18 -> m19_19  [key=0, style=solid, color=red];
m19_18 -> m19_20  [key=2, style=dotted, color=red];
m19_19 -> m19_17  [key=0, style=bold, color=blue];
m19_25 -> m19_26  [key=0, style=solid, color=red];
m19_26 -> m19_27  [key=0, style=solid, color=red];
m19_26 -> m19_20  [key=2, style=dotted, color=red];
m19_27 -> m19_25  [key=0, style=bold, color=blue];
m19_32 -> m19_33  [key=0, style=solid, color=red];
m19_33 -> m19_34  [key=0, style=solid, color=red];
m19_33 -> m19_20  [key=2, style=dotted, color=red];
m19_34 -> m19_32  [key=0, style=bold, color=blue];
m19_53 -> m19_54  [key=0, style=solid];
m19_52 -> m19_53  [key=0, style=solid];
m19_54 -> m19_52  [key=0, style=bold, color=blue];
m19_75 -> m19_76  [key=0, style=solid];
m19_76 -> m19_77  [key=0, style=solid];
m19_76 -> m19_78  [key=2, style=dotted];
m19_76 -> m19_79  [key=2, style=dotted];
m19_77 -> m19_75  [key=0, style=bold, color=blue];
m19_85 -> m19_86  [key=0, style=solid];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_78  [key=2, style=dotted];
m19_86 -> m19_79  [key=2, style=dotted];
m19_87 -> m19_85  [key=0, style=bold, color=blue];
m19_97 -> m19_98  [key=0, style=solid];
m19_98 -> m19_99  [key=0, style=solid];
m19_98 -> m19_100  [key=2, style=dotted];
m19_99 -> m19_97  [key=0, style=bold, color=blue];
m19_108 -> m19_109  [key=0, style=solid];
m19_108 -> m19_100  [key=2, style=dotted];
m19_109 -> m19_107  [key=0, style=bold, color=blue];
m19_55 -> m19_56  [key=0, style=solid];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_45  [key=2, style=dotted];
m19_56 -> m19_58  [key=1, style=dashed, color=darkseagreen4, label=context];
m19_56 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=context];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_10  [key=2, style=dotted];
m19_57 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=newState];
m19_58 -> m19_59  [key=0, style=solid];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_46  [key=2, style=dotted];
m19_60 -> m19_55  [key=0, style=bold, color=blue];
m19_28 -> m19_29  [key=0, style=solid, color=red];
m19_29 -> m19_30  [key=0, style=solid, color=red];
m19_29 -> m19_15  [key=2, style=dotted, color=red];
m19_29 -> m19_32  [key=1, style=dashed, color=red, label="lambda expression"];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_16  [key=2, style=dotted];
m19_31 -> m19_28  [key=0, style=bold, color=blue];
m19_35 -> m19_36  [key=0, style=solid];
m19_36 -> m19_37  [key=0, style=solid];
m19_36 -> m19_45  [key=2, style=dotted];
m19_36 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label=context];
m19_36 -> m19_39  [key=1, style=dashed, color=red, label=context];
m19_36 -> m19_40  [key=1, style=dashed, color=red, label=context];
m19_36 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label=context];
m19_36 -> m19_42  [key=1, style=dashed, color=darkseagreen4, label=context];
m19_36 -> m19_43  [key=1, style=dashed, color=red, label=context];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_16  [key=2, style=dotted];
m19_38 -> m19_39  [key=0, style=solid, color=red];
m19_38 -> m19_16  [key=2, style=dotted];
m19_39 -> m19_40  [key=0, style=solid, color=red];
m19_39 -> m19_46  [key=2, style=dotted, color=red];
m19_40 -> m19_41  [key=0, style=solid, color=red];
m19_40 -> m19_46  [key=2, style=dotted, color=red];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_46  [key=2, style=dotted];
m19_42 -> m19_43  [key=0, style=solid, color=red];
m19_42 -> m19_16  [key=2, style=dotted];
m19_43 -> m19_44  [key=0, style=solid, color=red];
m19_43 -> m19_47  [key=2, style=dotted, color=red];
m19_44 -> m19_35  [key=0, style=bold, color=blue];
m19_45 -> m19_110  [key=0, style=solid, color=red];
m19_110 -> m19_111  [key=0, style=solid, color=red];
m19_110 -> m19_20  [key=2, style=dotted, color=red];
m19_111 -> m19_45  [key=0, style=bold, color=blue];
m19_112 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_2  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_12  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_18  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_22  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_26  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_29  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_33  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_39  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_40  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_62  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_65  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_69  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_81  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_89  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_90  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_112 -> m19_110  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.ElectStateContextFacts"];
m19_113 -> m19_53  [key=1, style=dashed, color=darkseagreen4, label=context];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_0  [key=0, style=bold, color=blue];
m20_3 -> m20_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.Monitoring.ScheduleDto"];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [key=0, style=bold, color=blue];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_2  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_0  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_0  [key=0, style=bold, color=blue];
m26_196 -> m26_197  [key=0, style=solid];
m26_197 -> m26_198  [key=0, style=solid];
m26_197 -> m26_17  [key=2, style=dotted];
m26_197 -> m26_20  [key=2, style=dotted];
m26_197 -> m26_202  [key=2, style=dotted];
m26_197 -> m26_18  [key=2, style=dotted];
m26_197 -> m26_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_198 -> m26_199  [key=0, style=solid];
m26_198 -> m26_67  [key=2, style=dotted];
m26_199 -> m26_200  [key=0, style=solid];
m26_199 -> m26_68  [key=2, style=dotted];
m26_200 -> m26_201  [key=0, style=solid];
m26_200 -> m26_69  [key=2, style=dotted];
m26_200 -> m26_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_201 -> m26_196  [key=0, style=bold, color=blue];
m26_141 -> m26_142  [key=0, style=solid];
m26_142 -> m26_143  [key=0, style=solid];
m26_142 -> m26_67  [key=2, style=dotted];
m26_143 -> m26_144  [key=0, style=solid];
m26_143 -> m26_68  [key=2, style=dotted];
m26_144 -> m26_145  [key=0, style=solid];
m26_144 -> m26_69  [key=2, style=dotted];
m26_144 -> m26_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_145 -> m26_141  [key=0, style=bold, color=blue];
m26_89 -> m26_90  [key=0, style=solid];
m26_90 -> m26_91  [key=0, style=solid];
m26_90 -> m26_17  [key=2, style=dotted];
m26_90 -> m26_96  [key=2, style=dotted];
m26_90 -> m26_18  [key=2, style=dotted];
m26_90 -> m26_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_91 -> m26_92  [key=0, style=solid];
m26_91 -> m26_17  [key=2, style=dotted];
m26_91 -> m26_96  [key=2, style=dotted];
m26_91 -> m26_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_92 -> m26_93  [key=0, style=solid];
m26_92 -> m26_17  [key=2, style=dotted];
m26_92 -> m26_96  [key=2, style=dotted];
m26_92 -> m26_18  [key=2, style=dotted];
m26_92 -> m26_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_93 -> m26_94  [key=0, style=solid];
m26_93 -> m26_67  [key=2, style=dotted];
m26_94 -> m26_95  [key=0, style=solid];
m26_94 -> m26_68  [key=2, style=dotted];
m26_95 -> m26_89  [key=0, style=bold, color=blue];
m26_160 -> m26_161  [key=0, style=solid];
m26_162 -> m26_163  [key=0, style=solid];
m26_162 -> m26_17  [key=2, style=dotted];
m26_162 -> m26_168  [key=2, style=dotted];
m26_162 -> m26_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_163 -> m26_164  [key=0, style=solid];
m26_163 -> m26_67  [key=2, style=dotted];
m26_164 -> m26_165  [key=0, style=solid];
m26_164 -> m26_68  [key=2, style=dotted];
m26_165 -> m26_166  [key=0, style=solid];
m26_165 -> m26_69  [key=2, style=dotted];
m26_165 -> m26_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_161 -> m26_162  [key=0, style=solid];
m26_161 -> m26_165  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_161 -> m26_167  [key=2, style=dotted];
m26_161 -> m26_173  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_161 -> m26_176  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_166 -> m26_160  [key=0, style=bold, color=blue];
m26_43 -> m26_211  [key=0, style=solid];
m26_211 -> m26_43  [key=0, style=bold, color=blue];
m26_179 -> m26_180  [key=0, style=solid];
m26_181 -> m26_182  [key=0, style=solid];
m26_181 -> m26_17  [key=2, style=dotted];
m26_181 -> m26_186  [key=2, style=dotted];
m26_181 -> m26_168  [key=2, style=dotted];
m26_181 -> m26_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_182 -> m26_183  [key=0, style=solid];
m26_182 -> m26_67  [key=2, style=dotted];
m26_183 -> m26_184  [key=0, style=solid];
m26_183 -> m26_68  [key=2, style=dotted];
m26_184 -> m26_185  [key=0, style=solid];
m26_184 -> m26_69  [key=2, style=dotted];
m26_184 -> m26_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_180 -> m26_181  [key=0, style=solid];
m26_180 -> m26_184  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_180 -> m26_167  [key=2, style=dotted];
m26_180 -> m26_191  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_180 -> m26_194  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_185 -> m26_179  [key=0, style=bold, color=blue];
m26_77 -> m26_78  [key=0, style=solid];
m26_78 -> m26_79  [key=0, style=solid];
m26_78 -> m26_67  [key=2, style=dotted];
m26_79 -> m26_80  [key=0, style=solid];
m26_79 -> m26_68  [key=2, style=dotted];
m26_80 -> m26_81  [key=0, style=solid];
m26_80 -> m26_69  [key=2, style=dotted];
m26_80 -> m26_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_81 -> m26_82  [key=0, style=solid];
m26_81 -> m26_69  [key=2, style=dotted];
m26_81 -> m26_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_82 -> m26_77  [key=0, style=bold, color=blue];
m26_118 -> m26_119  [key=0, style=solid];
m26_119 -> m26_120  [key=0, style=solid];
m26_119 -> m26_67  [key=2, style=dotted];
m26_120 -> m26_121  [key=0, style=solid];
m26_120 -> m26_68  [key=2, style=dotted];
m26_121 -> m26_122  [key=0, style=solid];
m26_121 -> m26_69  [key=2, style=dotted];
m26_121 -> m26_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_122 -> m26_118  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid, color=green];
m26_1 -> m26_2  [key=0, style=solid, color=green];
m26_1 -> m26_15  [key=2, style=dotted, color=green];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_0  [key=0, style=bold, color=blue];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.Monitoring.SucceededJobDto"];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_16  [key=2, style=dotted];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_17  [key=2, style=dotted];
m26_5 -> m26_18  [key=2, style=dotted];
m26_5 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_19  [key=2, style=dotted];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_17  [key=2, style=dotted];
m26_7 -> m26_18  [key=2, style=dotted];
m26_7 -> m26_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_8 -> m26_9  [key=0, style=solid];
m26_8 -> m26_17  [key=2, style=dotted];
m26_8 -> m26_18  [key=2, style=dotted];
m26_8 -> m26_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_17  [key=2, style=dotted];
m26_9 -> m26_20  [key=2, style=dotted];
m26_9 -> m26_21  [key=2, style=dotted];
m26_9 -> m26_18  [key=2, style=dotted];
m26_9 -> m26_36  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_9 -> m26_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_22  [key=2, style=dotted];
m26_11 -> m26_12  [key=0, style=solid];
m26_11 -> m26_17  [key=2, style=dotted];
m26_11 -> m26_18  [key=2, style=dotted];
m26_11 -> m26_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_17  [key=2, style=dotted];
m26_12 -> m26_18  [key=2, style=dotted];
m26_12 -> m26_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_23  [key=2, style=dotted];
m26_14 -> m26_0  [key=0, style=bold, color=blue];
m26_129 -> m26_130  [key=0, style=solid];
m26_130 -> m26_131  [key=0, style=solid];
m26_130 -> m26_17  [key=2, style=dotted];
m26_130 -> m26_18  [key=2, style=dotted];
m26_130 -> m26_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_131 -> m26_132  [key=0, style=solid];
m26_131 -> m26_67  [key=2, style=dotted];
m26_132 -> m26_133  [key=0, style=solid];
m26_132 -> m26_68  [key=2, style=dotted];
m26_133 -> m26_134  [key=0, style=solid];
m26_133 -> m26_69  [key=2, style=dotted];
m26_133 -> m26_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_134 -> m26_129  [key=0, style=bold, color=blue];
m26_61 -> m26_62  [key=0, style=solid];
m26_62 -> m26_63  [key=0, style=solid];
m26_62 -> m26_67  [key=2, style=dotted];
m26_63 -> m26_64  [key=0, style=solid];
m26_63 -> m26_68  [key=2, style=dotted];
m26_64 -> m26_65  [key=0, style=solid];
m26_64 -> m26_69  [key=2, style=dotted];
m26_64 -> m26_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_65 -> m26_66  [key=0, style=solid];
m26_65 -> m26_69  [key=2, style=dotted];
m26_65 -> m26_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_66 -> m26_61  [key=0, style=bold, color=blue];
m26_193 -> m26_194  [key=0, style=solid];
m26_32 -> m26_33  [key=0, style=solid];
m26_32 -> m26_34  [key=2, style=dotted];
m26_32 -> m26_35  [key=2, style=dotted];
m26_45 -> m26_46  [key=0, style=solid];
m26_45 -> m26_47  [key=2, style=dotted];
m26_84 -> m26_85  [key=0, style=solid];
m26_84 -> m26_35  [key=2, style=dotted];
m26_113 -> m26_114  [key=0, style=solid];
m26_113 -> m26_34  [key=2, style=dotted];
m26_113 -> m26_51  [key=2, style=dotted];
m26_113 -> m26_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_116 -> m26_117  [key=0, style=solid];
m26_24 -> m26_25  [key=0, style=solid];
m26_28 -> m26_29  [key=0, style=solid];
m26_31 -> m26_32  [key=0, style=solid];
m26_33 -> m26_31  [key=0, style=bold, color=blue];
m26_36 -> m26_37  [key=0, style=solid];
m26_40 -> m26_41  [key=0, style=solid];
m26_44 -> m26_45  [key=0, style=solid];
m26_46 -> m26_44  [key=0, style=bold, color=blue];
m26_48 -> m26_49  [key=0, style=solid];
m26_70 -> m26_71  [key=0, style=solid];
m26_73 -> m26_74  [key=0, style=solid];
m26_83 -> m26_84  [key=0, style=solid];
m26_85 -> m26_83  [key=0, style=bold, color=blue];
m26_86 -> m26_87  [key=0, style=solid];
m26_97 -> m26_98  [key=0, style=solid];
m26_100 -> m26_101  [key=0, style=solid];
m26_104 -> m26_105  [key=0, style=solid];
m26_112 -> m26_113  [key=0, style=solid];
m26_114 -> m26_112  [key=0, style=bold, color=blue];
m26_115 -> m26_116  [key=0, style=solid];
m26_117 -> m26_115  [key=0, style=bold, color=blue];
m26_123 -> m26_124  [key=0, style=solid];
m26_135 -> m26_136  [key=0, style=solid];
m26_138 -> m26_139  [key=0, style=solid];
m26_146 -> m26_147  [key=0, style=solid];
m26_154 -> m26_155  [key=0, style=solid];
m26_169 -> m26_170  [key=0, style=solid];
m26_172 -> m26_173  [key=0, style=solid];
m26_187 -> m26_188  [key=0, style=solid];
m26_190 -> m26_191  [key=0, style=solid];
m26_203 -> m26_204  [key=0, style=solid];
m26_206 -> m26_207  [key=0, style=solid];
m26_26 -> m26_24  [key=0, style=bold, color=blue];
m26_25 -> m26_26  [key=0, style=solid];
m26_25 -> m26_27  [key=2, style=dotted];
m26_30 -> m26_28  [key=0, style=bold, color=blue];
m26_29 -> m26_30  [key=0, style=solid];
m26_49 -> m26_34  [key=2, style=dotted];
m26_49 -> m26_51  [key=2, style=dotted];
m26_49 -> m26_50  [key=0, style=solid];
m26_98 -> m26_34  [key=2, style=dotted];
m26_98 -> m26_51  [key=2, style=dotted];
m26_98 -> m26_99  [key=0, style=solid];
m26_101 -> m26_34  [key=2, style=dotted];
m26_101 -> m26_102  [key=0, style=solid];
m26_101 -> m26_103  [key=2, style=dotted];
m26_105 -> m26_34  [key=2, style=dotted];
m26_105 -> m26_51  [key=2, style=dotted];
m26_105 -> m26_106  [key=0, style=solid];
m26_124 -> m26_34  [key=2, style=dotted];
m26_124 -> m26_51  [key=2, style=dotted];
m26_124 -> m26_125  [key=0, style=solid];
m26_124 -> m26_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_136 -> m26_34  [key=2, style=dotted];
m26_136 -> m26_51  [key=2, style=dotted];
m26_136 -> m26_137  [key=0, style=solid];
m26_139 -> m26_34  [key=2, style=dotted];
m26_139 -> m26_140  [key=0, style=solid];
m26_139 -> m26_103  [key=2, style=dotted];
m26_147 -> m26_34  [key=2, style=dotted];
m26_147 -> m26_148  [key=0, style=solid];
m26_147 -> m26_103  [key=2, style=dotted];
m26_155 -> m26_34  [key=2, style=dotted];
m26_155 -> m26_51  [key=2, style=dotted];
m26_155 -> m26_156  [key=0, style=solid];
m26_155 -> m26_157  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_173 -> m26_34  [key=2, style=dotted];
m26_173 -> m26_51  [key=2, style=dotted];
m26_173 -> m26_174  [key=0, style=solid];
m26_173 -> m26_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_170 -> m26_34  [key=2, style=dotted];
m26_170 -> m26_171  [key=0, style=solid];
m26_170 -> m26_103  [key=2, style=dotted];
m26_191 -> m26_34  [key=2, style=dotted];
m26_191 -> m26_51  [key=2, style=dotted];
m26_191 -> m26_192  [key=0, style=solid];
m26_191 -> m26_193  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_188 -> m26_34  [key=2, style=dotted];
m26_188 -> m26_189  [key=0, style=solid];
m26_188 -> m26_103  [key=2, style=dotted];
m26_207 -> m26_34  [key=2, style=dotted];
m26_207 -> m26_51  [key=2, style=dotted];
m26_207 -> m26_208  [key=0, style=solid];
m26_38 -> m26_36  [key=0, style=bold, color=blue];
m26_37 -> m26_38  [key=0, style=solid];
m26_37 -> m26_39  [key=2, style=dotted];
m26_42 -> m26_40  [key=0, style=bold, color=blue];
m26_41 -> m26_42  [key=0, style=solid];
m26_41 -> m26_43  [key=2, style=dotted];
m26_50 -> m26_48  [key=0, style=bold, color=blue];
m26_72 -> m26_70  [key=0, style=bold, color=blue];
m26_71 -> m26_72  [key=0, style=solid];
m26_71 -> m26_27  [key=2, style=dotted];
m26_75 -> m26_73  [key=0, style=bold, color=blue];
m26_74 -> m26_75  [key=0, style=solid];
m26_74 -> m26_76  [key=2, style=dotted];
m26_88 -> m26_86  [key=0, style=bold, color=blue];
m26_87 -> m26_88  [key=0, style=solid];
m26_87 -> m26_76  [key=2, style=dotted];
m26_99 -> m26_97  [key=0, style=bold, color=blue];
m26_102 -> m26_100  [key=0, style=bold, color=blue];
m26_106 -> m26_104  [key=0, style=bold, color=blue];
m26_125 -> m26_123  [key=0, style=bold, color=blue];
m26_137 -> m26_135  [key=0, style=bold, color=blue];
m26_140 -> m26_138  [key=0, style=bold, color=blue];
m26_148 -> m26_146  [key=0, style=bold, color=blue];
m26_156 -> m26_154  [key=0, style=bold, color=blue];
m26_176 -> m26_177  [key=0, style=solid];
m26_176 -> m26_178  [key=2, style=dotted];
m26_171 -> m26_169  [key=0, style=bold, color=blue];
m26_174 -> m26_172  [key=0, style=bold, color=blue];
m26_194 -> m26_195  [key=0, style=solid];
m26_189 -> m26_187  [key=0, style=bold, color=blue];
m26_192 -> m26_190  [key=0, style=bold, color=blue];
m26_205 -> m26_203  [key=0, style=bold, color=blue];
m26_204 -> m26_205  [key=0, style=solid];
m26_204 -> m26_39  [key=2, style=dotted];
m26_208 -> m26_206  [key=0, style=bold, color=blue];
m26_58 -> m26_60  [key=2, style=dotted];
m26_58 -> m26_59  [key=0, style=solid];
m26_57 -> m26_58  [key=0, style=solid];
m26_126 -> m26_127  [key=0, style=solid];
m26_157 -> m26_158  [key=0, style=solid];
m26_175 -> m26_176  [key=0, style=solid];
m26_177 -> m26_175  [key=0, style=bold, color=blue];
m26_195 -> m26_193  [key=0, style=bold, color=blue];
m26_59 -> m26_57  [key=0, style=bold, color=blue];
m26_128 -> m26_126  [key=0, style=bold, color=blue];
m26_127 -> m26_128  [key=0, style=solid];
m26_158 -> m26_159  [key=0, style=solid];
m26_159 -> m26_157  [key=0, style=bold, color=blue];
m26_107 -> m26_108  [key=0, style=solid];
m26_108 -> m26_109  [key=0, style=solid];
m26_108 -> m26_67  [key=2, style=dotted];
m26_109 -> m26_110  [key=0, style=solid];
m26_109 -> m26_68  [key=2, style=dotted];
m26_110 -> m26_111  [key=0, style=solid];
m26_110 -> m26_69  [key=2, style=dotted];
m26_110 -> m26_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_111 -> m26_107  [key=0, style=bold, color=blue];
m26_67 -> m26_209  [key=0, style=solid];
m26_209 -> m26_210  [key=0, style=solid];
m26_209 -> m26_60  [key=2, style=dotted];
m26_210 -> m26_67  [key=0, style=bold, color=blue];
m26_52 -> m26_53  [key=0, style=solid];
m26_53 -> m26_34  [key=2, style=dotted];
m26_53 -> m26_54  [key=0, style=solid];
m26_53 -> m26_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_54 -> m26_55  [key=0, style=solid];
m26_54 -> m26_56  [key=2, style=dotted];
m26_55 -> m26_52  [key=0, style=bold, color=blue];
m26_149 -> m26_150  [key=0, style=solid];
m26_150 -> m26_151  [key=0, style=solid];
m26_150 -> m26_67  [key=2, style=dotted];
m26_151 -> m26_152  [key=0, style=solid];
m26_151 -> m26_68  [key=2, style=dotted];
m26_152 -> m26_153  [key=0, style=solid];
m26_152 -> m26_69  [key=2, style=dotted];
m26_152 -> m26_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_153 -> m26_149  [key=0, style=bold, color=blue];
m26_212 -> m26_1  [key=1, style=dashed, color=green, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_64  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_90  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_91  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_110  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_132  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_133  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_142  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_143  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_144  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_150  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_151  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_152  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_162  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_163  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_164  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_165  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_181  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_182  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_183  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_184  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_197  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_198  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_199  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_200  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_212 -> m26_209  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.Server.WorkerFacts"];
m26_213 -> m26_173  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_213 -> m26_176  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_214 -> m26_191  [key=1, style=dashed, color=darkseagreen4, label=exception];
m26_214 -> m26_194  [key=1, style=dashed, color=darkseagreen4, label=exception];
m27_90 -> m27_91  [key=0, style=solid];
m27_91 -> m27_92  [key=0, style=solid];
m27_91 -> m27_66  [key=2, style=dotted];
m27_91 -> m27_67  [key=2, style=dotted];
m27_91 -> m27_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_93 -> m27_94  [key=0, style=solid];
m27_93 -> m27_34  [key=2, style=dotted];
m27_94 -> m27_95  [key=0, style=solid];
m27_94 -> m27_21  [key=2, style=dotted];
m27_92 -> m27_93  [key=0, style=solid];
m27_92 -> m27_16  [key=2, style=dotted];
m27_95 -> m27_90  [key=0, style=bold, color=blue];
m27_44 -> m27_99  [key=0, style=solid];
m27_99 -> m27_16  [key=2, style=dotted];
m27_99 -> m27_100  [key=0, style=solid];
m27_100 -> m27_44  [key=0, style=bold, color=blue];
m27_36 -> m27_37  [key=0, style=solid];
m27_38 -> m27_39  [key=0, style=solid];
m27_38 -> m27_34  [key=2, style=dotted];
m27_39 -> m27_40  [key=0, style=solid];
m27_39 -> m27_21  [key=2, style=dotted];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_45  [key=2, style=dotted];
m27_41 -> m27_42  [key=0, style=solid];
m27_41 -> m27_46  [key=2, style=dotted];
m27_42 -> m27_43  [key=0, style=solid];
m27_42 -> m27_47  [key=2, style=dotted];
m27_42 -> m27_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_37 -> m27_38  [key=0, style=solid];
m27_37 -> m27_44  [key=2, style=dotted];
m27_43 -> m27_36  [key=0, style=bold, color=blue];
m27_60 -> m27_61  [key=0, style=solid];
m27_61 -> m27_62  [key=0, style=solid];
m27_61 -> m27_66  [key=2, style=dotted];
m27_61 -> m27_67  [key=2, style=dotted];
m27_61 -> m27_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_63 -> m27_64  [key=0, style=solid];
m27_63 -> m27_34  [key=2, style=dotted];
m27_64 -> m27_65  [key=0, style=solid];
m27_64 -> m27_35  [key=2, style=dotted];
m27_62 -> m27_63  [key=0, style=solid];
m27_62 -> m27_44  [key=2, style=dotted];
m27_65 -> m27_60  [key=0, style=bold, color=blue];
m27_52 -> m27_53  [key=0, style=solid];
m27_55 -> m27_56  [key=0, style=solid];
m27_56 -> m27_57  [key=0, style=solid];
m27_56 -> m27_34  [key=2, style=dotted];
m27_57 -> m27_58  [key=0, style=solid];
m27_57 -> m27_35  [key=2, style=dotted];
m27_54 -> m27_55  [key=0, style=solid];
m27_54 -> m27_57  [key=1, style=dashed, color=darkseagreen4, label=state];
m27_54 -> m27_59  [key=2, style=dotted];
m27_53 -> m27_56  [key=1, style=dashed, color=darkseagreen4, label=filter];
m27_53 -> m27_54  [key=0, style=solid];
m27_53 -> m27_44  [key=2, style=dotted];
m27_58 -> m27_52  [key=0, style=bold, color=blue];
m27_29 -> m27_30  [key=0, style=solid];
m27_31 -> m27_32  [key=0, style=solid];
m27_31 -> m27_34  [key=2, style=dotted];
m27_32 -> m27_33  [key=0, style=solid];
m27_32 -> m27_35  [key=2, style=dotted];
m27_30 -> m27_31  [key=0, style=solid];
m27_30 -> m27_16  [key=2, style=dotted];
m27_33 -> m27_29  [key=0, style=bold, color=blue];
m27_12 -> m27_13  [key=0, style=solid];
m27_13 -> m27_16  [key=2, style=dotted];
m27_13 -> m27_14  [key=0, style=solid];
m27_14 -> m27_15  [key=0, style=solid];
m27_14 -> m27_17  [key=2, style=dotted];
m27_15 -> m27_12  [key=0, style=bold, color=blue];
m27_22 -> m27_23  [key=0, style=solid];
m27_48 -> m27_49  [key=0, style=solid];
m27_68 -> m27_69  [key=0, style=solid];
m27_78 -> m27_79  [key=0, style=solid];
m27_87 -> m27_88  [key=0, style=solid];
m27_96 -> m27_97  [key=0, style=solid];
m27_50 -> m27_48  [key=0, style=bold, color=blue];
m27_49 -> m27_50  [key=0, style=solid];
m27_49 -> m27_51  [key=2, style=dotted];
m27_70 -> m27_68  [key=0, style=bold, color=blue];
m27_69 -> m27_70  [key=0, style=solid];
m27_69 -> m27_71  [key=2, style=dotted];
m27_80 -> m27_78  [key=0, style=bold, color=blue];
m27_79 -> m27_80  [key=0, style=solid];
m27_79 -> m27_71  [key=2, style=dotted];
m27_89 -> m27_87  [key=0, style=bold, color=blue];
m27_88 -> m27_89  [key=0, style=solid];
m27_88 -> m27_71  [key=2, style=dotted];
m27_98 -> m27_96  [key=0, style=bold, color=blue];
m27_97 -> m27_98  [key=0, style=solid];
m27_97 -> m27_71  [key=2, style=dotted];
m27_23 -> m27_16  [key=2, style=dotted];
m27_23 -> m27_24  [key=0, style=solid];
m27_24 -> m27_22  [key=0, style=bold, color=blue];
m27_81 -> m27_82  [key=0, style=solid];
m27_82 -> m27_83  [key=0, style=solid];
m27_82 -> m27_66  [key=2, style=dotted];
m27_82 -> m27_67  [key=2, style=dotted];
m27_82 -> m27_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_84 -> m27_85  [key=0, style=solid];
m27_84 -> m27_34  [key=2, style=dotted];
m27_85 -> m27_86  [key=0, style=solid];
m27_85 -> m27_21  [key=2, style=dotted];
m27_83 -> m27_84  [key=0, style=solid];
m27_83 -> m27_16  [key=2, style=dotted];
m27_86 -> m27_81  [key=0, style=bold, color=blue];
m27_72 -> m27_73  [key=0, style=solid];
m27_73 -> m27_74  [key=0, style=solid];
m27_73 -> m27_66  [key=2, style=dotted];
m27_73 -> m27_67  [key=2, style=dotted];
m27_73 -> m27_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_75 -> m27_76  [key=0, style=solid];
m27_75 -> m27_34  [key=2, style=dotted];
m27_76 -> m27_77  [key=0, style=solid];
m27_76 -> m27_21  [key=2, style=dotted];
m27_74 -> m27_75  [key=0, style=solid];
m27_74 -> m27_16  [key=2, style=dotted];
m27_77 -> m27_72  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_5 -> m27_6  [key=0, style=solid, color=green];
m27_4 -> m27_5  [key=0, style=solid, color=green];
m27_6 -> m27_7  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_8  [key=2, style=dotted];
m27_1 -> m27_9  [key=2, style=dotted];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_10  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_11  [key=2, style=dotted];
m27_7 -> m27_0  [key=0, style=bold, color=blue];
m27_18 -> m27_19  [key=0, style=solid];
m27_19 -> m27_21  [key=2, style=dotted];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m27_20 -> m27_18  [key=0, style=bold, color=blue];
m27_25 -> m27_26  [key=0, style=solid];
m27_26 -> m27_16  [key=2, style=dotted];
m27_26 -> m27_27  [key=0, style=solid];
m27_27 -> m27_28  [key=0, style=solid];
m27_27 -> m27_17  [key=2, style=dotted];
m27_28 -> m27_25  [key=0, style=bold, color=blue];
m27_101 -> m27_5  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_38  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_39  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_40  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_41  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_55  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_75  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_85  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_93  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m27_101 -> m27_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.RetryAttributeFacts"];
m29_0 -> m29_1  [key=0, style=solid];
m29_0 -> m29_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m29_0 -> m29_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.JobStorage"];
m29_0 -> m29_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateMachineFactory"];
m29_0 -> m29_7  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=0, style=solid];
m29_3 -> m29_4  [key=0, style=solid];
m29_3 -> m29_5  [key=0, style=solid];
m29_5 -> m29_6  [key=0, style=solid];
m29_6 -> m29_7  [key=0, style=solid];
m29_7 -> m29_8  [key=0, style=solid];
m29_2 -> m29_8  [key=0, style=solid];
m29_2 -> d10  [key=2, style=dotted];
m29_4 -> m29_8  [key=0, style=solid];
m29_4 -> d10  [key=2, style=dotted];
m29_8 -> m29_0  [key=0, style=bold, color=blue];
m29_21 -> m29_22  [key=0, style=solid];
m29_22 -> m29_23  [key=0, style=solid];
m29_23 -> m29_21  [key=0, style=bold, color=blue];
m29_18 -> m29_24  [key=0, style=solid];
m29_18 -> m29_28  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m29_18 -> m29_32  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnqueueNextScheduledJob"];
m29_24 -> m29_25  [key=0, style=solid];
m29_24 -> m29_34  [key=2, style=dotted];
m29_24 -> m29_26  [key=1, style=dashed, color=darkseagreen4, label=connection];
m29_24 -> m29_29  [key=1, style=dashed, color=darkseagreen4, label=connection];
m29_25 -> m29_26  [key=0, style=solid];
m29_25 -> m29_35  [key=2, style=dotted];
m29_26 -> m29_27  [key=0, style=solid];
m29_26 -> m29_36  [key=2, style=dotted];
m29_26 -> m29_31  [key=1, style=dashed, color=red, label=jobId];
m29_29 -> m29_30  [key=0, style=solid];
m29_29 -> m29_38  [key=2, style=dotted];
m29_29 -> m29_31  [key=1, style=dashed, color=red, label=stateMachine];
m29_27 -> m29_28  [key=0, style=solid];
m29_27 -> m29_29  [key=0, style=solid];
m29_27 -> m29_37  [key=2, style=dotted];
m29_31 -> m29_32  [key=0, style=solid, color=red];
m29_31 -> m29_40  [key=2, style=dotted, color=red];
m29_28 -> m29_33  [key=0, style=solid];
m29_30 -> m29_31  [key=0, style=solid, color=red];
m29_30 -> m29_39  [key=2, style=dotted];
m29_32 -> m29_33  [key=0, style=solid];
m29_33 -> m29_18  [key=0, style=bold, color=blue];
m29_10 -> m29_11  [key=0, style=solid];
m29_10 -> m29_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m29_11 -> m29_12  [key=0, style=solid];
m29_11 -> m29_16  [key=0, style=solid];
m29_11 -> m29_18  [key=2, style=dotted];
m29_15 -> m29_17  [key=0, style=solid];
m29_15 -> m29_20  [key=2, style=dotted];
m29_15 -> m29_15  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m29_12 -> m29_13  [key=0, style=solid];
m29_12 -> m29_15  [key=0, style=solid];
m29_16 -> m29_17  [key=0, style=solid];
m29_13 -> m29_14  [key=0, style=solid];
m29_13 -> m29_19  [key=2, style=dotted];
m29_14 -> m29_15  [key=0, style=solid];
m29_17 -> m29_10  [key=0, style=bold, color=blue];
m29_41 -> m29_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m29_41 -> m29_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m29_41 -> m29_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m29_41 -> m29_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m29_41 -> m29_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m29_41 -> m29_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m29_41 -> m29_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m29_41 -> m29_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m29_41 -> m29_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m29_41 -> m29_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m29_41 -> m29_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.SchedulePoller"];
m32_0 -> m32_1  [key=0, style=solid, color=green];
m32_0 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m32_0 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m32_0 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m32_1 -> m32_2  [key=0, style=solid, color=green];
m32_1 -> m32_3  [key=0, style=solid, color=green];
m32_1 -> m32_7  [key=2, style=dotted, color=green];
m32_3 -> m32_4  [key=0, style=solid];
m32_4 -> m32_5  [key=0, style=solid];
m32_5 -> m32_6  [key=0, style=solid];
m32_2 -> m32_6  [key=0, style=solid, color=green];
m32_2 -> d10  [key=2, style=dotted, color=green];
m32_6 -> m32_0  [key=0, style=bold, color=blue];
m32_9 -> m32_10  [key=0, style=solid];
m32_10 -> m32_9  [key=0, style=bold, color=blue];
m32_11 -> m32_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateContext"];
m32_11 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateContext"];
m32_11 -> m32_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateContext"];
m33_0 -> m33_1  [key=0, style=solid];
m33_0 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_3  [key=0, style=solid];
m33_1 -> m33_6  [key=2, style=dotted];
m33_3 -> m33_4  [key=0, style=solid];
m33_2 -> m33_5  [key=0, style=solid];
m33_2 -> d10  [key=2, style=dotted];
m33_4 -> m33_5  [key=0, style=solid];
m33_5 -> m33_0  [key=0, style=bold, color=blue];
m33_8 -> m33_9  [key=0, style=solid, color=green];
m33_9 -> m33_10  [key=0, style=solid, color=green];
m33_9 -> m33_11  [key=2, style=dotted, color=green];
m33_9 -> m33_12  [key=2, style=dotted, color=green];
m33_10 -> m33_8  [key=0, style=bold, color=blue];
m33_13 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m33_13 -> m33_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ProcessingState"];
m33_13 -> m33_9  [key=1, style=dashed, color=green, label="HangFire.States.ProcessingState"];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_2 -> m34_3  [key=0, style=solid];
m34_2 -> m34_6  [key=2, style=dotted];
m34_2 -> m34_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_3 -> m34_4  [key=0, style=solid, color=green];
m34_4 -> m34_5  [key=0, style=solid, color=green];
m34_4 -> m34_7  [key=2, style=dotted, color=green];
m34_5 -> m34_0  [key=0, style=bold, color=blue];
m34_12 -> m34_13  [key=0, style=solid, color=green];
m34_8 -> m34_9  [key=0, style=solid];
m34_9 -> m34_10  [key=0, style=solid];
m34_9 -> m34_11  [key=2, style=dotted];
m34_10 -> m34_8  [key=0, style=bold, color=blue];
m34_13 -> m34_14  [key=0, style=solid, color=green];
m34_13 -> m34_15  [key=2, style=dotted, color=green];
m34_14 -> m34_12  [key=0, style=bold, color=blue];
m34_16 -> m34_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StateContextMock"];
m34_16 -> m34_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StateContextMock"];
m34_16 -> m34_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StateContextMock"];
m34_16 -> m34_4  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.StateContextMock"];
m34_16 -> m34_13  [key=1, style=dashed, color=green, label="Hangfire.Core.Tests.StateContextMock"];
m35_9 -> m35_17  [key=1, style=dashed, color=green, label="Hangfire.Common.Job"];
m35_9 -> m35_10  [key=0, style=solid];
m35_9 -> m35_12  [key=1, style=dashed, color=darkseagreen4, label=pager];
m35_9 -> m35_14  [key=1, style=dashed, color=red, label=pager];
m35_9 -> m35_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Common.Job"];
m35_9 -> m35_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m35_9 -> m35_46  [key=2, style=dotted];
m35_9 -> m35_47  [key=2, style=dotted];
m35_9 -> m35_43  [key=2, style=dotted];
m35_9 -> m35_37  [key=1, style=dashed, color=darkseagreen4, label=pager];
m35_17 -> m35_18  [key=0, style=solid, color=red];
m35_17 -> m35_22  [key=2, style=dotted, color=green];
m35_17 -> m35_23  [key=2, style=dotted, color=green];
m35_17 -> m35_20  [key=1, style=dashed, color=green, label=jobId];
m35_17 -> m35_39  [key=2, style=dotted, color=red];
m35_16 -> m35_17  [key=0, style=solid, color=red];
m35_16 -> m35_18  [key=1, style=dashed, color=red, label=job];
m35_16 -> m35_36  [key=0, style=solid, color=red];
m35_18 -> m35_19  [key=0, style=solid, color=red];
m35_18 -> m35_24  [key=2, style=dotted];
m35_18 -> m35_52  [key=2, style=dotted, color=red];
m35_18 -> m35_18  [key=1, style=dashed, color=red, label=job];
m35_18 -> m35_20  [key=1, style=dashed, color=red, label=job];
m35_20 -> m35_21  [key=0, style=solid];
m35_20 -> m35_43  [key=2, style=dotted];
m35_20 -> m35_52  [key=2, style=dotted];
m35_20 -> m35_20  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_20 -> m35_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_19 -> m35_20  [key=0, style=solid];
m35_19 -> m35_25  [key=2, style=dotted];
m35_19 -> m35_39  [key=2, style=dotted];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_12  [key=0, style=solid];
m35_10 -> m35_48  [key=2, style=dotted];
m35_10 -> m35_16  [key=1, style=dashed, color=red, label=enqueuedJobs];
m35_12 -> m35_13  [key=0, style=solid];
m35_12 -> m35_14  [key=0, style=solid, color=red];
m35_14 -> m35_16  [key=0, style=solid];
m35_14 -> m35_15  [key=0, style=solid, color=red];
m35_14 -> m35_49  [key=2, style=dotted, color=red];
m35_14 -> m35_50  [key=2, style=dotted, color=red];
m35_14 -> m35_51  [key=2, style=dotted, color=red];
m35_11 -> m35_21  [key=0, style=solid];
m35_11 -> d10  [key=2, style=dotted];
m35_11 -> m35_12  [key=0, style=solid];
m35_11 -> m35_39  [key=2, style=dotted];
m35_13 -> m35_21  [key=0, style=solid];
m35_13 -> d10  [key=2, style=dotted];
m35_13 -> m35_38  [key=0, style=solid];
m35_13 -> m35_39  [key=2, style=dotted];
m35_15 -> m35_21  [key=0, style=solid];
m35_15 -> d10  [key=2, style=dotted];
m35_15 -> m35_16  [key=0, style=solid, color=red];
m35_15 -> m35_39  [key=2, style=dotted, color=red];
m35_21 -> m35_9  [key=0, style=bold, color=blue];
m35_21 -> m35_22  [key=0, style=solid];
m35_21 -> m35_39  [key=2, style=dotted];
m35_0 -> m35_1  [key=0, style=solid];
m35_0 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m35_0 -> m35_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateChangeProcess"];
m35_0 -> m35_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IStateChangeProcess"];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_39  [key=2, style=dotted];
m35_1 -> m35_3  [key=0, style=solid];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_40  [key=2, style=dotted];
m35_2 -> m35_41  [key=2, style=dotted];
m35_2 -> m35_42  [key=2, style=dotted];
m35_2 -> m35_43  [key=2, style=dotted];
m35_2 -> m35_7  [key=0, style=solid];
m35_2 -> d10  [key=2, style=dotted];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_5  [key=0, style=solid];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_44  [key=2, style=dotted];
m35_4 -> m35_9  [key=1, style=dashed, color=darkseagreen4, label=from];
m35_4 -> m35_7  [key=0, style=solid];
m35_4 -> d10  [key=2, style=dotted];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_44  [key=2, style=dotted];
m35_5 -> m35_9  [key=1, style=dashed, color=darkseagreen4, label=perPage];
m35_6 -> m35_7  [key=0, style=solid];
m35_7 -> m35_8  [key=0, style=solid];
m35_7 -> m35_0  [key=0, style=bold, color=blue];
m35_8 -> m35_9  [key=0, style=solid];
m35_8 -> m35_45  [key=2, style=dotted];
m35_8 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label=monitor];
m35_37 -> m35_38  [key=0, style=solid];
m35_37 -> m35_56  [key=2, style=dotted];
m35_37 -> m35_50  [key=2, style=dotted];
m35_37 -> m35_51  [key=2, style=dotted];
m35_37 -> m35_39  [key=0, style=solid];
m35_37 -> m35_52  [key=2, style=dotted];
m35_36 -> m35_37  [key=0, style=solid];
m35_36 -> m35_39  [key=2, style=dotted];
m35_36 -> m35_48  [key=0, style=solid];
m35_22 -> m35_23  [key=0, style=solid];
m35_22 -> m35_53  [key=2, style=dotted];
m35_22 -> m35_51  [key=2, style=dotted];
m35_22 -> m35_22  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_22 -> m35_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_23 -> m35_24  [key=0, style=solid];
m35_23 -> m35_39  [key=2, style=dotted];
m35_24 -> m35_25  [key=0, style=solid];
m35_24 -> m35_26  [key=0, style=solid];
m35_24 -> m35_24  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_24 -> m35_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_25 -> m35_26  [key=0, style=solid];
m35_25 -> m35_39  [key=2, style=dotted];
m35_25 -> m35_45  [key=3, color=green, style=bold, label="Parameter variable Hangfire.States.StateContext context"];
m35_25 -> m35_18  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.StateContext context"];
m35_25 -> m35_56  [key=0, style=solid];
m35_25 -> m35_58  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateContext"];
m35_25 -> m35_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateContext"];
m35_25 -> m35_19  [key=3, color=darkorchid, style=bold, label="Parameter variable string oldStateName"];
m35_25 -> m35_36  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ChangeState"];
m35_26 -> m35_27  [key=0, style=solid];
m35_26 -> m35_39  [key=2, style=dotted];
m35_26 -> m35_33  [key=1, style=dashed, color=green, label=string];
m35_26 -> m35_45  [key=1, style=dashed, color=green, label=string];
m35_26 -> m35_46  [key=1, style=dashed, color=green, label="Hangfire.States.IState"];
m35_26 -> m35_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m35_26 -> m35_31  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m35_26 -> m35_34  [key=1, style=dashed, color=darkseagreen4, label=string];
m35_26 -> m35_37  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m35_26 -> m35_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m35_26 -> m35_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m35_26 -> m35_36  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ChangeState"];
m35_27 -> m35_28  [key=0, style=solid];
m35_27 -> m35_54  [key=2, style=dotted];
m35_27 -> m35_52  [key=2, style=dotted];
m35_27 -> m35_27  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_27 -> m35_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_28 -> m35_29  [key=0, style=solid];
m35_28 -> m35_39  [key=2, style=dotted];
m35_28 -> m35_48  [key=0, style=solid];
m35_28 -> d10  [key=2, style=dotted];
m35_29 -> m35_30  [key=0, style=solid];
m35_29 -> m35_35  [key=0, style=solid];
m35_29 -> m35_29  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_29 -> m35_31  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_30 -> m35_31  [key=0, style=solid];
m35_30 -> m35_39  [key=2, style=dotted];
m35_30 -> m35_48  [key=0, style=solid];
m35_30 -> d10  [key=2, style=dotted];
m35_35 -> m35_16  [key=0, style=solid, color=red];
m35_35 -> m35_39  [key=2, style=dotted];
m35_35 -> m35_37  [key=0, style=solid];
m35_35 -> m35_36  [key=0, style=solid];
m35_31 -> m35_32  [key=0, style=solid];
m35_31 -> m35_55  [key=2, style=dotted];
m35_31 -> m35_52  [key=2, style=dotted];
m35_31 -> m35_31  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_31 -> m35_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_32 -> m35_33  [key=0, style=solid];
m35_32 -> m35_39  [key=2, style=dotted];
m35_32 -> m35_48  [key=0, style=solid];
m35_32 -> m35_49  [key=2, style=dotted];
m35_33 -> m35_34  [key=0, style=solid, color=green];
m35_33 -> m35_52  [key=2, style=dotted];
m35_33 -> m35_33  [key=1, style=dashed, color=darkseagreen4, label=job];
m35_33 -> m35_50  [key=2, style=dotted, color=green];
m35_34 -> m35_35  [key=0, style=solid];
m35_34 -> m35_39  [key=2, style=dotted];
m35_34 -> m35_45  [key=1, style=dashed, color=green, label=jobData];
m35_34 -> m35_46  [key=1, style=dashed, color=green, label=jobData];
m35_34 -> m35_51  [key=2, style=dotted];
m35_34 -> m35_37  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m35_34 -> m35_40  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m35_38 -> m35_0  [key=0, style=bold, color=blue];
m35_38 -> m35_48  [key=0, style=solid];
m35_47 -> m35_48  [key=0, style=solid];
m35_48 -> m35_26  [key=0, style=bold, color=blue];
m35_46 -> m35_47  [key=0, style=solid, color=green];
m35_46 -> m35_25  [key=2, style=dotted, color=green];
m35_44 -> m35_45  [key=0, style=solid, color=green];
m35_44 -> m35_47  [key=1, style=dashed, color=darkseagreen4, label=loadSucceeded];
m35_39 -> m35_40  [key=0, style=solid];
m35_39 -> m35_47  [key=1, style=dashed, color=darkseagreen4, label=loadSucceeded];
m35_39 -> m35_39  [key=3, color=darkorchid, style=bold, label="Local variable bool loadSucceeded"];
m35_41 -> m35_42  [key=0, style=solid];
m35_45 -> m35_46  [key=0, style=solid, color=green];
m35_45 -> m35_24  [key=2, style=dotted, color=green];
m35_42 -> m35_45  [key=0, style=solid, color=green];
m35_42 -> m35_43  [key=0, style=solid];
m35_40 -> m35_45  [key=0, style=solid, color=green];
m35_40 -> m35_41  [key=0, style=solid];
m35_40 -> m35_53  [key=2, style=dotted];
m35_43 -> m35_46  [key=1, style=dashed, color=green, label="Hangfire.States.IState"];
m35_43 -> m35_44  [key=0, style=solid];
m35_43 -> m35_43  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m35_43 -> m35_54  [key=2, style=dotted];
m35_43 -> m35_55  [key=2, style=dotted];
m35_53 -> m35_0  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.States.IStateChangeProcess _stateChangeProcess"];
m35_56 -> m35_57  [key=0, style=solid];
m35_56 -> m35_67  [key=2, style=dotted];
m35_56 -> m35_58  [key=1, style=dashed, color=darkseagreen4, label=electStateContext];
m35_57 -> m35_58  [key=0, style=solid];
m35_57 -> m35_68  [key=2, style=dotted];
m35_57 -> m35_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_14  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_15  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_17  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_18  [key=1, style=dashed, color=red, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_19  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_27  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_57 -> m35_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Web.Pages.EnqueuedJobsPage"];
m35_59 -> m35_60  [key=0, style=solid];
m35_59 -> m35_70  [key=2, style=dotted];
m35_64 -> m35_65  [key=0, style=solid];
m35_64 -> m35_70  [key=2, style=dotted];
m35_58 -> m35_59  [key=0, style=solid];
m35_58 -> m35_69  [key=2, style=dotted];
m35_63 -> m35_64  [key=0, style=solid];
m35_63 -> m35_69  [key=2, style=dotted];
m35_63 -> m35_71  [key=2, style=dotted];
m35_60 -> m35_66  [key=0, style=solid];
m35_65 -> m35_66  [key=0, style=solid];
m35_62 -> m35_63  [key=0, style=solid];
m35_62 -> m35_54  [key=2, style=dotted];
m35_61 -> m35_62  [key=0, style=solid];
m35_66 -> m35_25  [key=0, style=bold, color=blue];
m35_70 -> m35_72  [key=0, style=solid];
m35_70 -> m35_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.ApplyStateContext"];
m35_70 -> m35_36  [key=3, color=darkorchid, style=bold, label="Parameter variable bool useFilters"];
m35_70 -> m35_58  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ApplyStateContext context"];
m35_70 -> m35_63  [key=3, color=darkorchid, style=bold, label="Parameter variable Hangfire.States.ApplyStateContext context"];
m35_70 -> m35_39  [key=3, color=darkorchid, style=bold, label="Parameter variable bool useFilters"];
m35_72 -> m35_73  [key=0, style=solid];
m35_72 -> m35_76  [key=2, style=dotted];
m35_72 -> m35_74  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m35_73 -> m35_74  [key=0, style=solid];
m35_73 -> m35_77  [key=2, style=dotted];
m35_74 -> m35_75  [key=0, style=solid];
m35_74 -> m35_78  [key=2, style=dotted];
m35_75 -> m35_70  [key=0, style=bold, color=blue];
m35_79 -> m35_17  [key=1, style=dashed, color=green, label="Hangfire.States.StateMachine"];
m35_79 -> m35_33  [key=1, style=dashed, color=green, label="Hangfire.States.StateMachine"];
m35_79 -> m35_46  [key=1, style=dashed, color=green, label="Hangfire.States.StateMachine"];
m35_79 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m35_79 -> m35_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m35_79 -> m35_19  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m35_79 -> m35_34  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m35_79 -> m35_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m35_79 -> m35_57  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m35_79 -> m35_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m35_79 -> m35_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m35_79 -> m35_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m35_79 -> m35_73  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachine"];
m36_17 -> m36_19  [key=0, style=solid, color=red];
m36_19 -> m36_20  [key=0, style=solid, color=red];
m36_19 -> m36_21  [key=2, style=dotted, color=red];
m36_20 -> m36_17  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid];
m36_0 -> m36_5  [key=1, style=dashed, color=green, label="Hangfire.JobStorage"];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_3  [key=0, style=solid, color=green];
m36_5 -> m36_6  [key=0, style=solid, color=green];
m36_5 -> m36_10  [key=2, style=dotted, color=green];
m36_5 -> m36_9  [key=2, style=dotted, color=green];
m36_2 -> m36_6  [key=0, style=solid];
m36_2 -> d10  [key=2, style=dotted];
m36_3 -> m36_4  [key=0, style=solid, color=green];
m36_3 -> m36_8  [key=2, style=dotted, color=green];
m36_4 -> m36_5  [key=0, style=solid, color=green];
m36_4 -> m36_9  [key=2, style=dotted, color=green];
m36_6 -> m36_0  [key=0, style=bold, color=blue];
m36_11 -> m36_12  [key=0, style=solid];
m36_11 -> m36_15  [key=1, style=dashed, color=green, label="Hangfire.Storage.IStorageConnection"];
m36_12 -> m36_13  [key=0, style=solid];
m36_12 -> m36_14  [key=0, style=solid, color=red];
m36_15 -> m36_16  [key=0, style=solid, color=green];
m36_15 -> m36_18  [key=2, style=dotted, color=green];
m36_13 -> m36_16  [key=0, style=solid];
m36_13 -> d10  [key=2, style=dotted];
m36_14 -> m36_15  [key=0, style=solid, color=green];
m36_14 -> m36_17  [key=2, style=dotted, color=red];
m36_16 -> m36_11  [key=0, style=bold, color=blue];
m36_22 -> m36_3  [key=1, style=dashed, color=green, label="Hangfire.States.StateMachineFactory"];
m36_22 -> m36_4  [key=1, style=dashed, color=green, label="Hangfire.States.StateMachineFactory"];
m36_22 -> m36_5  [key=1, style=dashed, color=green, label="Hangfire.States.StateMachineFactory"];
m36_22 -> m36_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.StateMachineFactory"];
m36_22 -> m36_19  [key=1, style=dashed, color=red, label="Hangfire.States.StateMachineFactory"];
m37_123 -> m37_124  [key=0, style=solid];
m37_124 -> m37_125  [key=0, style=solid, color=red];
m37_124 -> m37_70  [key=2, style=dotted];
m37_125 -> m37_126  [key=0, style=solid, color=red];
m37_125 -> m37_74  [key=2, style=dotted, color=red];
m37_125 -> m37_53  [key=2, style=dotted, color=red];
m37_126 -> m37_123  [key=0, style=bold, color=blue];
m37_214 -> m37_215  [key=0, style=solid, color=red];
m37_215 -> m37_216  [key=0, style=solid, color=red];
m37_215 -> m37_18  [key=2, style=dotted, color=red];
m37_215 -> m37_221  [key=2, style=dotted, color=red];
m37_215 -> m37_222  [key=2, style=dotted, color=red];
m37_215 -> m37_223  [key=1, style=dashed, color=red, label="lambda expression"];
m37_216 -> m37_217  [key=0, style=solid, color=red];
m37_216 -> m37_70  [key=2, style=dotted];
m37_217 -> m37_218  [key=0, style=solid, color=red];
m37_217 -> m37_135  [key=2, style=dotted, color=red];
m37_217 -> m37_219  [key=1, style=dashed, color=red, label=result];
m37_218 -> m37_219  [key=0, style=solid, color=red];
m37_218 -> m37_100  [key=2, style=dotted, color=red];
m37_218 -> m37_226  [key=1, style=dashed, color=red, label="lambda expression"];
m37_219 -> m37_220  [key=0, style=solid];
m37_219 -> m37_195  [key=2, style=dotted];
m37_220 -> m37_214  [key=0, style=bold, color=blue];
m37_17 -> m37_19  [key=1, style=dashed, color=green, label=stateMachine];
m37_17 -> m37_31  [key=1, style=dashed, color=green, label=stateMachine];
m37_17 -> m37_18  [key=0, style=solid];
m37_17 -> m37_33  [key=2, style=dotted];
m37_58 -> m37_59  [key=0, style=solid];
m37_59 -> m37_60  [key=0, style=solid];
m37_59 -> m37_38  [key=2, style=dotted];
m37_59 -> m37_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_60 -> m37_61  [key=0, style=solid];
m37_60 -> m37_53  [key=2, style=dotted];
m37_61 -> m37_58  [key=0, style=bold, color=blue];
m37_247 -> m37_248  [key=0, style=solid];
m37_248 -> m37_249  [key=0, style=solid];
m37_248 -> m37_18  [key=2, style=dotted];
m37_248 -> m37_22  [key=2, style=dotted];
m37_248 -> m37_236  [key=2, style=dotted];
m37_248 -> m37_221  [key=2, style=dotted];
m37_248 -> m37_19  [key=2, style=dotted];
m37_248 -> m37_255  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_249 -> m37_250  [key=0, style=solid];
m37_249 -> m37_18  [key=2, style=dotted];
m37_249 -> m37_19  [key=2, style=dotted];
m37_249 -> m37_258  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_250 -> m37_251  [key=0, style=solid, color=red];
m37_250 -> m37_70  [key=2, style=dotted];
m37_251 -> m37_252  [key=0, style=solid, color=red];
m37_251 -> m37_135  [key=2, style=dotted, color=red];
m37_251 -> m37_253  [key=1, style=dashed, color=red, label=result];
m37_252 -> m37_253  [key=0, style=solid, color=red];
m37_252 -> m37_100  [key=2, style=dotted, color=red];
m37_252 -> m37_261  [key=1, style=dashed, color=red, label="lambda expression"];
m37_253 -> m37_254  [key=0, style=solid, color=red];
m37_253 -> m37_168  [key=2, style=dotted, color=red];
m37_254 -> m37_247  [key=0, style=bold, color=blue];
m37_41 -> m37_42  [key=0, style=solid];
m37_41 -> m37_43  [key=2, style=dotted];
m37_21 -> m37_22  [key=0, style=solid];
m37_0 -> m37_1  [key=0, style=solid, color=red];
m37_0 -> m37_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.WorkerContext"];
m37_1 -> m37_2  [key=0, style=solid, color=red];
m37_1 -> m37_14  [key=2, style=dotted, color=red];
m37_1 -> m37_3  [key=0, style=solid];
m37_2 -> m37_3  [key=0, style=solid];
m37_2 -> m37_15  [key=2, style=dotted];
m37_2 -> m37_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_2 -> m37_4  [key=0, style=solid];
m37_2 -> d10  [key=2, style=dotted];
m37_3 -> m37_4  [key=0, style=solid];
m37_3 -> m37_16  [key=2, style=dotted];
m37_4 -> m37_5  [key=0, style=solid];
m37_4 -> m37_17  [key=2, style=dotted];
m37_4 -> m37_0  [key=0, style=bold, color=blue];
m37_5 -> m37_6  [key=0, style=solid];
m37_5 -> m37_18  [key=2, style=dotted];
m37_5 -> m37_19  [key=2, style=dotted];
m37_5 -> m37_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_6 -> m37_7  [key=0, style=solid, color=red];
m37_6 -> m37_20  [key=2, style=dotted];
m37_6 -> m37_8  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m37_7 -> m37_8  [key=0, style=solid, color=red];
m37_7 -> m37_21  [key=2, style=dotted, color=red];
m37_7 -> m37_11  [key=2, style=dotted];
m37_7 -> m37_9  [key=1, style=dashed, color=darkseagreen4, label=connection];
m37_8 -> m37_9  [key=0, style=solid, color=red];
m37_8 -> m37_18  [key=2, style=dotted, color=red];
m37_8 -> m37_19  [key=2, style=dotted, color=red];
m37_8 -> m37_31  [key=1, style=dashed, color=red, label="lambda expression"];
m37_8 -> m37_12  [key=2, style=dotted];
m37_9 -> m37_10  [key=0, style=solid];
m37_9 -> m37_18  [key=2, style=dotted];
m37_9 -> m37_19  [key=2, style=dotted];
m37_9 -> m37_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_9 -> m37_13  [key=2, style=dotted];
m37_9 -> m37_3  [key=3, color=darkorchid, style=bold, label="Property variable string OldStateName"];
m37_10 -> m37_11  [key=0, style=solid];
m37_10 -> m37_18  [key=2, style=dotted];
m37_10 -> m37_22  [key=2, style=dotted];
m37_10 -> m37_19  [key=2, style=dotted];
m37_10 -> m37_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_10 -> m37_6  [key=0, style=bold, color=blue];
m37_11 -> m37_12  [key=0, style=solid];
m37_11 -> m37_23  [key=2, style=dotted];
m37_12 -> m37_13  [key=0, style=solid];
m37_12 -> m37_18  [key=2, style=dotted];
m37_12 -> m37_19  [key=2, style=dotted];
m37_12 -> m37_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_13 -> m37_0  [key=0, style=bold, color=blue];
m37_13 -> m37_19  [key=1, style=dashed, color=green, label=string];
m37_13 -> m37_31  [key=1, style=dashed, color=green, label=string];
m37_13 -> m37_17  [key=0, style=solid];
m37_13 -> m37_22  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_13 -> m37_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_13 -> m37_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.IJobPerformanceProcess"];
m37_36 -> m37_37  [key=0, style=solid];
m37_36 -> m37_38  [key=2, style=dotted];
m37_36 -> m37_39  [key=2, style=dotted];
m37_145 -> m37_146  [key=0, style=solid];
m37_146 -> m37_147  [key=0, style=solid, color=red];
m37_146 -> m37_70  [key=2, style=dotted];
m37_146 -> m37_151  [key=1, style=dashed, color=red, label=stateMachine];
m37_147 -> m37_148  [key=0, style=solid, color=red];
m37_147 -> m37_38  [key=2, style=dotted, color=red];
m37_147 -> m37_150  [key=1, style=dashed, color=red, label="lambda expression"];
m37_148 -> m37_149  [key=0, style=solid];
m37_148 -> m37_53  [key=2, style=dotted];
m37_149 -> m37_145  [key=0, style=bold, color=blue];
m37_14 -> m37_15  [key=0, style=solid, color=green];
m37_15 -> m37_16  [key=0, style=solid, color=green];
m37_16 -> m37_14  [key=0, style=bold, color=blue];
m37_267 -> m37_268  [key=0, style=solid, color=red];
m37_268 -> m37_269  [key=0, style=solid, color=red];
m37_268 -> m37_70  [key=2, style=dotted, color=red];
m37_269 -> m37_270  [key=0, style=solid, color=red];
m37_269 -> m37_135  [key=2, style=dotted, color=red];
m37_269 -> m37_272  [key=1, style=dashed, color=red, label=result];
m37_270 -> m37_271  [key=0, style=solid, color=red];
m37_270 -> m37_100  [key=2, style=dotted, color=red];
m37_270 -> m37_274  [key=1, style=dashed, color=red, label="lambda expression"];
m37_272 -> m37_273  [key=0, style=solid];
m37_272 -> m37_168  [key=2, style=dotted];
m37_271 -> m37_272  [key=0, style=solid, color=red];
m37_271 -> m37_100  [key=2, style=dotted, color=red];
m37_271 -> m37_280  [key=1, style=dashed, color=red, label="lambda expression"];
m37_273 -> m37_267  [key=0, style=bold, color=blue];
m37_176 -> m37_177  [key=0, style=solid];
m37_177 -> m37_178  [key=0, style=solid, color=red];
m37_177 -> m37_70  [key=2, style=dotted];
m37_178 -> m37_179  [key=0, style=solid, color=red];
m37_178 -> m37_135  [key=2, style=dotted, color=red];
m37_179 -> m37_180  [key=0, style=solid, color=red];
m37_179 -> m37_100  [key=2, style=dotted, color=red];
m37_179 -> m37_181  [key=1, style=dashed, color=red, label="lambda expression"];
m37_180 -> m37_176  [key=0, style=bold, color=blue];
m37_83 -> m37_84  [key=0, style=solid];
m37_84 -> m37_85  [key=0, style=solid, color=red];
m37_84 -> m37_70  [key=2, style=dotted];
m37_84 -> m37_89  [key=1, style=dashed, color=red, label=stateMachine];
m37_85 -> m37_86  [key=0, style=solid, color=red];
m37_85 -> m37_38  [key=2, style=dotted, color=red];
m37_85 -> m37_88  [key=1, style=dashed, color=red, label="lambda expression"];
m37_86 -> m37_87  [key=0, style=solid];
m37_86 -> m37_53  [key=2, style=dotted];
m37_87 -> m37_83  [key=0, style=bold, color=blue];
m37_127 -> m37_128  [key=0, style=solid];
m37_128 -> m37_129  [key=0, style=solid, color=red];
m37_128 -> m37_70  [key=2, style=dotted];
m37_128 -> m37_133  [key=1, style=dashed, color=red, label=stateMachine];
m37_129 -> m37_130  [key=0, style=solid, color=red];
m37_129 -> m37_38  [key=2, style=dotted, color=red];
m37_129 -> m37_132  [key=1, style=dashed, color=red, label="lambda expression"];
m37_130 -> m37_131  [key=0, style=solid];
m37_130 -> m37_53  [key=2, style=dotted];
m37_131 -> m37_127  [key=0, style=bold, color=blue];
m37_35 -> m37_36  [key=0, style=solid];
m37_49 -> m37_50  [key=0, style=solid, color=red];
m37_50 -> m37_51  [key=0, style=solid, color=red];
m37_50 -> m37_38  [key=2, style=dotted, color=red];
m37_50 -> m37_54  [key=1, style=dashed, color=red, label="lambda expression"];
m37_51 -> m37_52  [key=0, style=solid];
m37_51 -> m37_53  [key=2, style=dotted];
m37_52 -> m37_49  [key=0, style=bold, color=blue];
m37_111 -> m37_112  [key=0, style=solid];
m37_112 -> m37_113  [key=0, style=solid, color=red];
m37_112 -> m37_70  [key=2, style=dotted];
m37_113 -> m37_114  [key=0, style=solid, color=red];
m37_113 -> m37_74  [key=2, style=dotted, color=red];
m37_114 -> m37_115  [key=0, style=solid, color=red];
m37_114 -> m37_100  [key=2, style=dotted, color=red];
m37_114 -> m37_116  [key=1, style=dashed, color=red, label="lambda expression"];
m37_115 -> m37_111  [key=0, style=bold, color=blue];
m37_37 -> m37_35  [key=0, style=bold, color=blue];
m37_27 -> m37_28  [key=0, style=solid];
m37_153 -> m37_154  [key=0, style=solid];
m37_154 -> m37_155  [key=0, style=solid, color=red];
m37_154 -> m37_70  [key=2, style=dotted];
m37_155 -> m37_156  [key=0, style=solid, color=red];
m37_155 -> m37_135  [key=2, style=dotted, color=red];
m37_156 -> m37_157  [key=0, style=solid];
m37_156 -> m37_100  [key=2, style=dotted];
m37_156 -> m37_158  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_157 -> m37_153  [key=0, style=bold, color=blue];
m37_40 -> m37_41  [key=0, style=solid];
m37_70 -> m37_323  [key=0, style=solid, color=red];
m37_323 -> m37_324  [key=0, style=solid, color=red];
m37_323 -> m37_57  [key=2, style=dotted, color=red];
m37_324 -> m37_70  [key=0, style=bold, color=blue];
m37_136 -> m37_137  [key=0, style=solid];
m37_137 -> m37_138  [key=0, style=solid, color=red];
m37_137 -> m37_70  [key=2, style=dotted];
m37_137 -> m37_142  [key=1, style=dashed, color=red, label=stateMachine];
m37_138 -> m37_139  [key=0, style=solid, color=red];
m37_138 -> m37_38  [key=2, style=dotted, color=red];
m37_138 -> m37_141  [key=1, style=dashed, color=red, label="lambda expression"];
m37_139 -> m37_140  [key=0, style=solid];
m37_139 -> m37_53  [key=2, style=dotted];
m37_140 -> m37_136  [key=0, style=bold, color=blue];
m37_33 -> m37_31  [key=0, style=bold, color=blue];
m37_18 -> m37_19  [key=0, style=solid, color=green];
m37_18 -> m37_34  [key=2, style=dotted];
m37_305 -> m37_306  [key=0, style=solid, color=red];
m37_306 -> m37_307  [key=0, style=solid, color=red];
m37_306 -> m37_313  [key=2, style=dotted, color=red];
m37_306 -> m37_310  [key=1, style=dashed, color=red, label=exception];
m37_306 -> m37_318  [key=1, style=dashed, color=red, label=exception];
m37_306 -> m37_321  [key=1, style=dashed, color=red, label=exception];
m37_307 -> m37_308  [key=0, style=solid, color=red];
m37_307 -> m37_18  [key=2, style=dotted, color=red];
m37_307 -> m37_222  [key=2, style=dotted, color=red];
m37_307 -> m37_314  [key=1, style=dashed, color=red, label="lambda expression"];
m37_310 -> m37_311  [key=0, style=solid, color=red];
m37_310 -> m37_100  [key=2, style=dotted, color=red];
m37_310 -> m37_317  [key=1, style=dashed, color=red, label="lambda expression"];
m37_308 -> m37_309  [key=0, style=solid, color=red];
m37_308 -> m37_70  [key=2, style=dotted, color=red];
m37_309 -> m37_310  [key=0, style=solid, color=red];
m37_309 -> m37_135  [key=2, style=dotted, color=red];
m37_309 -> m37_311  [key=1, style=dashed, color=red, label=result];
m37_311 -> m37_312  [key=0, style=solid, color=red];
m37_311 -> m37_195  [key=2, style=dotted, color=red];
m37_312 -> m37_305  [key=0, style=bold, color=blue];
m37_92 -> m37_93  [key=0, style=solid];
m37_93 -> m37_94  [key=0, style=solid];
m37_93 -> m37_15  [key=2, style=dotted];
m37_93 -> m37_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_93 -> m37_96  [key=1, style=dashed, color=red, label=job];
m37_93 -> m37_97  [key=1, style=dashed, color=darkseagreen4, label=job];
m37_93 -> m37_106  [key=1, style=dashed, color=darkseagreen4, label=job];
m37_94 -> m37_95  [key=0, style=solid];
m37_94 -> m37_99  [key=2, style=dotted];
m37_96 -> m37_97  [key=0, style=solid, color=red];
m37_96 -> m37_74  [key=2, style=dotted, color=red];
m37_97 -> m37_98  [key=0, style=solid];
m37_97 -> m37_100  [key=2, style=dotted];
m37_97 -> m37_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_95 -> m37_96  [key=0, style=solid, color=red];
m37_95 -> m37_70  [key=2, style=dotted];
m37_98 -> m37_92  [key=0, style=bold, color=blue];
m37_205 -> m37_206  [key=0, style=solid];
m37_206 -> m37_207  [key=0, style=solid, color=red];
m37_206 -> m37_70  [key=2, style=dotted];
m37_207 -> m37_208  [key=0, style=solid, color=red];
m37_207 -> m37_135  [key=2, style=dotted, color=red];
m37_208 -> m37_209  [key=0, style=solid, color=red];
m37_208 -> m37_195  [key=2, style=dotted];
m37_209 -> m37_210  [key=0, style=solid, color=red];
m37_209 -> m37_100  [key=2, style=dotted, color=red];
m37_209 -> m37_211  [key=1, style=dashed, color=red, label="lambda expression"];
m37_210 -> m37_205  [key=0, style=bold, color=blue];
m37_75 -> m37_76  [key=0, style=solid];
m37_76 -> m37_77  [key=0, style=solid, color=red];
m37_76 -> m37_70  [key=2, style=dotted];
m37_76 -> m37_81  [key=1, style=dashed, color=red, label=stateMachine];
m37_77 -> m37_78  [key=0, style=solid, color=red];
m37_77 -> m37_38  [key=2, style=dotted, color=red];
m37_77 -> m37_80  [key=1, style=dashed, color=red, label="lambda expression"];
m37_78 -> m37_79  [key=0, style=solid];
m37_78 -> m37_53  [key=2, style=dotted];
m37_79 -> m37_75  [key=0, style=bold, color=blue];
m37_65 -> m37_66  [key=0, style=solid];
m37_66 -> m37_67  [key=0, style=solid, color=red];
m37_66 -> m37_70  [key=2, style=dotted];
m37_66 -> m37_72  [key=1, style=dashed, color=red, label=stateMachine];
m37_67 -> m37_68  [key=0, style=solid, color=red];
m37_67 -> m37_38  [key=2, style=dotted, color=red];
m37_67 -> m37_71  [key=1, style=dashed, color=red, label="lambda expression"];
m37_68 -> m37_69  [key=0, style=solid];
m37_68 -> m37_53  [key=2, style=dotted];
m37_69 -> m37_65  [key=0, style=bold, color=blue];
m37_23 -> m37_24  [key=0, style=solid];
m37_23 -> m37_37  [key=2, style=dotted];
m37_162 -> m37_163  [key=0, style=solid];
m37_163 -> m37_164  [key=0, style=solid, color=red];
m37_163 -> m37_70  [key=2, style=dotted];
m37_164 -> m37_165  [key=0, style=solid, color=red];
m37_164 -> m37_135  [key=2, style=dotted, color=red];
m37_164 -> m37_166  [key=1, style=dashed, color=red, label=result];
m37_165 -> m37_166  [key=0, style=solid, color=red];
m37_165 -> m37_100  [key=2, style=dotted, color=red];
m37_165 -> m37_169  [key=1, style=dashed, color=red, label="lambda expression"];
m37_166 -> m37_167  [key=0, style=solid];
m37_166 -> m37_168  [key=2, style=dotted];
m37_167 -> m37_162  [key=0, style=bold, color=blue];
m37_320 -> m37_321  [key=0, style=solid, color=red];
m37_24 -> m37_25  [key=0, style=solid];
m37_24 -> m37_38  [key=2, style=dotted];
m37_28 -> m37_29  [key=0, style=solid];
m37_28 -> m37_31  [key=0, style=solid, color=green];
m37_28 -> m37_41  [key=2, style=dotted];
m37_31 -> m37_32  [key=0, style=solid, color=green];
m37_31 -> m37_35  [key=2, style=dotted, color=green];
m37_44 -> m37_45  [key=0, style=solid];
m37_25 -> m37_26  [key=0, style=solid];
m37_25 -> m37_27  [key=2, style=dotted];
m37_25 -> m37_39  [key=2, style=dotted];
m37_26 -> m37_24  [key=0, style=bold, color=blue];
m37_26 -> m37_31  [key=0, style=solid, color=green];
m37_26 -> m37_27  [key=0, style=solid];
m37_26 -> m37_29  [key=0, style=solid];
m37_26 -> m37_40  [key=2, style=dotted];
m37_29 -> m37_30  [key=0, style=solid, color=green];
m37_30 -> m37_28  [key=0, style=bold, color=blue];
m37_30 -> m37_31  [key=0, style=solid, color=green];
m37_30 -> m37_41  [key=2, style=dotted, color=green];
m37_32 -> m37_33  [key=0, style=solid, color=red];
m37_32 -> m37_34  [key=2, style=dotted, color=red];
m37_32 -> m37_13  [key=0, style=bold, color=blue];
m37_42 -> m37_40  [key=0, style=bold, color=blue];
m37_42 -> m37_15  [key=1, style=dashed, color=green, label="HangFire.Server.Worker"];
m37_42 -> m37_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m37_42 -> m37_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m37_42 -> m37_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m37_42 -> m37_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m37_42 -> m37_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m37_42 -> m37_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m37_42 -> m37_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m37_45 -> m37_46  [key=0, style=solid];
m37_45 -> m37_47  [key=2, style=dotted];
m37_45 -> m37_38  [key=2, style=dotted];
m37_45 -> m37_48  [key=2, style=dotted];
m37_46 -> m37_44  [key=0, style=bold, color=blue];
m37_54 -> m37_55  [key=0, style=solid, color=red];
m37_55 -> m37_56  [key=0, style=solid, color=red];
m37_55 -> m37_57  [key=2, style=dotted, color=red];
m37_56 -> m37_54  [key=0, style=bold, color=blue];
m37_62 -> m37_63  [key=0, style=solid];
m37_63 -> m37_64  [key=0, style=solid];
m37_63 -> m37_57  [key=2, style=dotted];
m37_64 -> m37_62  [key=0, style=bold, color=blue];
m37_72 -> m37_73  [key=0, style=solid, color=red];
m37_72 -> m37_74  [key=2, style=dotted, color=red];
m37_71 -> m37_72  [key=0, style=solid, color=red];
m37_73 -> m37_71  [key=0, style=bold, color=blue];
m37_81 -> m37_82  [key=0, style=solid, color=red];
m37_81 -> m37_74  [key=2, style=dotted, color=red];
m37_80 -> m37_81  [key=0, style=solid, color=red];
m37_82 -> m37_80  [key=0, style=bold, color=blue];
m37_89 -> m37_90  [key=0, style=solid, color=red];
m37_89 -> m37_91  [key=2, style=dotted, color=red];
m37_88 -> m37_89  [key=0, style=solid, color=red];
m37_90 -> m37_88  [key=0, style=bold, color=blue];
m37_101 -> m37_102  [key=0, style=solid];
m37_106 -> m37_107  [key=0, style=solid];
m37_106 -> m37_38  [key=2, style=dotted];
m37_106 -> m37_39  [key=2, style=dotted];
m37_106 -> m37_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_105 -> m37_106  [key=0, style=solid];
m37_102 -> m37_103  [key=0, style=solid];
m37_102 -> m37_104  [key=2, style=dotted];
m37_103 -> m37_101  [key=0, style=bold, color=blue];
m37_107 -> m37_105  [key=0, style=bold, color=blue];
m37_108 -> m37_109  [key=0, style=solid];
m37_109 -> m37_110  [key=0, style=solid];
m37_110 -> m37_108  [key=0, style=bold, color=blue];
m37_116 -> m37_117  [key=0, style=solid, color=red];
m37_117 -> m37_118  [key=0, style=solid, color=red];
m37_117 -> m37_38  [key=2, style=dotted, color=red];
m37_117 -> m37_119  [key=2, style=dotted, color=red];
m37_117 -> m37_120  [key=1, style=dashed, color=red, label="lambda expression"];
m37_118 -> m37_116  [key=0, style=bold, color=blue];
m37_120 -> m37_121  [key=0, style=solid, color=red];
m37_121 -> m37_122  [key=0, style=solid, color=red];
m37_122 -> m37_120  [key=0, style=bold, color=blue];
m37_133 -> m37_134  [key=0, style=solid, color=red];
m37_133 -> m37_135  [key=2, style=dotted, color=red];
m37_132 -> m37_133  [key=0, style=solid, color=red];
m37_134 -> m37_132  [key=0, style=bold, color=blue];
m37_142 -> m37_143  [key=0, style=solid, color=red];
m37_142 -> m37_144  [key=2, style=dotted, color=red];
m37_141 -> m37_142  [key=0, style=solid, color=red];
m37_143 -> m37_141  [key=0, style=bold, color=blue];
m37_151 -> m37_152  [key=0, style=solid, color=red];
m37_151 -> m37_135  [key=2, style=dotted, color=red];
m37_150 -> m37_151  [key=0, style=solid, color=red];
m37_152 -> m37_150  [key=0, style=bold, color=blue];
m37_158 -> m37_159  [key=0, style=solid];
m37_159 -> m37_160  [key=0, style=solid];
m37_159 -> m37_161  [key=2, style=dotted];
m37_160 -> m37_158  [key=0, style=bold, color=blue];
m37_169 -> m37_170  [key=0, style=solid, color=red];
m37_170 -> m37_171  [key=0, style=solid, color=red];
m37_170 -> m37_38  [key=2, style=dotted, color=red];
m37_170 -> m37_119  [key=2, style=dotted, color=red];
m37_170 -> m37_172  [key=1, style=dashed, color=red, label="lambda expression"];
m37_171 -> m37_169  [key=0, style=bold, color=blue];
m37_172 -> m37_173  [key=0, style=solid, color=red];
m37_173 -> m37_174  [key=0, style=solid, color=red];
m37_173 -> m37_175  [key=2, style=dotted, color=red];
m37_174 -> m37_172  [key=0, style=bold, color=blue];
m37_181 -> m37_182  [key=0, style=solid, color=red];
m37_182 -> m37_183  [key=0, style=solid, color=red];
m37_182 -> m37_38  [key=2, style=dotted, color=red];
m37_182 -> m37_119  [key=2, style=dotted, color=red];
m37_182 -> m37_184  [key=1, style=dashed, color=red, label="lambda expression"];
m37_183 -> m37_181  [key=0, style=bold, color=blue];
m37_184 -> m37_185  [key=0, style=solid, color=red];
m37_185 -> m37_186  [key=0, style=solid, color=red];
m37_186 -> m37_184  [key=0, style=bold, color=blue];
m37_196 -> m37_197  [key=0, style=solid];
m37_199 -> m37_200  [key=0, style=solid];
m37_202 -> m37_203  [key=0, style=solid, color=red];
m37_197 -> m37_198  [key=0, style=solid];
m37_197 -> m37_38  [key=2, style=dotted];
m37_197 -> m37_43  [key=2, style=dotted];
m37_198 -> m37_196  [key=0, style=bold, color=blue];
m37_200 -> m37_201  [key=0, style=solid];
m37_200 -> m37_43  [key=2, style=dotted];
m37_201 -> m37_199  [key=0, style=bold, color=blue];
m37_203 -> m37_204  [key=0, style=solid, color=red];
m37_203 -> m37_38  [key=2, style=dotted, color=red];
m37_203 -> m37_119  [key=2, style=dotted, color=red];
m37_204 -> m37_202  [key=0, style=bold, color=blue];
m37_211 -> m37_212  [key=0, style=solid, color=red];
m37_212 -> m37_213  [key=0, style=solid, color=red];
m37_212 -> m37_38  [key=2, style=dotted, color=red];
m37_212 -> m37_119  [key=2, style=dotted, color=red];
m37_213 -> m37_211  [key=0, style=bold, color=blue];
m37_223 -> m37_224  [key=0, style=solid, color=red];
m37_226 -> m37_227  [key=0, style=solid, color=red];
m37_224 -> m37_225  [key=0, style=solid, color=red];
m37_224 -> m37_38  [key=2, style=dotted, color=red];
m37_224 -> m37_119  [key=2, style=dotted, color=red];
m37_225 -> m37_223  [key=0, style=bold, color=blue];
m37_227 -> m37_228  [key=0, style=solid, color=red];
m37_227 -> m37_38  [key=2, style=dotted, color=red];
m37_227 -> m37_119  [key=2, style=dotted, color=red];
m37_228 -> m37_226  [key=0, style=bold, color=blue];
m37_238 -> m37_239  [key=0, style=solid];
m37_241 -> m37_242  [key=0, style=solid, color=red];
m37_239 -> m37_240  [key=0, style=solid];
m37_239 -> m37_43  [key=2, style=dotted];
m37_240 -> m37_238  [key=0, style=bold, color=blue];
m37_242 -> m37_243  [key=0, style=solid, color=red];
m37_242 -> m37_38  [key=2, style=dotted, color=red];
m37_242 -> m37_119  [key=2, style=dotted, color=red];
m37_242 -> m37_244  [key=1, style=dashed, color=red, label="lambda expression"];
m37_243 -> m37_241  [key=0, style=bold, color=blue];
m37_244 -> m37_245  [key=0, style=solid, color=red];
m37_245 -> m37_246  [key=0, style=solid, color=red];
m37_246 -> m37_244  [key=0, style=bold, color=blue];
m37_255 -> m37_256  [key=0, style=solid];
m37_258 -> m37_259  [key=0, style=solid];
m37_261 -> m37_262  [key=0, style=solid, color=red];
m37_256 -> m37_257  [key=0, style=solid];
m37_256 -> m37_43  [key=2, style=dotted];
m37_257 -> m37_255  [key=0, style=bold, color=blue];
m37_259 -> m37_260  [key=0, style=solid];
m37_260 -> m37_258  [key=0, style=bold, color=blue];
m37_262 -> m37_263  [key=0, style=solid, color=red];
m37_262 -> m37_38  [key=2, style=dotted, color=red];
m37_262 -> m37_119  [key=2, style=dotted, color=red];
m37_262 -> m37_264  [key=1, style=dashed, color=red, label="lambda expression"];
m37_263 -> m37_261  [key=0, style=bold, color=blue];
m37_264 -> m37_265  [key=0, style=solid, color=red];
m37_265 -> m37_266  [key=0, style=solid, color=red];
m37_266 -> m37_264  [key=0, style=bold, color=blue];
m37_274 -> m37_275  [key=0, style=solid, color=red];
m37_280 -> m37_281  [key=0, style=solid, color=red];
m37_275 -> m37_276  [key=0, style=solid, color=red];
m37_275 -> m37_38  [key=2, style=dotted, color=red];
m37_275 -> m37_119  [key=2, style=dotted, color=red];
m37_275 -> m37_277  [key=1, style=dashed, color=red, label="lambda expression"];
m37_276 -> m37_274  [key=0, style=bold, color=blue];
m37_277 -> m37_278  [key=0, style=solid, color=red];
m37_278 -> m37_279  [key=0, style=solid, color=red];
m37_279 -> m37_277  [key=0, style=bold, color=blue];
m37_281 -> m37_282  [key=0, style=solid, color=red];
m37_281 -> m37_283  [key=2, style=dotted, color=red];
m37_282 -> m37_280  [key=0, style=bold, color=blue];
m37_297 -> m37_298  [key=0, style=solid, color=red];
m37_300 -> m37_301  [key=0, style=solid, color=red];
m37_300 -> m37_38  [key=2, style=dotted, color=red];
m37_300 -> m37_119  [key=2, style=dotted, color=red];
m37_300 -> m37_302  [key=1, style=dashed, color=red, label="lambda expression"];
m37_303 -> m37_304  [key=0, style=solid, color=red];
m37_292 -> m37_293  [key=0, style=solid, color=red];
m37_296 -> m37_297  [key=0, style=solid, color=red];
m37_299 -> m37_300  [key=0, style=solid, color=red];
m37_293 -> m37_294  [key=0, style=solid, color=red];
m37_293 -> m37_38  [key=2, style=dotted, color=red];
m37_293 -> m37_295  [key=2, style=dotted, color=red];
m37_294 -> m37_292  [key=0, style=bold, color=blue];
m37_298 -> m37_296  [key=0, style=bold, color=blue];
m37_301 -> m37_299  [key=0, style=bold, color=blue];
m37_302 -> m37_303  [key=0, style=solid, color=red];
m37_304 -> m37_302  [key=0, style=bold, color=blue];
m37_318 -> m37_319  [key=0, style=solid, color=red];
m37_318 -> m37_38  [key=2, style=dotted, color=red];
m37_318 -> m37_119  [key=2, style=dotted, color=red];
m37_318 -> m37_320  [key=1, style=dashed, color=red, label="lambda expression"];
m37_321 -> m37_322  [key=0, style=solid, color=red];
m37_314 -> m37_315  [key=0, style=solid, color=red];
m37_317 -> m37_318  [key=0, style=solid, color=red];
m37_315 -> m37_316  [key=0, style=solid, color=red];
m37_315 -> m37_38  [key=2, style=dotted, color=red];
m37_315 -> m37_119  [key=2, style=dotted, color=red];
m37_316 -> m37_314  [key=0, style=bold, color=blue];
m37_319 -> m37_317  [key=0, style=bold, color=blue];
m37_322 -> m37_320  [key=0, style=bold, color=blue];
m37_22 -> m37_24  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m37_22 -> m37_23  [key=0, style=solid];
m37_22 -> m37_36  [key=2, style=dotted];
m37_22 -> m37_25  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m37_284 -> m37_285  [key=0, style=solid, color=red];
m37_285 -> m37_286  [key=0, style=solid, color=red];
m37_285 -> m37_17  [key=2, style=dotted, color=red];
m37_285 -> m37_297  [key=1, style=dashed, color=red, label=anotherState];
m37_285 -> m37_289  [key=1, style=dashed, color=red, label=anotherState];
m37_285 -> m37_300  [key=1, style=dashed, color=red, label=anotherState];
m37_285 -> m37_303  [key=1, style=dashed, color=red, label=anotherState];
m37_286 -> m37_287  [key=0, style=solid, color=red];
m37_286 -> m37_18  [key=2, style=dotted, color=red];
m37_286 -> m37_291  [key=2, style=dotted, color=red];
m37_286 -> m37_292  [key=1, style=dashed, color=red, label="lambda expression"];
m37_286 -> m37_296  [key=1, style=dashed, color=red, label="lambda expression"];
m37_289 -> m37_290  [key=0, style=solid, color=red];
m37_289 -> m37_100  [key=2, style=dotted, color=red];
m37_289 -> m37_299  [key=1, style=dashed, color=red, label="lambda expression"];
m37_287 -> m37_288  [key=0, style=solid, color=red];
m37_287 -> m37_70  [key=2, style=dotted, color=red];
m37_288 -> m37_289  [key=0, style=solid, color=red];
m37_288 -> m37_135  [key=2, style=dotted, color=red];
m37_290 -> m37_284  [key=0, style=bold, color=blue];
m37_229 -> m37_230  [key=0, style=solid];
m37_230 -> m37_231  [key=0, style=solid];
m37_230 -> m37_18  [key=2, style=dotted];
m37_230 -> m37_22  [key=2, style=dotted];
m37_230 -> m37_236  [key=2, style=dotted];
m37_230 -> m37_237  [key=2, style=dotted];
m37_230 -> m37_19  [key=2, style=dotted];
m37_230 -> m37_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_231 -> m37_232  [key=0, style=solid, color=red];
m37_231 -> m37_70  [key=2, style=dotted];
m37_232 -> m37_233  [key=0, style=solid, color=red];
m37_232 -> m37_135  [key=2, style=dotted, color=red];
m37_232 -> m37_234  [key=1, style=dashed, color=red, label=result];
m37_233 -> m37_234  [key=0, style=solid, color=red];
m37_233 -> m37_100  [key=2, style=dotted, color=red];
m37_233 -> m37_241  [key=1, style=dashed, color=red, label="lambda expression"];
m37_234 -> m37_235  [key=0, style=solid];
m37_234 -> m37_195  [key=2, style=dotted];
m37_235 -> m37_229  [key=0, style=bold, color=blue];
m37_19 -> m37_20  [key=0, style=solid, color=green];
m37_19 -> m37_21  [key=0, style=solid, color=green];
m37_19 -> m37_35  [key=2, style=dotted, color=green];
m37_20 -> m37_32  [key=0, style=solid];
m37_187 -> m37_188  [key=0, style=solid];
m37_188 -> m37_189  [key=0, style=solid];
m37_188 -> m37_18  [key=2, style=dotted];
m37_188 -> m37_19  [key=2, style=dotted];
m37_188 -> m37_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_189 -> m37_190  [key=0, style=solid, color=red];
m37_189 -> m37_70  [key=2, style=dotted];
m37_190 -> m37_191  [key=0, style=solid, color=red];
m37_190 -> m37_135  [key=2, style=dotted, color=red];
m37_191 -> m37_192  [key=0, style=solid];
m37_191 -> m37_195  [key=2, style=dotted];
m37_192 -> m37_193  [key=0, style=solid, color=red];
m37_192 -> m37_100  [key=2, style=dotted];
m37_192 -> m37_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m37_193 -> m37_194  [key=0, style=solid, color=red];
m37_193 -> m37_100  [key=2, style=dotted, color=red];
m37_193 -> m37_202  [key=1, style=dashed, color=red, label="lambda expression"];
m37_194 -> m37_187  [key=0, style=bold, color=blue];
m37_325 -> m37_1  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_7  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_8  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_50  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_55  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_67  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_72  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_77  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_81  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_84  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_85  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_89  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_95  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_96  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_112  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_113  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_114  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_117  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_121  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_124  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_125  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_128  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_129  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_133  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_137  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_146  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_147  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_151  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_154  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_155  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_156  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_163  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_164  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_165  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_170  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_173  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_177  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_178  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_179  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_182  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_185  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_188  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_189  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_190  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_192  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_193  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_206  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_207  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_209  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_215  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_216  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_217  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_218  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_227  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_230  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_231  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_232  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_233  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_242  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_248  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_250  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_251  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_252  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_262  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_265  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_268  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_269  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_270  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_275  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_278  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_271  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_286  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_293  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_287  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_288  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_289  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_300  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_307  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_308  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_309  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_310  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_318  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_325 -> m37_323  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.States.StateMachineFacts"];
m37_326 -> m37_72  [key=1, style=dashed, color=red, label=stateMachine];
m37_327 -> m37_81  [key=1, style=dashed, color=red, label=stateMachine];
m37_328 -> m37_89  [key=1, style=dashed, color=red, label=stateMachine];
m37_329 -> m37_106  [key=1, style=dashed, color=darkseagreen4, label=job];
m37_330 -> m37_133  [key=1, style=dashed, color=red, label=stateMachine];
m37_331 -> m37_142  [key=1, style=dashed, color=red, label=stateMachine];
m37_332 -> m37_151  [key=1, style=dashed, color=red, label=stateMachine];
m37_333 -> m37_297  [key=1, style=dashed, color=red, label=anotherState];
m37_333 -> m37_300  [key=1, style=dashed, color=red, label=anotherState];
m37_333 -> m37_303  [key=1, style=dashed, color=red, label=anotherState];
m37_334 -> m37_318  [key=1, style=dashed, color=red, label=exception];
m37_334 -> m37_321  [key=1, style=dashed, color=red, label=exception];
m38_27 -> m38_28  [key=0, style=solid];
m38_28 -> m38_29  [key=0, style=solid];
m38_28 -> m38_33  [key=2, style=dotted];
m38_29 -> m38_30  [key=0, style=solid];
m38_29 -> m38_34  [key=2, style=dotted];
m38_29 -> m38_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_30 -> m38_31  [key=0, style=solid];
m38_30 -> m38_34  [key=2, style=dotted];
m38_30 -> m38_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_31 -> m38_32  [key=0, style=solid];
m38_31 -> m38_34  [key=2, style=dotted];
m38_31 -> m38_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_32 -> m38_27  [key=0, style=bold, color=blue];
m38_0 -> m38_3  [key=1, style=dashed, color=green, label="params string[]"];
m38_0 -> m38_1  [key=0, style=solid];
m38_0 -> m38_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_3 -> m38_4  [key=0, style=solid, color=red];
m38_2 -> m38_3  [key=0, style=solid, color=red];
m38_2 -> m38_10  [key=2, style=dotted];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_9  [key=2, style=dotted];
m38_4 -> m38_0  [key=0, style=bold, color=blue];
m38_4 -> m38_5  [key=0, style=solid];
m38_4 -> m38_11  [key=2, style=dotted];
m38_58 -> m38_59  [key=0, style=solid];
m38_59 -> m38_60  [key=0, style=solid];
m38_59 -> m38_63  [key=2, style=dotted];
m38_60 -> m38_61  [key=0, style=solid];
m38_60 -> m38_33  [key=2, style=dotted];
m38_61 -> m38_62  [key=0, style=solid];
m38_61 -> m38_34  [key=2, style=dotted];
m38_61 -> m38_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_62 -> m38_58  [key=0, style=bold, color=blue];
m38_5 -> m38_6  [key=0, style=solid];
m38_5 -> m38_7  [key=1, style=dashed, color=darkseagreen4, label=IOwinResponse];
m38_5 -> m38_12  [key=2, style=dotted];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_8  [key=0, style=solid];
m38_6 -> m38_13  [key=2, style=dotted];
m38_6 -> m38_14  [key=2, style=dotted];
m38_6 -> m38_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_7 -> m38_6  [key=0, style=solid];
m38_7 -> m38_9  [key=2, style=dotted];
m38_7 -> m38_10  [key=2, style=dotted];
m38_7 -> m38_8  [key=0, style=solid];
m38_7 -> m38_15  [key=2, style=dotted];
m38_8 -> m38_5  [key=0, style=bold, color=blue];
m38_8 -> m38_0  [key=0, style=bold, color=blue];
m38_20 -> m38_21  [key=0, style=solid];
m38_21 -> m38_22  [key=0, style=solid];
m38_21 -> m38_15  [key=2, style=dotted];
m38_21 -> m38_23  [key=1, style=dashed, color=darkseagreen4, label=statisticsHistoryFilter];
m38_22 -> m38_23  [key=0, style=solid];
m38_22 -> m38_25  [key=2, style=dotted];
m38_23 -> m38_24  [key=0, style=solid];
m38_23 -> m38_26  [key=2, style=dotted];
m38_24 -> m38_20  [key=0, style=bold, color=blue];
m38_11 -> m38_3  [key=1, style=dashed, color=green, label="HangFire.Dashboard.CombinedResourceDispatcher"];
m38_11 -> m38_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.CombinedResourceDispatcher"];
m38_11 -> m38_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.CombinedResourceDispatcher"];
m38_11 -> m38_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.CombinedResourceDispatcher"];
m38_11 -> m38_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Dashboard.CombinedResourceDispatcher"];
m38_92 -> m38_93  [key=0, style=solid];
m38_16 -> m38_17  [key=0, style=solid];
m38_17 -> m38_18  [key=0, style=solid];
m38_17 -> m38_19  [key=2, style=dotted];
m38_18 -> m38_16  [key=0, style=bold, color=blue];
m38_35 -> m38_36  [key=0, style=solid];
m38_38 -> m38_39  [key=0, style=solid];
m38_42 -> m38_43  [key=0, style=solid];
m38_36 -> m38_37  [key=0, style=solid];
m38_36 -> m38_19  [key=2, style=dotted];
m38_37 -> m38_35  [key=0, style=bold, color=blue];
m38_39 -> m38_40  [key=0, style=solid];
m38_39 -> m38_41  [key=2, style=dotted];
m38_40 -> m38_38  [key=0, style=bold, color=blue];
m38_43 -> m38_44  [key=0, style=solid];
m38_43 -> m38_45  [key=2, style=dotted];
m38_44 -> m38_42  [key=0, style=bold, color=blue];
m38_64 -> m38_65  [key=0, style=solid];
m38_65 -> m38_66  [key=0, style=solid];
m38_65 -> m38_19  [key=2, style=dotted];
m38_66 -> m38_64  [key=0, style=bold, color=blue];
m38_78 -> m38_79  [key=0, style=solid];
m38_78 -> m38_80  [key=2, style=dotted];
m38_78 -> m38_81  [key=2, style=dotted];
m38_78 -> m38_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_78 -> m38_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_83 -> m38_84  [key=0, style=solid];
m38_89 -> m38_90  [key=0, style=solid];
m38_89 -> m38_80  [key=2, style=dotted];
m38_89 -> d11  [key=2, style=dotted];
m38_89 -> m38_81  [key=2, style=dotted];
m38_89 -> m38_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_93 -> m38_94  [key=0, style=solid];
m38_77 -> m38_78  [key=0, style=solid];
m38_88 -> m38_89  [key=0, style=solid];
m38_79 -> m38_77  [key=0, style=bold, color=blue];
m38_82 -> m38_83  [key=0, style=solid];
m38_85 -> m38_86  [key=0, style=solid];
m38_84 -> m38_82  [key=0, style=bold, color=blue];
m38_86 -> m38_87  [key=0, style=solid];
m38_87 -> m38_85  [key=0, style=bold, color=blue];
m38_90 -> m38_88  [key=0, style=bold, color=blue];
m38_94 -> m38_92  [key=0, style=bold, color=blue];
m38_50 -> m38_67  [key=0, style=solid];
m38_50 -> m38_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_50 -> m38_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_50 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_50 -> m38_72  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_50 -> m38_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_50 -> m38_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_50 -> m38_48  [key=3, color=darkorchid, style=bold, label="Parameter variable string prefix"];
m38_50 -> m38_54  [key=3, color=darkorchid, style=bold, label="Parameter variable string prefix"];
m38_67 -> m38_68  [key=0, style=solid];
m38_67 -> m38_74  [key=2, style=dotted];
m38_67 -> m38_71  [key=1, style=dashed, color=darkseagreen4, label=thisDay];
m38_67 -> m38_78  [key=1, style=dashed, color=darkseagreen4, label=thisDay];
m38_67 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label=thisDay];
m38_71 -> m38_72  [key=0, style=solid];
m38_71 -> m38_34  [key=2, style=dotted];
m38_71 -> m38_77  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_72 -> m38_73  [key=0, style=solid];
m38_72 -> m38_34  [key=2, style=dotted];
m38_72 -> m38_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_68 -> m38_69  [key=0, style=solid];
m38_68 -> m38_75  [key=2, style=dotted];
m38_68 -> m38_74  [key=2, style=dotted];
m38_68 -> m38_71  [key=1, style=dashed, color=darkseagreen4, label=prevDay];
m38_68 -> m38_78  [key=1, style=dashed, color=darkseagreen4, label=prevDay];
m38_68 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label=prevDay];
m38_69 -> m38_70  [key=0, style=solid];
m38_69 -> m38_74  [key=2, style=dotted];
m38_69 -> m38_72  [key=1, style=dashed, color=darkseagreen4, label=thisHour];
m38_69 -> m38_89  [key=1, style=dashed, color=darkseagreen4, label=thisHour];
m38_69 -> m38_93  [key=1, style=dashed, color=darkseagreen4, label=thisHour];
m38_70 -> m38_71  [key=0, style=solid];
m38_70 -> m38_76  [key=2, style=dotted];
m38_70 -> m38_74  [key=2, style=dotted];
m38_70 -> m38_72  [key=1, style=dashed, color=darkseagreen4, label=prevHour];
m38_70 -> m38_89  [key=1, style=dashed, color=darkseagreen4, label=prevHour];
m38_70 -> m38_93  [key=1, style=dashed, color=darkseagreen4, label=prevHour];
m38_73 -> m38_50  [key=0, style=bold, color=blue];
m38_51 -> m38_52  [key=0, style=solid];
m38_52 -> m38_53  [key=0, style=solid];
m38_52 -> m38_56  [key=2, style=dotted];
m38_52 -> m38_57  [key=2, style=dotted];
m38_53 -> m38_54  [key=0, style=solid];
m38_53 -> m38_33  [key=2, style=dotted];
m38_54 -> m38_55  [key=0, style=solid];
m38_54 -> m38_50  [key=2, style=dotted];
m38_55 -> m38_51  [key=0, style=bold, color=blue];
m38_46 -> m38_47  [key=0, style=solid];
m38_47 -> m38_48  [key=0, style=solid];
m38_47 -> m38_33  [key=2, style=dotted];
m38_48 -> m38_49  [key=0, style=solid];
m38_48 -> m38_50  [key=2, style=dotted];
m38_49 -> m38_46  [key=0, style=bold, color=blue];
m38_95 -> m38_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_3  [key=1, style=dashed, color=red, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_4  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_48  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_52  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_54  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_71  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_95 -> m38_72  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.StatisticsHistoryAttributeFacts"];
m38_96 -> m38_78  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_96 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_96 -> m38_89  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_96 -> m38_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_97 -> m38_78  [key=1, style=dashed, color=darkseagreen4, label=thisDay];
m38_97 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label=thisDay];
m38_98 -> m38_78  [key=1, style=dashed, color=darkseagreen4, label=prevDay];
m38_98 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label=prevDay];
m38_99 -> m38_89  [key=1, style=dashed, color=darkseagreen4, label=thisHour];
m38_99 -> m38_93  [key=1, style=dashed, color=darkseagreen4, label=thisHour];
m38_100 -> m38_89  [key=1, style=dashed, color=darkseagreen4, label=prevHour];
m38_100 -> m38_93  [key=1, style=dashed, color=darkseagreen4, label=prevHour];
m39_0 -> m39_1  [key=0, style=solid, color=red];
m39_0 -> m39_3  [key=1, style=dashed, color=red, label=string];
m39_0 -> m39_5  [key=1, style=dashed, color=red, label="Hangfire.Storage.IStorageConnection"];
m39_1 -> m39_2  [key=0, style=solid, color=red];
m39_1 -> m39_3  [key=0, style=solid, color=red];
m39_3 -> m39_4  [key=0, style=solid, color=red];
m39_3 -> m39_5  [key=0, style=solid, color=red];
m39_5 -> m39_6  [key=0, style=solid, color=red];
m39_5 -> m39_8  [key=2, style=dotted, color=red];
m39_5 -> m39_9  [key=2, style=dotted, color=red];
m39_2 -> m39_6  [key=0, style=solid, color=red];
m39_2 -> d10  [key=2, style=dotted, color=red];
m39_4 -> m39_6  [key=0, style=solid, color=red];
m39_4 -> d10  [key=2, style=dotted, color=red];
m39_6 -> m39_0  [key=0, style=bold, color=blue];
m39_10 -> m39_11  [key=0, style=solid];
m39_10 -> m39_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m39_10 -> m39_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m39_10 -> m39_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Storage.IStorageConnection"];
m39_10 -> m39_13  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.List<Hangfire.Storage.RecurringJobDto> GetRecurringJobs"];
m39_11 -> m39_12  [key=0, style=solid];
m39_11 -> m39_13  [key=0, style=solid];
m39_14 -> m39_15  [key=0, style=solid];
m39_14 -> m39_38  [key=2, style=dotted];
m39_16 -> m39_17  [key=0, style=solid];
m39_16 -> m39_8  [key=2, style=dotted];
m39_16 -> m39_39  [key=2, style=dotted];
m39_16 -> m39_20  [key=1, style=dashed, color=darkseagreen4, label=hash];
m39_16 -> m39_21  [key=1, style=dashed, color=darkseagreen4, label=hash];
m39_16 -> m39_25  [key=1, style=dashed, color=darkseagreen4, label=hash];
m39_16 -> m39_26  [key=1, style=dashed, color=darkseagreen4, label=hash];
m39_16 -> m39_27  [key=1, style=dashed, color=darkseagreen4, label=hash];
m39_16 -> m39_28  [key=1, style=dashed, color=darkseagreen4, label=hash];
m39_16 -> m39_32  [key=1, style=dashed, color=darkseagreen4, label=hash];
m39_16 -> m39_33  [key=1, style=dashed, color=darkseagreen4, label=hash];
m39_29 -> m39_30  [key=0, style=solid];
m39_29 -> m39_47  [key=2, style=dotted];
m39_29 -> m39_31  [key=1, style=dashed, color=darkseagreen4, label=stateData];
m39_12 -> m39_36  [key=0, style=solid];
m39_12 -> d10  [key=2, style=dotted];
m39_13 -> m39_14  [key=0, style=solid];
m39_13 -> m39_37  [key=2, style=dotted];
m39_13 -> m39_18  [key=1, style=dashed, color=darkseagreen4, label=result];
m39_13 -> m39_34  [key=1, style=dashed, color=darkseagreen4, label=result];
m39_13 -> m39_35  [key=1, style=dashed, color=darkseagreen4, label=result];
m39_18 -> m39_15  [key=0, style=solid];
m39_18 -> m39_40  [key=2, style=dotted];
m39_18 -> m39_41  [key=2, style=dotted];
m39_34 -> m39_15  [key=0, style=solid];
m39_34 -> m39_41  [key=2, style=dotted];
m39_35 -> m39_36  [key=0, style=solid];
m39_15 -> m39_16  [key=0, style=solid];
m39_15 -> m39_35  [key=0, style=solid];
m39_15 -> m39_18  [key=1, style=dashed, color=darkseagreen4, label=id];
m39_15 -> m39_19  [key=1, style=dashed, color=darkseagreen4, label=id];
m39_19 -> m39_20  [key=0, style=solid];
m39_19 -> m39_40  [key=2, style=dotted];
m39_19 -> m39_22  [key=1, style=dashed, color=darkseagreen4, label=dto];
m39_19 -> m39_24  [key=1, style=dashed, color=darkseagreen4, label=dto];
m39_19 -> m39_26  [key=1, style=dashed, color=darkseagreen4, label=dto];
m39_19 -> m39_28  [key=1, style=dashed, color=darkseagreen4, label=dto];
m39_19 -> m39_29  [key=1, style=dashed, color=darkseagreen4, label=dto];
m39_19 -> m39_31  [key=1, style=dashed, color=darkseagreen4, label=dto];
m39_19 -> m39_33  [key=1, style=dashed, color=darkseagreen4, label=dto];
m39_19 -> m39_34  [key=1, style=dashed, color=darkseagreen4, label=dto];
m39_17 -> m39_18  [key=0, style=solid];
m39_17 -> m39_19  [key=0, style=solid];
m39_20 -> m39_21  [key=0, style=solid];
m39_21 -> m39_22  [key=0, style=solid];
m39_21 -> m39_42  [key=2, style=dotted];
m39_25 -> m39_26  [key=0, style=solid];
m39_25 -> m39_27  [key=0, style=solid];
m39_25 -> m39_44  [key=2, style=dotted];
m39_26 -> m39_27  [key=0, style=solid];
m39_26 -> m39_45  [key=2, style=dotted];
m39_27 -> m39_28  [key=0, style=solid];
m39_27 -> m39_32  [key=0, style=solid];
m39_27 -> m39_44  [key=2, style=dotted];
m39_27 -> m39_46  [key=2, style=dotted];
m39_28 -> m39_29  [key=0, style=solid];
m39_32 -> m39_33  [key=0, style=solid];
m39_32 -> m39_34  [key=0, style=solid];
m39_32 -> m39_44  [key=2, style=dotted];
m39_33 -> m39_34  [key=0, style=solid];
m39_33 -> m39_45  [key=2, style=dotted];
m39_22 -> m39_23  [key=0, style=solid];
m39_22 -> m39_25  [key=0, style=solid];
m39_22 -> m39_43  [key=2, style=dotted];
m39_24 -> m39_25  [key=0, style=solid];
m39_31 -> m39_32  [key=0, style=solid];
m39_23 -> m39_24  [key=0, style=solid];
m39_30 -> m39_31  [key=0, style=solid];
m39_30 -> m39_32  [key=0, style=solid];
m39_36 -> m39_10  [key=0, style=bold, color=blue];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_0  [key=0, style=bold, color=blue];
m40_2 -> m40_3  [key=0, style=solid];
m40_3 -> m40_2  [key=0, style=bold, color=blue];
m40_4 -> m40_5  [key=0, style=solid];
m40_5 -> m40_4  [key=0, style=bold, color=blue];
m41_22 -> m41_23  [key=0, style=solid];
m41_23 -> m41_24  [key=0, style=solid];
m41_24 -> m41_22  [key=0, style=bold, color=blue];
m41_6 -> m41_7  [key=0, style=solid];
m41_6 -> m41_8  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m41_6 -> m41_9  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m41_7 -> m41_8  [key=0, style=solid];
m41_7 -> m41_17  [key=2, style=dotted];
m41_7 -> m41_9  [key=1, style=dashed, color=darkseagreen4, label=connection];
m41_8 -> m41_9  [key=0, style=solid];
m41_8 -> m41_18  [key=2, style=dotted];
m41_8 -> m41_10  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m41_8 -> m41_12  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m41_8 -> m41_14  [key=1, style=dashed, color=darkseagreen4, label=fetchedJob];
m41_9 -> m41_10  [key=0, style=solid];
m41_9 -> m41_19  [key=2, style=dotted];
m41_10 -> m41_11  [key=0, style=solid];
m41_10 -> m41_13  [key=0, style=solid];
m41_10 -> m41_16  [key=0, style=solid];
m41_10 -> m41_20  [key=2, style=dotted];
m41_12 -> m41_16  [key=0, style=solid];
m41_12 -> m41_20  [key=2, style=dotted];
m41_14 -> m41_15  [key=0, style=solid];
m41_14 -> m41_21  [key=2, style=dotted];
m41_11 -> m41_12  [key=0, style=solid];
m41_13 -> m41_14  [key=0, style=solid];
m41_15 -> m41_16  [key=0, style=solid];
m41_16 -> m41_6  [key=0, style=bold, color=blue];
m41_58 -> m41_0  [key=3, color=darkorchid, style=bold, label="Field variable Hangfire.Server.WorkerContext _context"];
m41_19 -> m41_25  [key=0, style=solid];
m41_19 -> m41_27  [key=1, style=dashed, color=red, label=string];
m41_19 -> m41_30  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_19 -> m41_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_19 -> m41_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m41_19 -> m41_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.IJobPerformanceProcess"];
m41_19 -> m41_45  [key=1, style=dashed, color=red, label=string];
m41_25 -> m41_26  [key=0, style=solid];
m41_25 -> m41_47  [key=2, style=dotted];
m41_25 -> m41_27  [key=1, style=dashed, color=red, label=stateMachine];
m41_25 -> m41_45  [key=1, style=dashed, color=red, label=stateMachine];
m41_27 -> m41_28  [key=0, style=solid, color=red];
m41_27 -> m41_29  [key=0, style=solid, color=red];
m41_27 -> m41_49  [key=2, style=dotted, color=red];
m41_30 -> m41_31  [key=0, style=solid];
m41_30 -> m41_50  [key=2, style=dotted];
m41_30 -> m41_33  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m41_30 -> m41_34  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m41_30 -> m41_36  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m41_32 -> m41_33  [key=0, style=solid];
m41_32 -> m41_52  [key=2, style=dotted];
m41_33 -> m41_34  [key=0, style=solid];
m41_33 -> m41_53  [key=2, style=dotted];
m41_33 -> m41_36  [key=1, style=dashed, color=darkseagreen4, label=performContext];
m41_36 -> m41_37  [key=0, style=solid];
m41_36 -> m41_55  [key=2, style=dotted];
m41_36 -> m41_38  [key=1, style=dashed, color=darkseagreen4, label=result];
m41_45 -> m41_46  [key=0, style=solid, color=red];
m41_45 -> m41_49  [key=2, style=dotted, color=red];
m41_26 -> m41_27  [key=0, style=solid, color=red];
m41_26 -> m41_48  [key=2, style=dotted];
m41_28 -> m41_46  [key=0, style=solid];
m41_29 -> m41_30  [key=0, style=solid];
m41_31 -> m41_32  [key=0, style=solid];
m41_31 -> m41_51  [key=2, style=dotted];
m41_34 -> m41_35  [key=0, style=solid];
m41_34 -> m41_38  [key=1, style=dashed, color=darkseagreen4, label=latency];
m41_35 -> m41_36  [key=0, style=solid];
m41_35 -> m41_54  [key=2, style=dotted];
m41_35 -> m41_37  [key=1, style=dashed, color=darkseagreen4, label=duration];
m41_35 -> m41_38  [key=1, style=dashed, color=darkseagreen4, label=duration];
m41_38 -> m41_39  [key=0, style=solid];
m41_38 -> m41_41  [key=0, style=solid];
m41_38 -> m41_43  [key=0, style=solid];
m41_38 -> m41_45  [key=0, style=solid, color=red];
m41_38 -> m41_57  [key=2, style=dotted];
m41_37 -> m41_38  [key=0, style=solid];
m41_37 -> m41_56  [key=2, style=dotted];
m41_39 -> m41_40  [key=0, style=solid];
m41_41 -> m41_42  [key=0, style=solid];
m41_43 -> m41_44  [key=0, style=solid];
m41_40 -> m41_46  [key=0, style=solid];
m41_42 -> m41_45  [key=0, style=solid, color=red];
m41_42 -> m41_58  [key=2, style=dotted];
m41_44 -> m41_45  [key=0, style=solid, color=red];
m41_44 -> m41_58  [key=2, style=dotted];
m41_46 -> m41_19  [key=0, style=bold, color=blue];
m41_0 -> m41_1  [key=0, style=solid];
m41_0 -> m41_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.WorkerContext"];
m41_1 -> m41_2  [key=0, style=solid];
m41_1 -> m41_3  [key=0, style=solid];
m41_3 -> m41_4  [key=0, style=solid];
m41_2 -> m41_4  [key=0, style=solid];
m41_2 -> d10  [key=2, style=dotted];
m41_4 -> m41_0  [key=0, style=bold, color=blue];
m41_59 -> m41_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m41_59 -> m41_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m41_59 -> m41_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m41_59 -> m41_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m41_59 -> m41_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m41_59 -> m41_25  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m41_59 -> m41_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m41_59 -> m41_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m41_59 -> m41_33  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Server.Worker"];
m42_29 -> m42_30  [key=0, style=solid];
m42_30 -> m42_31  [key=0, style=solid];
m42_30 -> m42_32  [key=2, style=dotted];
m42_30 -> m42_33  [key=2, style=dotted];
m42_31 -> m42_29  [key=0, style=bold, color=blue];
m42_10 -> m42_11  [key=0, style=solid];
m42_11 -> m42_12  [key=0, style=solid];
m42_11 -> m42_15  [key=2, style=dotted];
m42_11 -> m42_5  [key=2, style=dotted];
m42_12 -> m42_13  [key=0, style=solid];
m42_12 -> m42_6  [key=2, style=dotted];
m42_13 -> m42_14  [key=0, style=solid];
m42_13 -> m42_7  [key=2, style=dotted];
m42_13 -> m42_8  [key=2, style=dotted];
m42_13 -> m42_9  [key=2, style=dotted];
m42_14 -> m42_10  [key=0, style=bold, color=blue];
m42_34 -> m42_35  [key=0, style=solid];
m42_35 -> m42_36  [key=0, style=solid];
m42_35 -> m42_32  [key=2, style=dotted];
m42_35 -> m42_37  [key=2, style=dotted];
m42_36 -> m42_34  [key=0, style=bold, color=blue];
m42_22 -> m42_23  [key=0, style=solid];
m42_23 -> m42_24  [key=0, style=solid];
m42_23 -> m42_26  [key=2, style=dotted];
m42_23 -> m42_27  [key=2, style=dotted];
m42_24 -> m42_25  [key=0, style=solid];
m42_24 -> m42_28  [key=2, style=dotted];
m42_25 -> m42_22  [key=0, style=bold, color=blue];
m42_38 -> m42_39  [key=0, style=solid];
m42_39 -> m42_40  [key=0, style=solid];
m42_39 -> m42_41  [key=2, style=dotted];
m42_40 -> m42_38  [key=0, style=bold, color=blue];
m42_16 -> m42_17  [key=0, style=solid];
m42_17 -> m42_18  [key=0, style=solid];
m42_17 -> m42_5  [key=2, style=dotted];
m42_18 -> m42_19  [key=0, style=solid];
m42_18 -> m42_6  [key=2, style=dotted];
m42_19 -> m42_20  [key=0, style=solid];
m42_19 -> m42_21  [key=2, style=dotted];
m42_19 -> m42_8  [key=2, style=dotted];
m42_19 -> m42_9  [key=2, style=dotted];
m42_20 -> m42_16  [key=0, style=bold, color=blue];
m42_0 -> m42_1  [key=0, style=solid];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_5  [key=2, style=dotted];
m42_1 -> m42_1  [key=3, color=darkorchid, style=bold, label="Field variable string Queue"];
m42_2 -> m42_3  [key=0, style=solid];
m42_2 -> m42_6  [key=2, style=dotted];
m42_3 -> m42_4  [key=0, style=solid];
m42_3 -> m42_7  [key=2, style=dotted];
m42_3 -> m42_8  [key=2, style=dotted];
m42_3 -> m42_9  [key=2, style=dotted];
m42_4 -> m42_0  [key=0, style=bold, color=blue];
m42_42 -> m42_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.SchedulePollerSteps"];
m42_42 -> m42_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.SchedulePollerSteps"];
}
