digraph  {
m0_21 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="EnqueuedState.feature.cs", label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m0_13 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="EnqueuedState.feature.cs", label="initialState == null", span="55-55"];
m0_24 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedState.feature.cs", label="String.IsNullOrWhiteSpace(name)", span="98-98"];
m0_65 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="filters.Reverse()", span="117-117"];
m0_66 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="filter.OnClientException(context)", span="119-119"];
m0_67 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114"];
m0_0 [cluster="HangFire.Client.JobCreator.JobCreator()", file="EnqueuedState.feature.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m0_1 [cluster="HangFire.Client.JobCreator.JobCreator()", file="EnqueuedState.feature.cs", label="Current = new JobCreator()", span="14-14"];
m0_2 [cluster="HangFire.Client.JobCreator.JobCreator()", file="EnqueuedState.feature.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m0_3 [cluster="HangFire.Client.JobCreator.JobCreator()", file="EnqueuedState.feature.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="20-20"];
m0_4 [cluster="HangFire.Client.JobCreator.JobCreator()", file="EnqueuedState.feature.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="20-20"];
m0_5 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m0_45 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", file="EnqueuedState.feature.cs", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
m0_46 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="EnqueuedState.feature.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m0_47 [cluster="string.Format(string, object)", file="EnqueuedState.feature.cs", label="Entry string.Format(string, object)", span="0-0"];
m0_48 [cluster="HangFire.Client.CreateContext.CreateJob()", file="EnqueuedState.feature.cs", label="Entry HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m0_51 [cluster="HangFire.Client.CreateContext.CreateJob()", color=red, community=0, file="EnqueuedState.feature.cs", label="1: _jobWasCreated = true", span="152-152"];
m0_54 [cluster="HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", color=red, community=0, file="EnqueuedState.feature.cs", label="1: Entry HangFire.States.IStateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="23-23"];
m0_55 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", color=red, community=0, file="EnqueuedState.feature.cs", label="1: HangFire.Client.CreateContext", span=""];
m0_59 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="EnqueuedState.feature.cs", label="filter.OnCreated(postContext)", span="108-108"];
m0_49 [cluster="HangFire.Client.CreateContext.CreateJob()", color=red, community=0, file="EnqueuedState.feature.cs", label="1: var stateMachine = _stateMachineFactory.Create(Connection)", span="149-149"];
m0_50 [cluster="HangFire.Client.CreateContext.CreateJob()", color=red, community=0, file="EnqueuedState.feature.cs", label="1: JobId = stateMachine.CreateInState(Job, _parameters, InitialState)", span="151-151"];
m0_52 [cluster="HangFire.Client.CreateContext.CreateJob()", color=red, community=0, file="EnqueuedState.feature.cs", label="1: Exit HangFire.Client.CreateContext.CreateJob()", span="147-147"];
m0_58 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="EnqueuedState.feature.cs", label="!wasError", span="106-106"];
m0_53 [cluster="HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", color=red, community=0, file="EnqueuedState.feature.cs", label="1: Entry HangFire.States.IStateMachineFactory.Create(HangFire.Storage.IStorageConnection)", span="8-8"];
m0_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", color=red, community=0, file="EnqueuedState.feature.cs", label="1: !postContext.ExceptionHandled", span="100-100"];
m0_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="EnqueuedState.feature.cs", label="return postContext;", span="111-111"];
m0_57 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="EnqueuedState.feature.cs", label="throw;", span="102-102"];
m0_61 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="EnqueuedState.feature.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m0_68 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="EnqueuedState.feature.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="4-4"];
m0_31 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedState.feature.cs", label="_parameters[name] = serializedValue", span="113-113"];
m0_33 [cluster="Unk.thunk", file="EnqueuedState.feature.cs", label="Entry Unk.thunk", span=""];
m0_30 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedState.feature.cs", label="_parameters.Add(name, serializedValue)", span="109-109"];
m0_64 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="EnqueuedState.feature.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="5-5"];
m0_39 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedState.feature.cs", label="String.IsNullOrWhiteSpace(name)", span="131-131"];
m0_32 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedState.feature.cs", label="Exit HangFire.Client.CreateContext.SetJobParameter(string, object)", span="96-96"];
m0_34 [cluster="lambda expression", file="EnqueuedState.feature.cs", label="Entry lambda expression", span="62-66"];
m0_22 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="EnqueuedState.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_25 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedState.feature.cs", label="throw new ArgumentNullException(''name'');", span="98-98"];
m0_26 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedState.feature.cs", label=_jobWasCreated, span="100-100"];
m0_27 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedState.feature.cs", label="throw new InvalidOperationException(''Could not set parameter for a created job.'');", span="102-102"];
m0_28 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", color=green, community=0, file="EnqueuedState.feature.cs", label="1: var serializedValue = JobHelper.ToJson(value)", span="105-105"];
m0_29 [cluster="HangFire.Client.CreateContext.SetJobParameter(string, object)", file="EnqueuedState.feature.cs", label="!_parameters.ContainsKey(name)", span="107-107"];
m0_14 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="EnqueuedState.feature.cs", label="throw new ArgumentNullException(''initialState'');", span="55-55"];
m0_15 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="EnqueuedState.feature.cs", label="_stateMachineFactory = stateMachineFactory", span="57-57"];
m0_17 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="EnqueuedState.feature.cs", label="Job = job", span="60-60"];
m0_16 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="EnqueuedState.feature.cs", label="Connection = connection", span="59-59"];
m0_18 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="EnqueuedState.feature.cs", label="InitialState = initialState", span="61-61"];
m0_19 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="EnqueuedState.feature.cs", label="Items = new Dictionary<string, object>()", span="63-63"];
m0_20 [cluster="HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", file="EnqueuedState.feature.cs", label="Exit HangFire.Client.CreateContext.CreateContext(HangFire.Storage.IStorageConnection, HangFire.States.IStateMachineFactory, HangFire.Common.Job, HangFire.States.State)", span="46-46"];
m0_6 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="clientFilters == null", span="31-31"];
m0_7 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="throw new ArgumentNullException(''clientFilters'');", span="31-31"];
m0_9 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="throw new ArgumentNullException(''clientExceptionFilters'');", span="32-32"];
m0_11 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="_clientExceptionFilters = clientExceptionFilters", span="35-35"];
m0_8 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="clientExceptionFilters == null", span="32-32"];
m0_10 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="_clientFilters = clientFilters", span="34-34"];
m0_12 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="EnqueuedState.feature.cs", label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m0_36 [cluster="lambda expression", file="EnqueuedState.feature.cs", label="return new CreatedContext(createContext, false, null);", span="65-65"];
m0_62 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="EnqueuedState.feature.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="4-4"];
m0_42 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedState.feature.cs", label=Exception, span="139-139"];
m0_35 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="EnqueuedState.feature.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m0_43 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", color=green, community=0, file="EnqueuedState.feature.cs", label="1: throw new InvalidOperationException(String.Format(\r\n                    ''Could not get a value of the job parameter `{0}`. See inner exception for details.'',\r\n                    name), ex);", span="141-143"];
m0_40 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedState.feature.cs", label="throw new ArgumentNullException(''name'');", span="131-131"];
m0_37 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="EnqueuedState.feature.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m0_41 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", color=green, community=0, file="EnqueuedState.feature.cs", label="1: return _parameters.ContainsKey(name)\r\n                    ? JobHelper.FromJson<T>(_parameters[name])\r\n                    : default(T);", span="135-137"];
m0_44 [cluster="HangFire.Client.CreateContext.GetJobParameter<T>(string)", file="EnqueuedState.feature.cs", label="Exit HangFire.Client.CreateContext.GetJobParameter<T>(string)", span="129-129"];
m0_23 [cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="EnqueuedState.feature.cs", label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="8-8"];
m0_38 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="EnqueuedState.feature.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="52-52"];
m0_63 [cluster="System.Func<TResult>.Invoke()", file="EnqueuedState.feature.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_69 [file="EnqueuedState.feature.cs", label="HangFire.Client.JobCreator", span=""];
m0_70 [file="EnqueuedState.feature.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m0_71 [file="EnqueuedState.feature.cs", label="HangFire.Client.CreateContext", span=""];
m0_72 [file="EnqueuedState.feature.cs", label=preContext, span=""];
m0_73 [file="EnqueuedState.feature.cs", label="System.Func<HangFire.Filters.CreatedContext>", span=""];
m0_74 [file="EnqueuedState.feature.cs", label="HangFire.Filters.IClientFilter", span=""];
m2_5 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", color=red, community=0, file="FailedState.cs", label="1: _stateMock = new Mock<JobState>(''SomeReason'')", span="30-30"];
m2_0 [cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.GivenAClient()", span="21-21"];
m2_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", color=green, community=0, file="FailedState.cs", label="0: Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager)", span="13-13"];
m2_1 [cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="FailedState.cs", label="_client = new JobClient(RedisFactory.BasicManager)", span="23-23"];
m2_2 [cluster="HangFire.Tests.ClientSteps.GivenAClient()", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.GivenAClient()", span="21-21"];
m2_4 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJob()", span="28-28"];
m2_49 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", file="FailedState.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, System.Collections.Generic.IDictionary<string, string>)", span="33-33"];
m2_85 [cluster="Unk.Apply", file="FailedState.cs", label="Entry Unk.Apply", span=""];
m2_64 [cluster="Unk.GetAllEntriesFromHash", file="FailedState.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m2_26 [cluster="Unk.ToDictionary", file="FailedState.cs", label="Entry Unk.ToDictionary", span=""];
m2_59 [cluster="Unk.IsTrue", file="FailedState.cs", label="Entry Unk.IsTrue", span=""];
m2_60 [cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", span="107-107"];
m2_61 [cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="FailedState.cs", label="var job = Redis.Client.GetAllEntriesFromHash(''hangfire:job:'' + JobSteps.DefaultJobId)", span="109-109"];
m2_62 [cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="FailedState.cs", label="DictionaryAssert.ContainsFollowingItems(table, job)", span="110-110"];
m2_63 [cluster="HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.ThenItHasTheFollowingParameters(Table)", span="107-107"];
m2_22 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="42-42"];
m2_23 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", color=red, community=0, file="FailedState.cs", label="1: _arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="44-44"];
m2_24 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="FailedState.cs", label="When(''I create a job'')", span="45-45"];
m2_25 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="42-42"];
m2_10 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m2_77 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="FailedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m2_75 [cluster="Unk.>", file="FailedState.cs", label="Entry Unk.>", span=""];
m2_50 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", span="88-88"];
m2_51 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="FailedState.cs", label="_client.CreateJob(JobSteps.DefaultJobId, typeof(ClientSteps), null, null)", span="92-92"];
m2_52 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="FailedState.cs", label=Exception, span="94-94"];
m2_53 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="FailedState.cs", label="_exception = ex", span="96-96"];
m2_54 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithTheIncorrectType()", span="88-88"];
m2_86 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", span="138-138"];
m2_87 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="FailedState.cs", label="Assert.IsNotNull(_exception)", span="140-140"];
m2_88 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="FailedState.cs", label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="141-141"];
m2_89 [cluster="HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.ThenAnExceptionIsThrown(string)", span="138-138"];
m2_76 [cluster="Unk.AreEqual", file="FailedState.cs", label="Entry Unk.AreEqual", span=""];
m2_21 [cluster="Unk.GetProperties", file="FailedState.cs", label="Entry Unk.GetProperties", span=""];
m2_13 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs", label="HangFire.States.FailedState", span=""];
m2_27 [cluster="Unk.When", file="FailedState.cs", label="Entry Unk.When", span=""];
m2_66 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="114-114"];
m2_67 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="FailedState.cs", label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="116-118"];
m2_68 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="FailedState.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="119-119"];
m2_69 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="FailedState.cs", label="Assert.AreEqual(_arguments.Count, args.Count)", span="121-121"];
m2_71 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="FailedState.cs", label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="124-124"];
m2_70 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="FailedState.cs", label=_arguments, span="122-122"];
m2_72 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="FailedState.cs", label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="125-125"];
m2_73 [cluster="HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="114-114"];
m2_55 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", span="101-101"];
m2_56 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="FailedState.cs", label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="103-103"];
m2_57 [cluster="HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheStorageContainsIt()", span="101-101"];
m2_11 [cluster="System.Exception.GetType()", file="FailedState.cs", label="Entry System.Exception.GetType()", span="0-0"];
m2_92 [cluster="Unk.IsInstanceOfType", file="FailedState.cs", label="Entry Unk.IsInstanceOfType", span=""];
m2_6 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", color=red, community=0, file="FailedState.cs", label="0: Entry HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="37-37"];
m2_7 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", color=green, community=0, file="FailedState.cs", label="0: return new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ExceptionType'', Exception.GetType().FullName },\r\n                    { ''ExceptionMessage'', Exception.Message },\r\n                    { ''ExceptionDetails'', Exception.ToString() }\r\n                };", span="39-45"];
m2_8 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", color=red, community=0, file="FailedState.cs", label="0: Exit HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="37-37"];
m2_9 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJob()", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJob()", span="28-28"];
m2_39 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", span="62-62"];
m2_40 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="FailedState.cs", label="_client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, null)", span="66-66"];
m2_41 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="FailedState.cs", label=Exception, span="68-68"];
m2_42 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="FailedState.cs", label="_exception = ex", span="70-70"];
m2_43 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithNullType()", span="62-62"];
m2_91 [cluster="System.Type.GetType(string, bool)", file="FailedState.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m2_82 [cluster="lambda expression", file="FailedState.cs", label="Entry lambda expression", span="133-133"];
m2_15 [cluster="lambda expression", file="FailedState.cs", label="Entry lambda expression", span="31-31"];
m2_18 [cluster="lambda expression", file="FailedState.cs", label="Entry lambda expression", span="32-32"];
m2_16 [cluster="lambda expression", color=red, community=0, file="FailedState.cs", label="0: x.StateName", span="31-31"];
m2_17 [cluster="lambda expression", file="FailedState.cs", label="Exit lambda expression", span="31-31"];
m2_19 [cluster="lambda expression", file="FailedState.cs", label="x.GetProperties()", span="32-32"];
m2_20 [cluster="lambda expression", file="FailedState.cs", label="Exit lambda expression", span="32-32"];
m2_28 [cluster="lambda expression", file="FailedState.cs", label="Entry lambda expression", span="44-44"];
m2_31 [cluster="lambda expression", file="FailedState.cs", label="Entry lambda expression", span="44-44"];
m2_29 [cluster="lambda expression", color=red, community=0, file="FailedState.cs", label="1: x[''Name'']", span="44-44"];
m2_30 [cluster="lambda expression", file="FailedState.cs", label="Exit lambda expression", span="44-44"];
m2_32 [cluster="lambda expression", color=red, community=0, file="FailedState.cs", label="1: x[''Value'']", span="44-44"];
m2_33 [cluster="lambda expression", file="FailedState.cs", label="Exit lambda expression", span="44-44"];
m2_83 [cluster="lambda expression", file="FailedState.cs", label="x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId)", span="133-133"];
m2_84 [cluster="lambda expression", file="FailedState.cs", label="Exit lambda expression", span="133-133"];
m2_90 [cluster="Unk.IsNotNull", file="FailedState.cs", label="Entry Unk.IsNotNull", span=""];
m2_44 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", span="75-75"];
m2_45 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="FailedState.cs", label="_client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), null, null)", span="79-79"];
m2_46 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="FailedState.cs", label=Exception, span="81-81"];
m2_47 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="FailedState.cs", label="_exception = ex", span="83-83"];
m2_48 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyState()", span="75-75"];
m2_74 [cluster="Unk.GetValueFromHash", file="FailedState.cs", label="Entry Unk.GetValueFromHash", span=""];
m2_12 [cluster="Unk.Returns", file="FailedState.cs", label="Entry Unk.Returns", span=""];
m2_65 [cluster="Unk.ContainsFollowingItems", file="FailedState.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m2_14 [cluster="Unk.CreateJob", file="FailedState.cs", label="Entry Unk.CreateJob", span=""];
m2_81 [cluster="Unk.Verify", file="FailedState.cs", label="Entry Unk.Verify", span=""];
m2_78 [cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", span="130-130"];
m2_79 [cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="FailedState.cs", label="_stateMock.Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId), \r\n                Times.Once)", span="132-134"];
m2_80 [cluster="HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheGivenStateWasAppliedToIt()", span="130-130"];
m2_34 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="FailedState.cs", label="Entry HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", span="49-49"];
m2_35 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="FailedState.cs", label="_client.CreateJob(null, typeof (TestJob), new Mock<JobState>(''1'').Object, null)", span="53-53"];
m2_36 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="FailedState.cs", label=Exception, span="55-55"];
m2_37 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="FailedState.cs", label="_exception = ex", span="57-57"];
m2_38 [cluster="HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", file="FailedState.cs", label="Exit HangFire.Tests.ClientSteps.WhenICreateAJobWithAnEmptyId()", span="49-49"];
m2_58 [cluster="Unk.ContainsKey", file="FailedState.cs", label="Entry Unk.ContainsKey", span=""];
m2_93 [file="FailedState.cs", label="HangFire.Tests.ClientSteps", span=""];
m3_11 [cluster="HangFire.States.SucceededState.SerializeData()", file="FailedStateFacts.cs", label="Entry HangFire.States.SucceededState.SerializeData()", span="39-39"];
m3_6 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m3_7 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", color=green, community=0, file="FailedStateFacts.cs", label="0: var date = new DateTime(2012, 12, 12)", span="20-20"];
m3_8 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", color=red, community=0, file="FailedStateFacts.cs", label="0: var state = new ScheduledState(date)", span="21-21"];
m3_9 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", color=red, community=0, file="FailedStateFacts.cs", label="0: Assert.Equal(date, state.EnqueueAt)", span="22-22"];
m3_10 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.Ctor_SetsTheCorrectData_WhenDateIsPassed()", span="18-18"];
m3_13 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="26-26"];
m3_14 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="FailedStateFacts.cs", label="var state = new SucceededState()", span="28-28"];
m3_15 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="FailedStateFacts.cs", label="Assert.True(state.IsFinal)", span="29-29"];
m3_16 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.IsFinal_ReturnsTrue()", span="26-26"];
m3_4 [cluster="HangFire.States.SucceededState.SucceededState()", file="FailedStateFacts.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27"];
m3_17 [cluster="Unk.True", file="FailedStateFacts.cs", label="Entry Unk.True", span=""];
m3_0 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="9-9"];
m3_1 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="var state = new SucceededState()", span="11-11"];
m3_2 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Assert.Equal(SucceededState.StateName, state.Name)", span="12-12"];
m3_3 [cluster="HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.SucceededStateFacts.StateName_IsCorrect()", span="9-9"];
m3_35 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m3_36 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="FailedStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="55-55"];
m3_37 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="FailedStateFacts.cs", label="Assert.False(state.IgnoreJobLoadException)", span="56-56"];
m3_38 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IgnoreExceptions_ReturnsFalse()", span="53-53"];
m3_34 [cluster="Unk.False", file="FailedStateFacts.cs", label="Entry Unk.False", span=""];
m3_5 [cluster="Unk.Equal", file="FailedStateFacts.cs", label="Entry Unk.Equal", span=""];
m3_28 [cluster="HangFire.States.ScheduledState.SerializeData()", file="FailedStateFacts.cs", label="Entry HangFire.States.ScheduledState.SerializeData()", span="46-46"];
m3_30 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m3_31 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs", label="var state = new ScheduledState(DateTime.UtcNow)", span="47-47"];
m3_32 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs", label="Assert.False(state.IsFinal)", span="49-49"];
m3_33 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.IsFinal_ReturnsFalse()", span="45-45"];
m3_22 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m3_23 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="var state = new ScheduledState(new DateTime(2012, 12, 12))", span="36-36"];
m3_24 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="var data = state.SerializeData()", span="38-38"];
m3_25 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.EnqueueAt), data[''EnqueueAt''])", span="40-40"];
m3_26 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.ScheduledAt), data[''ScheduledAt''])", span="41-41"];
m3_27 [cluster="HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.ScheduledStateFacts.SerializeData_ReturnsCorrectData()", span="34-34"];
m3_12 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedStateFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m4_34 [cluster="Unk.NotNull", file="JobClientTests.cs", label="Entry Unk.NotNull", span=""];
m4_12 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", file="JobClientTests.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", span="18-18"];
m4_13 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", file="JobClientTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''random-id'');\r\n                Assert.Null(result);\r\n            })", span="20-24"];
m4_14 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", file="JobClientTests.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsNull_WhenJobDoesNotExist()", span="18-18"];
m4_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClientTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m4_7 [cluster="Unk.>", file="JobClientTests.cs", label="Entry Unk.>", span=""];
m4_23 [cluster="Unk.UseConnections", file="JobClientTests.cs", label="Entry Unk.UseConnections", span=""];
m4_36 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="JobClientTests.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", span="50-50"];
m4_37 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="JobClientTests.cs", label="var redis = RedisUtils.CreateClient()", span="52-52"];
m4_39 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="JobClientTests.cs", label="action(redis, connection)", span="55-55"];
m4_38 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="JobClientTests.cs", label="var connection = new RedisConnection(redis)", span="53-53"];
m4_40 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", file="JobClientTests.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.UseConnections(System.Action<IRedisClient, HangFire.Redis.RedisConnection>)", span="50-50"];
m4_43 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="JobClientTests.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m4_33 [cluster="Unk.SetRangeInHash", file="JobClientTests.cs", label="Entry Unk.SetRangeInHash", span=""];
m4_3 [cluster="Unk.UseConnection", file="JobClientTests.cs", label="Entry Unk.UseConnection", span=""];
m4_19 [cluster="Unk.Null", file="JobClientTests.cs", label="Entry Unk.Null", span=""];
m4_48 [cluster="System.Action<T>.Invoke(T)", file="JobClientTests.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m4_11 [cluster="HangFire.Redis.RedisConnection.GetStateData(string)", file="JobClientTests.cs", label="Entry HangFire.Redis.RedisConnection.GetStateData(string)", span="205-205"];
m4_0 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="JobClientTests.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="10-10"];
m4_1 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="JobClientTests.cs", label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="12-14"];
m4_2 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="JobClientTests.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="10-10"];
m4_35 [cluster="Unk.Equal", file="JobClientTests.cs", label="Entry Unk.Equal", span=""];
m4_44 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="JobClientTests.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", span="59-59"];
m4_45 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="JobClientTests.cs", label="var connection = new RedisConnection(RedisUtils.CreateClient())", span="61-61"];
m4_46 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="JobClientTests.cs", label="action(connection)", span="63-63"];
m4_47 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", file="JobClientTests.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.UseConnection(System.Action<HangFire.Redis.RedisConnection>)", span="59-59"];
m4_24 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="30-47"];
m4_4 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="13-14"];
m4_5 [cluster="lambda expression", file="JobClientTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="13-14"];
m4_9 [cluster="lambda expression", file="JobClientTests.cs", label="connection.GetStateData(null)", span="14-14"];
m4_6 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="13-14"];
m4_8 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="14-14"];
m4_10 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="14-14"];
m4_15 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="20-24"];
m4_16 [cluster="lambda expression", file="JobClientTests.cs", label="var result = connection.GetStateData(''random-id'')", span="22-22"];
m4_17 [cluster="lambda expression", file="JobClientTests.cs", label="Assert.Null(result)", span="23-23"];
m4_18 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="20-24"];
m4_25 [cluster="lambda expression", file="JobClientTests.cs", label="redis.SetRangeInHash(\r\n                    ''hangfire:job:my-job:state'',\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''State'', ''Name'' },\r\n                        { ''Reason'', ''Reason'' },\r\n                        { ''Key'', ''Value'' }\r\n                    })", span="32-39"];
m4_26 [cluster="lambda expression", file="JobClientTests.cs", label="var result = connection.GetStateData(''my-job'')", span="41-41"];
m4_27 [cluster="lambda expression", file="JobClientTests.cs", label="Assert.NotNull(result)", span="43-43"];
m4_28 [cluster="lambda expression", file="JobClientTests.cs", label="Assert.Equal(''Name'', result.Name)", span="44-44"];
m4_29 [cluster="lambda expression", file="JobClientTests.cs", label="Assert.Equal(''Reason'', result.Reason)", span="45-45"];
m4_30 [cluster="lambda expression", file="JobClientTests.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="46-46"];
m4_31 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="30-47"];
m4_20 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", file="JobClientTests.cs", label="Entry HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", span="28-28"];
m4_21 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", file="JobClientTests.cs", label="UseConnections((redis, connection) =>\r\n            {\r\n                redis.SetRangeInHash(\r\n                    ''hangfire:job:my-job:state'',\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''State'', ''Name'' },\r\n                        { ''Reason'', ''Reason'' },\r\n                        { ''Key'', ''Value'' }\r\n                    });\r\n\r\n                var result = connection.GetStateData(''my-job'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="30-47"];
m4_22 [cluster="HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", file="JobClientTests.cs", label="Exit HangFire.Redis.Tests.RedisConnectionFacts.GetStateData_ReturnsCorrectResult()", span="28-28"];
m4_41 [cluster="HangFire.Redis.Tests.RedisUtils.CreateClient()", file="JobClientTests.cs", label="Entry HangFire.Redis.Tests.RedisUtils.CreateClient()", span="15-15"];
m4_42 [cluster="HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", file="JobClientTests.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(IRedisClient)", span="33-33"];
m4_49 [file="JobClientTests.cs", label="HangFire.Redis.Tests.RedisConnectionFacts", span=""];
m4_50 [file="JobClientTests.cs", label="HangFire.Redis.RedisConnection", span=""];
m5_0 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="JobMethodTests.cs", label="Entry Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m5_1 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="JobMethodTests.cs", label="Title = title", span="6-6"];
m5_2 [cluster="Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", file="JobMethodTests.cs", label="Exit Hangfire.Dashboard.Pages.LayoutPage.LayoutPage(string)", span="4-4"];
m5_3 [file="JobMethodTests.cs", label="Hangfire.Dashboard.Pages.LayoutPage", span=""];
m6_0 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="27-27"];
m6_1 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", color=red, community=0, file="ProcessingState.cs", label="1: ServerName = serverName", span="29-29"];
m6_2 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.ProcessingState(string)", span="27-27"];
m6_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m6_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ProcessingState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_3 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="ProcessingState.cs", label="Entry HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m6_4 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", color=green, community=0, file="ProcessingState.cs", label="0: return new Dictionary<string, string>\r\n                {\r\n                    { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ServerName'', ServerName }\r\n                };", span="37-41"];
m6_5 [cluster="HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", file="ProcessingState.cs", label="Exit HangFire.States.ProcessingState.GetProperties(HangFire.Common.JobMethod)", span="35-35"];
m6_8 [file="ProcessingState.cs", label="HangFire.States.ProcessingState", span=""];
m7_0 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="ProcessingState.feature.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="42-42"];
m7_1 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="ProcessingState.feature.cs", label="MapHangfireDashboard(app, DefaultDashboardPath, DefaultAppPath)", span="44-44"];
m7_2 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="ProcessingState.feature.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="42-42"];
m7_18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ProcessingState.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m7_24 [cluster="Unk.>", file="ProcessingState.feature.cs", label="Entry Unk.>", span=""];
m7_7 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="ProcessingState.feature.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="89-89"];
m7_10 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", color=green, community=0, file="ProcessingState.feature.cs", label="0: MapHangfireDashboard(app, dashboardPath, appPath, authorizationFilters, JobStorage.Current)", span="95-95"];
m7_11 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="ProcessingState.feature.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="89-89"];
m7_20 [cluster="Unk.Map", file="ProcessingState.feature.cs", label="Entry Unk.Map", span=""];
m7_12 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="ProcessingState.feature.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="109-109"];
m7_13 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="ProcessingState.feature.cs", label="app == null", span="116-116"];
m7_15 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="ProcessingState.feature.cs", label="SignatureConversions.AddConversions(app)", span="118-118"];
m7_16 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="ProcessingState.feature.cs", label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="120-124"];
m7_14 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="ProcessingState.feature.cs", label="throw new ArgumentNullException(''app'');", span="116-116"];
m7_17 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="ProcessingState.feature.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="109-109"];
m7_4 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="ProcessingState.feature.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="55-55"];
m7_5 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="ProcessingState.feature.cs", label="MapHangfireDashboard(app, dashboardPath, DefaultAppPath, DefaultAuthorizationFilters)", span="59-59"];
m7_6 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="ProcessingState.feature.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="55-55"];
m7_3 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="ProcessingState.feature.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="71-71"];
m7_8 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="ProcessingState.feature.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="76-76"];
m7_9 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="ProcessingState.feature.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="71-71"];
m7_19 [cluster="Unk.AddConversions", file="ProcessingState.feature.cs", label="Entry Unk.AddConversions", span=""];
m7_21 [cluster="lambda expression", file="ProcessingState.feature.cs", label="Entry lambda expression", span="120-124"];
m7_22 [cluster="lambda expression", file="ProcessingState.feature.cs", label="subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="120-124"];
m7_23 [cluster="lambda expression", file="ProcessingState.feature.cs", label="Exit lambda expression", span="120-124"];
m7_25 [file="ProcessingState.feature.cs", label=string, span=""];
m7_26 [file="ProcessingState.feature.cs", label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span=""];
m7_27 [file="ProcessingState.feature.cs", label="Hangfire.JobStorage", span=""];
m9_0 [cluster="Hangfire.Server.IScheduleInstantFactory.GetInstant(CrontabSchedule, System.TimeZoneInfo)", file="ScheduledState.cs", label="Entry Hangfire.Server.IScheduleInstantFactory.GetInstant(CrontabSchedule, System.TimeZoneInfo)", span="25-25"];
m9_1 [cluster="Hangfire.Server.IScheduleInstantFactory.GetInstant(CrontabSchedule, System.TimeZoneInfo)", file="ScheduledState.cs", label="Exit Hangfire.Server.IScheduleInstantFactory.GetInstant(CrontabSchedule, System.TimeZoneInfo)", span="25-25"];
m13_26 [cluster="Unk.OnScenarioStart", file="SucceededState.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m13_30 [cluster="Unk.CollectScenarioErrors", file="SucceededState.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m13_3 [cluster="HangFire.Tests.States.SucceededStateFeature.TestInitialize()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.TestInitialize()", span="47-47"];
m13_18 [cluster="HangFire.Tests.States.SucceededStateFeature.TestInitialize()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.TestInitialize()", span="47-47"];
m13_22 [cluster="Unk.OnScenarioEnd", file="SucceededState.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m13_19 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", span="51-51"];
m13_20 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", file="SucceededState.feature.cs", label="testRunner.OnScenarioEnd()", span="53-53"];
m13_21 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", span="51-51"];
m13_27 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", span="61-61"];
m13_28 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", file="SucceededState.feature.cs", label="testRunner.CollectScenarioErrors()", span="63-63"];
m13_29 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioCleanup()", span="61-61"];
m13_95 [cluster="Unk.And", file="SucceededState.feature.cs", label="Entry Unk.And", span=""];
m13_105 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", span="221-221"];
m13_106 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the succeeded list'', ((string[])(null)))", span="223-223"];
m13_107 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="225-225"];
m13_108 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="this.FeatureBackground()", span="227-227"];
m13_109 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="229-229"];
m13_110 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="231-231"];
m13_111 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="testRunner.Then(''the job should be removed from the succeeded list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="233-233"];
m13_112 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="this.ScenarioCleanup()", span="235-235"];
m13_113 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", span="221-221"];
m13_4 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureSetup()", span="33-33"];
m13_5 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup()", file="SucceededState.feature.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="35-35"];
m13_6 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Succeeded state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="36-37"];
m13_7 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup()", file="SucceededState.feature.cs", label="testRunner.OnFeatureStart(featureInfo)", span="38-38"];
m13_8 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FeatureSetup()", span="33-33"];
m13_9 [cluster="Unk.GetTestRunner", file="SucceededState.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m13_13 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", span="41-41"];
m13_14 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="SucceededState.feature.cs", label="testRunner.OnFeatureEnd()", span="43-43"];
m13_15 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="SucceededState.feature.cs", label="testRunner = null", span="44-44"];
m13_16 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", span="41-41"];
m13_31 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="66-66"];
m13_32 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="SucceededState.feature.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="70-70"];
m13_33 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="SucceededState.feature.cs", label="testRunner.Given(''the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="72-72"];
m13_34 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="66-66"];
m13_0 [cluster="HangFire.Tests.States.SucceededStateFeature.SucceededStateFeature()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.SucceededStateFeature()", span="28-28"];
m13_1 [cluster="HangFire.Tests.States.SucceededStateFeature.SucceededStateFeature()", file="SucceededState.feature.cs", label="this.TestInitialize()", span="30-30"];
m13_2 [cluster="HangFire.Tests.States.SucceededStateFeature.SucceededStateFeature()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.SucceededStateFeature()", span="28-28"];
m13_117 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.System.IDisposable.Dispose()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FixtureData.System.IDisposable.Dispose()", span="248-248"];
m13_118 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.System.IDisposable.Dispose()", file="SucceededState.feature.cs", label="SucceededStateFeature.FeatureTearDown()", span="250-250"];
m13_119 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.System.IDisposable.Dispose()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FixtureData.System.IDisposable.Dispose()", span="248-248"];
m13_11 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="SucceededState.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m13_17 [cluster="Unk.OnFeatureEnd", file="SucceededState.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m13_50 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="104-104"];
m13_51 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=0, file="SucceededState.feature.cs", label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="106-106"];
m13_52 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=0, file="SucceededState.feature.cs", label="1: this.ScenarioSetup(scenarioInfo)", span="108-108"];
m13_53 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=0, file="SucceededState.feature.cs", label="0: this.FeatureBackground()", span="110-110"];
m13_54 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=1, file="SucceededState.feature.cs", label="0: TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="112-114"];
m13_55 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=1, file="SucceededState.feature.cs", label="0: table1.AddRow(new string[] {\r\n                        ''SucceededAt'',\r\n                        ''<UtcNow timestamp>''})", span="115-117"];
m13_56 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=0, file="SucceededState.feature.cs", label="0: testRunner.Then(''properties table should contain the following items:'', ((string)(null)), table1, ''Then '')", span="119-119"];
m13_57 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=0, file="SucceededState.feature.cs", label="0: this.ScenarioCleanup()", span="121-121"];
m13_58 [cluster="HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="104-104"];
m13_78 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", span="163-163"];
m13_79 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should add the job to the succeeded list'', ((string[])(null)))", span="165-165"];
m13_80 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="SucceededState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="167-167"];
m13_81 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="SucceededState.feature.cs", label="this.FeatureBackground()", span="169-169"];
m13_82 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="SucceededState.feature.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="171-171"];
m13_83 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="SucceededState.feature.cs", label="testRunner.Then(''the job should be added to the succeeded list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="173-173"];
m13_84 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="SucceededState.feature.cs", label="this.ScenarioCleanup()", span="175-175"];
m13_85 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldAddTheJobToTheSucceededList()", span="163-163"];
m13_69 [cluster="Unk.When", file="SucceededState.feature.cs", label="Entry Unk.When", span=""];
m13_86 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", span="181-181"];
m13_87 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should persist the job data'', ((string[])(null)))", span="183-183"];
m13_88 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="SucceededState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="185-185"];
m13_89 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="SucceededState.feature.cs", label="this.FeatureBackground()", span="187-187"];
m13_90 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="SucceededState.feature.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="189-189"];
m13_91 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="SucceededState.feature.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="191-191"];
m13_92 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="SucceededState.feature.cs", label="testRunner.Then(''it should persist the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="193-193"];
m13_93 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="SucceededState.feature.cs", label="this.ScenarioCleanup()", span="195-195"];
m13_94 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldPersistTheJobData()", span="181-181"];
m13_96 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="201-201"];
m13_97 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should change the stats'', ((string[])(null)))", span="203-203"];
m13_98 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="205-205"];
m13_99 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="this.FeatureBackground()", span="207-207"];
m13_100 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="209-209"];
m13_101 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="211-211"];
m13_102 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="testRunner.Then(''it should decrease the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="213-213"];
m13_103 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="this.ScenarioCleanup()", span="215-215"];
m13_104 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="201-201"];
m13_60 [cluster="Unk.AddRow", file="SucceededState.feature.cs", label="Entry Unk.AddRow", span=""];
m13_61 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", span="127-127"];
m13_62 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should expire the job data'', ((string[])(null)))", span="129-129"];
m13_63 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="SucceededState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="131-131"];
m13_64 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="SucceededState.feature.cs", label="this.FeatureBackground()", span="133-133"];
m13_65 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="SucceededState.feature.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="135-135"];
m13_66 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="SucceededState.feature.cs", label="testRunner.Then(''it should expire the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="137-137"];
m13_67 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="SucceededState.feature.cs", label="this.ScenarioCleanup()", span="139-139"];
m13_68 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", span="127-127"];
m13_41 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="88-88"];
m13_42 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", color=red, community=0, file="SucceededState.feature.cs", label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Succeeded\''', ((string[])(null)))", span="90-90"];
m13_43 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", color=red, community=0, file="SucceededState.feature.cs", label="0: this.ScenarioSetup(scenarioInfo)", span="92-92"];
m13_44 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", color=red, community=0, file="SucceededState.feature.cs", label="0: this.FeatureBackground()", span="94-94"];
m13_45 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", color=red, community=0, file="SucceededState.feature.cs", label="0: testRunner.Then(''the state name should be equal to \'Succeeded\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="96-96"];
m13_46 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", color=red, community=0, file="SucceededState.feature.cs", label="0: this.ScenarioCleanup()", span="98-98"];
m13_47 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="88-88"];
m13_70 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", span="145-145"];
m13_71 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should change the stats'', ((string[])(null)))", span="147-147"];
m13_72 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="149-149"];
m13_73 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="this.FeatureBackground()", span="151-151"];
m13_74 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="153-153"];
m13_75 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="testRunner.Then(''it should increase the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="155-155"];
m13_76 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="this.ScenarioCleanup()", span="157-157"];
m13_77 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldChangeTheStats()", span="145-145"];
m13_48 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="SucceededState.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m13_23 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="56-56"];
m13_24 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SucceededState.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="58-58"];
m13_25 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="56-56"];
m13_35 [cluster="Unk.Given", file="SucceededState.feature.cs", label="Entry Unk.Given", span=""];
m13_49 [cluster="Unk.Then", file="SucceededState.feature.cs", label="Entry Unk.Then", span=""];
m13_38 [cluster="HangFire.Tests.States.SucceededStateFeature.System.IDisposable.Dispose()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.System.IDisposable.Dispose()", span="80-80"];
m13_39 [cluster="HangFire.Tests.States.SucceededStateFeature.System.IDisposable.Dispose()", file="SucceededState.feature.cs", label="this.ScenarioTearDown()", span="82-82"];
m13_40 [cluster="HangFire.Tests.States.SucceededStateFeature.System.IDisposable.Dispose()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.System.IDisposable.Dispose()", span="80-80"];
m13_10 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="SucceededState.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m13_59 [cluster="TechTalk.SpecFlow.Table.cstr", file="SucceededState.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m13_114 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.FixtureData()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FixtureData.FixtureData()", span="243-243"];
m13_115 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.FixtureData()", file="SucceededState.feature.cs", label="SucceededStateFeature.FeatureSetup()", span="245-245"];
m13_116 [cluster="HangFire.Tests.States.SucceededStateFeature.FixtureData.FixtureData()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FixtureData.FixtureData()", span="243-243"];
m13_12 [cluster="Unk.OnFeatureStart", file="SucceededState.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m13_36 [cluster="HangFire.Tests.States.SucceededStateFeature.SetFixture(HangFire.Tests.States.SucceededStateFeature.FixtureData)", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.SetFixture(HangFire.Tests.States.SucceededStateFeature.FixtureData)", span="76-76"];
m13_37 [cluster="HangFire.Tests.States.SucceededStateFeature.SetFixture(HangFire.Tests.States.SucceededStateFeature.FixtureData)", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.SetFixture(HangFire.Tests.States.SucceededStateFeature.FixtureData)", span="76-76"];
m13_120 [file="SucceededState.feature.cs", label="HangFire.Tests.States.SucceededStateFeature", span=""];
m0_21 -> m0_14  [color=blue, key=0, style=bold];
m0_13 -> m0_15  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_24 -> m0_65  [key=0, style=solid];
m0_24 -> m0_66  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientExceptionContext", style=dashed];
m0_24 -> m0_26  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_33  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_67  [key=0, style=solid];
m0_65 -> m0_31  [key=2, style=dotted];
m0_66 -> m0_65  [key=0, style=solid];
m0_66 -> m0_68  [key=2, style=dotted];
m0_67 -> m0_24  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_3  [color=blue, key=0, style=bold];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m0_5 -> m0_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m0_5 -> m0_11  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>", style=dashed];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_47  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m0_45 -> m0_48  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m0_45 -> m0_51  [color=red, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m0_45 -> m0_54  [color=red, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m0_45 -> m0_55  [color=red, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m0_45 -> m0_59  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_62  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [color=red, key=0, style=solid];
m0_48 -> m0_61  [key=0, style=solid];
m0_48 -> m0_39  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_51 -> m0_52  [color=red, key=0, style=solid];
m0_51 -> m0_58  [color=red, key=0, style=solid];
m0_51 -> m0_63  [color=red, key=2, style=dotted];
m0_54 -> m0_55  [color=red, key=0, style=solid];
m0_54 -> m0_39  [color=red, key=2, style=dotted];
m0_54 -> m0_56  [color=red, key=1, label=postContext, style=dashed];
m0_54 -> m0_59  [color=red, key=1, label=postContext, style=dashed];
m0_54 -> m0_60  [color=red, key=1, label=postContext, style=dashed];
m0_55 -> m0_56  [color=red, key=0, style=solid];
m0_55 -> m0_64  [color=red, key=2, style=dotted];
m0_55 -> m0_41  [color=green, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_29  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_30  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_31  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_1  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_2  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_3  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_4  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_15  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_17  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_18  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_19  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_49  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_50  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_55 -> m0_51  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_64  [key=2, style=dotted];
m0_49 -> m0_50  [color=red, key=0, style=solid];
m0_49 -> m0_53  [key=2, style=dotted];
m0_50 -> m0_51  [color=red, key=0, style=solid];
m0_50 -> m0_54  [key=2, style=dotted];
m0_52 -> m0_53  [color=red, key=0, style=solid];
m0_52 -> m0_48  [color=blue, key=0, style=bold];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_60  [key=0, style=solid];
m0_53 -> m0_54  [color=red, key=0, style=solid];
m0_53 -> m0_58  [color=red, key=1, label=wasError, style=dashed];
m0_56 -> m0_57  [color=red, key=0, style=solid];
m0_56 -> m0_58  [color=red, key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_57 -> m0_61  [key=0, style=solid];
m0_61 -> m0_45  [color=blue, key=0, style=bold];
m0_31 -> m0_32  [key=0, style=solid];
m0_30 -> m0_32  [key=0, style=solid];
m0_30 -> m0_37  [key=2, style=dotted];
m0_39 -> m0_41  [color=green, key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_33  [key=2, style=dotted];
m0_32 -> m0_23  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_22 -> m0_25  [key=0, style=solid];
m0_22 -> m0_26  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_22 -> m0_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_22 -> m0_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_22 -> m0_27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>", style=dashed];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_30  [key=2, style=dotted];
m0_25 -> m0_27  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m0_25 -> m0_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m0_25 -> m0_32  [key=0, style=solid];
m0_25 -> m0_21  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [color=green, key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_31  [key=2, style=dotted];
m0_27 -> m0_32  [key=2, style=dotted];
m0_27 -> m0_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_34  [key=2, style=dotted];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_28 -> m0_33  [key=2, style=dotted];
m0_28 -> m0_35  [color=green, key=2, style=dotted];
m0_28 -> m0_30  [color=green, key=1, label=serializedValue, style=dashed];
m0_28 -> m0_31  [color=green, key=1, label=serializedValue, style=dashed];
m0_29 -> m0_22  [color=blue, key=0, style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=0, style=solid];
m0_29 -> m0_36  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_17  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_14 -> m0_20  [key=0, style=solid];
m0_14 -> m0_21  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_21  [key=0, style=solid];
m0_15 -> m0_22  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_23  [key=2, style=dotted];
m0_17 -> m0_19  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m0_16 -> m0_17  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_24  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=0, style=solid];
m0_19 -> m0_22  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_6  [color=blue, key=0, style=bold];
m0_6 -> m0_15  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m0_6 -> m0_16  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m0_6 -> m0_17  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m0_6 -> m0_18  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_9  [color=darkseagreen4, key=1, label="HangFire.States.IStateMachineFactory", style=dashed];
m0_6 -> m0_11  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m0_6 -> m0_13  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m0_6 -> m0_8  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_7 -> m0_12  [key=0, style=solid];
m0_7 -> m0_13  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> m0_12  [key=0, style=solid];
m0_9 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_13  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_8 -> m0_20  [key=0, style=solid];
m0_8 -> m0_21  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=0, style=solid];
m0_10 -> m0_20  [key=0, style=solid];
m0_10 -> m0_21  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_12 -> m0_20  [key=0, style=solid];
m0_12 -> m0_21  [key=2, style=dotted];
m0_12 -> m0_5  [color=blue, key=0, style=bold];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_39  [key=2, style=dotted];
m0_42 -> m0_43  [color=green, key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_38  [key=2, style=dotted];
m0_43 -> m0_44  [color=green, key=0, style=solid];
m0_43 -> m0_45  [key=2, style=dotted];
m0_43 -> m0_46  [color=green, key=2, style=dotted];
m0_43 -> m0_47  [color=green, key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_27  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m0_40 -> m0_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m0_40 -> m0_44  [key=0, style=solid];
m0_40 -> m0_21  [key=2, style=dotted];
m0_37 -> m0_34  [color=blue, key=0, style=bold];
m0_41 -> m0_40  [color=blue, key=0, style=bold];
m0_41 -> m0_44  [color=green, key=0, style=solid];
m0_41 -> m0_36  [color=green, key=2, style=dotted];
m0_41 -> m0_45  [color=green, key=2, style=dotted];
m0_44 -> m0_42  [color=blue, key=0, style=bold];
m0_44 -> m0_38  [color=blue, key=0, style=bold];
m0_23 -> m0_28  [color=green, key=1, label=object, style=dashed];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_23 -> m0_30  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_23 -> m0_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_38 -> m0_41  [color=green, key=1, label=string, style=dashed];
m0_38 -> m0_43  [color=green, key=1, label=string, style=dashed];
m0_38 -> m0_39  [key=0, style=solid];
m0_69 -> m0_10  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m0_69 -> m0_11  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m0_69 -> m0_15  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m0_69 -> m0_18  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m0_70 -> m0_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m0_71 -> m0_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m0_72 -> m0_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m0_73 -> m0_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m0_74 -> m0_43  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m2_5 -> m2_6  [color=red, key=0, style=solid];
m2_5 -> m2_10  [color=red, key=2, style=dotted];
m2_0 -> m2_3  [color=green, key=1, label="System.Exception", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_1 -> m2_3  [color=green, key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_4  [key=0, style=solid];
m2_2 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [color=red, key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_62  [color=darkseagreen4, key=1, label=Table, style=dashed];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_64  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_65  [key=2, style=dotted];
m2_63 -> m2_60  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [color=red, key=0, style=solid];
m2_23 -> m2_24  [color=red, key=0, style=solid];
m2_23 -> m2_26  [color=red, key=2, style=dotted];
m2_23 -> m2_28  [color=red, key=1, label="lambda expression", style=dashed];
m2_23 -> m2_31  [color=red, key=1, label="lambda expression", style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_27  [key=2, style=dotted];
m2_25 -> m2_22  [color=blue, key=0, style=bold];
m2_50 -> m2_51  [key=0, style=solid];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_54  [key=0, style=solid];
m2_51 -> m2_49  [key=2, style=dotted];
m2_52 -> m2_53  [key=0, style=solid];
m2_53 -> m2_54  [key=0, style=solid];
m2_54 -> m2_50  [color=blue, key=0, style=bold];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_90  [key=2, style=dotted];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_91  [key=2, style=dotted];
m2_88 -> m2_92  [key=2, style=dotted];
m2_89 -> m2_86  [color=blue, key=0, style=bold];
m2_13 -> m2_3  [color=green, key=1, label="HangFire.States.FailedState", style=dashed];
m2_13 -> m2_7  [color=green, key=1, label="HangFire.States.FailedState", style=dashed];
m2_66 -> m2_67  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_74  [key=2, style=dotted];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_75  [key=2, style=dotted];
m2_68 -> m2_71  [color=darkseagreen4, key=1, label=args, style=dashed];
m2_69 -> m2_70  [key=0, style=solid];
m2_69 -> m2_76  [key=2, style=dotted];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_77  [key=2, style=dotted];
m2_71 -> m2_59  [key=2, style=dotted];
m2_71 -> m2_71  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_73  [key=0, style=solid];
m2_72 -> m2_70  [key=0, style=solid];
m2_72 -> m2_76  [key=2, style=dotted];
m2_72 -> m2_72  [color=darkseagreen4, key=1, label=pair, style=dashed];
m2_73 -> m2_66  [color=blue, key=0, style=bold];
m2_55 -> m2_56  [key=0, style=solid];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=2, style=dotted];
m2_56 -> m2_59  [key=2, style=dotted];
m2_57 -> m2_55  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [color=green, key=0, style=solid];
m2_6 -> m2_11  [color=red, key=2, style=dotted];
m2_6 -> m2_12  [color=red, key=2, style=dotted];
m2_6 -> m2_15  [color=red, key=1, label="lambda expression", style=dashed];
m2_7 -> m2_8  [color=green, key=0, style=solid];
m2_7 -> m2_11  [color=green, key=2, style=dotted];
m2_7 -> m2_13  [color=green, key=2, style=dotted];
m2_7 -> m2_12  [color=green, key=2, style=dotted];
m2_7 -> m2_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_7 -> m2_10  [color=green, key=2, style=dotted];
m2_8 -> m2_9  [color=red, key=0, style=solid];
m2_8 -> m2_14  [color=red, key=2, style=dotted];
m2_8 -> m2_6  [color=blue, key=0, style=bold];
m2_9 -> m2_4  [color=blue, key=0, style=bold];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_43  [key=0, style=solid];
m2_40 -> m2_10  [key=2, style=dotted];
m2_40 -> m2_14  [key=2, style=dotted];
m2_41 -> m2_42  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_43 -> m2_39  [color=blue, key=0, style=bold];
m2_82 -> m2_83  [key=0, style=solid];
m2_15 -> m2_16  [color=red, key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_16 -> m2_17  [color=red, key=0, style=solid];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=2, style=dotted];
m2_20 -> m2_18  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [color=red, key=0, style=solid];
m2_31 -> m2_32  [color=red, key=0, style=solid];
m2_29 -> m2_30  [color=red, key=0, style=solid];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m2_32 -> m2_33  [color=red, key=0, style=solid];
m2_33 -> m2_31  [color=blue, key=0, style=bold];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_75  [key=2, style=dotted];
m2_83 -> m2_85  [key=2, style=dotted];
m2_84 -> m2_82  [color=blue, key=0, style=bold];
m2_44 -> m2_45  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_48  [key=0, style=solid];
m2_45 -> m2_49  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_47 -> m2_48  [key=0, style=solid];
m2_48 -> m2_44  [color=blue, key=0, style=bold];
m2_78 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_81  [key=2, style=dotted];
m2_79 -> m2_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_80 -> m2_78  [color=blue, key=0, style=bold];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_38  [key=0, style=solid];
m2_35 -> m2_10  [key=2, style=dotted];
m2_35 -> m2_14  [key=2, style=dotted];
m2_36 -> m2_37  [key=0, style=solid];
m2_37 -> m2_38  [key=0, style=solid];
m2_38 -> m2_34  [color=blue, key=0, style=bold];
m2_93 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_5  [color=red, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_6  [color=red, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_7  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_8  [color=red, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_23  [color=red, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_35  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_40  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_42  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_45  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_47  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_51  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_53  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_69  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_72  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_79  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_87  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m2_93 -> m2_88  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m3_6 -> m3_7  [color=green, key=0, style=solid];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_7 -> m3_4  [color=red, key=2, style=dotted];
m3_7 -> m3_9  [color=green, key=1, label=date, style=dashed];
m3_7 -> m3_11  [color=green, key=2, style=dotted];
m3_8 -> m3_9  [color=red, key=0, style=solid];
m3_8 -> m3_11  [color=red, key=2, style=dotted];
m3_8 -> m3_4  [key=2, style=dotted];
m3_9 -> m3_10  [color=red, key=0, style=solid];
m3_9 -> m3_12  [color=red, key=2, style=dotted];
m3_9 -> m3_5  [color=red, key=2, style=dotted];
m3_10 -> m3_6  [color=blue, key=0, style=bold];
m3_13 -> m3_14  [key=0, style=solid];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_4  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [key=2, style=dotted];
m3_16 -> m3_13  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_0  [color=blue, key=0, style=bold];
m3_35 -> m3_36  [key=0, style=solid];
m3_36 -> m3_4  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_34  [key=2, style=dotted];
m3_38 -> m3_35  [color=blue, key=0, style=bold];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_4  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_34  [key=2, style=dotted];
m3_33 -> m3_30  [color=blue, key=0, style=bold];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_11  [key=2, style=dotted];
m3_23 -> m3_4  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_25  [color=darkseagreen4, key=1, label=state, style=dashed];
m3_23 -> m3_26  [color=darkseagreen4, key=1, label=state, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_28  [key=2, style=dotted];
m3_24 -> m3_26  [color=darkseagreen4, key=1, label=data, style=dashed];
m3_25 -> m3_5  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_12  [key=2, style=dotted];
m3_26 -> m3_5  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_12  [key=2, style=dotted];
m3_27 -> m3_22  [color=blue, key=0, style=bold];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_3  [key=2, style=dotted];
m4_13 -> m4_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_14 -> m4_12  [color=blue, key=0, style=bold];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_39  [color=darkseagreen4, key=1, label="System.Action<IRedisClient, HangFire.Redis.RedisConnection>", style=dashed];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_41  [key=2, style=dotted];
m4_37 -> m4_39  [color=darkseagreen4, key=1, label=redis, style=dashed];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_43  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_38 -> m4_42  [key=2, style=dotted];
m4_40 -> m4_36  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_46  [color=darkseagreen4, key=1, label="System.Action<HangFire.Redis.RedisConnection>", style=dashed];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_42  [key=2, style=dotted];
m4_45 -> m4_41  [key=2, style=dotted];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_48  [key=2, style=dotted];
m4_47 -> m4_44  [color=blue, key=0, style=bold];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_5 -> m4_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=2, style=dotted];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_10 -> m4_8  [color=blue, key=0, style=bold];
m4_15 -> m4_16  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_11  [key=2, style=dotted];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=2, style=dotted];
m4_18 -> m4_15  [color=blue, key=0, style=bold];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_32  [key=2, style=dotted];
m4_25 -> m4_33  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_11  [key=2, style=dotted];
m4_26 -> m4_28  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_26 -> m4_29  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_26 -> m4_30  [color=darkseagreen4, key=1, label=result, style=dashed];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_34  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_35  [key=2, style=dotted];
m4_29 -> m4_30  [key=0, style=solid];
m4_29 -> m4_35  [key=2, style=dotted];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_35  [key=2, style=dotted];
m4_31 -> m4_24  [color=blue, key=0, style=bold];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=2, style=dotted];
m4_21 -> m4_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_22 -> m4_20  [color=blue, key=0, style=bold];
m4_49 -> m4_1  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisConnectionFacts", style=dashed];
m4_49 -> m4_13  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisConnectionFacts", style=dashed];
m4_49 -> m4_21  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisConnectionFacts", style=dashed];
m4_50 -> m4_9  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisConnection", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_3 -> m5_1  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.Pages.LayoutPage", style=dashed];
m6_0 -> m6_1  [color=red, key=0, style=solid];
m6_1 -> m6_2  [color=red, key=0, style=solid];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_3 -> m6_4  [color=green, key=0, style=solid];
m6_4 -> m6_5  [color=green, key=0, style=solid];
m6_4 -> m6_6  [color=green, key=2, style=dotted];
m6_4 -> m6_7  [color=green, key=2, style=dotted];
m6_5 -> m6_3  [color=blue, key=0, style=bold];
m6_8 -> m6_1  [color=red, key=1, label="HangFire.States.ProcessingState", style=dashed];
m6_8 -> m6_4  [color=green, key=1, label="HangFire.States.ProcessingState", style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_1 -> m7_2  [key=0, style=solid];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_7 -> m7_10  [color=green, key=0, style=solid];
m7_10 -> m7_11  [color=green, key=0, style=solid];
m7_10 -> m7_12  [color=green, key=2, style=dotted];
m7_11 -> m7_7  [color=blue, key=0, style=bold];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_12 -> m7_16  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m7_12 -> m7_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_15  [key=0, style=solid];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_19  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_20  [key=2, style=dotted];
m7_16 -> m7_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_14 -> m7_17  [key=0, style=solid];
m7_14 -> m7_18  [key=2, style=dotted];
m7_17 -> m7_12  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_7  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_6 -> m7_4  [color=blue, key=0, style=bold];
m7_3 -> m7_8  [key=0, style=solid];
m7_8 -> m7_7  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_9 -> m7_3  [color=blue, key=0, style=bold];
m7_21 -> m7_22  [key=0, style=solid];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_24  [key=2, style=dotted];
m7_23 -> m7_21  [color=blue, key=0, style=bold];
m7_25 -> m7_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_26 -> m7_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m7_27 -> m7_22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_0  [color=darkorchid, key=3, label="Field variable string Name", style=bold];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m13_3 -> m13_18  [key=0, style=solid];
m13_18 -> m13_3  [color=blue, key=0, style=bold];
m13_19 -> m13_20  [key=0, style=solid];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_22  [key=2, style=dotted];
m13_21 -> m13_19  [color=blue, key=0, style=bold];
m13_27 -> m13_28  [key=0, style=solid];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_30  [key=2, style=dotted];
m13_29 -> m13_27  [color=blue, key=0, style=bold];
m13_105 -> m13_106  [key=0, style=solid];
m13_106 -> m13_107  [key=0, style=solid];
m13_106 -> m13_48  [key=2, style=dotted];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_23  [key=2, style=dotted];
m13_108 -> m13_109  [key=0, style=solid];
m13_108 -> m13_31  [key=2, style=dotted];
m13_109 -> m13_110  [key=0, style=solid];
m13_109 -> m13_69  [key=2, style=dotted];
m13_110 -> m13_111  [key=0, style=solid];
m13_110 -> m13_95  [key=2, style=dotted];
m13_111 -> m13_112  [key=0, style=solid];
m13_111 -> m13_49  [key=2, style=dotted];
m13_112 -> m13_113  [key=0, style=solid];
m13_112 -> m13_27  [key=2, style=dotted];
m13_113 -> m13_105  [color=blue, key=0, style=bold];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_9  [key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_6 -> m13_10  [key=2, style=dotted];
m13_6 -> m13_11  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_12  [key=2, style=dotted];
m13_8 -> m13_4  [color=blue, key=0, style=bold];
m13_13 -> m13_14  [key=0, style=solid];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_17  [key=2, style=dotted];
m13_15 -> m13_16  [key=0, style=solid];
m13_16 -> m13_13  [color=blue, key=0, style=bold];
m13_31 -> m13_32  [key=0, style=solid];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_35  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_35  [key=2, style=dotted];
m13_34 -> m13_31  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_2 -> m13_0  [color=blue, key=0, style=bold];
m13_117 -> m13_118  [key=0, style=solid];
m13_118 -> m13_119  [key=0, style=solid];
m13_118 -> m13_13  [key=2, style=dotted];
m13_119 -> m13_117  [color=blue, key=0, style=bold];
m13_50 -> m13_51  [color=red, key=0, style=solid];
m13_51 -> m13_52  [color=red, key=0, style=solid];
m13_51 -> m13_48  [color=red, key=2, style=dotted];
m13_52 -> m13_53  [color=red, key=0, style=solid];
m13_52 -> m13_23  [color=red, key=2, style=dotted];
m13_53 -> m13_54  [color=red, key=0, style=solid];
m13_53 -> m13_31  [color=red, key=2, style=dotted];
m13_54 -> m13_55  [color=red, key=0, style=solid];
m13_54 -> m13_59  [color=red, key=2, style=dotted];
m13_54 -> m13_56  [color=red, key=1, label=table1, style=dashed];
m13_55 -> m13_56  [color=red, key=0, style=solid];
m13_55 -> m13_60  [color=red, key=2, style=dotted];
m13_56 -> m13_57  [color=red, key=0, style=solid];
m13_56 -> m13_49  [color=red, key=2, style=dotted];
m13_57 -> m13_58  [color=red, key=0, style=solid];
m13_57 -> m13_27  [color=red, key=2, style=dotted];
m13_58 -> m13_50  [color=blue, key=0, style=bold];
m13_78 -> m13_79  [key=0, style=solid];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_48  [key=2, style=dotted];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_23  [key=2, style=dotted];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_31  [key=2, style=dotted];
m13_82 -> m13_83  [key=0, style=solid];
m13_82 -> m13_69  [key=2, style=dotted];
m13_83 -> m13_84  [key=0, style=solid];
m13_83 -> m13_49  [key=2, style=dotted];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_27  [key=2, style=dotted];
m13_85 -> m13_78  [color=blue, key=0, style=bold];
m13_86 -> m13_87  [key=0, style=solid];
m13_87 -> m13_88  [key=0, style=solid];
m13_87 -> m13_48  [key=2, style=dotted];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_23  [key=2, style=dotted];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_31  [key=2, style=dotted];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_69  [key=2, style=dotted];
m13_91 -> m13_92  [key=0, style=solid];
m13_91 -> m13_95  [key=2, style=dotted];
m13_92 -> m13_93  [key=0, style=solid];
m13_92 -> m13_49  [key=2, style=dotted];
m13_93 -> m13_94  [key=0, style=solid];
m13_93 -> m13_27  [key=2, style=dotted];
m13_94 -> m13_86  [color=blue, key=0, style=bold];
m13_96 -> m13_97  [key=0, style=solid];
m13_97 -> m13_98  [key=0, style=solid];
m13_97 -> m13_48  [key=2, style=dotted];
m13_98 -> m13_99  [key=0, style=solid];
m13_98 -> m13_23  [key=2, style=dotted];
m13_99 -> m13_100  [key=0, style=solid];
m13_99 -> m13_31  [key=2, style=dotted];
m13_100 -> m13_101  [key=0, style=solid];
m13_100 -> m13_69  [key=2, style=dotted];
m13_101 -> m13_102  [key=0, style=solid];
m13_101 -> m13_95  [key=2, style=dotted];
m13_102 -> m13_103  [key=0, style=solid];
m13_102 -> m13_49  [key=2, style=dotted];
m13_103 -> m13_104  [key=0, style=solid];
m13_103 -> m13_27  [key=2, style=dotted];
m13_104 -> m13_96  [color=blue, key=0, style=bold];
m13_61 -> m13_62  [key=0, style=solid];
m13_62 -> m13_63  [key=0, style=solid];
m13_62 -> m13_48  [key=2, style=dotted];
m13_63 -> m13_64  [key=0, style=solid];
m13_63 -> m13_23  [key=2, style=dotted];
m13_64 -> m13_65  [key=0, style=solid];
m13_64 -> m13_31  [key=2, style=dotted];
m13_65 -> m13_66  [key=0, style=solid];
m13_65 -> m13_69  [key=2, style=dotted];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_49  [key=2, style=dotted];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_27  [key=2, style=dotted];
m13_68 -> m13_61  [color=blue, key=0, style=bold];
m13_41 -> m13_42  [color=red, key=0, style=solid];
m13_42 -> m13_43  [color=red, key=0, style=solid];
m13_42 -> m13_48  [color=red, key=2, style=dotted];
m13_43 -> m13_44  [color=red, key=0, style=solid];
m13_43 -> m13_23  [color=red, key=2, style=dotted];
m13_44 -> m13_45  [color=red, key=0, style=solid];
m13_44 -> m13_31  [color=red, key=2, style=dotted];
m13_45 -> m13_46  [color=red, key=0, style=solid];
m13_45 -> m13_49  [color=red, key=2, style=dotted];
m13_46 -> m13_47  [color=red, key=0, style=solid];
m13_46 -> m13_27  [color=red, key=2, style=dotted];
m13_47 -> m13_41  [color=blue, key=0, style=bold];
m13_70 -> m13_71  [key=0, style=solid];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_48  [key=2, style=dotted];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_23  [key=2, style=dotted];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_31  [key=2, style=dotted];
m13_74 -> m13_75  [key=0, style=solid];
m13_74 -> m13_69  [key=2, style=dotted];
m13_75 -> m13_76  [key=0, style=solid];
m13_75 -> m13_49  [key=2, style=dotted];
m13_76 -> m13_77  [key=0, style=solid];
m13_76 -> m13_27  [key=2, style=dotted];
m13_77 -> m13_70  [color=blue, key=0, style=bold];
m13_23 -> m13_24  [key=0, style=solid];
m13_23 -> m13_42  [color=red, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m13_23 -> m13_51  [color=red, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m13_23 -> m13_62  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m13_23 -> m13_71  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m13_23 -> m13_79  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m13_23 -> m13_87  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m13_23 -> m13_97  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m13_23 -> m13_106  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_26  [key=2, style=dotted];
m13_25 -> m13_23  [color=blue, key=0, style=bold];
m13_38 -> m13_39  [key=0, style=solid];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_19  [key=2, style=dotted];
m13_40 -> m13_38  [color=blue, key=0, style=bold];
m13_114 -> m13_115  [key=0, style=solid];
m13_115 -> m13_116  [key=0, style=solid];
m13_115 -> m13_4  [key=2, style=dotted];
m13_116 -> m13_114  [color=blue, key=0, style=bold];
m13_36 -> m13_37  [key=0, style=solid];
m13_37 -> m13_36  [color=blue, key=0, style=bold];
m13_120 -> m13_1  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_39  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_43  [color=red, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_44  [color=red, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_46  [color=red, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_52  [color=red, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_53  [color=red, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_57  [color=red, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_63  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_64  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_67  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_72  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_73  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_76  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_80  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_81  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_84  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_88  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_89  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_93  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_98  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_99  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_103  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_107  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_108  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m13_120 -> m13_112  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
}
