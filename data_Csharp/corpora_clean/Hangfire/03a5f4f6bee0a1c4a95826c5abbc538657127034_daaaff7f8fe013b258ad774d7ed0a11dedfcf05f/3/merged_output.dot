digraph  {
m0_32 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="BackgroundJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m0_34 [cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", span="223-223"];
m0_54 [cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="var arguments = GetArguments(callExpression)", span="225-225"];
m0_56 [cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="var data = new JobMethod(type, callExpression.Method)", span="229-229"];
m0_57 [cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="return client.CreateJob(data, arguments, state);", span="230-230"];
m0_55 [cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="var client = ClientFactory()", span="227-227"];
m0_58 [cluster="HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.CreateInternal(System.Type, System.Linq.Expressions.MethodCallExpression, HangFire.Common.States.JobState)", span="223-223"];
m0_59 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="234-234"];
m0_63 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label="var arguments = callExpression.Arguments.Select(GetArgumentValue).ToArray()", span="236-236"];
m0_64 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label="var serializedArguments = new List<string>(arguments.Length)", span="238-238"];
m0_65 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label=arguments, span="239-239"];
m0_70 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label="serializedArguments.Add(value)", span="253-253"];
m0_71 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label="return serializedArguments.ToArray();", span="256-256"];
m0_66 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label="string value = null", span="241-241"];
m0_67 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label="argument != null", span="243-243"];
m0_68 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label="var converter = TypeDescriptor.GetConverter(argument.GetType())", span="245-245"];
m0_69 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label="value = converter.ConvertToInvariantString(argument)", span="246-246"];
m0_72 [cluster="HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="234-234"];
m0_78 [cluster="Unk.ConvertToInvariantString", file="BackgroundJob.cs", label="Entry Unk.ConvertToInvariantString", span=""];
m0_62 [cluster="HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="Entry HangFire.Client.IJobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="24-24"];
m0_53 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="BackgroundJob.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="27-27"];
m0_20 [cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="139-139"];
m0_21 [cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="BackgroundJob.cs", label="return Create(methodCall, CreateScheduledState(delay));", span="141-141"];
m0_22 [cluster="HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Schedule<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, System.TimeSpan)", span="139-139"];
m0_61 [cluster="HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", file="BackgroundJob.cs", label="Entry HangFire.Common.JobMethod.JobMethod(System.Type, System.Reflection.MethodInfo)", span="48-48"];
m0_12 [cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="100-100"];
m0_13 [cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="BackgroundJob.cs", label="return Create(methodCall, CreateEnqueuedState());", span="102-102"];
m0_14 [cluster="HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Enqueue<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>)", span="100-100"];
m0_19 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", span="213-213"];
m0_47 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", file="BackgroundJob.cs", label="return CreateScheduledState(DateTime.UtcNow.Add(delay));", span="215-215"];
m0_48 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.CreateScheduledState(System.TimeSpan)", span="213-213"];
m0_10 [cluster="HangFire.BackgroundJob.CreateEnqueuedState()", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.CreateEnqueuedState()", span="208-208"];
m0_44 [cluster="HangFire.BackgroundJob.CreateEnqueuedState()", color=red, community=0, file="BackgroundJob.cs", label="0: return new EnqueuedState(''Enqueued by the Ð¡lient'');", span="210-210"];
m0_45 [cluster="HangFire.BackgroundJob.CreateEnqueuedState()", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.CreateEnqueuedState()", span="208-208"];
m0_74 [cluster="Unk.ToArray", file="BackgroundJob.cs", label="Entry Unk.ToArray", span=""];
m0_6 [cluster="HangFire.JobStorage.GetConnection()", file="BackgroundJob.cs", label="Entry HangFire.JobStorage.GetConnection()", span="45-45"];
m0_0 [cluster="HangFire.BackgroundJob.Perform()", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Perform()", span="35-35"];
m0_1 [cluster="HangFire.BackgroundJob.Perform()", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Perform()", span="35-35"];
m0_49 [cluster="System.DateTime.Add(System.TimeSpan)", file="BackgroundJob.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m0_50 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", span="218-218"];
m0_51 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", color=red, community=0, file="BackgroundJob.cs", label="1: return new ScheduledState(''Scheduled by the Client'', utcDateTime);", span="220-220"];
m0_52 [cluster="HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.CreateScheduledState(System.DateTime)", span="218-218"];
m0_80 [cluster="System.Collections.Generic.List<T>.ToArray()", file="BackgroundJob.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m0_16 [cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="119-119"];
m0_17 [cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJob.cs", label="return Create(methodCall, CreateScheduledState(delay));", span="121-121"];
m0_18 [cluster="HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Schedule(System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", span="119-119"];
m0_81 [cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", span="259-259"];
m0_82 [cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="BackgroundJob.cs", label="var constantExpression = expression as ConstantExpression", span="261-261"];
m0_85 [cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="BackgroundJob.cs", label="return CachedExpressionCompiler.Evaluate(expression);", span="268-268"];
m0_83 [cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="BackgroundJob.cs", label="constantExpression != null", span="263-263"];
m0_84 [cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="BackgroundJob.cs", label="return constantExpression.Value;", span="265-265"];
m0_86 [cluster="HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.GetArgumentValue(System.Linq.Expressions.Expression)", span="259-259"];
m0_2 [cluster="lambda expression", file="BackgroundJob.cs", label="Entry lambda expression", span="38-38"];
m0_3 [cluster="lambda expression", file="BackgroundJob.cs", label="new JobClient(JobStorage.Current.GetConnection())", span="38-38"];
m0_4 [cluster="lambda expression", file="BackgroundJob.cs", label="Exit lambda expression", span="38-38"];
m0_11 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", span="159-159"];
m0_23 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="methodCall == null", span="161-161"];
m0_25 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="state == null", span="162-162"];
m0_27 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="164-164"];
m0_30 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="return CreateInternal(callExpression.Method.DeclaringType, callExpression, state);", span="172-172"];
m0_24 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="throw new ArgumentNullException(''methodCall'');", span="161-161"];
m0_26 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="throw new ArgumentNullException(''state'');", span="162-162"];
m0_28 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="callExpression == null", span="165-165"];
m0_29 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="throw new ArgumentException(''ÐÐ¾Ð»Ð¶ÐµÐ½ ÑÐºÐ°Ð·ÑÐ²Ð°ÑÑ Ð½Ð° Ð¼ÐµÑÐ¾Ð´'', ''methodCall'');", span="167-167"];
m0_31 [cluster="HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Create(System.Linq.Expressions.Expression<System.Action>, HangFire.Common.States.JobState)", span="159-159"];
m0_73 [cluster="Unk.Select", file="BackgroundJob.cs", label="Entry Unk.Select", span=""];
m0_77 [cluster="Unk.GetConverter", file="BackgroundJob.cs", label="Entry Unk.GetConverter", span=""];
m0_76 [cluster="Unk.GetType", file="BackgroundJob.cs", label="Entry Unk.GetType", span=""];
m0_33 [cluster="System.ArgumentException.ArgumentException(string, string)", file="BackgroundJob.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m0_75 [cluster="List<string>.cstr", file="BackgroundJob.cs", label="Entry List<string>.cstr", span=""];
m0_79 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJob.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_15 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", span="191-191"];
m0_35 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="methodCall == null", span="193-193"];
m0_37 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="state == null", span="194-194"];
m0_39 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="196-196"];
m0_42 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="return CreateInternal(typeof(TJob), callExpression, state);", span="205-205"];
m0_36 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="throw new ArgumentNullException(''methodCall'');", span="193-193"];
m0_38 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="throw new ArgumentNullException(''state'');", span="194-194"];
m0_40 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="callExpression == null", span="197-197"];
m0_41 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="throw new ArgumentException(''ÐÐ¾Ð»Ð¶ÐµÐ½ ÑÐºÐ°Ð·ÑÐ²Ð°ÑÑ Ð½Ð° Ð¼ÐµÑÐ¾Ð´'', ''methodCall'');", span="199-199"];
m0_43 [cluster="HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Create<TJob>(System.Linq.Expressions.Expression<System.Action<TJob>>, HangFire.Common.States.JobState)", span="191-191"];
m0_7 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJob.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79"];
m0_8 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJob.cs", label="return Create(methodCall, CreateEnqueuedState());", span="81-81"];
m0_9 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="BackgroundJob.cs", label="Exit HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="79-79"];
m0_87 [cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="BackgroundJob.cs", label="Entry HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="39-39"];
m0_5 [cluster="HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", file="BackgroundJob.cs", label="Entry HangFire.Client.JobClient.JobClient(HangFire.Storage.IStorageConnection)", span="41-41"];
m0_60 [cluster="System.Func<TResult>.Invoke()", file="BackgroundJob.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_46 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="BackgroundJob.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="31-31"];
m1_363 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255"];
m1_622 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889"];
m1_623 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="891-894"];
m1_624 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889"];
m1_155 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="ClientApiTests.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m1_621 [cluster="System.Collections.Generic.List<T>.List()", file="ClientApiTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_401 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301"];
m1_57 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", file="ClientApiTests.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string)", span="217-217"];
m1_810 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204"];
m1_812 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1210-1225"];
m1_811 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1206-1208"];
m1_813 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204"];
m1_478 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680"];
m1_479 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ClientApiTests.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="682-683"];
m1_480 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680"];
m1_460 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331"];
m1_55 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="79-87"];
m1_56 [cluster="System.Threading.CancellationToken.CancellationToken()", file="ClientApiTests.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m1_364 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528"];
m1_365 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ClientApiTests.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="530-531"];
m1_366 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528"];
m1_49 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375"];
m1_50 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="79-87"];
m1_52 [cluster="lambda expression", file="ClientApiTests.cs", label="var queues = new[] { ''default'' }", span="82-82"];
m1_51 [cluster="lambda expression", file="ClientApiTests.cs", label="var token = new CancellationToken()", span="81-81"];
m1_53 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.FetchNextJob(queues, token)", span="84-84"];
m1_667 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968"];
m1_669 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="974-987"];
m1_668 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="970-972"];
m1_670 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968"];
m1_739 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090"];
m1_740 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1092-1096"];
m1_741 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090"];
m1_864 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298"];
m1_866 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1304-1319"];
m1_865 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1300-1302"];
m1_867 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298"];
m1_575 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289"];
m1_13 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="26-26"];
m1_20 [cluster="Unk.Equal", file="ClientApiTests.cs", label="Entry Unk.Equal", span=""];
m1_21 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="36-36"];
m1_23 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="36-36"];
m1_22 [cluster="lambda expression", file="ClientApiTests.cs", label="new SqlServerConnection(null, IsolationLevel.Serializable, _providers)", span="36-36"];
m1_24 [cluster="SqlServerConnection.cstr", file="ClientApiTests.cs", label="Entry SqlServerConnection.cstr", span=""];
m1_271 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376"];
m1_272 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="378-384"];
m1_273 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376"];
m1_343 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492"];
m1_345 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="503-512"];
m1_344 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="494-501"];
m1_346 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492"];
m1_905 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ClientApiTests.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m1_304 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435"];
m1_306 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="442-454"];
m1_305 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="437-440"];
m1_307 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435"];
m1_153 [cluster="Unk.ToString", file="ClientApiTests.cs", label="Entry Unk.ToString", span=""];
m1_64 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", color=green, community=0, file="ClientApiTests.cs", label="0: UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="93-101"];
m1_25 [cluster="Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", file="ClientApiTests.cs", label="Entry Hangfire.States.ScheduledState.ScheduledState(System.DateTime)", span="81-81"];
m1_26 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=green, community=0, file="ClientApiTests.cs", label="1: Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="111-111"];
m1_27 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="ClientApiTests.cs", label="client == null", span="116-116"];
m1_28 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="ClientApiTests.cs", label="throw new ArgumentNullException(''client'');", span="116-116"];
m1_857 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288"];
m1_858 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1290-1294"];
m1_859 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288"];
m1_19 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33"];
m1_209 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249"];
m1_210 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="251-253"];
m1_211 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249"];
m1_883 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332"];
m1_884 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1334-1338"];
m1_885 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332"];
m1_65 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91"];
m1_66 [cluster="Unk.UseConnection", file="ClientApiTests.cs", label="Entry Unk.UseConnection", span=""];
m1_67 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="93-101"];
m1_450 [cluster="Unk.NotEqual", file="ClientApiTests.cs", label="Entry Unk.NotEqual", span=""];
m1_829 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467"];
m1_719 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055"];
m1_721 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1061-1076"];
m1_720 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1057-1059"];
m1_722 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055"];
m1_281 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388"];
m1_283 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="395-407"];
m1_282 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="390-393"];
m1_284 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388"];
m1_0 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21"];
m1_1 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ClientApiTests.cs", label="_queue = new Mock<IPersistentJobQueue>()", span="23-23"];
m1_3 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ClientApiTests.cs", label="provider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(_queue.Object)", span="26-27"];
m1_2 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ClientApiTests.cs", label="var provider = new Mock<IPersistentJobQueueProvider>()", span="25-25"];
m1_4 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ClientApiTests.cs", label="_providers = new PersistentJobQueueProviderCollection(provider.Object)", span="29-29"];
m1_353 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516"];
m1_354 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="518-524"];
m1_355 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516"];
m1_792 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430"];
m1_7 [cluster="Mock<IPersistentJobQueueProvider>.cstr", file="ClientApiTests.cs", label="Entry Mock<IPersistentJobQueueProvider>.cstr", span=""];
m1_430 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623"];
m1_431 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ClientApiTests.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="625-626"];
m1_432 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623"];
m1_772 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145"];
m1_774 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1151-1166"];
m1_773 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1147-1149"];
m1_775 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145"];
m1_389 [cluster="Unk.Execute", file="ClientApiTests.cs", label="Entry Unk.Execute", span=""];
m1_239 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304"];
m1_241 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="320-335"];
m1_240 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="306-318"];
m1_242 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304"];
m1_658 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943"];
m1_660 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="949-964"];
m1_659 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="945-947"];
m1_661 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943"];
m1_259 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="ClientApiTests.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m1_54 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="0: _queue.Verify(x => x.Dequeue(queues, token))", span="86-86"];
m1_847 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278"];
m1_848 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1280-1284"];
m1_849 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278"];
m1_488 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340"];
m1_5 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21"];
m1_6 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="ClientApiTests.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m1_402 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580"];
m1_403 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="582-588"];
m1_404 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580"];
m1_77 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105"];
m1_82 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotNull(transaction)", span="110-110"];
m1_83 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="107-111"];
m1_764 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453"];
m1_39 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="ClientApiTests.cs", label="return client.Create(Job.FromExpression(methodCall), state);", span="155-155"];
m1_685 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405"];
m1_48 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="77-77"];
m1_33 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="ClientApiTests.cs", label="throw new ArgumentNullException(''client'');", span="135-135"];
m1_36 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", color=green, community=0, file="ClientApiTests.cs", label="1: Entry Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", span="148-148"];
m1_35 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="ClientApiTests.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="130-130"];
m1_37 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="ClientApiTests.cs", label="client == null", span="153-153"];
m1_34 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="ClientApiTests.cs", label="return client.Create(methodCall, new ScheduledState(enqueueAt.UtcDateTime));", span="137-137"];
m1_38 [cluster="Hangfire.BackgroundJobClientExtensions.Create(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState)", file="ClientApiTests.cs", label="throw new ArgumentNullException(''client'');", span="153-153"];
m1_205 [cluster="int.ToString()", file="ClientApiTests.cs", label="Entry int.ToString()", span="0-0"];
m1_326 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470"];
m1_327 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="472-478"];
m1_328 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470"];
m1_87 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", color=green, community=0, file="ClientApiTests.cs", label="1: UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="117-121"];
m1_100 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''job'', exception.ParamName)", span="136-136"];
m1_102 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="130-134"];
m1_103 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="130-134"];
m1_101 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="127-137"];
m1_104 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="130-134"];
m1_203 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="ClientApiTests.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m1_250 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339"];
m1_252 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="346-360"];
m1_251 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="341-344"];
m1_253 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339"];
m1_890 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342"];
m1_892 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1348-1363"];
m1_891 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1344-1346"];
m1_893 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342"];
m1_650 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391"];
m1_156 [cluster="System.DateTime.AddDays(double)", file="ClientApiTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m1_439 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322"];
m1_154 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="ClientApiTests.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m1_566 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802"];
m1_567 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="804-805"];
m1_568 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802"];
m1_511 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718"];
m1_512 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="720-726"];
m1_513 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718"];
m1_219 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257"];
m1_220 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="259-263"];
m1_221 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257"];
m1_576 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809"];
m1_577 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="811-815"];
m1_578 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809"];
m1_440 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630"];
m1_442 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="638-646"];
m1_441 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="632-636"];
m1_443 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630"];
m1_583 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819"];
m1_585 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="825-843"];
m1_584 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="821-823"];
m1_586 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819"];
m1_782 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170"];
m1_783 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1172-1178"];
m1_784 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170"];
m1_712 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045"];
m1_713 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1047-1051"];
m1_714 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045"];
m1_793 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182"];
m1_794 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1184-1190"];
m1_795 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182"];
m1_78 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", color=green, community=0, file="ClientApiTests.cs", label="0: UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="107-111"];
m1_79 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105"];
m1_80 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="107-111"];
m1_563 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="794-794"];
m1_29 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="ClientApiTests.cs", label="return client.Create(methodCall, new ScheduledState(delay));", span="118-118"];
m1_30 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", color=green, community=0, file="ClientApiTests.cs", label="1: Exit Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="111-111"];
m1_31 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="ClientApiTests.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", span="130-130"];
m1_59 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="ClientApiTests.cs", label="client == null", span="251-251"];
m1_60 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", color=green, community=0, file="ClientApiTests.cs", label="0: throw new ArgumentNullException(''client'');", span="251-251"];
m1_61 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="ClientApiTests.cs", label="var state = new DeletedState()", span="253-253"];
m1_70 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", color=green, community=0, file="ClientApiTests.cs", label="0: throw new ArgumentNullException(''client'');", span="286-286"];
m1_69 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="ClientApiTests.cs", label="client == null", span="286-286"];
m1_71 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="ClientApiTests.cs", label="var state = new EnqueuedState()", span="288-288"];
m1_89 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="ClientApiTests.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="332-332"];
m1_90 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", color=green, community=0, file="ClientApiTests.cs", label="1: Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="326-326"];
m1_91 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", file="ClientApiTests.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", span="335-335"];
m1_98 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="ClientApiTests.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="344-344"];
m1_99 [cluster="Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", color=green, community=0, file="ClientApiTests.cs", label="1: Entry Hangfire.States.AwaitingState.AwaitingState(string, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="79-79"];
m1_110 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="143-153"];
m1_112 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: Assert.Equal(''parameters'', exception.ParamName)", span="152-152"];
m1_111 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="145-150"];
m1_113 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="143-153"];
m1_126 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="159-195"];
m1_128 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="162-166"];
m1_127 [cluster="lambda expression", file="ClientApiTests.cs", label="var createdAt = new DateTime(2012, 12, 12)", span="161-161"];
m1_129 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: Assert.NotNull(jobId)", span="168-168"];
m1_160 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="163-163"];
m1_130 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: Assert.NotEmpty(jobId)", span="169-169"];
m1_132 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: Assert.Equal(jobId, sqlJob.Id.ToString())", span="172-172"];
m1_144 [cluster="lambda expression", file="ClientApiTests.cs", label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="188-191"];
m1_131 [cluster="lambda expression", file="ClientApiTests.cs", label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="171-171"];
m1_133 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="173-173"];
m1_136 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="177-177"];
m1_135 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(null, (string) sqlJob.StateName)", span="175-175"];
m1_137 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: invocationData.Arguments = sqlJob.Arguments", span="178-178"];
m1_138 [cluster="lambda expression", file="ClientApiTests.cs", label="var job = invocationData.Deserialize()", span="180-180"];
m1_139 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="181-181"];
m1_140 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="182-182"];
m1_161 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: SampleMethod(''Hello'')", span="163-163"];
m1_162 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="163-163"];
m1_193 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="227-234"];
m1_191 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="223-245"];
m1_192 [cluster="lambda expression", file="ClientApiTests.cs", label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="225-225"];
m1_194 [cluster="lambda expression", color=green, community=0, file="ClientApiTests.cs", label="1: var result = connection.GetJobData(((int)jobId.Id).ToString())", span="236-236"];
m1_195 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotNull(result)", span="238-238"];
m1_196 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotNull(result.Job)", span="239-239"];
m1_197 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Succeeded'', result.State)", span="240-240"];
m1_198 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="241-241"];
m1_199 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Null(result.LoadException)", span="242-242"];
m1_200 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="243-243"];
m1_201 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="244-244"];
m1_12 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="ClientApiTests.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="56-56"];
m1_173 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="201-202"];
m1_213 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="252-253"];
m1_264 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="368-369"];
m1_275 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="380-381"];
m1_319 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="462-463"];
m1_330 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="474-475"];
m1_348 [cluster="lambda expression", file="ClientApiTests.cs", label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="505-507"];
m1_357 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="520-521"];
m1_368 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="530-531"];
m1_394 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="572-573"];
m1_406 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="584-585"];
m1_434 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="625-626"];
m1_455 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="652-653"];
m1_482 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="682-683"];
m1_505 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="714-714"];
m1_534 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="761-762"];
m1_545 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="773-774"];
m1_570 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="805-805"];
m1_599 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="851-852"];
m1_626 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="893-893"];
m1_645 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="927-928"];
m1_680 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="995-995"];
m1_706 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1039-1040"];
m1_733 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1084-1085"];
m1_759 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1129-1130"];
m1_786 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1174-1175"];
m1_797 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1186-1187"];
m1_823 [cluster="lambda expression", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1233-1234"];
m1_851 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1282-1283"];
m1_877 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1327-1327"];
m1_134 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(null, (int?) sqlJob.StateId)", span="174-174"];
m1_141 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''\''Hello\'''', job.Arguments[0])", span="183-183"];
m1_145 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Value1'', parameters[''Key1''])", span="193-193"];
m1_146 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Value2'', parameters[''Key2''])", span="194-194"];
m1_235 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Name'', result.Name)", span="297-297"];
m1_236 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Reason'', result.Reason)", span="298-298"];
m1_237 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="299-299"];
m1_248 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="334-334"];
m1_265 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''id'', exception.ParamName)", span="371-371"];
m1_276 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''name'', exception.ParamName)", span="383-383"];
m1_290 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Value'', parameter.Value)", span="406-406"];
m1_302 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''AnotherValue'', parameter.Value)", span="430-430"];
m1_313 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal((string) null, parameter.Value)", span="453-453"];
m1_320 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''id'', exception.ParamName)", span="465-465"];
m1_331 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''name'', exception.ParamName)", span="477-477"];
m1_350 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''value'', value)", span="511-511"];
m1_358 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''key'', exception.ParamName)", span="523-523"];
m1_387 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''-1.0'', result)", span="563-563"];
m1_395 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="575-575"];
m1_407 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''context'', exception.ParamName)", span="587-587"];
m1_419 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''server'', server.Id)", span="604-604"];
m1_425 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''server'', sameServer.Id)", span="617-617"];
m1_470 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(2012, servers[''server2''].Year)", span="675-675"];
m1_497 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''server2'', liveServer.Id)", span="706-706"];
m1_517 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(0, result.Count)", span="725-725"];
m1_526 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(2, result.Count)", span="750-750"];
m1_535 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''key'', exception.ParamName)", span="764-764"];
m1_546 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="776-776"];
m1_557 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="796-796"];
m1_558 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="797-797"];
m1_591 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(2, result.Count)", span="840-840"];
m1_592 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="841-841"];
m1_593 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="842-842"];
m1_610 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(0, result)", span="862-862"];
m1_619 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(2, result)", span="884-884"];
m1_639 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="918-918"];
m1_656 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(0, result)", span="938-938"];
m1_665 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(2, result)", span="963-963"];
m1_674 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(12, result)", span="986-986"];
m1_691 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(0, result)", span="1005-1005"];
m1_700 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(2, result)", span="1030-1030"];
m1_744 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(0, result)", span="1095-1095"];
m1_753 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(2, result)", span="1120-1120"];
m1_787 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1177-1177"];
m1_798 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''name'', exception.ParamName)", span="1189-1189"];
m1_817 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''1'', result)", span="1224-1224"];
m1_824 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1236-1236"];
m1_845 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1273-1273"];
m1_871 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1318-1318"];
m1_72 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="ClientApiTests.cs", label="return client.ChangeState(jobId, state, fromState);", span="289-289"];
m1_68 [cluster="Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", file="ClientApiTests.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Requeue(Hangfire.IBackgroundJobClient, string, string)", span="281-281"];
m1_75 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="ClientApiTests.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState());", span="297-297"];
m1_74 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="ClientApiTests.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="292-292"];
m1_81 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="ClientApiTests.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="317-317"];
m1_92 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", file="ClientApiTests.cs", label="return ContinueWith(client, parentId, methodCall, new EnqueuedState(), options);", span="341-341"];
m1_231 [cluster="lambda expression", file="ClientApiTests.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="285-288"];
m1_244 [cluster="lambda expression", file="ClientApiTests.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="322-325"];
m1_538 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="762-762"];
m1_555 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="785-789"];
m1_115 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="146-150"];
m1_114 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="146-150"];
m1_147 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="159-195"];
m1_142 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="185-185"];
m1_143 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="186-186"];
m1_163 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="191-191"];
m1_166 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="191-191"];
m1_234 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotNull(result)", span="295-295"];
m1_247 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotNull(result)", span="332-332"];
m1_257 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotNull(result.LoadException)", span="359-359"];
m1_421 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotNull(server.LastHeartbeat)", span="608-608"];
m1_516 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotNull(result)", span="724-724"];
m1_590 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotNull(result)", span="839-839"];
m1_287 [cluster="lambda expression", file="ClientApiTests.cs", label="string jobId = job.Id.ToString()", span="398-398"];
m1_298 [cluster="lambda expression", file="ClientApiTests.cs", label="string jobId = job.Id.ToString()", span="421-421"];
m1_310 [cluster="lambda expression", file="ClientApiTests.cs", label="string jobId = job.Id.ToString()", span="445-445"];
m1_349 [cluster="lambda expression", file="ClientApiTests.cs", label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="509-509"];
m1_119 [cluster="lambda expression", file="ClientApiTests.cs", label="SampleMethod(''hello'')", span="147-147"];
m1_207 [cluster="lambda expression", file="ClientApiTests.cs", label="SampleMethod(''wrong'')", span="225-225"];
m1_202 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="223-245"];
m1_206 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="225-225"];
m1_232 [cluster="lambda expression", file="ClientApiTests.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="290-292"];
m1_245 [cluster="lambda expression", file="ClientApiTests.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="327-329"];
m1_255 [cluster="lambda expression", file="ClientApiTests.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="348-355"];
m1_286 [cluster="lambda expression", file="ClientApiTests.cs", label="var job = sql.Query(arrangeSql).Single()", span="397-397"];
m1_289 [cluster="lambda expression", file="ClientApiTests.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="402-404"];
m1_297 [cluster="lambda expression", file="ClientApiTests.cs", label="var job = sql.Query(arrangeSql).Single()", span="420-420"];
m1_301 [cluster="lambda expression", file="ClientApiTests.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="426-428"];
m1_309 [cluster="lambda expression", file="ClientApiTests.cs", label="var job = sql.Query(arrangeSql).Single()", span="444-444"];
m1_312 [cluster="lambda expression", file="ClientApiTests.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="449-451"];
m1_418 [cluster="lambda expression", file="ClientApiTests.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="603-603"];
m1_424 [cluster="lambda expression", file="ClientApiTests.cs", label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="616-616"];
m1_447 [cluster="lambda expression", file="ClientApiTests.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="644-644"];
m1_468 [cluster="lambda expression", file="ClientApiTests.cs", label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="671-672"];
m1_496 [cluster="lambda expression", file="ClientApiTests.cs", label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="705-705"];
m1_556 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="791-794"];
m1_233 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetStateData(jobId.ToString())", span="294-294"];
m1_246 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetStateData(jobId.ToString())", span="331-331"];
m1_256 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="357-357"];
m1_176 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetJobData(null)", span="202-202"];
m1_183 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetJobData(''1'')", span="210-210"];
m1_11 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", color=red, community=0, file="ClientApiTests.cs", label="1: return client.Create(methodCall, new EnqueuedState());", span="62-62"];
m1_172 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="201-202"];
m1_174 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="201-202"];
m1_175 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="202-202"];
m1_212 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="252-253"];
m1_214 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="252-253"];
m1_215 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="253-253"];
m1_263 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="366-372"];
m1_267 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="369-369"];
m1_274 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="378-384"];
m1_278 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="381-381"];
m1_318 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="460-466"];
m1_322 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="463-463"];
m1_329 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="472-478"];
m1_333 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="475-475"];
m1_347 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="503-512"];
m1_356 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="518-524"];
m1_360 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="521-521"];
m1_367 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="530-531"];
m1_369 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="530-531"];
m1_370 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="531-531"];
m1_393 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="570-576"];
m1_397 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="573-573"];
m1_405 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="582-588"];
m1_409 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="585-585"];
m1_433 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="625-626"];
m1_435 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="625-626"];
m1_436 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="626-626"];
m1_454 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="652-653"];
m1_456 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="652-653"];
m1_457 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="653-653"];
m1_481 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="682-683"];
m1_483 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="682-683"];
m1_484 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="683-683"];
m1_504 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="713-714"];
m1_506 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="713-714"];
m1_507 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="714-714"];
m1_533 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="759-765"];
m1_537 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="762-762"];
m1_544 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="771-777"];
m1_548 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="774-774"];
m1_569 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="804-805"];
m1_571 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="804-805"];
m1_572 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="805-805"];
m1_598 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="849-853"];
m1_600 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="849-853"];
m1_601 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="852-852"];
m1_625 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="891-894"];
m1_627 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="891-894"];
m1_628 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="893-893"];
m1_644 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="925-929"];
m1_646 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="925-929"];
m1_647 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="928-928"];
m1_679 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="993-996"];
m1_681 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="993-996"];
m1_682 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="995-995"];
m1_705 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1037-1041"];
m1_707 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1037-1041"];
m1_708 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1040-1040"];
m1_732 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1082-1086"];
m1_734 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1082-1086"];
m1_735 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1085-1085"];
m1_758 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1127-1131"];
m1_760 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1127-1131"];
m1_761 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1130-1130"];
m1_785 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1172-1178"];
m1_789 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1175-1175"];
m1_796 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1184-1190"];
m1_800 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1187-1187"];
m1_822 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1231-1237"];
m1_826 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1234-1234"];
m1_850 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1280-1284"];
m1_852 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1280-1284"];
m1_853 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1283-1283"];
m1_876 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1325-1328"];
m1_878 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1325-1328"];
m1_879 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1327-1327"];
m1_238 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="283-300"];
m1_249 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="320-335"];
m1_266 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="366-372"];
m1_277 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="378-384"];
m1_291 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="395-407"];
m1_303 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="418-431"];
m1_314 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="442-454"];
m1_321 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="460-466"];
m1_332 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="472-478"];
m1_351 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="503-512"];
m1_359 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="518-524"];
m1_386 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="561-561"];
m1_388 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="557-564"];
m1_396 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="570-576"];
m1_408 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="582-588"];
m1_420 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="605-607"];
m1_426 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Contains(''1000'', sameServer.Data)", span="618-618"];
m1_469 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotEqual(2012, servers[''server1''].Year)", span="674-674"];
m1_471 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="665-676"];
m1_498 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="693-707"];
m1_515 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="722-722"];
m1_518 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="720-726"];
m1_525 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="747-747"];
m1_527 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Contains(''1'', result)", span="751-751"];
m1_536 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="759-765"];
m1_547 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="771-777"];
m1_559 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="783-798"];
m1_589 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="836-836"];
m1_594 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="825-843"];
m1_609 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetSetCount(''my-set'')", span="861-861"];
m1_611 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="859-863"];
m1_618 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetSetCount(''set-1'')", span="882-882"];
m1_620 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="873-885"];
m1_638 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="916-916"];
m1_640 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="904-919"];
m1_655 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetCounter(''my-counter'')", span="937-937"];
m1_657 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="935-939"];
m1_664 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetCounter(''counter-1'')", span="960-960"];
m1_666 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="949-964"];
m1_673 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetCounter(''counter-1'')", span="984-984"];
m1_675 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="974-987"];
m1_690 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetHashCount(''my-hash'')", span="1004-1004"];
m1_692 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1002-1006"];
m1_699 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetHashCount(''hash-1'')", span="1027-1027"];
m1_701 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1016-1031"];
m1_743 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetListCount(''my-list'')", span="1094-1094"];
m1_745 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1092-1096"];
m1_752 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetListCount(''list-1'')", span="1117-1117"];
m1_754 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1106-1121"];
m1_788 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1172-1178"];
m1_799 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1184-1190"];
m1_816 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1221-1221"];
m1_818 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1210-1225"];
m1_825 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1231-1237"];
m1_844 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1270-1270"];
m1_846 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1257-1274"];
m1_870 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetAllItemsFromList(''list-1'')", span="1315-1315"];
m1_872 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1304-1319"];
m1_182 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="208-212"];
m1_222 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="259-263"];
m1_230 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="283-300"];
m1_243 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="320-335"];
m1_254 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="346-360"];
m1_285 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="395-407"];
m1_296 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="418-431"];
m1_308 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="442-454"];
m1_339 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="484-488"];
m1_376 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="537-543"];
m1_384 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="557-564"];
m1_415 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="594-619"];
m1_444 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="638-646"];
m1_465 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="665-676"];
m1_493 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="693-707"];
m1_514 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="720-726"];
m1_523 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="736-753"];
m1_554 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="783-798"];
m1_579 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="811-815"];
m1_587 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="825-843"];
m1_608 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="859-863"];
m1_616 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="873-885"];
m1_636 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="904-919"];
m1_654 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="935-939"];
m1_662 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="949-964"];
m1_671 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="974-987"];
m1_689 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1002-1006"];
m1_697 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1016-1031"];
m1_715 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1047-1051"];
m1_723 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1061-1076"];
m1_742 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1092-1096"];
m1_750 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1106-1121"];
m1_768 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1137-1141"];
m1_776 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1151-1166"];
m1_806 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1196-1200"];
m1_814 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1210-1225"];
m1_833 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1243-1247"];
m1_842 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1257-1274"];
m1_860 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1290-1294"];
m1_868 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1304-1319"];
m1_886 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1334-1338"];
m1_894 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="1348-1363"];
m1_76 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", file="ClientApiTests.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>)", span="292-292"];
m1_539 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="762-762"];
m1_116 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="146-150"];
m1_118 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="147-147"];
m1_165 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="191-191"];
m1_164 [cluster="lambda expression", file="ClientApiTests.cs", label="(string) x.Name", span="191-191"];
m1_168 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="191-191"];
m1_167 [cluster="lambda expression", file="ClientApiTests.cs", label="(string) x.Value", span="191-191"];
m1_258 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="346-360"];
m1_422 [cluster="lambda expression", file="ClientApiTests.cs", label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="610-614"];
m1_288 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="400-400"];
m1_299 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="423-423"];
m1_300 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="424-424"];
m1_311 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.SetJobParameter(jobId, ''Name'', null)", span="447-447"];
m1_120 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="147-147"];
m1_208 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="225-225"];
m1_417 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.AnnounceServer(''server'', context1)", span="601-601"];
m1_423 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.AnnounceServer(''server'', context2)", span="615-615"];
m1_446 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.RemoveServer(''Server1'')", span="642-642"];
m1_448 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="645-645"];
m1_467 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.Heartbeat(''server1'')", span="669-669"];
m1_472 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="672-672"];
m1_475 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="672-672"];
m1_495 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="703-703"];
m1_560 [cluster="lambda expression", file="ClientApiTests.cs", label="Entry lambda expression", span="794-794"];
m1_177 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="202-202"];
m1_184 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Null(result)", span="211-211"];
m1_224 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Null(result)", span="262-262"];
m1_341 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Null(value)", span="487-487"];
m1_378 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Null(result)", span="542-542"];
m1_581 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Null(result)", span="814-814"];
m1_808 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Null(result)", span="1199-1199"];
m1_895 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1351-1355"];
m1_717 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(result < TimeSpan.Zero)", span="1050-1050"];
m1_726 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1074-1074"];
m1_727 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1075-1075"];
m1_770 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(result < TimeSpan.Zero)", span="1140-1140"];
m1_779 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1164-1164"];
m1_780 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1165-1165"];
m1_888 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(result < TimeSpan.Zero)", span="1337-1337"];
m1_897 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1361-1361"];
m1_898 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1362-1362"];
m1_216 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetStateData(null)", span="253-253"];
m1_217 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="253-253"];
m1_268 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.SetJobParameter(null, ''name'', ''value'')", span="369-369"];
m1_269 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="369-369"];
m1_279 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.SetJobParameter(''1'', null, ''value'')", span="381-381"];
m1_280 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="381-381"];
m1_323 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetJobParameter(null, ''hello'')", span="463-463"];
m1_324 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="463-463"];
m1_334 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetJobParameter(''1'', null)", span="475-475"];
m1_335 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="475-475"];
m1_361 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="521-521"];
m1_362 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="521-521"];
m1_371 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="531-531"];
m1_372 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="531-531"];
m1_398 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.AnnounceServer(null, new ServerContext())", span="573-573"];
m1_399 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="573-573"];
m1_410 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.AnnounceServer(''server'', null)", span="585-585"];
m1_411 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="585-585"];
m1_437 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.RemoveServer(null)", span="626-626"];
m1_438 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="626-626"];
m1_458 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.Heartbeat(null)", span="653-653"];
m1_459 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="653-653"];
m1_485 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="683-683"];
m1_486 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="683-683"];
m1_508 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetAllItemsFromSet(null)", span="714-714"];
m1_509 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="714-714"];
m1_549 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.SetRangeInHash(''some-hash'', null)", span="774-774"];
m1_550 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="774-774"];
m1_573 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetAllEntriesFromHash(null)", span="805-805"];
m1_574 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="805-805"];
m1_602 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetSetCount(null)", span="852-852"];
m1_603 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="852-852"];
m1_629 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetRangeFromSet(null, 0, 1)", span="893-893"];
m1_630 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="893-893"];
m1_648 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetCounter(null)", span="928-928"];
m1_649 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="928-928"];
m1_683 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetHashCount(null)", span="995-995"];
m1_684 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="995-995"];
m1_709 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetHashTtl(null)", span="1040-1040"];
m1_710 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1040-1040"];
m1_736 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetListCount(null)", span="1085-1085"];
m1_737 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1085-1085"];
m1_762 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetListTtl(null)", span="1130-1130"];
m1_763 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1130-1130"];
m1_790 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetValueFromHash(null, ''name'')", span="1175-1175"];
m1_791 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1175-1175"];
m1_801 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetValueFromHash(''key'', null)", span="1187-1187"];
m1_802 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1187-1187"];
m1_827 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetRangeFromList(null, 0, 1)", span="1234-1234"];
m1_828 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1234-1234"];
m1_854 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetAllItemsFromList(null)", span="1283-1283"];
m1_855 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1283-1283"];
m1_880 [cluster="lambda expression", file="ClientApiTests.cs", label="connection.GetSetTtl(null)", span="1327-1327"];
m1_881 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1327-1327"];
m1_385 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql)", span="559-559"];
m1_427 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="594-619"];
m1_524 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="739-744"];
m1_528 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Contains(''2'', result)", span="752-752"];
m1_588 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="828-833"];
m1_617 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''value-1'' },\r\n                    new { Key = ''set-2'', Value = ''value-1'' },\r\n                    new { Key = ''set-1'', Value = ''value-2'' }\r\n                })", span="875-880"];
m1_637 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="906-914"];
m1_663 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="952-957"];
m1_672 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="977-981"];
m1_698 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="1019-1024"];
m1_751 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1109-1114"];
m1_815 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1213-1218"];
m1_843 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1260-1267"];
m1_869 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1307-1312"];
m1_185 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="208-212"];
m1_225 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="259-263"];
m1_223 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetStateData(''1'')", span="261-261"];
m1_342 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="484-488"];
m1_340 [cluster="lambda expression", file="ClientApiTests.cs", label="var value = connection.GetJobParameter(''1'', ''hello'')", span="486-486"];
m1_379 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="537-543"];
m1_377 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="539-540"];
m1_416 [cluster="lambda expression", file="ClientApiTests.cs", label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="596-600"];
m1_445 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql)", span="640-640"];
m1_449 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="638-646"];
m1_466 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql)", span="667-667"];
m1_494 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="695-701"];
m1_529 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="736-753"];
m1_582 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="811-815"];
m1_580 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="813-813"];
m1_718 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1047-1051"];
m1_716 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetHashTtl(''my-hash'')", span="1049-1049"];
m1_724 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1064-1068"];
m1_728 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1061-1076"];
m1_725 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetHashTtl(''hash-1'')", span="1071-1071"];
m1_771 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1137-1141"];
m1_769 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetListTtl(''my-list'')", span="1139-1139"];
m1_777 [cluster="lambda expression", file="ClientApiTests.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1154-1158"];
m1_781 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1151-1166"];
m1_778 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetListTtl(''list-1'')", span="1161-1161"];
m1_809 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1196-1200"];
m1_807 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1198-1198"];
m1_836 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1243-1247"];
m1_834 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1245-1245"];
m1_863 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1290-1294"];
m1_861 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetAllItemsFromList(''my-list'')", span="1292-1292"];
m1_889 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1334-1338"];
m1_887 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetSetTtl(''my-set'')", span="1336-1336"];
m1_899 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="1348-1363"];
m1_896 [cluster="lambda expression", file="ClientApiTests.cs", label="var result = connection.GetSetTtl(''set-1'')", span="1358-1358"];
m1_474 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="672-672"];
m1_473 [cluster="lambda expression", file="ClientApiTests.cs", label="(string)x.Id", span="672-672"];
m1_477 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="672-672"];
m1_476 [cluster="lambda expression", file="ClientApiTests.cs", label="(DateTime)x.LastHeartbeat", span="672-672"];
m1_562 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="794-794"];
m1_561 [cluster="lambda expression", file="ClientApiTests.cs", label="(string)x.Field", span="794-794"];
m1_564 [cluster="lambda expression", file="ClientApiTests.cs", label="(string)x.Value", span="794-794"];
m1_835 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Empty(result)", span="1246-1246"];
m1_862 [cluster="lambda expression", file="ClientApiTests.cs", label="Assert.Empty(result)", span="1293-1293"];
m1_565 [cluster="lambda expression", file="ClientApiTests.cs", label="Exit lambda expression", span="794-794"];
m1_62 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="ClientApiTests.cs", label="return client.ChangeState(jobId, state, fromState);", span="254-254"];
m1_125 [cluster="Unk.UseConnections", file="ClientApiTests.cs", label="Entry Unk.UseConnections", span=""];
m1_412 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592"];
m1_413 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="594-619"];
m1_414 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592"];
m1_693 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010"];
m1_695 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1016-1031"];
m1_694 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="1012-1014"];
m1_696 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010"];
m1_84 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="ClientApiTests.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", span="344-344"];
m1_540 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266"];
m1_9 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="ClientApiTests.cs", label="client == null", span="60-60"];
m1_390 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568"];
m1_391 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="570-576"];
m1_392 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568"];
m1_117 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ClientApiTests.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m1_41 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="ClientApiTests.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="66-66"];
m1_501 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711"];
m1_502 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="713-714"];
m1_503 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711"];
m1_900 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366"];
m1_902 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="ClientApiTests.cs", label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers)", span="1369-1369"];
m1_901 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="ClientApiTests.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1368-1368"];
m1_903 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="ClientApiTests.cs", label="action(sqlConnection, connection)", span="1371-1371"];
m1_904 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366"];
m1_711 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416"];
m1_260 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364"];
m1_261 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="366-372"];
m1_262 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364"];
m1_179 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206"];
m1_180 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="208-212"];
m1_181 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206"];
m1_157 [cluster="System.DateTime.AddMinutes(double)", file="ClientApiTests.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m1_336 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482"];
m1_337 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="484-488"];
m1_338 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482"];
m1_121 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386"];
m1_910 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386"];
m1_729 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080"];
m1_730 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1082-1086"];
m1_731 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080"];
m1_631 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361"];
m1_73 [cluster="Unk.Add", file="ClientApiTests.cs", label="Entry Unk.Add", span=""];
m1_530 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757"];
m1_531 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="759-765"];
m1_532 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757"];
m1_32 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, System.DateTimeOffset)", file="ClientApiTests.cs", label="client == null", span="135-135"];
m1_178 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154"];
m1_94 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="ClientApiTests.cs", label="client == null", span="351-351"];
m1_107 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141"];
m1_108 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", color=green, community=0, file="ClientApiTests.cs", label="0: UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="143-153"];
m1_109 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141"];
m1_612 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867"];
m1_614 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''value-1'' },\r\n                    new { Key = ''set-2'', Value = ''value-1'' },\r\n                    new { Key = ''set-1'', Value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="873-885"];
m1_613 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into Hangfire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="869-871"];
m1_615 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867"];
m1_765 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135"];
m1_766 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1137-1141"];
m1_767 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135"];
m1_151 [cluster="Unk.Query", file="ClientApiTests.cs", label="Entry Unk.Query", span=""];
m1_489 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687"];
m1_491 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="693-707"];
m1_490 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="689-691"];
m1_492 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687"];
m1_755 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125"];
m1_756 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1127-1131"];
m1_757 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125"];
m1_909 [cluster="System.Action<T>.Invoke(T)", file="ClientApiTests.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m1_226 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267"];
m1_228 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="283-300"];
m1_227 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="269-281"];
m1_229 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267"];
m1_803 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194"];
m1_804 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1196-1200"];
m1_805 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194"];
m1_85 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="ClientApiTests.cs", label="return ContinueWith(client, parentId, methodCall, nextState, JobContinuationOptions.OnlyOnSucceededState);", span="323-323"];
m1_63 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="ClientApiTests.cs", label="Exit Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="246-246"];
m1_8 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="ClientApiTests.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", span="56-56"];
m1_676 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991"];
m1_677 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="993-996"];
m1_678 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991"];
m1_186 [cluster="Unk.Null", file="ClientApiTests.cs", label="Entry Unk.Null", span=""];
m1_46 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", color=red, community=0, file="ClientApiTests.cs", label="1: return client.Create(Job.FromExpression(methodCall), state);", span="175-175"];
m1_47 [cluster="Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", color=green, community=0, file="ClientApiTests.cs", label="0: Exit Hangfire.BackgroundJobClientExtensions.Create<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="168-168"];
m1_519 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730"];
m1_521 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="736-753"];
m1_520 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="732-734"];
m1_522 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730"];
m1_106 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104"];
m1_10 [cluster="Hangfire.BackgroundJobClientExtensions.Enqueue<T>(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action<T>>)", file="ClientApiTests.cs", label="throw new ArgumentNullException(''client'');", span="60-60"];
m1_204 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ClientApiTests.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m1_499 [cluster="System.DateTime.AddHours(double)", file="ClientApiTests.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m1_150 [cluster="Unk.NotEmpty", file="ClientApiTests.cs", label="Entry Unk.NotEmpty", span=""];
m1_15 [cluster="Hangfire.BackgroundJobClientExtensions.Schedule(Hangfire.IBackgroundJobClient, System.Linq.Expressions.Expression<System.Action>, System.TimeSpan)", file="ClientApiTests.cs", label="client == null", span="78-78"];
m1_837 [cluster="Unk.Empty", file="ClientApiTests.cs", label="Entry Unk.Empty", span=""];
m1_541 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769"];
m1_542 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="771-777"];
m1_543 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769"];
m1_686 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000"];
m1_687 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="1002-1006"];
m1_688 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000"];
m1_702 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035"];
m1_703 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1037-1041"];
m1_704 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035"];
m1_906 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="ClientApiTests.cs", label="var connection = new SqlServerConnection( \r\n                ConnectionUtils.CreateConnection(),\r\n                IsolationLevel.Serializable,\r\n                _providers)", span="1377-1380"];
m1_907 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="ClientApiTests.cs", label="action(connection)", span="1382-1382"];
m1_908 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375"];
m1_641 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923"];
m1_642 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="925-929"];
m1_643 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923"];
m1_58 [cluster="Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", file="ClientApiTests.cs", label="Entry Hangfire.BackgroundJobClientExtensions.Delete(Hangfire.IBackgroundJobClient, string, string)", span="246-246"];
m1_510 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244"];
m1_819 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229"];
m1_820 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1231-1237"];
m1_821 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229"];
m1_315 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458"];
m1_316 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="460-466"];
m1_317 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458"];
m1_428 [cluster="string.StartsWith(string)", file="ClientApiTests.cs", label="Entry string.StartsWith(string)", span="0-0"];
m1_838 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251"];
m1_840 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1257-1274"];
m1_839 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1253-1255"];
m1_841 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251"];
m1_487 [cluster="System.TimeSpan.FromMinutes(double)", file="ClientApiTests.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m1_159 [cluster="Unk.ToDictionary", file="ClientApiTests.cs", label="Entry Unk.ToDictionary", span=""];
m1_40 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64"];
m1_500 [cluster="System.TimeSpan.FromHours(double)", file="ClientApiTests.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m1_95 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="ClientApiTests.cs", label="throw new ArgumentNullException(''client'');", span="351-351"];
m1_96 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", color=green, community=0, file="ClientApiTests.cs", label="1: var state = new AwaitingState(parentId, nextState, options)", span="353-353"];
m1_97 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.States.IState, Hangfire.JobContinuationOptions)", file="ClientApiTests.cs", label="return client.Create(Job.FromExpression(methodCall), state);", span="354-354"];
m1_651 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933"];
m1_652 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="935-939"];
m1_653 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933"];
m1_856 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483"];
m1_873 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323"];
m1_874 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1325-1328"];
m1_875 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323"];
m1_86 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", file="ClientApiTests.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.States.IState)", span="317-317"];
m1_88 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", file="ClientApiTests.cs", label="Entry Hangfire.BackgroundJobClientExtensions.ContinueWith(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action>, Hangfire.JobContinuationOptions)", span="326-326"];
m1_148 [cluster="System.DateTime.DateTime(int, int, int)", file="ClientApiTests.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m1_14 [cluster="Unk.>", file="ClientApiTests.cs", label="Entry Unk.>", span=""];
m1_17 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ClientApiTests.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null, IsolationLevel.Serializable, _providers))", span="35-36"];
m1_16 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33"];
m1_18 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ClientApiTests.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="38-38"];
m1_42 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="ClientApiTests.cs", label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers, ownsConnection: false)", span="68-68"];
m1_270 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219"];
m1_595 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847"];
m1_596 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="849-853"];
m1_597 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847"];
m1_93 [cluster="Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", file="ClientApiTests.cs", label="Exit Hangfire.BackgroundJobClientExtensions.ContinueWith<T>(Hangfire.IBackgroundJobClient, string, System.Linq.Expressions.Expression<System.Action<T>>, Hangfire.JobContinuationOptions)", span="335-335"];
m1_380 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547"];
m1_382 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="557-564"];
m1_381 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="549-555"];
m1_383 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547"];
m1_43 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="ClientApiTests.cs", label="connection.Dispose()", span="70-70"];
m1_44 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", color=green, community=0, file="ClientApiTests.cs", label="1: Assert.Equal(ConnectionState.Open, sqlConnection.State)", span="72-72"];
m1_45 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64"];
m1_632 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898"];
m1_634 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="904-919"];
m1_633 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into Hangfire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="900-902"];
m1_635 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898"];
m1_149 [cluster="System.TimeSpan.FromDays(double)", file="ClientApiTests.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m1_292 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411"];
m1_294 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="418-431"];
m1_293 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="413-416"];
m1_295 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411"];
m1_882 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377"];
m1_325 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233"];
m1_400 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="ClientApiTests.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18"];
m1_105 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ClientApiTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m1_352 [cluster="Unk.GetJobParameter", file="ClientApiTests.cs", label="Entry Unk.GetJobParameter", span=""];
m1_218 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191"];
m1_461 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657"];
m1_463 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="665-676"];
m1_462 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="659-663"];
m1_464 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657"];
m1_830 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241"];
m1_831 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1243-1247"];
m1_832 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241"];
m1_551 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781"];
m1_552 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="783-798"];
m1_553 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781"];
m1_187 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216"];
m1_188 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", color=green, community=0, file="ClientApiTests.cs", label="1: string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="218-221"];
m1_189 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", color=green, community=0, file="ClientApiTests.cs", label="1: UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="223-245"];
m1_190 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216"];
m1_429 [cluster="Unk.Contains", file="ClientApiTests.cs", label="Entry Unk.Contains", span=""];
m1_451 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650"];
m1_452 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ClientApiTests.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="652-653"];
m1_453 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650"];
m1_746 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100"];
m1_748 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="ClientApiTests.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1106-1121"];
m1_747 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="ClientApiTests.cs", label="string arrangeSql = @''\r\ninsert into Hangfire.List ([Key])\r\nvalues (@key)''", span="1102-1104"];
m1_749 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100"];
m1_604 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352"];
m1_152 [cluster="Unk.Single", file="ClientApiTests.cs", label="Entry Unk.Single", span=""];
m1_169 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199"];
m1_170 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="201-202"];
m1_171 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199"];
m1_122 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157"];
m1_123 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", color=green, community=0, file="ClientApiTests.cs", label="1: UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''\''Hello\'''', job.Arguments[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="159-195"];
m1_124 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157"];
m1_158 [cluster="Unk.True", file="ClientApiTests.cs", label="Entry Unk.True", span=""];
m1_373 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535"];
m1_374 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="537-543"];
m1_375 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535"];
m1_738 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442"];
m1_605 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="ClientApiTests.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857"];
m1_606 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="ClientApiTests.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="859-863"];
m1_607 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="ClientApiTests.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857"];
m1_911 [file="ClientApiTests.cs", label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span=""];
m1_912 [file="ClientApiTests.cs", label=token, span=""];
m1_913 [file="ClientApiTests.cs", label=queues, span=""];
m1_916 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_919 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_931 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_914 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_915 [file="ClientApiTests.cs", label=token, span=""];
m1_945 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_917 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_921 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_922 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_923 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_926 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_927 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_928 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_918 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_972 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_920 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_924 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_925 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_929 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_930 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_932 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_933 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_935 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_936 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_937 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_939 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_941 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_943 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_946 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_947 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_949 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_951 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_953 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_956 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_958 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_960 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_962 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_964 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_965 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_967 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_969 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_971 [file="ClientApiTests.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m1_934 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_944 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_948 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_950 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_952 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_954 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_955 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_957 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_961 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_966 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_968 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_970 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_938 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_940 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_942 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_959 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m1_963 [file="ClientApiTests.cs", label=arrangeSql, span=""];
m4_9 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="Command.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m4_10 [cluster="lambda expression", file="Command.cs", label="Entry lambda expression", span="40-49"];
m4_4 [cluster="lambda expression", color=green, community=0, file="Command.cs", label="0: return stateMachine.ChangeState(jobId, state, FailedState.Name);", span="35-35"];
m4_0 [cluster="lambda expression", file="Command.cs", label="Entry lambda expression", span="26-37"];
m4_2 [cluster="lambda expression", file="Command.cs", label="var stateMachine = new StateMachine(connection)", span="32-32"];
m4_3 [cluster="lambda expression", color=green, community=0, file="Command.cs", label="0: var state = new EnqueuedState(''The job has been retried by a user.'')", span="33-33"];
m4_5 [cluster="lambda expression", file="Command.cs", label="Exit lambda expression", span="26-37"];
m4_1 [cluster="lambda expression", file="Command.cs", label="var connection = JobStorage.Current.GetConnection()", span="28-28"];
m4_14 [cluster="lambda expression", file="Command.cs", label="return stateMachine.ChangeState(jobId, state, ScheduledState.Name);", span="47-47"];
m4_13 [cluster="lambda expression", file="Command.cs", label="var state = new EnqueuedState(''The job has been enqueued by a user.'')", span="45-45"];
m4_12 [cluster="lambda expression", file="Command.cs", label="var stateMachine = new StateMachine(connection)", span="44-44"];
m4_11 [cluster="lambda expression", file="Command.cs", label="var connection = JobStorage.Current.GetConnection()", span="42-42"];
m4_15 [cluster="lambda expression", file="Command.cs", label="Exit lambda expression", span="40-49"];
m4_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="Command.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m4_8 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="Command.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="31-31"];
m4_6 [cluster="HangFire.JobStorage.GetConnection()", file="Command.cs", label="Entry HangFire.JobStorage.GetConnection()", span="45-45"];
m5_0 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
m5_1 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="DequeuedJobsWatcher.cs", label="_storage = storage", span="41-41"];
m5_2 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
m5_73 [cluster="HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", span="151-151"];
m5_81 [cluster="System.Threading.Thread.Join()", file="DequeuedJobsWatcher.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m5_45 [cluster="Unk.SetEntryInHash", file="DequeuedJobsWatcher.cs", label="Entry Unk.SetEntryInHash", span=""];
m5_41 [cluster="string.Format(string, object)", file="DequeuedJobsWatcher.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_48 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m5_72 [cluster="Unk.Info", file="DequeuedJobsWatcher.cs", label="Entry Unk.Info", span=""];
m5_57 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m5_26 [cluster="Unk.InfoFormat", file="DequeuedJobsWatcher.cs", label="Entry Unk.InfoFormat", span=""];
m5_80 [cluster="System.Threading.EventWaitHandle.Set()", file="DequeuedJobsWatcher.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m5_49 [cluster="HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="14-14"];
m5_53 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="150-150"];
m5_54 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DequeuedJobsWatcher.cs", label="return !String.IsNullOrEmpty(fetchedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(fetchedTimestamp) > JobTimeout);", span="152-153"];
m5_55 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByFetchedTime(string)", span="150-150"];
m5_58 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="156-156"];
m5_59 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="!String.IsNullOrEmpty(fetchedTimestamp)", span="161-161"];
m5_61 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="return !String.IsNullOrEmpty(checkedTimestamp) &&\r\n                   (DateTime.UtcNow - JobHelper.FromStringTimestamp(checkedTimestamp) > CheckedTimeout);", span="166-167"];
m5_60 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="return false;", span="163-163"];
m5_62 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.TimedOutByCheckedTime(string, string)", span="156-156"];
m5_52 [cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="179-179"];
m5_46 [cluster="Unk.TimedOutByFetchedTime", file="DequeuedJobsWatcher.cs", label="Entry Unk.TimedOutByFetchedTime", span=""];
m5_19 [cluster="Unk.GetClient", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetClient", span=""];
m5_47 [cluster="Unk.TimedOutByCheckedTime", file="DequeuedJobsWatcher.cs", label="Entry Unk.TimedOutByCheckedTime", span=""];
m5_56 [cluster="string.IsNullOrEmpty(string)", file="DequeuedJobsWatcher.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m5_75 [cluster="Unk.Fatal", file="DequeuedJobsWatcher.cs", label="Entry Unk.Fatal", span=""];
m5_24 [cluster="Unk.GetAllItemsFromList", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m5_44 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m5_76 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="196-196"];
m5_77 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DequeuedJobsWatcher.cs", label="_stopped.Set()", span="198-198"];
m5_78 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DequeuedJobsWatcher.cs", label="thread.Join()", span="199-199"];
m5_79 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="196-196"];
m5_51 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m5_20 [cluster="Unk.GetAllItemsFromSet", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m5_74 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="DequeuedJobsWatcher.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m5_43 [cluster="Unk.IsNullOrEmpty", file="DequeuedJobsWatcher.cs", label="Entry Unk.IsNullOrEmpty", span=""];
m5_25 [cluster="Unk.RequeueJobIfTimedOut", file="DequeuedJobsWatcher.cs", label="Entry Unk.RequeueJobIfTimedOut", span=""];
m5_22 [cluster="Unk.Format", file="DequeuedJobsWatcher.cs", label="Entry Unk.Format", span=""];
m5_42 [cluster="Unk.GetValuesFromHash", file="DequeuedJobsWatcher.cs", label="Entry Unk.GetValuesFromHash", span=""];
m5_21 [cluster="Unk.DebugFormat", file="DequeuedJobsWatcher.cs", label="Entry Unk.DebugFormat", span=""];
m5_3 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="44-44"];
m5_4 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="var redis = _storage.PooledManager.GetClient()", span="46-46"];
m5_5 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="var queues = redis.GetAllItemsFromSet(''hangfire:queues'')", span="48-48"];
m5_8 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="redis.AcquireLock(\r\n                        String.Format(''hangfire:queue:{0}:dequeued:lock'', queue),\r\n                        DequeuedLockTimeout)", span="58-60"];
m5_10 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="var jobIds = redis.GetAllItemsFromList(\r\n                            String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="65-66"];
m5_13 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="RequeueJobIfTimedOut(redis, jobId, queue)", span="72-72"];
m5_6 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label=queues, span="50-50"];
m5_7 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Logger.DebugFormat(\r\n                        ''Acquiring the lock for the dequeued list of the '{0}' queue...'', queue)", span="55-56"];
m5_9 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Logger.DebugFormat(\r\n                            ''Looking for timed out jobs in the '{0}' queue...'', queue)", span="62-63"];
m5_16 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Logger.DebugFormat(''No timed out jobs were found in the '{0}' queue'', queue)", span="80-80"];
m5_17 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Logger.InfoFormat(\r\n                                ''{0} timed out jobs were found in the '{1}' queue and re-queued.'',\r\n                                requeued,\r\n                                queue)", span="84-87"];
m5_11 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="var requeued = 0", span="68-68"];
m5_12 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label=jobIds, span="70-70"];
m5_14 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="requeued++", span="74-74"];
m5_15 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="requeued == 0", span="78-78"];
m5_18 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="44-44"];
m5_63 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="170-170"];
m5_64 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Logger.Info(''Dequeued jobs watcher has been started.'')", span="174-174"];
m5_65 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label=true, span="176-176"];
m5_66 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="JobServer.RetryOnException(FindAndRequeueTimedOutJobs, _stopped)", span="178-178"];
m5_68 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Logger.Info(''Dequeued jobs watcher has been stopped.'')", span="186-186"];
m5_67 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="_stopped.WaitOne(SleepTimeout)", span="180-180"];
m5_69 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label=Exception, span="188-188"];
m5_70 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Logger.Fatal(\r\n                    ''Unexpected exception caught in the dequeued jobs watcher. Timed out jobs will not be re-queued.'',\r\n                    ex)", span="190-192"];
m5_71 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.HangFire.Server.IThreadWrappable.Work()", span="170-170"];
m5_32 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="redis.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Checked'',\r\n                    JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="124-127"];
m5_27 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", span="94-94"];
m5_28 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="var flags = redis.GetValuesFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                ''Fetched'',\r\n                ''Checked'')", span="96-99"];
m5_34 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="0: var stateMachine = new StateMachine(new RedisStorageConnection(_storage, redis))", span="136-136"];
m5_36 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="stateMachine.ChangeState(jobId, state, EnqueuedState.Name, ProcessingState.Name)", span="139-139"];
m5_37 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="1: RedisStorageConnection.RemoveFromDequeuedList(redis, queue, jobId)", span="141-141"];
m5_29 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="var fetched = flags[0]", span="101-101"];
m5_30 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="var @checked = flags[1]", span="102-102"];
m5_31 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="String.IsNullOrEmpty(fetched) && String.IsNullOrEmpty(@checked)", span="104-104"];
m5_33 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="TimedOutByFetchedTime(fetched) || TimedOutByCheckedTime(fetched, @checked)", span="134-134"];
m5_39 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="return false;", span="147-147"];
m5_35 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", color=red, community=0, file="DequeuedJobsWatcher.cs", label="0: var state = new EnqueuedState(''Requeued due to time out'')", span="137-137"];
m5_38 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="return true;", span="143-143"];
m5_40 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", file="DequeuedJobsWatcher.cs", label="Exit HangFire.Redis.Components.DequeuedJobsWatcher.RequeueJobIfTimedOut(IRedisClient, string, string)", span="94-94"];
m5_23 [cluster="Unk.AcquireLock", file="DequeuedJobsWatcher.cs", label="Entry Unk.AcquireLock", span=""];
m5_50 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="DequeuedJobsWatcher.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="31-31"];
m5_82 [file="DequeuedJobsWatcher.cs", label="HangFire.Redis.Components.DequeuedJobsWatcher", span=""];
m6_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_33 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m6_68 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m6_83 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_32 [cluster="Hangfire.JobStorage.GetConnection()", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m6_85 [cluster="string.Format(string, object, object)", file="DequeuedJobsWatcher.feature.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_40 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150"];
m6_41 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="1: return GetType().Name;", span="152-152"];
m6_42 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="DequeuedJobsWatcher.feature.cs", label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150"];
m6_77 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m6_72 [cluster="Unk._instantFactory", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk._instantFactory", span=""];
m6_75 [cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", span="25-25"];
m6_84 [cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m6_43 [cluster="object.GetType()", file="DequeuedJobsWatcher.feature.cs", label="Entry object.GetType()", span="0-0"];
m6_35 [cluster="string.Format(string, object)", file="DequeuedJobsWatcher.feature.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_0 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="78-78"];
m6_1 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="DequeuedJobsWatcher.feature.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="78-78"];
m6_38 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="278-278"];
m6_71 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m6_76 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m6_79 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m6_69 [cluster="Unk.Parse", file="DequeuedJobsWatcher.feature.cs", label="Entry Unk.Parse", span=""];
m6_31 [cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22"];
m6_2 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m6_3 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="DequeuedJobsWatcher.feature.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m6_74 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_82 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m6_67 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m6_37 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155"];
m6_44 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="161-161"];
m6_46 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="var cron = recurringJob[''Cron'']", span="163-163"];
m6_48 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="168-170"];
m6_50 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="174-176"];
m6_54 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="1: recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="183-183"];
m6_55 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="state.Queue = recurringJob[''Queue'']", span="185-185"];
m6_56 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="var backgroundJob = _factory.Create(new CreateContext(storage, connection, job, state))", span="188-188"];
m6_59 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="193-196"];
m6_63 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="205-207"];
m6_65 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="1: Logger.ErrorException(\r\n                    String.Format(''Recurring job '{0}' was not triggered: {1}.'', recurringJobId, ex.Message),\r\n                    ex)", span="211-213"];
m6_45 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="var job = serializedJob.Deserialize()", span="162-162"];
m6_47 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="164-164"];
m6_49 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="var instant = _instantFactory(cronSchedule, timeZone)", span="172-172"];
m6_52 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: instant.GetNextInstants(lastExecutionTime).Any()", span="180-180"];
m6_60 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="199-199"];
m6_62 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="203-203"];
m6_51 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="var changedFields = new Dictionary<string, string>()", span="178-178"];
m6_61 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="200-200"];
m6_53 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="2: var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="182-182"];
m6_57 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="var jobId = backgroundJob != null ? backgroundJob.Id : null", span="189-189"];
m6_58 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="String.IsNullOrEmpty(jobId)", span="191-191"];
m6_64 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="1: TimeZoneNotFoundException", span="209-209"];
m6_66 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="DequeuedJobsWatcher.feature.cs", label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155"];
m6_78 [cluster="string.IsNullOrEmpty(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_73 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m6_16 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m6_17 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="context == null", span="112-112"];
m6_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="_throttler.Throttle(context.CancellationToken)", span="114-114"];
m6_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="var connection = context.Storage.GetConnection()", span="116-116"];
m6_26 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="TryScheduleJob(context.Storage, connection, recurringJobId, recurringJob)", span="133-133"];
m6_29 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="_throttler.Delay(context.CancellationToken)", span="145-145"];
m6_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="throw new ArgumentNullException(''context'');", span="112-112"];
m6_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="117-117"];
m6_22 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="119-119"];
m6_24 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="2: var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="123-124"];
m6_23 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="DequeuedJobsWatcher.feature.cs", label="0: recurringJobIds", span="121-121"];
m6_28 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="137-141"];
m6_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="recurringJob == null", span="126-126"];
m6_27 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label=JobLoadException, span="135-135"];
m6_30 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="DequeuedJobsWatcher.feature.cs", label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m6_39 [cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23"];
m6_34 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m6_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95"];
m6_5 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="factory == null", span="100-100"];
m6_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="instantFactory == null", span="101-101"];
m6_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="throttler == null", span="102-102"];
m6_11 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="_factory = factory", span="104-104"];
m6_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="_instantFactory = instantFactory", span="105-105"];
m6_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="_throttler = throttler", span="106-106"];
m6_6 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="throw new ArgumentNullException(''factory'');", span="100-100"];
m6_8 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="throw new ArgumentNullException(''instantFactory'');", span="101-101"];
m6_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="throw new ArgumentNullException(''throttler'');", span="102-102"];
m6_14 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="DequeuedJobsWatcher.feature.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95"];
m6_36 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m6_81 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m6_86 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159"];
m6_70 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="DequeuedJobsWatcher.feature.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_80 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="DequeuedJobsWatcher.feature.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m6_87 [file="DequeuedJobsWatcher.feature.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m7_29 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.DequeuedJobsWatcher(HangFire.Redis.RedisStorage)", span="39-39"];
m7_40 [cluster="System.DateTime.AddMinutes(double)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m7_41 [cluster="Unk.IsTrue", file="DequeuedJobsWatcherSteps.cs", label="Entry Unk.IsTrue", span=""];
m7_39 [cluster="Unk.FromStringTimestamp", file="DequeuedJobsWatcherSteps.cs", label="Entry Unk.FromStringTimestamp", span=""];
m7_15 [cluster="Unk.SetEntryInHash", file="DequeuedJobsWatcherSteps.cs", label="Entry Unk.SetEntryInHash", span=""];
m7_23 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Fetched'',\r\n                JobHelper.ToStringTimestamp(time))", span="34-37"];
m7_16 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", span="27-27"];
m7_17 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="DateTime time", span="29-29"];
m7_18 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="timeAgo.Equals(''millisecond'')", span="30-30"];
m7_20 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="timeAgo.Equals(''day'')", span="31-31"];
m7_22 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", span="32-32"];
m7_19 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="30-30"];
m7_21 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="time = DateTime.UtcNow.AddDays(-1)", span="31-31"];
m7_24 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", span="27-27"];
m7_13 [cluster="string.Format(string, object)", file="DequeuedJobsWatcherSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m7_9 [cluster="string.Equals(string)", file="DequeuedJobsWatcherSteps.cs", label="Entry string.Equals(string)", span="0-0"];
m7_7 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'',\r\n                JobHelper.ToStringTimestamp(time))", span="20-23"];
m7_0 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="13-13"];
m7_1 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="DateTime time", span="15-15"];
m7_2 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="timeAgo.Equals(''millisecond'')", span="16-16"];
m7_4 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="timeAgo.Equals(''day'')", span="17-17"];
m7_6 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", span="18-18"];
m7_3 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="time = DateTime.UtcNow.AddMilliseconds(-1)", span="16-16"];
m7_5 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="time = DateTime.UtcNow.AddDays(-1)", span="17-17"];
m7_8 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="13-13"];
m7_10 [cluster="System.DateTime.AddMilliseconds(double)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.DateTime.AddMilliseconds(double)", span="0-0"];
m7_50 [cluster="Unk.IsNull", file="DequeuedJobsWatcherSteps.cs", label="Entry Unk.IsNull", span=""];
m7_11 [cluster="System.DateTime.AddDays(double)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m7_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="DequeuedJobsWatcherSteps.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m7_25 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", span="41-41"];
m7_26 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", label="var watcher = new DequeuedJobsWatcher(Redis.Storage)", span="43-43"];
m7_27 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", label="watcher.FindAndRequeueTimedOutJobs()", span="44-44"];
m7_28 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", span="41-41"];
m7_51 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="81-81"];
m7_52 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="83-84"];
m7_53 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", color=green, community=0, file="DequeuedJobsWatcherSteps.cs", label="1: Assert.IsNotNull(fetchedTimestamp)", span="86-86"];
m7_54 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheFetchedFlagSet()", span="81-81"];
m7_55 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="90-90"];
m7_56 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="var fetchedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId), ''Fetched'')", span="92-93"];
m7_57 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", color=green, community=0, file="DequeuedJobsWatcherSteps.cs", label="0: Assert.IsNull(fetchedTimestamp)", span="95-95"];
m7_58 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="90-90"];
m7_38 [cluster="Unk.IsNotNull", file="DequeuedJobsWatcherSteps.cs", label="Entry Unk.IsNotNull", span=""];
m7_14 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m7_46 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71"];
m7_47 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="73-75"];
m7_48 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", color=green, community=0, file="DequeuedJobsWatcherSteps.cs", label="2: Assert.IsNull(checkedTimestamp)", span="77-77"];
m7_49 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71"];
m7_37 [cluster="Unk.GetValueFromHash", file="DequeuedJobsWatcherSteps.cs", label="Entry Unk.GetValueFromHash", span=""];
m7_31 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48"];
m7_32 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DequeuedJobsWatcherSteps.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="50-52"];
m7_33 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", color=green, community=0, file="DequeuedJobsWatcherSteps.cs", label="1: Assert.IsNotNull(checkedTimestamp)", span="54-54"];
m7_34 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DequeuedJobsWatcherSteps.cs", label="var date = JobHelper.FromStringTimestamp(checkedTimestamp)", span="55-55"];
m7_35 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", color=green, community=0, file="DequeuedJobsWatcherSteps.cs", label="2: Assert.IsTrue(date > DateTime.UtcNow.AddMinutes(-1))", span="57-57"];
m7_36 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48"];
m7_42 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61"];
m7_43 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="63-65"];
m7_44 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", color=green, community=0, file="DequeuedJobsWatcherSteps.cs", label="2: Assert.IsNotNull(checkedTimestamp)", span="67-67"];
m7_45 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="DequeuedJobsWatcherSteps.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61"];
m7_30 [cluster="HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="DequeuedJobsWatcherSteps.cs", label="Entry HangFire.Redis.Components.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="44-44"];
m8_26 [cluster="string.Split(params char[])", file="DictionaryAssert.cs", label="Entry string.Split(params char[])", span="0-0"];
m8_20 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="DictionaryAssert.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m8_0 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DictionaryAssert.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m8_1 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="1: expected", span="11-11"];
m8_12 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="2: Assert.False(String.IsNullOrEmpty(actual[name]))", span="34-34"];
m8_15 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="2: Assert.Equal(Type.GetType(splitted[1]).AssemblyQualifiedName, actual[name])", span="39-39"];
m8_16 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="2: Assert.Equal(value, actual[name])", span="43-43"];
m8_7 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=2, file="DictionaryAssert.cs", label="2: Assert.True(\r\n                        (timestamp > DateTime.UtcNow.AddSeconds(-1))\r\n                        && (timestamp < DateTime.UtcNow.AddSeconds(1)))", span="21-23"];
m8_10 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=2, file="DictionaryAssert.cs", label="2: Assert.True(\r\n                        timestamp >= DateTime.UtcNow.Date.AddDays(1)\r\n                        && timestamp < DateTime.UtcNow.Date.AddDays(2))", span="28-30"];
m8_2 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="0: var name = row.Key", span="13-13"];
m8_4 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="2: Assert.True(actual.ContainsKey(name))", span="16-16"];
m8_3 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="1: var value = row.Value", span="14-14"];
m8_5 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="2: value == ''<UtcNow timestamp>''", span="17-17"];
m8_6 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="0: var timestamp = JobHelper.FromStringTimestamp(actual[name])", span="19-19"];
m8_9 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="0: var timestamp = JobHelper.FromStringTimestamp(actual[name])", span="27-27"];
m8_8 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="2: value == ''<Tomorrow timestamp>''", span="25-25"];
m8_11 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="1: value == ''<Non-empty>''", span="32-32"];
m8_14 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="0: var splitted = value.Split('\'')", span="38-38"];
m8_13 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", color=green, community=0, file="DictionaryAssert.cs", label="1: value.StartsWith(''<Assembly qualified name of '')", span="36-36"];
m8_17 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="DictionaryAssert.cs", label="Exit HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m8_19 [cluster="Unk.True", file="DictionaryAssert.cs", label="Entry Unk.True", span=""];
m8_23 [cluster="string.IsNullOrEmpty(string)", file="DictionaryAssert.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m8_24 [cluster="Unk.False", file="DictionaryAssert.cs", label="Entry Unk.False", span=""];
m8_25 [cluster="string.StartsWith(string)", file="DictionaryAssert.cs", label="Entry string.StartsWith(string)", span="0-0"];
m8_21 [cluster="System.DateTime.AddSeconds(double)", file="DictionaryAssert.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m8_28 [cluster="Unk.Equal", file="DictionaryAssert.cs", label="Entry Unk.Equal", span=""];
m8_18 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="DictionaryAssert.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m8_27 [cluster="System.Type.GetType(string)", file="DictionaryAssert.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m8_22 [cluster="System.DateTime.AddDays(double)", file="DictionaryAssert.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m9_64 [cluster="HangFire.Web.RazorPage.Write(object)", file="EnqueuedState.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m9_58 [cluster="Unk.TryParse", file="EnqueuedState.cs", label="Entry Unk.TryParse", span=""];
m9_56 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="EnqueuedState.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m9_63 [cluster="HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", file="EnqueuedState.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedJobs(int, int)", span="36-36"];
m9_59 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="EnqueuedState.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m9_57 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="EnqueuedState.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m9_65 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="EnqueuedState.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m9_67 [cluster="Unk.Write", file="EnqueuedState.cs", label="Entry Unk.Write", span=""];
m9_62 [cluster="HttpRequestBase.LinkTo(string)", file="EnqueuedState.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m9_61 [cluster="HangFire.Storage.IMonitoringApi.DeletedListCount()", file="EnqueuedState.cs", label="Entry HangFire.Storage.IMonitoringApi.DeletedListCount()", span="45-45"];
m9_69 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="EnqueuedState.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m9_71 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="EnqueuedState.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m9_0 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Entry HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53"];
m9_1 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\r\n'')", span="57-57"];
m9_2 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Layout = new LayoutPage { Title = ''Deleted Jobs'' }", span="69-69"];
m9_3 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="int from, perPage", span="71-71"];
m9_4 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="73-73"];
m9_5 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="74-74"];
m9_9 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="pager = new Pager(from, perPage, monitor.DeletedListCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/deleted'')\r\n        }", span="81-84"];
m9_6 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Pager pager", span="76-76"];
m9_7 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="JobList<DeletedJobDto> jobs", span="77-77"];
m9_8 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="79-79"];
m9_10 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="jobs = monitor.DeletedJobs(pager.FromRecord, pager.RecordsPerPage)", span="86-86"];
m9_12 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="pager.TotalPageCount == 0", span="98-98"];
m9_17 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="135-135"];
m9_54 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(RenderPartial(new Paginator(pager)))", span="381-381"];
m9_11 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\r\n'')", span="93-93"];
m9_19 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label=jobs, span="159-159"];
m9_13 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No deleted jobs found.\r\n    </div>\r\n'')", span="104-104"];
m9_14 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="116-118"];
m9_15 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(Request.LinkTo(''/deleted/requeue''))", span="123-123"];
m9_16 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\''\r\n                    data-loading-text=\''Enqueueing...\''>\r\n                <span '' +\r\n''class=\''glyphicon glyphicon-repeat\''></span>\r\n                Requeue jobs\r\n      '' +\r\n''      </button>\r\n            '')", span="128-130"];
m9_18 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(@''\r\n        </div>\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Deleted</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n'')", span="140-154"];
m9_20 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="165-165"];
m9_53 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''            </tbody>\r\n        </table>\r\n    </div>\r\n'')", span="370-370"];
m9_21 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(job.Value != null && !job.Value.InDeletedState ? ''obsolete-data'' : null)", span="170-170"];
m9_22 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral('' '')", span="175-175"];
m9_23 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(job.Value != null && job.Value.InDeletedState && job.Value != null ? ''hover'' : null)", span="180-180"];
m9_24 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\''>\r\n                        <td>\r\n'')", span="185-185"];
m9_25 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="job.Value != null && job.Value.InDeletedState", span="190-190"];
m9_26 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="196-197"];
m9_29 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                        </td>\r\n                        <td class=\''min-width\''>\r\n  '' +\r\n''                          <a href=\'''')", span="217-218"];
m9_27 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(job.Key)", span="202-202"];
m9_30 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="223-223"];
m9_28 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\'' />\r\n'')", span="207-207"];
m9_31 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\''>\r\n                                '')", span="228-228"];
m9_32 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(HtmlHelper.JobId(job.Key))", span="233-233"];
m9_33 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\r\n                            </a>\r\n'')", span="238-238"];
m9_34 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="job.Value != null && !job.Value.InDeletedState", span="243-243"];
m9_35 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="249-250"];
m9_36 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                        </td>\r\n\r\n'')", span="260-260"];
m9_37 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="job.Value == null", span="265-265"];
m9_38 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                            <td colspan=\''2\''>\r\n                                <em'' +\r\n''>Job was expired.</em>\r\n                            </td>\r\n'')", span="271-272"];
m9_39 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                            <td>\r\n                                <a class=\''job-m'' +\r\n''ethod\'' href=\'''')", span="284-285"];
m9_40 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="290-290"];
m9_41 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\''>\r\n                                    '')", span="295-295"];
m9_42 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="300-300"];
m9_43 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\r\n                                </a>\r\n                            </td>\r\n'')", span="305-305"];
m9_45 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="job.Value.DeletedAt.HasValue", span="314-314"];
m9_44 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                            <td class=\''align-right\''>\r\n'')", span="309-309"];
m9_46 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                                    <span data-moment=\'''')", span="320-320"];
m9_51 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                            </td>\r\n'')", span="350-350"];
m9_47 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.DeletedAt.Value))", span="325-325"];
m9_48 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\''>\r\n                                        '')", span="330-330"];
m9_49 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Write(job.Value.DeletedAt)", span="335-335"];
m9_50 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''\r\n                                    </span>\r\n'')", span="340-340"];
m9_52 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="WriteLiteral(''                    </tr>\r\n'')", span="360-360"];
m9_55 [cluster="HangFire.Web.Pages.DeletedJobsPage.Execute()", file="EnqueuedState.cs", label="Exit HangFire.Web.Pages.DeletedJobsPage.Execute()", span="53-53"];
m9_66 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="EnqueuedState.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m9_70 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="EnqueuedState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m9_60 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="EnqueuedState.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m9_68 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="EnqueuedState.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m9_72 [file="EnqueuedState.cs", label="HangFire.Web.Pages.DeletedJobsPage", span=""];
m10_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m10_0 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="FailedState.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="27-27"];
m10_1 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="FailedState.cs", label="Exception = exception", span="30-30"];
m10_2 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="FailedState.cs", label="Exit HangFire.States.FailedState.FailedState(string, System.Exception)", span="27-27"];
m10_9 [cluster="System.Exception.ToString()", file="FailedState.cs", label="Entry System.Exception.ToString()", span="0-0"];
m10_3 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="FailedState.cs", label="Entry HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="37-37"];
m10_4 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="FailedState.cs", label="return new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                    { ''ExceptionType'', Exception.GetType().FullName },\r\n                    { ''ExceptionMessage'', Exception.Message },\r\n                    { ''ExceptionDetails'', Exception.ToString() }\r\n                };", span="39-45"];
m10_5 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="FailedState.cs", label="Exit HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="37-37"];
m10_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FailedState.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m10_8 [cluster="System.Exception.GetType()", file="FailedState.cs", label="Entry System.Exception.GetType()", span="0-0"];
m10_10 [file="FailedState.cs", label="HangFire.States.FailedState", span=""];
m11_22 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m11_23 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="FailedState.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m11_24 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m11_25 [cluster="Unk.OnScenarioStart", file="FailedState.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m11_29 [cluster="Unk.CollectScenarioErrors", file="FailedState.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m11_21 [cluster="Unk.OnScenarioEnd", file="FailedState.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m11_36 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", span="85-85"];
m11_37 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", color=green, community=0, file="FailedState.feature.cs", label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Failed\''', ((string[])(null)))", span="87-87"];
m11_38 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", color=red, community=0, file="FailedState.feature.cs", label="2: this.ScenarioSetup(scenarioInfo)", span="89-89"];
m11_39 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", color=green, community=0, file="FailedState.feature.cs", label="2: this.FeatureBackground()", span="91-91"];
m11_40 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", color=red, community=0, file="FailedState.feature.cs", label="2: testRunner.Then(''the state name should be equal to \'Failed\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93"];
m11_41 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", color=green, community=0, file="FailedState.feature.cs", label="2: this.ScenarioCleanup()", span="95-95"];
m11_42 [cluster="HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.StateNameShouldBeFailed()", span="85-85"];
m11_35 [cluster="Unk.And", file="FailedState.feature.cs", label="Entry Unk.And", span=""];
m11_0 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m11_1 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="FailedState.feature.cs", label="0: testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m11_2 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="FailedState.feature.cs", label="2: TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Failed state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m11_3 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="FailedState.feature.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m11_4 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m11_5 [cluster="Unk.GetTestRunner", file="FailedState.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m11_18 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", span="56-56"];
m11_19 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="FailedState.feature.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m11_20 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioTearDown()", span="56-56"];
m11_26 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66"];
m11_27 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="FailedState.feature.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m11_28 [cluster="HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.ScenarioCleanup()", span="66-66"];
m11_13 [cluster="Unk.OnFeatureEnd", file="FailedState.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m11_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="FailedState.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m11_67 [cluster="Unk.When", file="FailedState.feature.cs", label="Entry Unk.When", span=""];
m11_59 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="135-135"];
m11_60 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", color=green, community=0, file="FailedState.feature.cs", label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should add the job to the failed set'', ((string[])(null)))", span="137-137"];
m11_61 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="139-139"];
m11_62 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedState.feature.cs", label="this.FeatureBackground()", span="141-141"];
m11_63 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedState.feature.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="143-143"];
m11_64 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedState.feature.cs", label="testRunner.Then(''the job should be added to the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="145-145"];
m11_65 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedState.feature.cs", label="this.ScenarioCleanup()", span="147-147"];
m11_66 [cluster="HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.AfterApplyingItShouldAddTheJobToTheFailedSet()", span="135-135"];
m11_58 [cluster="Unk.AddRow", file="FailedState.feature.cs", label="Entry Unk.AddRow", span=""];
m11_68 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", span="154-154"];
m11_69 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the failed set'', ((string[])(null)))", span="156-156"];
m11_70 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="158-158"];
m11_71 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedState.feature.cs", label="this.FeatureBackground()", span="160-160"];
m11_72 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedState.feature.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="162-162"];
m11_73 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedState.feature.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="164-164"];
m11_74 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedState.feature.cs", label="testRunner.Then(''the job should be removed from the failed set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="166-166"];
m11_75 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedState.feature.cs", label="this.ScenarioCleanup()", span="168-168"];
m11_76 [cluster="HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheFailedSet()", span="154-154"];
m11_45 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m11_46 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=green, community=0, file="FailedState.feature.cs", label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''It should have the correct properties set'', ((string[])(null)))", span="104-104"];
m11_47 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=0, file="FailedState.feature.cs", label="2: this.ScenarioSetup(scenarioInfo)", span="106-106"];
m11_48 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=0, file="FailedState.feature.cs", label="2: this.FeatureBackground()", span="108-108"];
m11_49 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=2, file="FailedState.feature.cs", label="2: TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="110-112"];
m11_50 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=green, community=0, file="FailedState.feature.cs", label="0: table1.AddRow(new string[] {\r\n                        ''FailedAt'',\r\n                        ''<UtcNow timestamp>''})", span="113-115"];
m11_51 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=green, community=0, file="FailedState.feature.cs", label="2: table1.AddRow(new string[] {\r\n                        ''ExceptionType'',\r\n                        ''System.InvalidOperationException''})", span="116-118"];
m11_52 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=red, community=2, file="FailedState.feature.cs", label="2: table1.AddRow(new string[] {\r\n                        ''ExceptionMessage'',\r\n                        ''Hello''})", span="119-121"];
m11_53 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=green, community=0, file="FailedState.feature.cs", label="2: table1.AddRow(new string[] {\r\n                        ''ExceptionDetails'',\r\n                        ''<Non-empty>''})", span="122-124"];
m11_54 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=green, community=0, file="FailedState.feature.cs", label="2: testRunner.Then(''properties table should contain the following items:'', ((string)(null)), table1, ''Then '')", span="126-126"];
m11_55 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", color=green, community=0, file="FailedState.feature.cs", label="2: this.ScenarioCleanup()", span="128-128"];
m11_56 [cluster="HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.ItShouldHaveTheCorrectPropertiesSet()", span="102-102"];
m11_43 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="FailedState.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m11_44 [cluster="Unk.Then", file="FailedState.feature.cs", label="Entry Unk.Then", span=""];
m11_34 [cluster="Unk.Given", file="FailedState.feature.cs", label="Entry Unk.Given", span=""];
m11_9 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", span="39-39"];
m11_10 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="FailedState.feature.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m11_11 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="FailedState.feature.cs", label="testRunner = null", span="42-42"];
m11_12 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.FeatureTearDown()", span="39-39"];
m11_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="FailedState.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m11_57 [cluster="TechTalk.SpecFlow.Table.cstr", file="FailedState.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m11_8 [cluster="Unk.OnFeatureStart", file="FailedState.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m11_30 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71"];
m11_31 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="FailedState.feature.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m11_32 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="FailedState.feature.cs", label="testRunner.And(''the Failed state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="77-77"];
m11_33 [cluster="HangFire.Tests.States.FailedStateFeature.FeatureBackground()", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.FeatureBackground()", span="71-71"];
m11_14 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="FailedState.feature.cs", label="Entry HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46"];
m11_15 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", color=red, community=0, file="FailedState.feature.cs", label="1: ((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Failed state''))", span="48-49"];
m11_16 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", color=red, community=0, file="FailedState.feature.cs", label="0: HangFire.Tests.States.FailedStateFeature.FeatureSetup(null)", span="51-51"];
m11_17 [cluster="HangFire.Tests.States.FailedStateFeature.TestInitialize()", file="FailedState.feature.cs", label="Exit HangFire.Tests.States.FailedStateFeature.TestInitialize()", span="46-46"];
m11_77 [file="FailedState.feature.cs", label="HangFire.Tests.States.FailedStateFeature", span=""];
m12_28 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FailedStateFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m12_3 [cluster="Unk.>", file="FailedStateFacts.cs", label="Entry Unk.>", span=""];
m12_20 [cluster="Unk.Be", file="FailedStateFacts.cs", label="Entry Unk.Be", span=""];
m12_7 [cluster="FailedState.cstr", file="FailedStateFacts.cs", label="Entry FailedState.cstr", span=""];
m12_29 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m12_15 [cluster="Unk.BeSameAs", file="FailedStateFacts.cs", label="Entry Unk.BeSameAs", span=""];
m12_8 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", span="18-18"];
m12_9 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", color=green, community=0, file="FailedStateFacts.cs", label="0: var exception = new Exception()", span="20-20"];
m12_10 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", color=green, community=0, file="FailedStateFacts.cs", label="2: var state = new FailedState(exception)", span="21-21"];
m12_11 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", color=green, community=0, file="FailedStateFacts.cs", label="0: state.Exception.Should().BeSameAs(exception)", span="23-23"];
m12_12 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_SetsAllProperties()", span="18-18"];
m12_13 [cluster="System.Exception.Exception()", file="FailedStateFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m12_16 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="27-27"];
m12_17 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", color=green, community=0, file="FailedStateFacts.cs", label="1: var state = new FailedState(new Exception())", span="29-29"];
m12_18 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", color=green, community=0, file="FailedStateFacts.cs", label="2: state.StateName.Should().Be(FailedState.Name)", span="31-31"];
m12_19 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="27-27"];
m12_27 [cluster="HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", file="FailedStateFacts.cs", label="Entry HangFire.States.FailedState.GetProperties(HangFire.Common.JobMethod)", span="37-37"];
m12_0 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11"];
m12_1 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", color=green, community=2, file="FailedStateFacts.cs", label="1: Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="13-14"];
m12_2 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="11-11"];
m12_4 [cluster="lambda expression", file="FailedStateFacts.cs", label="Entry lambda expression", span="14-14"];
m12_5 [cluster="lambda expression", color=green, community=0, file="FailedStateFacts.cs", label="0: new FailedState(null)", span="14-14"];
m12_6 [cluster="lambda expression", file="FailedStateFacts.cs", label="Exit lambda expression", span="14-14"];
m12_26 [cluster="System.Exception.Exception(string)", file="FailedStateFacts.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m12_14 [cluster="Unk.Should", file="FailedStateFacts.cs", label="Entry Unk.Should", span=""];
m12_21 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", file="FailedStateFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", span="35-35"];
m12_22 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", color=green, community=0, file="FailedStateFacts.cs", label="2: var state = new FailedState(new Exception(''Message''))", span="37-37"];
m12_23 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", color=green, community=0, file="FailedStateFacts.cs", label="2: var properties = state.GetProperties(null)", span="38-38"];
m12_24 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", color=green, community=2, file="FailedStateFacts.cs", label="2: DictionaryAssert.ContainsFollowingItems(\r\n                new Dictionary<string, string>\r\n                {\r\n                    { ''FailedAt'', ''<UtcNow timestamp>'' },\r\n                    { ''ExceptionType'', ''System.Exception'' },\r\n                    { ''ExceptionMessage'', ''Message'' },\r\n                    { ''ExceptionDetails'', ''<Non-empty>'' }\r\n                }, \r\n                properties)", span="40-48"];
m12_25 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", file="FailedStateFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.GetProperties_ReturnsCorrectProperties()", span="35-35"];
m13_0 [cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="IAtomicWriteTransaction.cs", label="Entry HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13"];
m13_1 [cluster="HangFire.Storage.IAtomicWriteTransaction.Commit()", file="IAtomicWriteTransaction.cs", label="Exit HangFire.Storage.IAtomicWriteTransaction.Commit()", span="13-13"];
m14_28 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", span="31-31"];
m14_29 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.FailedCount()", span="31-31"];
m14_24 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", span="29-29"];
m14_25 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedCount(string)", span="29-29"];
m14_8 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", span="18-18"];
m14_9 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.GetStatistics()", span="18-18"];
m14_10 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", span="20-20"];
m14_11 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.EnqueuedJobs(string, int, int)", span="20-20"];
m14_6 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="17-17"];
m14_7 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.JobDetails(string)", span="17-17"];
m14_36 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", span="37-37"];
m14_37 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.FailedByDatesCount()", span="37-37"];
m14_38 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", span="38-38"];
m14_39 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.HourlySucceededJobs()", span="38-38"];
m14_4 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Servers()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.Servers()", span="16-16"];
m14_5 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Servers()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.Servers()", span="16-16"];
m14_32 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", span="34-34"];
m14_33 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.SucceededListCount()", span="34-34"];
m14_12 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", span="21-21"];
m14_13 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.DequeuedJobs(string, int, int)", span="21-21"];
m14_0 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="7-7"];
m14_1 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="7-7"];
m14_26 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", span="30-30"];
m14_27 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.DequeuedCount(string)", span="30-30"];
m14_30 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", span="32-32"];
m14_31 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ProcessingCount()", span="32-32"];
m14_20 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", span="26-26"];
m14_21 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.FailedJobs(int, int)", span="26-26"];
m14_34 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", span="36-36"];
m14_35 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.SucceededByDatesCount()", span="36-36"];
m14_40 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", span="39-39"];
m14_41 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.HourlyFailedJobs()", span="39-39"];
m14_22 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", span="28-28"];
m14_23 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ScheduledCount()", span="28-28"];
m14_2 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Queues()", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.Queues()", span="15-15"];
m14_3 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.Queues()", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.Queues()", span="15-15"];
m14_18 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", span="25-25"];
m14_19 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.SucceededJobs(int, int)", span="25-25"];
m14_14 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", span="23-23"];
m14_15 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ProcessingJobs(int, int)", span="23-23"];
m14_16 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", file="IMonitoringApi.cs", label="Entry HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", span="24-24"];
m14_17 [cluster="HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", file="IMonitoringApi.cs", label="Exit HangFire.Storage.Monitoring.IMonitoringApi.ScheduledJobs(int, int)", span="24-24"];
m15_2 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m15_3 [cluster="HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="9-9"];
m15_6 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m15_7 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="17-17"];
m15_0 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m15_1 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m15_12 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m15_13 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="25-25"];
m15_8 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m15_9 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="23-23"];
m15_4 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m15_5 [cluster="HangFire.Storage.IStorageConnection.AcquireJobLock(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.AcquireJobLock(string)", span="11-11"];
m15_10 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m15_11 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="24-24"];
m15_14 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="IStorageConnection.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m15_15 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="IStorageConnection.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="26-26"];
m16_6 [cluster="HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", span="10-10"];
m16_7 [cluster="HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.Complete(HangFire.Server.JobPayload)", span="10-10"];
m16_4 [cluster="HangFire.Storage.IStoredJobs.GetParameter(string, string)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.GetParameter(string, string)", span="8-8"];
m16_5 [cluster="HangFire.Storage.IStoredJobs.GetParameter(string, string)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.GetParameter(string, string)", span="8-8"];
m16_2 [cluster="HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", span="7-7"];
m16_3 [cluster="HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.SetParameter(string, string, string)", span="7-7"];
m16_0 [cluster="HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", file="IStoredJobs.cs", label="Entry HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", span="6-6"];
m16_1 [cluster="HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", file="IStoredJobs.cs", label="Exit HangFire.Storage.IStoredJobs.GetStateAndInvocationData(string)", span="6-6"];
m17_0 [cluster="HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", file="IStoredSets.cs", label="Entry HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", span="4-4"];
m17_1 [cluster="HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", file="IStoredSets.cs", label="Exit HangFire.Storage.IStoredSets.GetFirstByLowestScore(string, long, long)", span="4-4"];
m18_0 [cluster="HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="IWriteableJobQueue.cs", label="Entry HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="4-4"];
m18_1 [cluster="HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="IWriteableJobQueue.cs", label="Exit HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="4-4"];
m19_28 [cluster="RequestDispatcherContext.cstr", file="IWriteableStoredCounters.cs", label="Entry RequestDispatcherContext.cstr", span=""];
m19_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="IWriteableStoredCounters.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m19_26 [cluster="Unk.Authorize", file="IWriteableStoredCounters.cs", label="Entry Unk.Authorize", span=""];
m19_27 [cluster="System.Threading.Tasks.Task.FromResult<TResult>(TResult)", file="IWriteableStoredCounters.cs", label="Entry System.Threading.Tasks.Task.FromResult<TResult>(TResult)", span="0-0"];
m19_0 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="Entry Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="32-32"];
m19_1 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="storage == null", span="40-40"];
m19_3 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="routes == null", span="41-41"];
m19_5 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="authorizationFilters == null", span="42-42"];
m19_7 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="_appPath = appPath", span="44-44"];
m19_8 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="_storage = storage", span="45-45"];
m19_9 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="_routes = routes", span="46-46"];
m19_10 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="_authorizationFilters = authorizationFilters", span="47-47"];
m19_2 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="throw new ArgumentNullException(''storage'');", span="40-40"];
m19_4 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="throw new ArgumentNullException(''routes'');", span="41-41"];
m19_6 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="throw new ArgumentNullException(''authorizationFilters'');", span="42-42"];
m19_11 [cluster="Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="IWriteableStoredCounters.cs", label="Exit Hangfire.Dashboard.DashboardMiddleware.DashboardMiddleware(OwinMiddleware, string, Hangfire.JobStorage, Hangfire.Dashboard.RouteCollection, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="32-32"];
m19_13 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label="Entry Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", span="50-50"];
m19_14 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label="var dispatcher = _routes.FindDispatcher(context.Request.Path.Value)", span="52-52"];
m19_16 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label="return Next.Invoke(context);", span="56-56"];
m19_18 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label="!filter.Authorize(context.Environment)", span="61-61"];
m19_19 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label="context.Response.StatusCode = (int) HttpStatusCode.Unauthorized", span="63-63"];
m19_21 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label="var dispatcherContext = new RequestDispatcherContext(\r\n                _appPath,\r\n                _storage,\r\n                context.Environment,\r\n                dispatcher.Item2)", span="68-72"];
m19_15 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label="dispatcher == null", span="54-54"];
m19_22 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label="return dispatcher.Item1.Dispatch(dispatcherContext);", span="74-74"];
m19_17 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label=_authorizationFilters, span="59-59"];
m19_20 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label="return Task.FromResult(false);", span="64-64"];
m19_23 [cluster="Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", file="IWriteableStoredCounters.cs", label="Exit Hangfire.Dashboard.DashboardMiddleware.Invoke(IOwinContext)", span="50-50"];
m19_25 [cluster="Unk.Invoke", file="IWriteableStoredCounters.cs", label="Entry Unk.Invoke", span=""];
m19_24 [cluster="Unk.FindDispatcher", file="IWriteableStoredCounters.cs", label="Entry Unk.FindDispatcher", span=""];
m19_29 [cluster="Hangfire.Dashboard.IRequestDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", file="IWriteableStoredCounters.cs", label="Entry Hangfire.Dashboard.IRequestDispatcher.Dispatch(Hangfire.Dashboard.RequestDispatcherContext)", span="22-22"];
m19_30 [file="IWriteableStoredCounters.cs", label="Hangfire.Dashboard.DashboardMiddleware", span=""];
m21_2 [cluster="HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="IWriteableStoredLists.cs", label="Entry HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="5-5"];
m21_3 [cluster="HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="IWriteableStoredLists.cs", label="Exit HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="5-5"];
m21_0 [cluster="HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="IWriteableStoredLists.cs", label="Entry HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="4-4"];
m21_1 [cluster="HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="IWriteableStoredLists.cs", label="Exit HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="4-4"];
m21_4 [cluster="HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="IWriteableStoredLists.cs", label="Entry HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="7-7"];
m21_5 [cluster="HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="IWriteableStoredLists.cs", label="Exit HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="7-7"];
m22_0 [cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="IWriteableStoredSets.cs", label="Entry HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="4-4"];
m22_1 [cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="IWriteableStoredSets.cs", label="Exit HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="4-4"];
m22_4 [cluster="HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="IWriteableStoredSets.cs", label="Entry HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="6-6"];
m22_5 [cluster="HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="IWriteableStoredSets.cs", label="Exit HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="6-6"];
m22_2 [cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="IWriteableStoredSets.cs", label="Entry HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="5-5"];
m22_3 [cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="IWriteableStoredSets.cs", label="Exit HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="5-5"];
m23_4 [cluster="HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="IWriteableStoredValues.cs", label="Entry HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="9-9"];
m23_5 [cluster="HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="IWriteableStoredValues.cs", label="Exit HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="9-9"];
m23_0 [cluster="HangFire.Storage.IWriteableStoredValues.Increment(string)", file="IWriteableStoredValues.cs", label="Entry HangFire.Storage.IWriteableStoredValues.Increment(string)", span="6-6"];
m23_1 [cluster="HangFire.Storage.IWriteableStoredValues.Increment(string)", file="IWriteableStoredValues.cs", label="Exit HangFire.Storage.IWriteableStoredValues.Increment(string)", span="6-6"];
m23_2 [cluster="HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="IWriteableStoredValues.cs", label="Entry HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="7-7"];
m23_3 [cluster="HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="IWriteableStoredValues.cs", label="Exit HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="7-7"];
m25_5 [cluster="Unk.GetTestRunner", file="JobActivator.feature.cs", label="Hangfire.DashboardOptions", span=""];
m25_41 [cluster="Unk.Then", file="JobActivator.feature.cs", label="Entry Unk.Then", span=""];
m25_39 [cluster="Unk.Given", file="JobActivator.feature.cs", label="Entry Unk.Given", span=""];
m25_25 [cluster="Unk.OnScenarioStart", file="JobActivator.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m25_40 [cluster="Unk.When", file="JobActivator.feature.cs", label="Entry Unk.When", span=""];
m25_29 [cluster="Unk.CollectScenarioErrors", file="JobActivator.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m25_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobActivator.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m25_0 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="JobActivator.feature.cs", label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m25_1 [cluster="Hangfire.DashboardOptions.DashboardOptions()", color=green, community=0, file="JobActivator.feature.cs", label="0: AppPath = ''/''", span="25-25"];
m25_2 [cluster="Hangfire.DashboardOptions.DashboardOptions()", color=green, community=0, file="JobActivator.feature.cs", label="0: AuthorizationFilters = new[] { new LocalRequestsOnlyAuthorizationFilter() }", span="26-26"];
m25_3 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="JobActivator.feature.cs", label="Exit Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m25_4 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", file="JobActivator.feature.cs", label="Entry Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", span="22-22"];
m25_30 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="JobActivator.feature.cs", label="Entry HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", span="73-73"];
m25_31 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", color=green, community=0, file="JobActivator.feature.cs", label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Activator returns the job instance when its type has default constructor'', ((string[])(null)))", span="75-75"];
m25_32 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="JobActivator.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="77-77"];
m25_36 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="JobActivator.feature.cs", label="this.ScenarioCleanup()", span="87-87"];
m25_33 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="JobActivator.feature.cs", label="testRunner.Given(''the following job type:'', ''public class TestJob : BackgroundJob\r\n{\r\n    public override void Perform()\r\n    '' +\r\n                    ''{\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="80-81"];
m25_35 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="JobActivator.feature.cs", label="testRunner.Then(''Activator should return an instance of the \'TestJob\' type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="85-85"];
m25_34 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="JobActivator.feature.cs", label="testRunner.When(''I call the `Activate` method with the \'TestJob\' type argument'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="83-83"];
m25_37 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", file="JobActivator.feature.cs", label="Exit HangFire.Tests.JobActivatorFeature.ActivatorReturnsTheJobInstanceWhenItsTypeHasDefaultConstructor()", span="73-73"];
m25_42 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="JobActivator.feature.cs", label="Entry HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", span="94-94"];
m25_43 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", color=green, community=0, file="JobActivator.feature.cs", label="1: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Activator throws an exception when the specified job type has no default construc'' +\r\n                    ''tor'', ((string[])(null)))", span="96-97"];
m25_44 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="JobActivator.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="99-99"];
m25_48 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="JobActivator.feature.cs", label="this.ScenarioCleanup()", span="110-110"];
m25_45 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="JobActivator.feature.cs", label="testRunner.Given(''the following job type:'', ''public class CustomConstructorJob : BackgroundJob\r\n{\r\n    public CustomConstructo'' +\r\n                    ''rJob(string parameter)\r\n    {\r\n    }\r\n\r\n    public override void Perform()\r\n    '' +\r\n                    ''{\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-104"];
m25_47 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="JobActivator.feature.cs", label="testRunner.Then(''Activator throws a \'System.MissingMethodException\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108"];
m25_46 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="JobActivator.feature.cs", label="testRunner.When(''I call the `Activate` method with the \'CustomConstructorJob\' type argument'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106"];
m25_49 [cluster="HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", file="JobActivator.feature.cs", label="Exit HangFire.Tests.JobActivatorFeature.ActivatorThrowsAnExceptionWhenTheSpecifiedJobTypeHasNoDefaultConstructor()", span="94-94"];
m25_22 [cluster="HangFire.Tests.JobActivatorFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobActivator.feature.cs", label="Entry HangFire.Tests.JobActivatorFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="60-60"];
m25_23 [cluster="HangFire.Tests.JobActivatorFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobActivator.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="62-62"];
m25_24 [cluster="HangFire.Tests.JobActivatorFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobActivator.feature.cs", label="Exit HangFire.Tests.JobActivatorFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="60-60"];
m25_14 [cluster="HangFire.Tests.JobActivatorFeature.TestInitialize()", file="JobActivator.feature.cs", label="Entry HangFire.Tests.JobActivatorFeature.TestInitialize()", span="45-45"];
m25_16 [cluster="HangFire.Tests.JobActivatorFeature.TestInitialize()", file="JobActivator.feature.cs", label="HangFire.Tests.JobActivatorFeature.FeatureSetup(null)", span="50-50"];
m25_15 [cluster="HangFire.Tests.JobActivatorFeature.TestInitialize()", file="JobActivator.feature.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobActivator''))", span="47-48"];
m25_17 [cluster="HangFire.Tests.JobActivatorFeature.TestInitialize()", file="JobActivator.feature.cs", label="Exit HangFire.Tests.JobActivatorFeature.TestInitialize()", span="45-45"];
m25_8 [cluster="Unk.OnFeatureStart", file="JobActivator.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m25_26 [cluster="HangFire.Tests.JobActivatorFeature.ScenarioCleanup()", file="JobActivator.feature.cs", label="Entry HangFire.Tests.JobActivatorFeature.ScenarioCleanup()", span="65-65"];
m25_27 [cluster="HangFire.Tests.JobActivatorFeature.ScenarioCleanup()", color=green, community=0, file="JobActivator.feature.cs", label="1: testRunner.CollectScenarioErrors()", span="67-67"];
m25_28 [cluster="HangFire.Tests.JobActivatorFeature.ScenarioCleanup()", file="JobActivator.feature.cs", label="Exit HangFire.Tests.JobActivatorFeature.ScenarioCleanup()", span="65-65"];
m25_38 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobActivator.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m25_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobActivator.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m25_50 [file="JobActivator.feature.cs", label="HangFire.Tests.JobActivatorFeature", span=""];
m26_50 [cluster="Hangfire.Server.Worker.ToString()", file="JobActivatorSteps.cs", label="Entry Hangfire.Server.Worker.ToString()", span="121-121"];
m26_51 [cluster="Hangfire.Server.Worker.ToString()", file="JobActivatorSteps.cs", label="return ''Worker #'' + _context.WorkerNumber;", span="123-123"];
m26_52 [cluster="Hangfire.Server.Worker.ToString()", file="JobActivatorSteps.cs", label="Exit Hangfire.Server.Worker.ToString()", span="121-121"];
m26_14 [cluster="HangFire.Tests.JobActivatorSteps.ThenActivatorShouldReturnAnInstanceOfTheType(string)", color=green, community=0, file="JobActivatorSteps.cs", label="2: Assert.AreEqual(type, _jobInstance.GetType().Name)", span="34-34"];
m26_15 [cluster="HangFire.Tests.JobActivatorSteps.ThenActivatorShouldReturnAnInstanceOfTheType(string)", file="JobActivatorSteps.cs", label="Exit HangFire.Tests.JobActivatorSteps.ThenActivatorShouldReturnAnInstanceOfTheType(string)", span="32-32"];
m26_16 [cluster="object.GetType()", file="JobActivatorSteps.cs", label="Entry object.GetType()", span="0-0"];
m26_17 [cluster="Unk.AreEqual", file="JobActivatorSteps.cs", label="Entry Unk.AreEqual", span=""];
m26_20 [cluster="HangFire.Tests.JobActivatorSteps.ThenActivatorThrowsAnException(string)", color=green, community=0, file="JobActivatorSteps.cs", label="2: Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="41-41"];
m26_23 [cluster="System.Type.GetType(string, bool)", file="JobActivatorSteps.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m26_26 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="var jobCancellationToken = new ServerJobCancellationToken(\r\n                        fetchedJob.JobId, connection, _context, cancellationToken)", span="88-89"];
m26_18 [cluster="HangFire.Tests.JobActivatorSteps.ThenActivatorThrowsAnException(string)", file="JobActivatorSteps.cs", label="Entry HangFire.Tests.JobActivatorSteps.ThenActivatorThrowsAnException(string)", span="38-38"];
m26_27 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="var state = PerformJob(fetchedJob.JobId, connection, jobCancellationToken)", span="91-91"];
m26_22 [cluster="Unk.IsNotNull", file="JobActivatorSteps.cs", label="Entry Unk.IsNotNull", span=""];
m26_24 [cluster="Unk.IsInstanceOfType", file="JobActivatorSteps.cs", label="Entry Unk.IsInstanceOfType", span=""];
m26_29 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="stateMachine.ChangeState(fetchedJob.JobId, state, new[] { ProcessingState.StateName })", span="96-96"];
m26_30 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="fetchedJob.RemoveFromQueue()", span="104-104"];
m26_32 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="fetchedJob.RemoveFromQueue()", span="111-111"];
m26_34 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="fetchedJob.Requeue()", span="115-115"];
m26_19 [cluster="HangFire.Tests.JobActivatorSteps.ThenActivatorThrowsAnException(string)", color=green, community=0, file="JobActivatorSteps.cs", label="2: Assert.IsNotNull(_exception)", span="40-40"];
m26_21 [cluster="HangFire.Tests.JobActivatorSteps.ThenActivatorThrowsAnException(string)", file="JobActivatorSteps.cs", label="Exit HangFire.Tests.JobActivatorSteps.ThenActivatorThrowsAnException(string)", span="38-38"];
m26_25 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="HangFire.Tests.JobActivatorSteps", span=""];
m26_28 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="state != null", span="93-93"];
m26_31 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label=JobAbortedException, span="109-109"];
m26_33 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label=Exception, span="113-113"];
m26_35 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="throw;", span="116-116"];
m26_36 [cluster="Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="Exit Hangfire.Server.Worker.Execute(System.Threading.CancellationToken)", span="51-51"];
m26_73 [cluster="System.Diagnostics.Stopwatch.StartNew()", file="JobActivatorSteps.cs", label="Entry System.Diagnostics.Stopwatch.StartNew()", span="0-0"];
m26_77 [cluster="Hangfire.States.FailedState.FailedState(System.Exception)", file="JobActivatorSteps.cs", label="Entry Hangfire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m26_11 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JobActivatorSteps.cs", label="_process = process", span="47-47"];
m26_37 [cluster="Hangfire.JobStorage.GetConnection()", file="JobActivatorSteps.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m26_12 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JobActivatorSteps.cs", label="_stateMachineFactory = stateMachineFactory", span="48-48"];
m26_39 [cluster="Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", file="JobActivatorSteps.cs", label="Entry Hangfire.States.IStateMachineFactory.Create(Hangfire.Storage.IStorageConnection)", span="22-22"];
m26_40 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="JobActivatorSteps.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m26_75 [cluster="System.Diagnostics.Stopwatch.Stop()", file="JobActivatorSteps.cs", label="Entry System.Diagnostics.Stopwatch.Stop()", span="0-0"];
m26_76 [cluster="Hangfire.States.SucceededState.SucceededState(object, long, long)", file="JobActivatorSteps.cs", label="Entry Hangfire.States.SucceededState.SucceededState(object, long, long)", span="28-28"];
m26_13 [cluster="Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", file="JobActivatorSteps.cs", label="Exit Hangfire.Server.Worker.Worker(Hangfire.Server.WorkerContext, Hangfire.JobStorage, Hangfire.Server.IJobPerformanceProcess, Hangfire.States.IStateMachineFactory)", span="34-34"];
m26_70 [cluster="Hangfire.Storage.IStorageConnection.GetJobData(string)", file="JobActivatorSteps.cs", label="Entry Hangfire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m26_44 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JobActivatorSteps.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m26_46 [cluster="Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="Entry Hangfire.Server.ServerJobCancellationToken.ServerJobCancellationToken(string, Hangfire.Storage.IStorageConnection, Hangfire.Server.WorkerContext, System.Threading.CancellationToken)", span="32-32"];
m26_45 [cluster="Hangfire.Storage.IFetchedJob.RemoveFromQueue()", file="JobActivatorSteps.cs", label="Entry Hangfire.Storage.IFetchedJob.RemoveFromQueue()", span="24-24"];
m26_49 [cluster="Hangfire.Storage.IFetchedJob.Requeue()", file="JobActivatorSteps.cs", label="Entry Hangfire.Storage.IFetchedJob.Requeue()", span="25-25"];
m26_47 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="Entry Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="126-126"];
m26_53 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="var jobData = connection.GetJobData(jobId)", span="130-130"];
m26_57 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="var performContext = new PerformContext(\r\n                    _context, connection, jobId, jobData.Job, jobData.CreatedAt, token)", span="142-143"];
m26_54 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="jobData == null", span="131-131"];
m26_56 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="jobData.EnsureLoaded()", span="140-140"];
m26_58 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="var latency = (DateTime.UtcNow - jobData.CreatedAt).TotalMilliseconds", span="145-145"];
m26_60 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="var result = _process.Run(performContext, jobData.Job)", span="148-148"];
m26_55 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="return null;", span="137-137"];
m26_59 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="var duration = Stopwatch.StartNew()", span="146-146"];
m26_62 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="return new SucceededState(result, (long) latency, duration.ElapsedMilliseconds);", span="151-151"];
m26_61 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="duration.Stop()", span="149-149"];
m26_63 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label=OperationCanceledException, span="153-153"];
m26_64 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="throw;", span="155-155"];
m26_65 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label=JobPerformanceException, span="157-157"];
m26_66 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="return new FailedState(ex.InnerException)\r\n                {\r\n                    Reason = ex.Message\r\n                };", span="159-162"];
m26_67 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label=Exception, span="164-164"];
m26_68 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="return new FailedState(ex)\r\n                {\r\n                    Reason = ''Internal Hangfire Server exception occurred. Please, report it to Hangfire developers.''\r\n                };", span="166-169"];
m26_69 [cluster="Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="Exit Hangfire.Server.Worker.PerformJob(string, Hangfire.Storage.IStorageConnection, Hangfire.IJobCancellationToken)", span="126-126"];
m26_72 [cluster="Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", file="JobActivatorSteps.cs", label="Entry Hangfire.Server.PerformContext.PerformContext(Hangfire.Server.WorkerContext, Hangfire.Storage.IStorageConnection, string, Hangfire.Common.Job, System.DateTime, Hangfire.IJobCancellationToken)", span="35-35"];
m26_0 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="JobActivatorSteps.cs", label="Entry HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", span="13-13"];
m26_1 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", color=red, community=0, file="JobActivatorSteps.cs", label="2: Type jobType = null", span="17-17"];
m26_3 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", color=red, community=0, file="JobActivatorSteps.cs", label="2: jobType = typeof (TestJob)", span="19-19"];
m26_5 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="JobActivatorSteps.cs", label="jobType = typeof (CustomConstructorJob)", span="20-20"];
m26_7 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="JobActivatorSteps.cs", label="_jobInstance = activator.ActivateJob(jobType)", span="23-23"];
m26_9 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="JobActivatorSteps.cs", label="_exception = ex", span="27-27"];
m26_10 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="JobActivatorSteps.cs", label="Exit HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", span="13-13"];
m26_2 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", color=red, community=0, file="JobActivatorSteps.cs", label="2: type == ''TestJob''", span="19-19"];
m26_4 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", color=red, community=0, file="JobActivatorSteps.cs", label="2: type == ''CustomConstructorJob''", span="20-20"];
m26_6 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="JobActivatorSteps.cs", label="var activator = new JobActivator()", span="22-22"];
m26_8 [cluster="HangFire.Tests.JobActivatorSteps.WhenICallTheActivateMethodWithTheTypeArgument(string)", file="JobActivatorSteps.cs", label=Exception, span="25-25"];
m26_74 [cluster="Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", file="JobActivatorSteps.cs", label="Entry Hangfire.Server.IJobPerformanceProcess.Run(Hangfire.Server.PerformContext, Hangfire.Server.IJobPerformer)", span="20-20"];
m26_48 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", file="JobActivatorSteps.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[])", span="31-31"];
m26_43 [cluster="Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="Entry Hangfire.States.IStateMachine.ChangeState(string, Hangfire.States.IState, string[], System.Threading.CancellationToken)", span="26-26"];
m26_38 [cluster="Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="Entry Hangfire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m26_71 [cluster="Hangfire.Storage.JobData.EnsureLoaded()", file="JobActivatorSteps.cs", label="Entry Hangfire.Storage.JobData.EnsureLoaded()", span="29-29"];
m26_42 [cluster="Hangfire.States.ProcessingState.ProcessingState(string, int)", file="JobActivatorSteps.cs", label="Entry Hangfire.States.ProcessingState.ProcessingState(string, int)", span="27-27"];
m26_41 [cluster="System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", file="JobActivatorSteps.cs", label="Entry System.Threading.CancellationTokenSource.CreateLinkedTokenSource(System.Threading.CancellationToken, System.Threading.CancellationToken)", span="0-0"];
m26_78 [file="JobActivatorSteps.cs", label="Hangfire.Server.Worker", span=""];
m27_19 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioTearDown()", file="JobClient.feature.cs", label="testRunner.OnScenarioEnd()", span="59-59"];
m27_25 [cluster="Unk.ContainsKey", file="JobClient.feature.cs", label="Entry Unk.ContainsKey", span=""];
m27_29 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="JobClient.feature.cs", label="1: _completed", span="80-80"];
m27_86 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", span="209-209"];
m27_87 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty id should cause an exception'', ((string[])(null)))", span="211-211"];
m27_88 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="213-213"];
m27_89 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="215-215"];
m27_90 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with an empty id'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="217-217"];
m27_91 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="219-219"];
m27_92 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="221-221"];
m27_93 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyIdShouldCauseAnException()", span="209-209"];
m27_21 [cluster="Unk.Add", file="JobClient.feature.cs", label="Entry Unk.Add", span=""];
m27_27 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs", label="testRunner.CollectScenarioErrors()", span="69-69"];
m27_30 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="JobClient.feature.cs", label="0: return;", span="80-80"];
m27_31 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="JobClient.feature.cs", label="0: _completed = true", span="82-82"];
m27_32 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="JobClient.feature.cs", label="1: var parameters = new DynamicParameters()", span="84-84"];
m27_94 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", span="228-228"];
m27_95 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty type should cause an exception'', ((string[])(null)))", span="230-230"];
m27_96 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="232-232"];
m27_97 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="234-234"];
m27_98 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with null type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="236-236"];
m27_99 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="238-238"];
m27_100 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="240-240"];
m27_101 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyTypeShouldCauseAnException()", span="228-228"];
m27_5 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="_resource = resource", span="49-49"];
m27_18 [cluster="string.IsNullOrEmpty(string)", file="JobClient.feature.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m27_20 [cluster="DynamicParameters.cstr", file="JobClient.feature.cs", label="Entry DynamicParameters.cstr", span=""];
m27_23 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64"];
m27_34 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="JobClient.feature.cs", label="2: parameters.Add(''@LockOwner'', LockOwner)", span="86-86"];
m27_35 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobClient.feature.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="87-87"];
m27_36 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobClient.feature.cs", label="_connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="89-92"];
m27_37 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobClient.feature.cs", label="var releaseResult = parameters.Get<int>(''@Result'')", span="94-94"];
m27_38 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobClient.feature.cs", label="releaseResult < 0", span="96-96"];
m27_39 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="JobClient.feature.cs", label="0: throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                        ''Could not release a lock on the resource '{0}': Server returned the '{1}' error.'', \r\n                        _resource,\r\n                        releaseResult));", span="98-102"];
m27_40 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobClient.feature.cs", label="Exit HangFire.SqlServer.SqlServerDistributedLock.Dispose()", span="78-78"];
m27_41 [cluster="HangFire.Tests.Client.JobClientFeature.TheClientCreatesShouldCreateAJobInTheStorage()", file="JobClient.feature.cs", label="HangFire.SqlServer.SqlServerDistributedLock", span=""];
m27_13 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="connection.Execute(\r\n                @''sp_getapplock'', \r\n                parameters, \r\n                commandType: CommandType.StoredProcedure)", span="59-62"];
m27_7 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="var parameters = new DynamicParameters()", span="52-52"];
m27_0 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="44-44"];
m27_1 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="String.IsNullOrEmpty(resource)", span="46-46"];
m27_2 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="throw new ArgumentNullException(''resource'');", span="46-46"];
m27_3 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="connection == null", span="47-47"];
m27_4 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="throw new ArgumentNullException(''connection'');", span="47-47"];
m27_43 [cluster="Unk.When", file="JobClient.feature.cs", label="Entry Unk.When", span=""];
m27_56 [cluster="Unk.AddRow", file="JobClient.feature.cs", label="Entry Unk.AddRow", span=""];
m27_45 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", span="104-104"];
m27_46 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The job should contain the \'Type\' parameter that is equal to the assembly qualifi'' +\r\n                    ''ed type name'', ((string[])(null)))", span="106-107"];
m27_47 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="109-109"];
m27_48 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="111-111"];
m27_49 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="113-113"];
m27_50 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="115-117"];
m27_51 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="table1.AddRow(new string[] {\r\n                        ''Type'',\r\n                        ''<Assembly qualified name of \'HangFire.Tests.TestJob\' type>''})", span="118-120"];
m27_52 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="testRunner.Then(''it should have the following parameters:'', ((string)(null)), table1, ''Then '')", span="122-122"];
m27_53 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="124-124"];
m27_54 [cluster="HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheJobShouldContainTheTypeParameterThatIsEqualToTheAssemblyQualifiedTypeName()", span="104-104"];
m27_24 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
m27_78 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", span="190-190"];
m27_79 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The specified state should be applied to the job'', ((string[])(null)))", span="192-192"];
m27_80 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="194-194"];
m27_81 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="196-196"];
m27_82 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
m27_83 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="testRunner.Then(''the given state should be applied to it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
m27_84 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="202-202"];
m27_85 [cluster="HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TheSpecifiedStateShouldBeAppliedToTheJob()", span="190-190"];
m27_9 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="parameters.Add(''@LockMode'', LockMode)", span="54-54"];
m27_10 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="55-55"];
m27_11 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="parameters.Add(''@LockTimeout'', LockTimeout.TotalMilliseconds)", span="56-56"];
m27_12 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="JobClient.feature.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="57-57"];
m27_42 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m27_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m27_8 [cluster="Unk.OnFeatureStart", file="JobClient.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m27_16 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", color=red, community=0, file="JobClient.feature.cs", label="2: HangFire.Tests.Client.JobClientFeature.FeatureSetup(null)", span="52-52"];
m27_14 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="47-47"];
m27_15 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", color=red, community=0, file="JobClient.feature.cs", label="0: ((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobClient''))", span="49-50"];
m27_17 [cluster="HangFire.Tests.Client.JobClientFeature.TestInitialize()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.TestInitialize()", span="47-47"];
m27_57 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", span="132-132"];
m27_58 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''If the arguments were not provided, the \'Args\' parameter should contain the empty'' +\r\n                    '' JSON value'', ((string[])(null)))", span="134-135"];
m27_59 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="137-137"];
m27_60 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="139-139"];
m27_61 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="testRunner.When(''I create an argumentless job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="141-141"];
m27_62 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="143-145"];
m27_63 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="table2.AddRow(new string[] {\r\n                        ''Args'',\r\n                        ''{}''})", span="146-148"];
m27_64 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="testRunner.Then(''it should have the following parameters:'', ((string)(null)), table2, ''Then '')", span="150-150"];
m27_65 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="152-152"];
m27_66 [cluster="HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.IfTheArgumentsWereNotProvidedTheArgsParameterShouldContainTheEmptyJSONValue()", span="132-132"];
m27_67 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", span="160-160"];
m27_68 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Arguments should be converted to a JSON string and contained in the \'Args\' parame'' +\r\n                    ''ter'', ((string[])(null)))", span="162-163"];
m27_69 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="165-165"];
m27_70 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="167-167"];
m27_71 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="169-171"];
m27_72 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="table3.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''5''})", span="172-174"];
m27_73 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="table3.AddRow(new string[] {\r\n                        ''State'',\r\n                        ''Deleted''})", span="175-177"];
m27_74 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with the following arguments:'', ((string)(null)), table3, ''When '')", span="179-179"];
m27_75 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="testRunner.Then(''the job should contain all of the above arguments in the JSON format'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="181-181"];
m27_76 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="183-183"];
m27_77 [cluster="HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ArgumentsShouldBeConvertedToAJSONStringAndContainedInTheArgsParameter()", span="160-160"];
m27_44 [cluster="Unk.Then", file="JobClient.feature.cs", label="Entry Unk.Then", span=""];
m27_22 [cluster="Unk.Execute", file="JobClient.feature.cs", label="Entry Unk.Execute", span=""];
m27_33 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="JobClient.feature.cs", label="2: parameters.Add(''@Resource'', _resource)", span="85-85"];
m27_55 [cluster="TechTalk.SpecFlow.Table.cstr", file="JobClient.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m27_102 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", span="248-248"];
m27_103 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with the type, that is not derived from the \'BackgroundJob\' should'' +\r\n                    '' cause an exception'', ((string[])(null)))", span="250-251"];
m27_104 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="253-253"];
m27_105 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="255-255"];
m27_106 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with the incorrect type'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="257-257"];
m27_107 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="259-259"];
m27_108 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="261-261"];
m27_109 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithTheTypeThatIsNotDerivedFromTheBackgroundJobShouldCauseAnException()", span="248-248"];
m27_28 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="67-67"];
m27_26 [cluster="HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.ScenarioCleanup()", span="67-67"];
m27_118 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithANullDictionaryAsArgumentsShouldCauseAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithANullDictionaryAsArgumentsShouldCauseAnException()", span="287-287"];
m27_119 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithANullDictionaryAsArgumentsShouldCauseAnException()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with a null dictionary as arguments should cause an exception'', ((string[])(null)))", span="289-289"];
m27_120 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithANullDictionaryAsArgumentsShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="291-291"];
m27_121 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithANullDictionaryAsArgumentsShouldCauseAnException()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="293-293"];
m27_122 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithANullDictionaryAsArgumentsShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with a null dictionary as arguments'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="295-295"];
m27_123 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithANullDictionaryAsArgumentsShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="297-297"];
m27_124 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithANullDictionaryAsArgumentsShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="299-299"];
m27_125 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithANullDictionaryAsArgumentsShouldCauseAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithANullDictionaryAsArgumentsShouldCauseAnException()", span="287-287"];
m27_110 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="Entry HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", span="268-268"];
m27_111 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Creating a job with an empty state should cause an exception'', ((string[])(null)))", span="270-270"];
m27_112 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="272-272"];
m27_113 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="this.FeatureBackground()", span="274-274"];
m27_114 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.When(''I create a job with an empty state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="276-276"];
m27_115 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="278-278"];
m27_116 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="this.ScenarioCleanup()", span="280-280"];
m27_117 [cluster="HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", file="JobClient.feature.cs", label="Exit HangFire.Tests.Client.JobClientFeature.CreatingAJobWithAnEmptyStateShouldCauseAnException()", span="268-268"];
m27_126 [file="JobClient.feature.cs", label="HangFire.Tests.Client.JobClientFeature", span=""];
m28_49 [cluster="HangFire.Server.JobServer.RunServer()", file="JobClientSteps.cs", label="RemoveServer()", span="92-92"];
m28_13 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d>'')", span="126-127"];
m28_19 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="JobClientSteps.cs", label="0: WriteLiteral(''                        <em>No jobs queued.</em>\r\n'')", span="163-163"];
m28_27 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(HtmlHelper.JobId(job.Key))", span="221-221"];
m28_44 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="39-39"];
m28_45 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobClientSteps.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33"];
m28_46 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobClientSteps.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m28_47 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientSteps.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="207-207"];
m28_48 [cluster="HttpRequestBase.LinkTo(string)", file="JobClientSteps.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m28_50 [cluster="HangFire.Web.HtmlHelper.JobId(string)", file="JobClientSteps.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string)", span="17-17"];
m28_51 [cluster="Unk.Write", file="JobClientSteps.cs", label="Entry Unk.Write", span=""];
m28_52 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="JobClientSteps.cs", label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="22-22"];
m28_79 [cluster="Unk.SetRangeInHash", file="JobClientSteps.cs", label="Entry Unk.SetRangeInHash", span=""];
m28_17 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="150-150"];
m28_21 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="queue.FirstJobs", span="189-189"];
m28_22 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", color=green, community=0, file="JobClientSteps.cs", label="1: WriteLiteral(''                                    <tr class=\'''')", span="195-195"];
m28_23 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="200-200"];
m28_24 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\''>\r\n                                        <td>\r\n                               '' +\r\n''             <a href=\'''')", span="205-206"];
m28_25 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="211-211"];
m28_71 [cluster="Unk.AddItemToSet", file="JobClientSteps.cs", label="Entry Unk.AddItemToSet", span=""];
m28_75 [cluster="string.Format(string, object)", file="JobClientSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m28_53 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobClientSteps.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="100-100"];
m28_78 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobClientSteps.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m28_96 [cluster="Unk.RemoveEntry", file="JobClientSteps.cs", label="Entry Unk.RemoveEntry", span=""];
m28_15 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="137-137"];
m28_77 [cluster="int.ToString()", file="JobClientSteps.cs", label="Entry int.ToString()", span="0-0"];
m28_16 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(queue.Dequeued)", span="142-142"];
m28_34 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="job.Value.EnqueuedAt.HasValue", span="265-265"];
m28_26 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\''>'')", span="216-216"];
m28_33 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''</td>\r\n                                        <td>\r\n'')", span="260-260"];
m28_35 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                                                <span data-moment=\'''')", span="271-271"];
m28_37 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\''>\r\n                                                    '')", span="281-281"];
m28_38 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(job.Value.EnqueuedAt)", span="286-286"];
m28_39 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\r\n                                                </span>\r\n'')", span="291-291"];
m28_40 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''  </tr>\r\n'')", span="301-302"];
m28_41 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                            </tbody>\r\n                        </table>\r\n'')", span="312-312"];
m28_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClientSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m28_0 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="39-39"];
m28_1 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\r\n'')", span="43-43"];
m28_2 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Layout = new LayoutPage { Title = ''Queues'' }", span="53-53"];
m28_3 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="var queues = JobStorage.Queues()", span="54-54"];
m28_4 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\r\n'')", span="60-60"];
m28_6 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        You have no queues yet. Try to enq'' +\r\n''ueue your first job.\r\n    </div>\r\n'')", span="71-72"];
m28_8 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label=queues, span="99-99"];
m28_9 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                <tr>\r\n                    <td>\r\n                        <a href=\'''' +\r\n'''')", span="105-106"];
m28_5 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="queues.Count == 0", span="65-65"];
m28_7 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(@''    <table class=''''table table-striped''''>\r\n        <thead>\r\n            <tr>\r\n                <th>Queue</th>\r\n                <th>Length</th>\r\n                <th>Dequeued</th>\r\n                <th>Next jobs</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", span="84-94"];
m28_10 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="111-111"];
m28_11 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''\''>\r\n                            '')", span="116-116"];
m28_12 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(queue.Name)", span="121-121"];
m28_42 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="322-322"];
m28_83 [cluster="Unk.AddItemToList", file="JobClientSteps.cs", label="Entry Unk.AddItemToList", span=""];
m28_57 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobClientSteps.cs", label="var transaction = _redis.CreateTransaction()", span="102-102"];
m28_58 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobClientSteps.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="104-105"];
m28_59 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobClientSteps.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        }))", span="107-113"];
m28_62 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobClientSteps.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1))", span="118-120"];
m28_63 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobClientSteps.cs", label="transaction.Commit()", span="123-123"];
m28_60 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobClientSteps.cs", label=_queues, span="115-115"];
m28_61 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobClientSteps.cs", label="var queue1 = queue", span="117-117"];
m28_64 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobClientSteps.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="100-100"];
m28_92 [cluster="Unk.RemoveItemFromSet", file="JobClientSteps.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m28_56 [cluster="Unk.Fatal", file="JobClientSteps.cs", label="Entry Unk.Fatal", span=""];
m28_14 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(queue.Length)", span="132-132"];
m28_28 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''</a>\r\n'')", span="226-226"];
m28_29 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="!job.Value.InEnqueuedState", span="231-231"];
m28_30 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                                                <span title=\''Job\'s state has been'' +\r\n'' changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>'' +\r\n''\r\n'')", span="237-239"];
m28_31 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="WriteLiteral(''                                        </td>\r\n                                  '' +\r\n''      <td>'')", span="249-250"];
m28_32 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(HtmlHelper.JobType(job.Value.Type))", span="255-255"];
m28_94 [cluster="lambda expression", color=red, community=0, file="JobClientSteps.cs", label="0: x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName))", span="135-137"];
m28_68 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="104-105"];
m28_72 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="107-113"];
m28_81 [cluster="lambda expression", file="JobClientSteps.cs", label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1)", span="118-120"];
m28_80 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="118-120"];
m28_69 [cluster="lambda expression", file="JobClientSteps.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="104-105"];
m28_70 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="104-105"];
m28_73 [cluster="lambda expression", file="JobClientSteps.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="107-113"];
m28_74 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="107-113"];
m28_82 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="118-120"];
m28_89 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="131-133"];
m28_93 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="135-137"];
m28_90 [cluster="lambda expression", file="JobClientSteps.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName)", span="131-133"];
m28_91 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="131-133"];
m28_95 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="135-137"];
m28_67 [cluster="Unk.Commit", file="JobClientSteps.cs", label="Entry Unk.Commit", span=""];
m28_36 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="JobClientSteps.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="276-276"];
m28_18 [cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", color=green, community=0, file="JobClientSteps.cs", label="2: Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9"];
m28_20 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", color=green, community=0, file="JobClientSteps.cs", label="2: Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m28_43 [cluster="HangFire.Server.JobManager.Dispose()", file="JobClientSteps.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="59-59"];
m28_66 [cluster="Unk.QueueCommand", file="JobClientSteps.cs", label="Entry Unk.QueueCommand", span=""];
m28_54 [cluster="System.Threading.WaitHandle.WaitOne()", file="JobClientSteps.cs", label="HangFire.Web.Pages.QueuesPage", span=""];
m28_65 [cluster="Unk.CreateTransaction", file="JobClientSteps.cs", label="Entry Unk.CreateTransaction", span=""];
m28_86 [cluster="HangFire.Server.JobServer.RemoveServer()", color=red, community=0, file="JobClientSteps.cs", label="0: transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName)))", span="135-137"];
m28_55 [cluster="HangFire.Server.JobServer.RemoveServer()", file="JobClientSteps.cs", label="Entry HangFire.Server.JobServer.RemoveServer()", span="127-127"];
m28_84 [cluster="HangFire.Server.JobServer.RemoveServer()", file="JobClientSteps.cs", label="var transaction = _redis.CreateTransaction()", span="129-129"];
m28_85 [cluster="HangFire.Server.JobServer.RemoveServer()", file="JobClientSteps.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName))", span="131-133"];
m28_87 [cluster="HangFire.Server.JobServer.RemoveServer()", file="JobClientSteps.cs", label="transaction.Commit()", span="139-139"];
m28_88 [cluster="HangFire.Server.JobServer.RemoveServer()", file="JobClientSteps.cs", label="Exit HangFire.Server.JobServer.RemoveServer()", span="127-127"];
m28_97 [file="JobClientSteps.cs", label="HangFire.Server.JobServer", span=""];
m28_98 [file="JobClientSteps.cs", label=queue1, span=""];
m29_36 [cluster="HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", file="JobClientTests.cs", label="Entry HangFire.Client.JobClient.CreateJob(HangFire.Common.JobMethod, string[], HangFire.Common.States.JobState)", span="75-75"];
m29_113 [cluster="System.Collections.Generic.List<T>.List()", file="JobClientTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m29_291 [cluster="Unk.TryParse", file="JobClientTests.cs", label="Entry Unk.TryParse", span=""];
m29_30 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", file="JobClientTests.cs", label="Entry HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", span="59-59"];
m29_13 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", color=red, community=0, file="JobClientTests.cs", label="2: return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="32-32"];
m29_133 [cluster="int.Parse(string)", file="JobClientTests.cs", label="Entry int.Parse(string)", span="0-0"];
m29_43 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m29_44 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label=Redis, span="82-82"];
m29_45 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="84-87"];
m29_46 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="scheduledJobs.Count == 0", span="89-89"];
m29_51 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label=scheduledJobs, span="99-99"];
m29_56 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129"];
m29_47 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="HangFire.Tests.Client.JobClientTests", span=""];
m29_48 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="var jobs = new Dictionary<string, List<string>>()", span="94-94"];
m29_49 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="var states = new Dictionary<string, string>()", span="95-95"];
m29_53 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107"];
m29_50 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="var pipeline = Redis.CreatePipeline()", span="97-97"];
m29_54 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113"];
m29_55 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="pipeline.Flush()", span="116-116"];
m29_52 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="var job = scheduledJob", span="101-101"];
m29_57 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m29_38 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_CallsCreate_WithCorrectContext()", file="JobClientTests.cs", label="_client.CreateJob(_method, new[] { ''hello'', ''3'' }, _stateMock.Object)", span="74-74"];
m29_214 [cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="JobClientTests.cs", label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m29_386 [cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="JobClientTests.cs", label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2"];
m29_29 [cluster="Unk.CreateJob", file="JobClientTests.cs", label="Entry Unk.CreateJob", span=""];
m29_37 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="JobClientTests.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m29_39 [cluster="string.Equals(string, System.StringComparison)", file="JobClientTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m29_31 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", color=green, community=0, file="JobClientTests.cs", label="0: _client.CreateJob(_method, null, _stateMock.Object)", span="61-61"];
m29_359 [cluster="KeyValuePair<string, T>.cstr", file="JobClientTests.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m29_197 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="JobClientTests.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5"];
m29_60 [cluster="Unk.CreatePipeline", file="JobClientTests.cs", label="Entry Unk.CreatePipeline", span=""];
m29_76 [cluster="Unk.GetValueFromHash", file="JobClientTests.cs", label="Entry Unk.GetValueFromHash", span=""];
m29_23 [cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", file="JobClientTests.cs", label="Entry HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", span="43-43"];
m29_24 [cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", file="JobClientTests.cs", label="new JobClient(_connectionMock.Object, null)", span="46-46"];
m29_25 [cluster="HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", color=red, community=0, file="JobClientTests.cs", label="1: Exit HangFire.Tests.Client.JobClientTests.Ctor_ThrowsAnException_WhenJobCreatorIsNull()", span="43-43"];
m29_26 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", color=red, community=0, file="JobClientTests.cs", label="1: Entry HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", span="52-52"];
m29_27 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", color=green, community=0, file="JobClientTests.cs", label="1: _client.CreateJob(null, new string[0], _stateMock.Object)", span="54-54"];
m29_134 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="JobClientTests.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m29_10 [cluster="Unk.GetListCount", file="JobClientTests.cs", label="Entry Unk.GetListCount", span=""];
m29_257 [cluster="Unk.ContainsKey", file="JobClientTests.cs", label="Entry Unk.ContainsKey", span=""];
m29_234 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="JobClientTests.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m29_173 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500"];
m29_324 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="jobIds.Count == 0", span="507-507"];
m29_326 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="509-509"];
m29_327 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="510-510"];
m29_328 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="var pipeline = redis.CreatePipeline()", span="512-512"];
m29_329 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label=jobIds, span="514-514"];
m29_331 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="518-520"];
m29_332 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="stateProperties != null", span="522-522"];
m29_333 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="524-526"];
m29_335 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="533-543"];
m29_325 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="return new List<KeyValuePair<string, T>>();", span="507-507"];
m29_334 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="pipeline.Flush()", span="530-530"];
m29_330 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="var id = jobId", span="516-516"];
m29_336 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="500-500"];
m29_361 [cluster="Unk.selector", file="JobClientTests.cs", label="Entry Unk.selector", span=""];
m29_0 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m29_3 [cluster="HangFire.Web.JobStorage.ScheduledCount()", color=green, community=0, file="JobClientTests.cs", label="1: Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m29_2 [cluster="HangFire.Web.JobStorage.ScheduledCount()", color=red, community=0, file="JobClientTests.cs", label="1: return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16"];
m29_4 [cluster="Unk.GetSortedSetCount", file="JobClientTests.cs", label="Entry Unk.GetSortedSetCount", span=""];
m29_1 [cluster="HangFire.Web.JobStorage.ScheduledCount()", color=red, community=0, file="JobClientTests.cs", label="1: Redis", span="14-14"];
m29_5 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m29_6 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="JobClientTests.cs", label=Redis, span="22-22"];
m29_7 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="JobClientTests.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24"];
m29_14 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m29_16 [cluster="HangFire.Web.JobStorage.FailedCount()", color=red, community=0, file="JobClientTests.cs", label="2: Redis", span="38-38"];
m29_345 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobClientTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m29_11 [cluster="Unk.Returns", file="JobClientTests.cs", label="Entry Unk.Returns", span=""];
m29_12 [cluster="Mock<JobCreator>.cstr", file="JobClientTests.cs", label="Entry Mock<JobCreator>.cstr", span=""];
m29_219 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439"];
m29_269 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var endDate = DateTime.UtcNow", span="442-442"];
m29_276 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="450-450"];
m29_277 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="451-451"];
m29_270 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var dates = new List<DateTime>()", span="443-443"];
m29_273 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="dates.Add(endDate)", span="446-446"];
m29_274 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="endDate = endDate.AddHours(-1)", span="447-447"];
m29_271 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var i = 0", span="444-444"];
m29_280 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i < dates.Count", span="454-454"];
m29_284 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="result.Add(dates[i], value)", span="462-462"];
m29_272 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i < 24", span="444-444"];
m29_275 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i++", span="444-444"];
m29_278 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var result = new Dictionary<DateTime, long>()", span="453-453"];
m29_282 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="457-457"];
m29_279 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var i = 0", span="454-454"];
m29_286 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="return result;", span="465-465"];
m29_285 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i++", span="454-454"];
m29_281 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="long value", span="456-456"];
m29_283 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="value = 0", span="459-459"];
m29_287 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="439-439"];
m29_232 [cluster="Unk.TryToGetQueue", file="JobClientTests.cs", label="Entry Unk.TryToGetQueue", span=""];
m29_15 [cluster="HangFire.Web.JobStorage.FailedCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m29_58 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="JobClientTests.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m29_132 [cluster="HangFire.Web.ServerDto.ServerDto()", file="JobClientTests.cs", label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5"];
m29_258 [cluster="Unk.Where", file="JobClientTests.cs", label="Entry Unk.Where", span=""];
m29_236 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393"];
m29_237 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label=Redis, span="395-395"];
m29_238 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="397-397"];
m29_242 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="405-408"];
m29_239 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="398-398"];
m29_240 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="String.IsNullOrEmpty(queue)", span="400-400"];
m29_241 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="return false;", span="402-402"];
m29_243 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="393-393"];
m29_174 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="JobClientTests.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m29_317 [cluster="System.DateTime.AddDays(double)", file="JobClientTests.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m29_360 [cluster="Unk.TrueForAll", file="JobClientTests.cs", label="Entry Unk.TrueForAll", span=""];
m29_20 [cluster="HangFire.Web.JobStorage.ProcessingCount()", color=red, community=0, file="JobClientTests.cs", label="0: Redis", span="46-46"];
m29_21 [cluster="HangFire.Web.JobStorage.ProcessingCount()", color=green, community=0, file="JobClientTests.cs", label="1: return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48"];
m29_22 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m29_429 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="593-593"];
m29_32 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", file="JobClientTests.cs", label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenArgumentsIsNull()", span="59-59"];
m29_40 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="76-76"];
m29_33 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", color=red, community=0, file="JobClientTests.cs", label="0: Entry HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", span="66-66"];
m29_34 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClientTests.cs", label="_client.CreateJob(_method, new string[0], null)", span="68-68"];
m29_41 [cluster="lambda expression", file="JobClientTests.cs", label="x.Value.StartedAt", span="76-76"];
m29_42 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="76-76"];
m29_70 [cluster="lambda expression", file="JobClientTests.cs", label="jobs.Add(job.Key, x)", span="107-107"];
m29_84 [cluster="lambda expression", file="JobClientTests.cs", label="new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129"];
m29_78 [cluster="lambda expression", file="JobClientTests.cs", label="states.Add(job.Key, x)", span="113-113"];
m29_65 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106"];
m29_74 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112"];
m29_64 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="104-106"];
m29_69 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="107-107"];
m29_73 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="110-112"];
m29_77 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="113-113"];
m29_80 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="120-120"];
m29_83 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="121-129"];
m29_66 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="104-106"];
m29_71 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="107-107"];
m29_75 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="110-112"];
m29_79 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="113-113"];
m29_81 [cluster="lambda expression", file="JobClientTests.cs", label="job.Key", span="120-120"];
m29_82 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="120-120"];
m29_85 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="121-129"];
m29_120 [cluster="lambda expression", file="JobClientTests.cs", label="servers.Add(name, x)", span="173-173"];
m29_130 [cluster="lambda expression", file="JobClientTests.cs", label="new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }", span="184-191"];
m29_127 [cluster="lambda expression", file="JobClientTests.cs", label="queues.Add(name, x)", span="178-178"];
m29_117 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="170-172"];
m29_123 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177"];
m29_116 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="170-172"];
m29_119 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="173-173"];
m29_122 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="176-177"];
m29_126 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="178-178"];
m29_129 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="184-191"];
m29_118 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="170-172"];
m29_121 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="173-173"];
m29_124 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="176-177"];
m29_128 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="178-178"];
m29_131 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="184-191"];
m29_141 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="209-219"];
m29_142 [cluster="lambda expression", file="JobClientTests.cs", label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="209-219"];
m29_143 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="209-219"];
m29_151 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="237-244"];
m29_152 [cluster="lambda expression", file="JobClientTests.cs", label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="237-244"];
m29_153 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="237-244"];
m29_177 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="264-265"];
m29_183 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="269-269"];
m29_189 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="273-273"];
m29_176 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="264-265"];
m29_179 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="266-266"];
m29_182 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="269-269"];
m29_185 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="270-270"];
m29_188 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="273-273"];
m29_191 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="274-274"];
m29_194 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="284-290"];
m29_178 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="264-265"];
m29_180 [cluster="lambda expression", file="JobClientTests.cs", label="firstJobIds = x", span="266-266"];
m29_181 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="266-266"];
m29_184 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="269-269"];
m29_186 [cluster="lambda expression", file="JobClientTests.cs", label="length = x", span="270-270"];
m29_187 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="270-270"];
m29_190 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="273-273"];
m29_192 [cluster="lambda expression", file="JobClientTests.cs", label="dequeued = x", span="274-274"];
m29_193 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="274-274"];
m29_195 [cluster="lambda expression", file="JobClientTests.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="284-290"];
m29_196 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="284-290"];
m29_203 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="320-326"];
m29_204 [cluster="lambda expression", file="JobClientTests.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="320-326"];
m29_205 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="320-326"];
m29_211 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="344-352"];
m29_212 [cluster="lambda expression", file="JobClientTests.cs", label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="344-352"];
m29_213 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="344-352"];
m29_260 [cluster="lambda expression", file="JobClientTests.cs", label="!hiddenProperties.Contains(x.Key)", span="433-433"];
m29_259 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="433-433"];
m29_263 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="433-433"];
m29_266 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="433-433"];
m29_261 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="433-433"];
m29_264 [cluster="lambda expression", file="JobClientTests.cs", label="x.Key", span="433-433"];
m29_265 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="433-433"];
m29_267 [cluster="lambda expression", file="JobClientTests.cs", label="x.Value", span="433-433"];
m29_268 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="433-433"];
m29_294 [cluster="lambda expression", file="JobClientTests.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="450-450"];
m29_293 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="450-450"];
m29_295 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="450-450"];
m29_322 [cluster="lambda expression", file="JobClientTests.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="482-482"];
m29_318 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="481-481"];
m29_321 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="482-482"];
m29_319 [cluster="lambda expression", file="JobClientTests.cs", label="x.ToString(''yyyy-MM-dd'')", span="481-481"];
m29_320 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="481-481"];
m29_323 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="482-482"];
m29_339 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="519-519"];
m29_347 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="525-525"];
m29_357 [cluster="lambda expression", file="JobClientTests.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="540-542"];
m29_342 [cluster="lambda expression", file="JobClientTests.cs", label="!jobs.ContainsKey(id)", span="520-520"];
m29_343 [cluster="lambda expression", file="JobClientTests.cs", label="jobs.Add(id, x)", span="520-520"];
m29_354 [cluster="lambda expression", file="JobClientTests.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="534-539"];
m29_350 [cluster="lambda expression", file="JobClientTests.cs", label="!states.ContainsKey(id)", span="526-526"];
m29_351 [cluster="lambda expression", file="JobClientTests.cs", label="states.Add(id, x)", span="526-526"];
m29_338 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="519-519"];
m29_341 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="520-520"];
m29_346 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="525-525"];
m29_349 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="526-526"];
m29_353 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="534-539"];
m29_356 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="540-542"];
m29_340 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="519-519"];
m29_344 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="520-520"];
m29_348 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="525-525"];
m29_352 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="526-526"];
m29_355 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="534-539"];
m29_358 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="540-542"];
m29_362 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="542-542"];
m29_363 [cluster="lambda expression", file="JobClientTests.cs", label="y == null", span="542-542"];
m29_364 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="542-542"];
m29_392 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Servers = x", span="566-566"];
m29_398 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Queues = x", span="570-570"];
m29_404 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Scheduled = x", span="574-574"];
m29_410 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Processing = x", span="578-578"];
m29_417 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="582-582"];
m29_424 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Failed = x", span="586-586"];
m29_430 [cluster="lambda expression", file="JobClientTests.cs", label="stats.Enqueued += x", span="593-593"];
m29_387 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="565-565"];
m29_391 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="566-566"];
m29_394 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="569-569"];
m29_397 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="570-570"];
m29_400 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="573-573"];
m29_403 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="574-574"];
m29_406 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="577-577"];
m29_409 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="578-578"];
m29_412 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="581-581"];
m29_416 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="582-582"];
m29_420 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="585-585"];
m29_423 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="586-586"];
m29_427 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="592-592"];
m29_426 [cluster="lambda expression", file="JobClientTests.cs", label="Entry lambda expression", span="592-592"];
m29_388 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetSetCount(''hangfire:servers'')", span="565-565"];
m29_389 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="565-565"];
m29_393 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="566-566"];
m29_395 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetSetCount(''hangfire:queues'')", span="569-569"];
m29_396 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="569-569"];
m29_399 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="570-570"];
m29_401 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="573-573"];
m29_402 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="573-573"];
m29_405 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="574-574"];
m29_407 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="577-577"];
m29_408 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="577-577"];
m29_411 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="578-578"];
m29_413 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="581-581"];
m29_414 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="581-581"];
m29_418 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="582-582"];
m29_421 [cluster="lambda expression", file="JobClientTests.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="585-585"];
m29_422 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="585-585"];
m29_425 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="586-586"];
m29_428 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="592-592"];
m29_431 [cluster="lambda expression", file="JobClientTests.cs", label="Exit lambda expression", span="593-593"];
m29_28 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", file="JobClientTests.cs", label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenJobMethodIsNull()", span="52-52"];
m29_175 [cluster="System.Collections.Generic.List<T>.Add(T)", file="JobClientTests.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m29_115 [cluster="Unk.ToList", file="JobClientTests.cs", label="Entry Unk.ToList", span=""];
m29_67 [cluster="Unk.Format", file="JobClientTests.cs", label="Entry Unk.Format", span=""];
m29_220 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m29_221 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobClientTests.cs", label=Redis, span="366-366"];
m29_222 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobClientTests.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="368-368"];
m29_223 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="364-364"];
m29_35 [cluster="HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", file="JobClientTests.cs", label="Exit HangFire.Tests.Client.JobClientTests.CreateJob_ThrowsAnException_WhenStateIsNull()", span="66-66"];
m29_61 [cluster="Unk.QueueCommand", file="JobClientTests.cs", label="Entry Unk.QueueCommand", span=""];
m29_135 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195"];
m29_136 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobClientTests.cs", label=Redis, span="197-197"];
m29_137 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobClientTests.cs", label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="199-202"];
m29_138 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobClientTests.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="204-219"];
m29_139 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="195-195"];
m29_144 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="JobClientTests.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5"];
m29_87 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="JobClientTests.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m29_296 [cluster="System.DateTime.ToString(string)", file="JobClientTests.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m29_145 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m29_146 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobClientTests.cs", label=Redis, span="225-225"];
m29_147 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobClientTests.cs", label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="227-230"];
m29_148 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobClientTests.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="232-244"];
m29_149 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="223-223"];
m29_172 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="JobClientTests.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m29_290 [cluster="Unk.ElementAt", file="JobClientTests.cs", label="Entry Unk.ElementAt", span=""];
m29_150 [cluster="Unk.GetRangeFromList", file="JobClientTests.cs", label="Entry Unk.GetRangeFromList", span=""];
m29_155 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="248-248"];
m29_156 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label=Redis, span="250-250"];
m29_157 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="252-252"];
m29_158 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="253-253"];
m29_159 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label=queues, span="255-255"];
m29_169 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="292-298"];
m29_170 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="return result;", span="301-301"];
m29_160 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="IList<string> firstJobIds = null", span="257-257"];
m29_164 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="263-266"];
m29_165 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="268-270"];
m29_166 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="272-274"];
m29_161 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="long length = 0", span="258-258"];
m29_162 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="long dequeued = 0", span="259-259"];
m29_163 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="var pipeline = Redis.CreatePipeline()", span="261-261"];
m29_167 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="pipeline.Flush()", span="276-276"];
m29_168 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="279-290"];
m29_171 [cluster="HangFire.Web.JobStorage.Queues()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.Queues()", span="248-248"];
m29_88 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m29_89 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobClientTests.cs", label=Redis, span="135-135"];
m29_90 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobClientTests.cs", label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137"];
m29_91 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m29_62 [cluster="Unk.Flush", file="JobClientTests.cs", label="Entry Unk.Flush", span=""];
m29_154 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="JobClientTests.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5"];
m29_419 [cluster="Unk.Parse", file="JobClientTests.cs", label="Entry Unk.Parse", span=""];
m29_72 [cluster="Unk.Add", file="JobClientTests.cs", label="Entry Unk.Add", span=""];
m29_97 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="149-149"];
m29_98 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label=Redis, span="151-151"];
m29_99 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153"];
m29_100 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="serverNames.Count == 0", span="155-155"];
m29_105 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label=serverNames, span="165-165"];
m29_110 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                    Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n                }).ToList();", span="184-191"];
m29_101 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="return new List<ServerDto>();", span="157-157"];
m29_102 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="var servers = new Dictionary<string, List<string>>()", span="160-160"];
m29_103 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="var queues = new Dictionary<string, List<string>>()", span="161-161"];
m29_107 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                            x => servers.Add(name, x))", span="169-173"];
m29_104 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="var pipeline = Redis.CreatePipeline()", span="163-163"];
m29_108 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178"];
m29_109 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="pipeline.Flush()", span="181-181"];
m29_106 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="var name = serverName", span="167-167"];
m29_111 [cluster="HangFire.Web.JobStorage.Servers()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="149-149"];
m29_369 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="554-554"];
m29_370 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label=Redis, span="556-556"];
m29_371 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="var stats = new StatisticsDto()", span="558-558"];
m29_372 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="560-560"];
m29_374 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="564-566"];
m29_375 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="568-570"];
m29_376 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="572-574"];
m29_377 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="576-578"];
m29_378 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="580-582"];
m29_379 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="584-586"];
m29_382 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="591-593"];
m29_384 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="return stats;", span="599-599"];
m29_373 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="var pipeline = Redis.CreatePipeline()", span="562-562"];
m29_380 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label=queues, span="588-588"];
m29_383 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="pipeline.Flush()", span="596-596"];
m29_381 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="var queueName = queue", span="590-590"];
m29_385 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="554-554"];
m29_365 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="546-546"];
m29_366 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobClientTests.cs", label=Redis, span="548-548"];
m29_367 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobClientTests.cs", label="return Redis.GetListCount(''hangfire:succeeded'');", span="550-550"];
m29_368 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="546-546"];
m29_9 [cluster="string.Format(string, object)", file="JobClientTests.cs", label="Entry string.Format(string, object)", span="0-0"];
m29_215 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356"];
m29_216 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobClientTests.cs", label=Redis, span="358-358"];
m29_217 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobClientTests.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="360-360"];
m29_218 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="356-356"];
m29_235 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="JobClientTests.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m29_288 [cluster="System.DateTime.AddHours(double)", file="JobClientTests.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m29_92 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468"];
m29_298 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var endDate = DateTime.UtcNow.Date", span="471-471"];
m29_305 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="482-482"];
m29_306 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="484-484"];
m29_299 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var startDate = endDate.AddDays(-7)", span="472-472"];
m29_301 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="startDate <= endDate", span="475-475"];
m29_302 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="dates.Add(endDate)", span="477-477"];
m29_303 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="endDate = endDate.AddDays(-1)", span="478-478"];
m29_300 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var dates = new List<DateTime>()", span="473-473"];
m29_304 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="481-481"];
m29_313 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="result.Add(dates[i], value)", span="494-494"];
m29_309 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i < stringDates.Count", span="487-487"];
m29_307 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var result = new Dictionary<DateTime, long>()", span="486-486"];
m29_311 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="490-490"];
m29_308 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="var i = 0", span="487-487"];
m29_315 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="return result;", span="497-497"];
m29_314 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="i++", span="487-487"];
m29_310 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="long value", span="489-489"];
m29_312 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="value = 0", span="492-492"];
m29_316 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="468-468"];
m29_17 [cluster="HangFire.Web.JobStorage.FailedCount()", file="JobClientTests.cs", label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40"];
m29_18 [cluster="HangFire.Web.JobStorage.FailedCount()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m29_255 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="JobClientTests.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m29_244 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="412-412"];
m29_245 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label=Redis, span="414-414"];
m29_246 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="416-416"];
m29_250 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="421-422"];
m29_247 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="job.Count == 0", span="417-417"];
m29_252 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="428-435"];
m29_248 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="return null;", span="417-417"];
m29_249 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="419-419"];
m29_251 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="424-426"];
m29_253 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="412-412"];
m29_292 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobClientTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m29_8 [cluster="Mock<IStorageConnection>.cstr", file="JobClientTests.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m29_297 [cluster="string.Format(string, object, object)", file="JobClientTests.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m29_254 [cluster="Unk.GetAllEntriesFromHash", file="JobClientTests.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m29_63 [cluster="Unk.ToDictionary", file="JobClientTests.cs", label="Entry Unk.ToDictionary", span=""];
m29_337 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="JobClientTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m29_390 [cluster="Unk.GetSetCount", file="JobClientTests.cs", label="Entry Unk.GetSetCount", span=""];
m29_206 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330"];
m29_207 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobClientTests.cs", label=Redis, span="333-333"];
m29_208 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobClientTests.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="335-337"];
m29_209 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobClientTests.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="339-352"];
m29_210 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="330-330"];
m29_93 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m29_94 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobClientTests.cs", label=Redis, span="143-143"];
m29_95 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobClientTests.cs", label="return GetTimelineStats(Redis, ''failed'');", span="145-145"];
m29_96 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m29_256 [cluster="Unk.>", file="JobClientTests.cs", label="Entry Unk.>", span=""];
m29_86 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="JobClientTests.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5"];
m29_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClientTests.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m29_233 [cluster="string.IsNullOrEmpty(string)", file="JobClientTests.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m29_289 [cluster="Unk.GetValuesMap", file="JobClientTests.cs", label="Entry Unk.GetValuesMap", span=""];
m29_19 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m29_125 [cluster="Unk.GetAllItemsFromList", file="JobClientTests.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m29_262 [cluster="Unk.Contains", file="JobClientTests.cs", label="Entry Unk.Contains", span=""];
m29_114 [cluster="Unk.Select", file="JobClientTests.cs", label="Entry Unk.Select", span=""];
m29_112 [cluster="Unk.GetAllItemsFromSet", file="JobClientTests.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m29_140 [cluster="Unk.GetRangeFromSortedSetDesc", file="JobClientTests.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m29_415 [cluster="Unk.GetValue", file="JobClientTests.cs", label="Entry Unk.GetValue", span=""];
m29_68 [cluster="Unk.GetValuesFromHash", file="JobClientTests.cs", label="Entry Unk.GetValuesFromHash", span=""];
m29_224 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m29_225 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label=Redis, span="374-374"];
m29_226 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="376-376"];
m29_230 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="386-389"];
m29_227 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="378-378"];
m29_228 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="String.IsNullOrEmpty(queue)", span="379-379"];
m29_229 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="return false;", span="381-381"];
m29_231 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="372-372"];
m29_198 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobClientTests.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m29_199 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobClientTests.cs", label=Redis, span="308-308"];
m29_200 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobClientTests.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="310-313"];
m29_201 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobClientTests.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="315-326"];
m29_202 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="JobClientTests.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="305-305"];
m29_432 [file="JobClientTests.cs", label=job, span=""];
m29_433 [file="JobClientTests.cs", label=jobs, span=""];
m29_434 [file="JobClientTests.cs", label=states, span=""];
m29_435 [file="JobClientTests.cs", label=name, span=""];
m29_436 [file="JobClientTests.cs", label=servers, span=""];
m29_437 [file="JobClientTests.cs", label=queues, span=""];
m29_438 [file="JobClientTests.cs", label=queue, span=""];
m29_439 [file="JobClientTests.cs", label=hiddenProperties, span=""];
m29_440 [file="JobClientTests.cs", label=string, span=""];
m29_441 [file="JobClientTests.cs", label=string, span=""];
m29_442 [file="JobClientTests.cs", label="string[]", span=""];
m29_443 [file="JobClientTests.cs", label=id, span=""];
m29_444 [file="JobClientTests.cs", label=jobs, span=""];
m29_445 [file="JobClientTests.cs", label="string[]", span=""];
m29_446 [file="JobClientTests.cs", label=states, span=""];
m29_447 [file="JobClientTests.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m29_448 [file="JobClientTests.cs", label=stats, span=""];
m29_449 [file="JobClientTests.cs", label=queueName, span=""];
m31_8 [cluster="Unk.OnFeatureStart", file="JobFetcher.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m31_25 [cluster="Unk.OnScenarioStart", file="JobFetcher.feature.cs", label="Entry Unk.OnScenarioStart", span=""];
m31_29 [cluster="Unk.CollectScenarioErrors", file="JobFetcher.feature.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m31_0 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m31_1 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", color=green, community=0, file="JobFetcher.feature.cs", label="2: Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="38-38"];
m31_2 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", color=green, community=0, file="JobFetcher.feature.cs", label="0: Entry HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43"];
m31_3 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", color=red, community=0, file="JobFetcher.feature.cs", label="0: storage == null", span="45-45"];
m31_4 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", color=red, community=0, file="JobFetcher.feature.cs", label="0: throw new ArgumentNullException(''storage'');", span="45-45"];
m31_18 [cluster="string.Format(string, object)", file="JobFetcher.feature.cs", label="Entry string.Format(string, object)", span="0-0"];
m31_41 [cluster="Unk.And", file="JobFetcher.feature.cs", label="Entry Unk.And", span=""];
m31_54 [cluster="Unk.But", file="JobFetcher.feature.cs", label="Entry Unk.But", span=""];
m31_5 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="JobFetcher.feature.cs", label="_storage = storage", span="47-47"];
m31_22 [cluster="HangFire.SqlServer.ExpirationManager.ToString()", color=red, community=0, file="JobFetcher.feature.cs", label="2: return ''SQL Records Expiration Manager'';", span="72-72"];
m31_23 [cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.ExpirationManager.ToString()", span="70-70"];
m31_24 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs", label="HangFire.SqlServer.ExpirationManager", span=""];
m31_30 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m31_31 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", color=green, community=0, file="JobFetcher.feature.cs", label="0: TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should return the job payload when it dequeues a job'', ((string[])(null)))", span="77-77"];
m31_32 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m31_37 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="89-89"];
m31_33 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81"];
m31_36 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher should return the payload'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87"];
m31_34 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83"];
m31_35 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85"];
m31_38 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldReturnTheJobPayloadWhenItDequeuesAJob()", span="75-75"];
m31_85 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", span="192-192"];
m31_92 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", color=green, community=0, file="JobFetcher.feature.cs", label="1: this.ScenarioCleanup()", span="206-206"];
m31_91 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Then(''the job should have the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="204-204"];
m31_87 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="196-196"];
m31_86 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should set the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="194-194"];
m31_90 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="202-202"];
m31_88 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="198-198"];
m31_89 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="200-200"];
m31_93 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldSetTheFetchedFlagWhenItDequeuesAJob()", span="192-192"];
m31_7 [cluster="HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage, System.TimeSpan)", span="43-43"];
m31_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", color=red, community=0, file="JobFetcher.feature.cs", label="0: Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m31_42 [cluster="Unk.When", file="JobFetcher.feature.cs", label="Entry Unk.When", span=""];
m31_76 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", span="171-171"];
m31_83 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="185-185"];
m31_78 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="175-175"];
m31_77 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should listen only specified queue'', ((string[])(null)))", span="173-173"];
m31_82 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher should not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="183-183"];
m31_79 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="177-177"];
m31_81 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="181-181"];
m31_80 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="179-179"];
m31_84 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldListenOnlySpecifiedQueue()", span="171-171"];
m31_14 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="JobFetcher.feature.cs", label="cancellationToken.WaitHandle.WaitOne(_checkInterval)", span="67-67"];
m31_16 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="70-70"];
m31_15 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="JobFetcher.feature.cs", label="Exit HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51"];
m31_17 [cluster="Unk.DebugFormat", file="JobFetcher.feature.cs", label="Entry Unk.DebugFormat", span=""];
m31_39 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobFetcher.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m31_44 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="97-97"];
m31_52 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="114-114"];
m31_46 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="102-102"];
m31_45 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should remove the dequeued job from the queue and adds it to the dequeued'' +\r\n                    '' list'', ((string[])(null)))", span="99-100"];
m31_51 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.But(''the dequeued jobs list should contain it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="112-112"];
m31_47 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="104-104"];
m31_50 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.Then(''the queue should not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="110-110"];
m31_48 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="106-106"];
m31_49 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="108-108"];
m31_53 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldRemoveTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="97-97"];
m31_9 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", span="51-51"];
m31_10 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="JobFetcher.feature.cs", label="var connection = _storage.CreateAndOpenConnection()", span="53-53"];
m31_11 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", color=red, community=0, file="JobFetcher.feature.cs", label="1: ProcessedTables", span="55-55"];
m31_13 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="JobFetcher.feature.cs", label="connection.Execute(\r\n                        String.Format(@''\r\nset transaction isolation level read committed;\r\ndelete from HangFire.[{0}] with (tablock) where ExpireAt < @now;'', table),\r\n                        new { now = DateTime.UtcNow })", span="59-63"];
m31_12 [cluster="HangFire.SqlServer.ExpirationManager.Execute(System.Threading.CancellationToken)", file="JobFetcher.feature.cs", label="Logger.DebugFormat(''Removing outdated records from table '{0}'...'', table)", span="57-57"];
m31_43 [cluster="Unk.Then", file="JobFetcher.feature.cs", label="Entry Unk.Then", span=""];
m31_40 [cluster="Unk.Given", file="JobFetcher.feature.cs", label="Entry Unk.Given", span=""];
m31_20 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="JobFetcher.feature.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m31_19 [cluster="Unk.Execute", file="JobFetcher.feature.cs", label="Entry Unk.Execute", span=""];
m31_21 [cluster="HangFire.SqlServer.ExpirationManager.ToString()", file="JobFetcher.feature.cs", label="Entry HangFire.SqlServer.ExpirationManager.ToString()", span="70-70"];
m31_26 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m31_27 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", color=green, community=0, file="JobFetcher.feature.cs", label="1: testRunner.CollectScenarioErrors()", span="68-68"];
m31_28 [cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", span="66-66"];
m31_55 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="122-122"];
m31_62 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="137-137"];
m31_57 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="127-127"];
m31_56 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should not return any job when it tries to dequeue a job from an empty qu'' +\r\n                    ''eue'', ((string[])(null)))", span="124-125"];
m31_61 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher should not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="135-135"];
m31_58 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.Given(''an empty queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="129-129"];
m31_60 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="133-133"];
m31_59 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="131-131"];
m31_63 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldNotReturnAnyJobWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="122-122"];
m31_64 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", span="144-144"];
m31_74 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="this.ScenarioCleanup()", span="164-164"];
m31_66 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="148-148"];
m31_65 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher should dequeue jobs in the FIFO order'', ((string[])(null)))", span="146-146"];
m31_73 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher should return the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="162-162"];
m31_67 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="150-150"];
m31_71 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.Then(''the fetcher should return the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158"];
m31_72 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="160-160"];
m31_68 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="152-152"];
m31_70 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156"];
m31_69 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="154-154"];
m31_75 [cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", file="JobFetcher.feature.cs", label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherShouldDequeueJobsInTheFIFOOrder()", span="144-144"];
m31_94 [file="JobFetcher.feature.cs", label="HangFire.Tests.Server.JobFetcherFeature", span=""];
m32_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobFetcherSteps.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m32_82 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="JobFetcherSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m32_31 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="JobFetcherSteps.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m32_67 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="JobFetcherSteps.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m32_30 [cluster="Hangfire.JobStorage.GetConnection()", file="JobFetcherSteps.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m32_84 [cluster="string.Format(string, object, object)", file="JobFetcherSteps.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m32_38 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="JobFetcherSteps.cs", label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="99-99"];
m32_39 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="JobFetcherSteps.cs", label="return GetType().Name;", span="101-101"];
m32_40 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="JobFetcherSteps.cs", label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="99-99"];
m32_76 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="JobFetcherSteps.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m32_71 [cluster="Unk._instantFactory", file="JobFetcherSteps.cs", label="Entry Unk._instantFactory", span=""];
m32_83 [cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="JobFetcherSteps.cs", label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m32_74 [cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", file="JobFetcherSteps.cs", label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", span="25-25"];
m32_41 [cluster="object.GetType()", file="JobFetcherSteps.cs", label="Entry object.GetType()", span="0-0"];
m32_33 [cluster="string.Format(string, object)", file="JobFetcherSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m32_69 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobFetcherSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m32_36 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="JobFetcherSteps.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="278-278"];
m32_70 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="JobFetcherSteps.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m32_75 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="JobFetcherSteps.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m32_78 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="JobFetcherSteps.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m32_68 [cluster="Unk.Parse", file="JobFetcherSteps.cs", label="Entry Unk.Parse", span=""];
m32_29 [cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="JobFetcherSteps.cs", label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22"];
m32_73 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobFetcherSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m32_81 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="JobFetcherSteps.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m32_66 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="JobFetcherSteps.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m32_77 [cluster="string.IsNullOrEmpty(string)", file="JobFetcherSteps.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m32_72 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="JobFetcherSteps.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m32_16 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="62-62"];
m32_27 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="JobFetcherSteps.cs", label="1: _throttler.Delay(context.CancellationToken)", span="95-95"];
m32_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label=recurringJobIds, span="71-71"];
m32_26 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="JobFetcherSteps.cs", label="1: Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="87-91"];
m32_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label=JobLoadException, span="85-85"];
m32_17 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label="_throttler.Throttle(context.CancellationToken)", span="64-64"];
m32_24 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label="TryScheduleJob(context.Storage, connection, recurringJobId, recurringJob)", span="83-83"];
m32_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label="var connection = context.Storage.GetConnection()", span="66-66"];
m32_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="69-69"];
m32_23 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label="recurringJob == null", span="76-76"];
m32_22 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="73-74"];
m32_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="67-67"];
m32_28 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="JobFetcherSteps.cs", label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="62-62"];
m32_37 [cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="JobFetcherSteps.cs", label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23"];
m32_32 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="JobFetcherSteps.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m32_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="48-48"];
m32_11 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="_factory = factory", span="57-57"];
m32_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="_instantFactory = instantFactory", span="58-58"];
m32_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="_throttler = throttler", span="59-59"];
m32_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="throttler == null", span="55-55"];
m32_5 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="factory == null", span="53-53"];
m32_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="instantFactory == null", span="54-54"];
m32_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="throw new ArgumentNullException(''throttler'');", span="55-55"];
m32_6 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="throw new ArgumentNullException(''factory'');", span="53-53"];
m32_8 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="throw new ArgumentNullException(''instantFactory'');", span="54-54"];
m32_14 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="JobFetcherSteps.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="48-48"];
m32_35 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="104-104"];
m32_47 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var instant = _instantFactory(cronSchedule, timeZone)", span="121-121"];
m32_55 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var backgroundJob = _factory.Create(context)", span="138-138"];
m32_62 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="155-157"];
m32_46 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="117-119"];
m32_45 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="113-113"];
m32_48 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="123-125"];
m32_50 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="instant.GetNextInstants(lastExecutionTime).Any()", span="129-129"];
m32_58 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="143-146"];
m32_59 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="149-149"];
m32_61 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="153-153"];
m32_54 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var context = new CreateContext(storage, connection, job, state)", span="137-137"];
m32_56 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var jobId = backgroundJob != null ? backgroundJob.Id : null", span="139-139"];
m32_49 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var changedFields = new Dictionary<string, string>()", span="127-127"];
m32_63 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label=TimeZoneNotFoundException, span="159-159"];
m32_42 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="110-110"];
m32_44 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var cron = recurringJob[''Cron'']", span="112-112"];
m32_52 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="132-132"];
m32_53 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="state.Queue = recurringJob[''Queue'']", span="134-134"];
m32_64 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="Logger.ErrorException(\r\n                    String.Format(''Recurring job '{0}' was not triggered: {1}.'', recurringJobId, ex.Message),\r\n                    ex)", span="161-163"];
m32_51 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="131-131"];
m32_57 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="String.IsNullOrEmpty(jobId)", span="141-141"];
m32_60 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="150-150"];
m32_43 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="var job = serializedJob.Deserialize()", span="111-111"];
m32_65 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", file="JobFetcherSteps.cs", label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="104-104"];
m32_34 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="JobFetcherSteps.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m32_80 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="JobFetcherSteps.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m32_85 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="JobFetcherSteps.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159"];
m32_79 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="JobFetcherSteps.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m32_86 [file="JobFetcherSteps.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m34_68 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodDefinedInBaseInterface()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodDefinedInBaseInterface()", span="118-118"];
m34_69 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodDefinedInBaseInterface()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(IChild), ''Method'', new Type[0])", span="120-120"];
m34_70 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodDefinedInBaseInterface()", color=red, community=0, file="JobMethodTests.cs", label="1: Assert.Equal(''Method'', method.Name)", span="121-121"];
m34_71 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodDefinedInBaseInterface()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodDefinedInBaseInterface()", span="118-118"];
m34_20 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_CorrectlyHandlesTypesWithoutNamespace()", file="JobMethodTests.cs", label="Assert.Equal(''ClassWithoutNamespace'', typeof(ClassWithoutNamespace).ToGenericTypeString())", span="46-46"];
m34_172 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(T, T)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(T, T)", span="311-311"];
m34_173 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(T, T)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(T, T)", span="311-311"];
m34_154 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.Method(int, int)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.Method(int, int)", span="293-293"];
m34_155 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.Method(int, int)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.Method(int, int)", span="293-293"];
m34_38 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label="var releaseResult = parameters.Get<int>(''@Result'')", span="95-95"];
m34_39 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label="releaseResult < 0", span="97-97"];
m34_40 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", color=red, community=0, file="JobMethodTests.cs", label="1: throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                        ''Could not release a lock on the resource '{0}': Server returned the '{1}' error.'', \r\n                        _resource,\r\n                        releaseResult));", span="99-103"];
m34_41 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label="Exit HangFire.SqlServer.SqlServerDistributedLock.Dispose()", span="79-79"];
m34_42 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethod()", file="JobMethodTests.cs", label="HangFire.SqlServer.SqlServerDistributedLock", span=""];
m34_101 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameterAndIsComplicated()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameterAndIsComplicated()", span="182-182"];
m34_102 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameterAndIsComplicated()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''OtherGenericMethod'',\r\n                new[] { typeof(List<IEnumerable<int>>) })", span="184-185"];
m34_103 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameterAndIsComplicated()", file="JobMethodTests.cs", label="Assert.Equal(''OtherGenericMethod'', method.Name)", span="187-187"];
m34_104 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameterAndIsComplicated()", file="JobMethodTests.cs", label="Assert.Equal(1, method.GetParameters().Length)", span="188-188"];
m34_105 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameterAndIsComplicated()", file="JobMethodTests.cs", label="Assert.Equal(typeof(List<IEnumerable<int>>), method.GetParameters()[0].ParameterType)", span="189-189"];
m34_106 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameterAndIsComplicated()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameterAndIsComplicated()", span="182-182"];
m34_156 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.Method(Hangfire.Core.Tests.Common.IParent)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.Method(Hangfire.Core.Tests.Common.IParent)", span="295-295"];
m34_157 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.Method(Hangfire.Core.Tests.Common.IParent)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.Method(Hangfire.Core.Tests.Common.IParent)", span="295-295"];
m34_28 [cluster="lambda expression", file="JobMethodTests.cs", label="TypeExtensions.GetNonOpenMatchingMethod(null, ''Method'', new Type[0])", span="53-53"];
m34_158 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.Method(object)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.Method(object)", span="297-297"];
m34_159 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.Method(object)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.Method(object)", span="297-297"];
m34_6 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", file="JobMethodTests.cs", label="_connection = connection", span="50-50"];
m34_148 [cluster="Hangfire.Core.Tests.Common.IParent.Method()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.IParent.Method()", span="282-282"];
m34_149 [cluster="Hangfire.Core.Tests.Common.IParent.Method()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.IParent.Method()", span="282-282"];
m34_113 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesNonTrivialOrderOfUsingMethodGenericParametersInMethodParameterTypes()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesNonTrivialOrderOfUsingMethodGenericParametersInMethodParameterTypes()", span="204-204"];
m34_114 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesNonTrivialOrderOfUsingMethodGenericParametersInMethodParameterTypes()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''OneMoreGenericMethod'',\r\n                new[] { typeof(Tuple<int, double, float>) })", span="206-207"];
m34_115 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesNonTrivialOrderOfUsingMethodGenericParametersInMethodParameterTypes()", file="JobMethodTests.cs", label="Assert.Equal(''OneMoreGenericMethod'', method.Name)", span="209-209"];
m34_116 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesNonTrivialOrderOfUsingMethodGenericParametersInMethodParameterTypes()", file="JobMethodTests.cs", label="Assert.Equal(1, method.GetParameters().Length)", span="210-210"];
m34_117 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesNonTrivialOrderOfUsingMethodGenericParametersInMethodParameterTypes()", file="JobMethodTests.cs", label="Assert.Equal(typeof(Tuple<int, double, float>), method.GetParameters()[0].ParameterType)", span="211-211"];
m34_118 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesNonTrivialOrderOfUsingMethodGenericParametersInMethodParameterTypes()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesNonTrivialOrderOfUsingMethodGenericParametersInMethodParameterTypes()", span="204-204"];
m34_31 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label="return;", span="81-81"];
m34_32 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label="_completed = true", span="83-83"];
m34_33 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label="var parameters = new DynamicParameters()", span="85-85"];
m34_34 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label="parameters.Add(''@Resource'', _resource)", span="86-86"];
m34_13 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", file="JobMethodTests.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="58-58"];
m34_14 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", color=green, community=0, file="JobMethodTests.cs", label="1: connection.Execute(\r\n                @''sp_getapplock'', \r\n                parameters, \r\n                commandType: CommandType.StoredProcedure)", span="60-63"];
m34_15 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", file="JobMethodTests.cs", label="var lockResult = parameters.Get<int>(''@Result'')", span="65-65"];
m34_16 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", color=green, community=0, file="JobMethodTests.cs", label="1: lockResult < 0", span="67-67"];
m34_17 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", color=green, community=0, file="JobMethodTests.cs", label="1: throw new SqlServerDistributedLockException(\r\n                    String.Format(\r\n                    ''Could not place a lock on the resource '{0}': {1}.'',\r\n                    _resource,\r\n                    LockErrorMessages.ContainsKey(lockResult) \r\n                        ? LockErrorMessages[lockResult]\r\n                        : String.Format(''Server returned the '{0}' error.'', lockResult)));", span="69-75"];
m34_18 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", file="JobMethodTests.cs", label="Exit HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", span="44-44"];
m34_134 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterOfGenericTypeWhichContainsMe()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterOfGenericTypeWhichContainsMe()", span="240-240"];
m34_135 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterOfGenericTypeWhichContainsMe()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''GenericMethod'',\r\n                new[] { typeof(Tuple<double, List<int>>)  })", span="242-243"];
m34_136 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterOfGenericTypeWhichContainsMe()", file="JobMethodTests.cs", label="Assert.Equal(''GenericMethod'', method.Name)", span="245-245"];
m34_137 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterOfGenericTypeWhichContainsMe()", file="JobMethodTests.cs", label="Assert.Equal(1, method.GetParameters().Length)", span="246-246"];
m34_138 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterOfGenericTypeWhichContainsMe()", file="JobMethodTests.cs", label="Assert.Equal(typeof(Tuple<double,List<int>>), method.GetParameters()[0].ParameterType)", span="247-247"];
m34_139 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterOfGenericTypeWhichContainsMe()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterOfGenericTypeWhichContainsMe()", span="240-240"];
m34_107 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeIsGenericAndContainsTwoGenericParameters()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeIsGenericAndContainsTwoGenericParameters()", span="193-193"];
m34_108 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeIsGenericAndContainsTwoGenericParameters()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''OtherGenericMethod'',\r\n                new[] { typeof(Tuple<int, double>) })", span="195-196"];
m34_109 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeIsGenericAndContainsTwoGenericParameters()", file="JobMethodTests.cs", label="Assert.Equal(''OtherGenericMethod'', method.Name)", span="198-198"];
m34_110 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeIsGenericAndContainsTwoGenericParameters()", file="JobMethodTests.cs", label="Assert.Equal(1, method.GetParameters().Length)", span="199-199"];
m34_111 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeIsGenericAndContainsTwoGenericParameters()", file="JobMethodTests.cs", label="Assert.Equal(typeof(Tuple<int, double>), method.GetParameters()[0].ParameterType)", span="200-200"];
m34_112 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeIsGenericAndContainsTwoGenericParameters()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeIsGenericAndContainsTwoGenericParameters()", span="193-193"];
m34_144 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenParameterTypeIsMatchedByGenericTypeAndNotMatchedByGenericArguments()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenParameterTypeIsMatchedByGenericTypeAndNotMatchedByGenericArguments()", span="260-260"];
m34_145 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenParameterTypeIsMatchedByGenericTypeAndNotMatchedByGenericArguments()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''OtherGenericMethod'',\r\n                new[] { typeof(List<int>)})", span="262-263"];
m34_146 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenParameterTypeIsMatchedByGenericTypeAndNotMatchedByGenericArguments()", file="JobMethodTests.cs", label="Assert.Equal(null, method)", span="265-265"];
m34_147 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenParameterTypeIsMatchedByGenericTypeAndNotMatchedByGenericArguments()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenParameterTypeIsMatchedByGenericTypeAndNotMatchedByGenericArguments()", span="260-260"];
m34_24 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ThrowsAnException_WhenTypeIsNull()", file="JobMethodTests.cs", label="Assert.Equal(''type'', exception.ParamName)", span="55-55"];
m34_26 [cluster="Unk.ContainsKey", file="JobMethodTests.cs", label="Entry Unk.ContainsKey", span=""];
m34_164 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T>(System.Collections.Generic.List<System.Collections.Generic.IEnumerable<T>>)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T>(System.Collections.Generic.List<System.Collections.Generic.IEnumerable<T>>)", span="303-303"];
m34_165 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T>(System.Collections.Generic.List<System.Collections.Generic.IEnumerable<T>>)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T>(System.Collections.Generic.List<System.Collections.Generic.IEnumerable<T>>)", span="303-303"];
m34_176 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(System.Tuple<T, System.Collections.Generic.List<int>>)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(System.Tuple<T, System.Collections.Generic.List<int>>)", span="315-315"];
m34_177 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(System.Tuple<T, System.Collections.Generic.List<int>>)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(System.Tuple<T, System.Collections.Generic.List<int>>)", span="315-315"];
m34_43 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithNoParameter_WhenParameterTypesIsNull()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithNoParameter_WhenParameterTypesIsNull()", span="77-77"];
m34_44 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithNoParameter_WhenParameterTypesIsNull()", color=red, community=0, file="JobMethodTests.cs", label="1: var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''Method'', null)", span="79-79"];
m34_45 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithNoParameter_WhenParameterTypesIsNull()", file="JobMethodTests.cs", label="Assert.Equal(''Method'', method.Name)", span="81-81"];
m34_46 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithNoParameter_WhenParameterTypesIsNull()", file="JobMethodTests.cs", label="Assert.Equal(typeof(NonGenericClass), method.DeclaringType)", span="82-82"];
m34_47 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithNoParameter_WhenParameterTypesIsNull()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithNoParameter_WhenParameterTypesIsNull()", span="77-77"];
m34_119 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersOfTheSameTypeWhichIsMethodGenericParameter()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersOfTheSameTypeWhichIsMethodGenericParameter()", span="215-215"];
m34_120 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersOfTheSameTypeWhichIsMethodGenericParameter()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''GenericMethod'',\r\n                new[] { typeof(int), typeof(int) })", span="217-218"];
m34_121 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersOfTheSameTypeWhichIsMethodGenericParameter()", file="JobMethodTests.cs", label="Assert.Equal(''GenericMethod'', method.Name)", span="220-220"];
m34_122 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersOfTheSameTypeWhichIsMethodGenericParameter()", file="JobMethodTests.cs", label="Assert.Equal(2, method.GetParameters().Length)", span="221-221"];
m34_123 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersOfTheSameTypeWhichIsMethodGenericParameter()", file="JobMethodTests.cs", label="Assert.Equal(typeof(int), method.GetParameters()[0].ParameterType)", span="222-222"];
m34_124 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersOfTheSameTypeWhichIsMethodGenericParameter()", file="JobMethodTests.cs", label="Assert.Equal(typeof(int), method.GetParameters()[1].ParameterType)", span="223-223"];
m34_125 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersOfTheSameTypeWhichIsMethodGenericParameter()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersOfTheSameTypeWhichIsMethodGenericParameter()", span="215-215"];
m34_140 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersWhoseTypesContainsTheSameGenericParameter()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersWhoseTypesContainsTheSameGenericParameter()", span="251-251"];
m34_141 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersWhoseTypesContainsTheSameGenericParameter()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''GenericMethod'',\r\n                new[] { typeof(int), typeof(double) })", span="253-254"];
m34_142 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersWhoseTypesContainsTheSameGenericParameter()", file="JobMethodTests.cs", label="Assert.Equal(null, method)", span="256-256"];
m34_143 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersWhoseTypesContainsTheSameGenericParameter()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasSomeParametersWhoseTypesContainsTheSameGenericParameter()", span="251-251"];
m34_79 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodCouldNotBeFound()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodCouldNotBeFound()", span="137-137"];
m34_80 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodCouldNotBeFound()", color=red, community=0, file="JobMethodTests.cs", label="1: var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''NonExistingMethod'', new Type[0])", span="139-139"];
m34_81 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodCouldNotBeFound()", file="JobMethodTests.cs", label="Assert.Equal(null, method)", span="141-141"];
m34_82 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodCouldNotBeFound()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodCouldNotBeFound()", span="137-137"];
m34_0 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", file="JobMethodTests.cs", label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", span="44-44"];
m34_1 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", file="JobMethodTests.cs", label="String.IsNullOrEmpty(resource)", span="46-46"];
m34_2 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", file="JobMethodTests.cs", label="throw new ArgumentNullException(''resource'');", span="46-46"];
m34_3 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", color=red, community=0, file="JobMethodTests.cs", label="1: connection == null", span="47-47"];
m34_4 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, IDbConnection)", file="JobMethodTests.cs", label="throw new ArgumentNullException(''connection'');", span="47-47"];
m34_22 [cluster="Unk.Add", file="JobMethodTests.cs", label="Entry Unk.Add", span=""];
m34_23 [cluster="Unk.Execute", color=red, community=0, file="JobMethodTests.cs", label="1: Entry Unk.Execute", span=""];
m34_25 [cluster="HangFire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", file="JobMethodTests.cs", label="Entry HangFire.SqlServer.SqlServerDistributedLockException.SqlServerDistributedLockException(string)", span="23-23"];
m34_95 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameter()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameter()", span="171-171"];
m34_96 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameter()", color=red, community=0, file="JobMethodTests.cs", label="1: var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''OtherGenericMethod'',\r\n                new[] { typeof(IEnumerable<int>) })", span="173-174"];
m34_97 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameter()", file="JobMethodTests.cs", label="Assert.Equal(''OtherGenericMethod'', method.Name)", span="176-176"];
m34_98 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameter()", file="JobMethodTests.cs", label="Assert.Equal(1, method.GetParameters().Length)", span="177-177"];
m34_99 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameter()", file="JobMethodTests.cs", label="Assert.Equal(typeof(IEnumerable<int>), method.GetParameters()[0].ParameterType)", span="178-178"];
m34_100 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameter()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasParameterWhoseTypeContainsGenericParameter()", span="171-171"];
m34_166 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T0, T1>(System.Tuple<T0, T1>)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T0, T1>(System.Tuple<T0, T1>)", span="305-305"];
m34_167 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T0, T1>(System.Tuple<T0, T1>)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T0, T1>(System.Tuple<T0, T1>)", span="305-305"];
m34_170 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T0>()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T0>()", span="309-309"];
m34_171 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T0>()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T0>()", span="309-309"];
m34_7 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", span="26-26"];
m34_5 [cluster="System.Type.ToGenericTypeString()", file="JobMethodTests.cs", label="Entry System.Type.ToGenericTypeString()", span="27-27"];
m34_8 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", color=red, community=0, file="JobMethodTests.cs", label="1: Assert.Equal(typeof(NonGenericClass.NestedGenericClass<,>).ToGenericTypeString(), ''NonGenericClass.NestedGenericClass<T1,T2>'')", span="28-28"];
m34_9 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", file="JobMethodTests.cs", label="Assert.Equal(typeof(GenericClass<>).ToGenericTypeString(), ''GenericClass<T1>'')", span="29-29"];
m34_10 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", file="JobMethodTests.cs", label="Assert.Equal(typeof(GenericClass<>.NestedNonGenericClass).ToGenericTypeString(), ''GenericClass<T1>.NestedNonGenericClass'')", span="30-30"];
m34_11 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", color=red, community=0, file="JobMethodTests.cs", label="1: Assert.Equal(typeof(GenericClass<>.NestedNonGenericClass.DoubleNestedGenericClass<,,>).ToGenericTypeString(), ''GenericClass<T1>.NestedNonGenericClass.DoubleNestedGenericClass<T2,T3,T4>'')", span="31-31"];
m34_12 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_PrintsOpenGenericNestedClassName_WithGenericParameters()", span="26-26"];
m34_21 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_CorrectlyHandlesTypesWithoutNamespace()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_CorrectlyHandlesTypesWithoutNamespace()", span="44-44"];
m34_19 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_CorrectlyHandlesTypesWithoutNamespace()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.ToGenericTypeString_CorrectlyHandlesTypesWithoutNamespace()", span="44-44"];
m34_91 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodParameterTypeIsAssignableFromPassedType()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodParameterTypeIsAssignableFromPassedType()", span="162-162"];
m34_92 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodParameterTypeIsAssignableFromPassedType()", color=red, community=0, file="JobMethodTests.cs", label="1: var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''Method'',\r\n                new[] { typeof(NonGenericClass) })", span="164-165"];
m34_93 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodParameterTypeIsAssignableFromPassedType()", file="JobMethodTests.cs", label="Assert.Equal(null, method)", span="167-167"];
m34_94 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodParameterTypeIsAssignableFromPassedType()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenMethodParameterTypeIsAssignableFromPassedType()", span="162-162"];
m34_30 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label=_completed, span="81-81"];
m34_72 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectGenericMethod()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectGenericMethod()", span="125-125"];
m34_73 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectGenericMethod()", color=red, community=0, file="JobMethodTests.cs", label="1: var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''TrivialGenericMethod'',\n                new[] { typeof(int), typeof(string), typeof(object) })", span="127-128"];
m34_74 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectGenericMethod()", file="JobMethodTests.cs", label="Assert.Equal(''TrivialGenericMethod'', method.Name)", span="130-130"];
m34_75 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectGenericMethod()", file="JobMethodTests.cs", label="Assert.Equal(typeof(NonGenericClass), method.DeclaringType)", span="131-131"];
m34_76 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectGenericMethod()", file="JobMethodTests.cs", label="Assert.Equal(true, method.IsGenericMethod)", span="132-132"];
m34_77 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectGenericMethod()", file="JobMethodTests.cs", label="Assert.Equal(false, method.ContainsGenericParameters)", span="133-133"];
m34_78 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectGenericMethod()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectGenericMethod()", span="125-125"];
m34_48 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithOneParameter()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithOneParameter()", span="86-86"];
m34_49 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithOneParameter()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''Method'',\n                new[] { typeof(int) })", span="88-89"];
m34_50 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithOneParameter()", file="JobMethodTests.cs", label="Assert.Equal(''Method'', method.Name)", span="91-91"];
m34_51 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithOneParameter()", file="JobMethodTests.cs", label="Assert.Equal(typeof(NonGenericClass), method.DeclaringType)", span="92-92"];
m34_52 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithOneParameter()", file="JobMethodTests.cs", label="Assert.Equal(1, method.GetParameters().Length)", span="93-93"];
m34_53 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithOneParameter()", file="JobMethodTests.cs", label="Assert.Equal(typeof(int), method.GetParameters()[0].ParameterType)", span="94-94"];
m34_54 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithOneParameter()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithOneParameter()", span="86-86"];
m34_126 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters()", span="227-227"];
m34_127 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''GenericMethod'',\r\n                new[] { typeof(int), typeof(NonGenericClass), typeof(double) })", span="229-230"];
m34_128 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters()", file="JobMethodTests.cs", label="Assert.Equal(''GenericMethod'', method.Name)", span="232-232"];
m34_129 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters()", file="JobMethodTests.cs", label="Assert.Equal(3, method.GetParameters().Length)", span="233-233"];
m34_130 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters()", file="JobMethodTests.cs", label="Assert.Equal(typeof(int), method.GetParameters()[0].ParameterType)", span="234-234"];
m34_131 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters()", file="JobMethodTests.cs", label="Assert.Equal(typeof(NonGenericClass), method.GetParameters()[1].ParameterType)", span="235-235"];
m34_132 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters()", file="JobMethodTests.cs", label="Assert.Equal(typeof(double), method.GetParameters()[2].ParameterType)", span="236-236"];
m34_133 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodHasGenericAndNonGenericParameters()", span="227-227"];
m34_152 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.Method(int)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.Method(int)", span="291-291"];
m34_153 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.Method(int)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.Method(int)", span="291-291"];
m34_64 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethod_WhenTypeIsInterface()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethod_WhenTypeIsInterface()", span="111-111"];
m34_65 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethod_WhenTypeIsInterface()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(IParent), ''Method'', new Type[0])", span="113-113"];
m34_66 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethod_WhenTypeIsInterface()", color=red, community=0, file="JobMethodTests.cs", label="1: Assert.Equal(''Method'', method.Name)", span="114-114"];
m34_67 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethod_WhenTypeIsInterface()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethod_WhenTypeIsInterface()", span="111-111"];
m34_168 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.OneMoreGenericMethod<T0, T1, T2>(System.Tuple<T2, T0, T1>)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.OneMoreGenericMethod<T0, T1, T2>(System.Tuple<T2, T0, T1>)", span="307-307"];
m34_169 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.OneMoreGenericMethod<T0, T1, T2>(System.Tuple<T2, T0, T1>)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.OneMoreGenericMethod<T0, T1, T2>(System.Tuple<T2, T0, T1>)", span="307-307"];
m34_174 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(int, T, double)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(int, T, double)", span="313-313"];
m34_175 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(int, T, double)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.GenericMethod<T>(int, T, double)", span="313-313"];
m34_83 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenOveroladedMethodCouldNotBeFound()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenOveroladedMethodCouldNotBeFound()", span="145-145"];
m34_84 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenOveroladedMethodCouldNotBeFound()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''Method'',\r\n                new[] { typeof(object), typeof(int) })", span="147-148"];
m34_85 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenOveroladedMethodCouldNotBeFound()", file="JobMethodTests.cs", label="Assert.Equal(null, method)", span="150-150"];
m34_86 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenOveroladedMethodCouldNotBeFound()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsNull_WhenOveroladedMethodCouldNotBeFound()", span="145-145"];
m34_35 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label="parameters.Add(''@LockOwner'', LockOwner)", span="87-87"];
m34_27 [cluster="Unk.Format", file="JobMethodTests.cs", label="Entry Unk.Format", span=""];
m34_29 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label="Entry HangFire.SqlServer.SqlServerDistributedLock.Dispose()", span="79-79"];
m34_36 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", file="JobMethodTests.cs", label="parameters.Add(''@Result'', dbType: DbType.Int32, direction: ParameterDirection.ReturnValue)", span="88-88"];
m34_37 [cluster="HangFire.SqlServer.SqlServerDistributedLock.Dispose()", color=green, community=0, file="JobMethodTests.cs", label="1: _connection.Execute(\r\n                @''sp_releaseapplock'',\r\n                parameters,\r\n                commandType: CommandType.StoredProcedure)", span="90-93"];
m34_150 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.Method()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.Method()", span="289-289"];
m34_151 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.Method()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.Method()", span="289-289"];
m34_87 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodNameIsCaseSensitive()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodNameIsCaseSensitive()", span="154-154"];
m34_88 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodNameIsCaseSensitive()", file="JobMethodTests.cs", label="var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''method'', new Type[0])", span="156-156"];
m34_89 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodNameIsCaseSensitive()", file="JobMethodTests.cs", label="Assert.Equal(null, method)", span="158-158"];
m34_90 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodNameIsCaseSensitive()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_HandlesMethodNameIsCaseSensitive()", span="154-154"];
m34_56 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters()", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters()", span="98-98"];
m34_57 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters()", color=red, community=0, file="JobMethodTests.cs", label="1: var method = TypeExtensions.GetNonOpenMatchingMethod(typeof(NonGenericClass), ''Method'',\r\n                new[] { typeof(int), typeof(int) })", span="100-101"];
m34_58 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters()", file="JobMethodTests.cs", label="Assert.Equal(''Method'', method.Name)", span="103-103"];
m34_59 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters()", file="JobMethodTests.cs", label="Assert.Equal(typeof(NonGenericClass), method.DeclaringType)", span="104-104"];
m34_60 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters()", file="JobMethodTests.cs", label="Assert.Equal(2, method.GetParameters().Length)", span="105-105"];
m34_61 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters()", file="JobMethodTests.cs", label="Assert.Equal(typeof(int), method.GetParameters()[0].ParameterType)", span="106-106"];
m34_62 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters()", file="JobMethodTests.cs", label="Assert.Equal(typeof(int), method.GetParameters()[1].ParameterType)", span="107-107"];
m34_63 [cluster="Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters()", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.TypeExtensionsFacts.GetNonOpenMatchingMethod_ReturnsCorrectMethodWithManyParameters()", span="98-98"];
m34_160 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.TrivialGenericMethod<T0, T1, T2>(T0, T1, T2)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.TrivialGenericMethod<T0, T1, T2>(T0, T1, T2)", span="299-299"];
m34_161 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.TrivialGenericMethod<T0, T1, T2>(T0, T1, T2)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.TrivialGenericMethod<T0, T1, T2>(T0, T1, T2)", span="299-299"];
m34_55 [cluster="System.Reflection.MethodBase.GetParameters()", file="JobMethodTests.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m34_162 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T>(System.Collections.Generic.IEnumerable<T>)", file="JobMethodTests.cs", label="Entry Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T>(System.Collections.Generic.IEnumerable<T>)", span="301-301"];
m34_163 [cluster="Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T>(System.Collections.Generic.IEnumerable<T>)", file="JobMethodTests.cs", label="Exit Hangfire.Core.Tests.Common.NonGenericClass.OtherGenericMethod<T>(System.Collections.Generic.IEnumerable<T>)", span="301-301"];
m35_3 [cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="JobState.cs", label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="31-31"];
m35_4 [cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="JobState.cs", label="return new Dictionary<string, string>();", span="33-33"];
m35_5 [cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="JobState.cs", label="Exit HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="31-31"];
m35_6 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobState.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m35_0 [cluster="HangFire.Common.States.JobState.JobState(string)", file="JobState.cs", label="Entry HangFire.Common.States.JobState.JobState(string)", span="22-22"];
m35_1 [cluster="HangFire.Common.States.JobState.JobState(string)", color=red, community=0, file="JobState.cs", label="2: Reason = reason", span="24-24"];
m35_2 [cluster="HangFire.Common.States.JobState.JobState(string)", file="JobState.cs", label="Exit HangFire.Common.States.JobState.JobState(string)", span="22-22"];
m35_7 [file="JobState.cs", label="HangFire.Common.States.JobState", span=""];
m36_40 [cluster="Unk.EnqueueItemOnList", file="JobSteps.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m36_5 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJob(string)", span="24-24"];
m36_6 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs", label="Given(String.Format(''the '{0}' job of the '{1}' type'', jobId, DefaultJobType))", span="26-26"];
m36_7 [cluster="HangFire.Tests.JobSteps.GivenTheJob(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenTheJob(string)", span="24-24"];
m36_0 [cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenAJob()", span="18-18"];
m36_1 [cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobSteps.cs", label="Given(String.Format(''a job of the '{0}' type'', DefaultJobType.AssemblyQualifiedName))", span="20-20"];
m36_2 [cluster="HangFire.Tests.JobSteps.GivenAJob()", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenAJob()", span="18-18"];
m36_17 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", span="42-42"];
m36_18 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="JobSteps.cs", label="GivenTheJobOfTheTypeWithTheFollowingArguments(JobSteps.DefaultJobId, type, args)", span="44-44"];
m36_19 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheTypeWithTheFollowingArguments(string, Table)", span="42-42"];
m36_29 [cluster="Unk.SetRangeInHash", file="JobSteps.cs", label="Entry Unk.SetRangeInHash", span=""];
m36_8 [cluster="string.Format(string, object, object)", file="JobSteps.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m36_27 [cluster="Unk.ToDictionary", file="JobSteps.cs", label="Entry Unk.ToDictionary", span=""];
m36_46 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'',\r\n                state)", span="94-97"];
m36_45 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="92-92"];
m36_47 [cluster="HangFire.Tests.JobSteps.GivenItsStateIs(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenItsStateIs(string)", span="92-92"];
m36_25 [cluster="Unk.SetEntryInHash", file="JobSteps.cs", label="Entry Unk.SetEntryInHash", span=""];
m36_3 [cluster="string.Format(string, object)", file="JobSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m36_12 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="36-36"];
m36_13 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs", label="GivenTheJobOfTheTypeWithTheFollowingArguments(jobId, type, new Table(''Name'', ''Value''))", span="38-38"];
m36_14 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheType(string, string)", span="36-36"];
m36_9 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="30-30"];
m36_10 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs", label="Given(String.Format(''the '{0}' job of the '{1}' type'', DefaultJobId, type))", span="32-32"];
m36_11 [cluster="HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenAJobOfTheType(string)", span="30-30"];
m36_15 [cluster="Table.cstr", file="JobSteps.cs", label="Entry Table.cstr", span=""];
m36_53 [cluster="Unk.AreEqual", file="JobSteps.cs", label="Entry Unk.AreEqual", span=""];
m36_26 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m36_24 [cluster="Unk.AddItemToList", file="JobSteps.cs", label="Entry Unk.AddItemToList", span=""];
m36_41 [cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", span="79-79"];
m36_42 [cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="JobSteps.cs", label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', typeof(TestJob).AssemblyQualifiedName },\r\n                        { ''Args'', JobHelper.ToJson(new Dictionary<string, string>()) },\r\n                        { ''State'', String.Empty }\r\n                    })", span="81-88"];
m36_43 [cluster="HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenAJobWithEmptyState()", span="79-79"];
m36_28 [cluster="Unk.ToJson", file="JobSteps.cs", label="Entry Unk.ToJson", span=""];
m36_33 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="64-64"];
m36_30 [cluster="lambda expression", file="JobSteps.cs", label="Entry lambda expression", span="64-64"];
m36_31 [cluster="lambda expression", file="JobSteps.cs", label="x[''Name'']", span="64-64"];
m36_32 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="64-64"];
m36_34 [cluster="lambda expression", file="JobSteps.cs", label="x[''Value'']", span="64-64"];
m36_35 [cluster="lambda expression", file="JobSteps.cs", label="Exit lambda expression", span="64-64"];
m36_21 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="JobSteps.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}:state'', jobId),\r\n                ''StateProp'',\r\n                ''SomeValue'')", span="54-57"];
m36_16 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", span="48-48"];
m36_20 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="JobSteps.cs", label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                '''')", span="50-52"];
m36_22 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="JobSteps.cs", label="Redis.Client.SetRangeInHash(\r\n                String.Format(''hangfire:job:{0}'', jobId),\r\n                new Dictionary<string, string>\r\n                    {\r\n                        { ''Type'', type },\r\n                        { ''Args'', JobHelper.ToJson(args.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])) },\r\n                        { ''State'', EnqueuedState.Name },\r\n                    })", span="59-66"];
m36_23 [cluster="HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenTheJobOfTheTypeWithTheFollowingArguments(string, string, Table)", span="48-48"];
m36_4 [cluster="Unk.Given", file="JobSteps.cs", label="Entry Unk.Given", span=""];
m36_44 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobSteps.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m36_52 [cluster="Unk.GetValueFromHash", file="JobSteps.cs", label="Entry Unk.GetValueFromHash", span=""];
m36_36 [cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", span="70-70"];
m36_37 [cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="JobSteps.cs", label="GivenAJobOfTheTypeWithTheFollowingArguments(typeof(CustomJob).AssemblyQualifiedName, table)", span="72-72"];
m36_38 [cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="JobSteps.cs", label="Redis.Client.EnqueueItemOnList(\r\n                String.Format(''hangfire:queue:{0}'', QueueSteps.DefaultQueue),\r\n                DefaultJobId)", span="73-75"];
m36_39 [cluster="HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.GivenAnEnqueuedCustomJobWithTheFollowingArguments(Table)", span="70-70"];
m36_48 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="Entry HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="104-104"];
m36_49 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="var jobState = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', DefaultJobId),\r\n                ''State'')", span="106-108"];
m36_50 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", color=red, community=0, file="JobSteps.cs", label="1: Assert.AreEqual(state, jobState)", span="110-110"];
m36_51 [cluster="HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", file="JobSteps.cs", label="Exit HangFire.Tests.JobSteps.ThenTheJobMovedToTheState(string)", span="104-104"];
m36_54 [file="JobSteps.cs", label="HangFire.Tests.JobSteps", span=""];
m37_15 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="OldClient.feature.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="62-62"];
m37_11 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="OldClient.feature.cs", label="_storage = storage", span="100-100"];
m37_28 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", file="OldClient.feature.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.GetStringResource(System.Reflection.Assembly, string)", span="62-62"];
m37_43 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="OldClient.feature.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
m37_31 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="OldClient.feature.cs", label="Entry Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="23-23"];
m37_23 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="OldClient.feature.cs", label="var backroundJob = _factory.Create(context)", span="116-116"];
m37_25 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="OldClient.feature.cs", label=Exception, span="121-121"];
m37_24 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", color=green, community=0, file="OldClient.feature.cs", label="0: return backroundJob != null ? backroundJob.Id : null;", span="118-118"];
m37_26 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="OldClient.feature.cs", label="throw new BackgroundJobClientException(''Background job creation failed. See inner exception for details.'', ex);", span="123-123"];
m37_27 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="OldClient.feature.cs", label="Exit Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="106-106"];
m37_16 [cluster="string.Replace(string, string)", file="OldClient.feature.cs", label="Entry string.Replace(string, string)", span="0-0"];
m37_22 [cluster="Unk.Single", file="OldClient.feature.cs", label="Entry Unk.Single", span=""];
m37_18 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="OldClient.feature.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="58-58"];
m37_20 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="OldClient.feature.cs", label="Exit HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", span="56-56"];
m37_21 [cluster="Unk.>", file="OldClient.feature.cs", label="Entry Unk.>", span=""];
m37_17 [cluster="Unk.Execute", file="OldClient.feature.cs", label="Entry Unk.Execute", span=""];
m37_19 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.IsSqlEditionSupported(SqlConnection)", file="OldClient.feature.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="59-59"];
m37_29 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="OldClient.feature.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m37_30 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="OldClient.feature.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m37_32 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="OldClient.feature.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m37_38 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", color=green, community=0, file="OldClient.feature.cs", label="2: var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                        _storage,\r\n                        connection,\r\n                        jobId,\r\n                        state,\r\n                        expectedState != null ? new[] { expectedState } : null))", span="137-142"];
m37_37 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="OldClient.feature.cs", label="var connection = _storage.GetConnection()", span="135-135"];
m37_39 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="OldClient.feature.cs", label="return appliedState != null && appliedState.Name.Equals(state.Name, StringComparison.OrdinalIgnoreCase);", span="144-144"];
m37_33 [cluster="System.IO.StreamReader.ReadToEnd()", file="OldClient.feature.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m37_35 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="OldClient.feature.cs", label="state == null", span="131-131"];
m37_34 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="OldClient.feature.cs", label="throw new ArgumentNullException(''jobId'');", span="130-130"];
m37_36 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="OldClient.feature.cs", label="throw new ArgumentNullException(''state'');", span="131-131"];
m37_41 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="OldClient.feature.cs", label="throw new BackgroundJobClientException(''State change of a background job failed. See inner exception for details'', ex);", span="149-149"];
m37_40 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="OldClient.feature.cs", label=Exception, span="147-147"];
m37_42 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="OldClient.feature.cs", label="Exit Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="128-128"];
m37_0 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="OldClient.feature.cs", label="Entry HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", span="34-34"];
m37_1 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="OldClient.feature.cs", label="connection == null", span="36-36"];
m37_45 [cluster="string.Equals(string, System.StringComparison)", file="OldClient.feature.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m37_13 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="OldClient.feature.cs", label="_factory = factory", span="102-102"];
m37_4 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="OldClient.feature.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", span="91-91"];
m37_8 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="OldClient.feature.cs", label="0: throw new ArgumentNullException(''factory'');", span="97-97"];
m37_2 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", file="OldClient.feature.cs", label="throw new ArgumentNullException(''connection'');", span="36-36"];
m37_3 [cluster="HangFire.SqlServer.SqlServerObjectsInstaller.Install(SqlConnection)", color=red, community=0, file="OldClient.feature.cs", label="0: Log.Debug(''Start installing HangFire SQL objects...'')", span="38-38"];
m37_5 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="OldClient.feature.cs", label="storage == null", span="96-96"];
m37_6 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="OldClient.feature.cs", label="0: throw new ArgumentNullException(''storage'');", span="96-96"];
m37_7 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", color=red, community=0, file="OldClient.feature.cs", label="0: factory == null", span="97-97"];
m37_9 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="OldClient.feature.cs", label="stateChanger == null", span="98-98"];
m37_10 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage, Hangfire.Client.IBackgroundJobFactory, Hangfire.States.IBackgroundJobStateChanger)", file="OldClient.feature.cs", label="throw new ArgumentNullException(''stateChanger'');", span="98-98"];
m37_12 [cluster="Unk.Debug", file="OldClient.feature.cs", label="Entry Unk.Debug", span=""];
m37_14 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="OldClient.feature.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m37_44 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="OldClient.feature.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m37_46 [file="OldClient.feature.cs", label="Hangfire.BackgroundJobClient", span=""];
m39_0 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ProcessingState.feature.cs", label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="20-20"];
m39_1 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="ProcessingState.feature.cs", label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="20-20"];
m40_10 [cluster="HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39"];
m40_11 [cluster="HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.GetJobParameter(string, string)", span="39-39"];
m40_6 [cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m40_7 [cluster="HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="36-36"];
m40_24 [cluster="HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="53-53"];
m40_25 [cluster="HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="53-53"];
m40_0 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m40_1 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="27-27"];
m40_20 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.Heartbeat(string)", span="49-49"];
m40_21 [cluster="HangFire.Storage.IStorageConnection.Heartbeat(string)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.Heartbeat(string)", span="49-49"];
m40_14 [cluster="HangFire.Storage.IStorageConnection.GetStateData(string)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m40_15 [cluster="HangFire.Storage.IStorageConnection.GetStateData(string)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.GetStateData(string)", span="45-45"];
m40_22 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="50-50"];
m40_23 [cluster="HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="50-50"];
m40_12 [cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m40_13 [cluster="HangFire.Storage.IStorageConnection.GetJobData(string)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.GetJobData(string)", span="42-42"];
m40_18 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.RemoveServer(string)", span="48-48"];
m40_19 [cluster="HangFire.Storage.IStorageConnection.RemoveServer(string)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.RemoveServer(string)", span="48-48"];
m40_16 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="47-47"];
m40_17 [cluster="HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="47-47"];
m40_2 [cluster="HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m40_3 [cluster="HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m40_8 [cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38"];
m40_9 [cluster="HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.SetJobParameter(string, string, string)", span="38-38"];
m40_4 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="QueueSteps.cs", label="Entry HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="30-30"];
m40_5 [cluster="HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="QueueSteps.cs", label="Exit HangFire.Storage.IStorageConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="30-30"];
m41_7 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="RecurringAttribute.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="27-27"];
m41_0 [cluster="HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", file="RecurringAttribute.cs", label="Entry HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", span="25-25"];
m41_1 [cluster="HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", file="RecurringAttribute.cs", label="RepeatInterval = intervalInSeconds", span="27-27"];
m41_2 [cluster="HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", file="RecurringAttribute.cs", label="Exit HangFire.Filters.RecurringAttribute.RecurringAttribute(int)", span="25-25"];
m41_3 [cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs", label="Entry HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="32-32"];
m41_4 [cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs", label="context.CandidateState.StateName == SucceededState.Name", span="34-34"];
m41_5 [cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=1, file="RecurringAttribute.cs", label="1: context.CandidateState = new ScheduledState(\r\n                    ''Scheduled as a recurring job'',\r\n                    DateTime.UtcNow.AddSeconds(RepeatInterval))", span="36-38"];
m41_6 [cluster="HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringAttribute.cs", label="Exit HangFire.Filters.RecurringAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="32-32"];
m41_8 [cluster="System.DateTime.AddSeconds(double)", file="RecurringAttribute.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m41_9 [file="RecurringAttribute.cs", label="HangFire.Filters.RecurringAttribute", span=""];
m42_14 [cluster="Unk.Commit", file="RedisAtomicWriteTransaction.cs", label="Entry Unk.Commit", span=""];
m42_18 [cluster="Unk.Dispose", file="RedisAtomicWriteTransaction.cs", label="Entry Unk.Dispose", span=""];
m42_0 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9"];
m42_1 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", color=red, community=0, file="RedisAtomicWriteTransaction.cs", label="0: _transaction = transaction", span="11-11"];
m42_2 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", color=red, community=0, file="RedisAtomicWriteTransaction.cs", label="2: var storage = new RedisStoredValues(_transaction)", span="13-13"];
m42_3 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", color=red, community=0, file="RedisAtomicWriteTransaction.cs", label="2: Values = storage", span="15-15"];
m42_4 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", color=red, community=0, file="RedisAtomicWriteTransaction.cs", label="2: Sets = storage", span="16-16"];
m42_5 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", color=red, community=0, file="RedisAtomicWriteTransaction.cs", label="1: Lists = storage", span="17-17"];
m42_6 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", color=red, community=0, file="RedisAtomicWriteTransaction.cs", label="1: Queues = storage", span="18-18"];
m42_7 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", color=red, community=0, file="RedisAtomicWriteTransaction.cs", label="1: Jobs = storage", span="19-19"];
m42_8 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", color=red, community=0, file="RedisAtomicWriteTransaction.cs", label="2: Counters = storage", span="20-20"];
m42_9 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.RedisAtomicWriteTransaction(IRedisTransaction)", span="9-9"];
m42_15 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="35-35"];
m42_16 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", color=red, community=0, file="RedisAtomicWriteTransaction.cs", label="1: _transaction.Dispose()", span="37-37"];
m42_17 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", file="RedisAtomicWriteTransaction.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Dispose()", span="35-35"];
m42_11 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="30-30"];
m42_12 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", color=red, community=0, file="RedisAtomicWriteTransaction.cs", label="1: return _transaction.Commit();", span="32-32"];
m42_13 [cluster="HangFire.Redis.RedisAtomicWriteTransaction.Commit()", file="RedisAtomicWriteTransaction.cs", label="Exit HangFire.Redis.RedisAtomicWriteTransaction.Commit()", span="30-30"];
m42_10 [cluster="HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", file="RedisAtomicWriteTransaction.cs", label="Entry HangFire.Redis.RedisStoredValues.RedisStoredValues(IRedisTransaction)", span="15-15"];
m42_19 [file="RedisAtomicWriteTransaction.cs", label="HangFire.Redis.RedisAtomicWriteTransaction", span=""];
m43_0 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RedisStorage.cs", label="Entry Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
m43_1 [cluster="Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", file="RedisStorage.cs", label="Exit Hangfire.IRecurringJobManager.AddOrUpdate(string, Hangfire.Common.Job, string, Hangfire.RecurringJobOptions)", span="23-23"];
m43_4 [cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", file="RedisStorage.cs", label="Entry Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30"];
m43_5 [cluster="Hangfire.IRecurringJobManager.RemoveIfExists(string)", file="RedisStorage.cs", label="Exit Hangfire.IRecurringJobManager.RemoveIfExists(string)", span="30-30"];
m43_2 [cluster="Hangfire.IRecurringJobManager.Trigger(string)", file="RedisStorage.cs", label="Entry Hangfire.IRecurringJobManager.Trigger(string)", span="29-29"];
m43_3 [cluster="Hangfire.IRecurringJobManager.Trigger(string)", file="RedisStorage.cs", label="Exit Hangfire.IRecurringJobManager.Trigger(string)", span="29-29"];
m44_36 [cluster="HangFire.JobHelper.FromJson<T>(string)", file="RedisStorageConnection.cs", label="Entry HangFire.JobHelper.FromJson<T>(string)", span="37-37"];
m44_113 [cluster="System.Collections.Generic.List<T>.List()", file="RedisStorageConnection.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m44_291 [cluster="Unk.TryParse", file="RedisStorageConnection.cs", label="Entry Unk.TryParse", span=""];
m44_30 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="RedisStorageConnection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m44_133 [cluster="int.Parse(string)", file="RedisStorageConnection.cs", label="Entry int.Parse(string)", span="0-0"];
m44_43 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m44_45 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="RedisStorageConnection.cs", label="2: var scheduledJobs = Redis.GetRangeWithScoresFromSortedSet(\r\n                    ''hangfire:schedule'',\r\n                    from,\r\n                    from + count - 1)", span="84-87"];
m44_44 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label=Redis, span="82-82"];
m44_46 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="RedisStorageConnection.cs", label="1: scheduledJobs.Count == 0", span="89-89"];
m44_51 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label=scheduledJobs, span="99-99"];
m44_56 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", color=green, community=0, file="RedisStorageConnection.cs", label="1: return scheduledJobs.ToDictionary(\r\n                    job => job.Key,\r\n                    job => new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="119-129"];
m44_47 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label="return new Dictionary<string, ScheduleDto>();", span="91-91"];
m44_48 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label="var jobs = new Dictionary<string, List<string>>()", span="94-94"];
m44_49 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label="var states = new Dictionary<string, string>()", span="95-95"];
m44_55 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label="pipeline.Flush()", span="116-116"];
m44_50 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label="var pipeline = Redis.CreatePipeline()", span="97-97"];
m44_54 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State''),\r\n                            x => states.Add(job.Key, x))", span="109-113"];
m44_52 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label="var job = scheduledJob", span="101-101"];
m44_53 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' }),\r\n                            x => jobs.Add(job.Key, x))", span="103-107"];
m44_57 [cluster="HangFire.Web.JobStorage.ScheduledJobs(int, int)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.ScheduledJobs(int, int)", span="80-80"];
m44_38 [cluster="HangFire.JobHelper.FromNullableStringTimestamp(string)", file="RedisStorageConnection.cs", label="Entry HangFire.JobHelper.FromNullableStringTimestamp(string)", span="65-65"];
m44_214 [cluster="HangFire.Web.DequeuedJobDto.DequeuedJobDto()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m44_386 [cluster="HangFire.Web.StatisticsDto.StatisticsDto()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.StatisticsDto.StatisticsDto()", span="2-2"];
m44_29 [cluster="Unk.GetJobsWithProperties", file="RedisStorageConnection.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m44_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="RedisStorageConnection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m44_359 [cluster="KeyValuePair<string, T>.cstr", file="RedisStorageConnection.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m44_197 [cluster="HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.EnqueuedJobDto.EnqueuedJobDto()", span="5-5"];
m44_60 [cluster="Unk.CreatePipeline", file="RedisStorageConnection.cs", label="Entry Unk.CreatePipeline", span=""];
m44_76 [cluster="Unk.GetValueFromHash", file="RedisStorageConnection.cs", label="Entry Unk.GetValueFromHash", span=""];
m44_23 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m44_26 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", color=green, community=0, file="RedisStorageConnection.cs", label="1: return GetJobsWithProperties(Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                    (job, state) => new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }).OrderBy(x => x.Value.StartedAt).ToList();", span="62-76"];
m44_25 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="RedisStorageConnection.cs", label="var jobIds = Redis.GetRangeFromSortedSet(\r\n                    ''hangfire:processing'',\r\n                    from,\r\n                    from + count - 1)", span="57-60"];
m44_24 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="RedisStorageConnection.cs", label=Redis, span="55-55"];
m44_27 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="52-52"];
m44_134 [cluster="HangFire.JobHelper.FromStringTimestamp(string)", file="RedisStorageConnection.cs", label="Entry HangFire.JobHelper.FromStringTimestamp(string)", span="60-60"];
m44_257 [cluster="Unk.ContainsKey", file="RedisStorageConnection.cs", label="Entry Unk.ContainsKey", span=""];
m44_234 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", file="RedisStorageConnection.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string, string)", span="10-10"];
m44_173 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="499-499"];
m44_335 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="return jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State)))\r\n                .ToList();", span="532-542"];
m44_334 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="pipeline.Flush()", span="529-529"];
m44_326 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="508-508"];
m44_327 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="509-509"];
m44_328 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="var pipeline = redis.CreatePipeline()", span="511-511"];
m44_331 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="517-519"];
m44_333 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="523-525"];
m44_329 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label=jobIds, span="513-513"];
m44_325 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="return new List<KeyValuePair<string, T>>();", span="506-506"];
m44_324 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="jobIds.Count == 0", span="506-506"];
m44_332 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="stateProperties != null", span="521-521"];
m44_330 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="var id = jobId", span="515-515"];
m44_336 [cluster="HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="499-499"];
m44_361 [cluster="Unk.selector", file="RedisStorageConnection.cs", label="Entry Unk.selector", span=""];
m44_345 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisStorageConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m44_11 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m44_13 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="RedisStorageConnection.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="32-32"];
m44_12 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="RedisStorageConnection.cs", label=Redis, span="30-30"];
m44_14 [cluster="HangFire.Web.JobStorage.DequeuedCount(string)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.DequeuedCount(string)", span="28-28"];
m44_219 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="438-438"];
m44_276 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="449-449"];
m44_278 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var result = new Dictionary<DateTime, long>()", span="452-452"];
m44_270 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var dates = new List<DateTime>()", span="442-442"];
m44_272 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="i < 24", span="443-443"];
m44_277 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="450-450"];
m44_279 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var i = 0", span="453-453"];
m44_284 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="result.Add(dates[i], value)", span="461-461"];
m44_286 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="return result;", span="464-464"];
m44_269 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var endDate = DateTime.UtcNow", span="441-441"];
m44_271 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var i = 0", span="443-443"];
m44_273 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="dates.Add(endDate)", span="445-445"];
m44_280 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="i < dates.Count", span="453-453"];
m44_275 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="i++", span="443-443"];
m44_282 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="456-456"];
m44_285 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="i++", span="453-453"];
m44_283 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="value = 0", span="458-458"];
m44_274 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="endDate = endDate.AddHours(-1)", span="446-446"];
m44_281 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="long value", span="455-455"];
m44_287 [cluster="HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.GetHourlyTimelineStats(IRedisClient, string)", span="438-438"];
m44_232 [cluster="Unk.TryToGetQueue", file="RedisStorageConnection.cs", label="Entry Unk.TryToGetQueue", span=""];
m44_58 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="RedisStorageConnection.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m44_132 [cluster="HangFire.Web.ServerDto.ServerDto()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.ServerDto.ServerDto()", span="5-5"];
m44_258 [cluster="Unk.Where", file="RedisStorageConnection.cs", label="Entry Unk.Where", span=""];
m44_236 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.EnqueueScheduled(string)", span="392-392"];
m44_238 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RedisStorageConnection.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="396-396"];
m44_237 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RedisStorageConnection.cs", label=Redis, span="394-394"];
m44_239 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RedisStorageConnection.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="397-397"];
m44_242 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RedisStorageConnection.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been enqueued by a user.'', queue),\r\n                    ScheduledState.Name);", span="404-407"];
m44_240 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RedisStorageConnection.cs", label="String.IsNullOrEmpty(queue)", span="399-399"];
m44_241 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RedisStorageConnection.cs", label="return false;", span="401-401"];
m44_243 [cluster="HangFire.Web.JobStorage.EnqueueScheduled(string)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.EnqueueScheduled(string)", span="392-392"];
m44_317 [cluster="System.DateTime.AddDays(double)", file="RedisStorageConnection.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m44_174 [cluster="HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m44_360 [cluster="Unk.TrueForAll", file="RedisStorageConnection.cs", label="Entry Unk.TrueForAll", span=""];
m44_362 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="541-541"];
m44_32 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="66-76"];
m44_40 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="76-76"];
m44_33 [cluster="lambda expression", color=green, community=0, file="RedisStorageConnection.cs", label="1: new ProcessingJobDto\r\n                    {\r\n                        ServerName = state[1],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InProcessingState = ProcessingState.Name.Equals(\r\n                            state[2], StringComparison.OrdinalIgnoreCase),\r\n                        State = state[2]\r\n                    }", span="66-76"];
m44_34 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="66-76"];
m44_80 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="120-120"];
m44_83 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="121-129"];
m44_84 [cluster="lambda expression", color=green, community=0, file="RedisStorageConnection.cs", label="1: new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(jobs[job.Key][1]),\r\n                        Queue = JobHelper.TryToGetQueue(jobs[job.Key][0]),\r\n                        Type = jobs[job.Key][0],\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="121-129"];
m44_85 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="121-129"];
m44_129 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="184-190"];
m44_130 [cluster="lambda expression", color=green, community=0, file="RedisStorageConnection.cs", label="2: new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1])\r\n                }", span="184-190"];
m44_131 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="184-190"];
m44_42 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="76-76"];
m44_41 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.Value.StartedAt", span="76-76"];
m44_142 [cluster="lambda expression", file="RedisStorageConnection.cs", label="new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="208-218"];
m44_152 [cluster="lambda expression", file="RedisStorageConnection.cs", label="new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="236-243"];
m44_195 [cluster="lambda expression", file="RedisStorageConnection.cs", label="new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        }", span="283-289"];
m44_204 [cluster="lambda expression", file="RedisStorageConnection.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="319-325"];
m44_212 [cluster="lambda expression", file="RedisStorageConnection.cs", label="new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    }", span="343-351"];
m44_70 [cluster="lambda expression", file="RedisStorageConnection.cs", label="jobs.Add(job.Key, x)", span="107-107"];
m44_78 [cluster="lambda expression", file="RedisStorageConnection.cs", label="states.Add(job.Key, x)", span="113-113"];
m44_82 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="120-120"];
m44_81 [cluster="lambda expression", file="RedisStorageConnection.cs", label="job.Key", span="120-120"];
m44_120 [cluster="lambda expression", file="RedisStorageConnection.cs", label="servers.Add(name, x)", span="173-173"];
m44_127 [cluster="lambda expression", file="RedisStorageConnection.cs", label="queues.Add(name, x)", span="178-178"];
m44_401 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="572-572"];
m44_407 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="576-576"];
m44_421 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="584-584"];
m44_141 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="208-218"];
m44_151 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="236-243"];
m44_203 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="319-325"];
m44_211 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="343-351"];
m44_143 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="208-218"];
m44_153 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="236-243"];
m44_194 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="283-289"];
m44_196 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="283-289"];
m44_205 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="319-325"];
m44_213 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="343-351"];
m44_73 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="110-112"];
m44_77 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="113-113"];
m44_65 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:job:{0}'', job.Key),\r\n                                new[] { ''Type'', ''Args'' })", span="104-106"];
m44_74 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetValueFromHash(\r\n                                String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                                ''State'')", span="110-112"];
m44_64 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="104-106"];
m44_69 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="107-107"];
m44_71 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="107-107"];
m44_79 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="113-113"];
m44_259 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="432-432"];
m44_263 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="432-432"];
m44_266 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="432-432"];
m44_116 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="170-172"];
m44_119 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="173-173"];
m44_121 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="173-173"];
m44_122 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="176-177"];
m44_126 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="178-178"];
m44_128 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="178-178"];
m44_293 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="449-449"];
m44_321 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="481-481"];
m44_318 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="480-480"];
m44_353 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="533-538"];
m44_356 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="539-541"];
m44_400 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="572-572"];
m44_402 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="572-572"];
m44_406 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="576-576"];
m44_408 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="576-576"];
m44_420 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="584-584"];
m44_422 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="584-584"];
m44_75 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="110-112"];
m44_66 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="104-106"];
m44_343 [cluster="lambda expression", file="RedisStorageConnection.cs", label="jobs.Add(id, x)", span="519-519"];
m44_351 [cluster="lambda expression", file="RedisStorageConnection.cs", label="states.Add(id, x)", span="525-525"];
m44_260 [cluster="lambda expression", file="RedisStorageConnection.cs", label="!hiddenProperties.Contains(x.Key)", span="432-432"];
m44_261 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="432-432"];
m44_265 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="432-432"];
m44_264 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.Key", span="432-432"];
m44_268 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="432-432"];
m44_267 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.Value", span="432-432"];
m44_117 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt'')", span="170-172"];
m44_123 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name))", span="176-177"];
m44_118 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="170-172"];
m44_124 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="176-177"];
m44_294 [cluster="lambda expression", file="RedisStorageConnection.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="449-449"];
m44_295 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="449-449"];
m44_322 [cluster="lambda expression", file="RedisStorageConnection.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="481-481"];
m44_323 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="481-481"];
m44_320 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="480-480"];
m44_319 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.ToString(''yyyy-MM-dd'')", span="480-480"];
m44_339 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}'', id), properties)", span="518-518"];
m44_347 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="524-524"];
m44_357 [cluster="lambda expression", file="RedisStorageConnection.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) ? default(T) : selector(x.Job, x.State))", span="539-541"];
m44_342 [cluster="lambda expression", file="RedisStorageConnection.cs", label="!jobs.ContainsKey(id)", span="519-519"];
m44_354 [cluster="lambda expression", file="RedisStorageConnection.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="533-538"];
m44_350 [cluster="lambda expression", file="RedisStorageConnection.cs", label="!states.ContainsKey(id)", span="525-525"];
m44_355 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="533-538"];
m44_358 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="539-541"];
m44_177 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="263-264"];
m44_176 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="263-264"];
m44_179 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="265-265"];
m44_182 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="268-268"];
m44_185 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="269-269"];
m44_188 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="272-272"];
m44_191 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="273-273"];
m44_338 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="518-518"];
m44_341 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="519-519"];
m44_346 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="524-524"];
m44_349 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="525-525"];
m44_387 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="564-564"];
m44_391 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="565-565"];
m44_394 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="568-568"];
m44_397 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="569-569"];
m44_403 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="573-573"];
m44_409 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="577-577"];
m44_412 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="580-580"];
m44_416 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="581-581"];
m44_423 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="585-585"];
m44_426 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="591-591"];
m44_429 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Entry lambda expression", span="592-592"];
m44_183 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="268-268"];
m44_189 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="272-272"];
m44_427 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="591-591"];
m44_344 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="519-519"];
m44_352 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="525-525"];
m44_392 [cluster="lambda expression", file="RedisStorageConnection.cs", label="stats.Servers = x", span="565-565"];
m44_398 [cluster="lambda expression", file="RedisStorageConnection.cs", label="stats.Queues = x", span="569-569"];
m44_404 [cluster="lambda expression", file="RedisStorageConnection.cs", label="stats.Scheduled = x", span="573-573"];
m44_410 [cluster="lambda expression", file="RedisStorageConnection.cs", label="stats.Processing = x", span="577-577"];
m44_417 [cluster="lambda expression", file="RedisStorageConnection.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="581-581"];
m44_424 [cluster="lambda expression", file="RedisStorageConnection.cs", label="stats.Failed = x", span="585-585"];
m44_430 [cluster="lambda expression", file="RedisStorageConnection.cs", label="stats.Enqueued += x", span="592-592"];
m44_340 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="518-518"];
m44_348 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="524-524"];
m44_178 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="263-264"];
m44_181 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="265-265"];
m44_180 [cluster="lambda expression", file="RedisStorageConnection.cs", label="firstJobIds = x", span="265-265"];
m44_184 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="268-268"];
m44_187 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="269-269"];
m44_186 [cluster="lambda expression", file="RedisStorageConnection.cs", label="length = x", span="269-269"];
m44_190 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="272-272"];
m44_193 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="273-273"];
m44_192 [cluster="lambda expression", file="RedisStorageConnection.cs", label="dequeued = x", span="273-273"];
m44_389 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="564-564"];
m44_388 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetSetCount(''hangfire:servers'')", span="564-564"];
m44_393 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="565-565"];
m44_396 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="568-568"];
m44_395 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetSetCount(''hangfire:queues'')", span="568-568"];
m44_399 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="569-569"];
m44_405 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="573-573"];
m44_411 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="577-577"];
m44_414 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="580-580"];
m44_413 [cluster="lambda expression", file="RedisStorageConnection.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="580-580"];
m44_418 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="581-581"];
m44_425 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="585-585"];
m44_428 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="591-591"];
m44_431 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="592-592"];
m44_363 [cluster="lambda expression", file="RedisStorageConnection.cs", label="y == null", span="541-541"];
m44_364 [cluster="lambda expression", file="RedisStorageConnection.cs", label="Exit lambda expression", span="541-541"];
m44_28 [cluster="Unk.GetRangeFromSortedSet", file="RedisStorageConnection.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m44_175 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RedisStorageConnection.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m44_115 [cluster="Unk.ToList", file="RedisStorageConnection.cs", label="Entry Unk.ToList", span=""];
m44_67 [cluster="Unk.Format", file="RedisStorageConnection.cs", label="Entry Unk.Format", span=""];
m44_220 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.HourlyFailedJobs()", span="363-363"];
m44_222 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RedisStorageConnection.cs", label="return GetHourlyTimelineStats(Redis, ''failed'');", span="367-367"];
m44_221 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RedisStorageConnection.cs", label=Redis, span="365-365"];
m44_223 [cluster="HangFire.Web.JobStorage.HourlyFailedJobs()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.HourlyFailedJobs()", span="363-363"];
m44_35 [cluster="HangFire.Web.ProcessingJobDto.ProcessingJobDto()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.ProcessingJobDto.ProcessingJobDto()", span="5-5"];
m44_135 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.FailedJobs(int, int)", span="194-194"];
m44_138 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="RedisStorageConnection.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    failedJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                    (job, state) => new FailedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        ExceptionType = state[1],\r\n                        ExceptionMessage = state[2],\r\n                        ExceptionDetails = state[3],\r\n                        InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="203-218"];
m44_137 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="RedisStorageConnection.cs", label="var failedJobIds = Redis.GetRangeFromSortedSetDesc(\r\n                    ''hangfire:failed'',\r\n                    from,\r\n                    from + count - 1)", span="198-201"];
m44_136 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="RedisStorageConnection.cs", label=Redis, span="196-196"];
m44_139 [cluster="HangFire.Web.JobStorage.FailedJobs(int, int)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.FailedJobs(int, int)", span="194-194"];
m44_61 [cluster="Unk.QueueCommand", file="RedisStorageConnection.cs", label="Entry Unk.QueueCommand", span=""];
m44_0 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m44_2 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="RedisStorageConnection.cs", label="return Redis.GetSortedSetCount(''hangfire:schedule'');", span="16-16"];
m44_1 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="RedisStorageConnection.cs", label=Redis, span="14-14"];
m44_3 [cluster="HangFire.Web.JobStorage.ScheduledCount()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.ScheduledCount()", span="12-12"];
m44_37 [cluster="HangFire.JobHelper.TryToGetQueue(string)", file="RedisStorageConnection.cs", label="Entry HangFire.JobHelper.TryToGetQueue(string)", span="9-9"];
m44_144 [cluster="HangFire.Web.FailedJobDto.FailedJobDto()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.FailedJobDto.FailedJobDto()", span="5-5"];
m44_87 [cluster="HangFire.JobHelper.FromTimestamp(long)", file="RedisStorageConnection.cs", label="Entry HangFire.JobHelper.FromTimestamp(long)", span="50-50"];
m44_296 [cluster="System.DateTime.ToString(string)", file="RedisStorageConnection.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m44_145 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="222-222"];
m44_148 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RedisStorageConnection.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    succeededJobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''SucceededAt'', ''State'' },\r\n                    (job, state) => new SucceededJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Queue = JobHelper.TryToGetQueue(job[0]),\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="231-243"];
m44_147 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RedisStorageConnection.cs", label="var succeededJobIds = Redis.GetRangeFromList(\r\n                    ''hangfire:succeeded'',\r\n                    from,\r\n                    from + count - 1)", span="226-229"];
m44_146 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RedisStorageConnection.cs", label=Redis, span="224-224"];
m44_149 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.SucceededJobs(int, int)", span="222-222"];
m44_172 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="RedisStorageConnection.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m44_290 [cluster="Unk.ElementAt", file="RedisStorageConnection.cs", label="Entry Unk.ElementAt", span=""];
m44_150 [cluster="Unk.GetRangeFromList", file="RedisStorageConnection.cs", label="Entry Unk.GetRangeFromList", span=""];
m44_155 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.Queues()", span="247-247"];
m44_167 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="pipeline.Flush()", span="275-275"];
m44_157 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="251-251"];
m44_168 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="var jobs = GetJobsWithProperties(\r\n                        Redis,\r\n                        firstJobIds,\r\n                        new[] { ''Type'', ''Args'' },\r\n                        new[] { ''EnqueuedAt'', ''State'' },\r\n                        (job, state) => new EnqueuedJobDto\r\n                        {\r\n                            Type = job[0],\r\n                            Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                            EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                            InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                        })", span="278-289"];
m44_163 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="var pipeline = Redis.CreatePipeline()", span="260-260"];
m44_164 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetRangeFromList(\r\n                                String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                            x => firstJobIds = x)", span="262-265"];
m44_165 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                            x => length = x)", span="267-269"];
m44_166 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                            x => dequeued = x)", span="271-273"];
m44_156 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label=Redis, span="249-249"];
m44_158 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="252-252"];
m44_159 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label=queues, span="254-254"];
m44_169 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                    {\r\n                        Name = queue,\r\n                        FirstJobs = jobs,\r\n                        Length = length,\r\n                        Dequeued = dequeued\r\n                    })", span="291-297"];
m44_162 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="long dequeued = 0", span="258-258"];
m44_170 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="return result;", span="300-300"];
m44_160 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="IList<string> firstJobIds = null", span="256-256"];
m44_161 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="long length = 0", span="257-257"];
m44_171 [cluster="HangFire.Web.JobStorage.Queues()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.Queues()", span="247-247"];
m44_88 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m44_90 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="RedisStorageConnection.cs", label="return GetTimelineStats(Redis, ''succeeded'');", span="137-137"];
m44_89 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="RedisStorageConnection.cs", label=Redis, span="135-135"];
m44_91 [cluster="HangFire.Web.JobStorage.SucceededByDatesCount()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.SucceededByDatesCount()", span="133-133"];
m44_62 [cluster="Unk.Flush", file="RedisStorageConnection.cs", label="Entry Unk.Flush", span=""];
m44_154 [cluster="HangFire.Web.SucceededJobDto.SucceededJobDto()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.SucceededJobDto.SucceededJobDto()", span="5-5"];
m44_419 [cluster="Unk.Parse", file="RedisStorageConnection.cs", label="Entry Unk.Parse", span=""];
m44_72 [cluster="Unk.Add", file="RedisStorageConnection.cs", label="Entry Unk.Add", span=""];
m44_97 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="149-149"];
m44_110 [cluster="HangFire.Web.JobStorage.Servers()", color=green, community=0, file="RedisStorageConnection.cs", label="2: return serverNames.Select(x => new ServerDto\r\n                {\r\n                    Name = x,\r\n                    WorkersCount = int.Parse(servers[x][0]),\r\n                    Queues = queues[x],\r\n                    StartedAt = JobHelper.FromStringTimestamp(servers[x][1])\r\n                }).ToList();", span="184-190"];
m44_99 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="var serverNames = Redis.GetAllItemsFromSet(''hangfire:servers'')", span="153-153"];
m44_102 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="var servers = new Dictionary<string, List<string>>()", span="160-160"];
m44_103 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="var queues = new Dictionary<string, List<string>>()", span="161-161"];
m44_109 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="pipeline.Flush()", span="181-181"];
m44_98 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label=Redis, span="151-151"];
m44_100 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="serverNames.Count == 0", span="155-155"];
m44_105 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label=serverNames, span="165-165"];
m44_107 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(\r\n                                String.Format(''hangfire:server:{0}'', name),\r\n                                ''WorkerCount'', ''StartedAt''),\r\n                            x => servers.Add(name, x))", span="169-173"];
m44_104 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="var pipeline = Redis.CreatePipeline()", span="163-163"];
m44_108 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetAllItemsFromList(\r\n                                String.Format(''hangfire:server:{0}:queues'', name)),\r\n                            x => queues.Add(name, x))", span="175-178"];
m44_101 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="return new List<ServerDto>();", span="157-157"];
m44_106 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="var name = serverName", span="167-167"];
m44_111 [cluster="HangFire.Web.JobStorage.Servers()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.Servers()", span="149-149"];
m44_369 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.GetStatistics()", span="553-553"];
m44_383 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="pipeline.Flush()", span="595-595"];
m44_372 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="var queues = Redis.GetAllItemsFromSet(''hangfire:queues'')", span="559-559"];
m44_373 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="var pipeline = Redis.CreatePipeline()", span="561-561"];
m44_374 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:servers''),\r\n                        x => stats.Servers = x)", span="563-565"];
m44_375 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSetCount(''hangfire:queues''),\r\n                        x => stats.Queues = x)", span="567-569"];
m44_376 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                        x => stats.Scheduled = x)", span="571-573"];
m44_377 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:processing''),\r\n                        x => stats.Processing = x)", span="575-577"];
m44_378 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValue(''hangfire:stats:succeeded''),\r\n                        x => stats.Succeeded = long.Parse(x ?? ''0''))", span="579-581"];
m44_379 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetSortedSetCount(''hangfire:failed''),\r\n                        x => stats.Failed = x)", span="583-585"];
m44_382 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                            x => stats.Enqueued += x)", span="590-592"];
m44_380 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label=queues, span="587-587"];
m44_384 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="return stats;", span="598-598"];
m44_371 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="var stats = new StatisticsDto()", span="557-557"];
m44_381 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="var queueName = queue", span="589-589"];
m44_370 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label=Redis, span="555-555"];
m44_385 [cluster="HangFire.Web.JobStorage.GetStatistics()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.GetStatistics()", span="553-553"];
m44_365 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="545-545"];
m44_367 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="RedisStorageConnection.cs", label="return Redis.GetListCount(''hangfire:succeeded'');", span="549-549"];
m44_366 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="RedisStorageConnection.cs", label=Redis, span="547-547"];
m44_368 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.SucceededListCount()", span="545-545"];
m44_215 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.HourlySucceededJobs()", span="355-355"];
m44_217 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="RedisStorageConnection.cs", label="return GetHourlyTimelineStats(Redis, ''succeeded'');", span="359-359"];
m44_216 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="RedisStorageConnection.cs", label=Redis, span="357-357"];
m44_218 [cluster="HangFire.Web.JobStorage.HourlySucceededJobs()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.HourlySucceededJobs()", span="355-355"];
m44_39 [cluster="string.Equals(string, System.StringComparison)", file="RedisStorageConnection.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m44_235 [cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="RedisStorageConnection.cs", label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47"];
m44_288 [cluster="System.DateTime.AddHours(double)", file="RedisStorageConnection.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m44_92 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="467-467"];
m44_305 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="481-481"];
m44_304 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="480-480"];
m44_307 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var result = new Dictionary<DateTime, long>()", span="485-485"];
m44_306 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="483-483"];
m44_301 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="startDate <= endDate", span="474-474"];
m44_300 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var dates = new List<DateTime>()", span="472-472"];
m44_309 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="i < stringDates.Count", span="486-486"];
m44_308 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var i = 0", span="486-486"];
m44_313 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="result.Add(dates[i], value)", span="493-493"];
m44_315 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="return result;", span="496-496"];
m44_298 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var endDate = DateTime.UtcNow.Date", span="470-470"];
m44_311 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="489-489"];
m44_299 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="var startDate = endDate.AddDays(-7)", span="471-471"];
m44_303 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="endDate = endDate.AddDays(-1)", span="477-477"];
m44_302 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="dates.Add(endDate)", span="476-476"];
m44_314 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="i++", span="486-486"];
m44_310 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="long value", span="488-488"];
m44_312 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="value = 0", span="491-491"];
m44_316 [cluster="HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.GetTimelineStats(IRedisClient, string)", span="467-467"];
m44_4 [cluster="Unk.GetSortedSetCount", file="RedisStorageConnection.cs", label="Entry Unk.GetSortedSetCount", span=""];
m44_15 [cluster="HangFire.Web.JobStorage.FailedCount()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m44_17 [cluster="HangFire.Web.JobStorage.FailedCount()", file="RedisStorageConnection.cs", label="return Redis.GetSortedSetCount(''hangfire:failed'');", span="40-40"];
m44_16 [cluster="HangFire.Web.JobStorage.FailedCount()", file="RedisStorageConnection.cs", label=Redis, span="38-38"];
m44_18 [cluster="HangFire.Web.JobStorage.FailedCount()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.FailedCount()", span="36-36"];
m44_255 [cluster="HangFire.Web.JobDetailsDto.JobDetailsDto()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobDetailsDto.JobDetailsDto()", span="4-4"];
m44_244 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.JobDetails(string)", span="411-411"];
m44_252 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisStorageConnection.cs", label="return new JobDetailsDto\r\n                {\r\n                    Type = job[''Type''],\r\n                    Arguments = JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']),\r\n                    State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                    Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                    History = history\r\n                };", span="427-434"];
m44_251 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisStorageConnection.cs", label="var history = historyList\r\n                    .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                    .ToList()", span="423-425"];
m44_246 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisStorageConnection.cs", label="var job = Redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="415-415"];
m44_249 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisStorageConnection.cs", label="var hiddenProperties = new[] { ''Type'', ''Args'', ''State'' }", span="418-418"];
m44_250 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisStorageConnection.cs", label="var historyList = Redis.GetAllItemsFromList(\r\n                    String.Format(''hangfire:job:{0}:history'', jobId))", span="420-421"];
m44_245 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisStorageConnection.cs", label=Redis, span="413-413"];
m44_247 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisStorageConnection.cs", label="job.Count == 0", span="416-416"];
m44_248 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisStorageConnection.cs", label="return null;", span="416-416"];
m44_253 [cluster="HangFire.Web.JobStorage.JobDetails(string)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.JobDetails(string)", span="411-411"];
m44_292 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisStorageConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m44_5 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m44_7 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="RedisStorageConnection.cs", label="return Redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", span="24-24"];
m44_6 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="RedisStorageConnection.cs", label=Redis, span="22-22"];
m44_8 [cluster="HangFire.Web.JobStorage.EnqueuedCount(string)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.EnqueuedCount(string)", span="20-20"];
m44_297 [cluster="string.Format(string, object, object)", file="RedisStorageConnection.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m44_254 [cluster="Unk.GetAllEntriesFromHash", file="RedisStorageConnection.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m44_63 [cluster="Unk.ToDictionary", file="RedisStorageConnection.cs", label="Entry Unk.ToDictionary", span=""];
m44_337 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="RedisStorageConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m44_390 [cluster="Unk.GetSetCount", file="RedisStorageConnection.cs", label="Entry Unk.GetSetCount", span=""];
m44_206 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="329-329"];
m44_209 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="RedisStorageConnection.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'', ''State'', ''CreatedAt'', ''Fetched'', ''Checked'' },\r\n                    null,\r\n                    (job, state) => new DequeuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        State = job[2],\r\n                        CreatedAt = JobHelper.FromNullableStringTimestamp(job[3]),\r\n                        FetchedAt = JobHelper.FromNullableStringTimestamp(job[4]),\r\n                        CheckedAt = JobHelper.FromNullableStringTimestamp(job[5])\r\n                    });", span="338-351"];
m44_208 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="RedisStorageConnection.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    from, from + perPage - 1)", span="334-336"];
m44_207 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="RedisStorageConnection.cs", label=Redis, span="332-332"];
m44_210 [cluster="HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.DequeuedJobs(string, int, int)", span="329-329"];
m44_9 [cluster="string.Format(string, object)", file="RedisStorageConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m44_93 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m44_95 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RedisStorageConnection.cs", label="return GetTimelineStats(Redis, ''failed'');", span="145-145"];
m44_94 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RedisStorageConnection.cs", label=Redis, span="143-143"];
m44_96 [cluster="HangFire.Web.JobStorage.FailedByDatesCount()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.FailedByDatesCount()", span="141-141"];
m44_256 [cluster="Unk.>", file="RedisStorageConnection.cs", label="Entry Unk.>", span=""];
m44_10 [cluster="Unk.GetListCount", file="RedisStorageConnection.cs", label="Entry Unk.GetListCount", span=""];
m44_86 [cluster="HangFire.Web.ScheduleDto.ScheduleDto()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.ScheduleDto.ScheduleDto()", span="5-5"];
m44_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisStorageConnection.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m44_233 [cluster="string.IsNullOrEmpty(string)", file="RedisStorageConnection.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m44_289 [cluster="Unk.GetValuesMap", file="RedisStorageConnection.cs", label="Entry Unk.GetValuesMap", span=""];
m44_19 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m44_20 [cluster="HangFire.Web.JobStorage.ProcessingCount()", color=green, community=0, file="RedisStorageConnection.cs", label="2: Redis", span="46-46"];
m44_21 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="RedisStorageConnection.cs", label="return Redis.GetSortedSetCount(''hangfire:processing'');", span="48-48"];
m44_22 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.ProcessingCount()", span="44-44"];
m44_125 [cluster="Unk.GetAllItemsFromList", file="RedisStorageConnection.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m44_262 [cluster="Unk.Contains", file="RedisStorageConnection.cs", label="Entry Unk.Contains", span=""];
m44_114 [cluster="Unk.Select", file="RedisStorageConnection.cs", label="Entry Unk.Select", span=""];
m44_112 [cluster="Unk.GetAllItemsFromSet", file="RedisStorageConnection.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m44_140 [cluster="Unk.GetRangeFromSortedSetDesc", file="RedisStorageConnection.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m44_415 [cluster="Unk.GetValue", file="RedisStorageConnection.cs", label="Entry Unk.GetValue", span=""];
m44_68 [cluster="Unk.GetValuesFromHash", file="RedisStorageConnection.cs", label="Entry Unk.GetValuesFromHash", span=""];
m44_224 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.RetryJob(string)", span="371-371"];
m44_226 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisStorageConnection.cs", label="var jobType = Redis.GetValueFromHash(String.Format(''hangfire:job:{0}'', jobId), ''Type'')", span="375-375"];
m44_225 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisStorageConnection.cs", label=Redis, span="373-373"];
m44_227 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisStorageConnection.cs", label="var queue = JobHelper.TryToGetQueue(jobType)", span="377-377"];
m44_230 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisStorageConnection.cs", label="return JobState.Apply(\r\n                    Redis,\r\n                    new EnqueuedState(jobId, ''The job has been retried by a user.'', queue),\r\n                    FailedState.Name);", span="385-388"];
m44_228 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisStorageConnection.cs", label="String.IsNullOrEmpty(queue)", span="378-378"];
m44_229 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisStorageConnection.cs", label="return false;", span="380-380"];
m44_231 [cluster="HangFire.Web.JobStorage.RetryJob(string)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.RetryJob(string)", span="371-371"];
m44_198 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RedisStorageConnection.cs", label="Entry HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="304-304"];
m44_201 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RedisStorageConnection.cs", label="return GetJobsWithProperties(\r\n                    Redis,\r\n                    jobIds,\r\n                    new[] { ''Type'', ''Args'' },\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Type = job[0],\r\n                        Args = JobHelper.FromJson<Dictionary<string, string>>(job[1]),\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    });", span="314-325"];
m44_200 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RedisStorageConnection.cs", label="var jobIds = Redis.GetRangeFromList(\r\n                    String.Format(''hangfire:queue:{0}'', queue),\r\n                    from,\r\n                    from + perPage - 1)", span="309-312"];
m44_199 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RedisStorageConnection.cs", label=Redis, span="307-307"];
m44_202 [cluster="HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", file="RedisStorageConnection.cs", label="Exit HangFire.Web.JobStorage.EnqueuedJobs(string, int, int)", span="304-304"];
m44_433 [file="RedisStorageConnection.cs", label=jobs, span=""];
m44_434 [file="RedisStorageConnection.cs", label=states, span=""];
m44_436 [file="RedisStorageConnection.cs", label=servers, span=""];
m44_437 [file="RedisStorageConnection.cs", label=queues, span=""];
m44_432 [file="RedisStorageConnection.cs", label=job, span=""];
m44_435 [file="RedisStorageConnection.cs", label=name, span=""];
m44_443 [file="RedisStorageConnection.cs", label=id, span=""];
m44_444 [file="RedisStorageConnection.cs", label=jobs, span=""];
m44_446 [file="RedisStorageConnection.cs", label=states, span=""];
m44_439 [file="RedisStorageConnection.cs", label=hiddenProperties, span=""];
m44_440 [file="RedisStorageConnection.cs", label=string, span=""];
m44_441 [file="RedisStorageConnection.cs", label=string, span=""];
m44_442 [file="RedisStorageConnection.cs", label="string[]", span=""];
m44_445 [file="RedisStorageConnection.cs", label="string[]", span=""];
m44_447 [file="RedisStorageConnection.cs", label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m44_438 [file="RedisStorageConnection.cs", label=queue, span=""];
m44_449 [file="RedisStorageConnection.cs", label=queueName, span=""];
m44_448 [file="RedisStorageConnection.cs", label=stats, span=""];
m45_32 [cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="179-179"];
m45_28 [cluster="Unk.GetValueFromHash", file="RedisStoredJobs.cs", label="Entry Unk.GetValueFromHash", span=""];
m45_3 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", span="18-18"];
m45_4 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="var jobData = _redis.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}'', id))", span="20-21"];
m45_5 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="jobData.Count == 0", span="23-23"];
m45_8 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="jobData.ContainsKey(''Type'')", span="26-26"];
m45_9 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="invocationData.Type = jobData[''Type'']", span="28-28"];
m45_10 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="jobData.ContainsKey(''Method'')", span="30-30"];
m45_11 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="invocationData.Method = jobData[''Method'']", span="32-32"];
m45_12 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="jobData.ContainsKey(''ParameterTypes'')", span="34-34"];
m45_13 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="invocationData.ParameterTypes = jobData[''ParameterTypes'']", span="36-36"];
m45_14 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="return new StateAndInvocationData\r\n            {\r\n                InvocationData = invocationData,\r\n                State = jobData.ContainsKey(''State'') ? jobData[''State''] : null,\r\n            };", span="39-43"];
m45_6 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="return null;", span="23-23"];
m45_7 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="var invocationData = new InvocationData()", span="25-25"];
m45_15 [cluster="HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", file="RedisStoredJobs.cs", label="Exit HangFire.Redis.RedisStoredJobs.GetStateAndInvocationData(string)", span="18-18"];
m45_29 [cluster="HangFire.Redis.RedisStoredJobs.Complete(HangFire.Server.JobPayload)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStoredJobs.Complete(HangFire.Server.JobPayload)", span="61-61"];
m45_30 [cluster="HangFire.Redis.RedisStoredJobs.Complete(HangFire.Server.JobPayload)", color=red, community=0, file="RedisStoredJobs.cs", label="2: RedisStorageConnection.RemoveFromDequeuedList(_redis, payload.Queue, payload.Id)", span="63-63"];
m45_31 [cluster="HangFire.Redis.RedisStoredJobs.Complete(HangFire.Server.JobPayload)", file="RedisStoredJobs.cs", label="Exit HangFire.Redis.RedisStoredJobs.Complete(HangFire.Server.JobPayload)", span="61-61"];
m45_17 [cluster="Unk.GetAllEntriesFromHash", file="RedisStoredJobs.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m45_0 [cluster="HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", span="13-13"];
m45_1 [cluster="HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", file="RedisStoredJobs.cs", label="_redis = redis", span="15-15"];
m45_2 [cluster="HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", file="RedisStoredJobs.cs", label="Exit HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", span="13-13"];
m45_19 [cluster="Unk.ContainsKey", file="RedisStoredJobs.cs", label="Entry Unk.ContainsKey", span=""];
m45_24 [cluster="Unk.SetEntryInHash", file="RedisStoredJobs.cs", label="Entry Unk.SetEntryInHash", span=""];
m45_25 [cluster="HangFire.Redis.RedisStoredJobs.GetParameter(string, string)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStoredJobs.GetParameter(string, string)", span="54-54"];
m45_26 [cluster="HangFire.Redis.RedisStoredJobs.GetParameter(string, string)", file="RedisStoredJobs.cs", label="return _redis.GetValueFromHash(\r\n                String.Format(Prefix + ''job:{0}'', id),\r\n                name);", span="56-58"];
m45_27 [cluster="HangFire.Redis.RedisStoredJobs.GetParameter(string, string)", file="RedisStoredJobs.cs", label="Exit HangFire.Redis.RedisStoredJobs.GetParameter(string, string)", span="54-54"];
m45_22 [cluster="HangFire.Redis.RedisStoredJobs.SetParameter(string, string, string)", file="RedisStoredJobs.cs", label="_redis.SetEntryInHash(\r\n                String.Format(Prefix + ''job:{0}'', id),\r\n                name,\r\n                value)", span="48-51"];
m45_21 [cluster="HangFire.Redis.RedisStoredJobs.SetParameter(string, string, string)", file="RedisStoredJobs.cs", label="Entry HangFire.Redis.RedisStoredJobs.SetParameter(string, string, string)", span="46-46"];
m45_23 [cluster="HangFire.Redis.RedisStoredJobs.SetParameter(string, string, string)", file="RedisStoredJobs.cs", label="Exit HangFire.Redis.RedisStoredJobs.SetParameter(string, string, string)", span="46-46"];
m45_16 [cluster="string.Format(string, object)", file="RedisStoredJobs.cs", label="Entry string.Format(string, object)", span="0-0"];
m45_20 [cluster="HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", file="RedisStoredJobs.cs", label="Entry HangFire.Storage.StateAndInvocationData.StateAndInvocationData()", span="2-2"];
m45_18 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="RedisStoredJobs.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m45_33 [file="RedisStoredJobs.cs", label="HangFire.Redis.RedisStoredJobs", span=""];
m46_6 [cluster="Unk.GetRangeFromSortedSetByLowestScore", file="RedisStoredSets.cs", label="Entry Unk.GetRangeFromSortedSetByLowestScore", span=""];
m46_0 [cluster="HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", file="RedisStoredSets.cs", label="Entry HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", span="11-11"];
m46_1 [cluster="HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", file="RedisStoredSets.cs", label="_redis = redis", span="13-13"];
m46_2 [cluster="HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", file="RedisStoredSets.cs", label="Exit HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", span="11-11"];
m46_7 [cluster="Unk.FirstOrDefault", file="RedisStoredSets.cs", label="Entry Unk.FirstOrDefault", span=""];
m46_3 [cluster="HangFire.Redis.RedisStoredSets.GetFirstByLowestScore(string, long, long)", file="RedisStoredSets.cs", label="Entry HangFire.Redis.RedisStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m46_4 [cluster="HangFire.Redis.RedisStoredSets.GetFirstByLowestScore(string, long, long)", file="RedisStoredSets.cs", label="return _redis.GetRangeFromSortedSetByLowestScore(\r\n                Prefix + key, fromScore, toScore, 0, 1)\r\n                .FirstOrDefault();", span="18-20"];
m46_5 [cluster="HangFire.Redis.RedisStoredSets.GetFirstByLowestScore(string, long, long)", file="RedisStoredSets.cs", label="Exit HangFire.Redis.RedisStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m46_8 [file="RedisStoredSets.cs", label="HangFire.Redis.RedisStoredSets", span=""];
m47_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisStoredValues.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m47_33 [cluster="Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", file="RedisStoredValues.cs", label="Entry Hangfire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
m47_68 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="RedisStoredValues.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="44-44"];
m47_83 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="RedisStoredValues.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m47_32 [cluster="Hangfire.JobStorage.GetConnection()", file="RedisStoredValues.cs", label="Entry Hangfire.JobStorage.GetConnection()", span="56-56"];
m47_85 [cluster="string.Format(string, object, object)", file="RedisStoredValues.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m47_40 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RedisStoredValues.cs", label="Entry Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150"];
m47_41 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RedisStoredValues.cs", label="return GetType().Name;", span="152-152"];
m47_42 [cluster="Hangfire.Server.RecurringJobScheduler.ToString()", file="RedisStoredValues.cs", label="Exit Hangfire.Server.RecurringJobScheduler.ToString()", span="150-150"];
m47_77 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="RedisStoredValues.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m47_72 [cluster="Unk._instantFactory", file="RedisStoredValues.cs", label="Entry Unk._instantFactory", span=""];
m47_75 [cluster="Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", file="RedisStoredValues.cs", label="Entry Hangfire.Server.IScheduleInstant.GetNextInstants(System.DateTime?)", span="25-25"];
m47_84 [cluster="Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="RedisStoredValues.cs", label="Entry Hangfire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
m47_43 [cluster="object.GetType()", file="RedisStoredValues.cs", label="Entry object.GetType()", span="0-0"];
m47_35 [cluster="string.Format(string, object)", file="RedisStoredValues.cs", label="Entry string.Format(string, object)", span="0-0"];
m47_0 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RedisStoredValues.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="78-78"];
m47_1 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", file="RedisStoredValues.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler()", span="78-78"];
m47_38 [cluster="Hangfire.Logging.ILog.WarnException(string, System.Exception)", file="RedisStoredValues.cs", label="Entry Hangfire.Logging.ILog.WarnException(string, System.Exception)", span="278-278"];
m47_71 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RedisStoredValues.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m47_76 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="RedisStoredValues.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m47_79 [cluster="Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", file="RedisStoredValues.cs", label="Entry Hangfire.Client.CreateContext.CreateContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, Hangfire.Common.Job, Hangfire.States.IState)", span="37-37"];
m47_69 [cluster="Unk.Parse", file="RedisStoredValues.cs", label="Entry Unk.Parse", span=""];
m47_31 [cluster="Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", file="RedisStoredValues.cs", label="Entry Hangfire.Server.IThrottler.Throttle(System.Threading.CancellationToken)", span="22-22"];
m47_2 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="RedisStoredValues.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m47_3 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", file="RedisStoredValues.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory)", span="90-90"];
m47_74 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RedisStoredValues.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m47_82 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RedisStoredValues.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m47_67 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="RedisStoredValues.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m47_37 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="Entry Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155"];
m47_44 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="161-161"];
m47_46 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var cron = recurringJob[''Cron'']", span="163-163"];
m47_48 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var timeZone = recurringJob.ContainsKey(''TimeZoneId'')\r\n                    ? TimeZoneInfo.FindSystemTimeZoneById(recurringJob[''TimeZoneId''])\r\n                    : TimeZoneInfo.Utc", span="168-170"];
m47_50 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var lastExecutionTime = recurringJob.ContainsKey(''LastExecution'')\r\n                    ? JobHelper.DeserializeDateTime(recurringJob[''LastExecution''])\r\n                    : (DateTime?)null", span="174-176"];
m47_54 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="recurringJob.ContainsKey(''Queue'') && !String.IsNullOrEmpty(recurringJob[''Queue''])", span="183-183"];
m47_55 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="state.Queue = recurringJob[''Queue'']", span="185-185"];
m47_56 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var backgroundJob = _factory.Create(new CreateContext(storage, connection, job, state))", span="188-188"];
m47_59 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="Logger.DebugFormat(\r\n                            ''Recurring job '{0}' execution at '{1}' has been canceled.'',\r\n                            recurringJobId,\r\n                            instant.NowInstant)", span="193-196"];
m47_63 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    changedFields)", span="205-207"];
m47_65 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="Logger.ErrorException(\r\n                    String.Format(''Recurring job '{0}' was not triggered: {1}.'', recurringJobId, ex.Message),\r\n                    ex)", span="211-213"];
m47_45 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var job = serializedJob.Deserialize()", span="162-162"];
m47_47 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="164-164"];
m47_49 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var instant = _instantFactory(cronSchedule, timeZone)", span="172-172"];
m47_52 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="instant.GetNextInstants(lastExecutionTime).Any()", span="180-180"];
m47_60 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="changedFields.Add(''LastExecution'', JobHelper.SerializeDateTime(instant.NowInstant))", span="199-199"];
m47_62 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="changedFields.Add(''NextExecution'', JobHelper.SerializeDateTime(instant.NextInstant))", span="203-203"];
m47_51 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var changedFields = new Dictionary<string, string>()", span="178-178"];
m47_61 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="changedFields.Add(''LastJobId'', jobId ?? String.Empty)", span="200-200"];
m47_53 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="182-182"];
m47_57 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="var jobId = backgroundJob != null ? backgroundJob.Id : null", span="189-189"];
m47_58 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="String.IsNullOrEmpty(jobId)", span="191-191"];
m47_64 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label=TimeZoneNotFoundException, span="209-209"];
m47_66 [cluster="Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", file="RedisStoredValues.cs", label="Exit Hangfire.Server.RecurringJobScheduler.TryScheduleJob(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, System.Collections.Generic.IReadOnlyDictionary<string, string>)", span="155-155"];
m47_78 [cluster="string.IsNullOrEmpty(string)", file="RedisStoredValues.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m47_73 [cluster="Hangfire.Common.JobHelper.DeserializeDateTime(string)", file="RedisStoredValues.cs", label="Entry Hangfire.Common.JobHelper.DeserializeDateTime(string)", span="73-73"];
m47_16 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RedisStoredValues.cs", label="Entry Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m47_17 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="1: context == null", span="112-112"];
m47_19 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="1: _throttler.Throttle(context.CancellationToken)", span="114-114"];
m47_20 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="2: var connection = context.Storage.GetConnection()", span="116-116"];
m47_26 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="2: TryScheduleJob(context.Storage, connection, recurringJobId, recurringJob)", span="133-133"];
m47_29 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="1: _throttler.Delay(context.CancellationToken)", span="145-145"];
m47_18 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="1: throw new ArgumentNullException(''context'');", span="112-112"];
m47_21 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="2: connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="117-117"];
m47_22 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="1: var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="119-119"];
m47_24 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="2: var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="123-124"];
m47_23 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="2: recurringJobIds", span="121-121"];
m47_28 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="1: Logger.WarnException(\r\n                            String.Format(\r\n                                ''Recurring job '{0}' can not be scheduled due to job load exception.'',\r\n                                recurringJobId),\r\n                            ex)", span="137-141"];
m47_25 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="2: recurringJob == null", span="126-126"];
m47_27 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="RedisStoredValues.cs", label="2: JobLoadException", span="135-135"];
m47_30 [cluster="Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="RedisStoredValues.cs", label="Exit Hangfire.Server.RecurringJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="110-110"];
m47_39 [cluster="Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", file="RedisStoredValues.cs", label="Entry Hangfire.Server.IThrottler.Delay(System.Threading.CancellationToken)", span="23-23"];
m47_34 [cluster="Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", file="RedisStoredValues.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
m47_4 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RedisStoredValues.cs", label="Entry Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95"];
m47_5 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RedisStoredValues.cs", label="1: factory == null", span="100-100"];
m47_7 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RedisStoredValues.cs", label="0: instantFactory == null", span="101-101"];
m47_9 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RedisStoredValues.cs", label="2: throttler == null", span="102-102"];
m47_11 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RedisStoredValues.cs", label="2: _factory = factory", span="104-104"];
m47_12 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RedisStoredValues.cs", label="2: _instantFactory = instantFactory", span="105-105"];
m47_13 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RedisStoredValues.cs", label="1: _throttler = throttler", span="106-106"];
m47_6 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RedisStoredValues.cs", label="1: throw new ArgumentNullException(''factory'');", span="100-100"];
m47_8 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RedisStoredValues.cs", label="1: throw new ArgumentNullException(''instantFactory'');", span="101-101"];
m47_10 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", color=red, community=0, file="RedisStoredValues.cs", label="1: throw new ArgumentNullException(''throttler'');", span="102-102"];
m47_14 [cluster="Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", file="RedisStoredValues.cs", label="Exit Hangfire.Server.RecurringJobScheduler.RecurringJobScheduler(Hangfire.Client.IBackgroundJobFactory, System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>, Hangfire.Server.IThrottler)", span="95-95"];
m47_36 [cluster="Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", file="RedisStoredValues.cs", label="Entry Hangfire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
m47_81 [cluster="Hangfire.Logging.ILog.DebugFormat(string, params object[])", file="RedisStoredValues.cs", label="Entry Hangfire.Logging.ILog.DebugFormat(string, params object[])", span="122-122"];
m47_86 [cluster="Hangfire.Logging.ILog.ErrorException(string, System.Exception)", file="RedisStoredValues.cs", label="Entry Hangfire.Logging.ILog.ErrorException(string, System.Exception)", span="159-159"];
m47_70 [cluster="System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", file="RedisStoredValues.cs", label="Entry System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m47_80 [cluster="Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", file="RedisStoredValues.cs", label="Entry Hangfire.Client.IBackgroundJobFactory.Create(Hangfire.Client.CreateContext)", span="31-31"];
m47_87 [file="RedisStoredValues.cs", label="Hangfire.Server.RecurringJobScheduler", span=""];
m49_0 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="RedisWriteOnlyJob.cs", label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="23-23"];
m49_1 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="0: ServerTimeout = ServerWatchdog.DefaultServerTimeout", span="25-25"];
m49_2 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", color=green, community=0, file="RedisWriteOnlyJob.cs", label="2: CheckInterval = ServerWatchdog.DefaultCheckInterval", span="26-26"];
m49_3 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="RedisWriteOnlyJob.cs", label="Exit Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="23-23"];
m49_4 [file="RedisWriteOnlyJob.cs", label="Hangfire.Server.ServerWatchdogOptions", span=""];
m53_22 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="37-37"];
m53_23 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: _transaction.Dispose()", span="39-39"];
m53_24 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Dispose()", span="37-37"];
m53_14 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyList.RedisWriteOnlyList(IRedisTransaction)", span="10-10"];
m53_11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="RedisWriteOnlyTransaction.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m53_21 [cluster="Unk.Commit", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Commit", span=""];
m53_15 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyQueue.RedisWriteOnlyQueue(IRedisTransaction)", span="10-10"];
m53_25 [cluster="Unk.Dispose", file="RedisWriteOnlyTransaction.cs", label="Entry Unk.Dispose", span=""];
m53_16 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyJob.RedisWriteOnlyJob(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyJob.RedisWriteOnlyJob(IRedisTransaction)", span="12-12"];
m53_17 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyCounter.RedisWriteOnlyCounter(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyCounter.RedisWriteOnlyCounter(IRedisTransaction)", span="10-10"];
m53_18 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="32-32"];
m53_19 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="0: return _transaction.Commit();", span="34-34"];
m53_20 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="32-32"];
m53_13 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlySet.RedisWriteOnlySet(IRedisTransaction)", span="10-10"];
m53_12 [cluster="HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.DataTypes.RedisWriteOnlyValue.RedisWriteOnlyValue(IRedisTransaction)", span="10-10"];
m53_0 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="11-11"];
m53_1 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: transaction == null", span="13-13"];
m53_2 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: throw new ArgumentNullException(''transaction'');", span="13-13"];
m53_3 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="2: _transaction = transaction", span="15-15"];
m53_4 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="2: Values = new RedisWriteOnlyValue(transaction)", span="17-17"];
m53_5 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Sets = new RedisWriteOnlySet(transaction)", span="18-18"];
m53_6 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Lists = new RedisWriteOnlyList(transaction)", span="19-19"];
m53_7 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Queues = new RedisWriteOnlyQueue(transaction)", span="20-20"];
m53_8 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Jobs = new RedisWriteOnlyJob(transaction)", span="21-21"];
m53_9 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", color=green, community=0, file="RedisWriteOnlyTransaction.cs", label="1: Counters = new RedisWriteOnlyCounter(transaction)", span="22-22"];
m53_10 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="RedisWriteOnlyTransaction.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="11-11"];
m53_26 [file="RedisWriteOnlyTransaction.cs", label="HangFire.Redis.RedisWriteOnlyTransaction", span=""];
m56_20 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ScheduledState.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m56_53 [cluster="System.Collections.Generic.List<T>.List()", file="ScheduledState.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m56_56 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="ScheduledState.cs", label="Entry HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="119-119"];
m56_68 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="ScheduledState.cs", label="var components = _storage.GetComponents()", span="121-121"];
m56_69 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="ScheduledState.cs", label="return components\r\n                .Select(component => new ServerComponentRunner(component))\r\n                .ToArray();", span="123-125"];
m56_70 [cluster="HangFire.BackgroundJobServer.GetStorageComponentRunners()", file="ScheduledState.cs", label="Exit HangFire.BackgroundJobServer.GetStorageComponentRunners()", span="119-119"];
m56_24 [cluster="string.Format(string, object, object)", file="ScheduledState.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m56_4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", span="46-46"];
m56_5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="workerCount <= 0", span="48-48"];
m56_7 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="queues == null", span="49-49"];
m56_9 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="queues.Length == 0", span="50-50"];
m56_11 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="storage == null", span="51-51"];
m56_13 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="_storage = storage", span="53-53"];
m56_14 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="_workerCount = workerCount", span="54-54"];
m56_15 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="_queues = queues", span="55-55"];
m56_6 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="throw new ArgumentOutOfRangeException(''workerCount'', ''Worker count value must be more than zero.'');", span="48-48"];
m56_8 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="throw new ArgumentNullException(''queues'');", span="49-49"];
m56_10 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="throw new ArgumentException(''You should specify at least one queue to listen.'', ''queues'');", span="50-50"];
m56_12 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="throw new ArgumentNullException(''storage'');", span="51-51"];
m56_16 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="_serverId = String.Format(''{0}:{1}'', Environment.MachineName.ToLowerInvariant(), Process.GetCurrentProcess().Id)", span="57-57"];
m56_17 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="_serverRunner = GetServerRunner()", span="60-60"];
m56_18 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", file="ScheduledState.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(int, string[], HangFire.JobStorage)", span="46-46"];
m56_71 [cluster="HangFire.JobStorage.GetComponents()", file="ScheduledState.cs", label="Entry HangFire.JobStorage.GetComponents()", span="57-57"];
m56_19 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="ScheduledState.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m56_44 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ScheduledState.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m56_23 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="ScheduledState.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m56_29 [cluster="HangFire.Server.IServerComponentRunner.Start()", file="ScheduledState.cs", label="Entry HangFire.Server.IServerComponentRunner.Start()", span="22-22"];
m56_0 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="ScheduledState.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="36-36"];
m56_1 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", file="ScheduledState.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(params string[])", span="36-36"];
m56_2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="ScheduledState.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41"];
m56_3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="ScheduledState.cs", label="Exit HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="41-41"];
m56_73 [cluster="Unk.ToArray", file="ScheduledState.cs", label="Entry Unk.ToArray", span=""];
m56_54 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="ScheduledState.cs", label="Entry HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="107-107"];
m56_58 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="ScheduledState.cs", label="yield return new ServerComponentRunner(\r\n                new ServerHeartbeat(_storage, _serverId));", span="109-110"];
m56_59 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="ScheduledState.cs", label="yield return new WorkerManager(\r\n                _serverId, _workerCount, _queues, _storage, new JobPerformanceProcess(), new StateMachineFactory(_storage));", span="112-113"];
m56_60 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="ScheduledState.cs", label="yield return new ServerComponentRunner(\r\n                new ServerWatchdog(_storage));", span="115-116"];
m56_61 [cluster="HangFire.BackgroundJobServer.GetCommonComponentRunners()", file="ScheduledState.cs", label="Exit HangFire.BackgroundJobServer.GetCommonComponentRunners()", span="107-107"];
m56_63 [cluster="HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", file="ScheduledState.cs", label="Entry HangFire.Server.ServerHeartbeat.ServerHeartbeat(HangFire.JobStorage, string)", span="28-28"];
m56_43 [cluster="HangFire.Server.JobServer.JobServer(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", file="ScheduledState.cs", label="Entry HangFire.Server.JobServer.JobServer(string, HangFire.Server.ServerContext, HangFire.JobStorage, System.Lazy<HangFire.Server.IServerComponentRunner>)", span="28-28"];
m56_33 [cluster="HangFire.Server.IServerComponentRunner.Stop()", file="ScheduledState.cs", label="Entry HangFire.Server.IServerComponentRunner.Stop()", span="23-23"];
m56_65 [cluster="HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", file="ScheduledState.cs", label="Entry HangFire.Server.JobPerformanceProcess.JobPerformanceProcess()", span="28-28"];
m56_30 [cluster="HangFire.BackgroundJobServer.Stop()", file="ScheduledState.cs", label="Entry HangFire.BackgroundJobServer.Stop()", span="68-68"];
m56_31 [cluster="HangFire.BackgroundJobServer.Stop()", file="ScheduledState.cs", label="_serverRunner.Stop()", span="70-70"];
m56_32 [cluster="HangFire.BackgroundJobServer.Stop()", file="ScheduledState.cs", label="Exit HangFire.BackgroundJobServer.Stop()", span="68-68"];
m56_42 [cluster="HangFire.Server.ServerContext.ServerContext()", file="ScheduledState.cs", label="Entry HangFire.Server.ServerContext.ServerContext()", span="18-18"];
m56_45 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", file="ScheduledState.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent, HangFire.Server.ServerComponentRunnerOptions)", span="41-41"];
m56_47 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="ScheduledState.cs", label="Entry HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="97-97"];
m56_48 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="ScheduledState.cs", label="var componentRunners = new List<IServerComponentRunner>()", span="99-99"];
m56_49 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="ScheduledState.cs", label="componentRunners.AddRange(GetCommonComponentRunners())", span="101-101"];
m56_50 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="ScheduledState.cs", label="componentRunners.AddRange(GetStorageComponentRunners())", span="102-102"];
m56_51 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="ScheduledState.cs", label="return new ServerComponentRunnerCollection(componentRunners);", span="104-104"];
m56_52 [cluster="HangFire.BackgroundJobServer.GetServerComponentsRunner()", file="ScheduledState.cs", label="Exit HangFire.BackgroundJobServer.GetServerComponentsRunner()", span="97-97"];
m56_22 [cluster="string.ToLowerInvariant()", file="ScheduledState.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m56_74 [cluster="lambda expression", file="ScheduledState.cs", label="Entry lambda expression", span="124-124"];
m56_75 [cluster="lambda expression", file="ScheduledState.cs", label="new ServerComponentRunner(component)", span="124-124"];
m56_76 [cluster="lambda expression", file="ScheduledState.cs", label="Exit lambda expression", span="124-124"];
m56_57 [cluster="HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", file="ScheduledState.cs", label="Entry HangFire.Server.ServerComponentRunnerCollection.ServerComponentRunnerCollection(System.Collections.Generic.IEnumerable<HangFire.Server.IServerComponentRunner>)", span="26-26"];
m56_55 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="ScheduledState.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m56_72 [cluster="Unk.Select", file="ScheduledState.cs", label="Entry Unk.Select", span=""];
m56_26 [cluster="HangFire.BackgroundJobServer.Start()", file="ScheduledState.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="63-63"];
m56_27 [cluster="HangFire.BackgroundJobServer.Start()", file="ScheduledState.cs", label="_serverRunner.Start()", span="65-65"];
m56_28 [cluster="HangFire.BackgroundJobServer.Start()", file="ScheduledState.cs", label="Exit HangFire.BackgroundJobServer.Start()", span="63-63"];
m56_64 [cluster="HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", file="ScheduledState.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(string, int, string[], HangFire.JobStorage, HangFire.Server.IJobPerformanceProcess, HangFire.States.IStateMachineFactory)", span="29-29"];
m56_21 [cluster="System.ArgumentException.ArgumentException(string, string)", file="ScheduledState.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m56_25 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="ScheduledState.cs", label="Entry HangFire.BackgroundJobServer.GetServerRunner()", span="78-78"];
m56_38 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="ScheduledState.cs", label="var context = new ServerContext\r\n            {\r\n                Queues = _queues,\r\n                WorkerCount = _workerCount\r\n            }", span="80-84"];
m56_39 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="ScheduledState.cs", label="var server = new JobServer(\r\n                _serverId, \r\n                context, \r\n                _storage, \r\n                new Lazy<IServerComponentRunner>(GetServerComponentsRunner))", span="86-90"];
m56_40 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="ScheduledState.cs", label="return new ServerComponentRunner(\r\n                server, \r\n                new ServerComponentRunnerOptions { ShutdownTimeout = ServerShutdownTimeout });", span="92-94"];
m56_41 [cluster="HangFire.BackgroundJobServer.GetServerRunner()", file="ScheduledState.cs", label="Exit HangFire.BackgroundJobServer.GetServerRunner()", span="78-78"];
m56_46 [cluster="HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", file="ScheduledState.cs", label="Entry HangFire.Server.ServerComponentRunnerOptions.ServerComponentRunnerOptions()", span="24-24"];
m56_34 [cluster="HangFire.BackgroundJobServer.Dispose()", file="ScheduledState.cs", label="Entry HangFire.BackgroundJobServer.Dispose()", span="73-73"];
m56_35 [cluster="HangFire.BackgroundJobServer.Dispose()", file="ScheduledState.cs", label="_serverRunner.Dispose()", span="75-75"];
m56_36 [cluster="HangFire.BackgroundJobServer.Dispose()", file="ScheduledState.cs", label="Exit HangFire.BackgroundJobServer.Dispose()", span="73-73"];
m56_62 [cluster="HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", file="ScheduledState.cs", label="Entry HangFire.Server.ServerComponentRunner.ServerComponentRunner(HangFire.Server.IServerComponent)", span="36-36"];
m56_37 [cluster="System.IDisposable.Dispose()", file="ScheduledState.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m56_67 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="ScheduledState.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="29-29"];
m56_66 [cluster="HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", file="ScheduledState.cs", label="Entry HangFire.States.StateMachineFactory.StateMachineFactory(HangFire.JobStorage)", span="16-16"];
m56_77 [file="ScheduledState.cs", label="HangFire.BackgroundJobServer", span=""];
m57_0 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="ScheduledState.feature.cs", label="Entry Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="33-33"];
m57_1 [cluster="Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", file="ScheduledState.feature.cs", label="Exit Hangfire.Client.CreateJobFailedException.CreateJobFailedException(string, System.Exception)", span="33-33"];
m58_39 [cluster="HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", file="SchedulePoller.cs", label="Entry HangFire.Server.JobServer.RetryOnException(System.Action, System.Threading.WaitHandle)", span="151-151"];
m58_21 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="SchedulePoller.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m58_51 [cluster="System.Threading.Thread.Join()", file="SchedulePoller.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m58_0 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="SchedulePoller.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m58_1 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="SchedulePoller.cs", label="_storage = storage", span="36-36"];
m58_2 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="SchedulePoller.cs", label="_pollInterval = pollInterval", span="37-37"];
m58_3 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="SchedulePoller.cs", label="Exit HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m58_17 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="SchedulePoller.cs", label="Entry HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m58_38 [cluster="Unk.Info", file="SchedulePoller.cs", label="Entry Unk.Info", span=""];
m58_41 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="SchedulePoller.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m58_16 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="SchedulePoller.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m58_18 [cluster="string.IsNullOrEmpty(string)", file="SchedulePoller.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m58_22 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Entry HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="65-65"];
m58_23 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Logger.Info(''Schedule poller has been started.'')", span="69-69"];
m58_24 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="int enqueued = 0", span="71-71"];
m58_25 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label=true, span="73-73"];
m58_29 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="enqueued++", span="85-85"];
m58_30 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="enqueued != 0", span="89-89"];
m58_31 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Logger.InfoFormat(''{0} scheduled jobs were enqueued.'', enqueued)", span="91-91"];
m58_26 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="var wasEnqueued = false", span="75-75"];
m58_34 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Logger.Info(''Schedule poller has been stopped.'')", span="101-101"];
m58_27 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="JobServer.RetryOnException(\r\n                        () =>\r\n                        {\r\n                            wasEnqueued = EnqueueNextScheduledJob();\r\n                        }, _cts.Token.WaitHandle)", span="77-81"];
m58_28 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="wasEnqueued && !_cts.IsCancellationRequested", span="83-83"];
m58_33 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="_cts.Token.WaitHandle.WaitOne(_pollInterval)", span="95-95"];
m58_32 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="enqueued = 0", span="92-92"];
m58_35 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label=Exception, span="103-103"];
m58_36 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Logger.Fatal(\r\n                    ''Unexpected exception caught in the schedule poller. Scheduled jobs will not be added to their queues.'',\r\n                    ex)", span="105-107"];
m58_37 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", file="SchedulePoller.cs", label="Exit HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Work()", span="65-65"];
m58_40 [cluster="Unk.InfoFormat", file="SchedulePoller.cs", label="Entry Unk.InfoFormat", span=""];
m58_46 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="Entry HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="111-111"];
m58_47 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="_cts.Cancel()", span="113-113"];
m58_48 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="thread.Join()", span="114-114"];
m58_49 [cluster="HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", file="SchedulePoller.cs", label="Exit HangFire.Server.Components.SchedulePoller.HangFire.Server.IThreadWrappable.Dispose(System.Threading.Thread)", span="111-111"];
m58_42 [cluster="Unk.Fatal", file="SchedulePoller.cs", label="Entry Unk.Fatal", span=""];
m58_4 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="Entry HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", span="40-40"];
m58_5 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var connection = _storage.GetConnection()", span="42-42"];
m58_6 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="44-44"];
m58_7 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var jobId = connection.Sets\r\n                    .GetFirstByLowestScore(''schedule'', 0, timestamp)", span="47-48"];
m58_10 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="var stateMachine = new StateMachine(connection)", span="55-55"];
m58_8 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="String.IsNullOrEmpty(jobId)", span="50-50"];
m58_12 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", color=green, community=0, file="SchedulePoller.cs", label="1: stateMachine.ChangeState(jobId, enqueuedState, ScheduledState.Name)", span="58-58"];
m58_9 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="return false;", span="52-52"];
m58_11 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", color=green, community=0, file="SchedulePoller.cs", label="1: var enqueuedState = new EnqueuedState(''Enqueued by the schedule poller'')", span="56-56"];
m58_13 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="return true;", span="60-60"];
m58_14 [cluster="HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", file="SchedulePoller.cs", label="Exit HangFire.Server.Components.SchedulePoller.EnqueueNextScheduledJob()", span="40-40"];
m58_50 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="SchedulePoller.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m58_43 [cluster="lambda expression", file="SchedulePoller.cs", label="Entry lambda expression", span="78-81"];
m58_44 [cluster="lambda expression", file="SchedulePoller.cs", label="wasEnqueued = EnqueueNextScheduledJob()", span="80-80"];
m58_45 [cluster="lambda expression", file="SchedulePoller.cs", label="Exit lambda expression", span="78-81"];
m58_19 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", file="SchedulePoller.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection)", span="36-36"];
m58_20 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string)", file="SchedulePoller.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string)", span="31-31"];
m58_15 [cluster="HangFire.JobStorage.GetConnection()", file="SchedulePoller.cs", label="Entry HangFire.JobStorage.GetConnection()", span="45-45"];
m58_52 [file="SchedulePoller.cs", label="HangFire.Server.Components.SchedulePoller", span=""];
m59_4 [cluster="Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", file="SchedulePoller.feature.cs", label="Entry Hangfire.Dashboard.LocalRequestsOnlyAuthorizationFilter.LocalRequestsOnlyAuthorizationFilter()", span="22-22"];
m59_0 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="SchedulePoller.feature.cs", label="Entry Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m59_1 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="SchedulePoller.feature.cs", label="AppPath = ''/''", span="25-25"];
m59_2 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="SchedulePoller.feature.cs", label="AuthorizationFilters = new[] { new LocalRequestsOnlyAuthorizationFilter() }", span="26-26"];
m59_3 [cluster="Hangfire.DashboardOptions.DashboardOptions()", file="SchedulePoller.feature.cs", label="Exit Hangfire.DashboardOptions.DashboardOptions()", span="23-23"];
m59_5 [file="SchedulePoller.feature.cs", label="Hangfire.DashboardOptions", span=""];
m60_64 [cluster="HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", file="SchedulePollerSteps.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledJobs(int, int)", span="33-33"];
m60_59 [cluster="Unk.TryParse", file="SchedulePollerSteps.cs", label="Entry Unk.TryParse", span=""];
m60_57 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SchedulePollerSteps.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m60_65 [cluster="HangFire.Web.RazorPage.Write(object)", file="SchedulePollerSteps.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m60_60 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="SchedulePollerSteps.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m60_58 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SchedulePollerSteps.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m60_0 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m60_1 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\r\n'')", span="51-51"];
m60_2 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Layout = new LayoutPage { Title = ''Scheduled Jobs'' }", span="62-62"];
m60_3 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="int from, perPage", span="64-64"];
m60_4 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", color=red, community=0, file="SchedulePollerSteps.cs", label="1: int.TryParse(Request.QueryString[''from''], out from)", span="66-66"];
m60_5 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67"];
m60_9 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="pager = new Pager(from, perPage, monitor.ScheduledCount())\r\n        {\r\n            BasePageUrl = Request.LinkTo(''/scheduled'')\r\n        }", span="74-77"];
m60_6 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Pager pager", span="69-69"];
m60_7 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="JobList<ScheduledJobDto> scheduledJobs", span="70-70"];
m60_8 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="72-72"];
m60_10 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="scheduledJobs = monitor.ScheduledJobs(pager.FromRecord, pager.RecordsPerPage)", span="79-79"];
m60_12 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="pager.TotalPageCount == 0", span="91-91"];
m60_19 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="151-151"];
m60_55 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(RenderPartial(new Paginator(pager)))", span="383-383"];
m60_11 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\r\n'')", span="86-86"];
m60_21 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label=scheduledJobs, span="176-176"];
m60_13 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        There are no scheduled jobs.\r\n    </d'' +\r\n''iv>\r\n'')", span="97-98"];
m60_14 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\r\n        <div class=\''btn-toolbar btn-toolbar-top\''>'' +\r\n''\r\n            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\r\n     '' +\r\n''               data-url=\'''')", span="110-112"];
m60_15 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(Request.LinkTo(''/scheduled/enqueue''))", span="117-117"];
m60_16 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Enqueueing...''''>\r\n                <span class=''''glyphicon glyphicon-play''''></span>\r\n                Enqueue now\r\n            </button>\r\n\r\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\r\n                    data-url='''''')", span="122-129"];
m60_17 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(Request.LinkTo(''/scheduled/delete''))", span="134-134"];
m60_18 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(@''''''\r\n                    data-loading-text=''''Deleting...''''\r\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\r\n                <span class=''''glyphicon glyphicon-remove''''></span>\r\n                Delete selected\r\n            </button>\r\n\r\n            '')", span="139-146"];
m60_20 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(@''\r\n        </div>\r\n\r\n        <table class=''''table''''>\r\n            <thead>\r\n                <tr>\r\n                    <th class=''''min-width''''>\r\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\r\n                    </th>\r\n                    <th class=''''min-width''''>Id</th>\r\n                    <th>Enqueue</th>\r\n                    <th>Job</th>\r\n                    <th class=''''align-right''''>Scheduled</th>\r\n                </tr>\r\n            </thead>\r\n'')", span="156-171"];
m60_22 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''                <tr class=\''js-jobs-list-row '')", span="182-182"];
m60_54 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''        </table>\r\n    </div>\r\n'')", span="371-371"];
m60_23 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(!job.Value.InScheduledState ? ''obsolete-data'' : null)", span="187-187"];
m60_24 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral('' '')", span="192-192"];
m60_25 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(job.Value.InScheduledState ? ''hover'' : null)", span="197-197"];
m60_26 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\''>\r\n                    <td>\r\n'')", span="202-202"];
m60_27 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="job.Value.InScheduledState", span="207-207"];
m60_28 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''                            <input type=\''checkbox\'' class=\''js-jobs-list-checkbox\'' '' +\r\n''name=\''jobs[]\'' value=\'''')", span="213-214"];
m60_31 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <a href=\'''')", span="234-235"];
m60_29 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(job.Key)", span="219-219"];
m60_32 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="240-240"];
m60_30 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\'' />\r\n'')", span="224-224"];
m60_33 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\''>\r\n                            '')", span="245-245"];
m60_34 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(HtmlHelper.JobId(job.Key))", span="250-250"];
m60_35 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\r\n                        </a>\r\n'')", span="255-255"];
m60_36 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="!job.Value.InScheduledState", span="260-260"];
m60_37 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="266-267"];
m60_38 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''                    </td>\r\n                    <td class=\''min-width\''>\r\n          '' +\r\n''              <span data-moment=\'''')", span="277-278"];
m60_39 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueueAt))", span="283-283"];
m60_40 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\''>\r\n                            '')", span="288-288"];
m60_41 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(job.Value.EnqueueAt)", span="293-293"];
m60_42 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\r\n                        </span>\r\n                    </td>\r\n                   '' +\r\n'' <td>\r\n                        <a class=\''job-method\'' href=\'''')", span="298-299"];
m60_43 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="304-304"];
m60_44 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\''>\r\n                            '')", span="309-309"];
m60_45 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="314-314"];
m60_46 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\r\n                        </a>\r\n                    </td>\r\n                    <t'' +\r\n''d class=\''align-right\''>\r\n'')", span="319-320"];
m60_47 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="job.Value.ScheduledAt != null", span="325-325"];
m60_48 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="331-331"];
m60_53 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="361-361"];
m60_49 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.ScheduledAt.Value))", span="336-336"];
m60_50 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\''>\r\n                                '')", span="341-341"];
m60_51 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Write(job.Value.ScheduledAt)", span="346-346"];
m60_52 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="WriteLiteral(''\r\n                            </span>\r\n'')", span="351-351"];
m60_56 [cluster="HangFire.Web.Pages.ScheduledJobsPage.Execute()", file="SchedulePollerSteps.cs", label="Exit HangFire.Web.Pages.ScheduledJobsPage.Execute()", span="47-47"];
m60_66 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SchedulePollerSteps.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m60_68 [cluster="Unk.Write", file="SchedulePollerSteps.cs", label="Entry Unk.Write", span=""];
m60_63 [cluster="HttpRequestBase.LinkTo(string)", file="SchedulePollerSteps.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m60_71 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="SchedulePollerSteps.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m60_72 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SchedulePollerSteps.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m60_62 [cluster="HangFire.Storage.IMonitoringApi.ScheduledCount()", file="SchedulePollerSteps.cs", label="Entry HangFire.Storage.IMonitoringApi.ScheduledCount()", span="38-38"];
m60_67 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SchedulePollerSteps.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m60_70 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SchedulePollerSteps.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m60_61 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SchedulePollerSteps.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m60_69 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="SchedulePollerSteps.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m60_73 [file="SchedulePollerSteps.cs", label="HangFire.Web.Pages.ScheduledJobsPage", span=""];
m61_43 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="Server.feature.cs", label="testRunner.When(''the \'Test\' server starts with 5 workers'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="98-98"];
m61_10 [cluster="HangFire.Tests.ServerFeature.FeatureTearDown()", file="Server.feature.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m61_66 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="Server.feature.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153"];
m61_67 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="Server.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its properties list'', ((string[])(null)))", span="155-155"];
m61_68 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="Server.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="157-157"];
m61_69 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="Server.feature.cs", label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="159-159"];
m61_70 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="Server.feature.cs", label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server properties'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="161-161"];
m61_71 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="Server.feature.cs", label="this.ScenarioCleanup()", span="163-163"];
m61_72 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", file="Server.feature.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsPropertiesList()", span="153-153"];
m61_22 [cluster="Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", file="Server.feature.cs", label="Entry Hangfire.Server.BackgroundProcessContext.Sleep(System.TimeSpan)", span="23-23"];
m61_23 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="Server.feature.cs", label="Entry Hangfire.Server.DelayedJobScheduler.ToString()", span="124-124"];
m61_24 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="Server.feature.cs", label="return GetType().Name;", span="126-126"];
m61_25 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="Server.feature.cs", label="Exit Hangfire.Server.DelayedJobScheduler.ToString()", span="124-124"];
m61_26 [cluster="object.GetType()", file="Server.feature.cs", label="Entry object.GetType()", span="0-0"];
m61_27 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="Server.feature.cs", label="var connection = context.Storage.GetConnection()", span="131-131"];
m61_28 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="Server.feature.cs", label="connection.AcquireDistributedLock(''locks:schedulepoller'', DefaultLockTimeout)", span="132-132"];
m61_29 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="Server.feature.cs", label="1: var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="134-134"];
m61_52 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="Server.feature.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m61_53 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="Server.feature.cs", label="Hangfire.Server.DelayedJobScheduler", span=""];
m61_54 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="Server.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="123-123"];
m61_55 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="Server.feature.cs", label="testRunner.When(''the \'Test\' server starts with the queues critical, high'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="125-125"];
m61_56 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="Server.feature.cs", label="testRunner.Then(''the \'Test\' server\'s queues list should contain queues critical, high'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="127-127"];
m61_57 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="Server.feature.cs", label="this.ScenarioCleanup()", span="129-129"];
m61_58 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", file="Server.feature.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsQueues()", span="119-119"];
m61_59 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="Server.feature.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", span="136-136"];
m61_60 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="Server.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should remove itself from the servers set'', ((string[])(null)))", span="138-138"];
m61_61 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="Server.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="140-140"];
m61_62 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="Server.feature.cs", label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="142-142"];
m61_63 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="Server.feature.cs", label="testRunner.Then(''the servers set should not contain the \'Test\' server'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="144-144"];
m61_64 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="Server.feature.cs", label="this.ScenarioCleanup()", span="146-146"];
m61_65 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", file="Server.feature.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldRemoveItselfFromTheServersSet()", span="136-136"];
m61_21 [cluster="Hangfire.Logging.ILog.InfoFormat(string, params object[])", file="Server.feature.cs", label="Entry Hangfire.Logging.ILog.InfoFormat(string, params object[])", span="210-210"];
m61_47 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="Server.feature.cs", label="testRunner.Then(''the \'Test\' server\'s properties should contain the following items:'', ((string)(null)), table1, ''Then '')", span="110-110"];
m61_41 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="Server.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should publicate its properties'', ((string[])(null)))", span="94-94"];
m61_42 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="Server.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="96-96"];
m61_46 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="Server.feature.cs", label="table1.AddRow(new string[] {\r\n                        ''StartedAt'',\r\n                        ''<UtcNow timestamp>''})", span="106-108"];
m61_18 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="Server.feature.cs", label="context.Sleep(_pollingDelay)", span="120-120"];
m61_19 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="Server.feature.cs", label="Exit Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="101-101"];
m61_20 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="Server.feature.cs", label="Entry Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="129-129"];
m61_34 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", color=green, community=0, file="Server.feature.cs", label="1: testRunner.Then(''the servers set should contain the \'Test\' server'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="83-83"];
m61_30 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="Server.feature.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75"];
m61_33 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="Server.feature.cs", label="testRunner.When(''the \'Test\' server starts'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="81-81"];
m61_35 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="Server.feature.cs", label="this.ScenarioCleanup()", span="85-85"];
m61_38 [cluster="Unk.When", color=green, community=0, file="Server.feature.cs", label="1: Entry Unk.When", span=""];
m61_36 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="Server.feature.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", span="75-75"];
m61_37 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="Server.feature.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m61_39 [cluster="Unk.Then", file="Server.feature.cs", label="Entry Unk.Then", span=""];
m61_32 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="Server.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="79-79"];
m61_31 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldAddItselfToTheServersSet()", file="Server.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server starts, it should add itself to the servers set'', ((string[])(null)))", span="77-77"];
m61_40 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="Server.feature.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", span="92-92"];
m61_0 [cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Server.feature.cs", label="Entry HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m61_1 [cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Server.feature.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m61_2 [cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Server.feature.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Server'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m61_3 [cluster="HangFire.Tests.ServerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="Server.feature.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m61_4 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="Server.feature.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="88-88"];
m61_48 [cluster="HangFire.Tests.ServerFeature.WhenAServerStartsItShouldPublicateItsProperties()", file="Server.feature.cs", label="this.ScenarioCleanup()", span="112-112"];
m61_51 [cluster="Unk.AddRow", file="Server.feature.cs", label="Entry Unk.AddRow", span=""];
m61_5 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="Server.feature.cs", label="stateChanger == null", span="90-90"];
m61_50 [cluster="TechTalk.SpecFlow.Table.cstr", file="Server.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m61_44 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="Server.feature.cs", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
m61_45 [cluster="string.IsNullOrEmpty(string)", file="Server.feature.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m61_49 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="Server.feature.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m61_13 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="Server.feature.cs", label="EnqueueNextScheduledJob(context)", span="105-105"];
m61_7 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="Server.feature.cs", label="1: _stateChanger = stateChanger", span="92-92"];
m61_14 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="Server.feature.cs", label="jobsEnqueued++", span="107-107"];
m61_15 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Server.feature.cs", label="1: context.CancellationToken.IsCancellationRequested", span="109-109"];
m61_16 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=red, community=0, file="Server.feature.cs", label="1: jobsEnqueued != 0", span="115-115"];
m61_17 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="Server.feature.cs", label="1: Logger.InfoFormat(''{0} scheduled job(s) enqueued.'', jobsEnqueued)", span="117-117"];
m61_73 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="Server.feature.cs", label="Entry HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170"];
m61_74 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="Server.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a server shuts down, it should clear its queues'', ((string[])(null)))", span="172-172"];
m61_75 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="Server.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="174-174"];
m61_76 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="Server.feature.cs", label="testRunner.When(''the \'Test\' server shuts down'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="176-176"];
m61_77 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="Server.feature.cs", label="testRunner.Then(''the storage should not contain an entry for the \'Test\' server queues'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="178-178"];
m61_78 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="Server.feature.cs", label="this.ScenarioCleanup()", span="180-180"];
m61_79 [cluster="HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", file="Server.feature.cs", label="Exit HangFire.Tests.ServerFeature.WhenAServerShutsDownItShouldClearItsQueues()", span="170-170"];
m61_6 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="Server.feature.cs", label="throw new ArgumentNullException(''stateChanger'');", span="90-90"];
m61_9 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="Server.feature.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="88-88"];
m61_11 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="Server.feature.cs", label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="101-101"];
m61_12 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="Server.feature.cs", label="var jobsEnqueued = 0", span="103-103"];
m61_8 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="Server.feature.cs", label="1: _pollingDelay = pollingDelay", span="93-93"];
m61_80 [file="Server.feature.cs", label="HangFire.Tests.ServerFeature", span=""];
m62_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ServerFilters.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m62_0 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="ServerFilters.feature.cs", label="Entry Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", span="25-25"];
m62_1 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", color=green, community=0, file="ServerFilters.feature.cs", label="0: jobStorage == null", span="31-31"];
m62_2 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", color=green, community=0, file="ServerFilters.feature.cs", label="0: throw new ArgumentNullException(''jobStorage'');", span="31-31"];
m62_3 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", color=green, community=0, file="ServerFilters.feature.cs", label="0: owinEnvironment == null", span="32-32"];
m62_4 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", color=green, community=0, file="ServerFilters.feature.cs", label="0: throw new ArgumentNullException(''owinEnvironment'');", span="32-32"];
m62_5 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", color=green, community=0, file="ServerFilters.feature.cs", label="0: uriMatch == null", span="33-33"];
m62_6 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", color=green, community=0, file="ServerFilters.feature.cs", label="0: throw new ArgumentNullException(''uriMatch'');", span="33-33"];
m62_7 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="ServerFilters.feature.cs", label="AppPath = appPath", span="35-35"];
m62_8 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="ServerFilters.feature.cs", label="JobStorage = jobStorage", span="36-36"];
m62_9 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="ServerFilters.feature.cs", label="OwinEnvironment = owinEnvironment", span="37-37"];
m62_10 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="ServerFilters.feature.cs", label="UriMatch = uriMatch", span="38-38"];
m62_11 [cluster="Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", file="ServerFilters.feature.cs", label="Exit Hangfire.Dashboard.RequestDispatcherContext.RequestDispatcherContext(string, Hangfire.JobStorage, System.Collections.Generic.IDictionary<string, object>, System.Text.RegularExpressions.Match)", span="25-25"];
m62_13 [file="ServerFilters.feature.cs", label="Hangfire.Dashboard.RequestDispatcherContext", span=""];
m63_44 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="ServerSteps.cs", label="_server.Dispose()", span="95-95"];
m63_10 [cluster="Unk.Given", file="ServerSteps.cs", label="Entry Unk.Given", span=""];
m63_43 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="ServerSteps.cs", label="WhenTheServerStarts(name)", span="94-94"];
m63_46 [cluster="Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", file="ServerSteps.cs", label="Entry Hangfire.States.StateChangeContext.StateChangeContext(Hangfire.JobStorage, Hangfire.Storage.IStorageConnection, string, Hangfire.States.IState, params string[])", span="35-35"];
m63_47 [cluster="Hangfire.States.EnqueuedState.EnqueuedState()", file="ServerSteps.cs", label="Entry Hangfire.States.EnqueuedState.EnqueuedState()", span="87-87"];
m63_48 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListContainsTheJob()", color=red, community=0, file="ServerSteps.cs", label="2: CollectionAssert.Contains(jobIds, JobSteps.DefaultJobId)", span="105-105"];
m63_49 [cluster="Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", file="ServerSteps.cs", label="Entry Hangfire.States.IBackgroundJobStateChanger.ChangeState(Hangfire.States.StateChangeContext)", span="25-25"];
m63_42 [cluster="HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerShutsDown(string)", span="92-92"];
m63_35 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="ServerSteps.cs", label="2: var appliedState = _stateChanger.ChangeState(new StateChangeContext(\r\n                    context.Storage,\r\n                    connection,\r\n                    jobId,\r\n                    new EnqueuedState { Reason = String.Format(''Triggered by {0}'', ToString()) }, \r\n                    ScheduledState.StateName))", span="159-164"];
m63_39 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="transaction.Commit()", span="174-174"];
m63_40 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="return true;", span="178-178"];
m63_20 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="context.Sleep(_pollingDelay)", span="134-134"];
m63_21 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="Exit Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113"];
m63_22 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="Entry Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", span="143-143"];
m63_5 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="ServerSteps.cs", label="1: stateChanger == null", span="106-106"];
m63_29 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="var connection = context.Storage.GetConnection()", span="145-145"];
m63_30 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="connection.AcquireDistributedLock(''locks:schedulepoller'', DefaultLockTimeout)", span="146-146"];
m63_31 [cluster="Hangfire.Server.DelayedJobScheduler.EnqueueNextScheduledJob(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="var timestamp = JobHelper.ToTimestamp(DateTime.UtcNow)", span="148-148"];
m63_66 [cluster="Unk.IsTrue", file="ServerSteps.cs", label="Entry Unk.IsTrue", span=""];
m63_76 [cluster="Unk.GetAllEntriesFromHash", file="ServerSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m63_6 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", color=green, community=0, file="ServerSteps.cs", label="2: throw new ArgumentNullException(''stateChanger'');", span="106-106"];
m63_7 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="ServerSteps.cs", label="_stateChanger = stateChanger", span="108-108"];
m63_8 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="ServerSteps.cs", label="_pollingDelay = pollingDelay", span="109-109"];
m63_9 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="ServerSteps.cs", label="Exit Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
m63_32 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", color=green, community=0, file="ServerSteps.cs", label="2: Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m63_33 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", color=green, community=0, file="ServerSteps.cs", label="2: CreateServer(name, workers, new [] { ''critical'' })", span="73-73"];
m63_36 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", span="77-77"];
m63_38 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", span="77-77"];
m63_34 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.WhenTheServerStartsWithWorkers(string, int)", span="71-71"];
m63_37 [cluster="HangFire.Tests.ServerSteps.WhenTheServerStartsWithTheQueues(string, string, string)", file="ServerSteps.cs", label="CreateServer(name, 1, new [] { queue1, queue2 })", span="79-79"];
m63_41 [cluster="HangFire.Server.JobServer.JobServer(HangFire.JobStorage, string, int, System.Collections.Generic.IEnumerable<string>)", file="ServerSteps.cs", label="Entry HangFire.Server.JobServer.JobServer(HangFire.JobStorage, string, int, System.Collections.Generic.IEnumerable<string>)", span="47-47"];
m63_27 [cluster="Hangfire.Server.DelayedJobScheduler.ToString()", file="ServerSteps.cs", label="Exit Hangfire.Server.DelayedJobScheduler.ToString()", span="138-138"];
m63_28 [cluster="Unk.AddItemToList", file="ServerSteps.cs", label="Entry Unk.AddItemToList", span=""];
m63_15 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="EnqueueNextScheduledJob(context)", span="119-119"];
m63_60 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="125-125"];
m63_61 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="ServerSteps.cs", label="Thread.Sleep(_serverStartupTimeout)", span="127-127"];
m63_62 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", color=red, community=0, file="ServerSteps.cs", label="0: Assert.IsTrue(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="128-128"];
m63_63 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldContainTheServer(string)", span="125-125"];
m63_51 [cluster="Unk.Contains", file="ServerSteps.cs", label="Entry Unk.Contains", span=""];
m63_52 [cluster="Hangfire.Storage.IWriteOnlyTransaction.Commit()", file="ServerSteps.cs", label="Entry Hangfire.Storage.IWriteOnlyTransaction.Commit()", span="54-54"];
m63_53 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="ServerSteps.cs", label="Hangfire.Server.DelayedJobScheduler", span=""];
m63_54 [cluster="HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheDequeuedJobsListDoesNotContainTheJob()", span="110-110"];
m63_78 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="146-146"];
m63_79 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="ServerSteps.cs", label="var registeredQueues = Redis.Client.GetAllItemsFromList(String.Format(''hangfire:server:{0}:queues'', name))", span="148-148"];
m63_81 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", color=red, community=0, file="ServerSteps.cs", label="2: Assert.AreEqual(queue1, registeredQueues[0])", span="151-151"];
m63_82 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", color=red, community=0, file="ServerSteps.cs", label="2: Assert.AreEqual(queue2, registeredQueues[1])", span="152-152"];
m63_80 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", color=red, community=0, file="ServerSteps.cs", label="2: Assert.AreEqual(2, registeredQueues.Count)", span="150-150"];
m63_83 [cluster="HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServerSQueuesListShouldContainQueues(string, string, string)", span="146-146"];
m63_71 [cluster="Unk.IsFalse", file="ServerSteps.cs", label="Entry Unk.IsFalse", span=""];
m63_84 [cluster="Unk.AreEqual", file="ServerSteps.cs", label="Entry Unk.AreEqual", span=""];
m63_24 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="ServerSteps.cs", label="Redis.Client.AddItemToSet(''hangfire:queues'', queue)", span="58-58"];
m63_50 [cluster="Unk.GetAllItemsFromList", file="ServerSteps.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m63_64 [cluster="System.Threading.Thread.Sleep(System.TimeSpan)", file="ServerSteps.cs", label="Entry System.Threading.Thread.Sleep(System.TimeSpan)", span="0-0"];
m63_45 [cluster="Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerSteps.cs", label="Entry Hangfire.Storage.IStorageConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="57-57"];
m63_25 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="ServerSteps.cs", label="Redis.Client.AddItemToList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                JobSteps.DefaultJobId)", span="59-61"];
m63_26 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m63_55 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", span="116-116"];
m63_56 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="ServerSteps.cs", label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', QueueSteps.DefaultQueue))", span="118-119"];
m63_57 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", color=red, community=0, file="ServerSteps.cs", label="2: CollectionAssert.DoesNotContain(jobIds, jobId)", span="121-121"];
m63_58 [cluster="HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheJobShouldBeRemovedFromTheDequeuedList(string)", span="116-116"];
m63_0 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.TearDown()", span="19-19"];
m63_1 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="ServerSteps.cs", label="_server != null", span="21-21"];
m63_2 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="ServerSteps.cs", label="_server.Dispose()", span="23-23"];
m63_3 [cluster="HangFire.Tests.ServerSteps.TearDown()", file="ServerSteps.cs", label="_server = null", span="24-24"];
m63_4 [cluster="Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", file="ServerSteps.cs", label="Entry Hangfire.Server.DelayedJobScheduler.DelayedJobScheduler(System.TimeSpan, Hangfire.States.IBackgroundJobStateChanger)", span="104-104"];
m63_16 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="jobsEnqueued++", span="121-121"];
m63_17 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="context.CancellationToken.IsCancellationRequested", span="123-123"];
m63_18 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", color=green, community=0, file="ServerSteps.cs", label="2: jobsEnqueued != 0", span="129-129"];
m63_19 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="Logger.InfoFormat(''{0} scheduled job(s) enqueued.'', jobsEnqueued)", span="131-131"];
m63_72 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="139-139"];
m63_73 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="ServerSteps.cs", label="var properties = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:server:{0}'', name))", span="141-141"];
m63_74 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", color=red, community=0, file="ServerSteps.cs", label="2: DictionaryAssert.ContainsFollowingItems(table, properties)", span="142-142"];
m63_75 [cluster="HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersPropertiesShouldContainTheFollowingItems(string, Table)", span="139-139"];
m63_23 [cluster="HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.GivenTheJobWasDequeuedFromTheQueue(string)", span="56-56"];
m63_65 [cluster="Unk.SetContainsItem", file="ServerSteps.cs", label="Entry Unk.SetContainsItem", span=""];
m63_91 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="162-162"];
m63_89 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", span="162-162"];
m63_90 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerQueues(string)", color=red, community=0, file="ServerSteps.cs", label="2: Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}:queues'', name)))", span="164-164"];
m63_11 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="Entry Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", span="113-113"];
m63_12 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="context == null", span="115-115"];
m63_13 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="throw new ArgumentNullException(''context'');", span="115-115"];
m63_14 [cluster="Hangfire.Server.DelayedJobScheduler.Execute(Hangfire.Server.BackgroundProcessContext)", file="ServerSteps.cs", label="var jobsEnqueued = 0", span="117-117"];
m63_59 [cluster="Unk.DoesNotContain", file="ServerSteps.cs", label="Entry Unk.DoesNotContain", span=""];
m63_77 [cluster="Unk.ContainsFollowingItems", file="ServerSteps.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m63_87 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="156-156"];
m63_85 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", span="156-156"];
m63_86 [cluster="HangFire.Tests.ServerSteps.ThenTheStorageShouldNotContainAnEntryForTheServerProperties(string)", color=red, community=0, file="ServerSteps.cs", label="2: Assert.IsFalse(Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="158-158"];
m63_67 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="ServerSteps.cs", label="Entry HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="132-132"];
m63_68 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="ServerSteps.cs", label="Thread.Sleep(_serverStartupTimeout)", span="134-134"];
m63_69 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", color=red, community=0, file="ServerSteps.cs", label="0: Assert.IsFalse(Redis.Client.SetContainsItem(''hangfire:servers'', name))", span="135-135"];
m63_70 [cluster="HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", file="ServerSteps.cs", label="Exit HangFire.Tests.ServerSteps.ThenTheServersSetShouldNotContainTheServer(string)", span="132-132"];
m63_88 [cluster="Unk.ContainsKey", file="ServerSteps.cs", label="Entry Unk.ContainsKey", span=""];
m63_92 [file="ServerSteps.cs", label="HangFire.Tests.ServerSteps", span=""];
m64_35 [cluster="System.Type.GetRuntimeMethods()", file="ServerWatchdog.feature.cs", label="Entry System.Type.GetRuntimeMethods()", span="0-0"];
m64_40 [cluster="System.Collections.Generic.List<T>.List()", file="ServerWatchdog.feature.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m64_44 [cluster="System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", file="ServerWatchdog.feature.cs", label="Entry System.Reflection.MethodInfo.MakeGenericMethod(params System.Type[])", span="0-0"];
m64_34 [cluster="System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", file="ServerWatchdog.feature.cs", label="Entry System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m64_79 [cluster="Unk.Join", file="ServerWatchdog.feature.cs", label="Entry Unk.Join", span=""];
m64_60 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="ServerWatchdog.feature.cs", label="Entry Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", span="117-117"];
m64_64 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", color=green, community=0, file="ServerWatchdog.feature.cs", label="1: typeName = rgx.Replace(typeName, match =>\r\n            {\r\n                var currentGenericArgumentNumbers = int.Parse(match.Value.Substring(1));\r\n                var currentArguments = string.Join('','', genericArguments.Take(currentGenericArgumentNumbers).Select(ToGenericTypeString));\r\n                genericArguments = genericArguments.Skip(currentGenericArgumentNumbers).ToArray();\r\n                return string.Concat(''<'', currentArguments, ''>'');\r\n            })", span="125-131"];
m64_61 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="ServerWatchdog.feature.cs", label="var genericArguments = type .GetTypeInfo().GetAllGenericArguments()", span="119-119"];
m64_63 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="ServerWatchdog.feature.cs", label="var rgx = new Regex(regexForGenericArguments)", span="123-123"];
m64_65 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="ServerWatchdog.feature.cs", label="return typeName;", span="133-133"];
m64_62 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="ServerWatchdog.feature.cs", label="string regexForGenericArguments = @''`[1-9]\d*''", span="121-121"];
m64_66 [cluster="Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", file="ServerWatchdog.feature.cs", label="Exit Hangfire.Common.TypeExtensions.ReplaceGenericParametersInGenericTypeName(string, System.Type)", span="117-117"];
m64_6 [cluster="System.Type.GetFullNameWithoutNamespace()", file="ServerWatchdog.feature.cs", label="Entry System.Type.GetFullNameWithoutNamespace()", span="98-98"];
m64_76 [cluster="int.Parse(string)", file="ServerWatchdog.feature.cs", label="Entry int.Parse(string)", span="0-0"];
m64_67 [cluster="System.Reflection.TypeInfo.GetAllGenericArguments()", file="ServerWatchdog.feature.cs", label="Entry System.Reflection.TypeInfo.GetAllGenericArguments()", span="136-136"];
m64_55 [cluster="string.Substring(int)", file="ServerWatchdog.feature.cs", label="Entry string.Substring(int)", span="0-0"];
m64_9 [cluster="string.ReplaceGenericParametersInGenericTypeName(System.Type)", file="ServerWatchdog.feature.cs", label="Entry string.ReplaceGenericParametersInGenericTypeName(System.Type)", span="117-117"];
m64_77 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ServerWatchdog.feature.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m64_36 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="ServerWatchdog.feature.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m64_43 [cluster="System.Collections.Generic.List<T>.ToArray()", file="ServerWatchdog.feature.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m64_0 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="ServerWatchdog.feature.cs", label="Entry Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="26-26"];
m64_1 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=green, community=0, file="ServerWatchdog.feature.cs", label="1: !type.GetTypeInfo().IsGenericType", span="28-28"];
m64_2 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", color=green, community=0, file="ServerWatchdog.feature.cs", label="0: return type.GetFullNameWithoutNamespace()\r\n                        .ReplacePlusWithDotInNestedTypeName();", span="30-31"];
m64_3 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="ServerWatchdog.feature.cs", label="return type.GetGenericTypeDefinition()\r\n                    .GetFullNameWithoutNamespace()\r\n                    .ReplacePlusWithDotInNestedTypeName()\r\n                    .ReplaceGenericParametersInGenericTypeName(type);", span="34-37"];
m64_4 [cluster="Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", file="ServerWatchdog.feature.cs", label="Exit Hangfire.Common.TypeExtensions.ToGenericTypeString(System.Type)", span="26-26"];
m64_54 [cluster="string.IsNullOrEmpty(string)", file="ServerWatchdog.feature.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m64_10 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="Entry Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="40-40"];
m64_26 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, file="ServerWatchdog.feature.cs", label="2: genericArguments.Add(actualType)", span="76-76"];
m64_24 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="var actualType = parameterTypes[i]", span="71-71"];
m64_19 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="var genericArguments = new List<Type>()", span="63-63"];
m64_25 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="parameterType.IsGenericParameter", span="74-74"];
m64_21 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="i < parameters.Length", span="67-67"];
m64_27 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, file="ServerWatchdog.feature.cs", label="2: parameterType.GetTypeInfo().IsAssignableFrom(actualType.GetTypeInfo())", span="81-81"];
m64_23 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="var parameterType = parameter.ParameterType", span="70-70"];
m64_28 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", color=green, community=0, file="ServerWatchdog.feature.cs", label="2: parameterTypesMatched = false", span="83-83"];
m64_30 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="!parameterTypesMatched", span="87-87"];
m64_12 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="type.GetTypeInfo().IsInterface", span="44-44"];
m64_13 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="methodCandidates.AddRange(type.GetTypeInfo().ImplementedInterfaces.SelectMany(x => x.GetRuntimeMethods()))", span="46-46"];
m64_20 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="var i = 0", span="67-67"];
m64_18 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="var parameterTypesMatched = true", span="62-62"];
m64_31 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="return methodCandidate.ContainsGenericParameters\r\n                    ? methodCandidate.MakeGenericMethod(genericArguments.ToArray())\r\n                    : methodCandidate;", span="90-92"];
m64_16 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="var parameters = methodCandidate.GetParameters()", span="56-56"];
m64_29 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="i++", span="67-67"];
m64_22 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="var parameter = parameters[i]", span="69-69"];
m64_14 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label=methodCandidates, span="49-49"];
m64_11 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="var methodCandidates = new List<MethodInfo>(type.GetRuntimeMethods())", span="42-42"];
m64_15 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="!methodCandidate.Name.Equals(name, StringComparison.Ordinal)", span="51-51"];
m64_17 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="parameters.Length != parameterTypes.Length", span="57-57"];
m64_32 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="return null;", span="95-95"];
m64_33 [cluster="Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", file="ServerWatchdog.feature.cs", label="Exit Hangfire.Common.TypeExtensions.GetNonOpenMatchingMethod(System.Type, string, System.Type[])", span="40-40"];
m64_45 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="Entry lambda expression", span="46-46"];
m64_70 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="Entry lambda expression", span="125-131"];
m64_72 [cluster="lambda expression", color=green, community=0, file="ServerWatchdog.feature.cs", label="2: var currentArguments = string.Join('','', genericArguments.Take(currentGenericArgumentNumbers).Select(ToGenericTypeString))", span="128-128"];
m64_73 [cluster="lambda expression", color=green, community=0, file="ServerWatchdog.feature.cs", label="1: genericArguments = genericArguments.Skip(currentGenericArgumentNumbers).ToArray()", span="129-129"];
m64_71 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="var currentGenericArgumentNumbers = int.Parse(match.Value.Substring(1))", span="127-127"];
m64_74 [cluster="lambda expression", color=green, community=0, file="ServerWatchdog.feature.cs", label="2: return string.Concat(''<'', currentArguments, ''>'');", span="130-130"];
m64_75 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="Exit lambda expression", span="125-131"];
m64_46 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="x.GetRuntimeMethods()", span="46-46"];
m64_47 [cluster="lambda expression", file="ServerWatchdog.feature.cs", label="Exit lambda expression", span="46-46"];
m64_5 [cluster="System.Type.GetTypeInfo()", file="ServerWatchdog.feature.cs", label="Entry System.Type.GetTypeInfo()", span="0-0"];
m64_38 [cluster="string.Equals(string, System.StringComparison)", file="ServerWatchdog.feature.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m64_78 [cluster="Unk.Select", file="ServerWatchdog.feature.cs", label="Entry Unk.Select", span=""];
m64_37 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="ServerWatchdog.feature.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m64_69 [cluster="Unk.Replace", file="ServerWatchdog.feature.cs", label="Entry Unk.Replace", span=""];
m64_7 [cluster="string.ReplacePlusWithDotInNestedTypeName()", file="ServerWatchdog.feature.cs", label="Entry string.ReplacePlusWithDotInNestedTypeName()", span="112-112"];
m64_41 [cluster="System.Collections.Generic.List<T>.Add(T)", file="ServerWatchdog.feature.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m64_82 [cluster="string.Concat(string, string, string)", file="ServerWatchdog.feature.cs", label="Entry string.Concat(string, string, string)", span="0-0"];
m64_48 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="ServerWatchdog.feature.cs", label="Entry Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="98-98"];
m64_52 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", color=green, community=0, file="ServerWatchdog.feature.cs", label="1: return !String.IsNullOrEmpty(type.Namespace)\n                ? type.FullName.Substring(type.Namespace.Length + dotLength)\n                : type.FullName;", span="107-109"];
m64_51 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="ServerWatchdog.feature.cs", label="int dotLength = 1", span="105-105"];
m64_49 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="ServerWatchdog.feature.cs", label="type.IsGenericParameter", span="100-100"];
m64_50 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="ServerWatchdog.feature.cs", label="return type.Name;", span="102-102"];
m64_53 [cluster="Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", file="ServerWatchdog.feature.cs", label="Exit Hangfire.Common.TypeExtensions.GetFullNameWithoutNamespace(System.Type)", span="98-98"];
m64_8 [cluster="System.Type.GetGenericTypeDefinition()", file="ServerWatchdog.feature.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m64_68 [cluster="System.Text.RegularExpressions.Regex.Regex(string)", file="ServerWatchdog.feature.cs", label="Entry System.Text.RegularExpressions.Regex.Regex(string)", span="0-0"];
m64_39 [cluster="System.Reflection.MethodBase.GetParameters()", file="ServerWatchdog.feature.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m64_81 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ServerWatchdog.feature.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m64_42 [cluster="System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)", file="ServerWatchdog.feature.cs", label="Entry System.Reflection.TypeInfo.IsAssignableFrom(System.Reflection.TypeInfo)", span="0-0"];
m64_80 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ServerWatchdog.feature.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m64_86 [file="ServerWatchdog.feature.cs", label=genericArguments, span=""];
m65_363 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255"];
m65_622 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889"];
m65_623 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1));\r\n            })", span="891-894"];
m65_624 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ThrowsAnException_WhenKeyIsNull()", span="889-889"];
m65_155 [cluster="Hangfire.Storage.InvocationData.Deserialize()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.Storage.InvocationData.Deserialize()", span="40-40"];
m65_621 [cluster="System.Collections.Generic.List<T>.List()", file="ServerWatchdogSteps.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m65_401 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301"];
m65_57 [cluster="Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="84-84"];
m65_810 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204"];
m65_811 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="1206-1208"];
m65_812 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetValueFromHash(''hash-1'', ''field-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', result);\r\n            })", span="1210-1225"];
m65_813 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsValue_OfAGivenField()", span="1204-1204"];
m65_478 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680"];
m65_479 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ServerWatchdogSteps.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))))", span="682-683"];
m65_480 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_ThrowsAnException_WhenTimeOutIsNegative()", span="680-680"];
m65_460 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331"];
m65_364 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528"];
m65_365 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ServerWatchdogSteps.cs", label="UseConnection(connection => Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)))", span="530-531"];
m65_366 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_ToScoreIsLowerThanFromScore()", span="528-528"];
m65_739 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090"];
m65_740 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListCount(''my-list'');\r\n                Assert.Equal(0, result);\r\n            })", span="1092-1096"];
m65_741 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsZero_WhenListDoesNotExist()", span="1090-1090"];
m65_667 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968"];
m65_668 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.AggregatedCounter ([Key], [Value])\r\nvalues (@key, @value)''", span="970-972"];
m65_669 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                Assert.Equal(12, result);\r\n            })", span="974-987"];
m65_670 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_IncludesValues_FromCounterAggregateTable()", span="968-968"];
m65_864 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298"];
m65_865 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], Value)\r\nvalues (@key, @value)''", span="1300-1302"];
m65_866 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromList(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(new [] { ''3'', ''1'' }, result);\r\n            })", span="1304-1319"];
m65_867 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAllItems_FromAGivenList()", span="1298-1298"];
m65_575 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289"];
m65_271 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376"];
m65_272 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="378-384"];
m65_273 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenNameIsNull()", span="376-376"];
m65_343 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492"];
m65_344 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ndeclare @id int\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nset @id = scope_identity()\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@id, @name, @value)\r\nselect @id''", span="494-501"];
m65_345 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single();\r\n\r\n                var value = connection.GetJobParameter(id.ToString(), ''name'');\r\n\r\n                Assert.Equal(''value'', value);\r\n            })", span="503-512"];
m65_346 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsParameterValue_WhenJobExists()", span="492-492"];
m65_905 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="ServerWatchdogSteps.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m65_22 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="new SqlServerConnection(null, IsolationLevel.Serializable, _providers)", span="36-36"];
m65_304 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435"];
m65_305 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="437-440"];
m65_306 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', null);\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal((string) null, parameter.Value);\r\n            })", span="442-454"];
m65_307 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_CanAcceptNulls_AsValues()", span="435-435"];
m65_153 [cluster="Unk.ToString", file="ServerWatchdogSteps.cs", label="Entry Unk.ToString", span=""];
m65_25 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="32-34"];
m65_26 [cluster="Unk.Format", file="ServerWatchdogSteps.cs", label="Entry Unk.Format", span=""];
m65_27 [cluster="Unk.GetValuesFromHash", file="ServerWatchdogSteps.cs", label="Entry Unk.GetValuesFromHash", span=""];
m65_28 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="35-39"];
m65_857 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288"];
m65_858 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromList(''my-list'');\r\n                Assert.Empty(result);\r\n            })", span="1290-1294"];
m65_859 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1288-1288"];
m65_24 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="32-34"];
m65_209 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249"];
m65_210 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(\r\n                connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null)))", span="251-253"];
m65_211 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ThrowsAnException_WhenJobIdIsNull()", span="249-249"];
m65_883 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332"];
m65_884 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetTtl(''my-set'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1334-1338"];
m65_885 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsNegativeValue_WhenSetDoesNotExist()", span="1332-1332"];
m65_450 [cluster="Unk.NotEqual", file="ServerWatchdogSteps.cs", label="Entry Unk.NotEqual", span=""];
m65_829 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467"];
m65_47 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", color=red, community=0, file="ServerWatchdogSteps.cs", label="1: UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var queues = new[] { ''default'' };\r\n\r\n                connection.FetchNextJob(queues, token);\r\n\r\n                _queue.Verify(x => x.Dequeue(queues, token));\r\n            })", span="79-87"];
m65_719 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055"];
m65_720 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [ExpireAt])\r\nvalues (@key, @field, @expireAt)''", span="1057-1059"];
m65_721 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashTtl(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1061-1076"];
m65_722 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsExpirationTimeForHash()", span="1055-1055"];
m65_281 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388"];
m65_282 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="390-393"];
m65_283 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''Value'', parameter.Value);\r\n            })", span="395-407"];
m65_284 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameters_CreatesNewParameter_WhenParameterWithTheGivenNameDoesNotExists()", span="388-388"];
m65_353 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516"];
m65_354 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="518-524"];
m65_355 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ThrowsAnException_WhenKeyIsNull()", span="516-516"];
m65_792 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430"];
m65_16 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33"];
m65_430 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623"];
m65_431 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null)))", span="625-626"];
m65_432 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_ThrowsAnException_WhenServerIdIsNull()", span="623-623"];
m65_772 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145"];
m65_773 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [ExpireAt])\r\nvalues (@key, @expireAt)''", span="1147-1149"];
m65_774 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListTtl(''list-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1151-1166"];
m65_775 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsExpirationTimeForList()", span="1145-1145"];
m65_389 [cluster="Unk.Execute", file="ServerWatchdogSteps.cs", label="Entry Unk.Execute", span=""];
m65_239 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304"];
m65_240 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="306-318"];
m65_241 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="320-335"];
m65_242 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData_WhenPropertiesAreCamelcased()", span="304-304"];
m65_658 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943"];
m65_659 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Counter ([Key], [Value])\r\nvalues (@key, @value)''", span="945-947"];
m65_660 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetCounter(''counter-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="949-964"];
m65_661 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsSumOfValues_InCounterTable()", span="943-943"];
m65_259 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m65_847 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278"];
m65_848 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null));\r\n            })", span="1280-1284"];
m65_849 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromList_ThrowsAnException_WhenKeyIsNull()", span="1278-1278"];
m65_488 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340"];
m65_6 [cluster="HangFire.Server.ServerWatchdog.RemoveTimedOutServers()", file="ServerWatchdogSteps.cs", label="var name = serverName", span="29-29"];
m65_33 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DisposesTheConnection_IfOwned()", span="51-51"];
m65_402 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580"];
m65_403 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null));\r\n\r\n                Assert.Equal(''context'', exception.ParamName);\r\n            })", span="582-588"];
m65_404 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenContextIsNull()", span="580-580"];
m65_764 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453"];
m65_39 [cluster="HangFire.Server.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", file="ServerWatchdogSteps.cs", label="Entry HangFire.Server.ServerWatchdog.HangFire.Server.IThreadWrappable.Work()", span="62-62"];
m65_685 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405"];
m65_34 [cluster="Unk.Add", file="ServerWatchdogSteps.cs", label="Entry Unk.Add", span=""];
m65_35 [cluster="HangFire.Server.ServerWatchdog.Dispose()", file="ServerWatchdogSteps.cs", label="Entry HangFire.Server.ServerWatchdog.Dispose()", span="57-57"];
m65_37 [cluster="HangFire.Server.ServerWatchdog.Dispose()", file="ServerWatchdogSteps.cs", label="Exit HangFire.Server.ServerWatchdog.Dispose()", span="57-57"];
m65_36 [cluster="HangFire.Server.ServerWatchdog.Dispose()", file="ServerWatchdogSteps.cs", label="_redis.Dispose()", span="59-59"];
m65_38 [cluster="Unk.Dispose", file="ServerWatchdogSteps.cs", label="Entry Unk.Dispose", span=""];
m65_48 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_DelegatesItsExecution_ToTheQueue()", span="77-77"];
m65_49 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375"];
m65_50 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="79-87"];
m65_51 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var token = new CancellationToken()", span="81-81"];
m65_205 [cluster="int.ToString()", file="ServerWatchdogSteps.cs", label="Entry int.ToString()", span="0-0"];
m65_326 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470"];
m65_327 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="472-478"];
m65_328 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenNameIsNull()", span="470-470"];
m65_52 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var queues = new[] { ''default'' }", span="82-82"];
m65_203 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m65_250 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339"];
m65_251 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="341-344"];
m65_252 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result.LoadException);\r\n            })", span="346-360"];
m65_253 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsJobLoadException_IfThereWasADeserializationException()", span="339-339"];
m65_650 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391"];
m65_890 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342"];
m65_891 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], [Value], [ExpireAt], [Score])\r\nvalues (@key, @value, @expireAt, 0.0)''", span="1344-1346"];
m65_892 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetSetTtl(''set-1'');\r\n\r\n                // Assert\r\n                Assert.True(TimeSpan.FromMinutes(59) < result);\r\n                Assert.True(result < TimeSpan.FromMinutes(61));\r\n            })", span="1348-1363"];
m65_893 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ReturnsExpirationTime_OfAGivenSet()", span="1342-1342"];
m65_156 [cluster="System.DateTime.AddDays(double)", file="ServerWatchdogSteps.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m65_439 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322"];
m65_7 [cluster="HangFire.Server.ServerWatchdog.RemoveTimedOutServers()", file="ServerWatchdogSteps.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name, \r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="31-39"];
m65_154 [cluster="Hangfire.Common.JobHelper.FromJson<T>(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.Common.JobHelper.FromJson<T>(string)", span="39-39"];
m65_566 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802"];
m65_567 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null)))", span="804-805"];
m65_568 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ThrowsAnException_WhenKeyIsNull()", span="802-802"];
m65_0 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21"];
m65_1 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ServerWatchdogSteps.cs", label="_queue = new Mock<IPersistentJobQueue>()", span="23-23"];
m65_4 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ServerWatchdogSteps.cs", label="_providers = new PersistentJobQueueProviderCollection(provider.Object)", span="29-29"];
m65_12 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="x.GetJobQueue(It.IsNotNull<IDbConnection>())", span="26-26"];
m65_2 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ServerWatchdogSteps.cs", label="var provider = new Mock<IPersistentJobQueueProvider>()", span="25-25"];
m65_5 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", span="21-21"];
m65_3 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SqlServerConnectionFacts()", file="ServerWatchdogSteps.cs", label="provider.Setup(x => x.GetJobQueue(It.IsNotNull<IDbConnection>()))\r\n                .Returns(_queue.Object)", span="26-27"];
m65_8 [cluster="Unk.Setup", file="ServerWatchdogSteps.cs", label="Entry Unk.Setup", span=""];
m65_11 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="26-26"];
m65_10 [cluster="PersistentJobQueueProviderCollection.cstr", file="ServerWatchdogSteps.cs", label="Entry PersistentJobQueueProviderCollection.cstr", span=""];
m65_9 [cluster="Unk.Returns", file="ServerWatchdogSteps.cs", label="Entry Unk.Returns", span=""];
m65_13 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="26-26"];
m65_511 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718"];
m65_512 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                Assert.NotNull(result);\r\n                Assert.Equal(0, result.Count);\r\n            })", span="720-726"];
m65_513 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsEmptyCollection_WhenKeyDoesNotExist()", span="718-718"];
m65_219 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257"];
m65_220 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetStateData(''1'');\r\n                Assert.Null(result);\r\n            })", span="259-263"];
m65_221 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsNull_IfThereIsNoSuchState()", span="257-257"];
m65_576 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809"];
m65_577 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n                Assert.Null(result);\r\n            })", span="811-815"];
m65_578 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsNull_IfHashDoesNotExist()", span="809-809"];
m65_440 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630"];
m65_441 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues \r\n('Server1', '', getutcdate()),\r\n('Server2', '', getutcdate())''", span="632-636"];
m65_442 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.RemoveServer(''Server1'');\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase);\r\n            })", span="638-646"];
m65_443 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveServer_RemovesAServerRecord()", span="630-630"];
m65_583 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819"];
m65_584 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field], [Value])\r\nvalues (@key, @field, @value)''", span="821-823"];
m65_585 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllEntriesFromHash(''some-hash'');\r\n\r\n                // Assert\r\n                Assert.NotNull(result);\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="825-843"];
m65_586 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllEntriesFromHash_ReturnsAllKeysAndTheirValues()", span="819-819"];
m65_782 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170"];
m65_783 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1172-1178"];
m65_784 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenKeyIsNull()", span="1170-1170"];
m65_712 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045"];
m65_713 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashTtl(''my-hash'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1047-1051"];
m65_714 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ReturnsNegativeValue_WhenHashDoesNotExist()", span="1045-1045"];
m65_793 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182"];
m65_794 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null));\r\n\r\n                Assert.Equal(''name'', exception.ParamName);\r\n            })", span="1184-1190"];
m65_795 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ThrowsAnException_WhenNameIsNull()", span="1182-1182"];
m65_62 [cluster="Unk.Dequeue", file="ServerWatchdogSteps.cs", label="Entry Unk.Dequeue", span=""];
m65_21 [cluster="System.DateTime.Add(System.TimeSpan)", file="ServerWatchdogSteps.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m65_23 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="32-34"];
m65_29 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="heartbeats.Add(\r\n                            name, \r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="35-39"];
m65_30 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="35-39"];
m65_31 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="ServerWatchdogSteps.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m65_53 [cluster="System.Threading.Thread.Join()", file="ServerWatchdogSteps.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m65_54 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="HangFire.Server.ServerWatchdog", span=""];
m65_60 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="x.Dequeue(queues, token)", span="86-86"];
m65_55 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label=name, span=""];
m65_59 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="86-86"];
m65_61 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="86-86"];
m65_67 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="93-101"];
m65_68 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var token = new CancellationToken()", span="95-95"];
m65_71 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token))", span="99-100"];
m65_75 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.FetchNextJob(new[] { ''critical'', ''default'' }, token)", span="100-100"];
m65_69 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var anotherProvider = new Mock<IPersistentJobQueueProvider>()", span="96-96"];
m65_70 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="_providers.Add(anotherProvider.Object, new [] { ''critical'' })", span="97-97"];
m65_72 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="93-101"];
m65_74 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="100-100"];
m65_76 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="100-100"];
m65_80 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="107-111"];
m65_81 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var transaction = connection.CreateWriteTransaction()", span="109-109"];
m65_82 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(transaction)", span="110-110"];
m65_83 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="107-111"];
m65_89 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="117-121"];
m65_90 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1))", span="119-119"];
m65_91 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(@lock)", span="120-120"];
m65_92 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="117-121"];
m65_98 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="127-137"];
m65_99 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="129-134"];
m65_103 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="130-134"];
m65_100 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''job'', exception.ParamName)", span="136-136"];
m65_102 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="130-134"];
m65_101 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="127-137"];
m65_104 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="130-134"];
m65_110 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="143-153"];
m65_111 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero))", span="145-150"];
m65_115 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero)", span="146-150"];
m65_112 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''parameters'', exception.ParamName)", span="152-152"];
m65_114 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="146-150"];
m65_113 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="143-153"];
m65_116 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="146-150"];
m65_118 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="147-147"];
m65_119 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="SampleMethod(''hello'')", span="147-147"];
m65_120 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="147-147"];
m65_126 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="159-195"];
m65_127 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var createdAt = new DateTime(2012, 12, 12)", span="161-161"];
m65_128 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1))", span="162-166"];
m65_131 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var sqlJob = sql.Query(''select * from HangFire.Job'').Single()", span="171-171"];
m65_144 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value)", span="188-191"];
m65_133 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(createdAt, sqlJob.CreatedAt)", span="173-173"];
m65_142 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt)", span="185-185"];
m65_143 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1))", span="186-186"];
m65_129 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(jobId)", span="168-168"];
m65_160 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="163-163"];
m65_130 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotEmpty(jobId)", span="169-169"];
m65_132 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(jobId, sqlJob.Id.ToString())", span="172-172"];
m65_134 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(null, (int?) sqlJob.StateId)", span="174-174"];
m65_135 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(null, (string) sqlJob.StateName)", span="175-175"];
m65_136 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData)", span="177-177"];
m65_137 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="invocationData.Arguments = sqlJob.Arguments", span="178-178"];
m65_138 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var job = invocationData.Deserialize()", span="180-180"];
m65_139 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(typeof(SqlServerConnectionFacts), job.Type)", span="181-181"];
m65_140 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''SampleMethod'', job.Method.Name)", span="182-182"];
m65_141 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''\''Hello\'''', job.Arguments[0])", span="183-183"];
m65_145 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Value1'', parameters[''Key1''])", span="193-193"];
m65_163 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="191-191"];
m65_166 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="191-191"];
m65_146 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Value2'', parameters[''Key2''])", span="194-194"];
m65_147 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="159-195"];
m65_161 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="SampleMethod(''Hello'')", span="163-163"];
m65_162 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="163-163"];
m65_164 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="(string) x.Name", span="191-191"];
m65_165 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="191-191"];
m65_167 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="(string) x.Value", span="191-191"];
m65_168 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="191-191"];
m65_172 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="201-202"];
m65_173 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null))", span="201-202"];
m65_176 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetJobData(null)", span="202-202"];
m65_174 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="201-202"];
m65_175 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="202-202"];
m65_177 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="202-202"];
m65_182 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="208-212"];
m65_183 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetJobData(''1'')", span="210-210"];
m65_184 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Null(result)", span="211-211"];
m65_185 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="208-212"];
m65_193 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="227-234"];
m65_191 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="223-245"];
m65_192 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var job = Job.FromExpression(() => SampleMethod(''wrong''))", span="225-225"];
m65_194 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="236-236"];
m65_206 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="225-225"];
m65_195 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(result)", span="238-238"];
m65_196 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(result.Job)", span="239-239"];
m65_197 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Succeeded'', result.State)", span="240-240"];
m65_198 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Arguments'', result.Job.Arguments[0])", span="241-241"];
m65_199 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Null(result.LoadException)", span="242-242"];
m65_200 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt)", span="243-243"];
m65_201 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1))", span="244-244"];
m65_202 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="223-245"];
m65_207 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="SampleMethod(''wrong'')", span="225-225"];
m65_208 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="225-225"];
m65_212 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="252-253"];
m65_213 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetStateData(null))", span="252-253"];
m65_216 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetStateData(null)", span="253-253"];
m65_214 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="252-253"];
m65_215 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="253-253"];
m65_217 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="253-253"];
m65_222 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="259-263"];
m65_223 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetStateData(''1'')", span="261-261"];
m65_224 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Null(result)", span="262-262"];
m65_225 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="259-263"];
m65_232 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="290-292"];
m65_230 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="283-300"];
m65_231 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                }", span="285-288"];
m65_233 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetStateData(jobId.ToString())", span="294-294"];
m65_234 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(result)", span="295-295"];
m65_235 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Name'', result.Name)", span="297-297"];
m65_236 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Reason'', result.Reason)", span="298-298"];
m65_237 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="299-299"];
m65_238 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="283-300"];
m65_245 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id", span="327-329"];
m65_243 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="320-335"];
m65_244 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var data = new Dictionary<string, string>\r\n                {\r\n                    { ''key'', ''Value'' }\r\n                }", span="322-325"];
m65_246 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetStateData(jobId.ToString())", span="331-331"];
m65_247 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(result)", span="332-332"];
m65_248 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Value'', result.Data[''Key''])", span="334-334"];
m65_249 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="320-335"];
m65_255 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(new InvocationData(null, null, null, null)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single()", span="348-355"];
m65_254 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="346-360"];
m65_256 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetJobData(((int)jobId.Id).ToString())", span="357-357"];
m65_257 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(result.LoadException)", span="359-359"];
m65_258 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="346-360"];
m65_263 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="366-372"];
m65_264 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''))", span="368-369"];
m65_268 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.SetJobParameter(null, ''name'', ''value'')", span="369-369"];
m65_265 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''id'', exception.ParamName)", span="371-371"];
m65_267 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="369-369"];
m65_266 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="366-372"];
m65_269 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="369-369"];
m65_274 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="378-384"];
m65_275 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(''1'', null, ''value''))", span="380-381"];
m65_279 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.SetJobParameter(''1'', null, ''value'')", span="381-381"];
m65_276 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''name'', exception.ParamName)", span="383-383"];
m65_278 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="381-381"];
m65_277 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="378-384"];
m65_280 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="381-381"];
m65_286 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var job = sql.Query(arrangeSql).Single()", span="397-397"];
m65_285 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="395-407"];
m65_288 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="400-400"];
m65_289 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="402-404"];
m65_287 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="string jobId = job.Id.ToString()", span="398-398"];
m65_290 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Value'', parameter.Value)", span="406-406"];
m65_291 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="395-407"];
m65_297 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var job = sql.Query(arrangeSql).Single()", span="420-420"];
m65_296 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="418-431"];
m65_299 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.SetJobParameter(jobId, ''Name'', ''Value'')", span="423-423"];
m65_300 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'')", span="424-424"];
m65_301 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="426-428"];
m65_298 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="string jobId = job.Id.ToString()", span="421-421"];
m65_302 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''AnotherValue'', parameter.Value)", span="430-430"];
m65_303 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="418-431"];
m65_309 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var job = sql.Query(arrangeSql).Single()", span="444-444"];
m65_308 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="442-454"];
m65_311 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.SetJobParameter(jobId, ''Name'', null)", span="447-447"];
m65_312 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single()", span="449-451"];
m65_310 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="string jobId = job.Id.ToString()", span="445-445"];
m65_313 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal((string) null, parameter.Value)", span="453-453"];
m65_314 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="442-454"];
m65_318 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="460-466"];
m65_319 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''))", span="462-463"];
m65_323 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetJobParameter(null, ''hello'')", span="463-463"];
m65_320 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''id'', exception.ParamName)", span="465-465"];
m65_322 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="463-463"];
m65_321 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="460-466"];
m65_324 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="463-463"];
m65_329 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="472-478"];
m65_330 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(''1'', null))", span="474-475"];
m65_334 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetJobParameter(''1'', null)", span="475-475"];
m65_331 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''name'', exception.ParamName)", span="477-477"];
m65_333 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="475-475"];
m65_332 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="472-478"];
m65_335 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="475-475"];
m65_339 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="484-488"];
m65_340 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var value = connection.GetJobParameter(''1'', ''hello'')", span="486-486"];
m65_341 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Null(value)", span="487-487"];
m65_342 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="484-488"];
m65_348 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var id = sql.Query<int>(\r\n                    arrangeSql,\r\n                    new { name = ''name'', value = ''value'' }).Single()", span="505-507"];
m65_347 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="503-512"];
m65_349 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var value = connection.GetJobParameter(id.ToString(), ''name'')", span="509-509"];
m65_350 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''value'', value)", span="511-511"];
m65_351 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="503-512"];
m65_356 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="518-524"];
m65_357 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetFirstByLowestScoreFromSet(null, 0, 1))", span="520-521"];
m65_361 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetFirstByLowestScoreFromSet(null, 0, 1)", span="521-521"];
m65_358 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''key'', exception.ParamName)", span="523-523"];
m65_360 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="521-521"];
m65_359 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="518-524"];
m65_362 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="521-521"];
m65_367 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="530-531"];
m65_368 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.GetFirstByLowestScoreFromSet(''key'', 0, -1))", span="530-531"];
m65_371 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetFirstByLowestScoreFromSet(''key'', 0, -1)", span="531-531"];
m65_369 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="530-531"];
m65_370 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="531-531"];
m65_372 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="531-531"];
m65_376 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="537-543"];
m65_377 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1)", span="539-540"];
m65_378 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Null(result)", span="542-542"];
m65_379 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="537-543"];
m65_385 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql)", span="559-559"];
m65_384 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="557-564"];
m65_386 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0)", span="561-561"];
m65_387 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''-1.0'', result)", span="563-563"];
m65_388 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="557-564"];
m65_393 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="570-576"];
m65_394 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()))", span="572-573"];
m65_398 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.AnnounceServer(null, new ServerContext())", span="573-573"];
m65_395 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''serverId'', exception.ParamName)", span="575-575"];
m65_397 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="573-573"];
m65_396 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="570-576"];
m65_399 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="573-573"];
m65_405 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="582-588"];
m65_406 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(''server'', null))", span="584-585"];
m65_410 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.AnnounceServer(''server'', null)", span="585-585"];
m65_407 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''context'', exception.ParamName)", span="587-587"];
m65_409 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="585-585"];
m65_408 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="582-588"];
m65_411 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="585-585"];
m65_415 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="594-619"];
m65_416 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                }", span="596-600"];
m65_417 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.AnnounceServer(''server'', context1)", span="601-601"];
m65_418 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="603-603"];
m65_423 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.AnnounceServer(''server'', context2)", span="615-615"];
m65_424 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var sameServer = sql.Query(''select * from HangFire.Server'').Single()", span="616-616"];
m65_419 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''server'', server.Id)", span="604-604"];
m65_420 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data)", span="605-607"];
m65_421 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(server.LastHeartbeat)", span="608-608"];
m65_422 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                }", span="610-614"];
m65_425 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''server'', sameServer.Id)", span="617-617"];
m65_426 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Contains(''1000'', sameServer.Data)", span="618-618"];
m65_427 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="594-619"];
m65_433 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="625-626"];
m65_434 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.RemoveServer(null))", span="625-626"];
m65_437 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.RemoveServer(null)", span="626-626"];
m65_435 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="625-626"];
m65_436 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="626-626"];
m65_438 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="626-626"];
m65_445 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql)", span="640-640"];
m65_444 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="638-646"];
m65_446 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.RemoveServer(''Server1'')", span="642-642"];
m65_447 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var server = sql.Query(''select * from HangFire.Server'').Single()", span="644-644"];
m65_448 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotEqual(''Server1'', server.Id, StringComparer.OrdinalIgnoreCase)", span="645-645"];
m65_449 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="638-646"];
m65_454 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="652-653"];
m65_455 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null))", span="652-653"];
m65_458 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.Heartbeat(null)", span="653-653"];
m65_456 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="652-653"];
m65_457 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="653-653"];
m65_459 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="653-653"];
m65_466 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql)", span="667-667"];
m65_465 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="665-676"];
m65_467 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.Heartbeat(''server1'')", span="669-669"];
m65_468 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat)", span="671-672"];
m65_469 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotEqual(2012, servers[''server1''].Year)", span="674-674"];
m65_472 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="672-672"];
m65_475 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="672-672"];
m65_470 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(2012, servers[''server2''].Year)", span="675-675"];
m65_471 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="665-676"];
m65_473 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="(string)x.Id", span="672-672"];
m65_474 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="672-672"];
m65_476 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="(DateTime)x.LastHeartbeat", span="672-672"];
m65_477 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="672-672"];
m65_481 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="682-683"];
m65_482 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentException>(\r\n                () => connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5)))", span="682-683"];
m65_485 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromMinutes(-5))", span="683-683"];
m65_483 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="682-683"];
m65_484 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="683-683"];
m65_486 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="683-683"];
m65_494 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    })", span="695-701"];
m65_493 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="693-707"];
m65_495 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.RemoveTimedOutServers(TimeSpan.FromHours(15))", span="703-703"];
m65_496 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var liveServer = sql.Query(''select * from HangFire.Server'').Single()", span="705-705"];
m65_497 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''server2'', liveServer.Id)", span="706-706"];
m65_498 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="693-707"];
m65_504 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="713-714"];
m65_505 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null))", span="714-714"];
m65_508 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetAllItemsFromSet(null)", span="714-714"];
m65_506 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="713-714"];
m65_507 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="714-714"];
m65_509 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="714-714"];
m65_514 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="720-726"];
m65_515 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="722-722"];
m65_516 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(result)", span="724-724"];
m65_517 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(0, result.Count)", span="725-725"];
m65_518 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="720-726"];
m65_524 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                })", span="739-744"];
m65_523 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="736-753"];
m65_525 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetAllItemsFromSet(''some-set'')", span="747-747"];
m65_526 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(2, result.Count)", span="750-750"];
m65_527 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Contains(''1'', result)", span="751-751"];
m65_528 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Contains(''2'', result)", span="752-752"];
m65_529 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="736-753"];
m65_533 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="759-765"];
m65_534 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()))", span="761-762"];
m65_538 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.SetRangeInHash(null, new Dictionary<string, string>())", span="762-762"];
m65_535 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''key'', exception.ParamName)", span="764-764"];
m65_537 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="762-762"];
m65_536 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="759-765"];
m65_539 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="762-762"];
m65_544 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="771-777"];
m65_545 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null))", span="773-774"];
m65_549 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.SetRangeInHash(''some-hash'', null)", span="774-774"];
m65_546 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''keyValuePairs'', exception.ParamName)", span="776-776"];
m65_548 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="774-774"];
m65_547 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="771-777"];
m65_550 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="774-774"];
m65_554 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="783-798"];
m65_555 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                })", span="785-789"];
m65_556 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value)", span="791-794"];
m65_557 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="796-796"];
m65_560 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="794-794"];
m65_563 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="794-794"];
m65_558 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="797-797"];
m65_559 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="783-798"];
m65_561 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="(string)x.Field", span="794-794"];
m65_562 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="794-794"];
m65_564 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="(string)x.Value", span="794-794"];
m65_565 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="794-794"];
m65_569 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="804-805"];
m65_570 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetAllEntriesFromHash(null))", span="805-805"];
m65_573 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetAllEntriesFromHash(null)", span="805-805"];
m65_571 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="804-805"];
m65_572 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="805-805"];
m65_574 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="805-805"];
m65_579 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="811-815"];
m65_580 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="813-813"];
m65_581 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Null(result)", span="814-814"];
m65_582 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="811-815"];
m65_588 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-hash'', field = ''Key1'', value = ''Value1'' },\r\n                    new { key = ''some-hash'', field = ''Key2'', value = ''Value2'' },\r\n                    new { key = ''another-hash'', field = ''Key3'', value = ''Value3'' }\r\n                })", span="828-833"];
m65_587 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="825-843"];
m65_589 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetAllEntriesFromHash(''some-hash'')", span="836-836"];
m65_590 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.NotNull(result)", span="839-839"];
m65_591 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(2, result.Count)", span="840-840"];
m65_592 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Value1'', result[''Key1''])", span="841-841"];
m65_593 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''Value2'', result[''Key2''])", span="842-842"];
m65_594 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="825-843"];
m65_598 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="849-853"];
m65_599 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null))", span="851-852"];
m65_602 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetSetCount(null)", span="852-852"];
m65_600 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="849-853"];
m65_601 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="852-852"];
m65_603 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="852-852"];
m65_608 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="859-863"];
m65_609 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetSetCount(''my-set'')", span="861-861"];
m65_610 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(0, result)", span="862-862"];
m65_611 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="859-863"];
m65_617 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''value-1'' },\r\n                    new { Key = ''set-2'', Value = ''value-1'' },\r\n                    new { Key = ''set-1'', Value = ''value-2'' }\r\n                })", span="875-880"];
m65_616 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="873-885"];
m65_618 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetSetCount(''set-1'')", span="882-882"];
m65_619 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(2, result)", span="884-884"];
m65_620 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="873-885"];
m65_625 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="891-894"];
m65_626 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetRangeFromSet(null, 0, 1))", span="893-893"];
m65_629 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetRangeFromSet(null, 0, 1)", span="893-893"];
m65_627 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="891-894"];
m65_628 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="893-893"];
m65_630 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="893-893"];
m65_637 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                })", span="906-914"];
m65_636 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="904-919"];
m65_638 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetRangeFromSet(''set-1'', 2, 3)", span="916-916"];
m65_639 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(new [] { ''3'', ''4'' }, result)", span="918-918"];
m65_640 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="904-919"];
m65_644 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="925-929"];
m65_645 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null))", span="927-928"];
m65_648 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetCounter(null)", span="928-928"];
m65_646 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="925-929"];
m65_647 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="928-928"];
m65_649 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="928-928"];
m65_654 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="935-939"];
m65_655 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetCounter(''my-counter'')", span="937-937"];
m65_656 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(0, result)", span="938-938"];
m65_657 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="935-939"];
m65_663 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 1 },\r\n                    new { key = ''counter-2'', value = 1 },\r\n                    new { key = ''counter-1'', value = 1 }\r\n                })", span="952-957"];
m65_662 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="949-964"];
m65_664 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetCounter(''counter-1'')", span="960-960"];
m65_665 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(2, result)", span="963-963"];
m65_666 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="949-964"];
m65_672 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''counter-1'', value = 12 },\r\n                    new { key = ''counter-2'', value = 15 }\r\n                })", span="977-981"];
m65_671 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="974-987"];
m65_673 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetCounter(''counter-1'')", span="984-984"];
m65_674 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(12, result)", span="986-986"];
m65_675 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="974-987"];
m65_679 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="993-996"];
m65_680 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null))", span="995-995"];
m65_683 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetHashCount(null)", span="995-995"];
m65_681 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="993-996"];
m65_682 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="995-995"];
m65_684 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="995-995"];
m65_689 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1002-1006"];
m65_690 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetHashCount(''my-hash'')", span="1004-1004"];
m65_691 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(0, result)", span="1005-1005"];
m65_692 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1002-1006"];
m65_698 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                })", span="1019-1024"];
m65_697 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1016-1031"];
m65_699 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetHashCount(''hash-1'')", span="1027-1027"];
m65_700 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(2, result)", span="1030-1030"];
m65_701 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1016-1031"];
m65_705 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1037-1041"];
m65_706 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null))", span="1039-1040"];
m65_709 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetHashTtl(null)", span="1040-1040"];
m65_707 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1037-1041"];
m65_708 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1040-1040"];
m65_710 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1040-1040"];
m65_715 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1047-1051"];
m65_716 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetHashTtl(''my-hash'')", span="1049-1049"];
m65_717 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(result < TimeSpan.Zero)", span="1050-1050"];
m65_718 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1047-1051"];
m65_724 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field'', expireAt = (DateTime?)DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''hash-2'', field = ''field'', expireAt = (DateTime?) null }\r\n                })", span="1064-1068"];
m65_723 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1061-1076"];
m65_725 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetHashTtl(''hash-1'')", span="1071-1071"];
m65_726 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1074-1074"];
m65_727 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1075-1075"];
m65_728 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1061-1076"];
m65_732 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1082-1086"];
m65_733 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null))", span="1084-1085"];
m65_736 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetListCount(null)", span="1085-1085"];
m65_734 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1082-1086"];
m65_735 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1085-1085"];
m65_737 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1085-1085"];
m65_742 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1092-1096"];
m65_743 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetListCount(''my-list'')", span="1094-1094"];
m65_744 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(0, result)", span="1095-1095"];
m65_745 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1092-1096"];
m65_751 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                })", span="1109-1114"];
m65_750 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1106-1121"];
m65_752 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetListCount(''list-1'')", span="1117-1117"];
m65_753 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(2, result)", span="1120-1120"];
m65_754 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1106-1121"];
m65_758 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1127-1131"];
m65_759 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null))", span="1129-1130"];
m65_762 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetListTtl(null)", span="1130-1130"];
m65_760 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1127-1131"];
m65_761 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1130-1130"];
m65_763 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1130-1130"];
m65_768 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1137-1141"];
m65_769 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetListTtl(''my-list'')", span="1139-1139"];
m65_770 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(result < TimeSpan.Zero)", span="1140-1140"];
m65_771 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1137-1141"];
m65_777 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', expireAt = (DateTime?) DateTime.UtcNow.AddHours(1) },\r\n                    new { key = ''list-2'', expireAt = (DateTime?) null }\r\n                })", span="1154-1158"];
m65_776 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1151-1166"];
m65_778 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetListTtl(''list-1'')", span="1161-1161"];
m65_779 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1164-1164"];
m65_780 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1165-1165"];
m65_781 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1151-1166"];
m65_785 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1172-1178"];
m65_786 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(null, ''name''))", span="1174-1175"];
m65_790 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetValueFromHash(null, ''name'')", span="1175-1175"];
m65_787 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1177-1177"];
m65_789 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1175-1175"];
m65_788 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1172-1178"];
m65_791 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1175-1175"];
m65_796 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1184-1190"];
m65_797 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetValueFromHash(''key'', null))", span="1186-1187"];
m65_801 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetValueFromHash(''key'', null)", span="1187-1187"];
m65_798 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''name'', exception.ParamName)", span="1189-1189"];
m65_800 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1187-1187"];
m65_799 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1184-1190"];
m65_802 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1187-1187"];
m65_806 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1196-1200"];
m65_807 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetValueFromHash(''my-hash'', ''name'')", span="1198-1198"];
m65_808 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Null(result)", span="1199-1199"];
m65_809 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1196-1200"];
m65_815 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'', value = ''1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'', value = ''2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'', value = ''3'' }\r\n                })", span="1213-1218"];
m65_814 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1210-1225"];
m65_816 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetValueFromHash(''hash-1'', ''field-1'')", span="1221-1221"];
m65_817 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''1'', result)", span="1224-1224"];
m65_818 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1210-1225"];
m65_822 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1231-1237"];
m65_823 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1))", span="1233-1234"];
m65_827 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetRangeFromList(null, 0, 1)", span="1234-1234"];
m65_824 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(''key'', exception.ParamName)", span="1236-1236"];
m65_826 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1234-1234"];
m65_825 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1231-1237"];
m65_828 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1234-1234"];
m65_833 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1243-1247"];
m65_834 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetRangeFromList(''my-list'', 0, 1)", span="1245-1245"];
m65_835 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Empty(result)", span="1246-1246"];
m65_836 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1243-1247"];
m65_843 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                })", span="1260-1267"];
m65_842 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1257-1274"];
m65_844 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetRangeFromList(''list-1'', 1, 2)", span="1270-1270"];
m65_845 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(new [] { ''4'', ''3'' }, result)", span="1273-1273"];
m65_846 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1257-1274"];
m65_850 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1280-1284"];
m65_851 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetAllItemsFromList(null))", span="1282-1283"];
m65_854 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetAllItemsFromList(null)", span="1283-1283"];
m65_852 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1280-1284"];
m65_853 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1283-1283"];
m65_855 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1283-1283"];
m65_860 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1290-1294"];
m65_861 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetAllItemsFromList(''my-list'')", span="1292-1292"];
m65_862 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Empty(result)", span="1293-1293"];
m65_863 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1290-1294"];
m65_869 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' }\r\n                })", span="1307-1312"];
m65_868 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1304-1319"];
m65_870 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetAllItemsFromList(''list-1'')", span="1315-1315"];
m65_871 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Equal(new [] { ''3'', ''1'' }, result)", span="1318-1318"];
m65_872 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1304-1319"];
m65_876 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1325-1328"];
m65_877 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null))", span="1327-1327"];
m65_880 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="connection.GetSetTtl(null)", span="1327-1327"];
m65_878 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1325-1328"];
m65_879 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1327-1327"];
m65_881 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1327-1327"];
m65_886 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1334-1338"];
m65_887 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetSetTtl(''my-set'')", span="1336-1336"];
m65_888 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(result < TimeSpan.Zero)", span="1337-1337"];
m65_889 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1334-1338"];
m65_895 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''set-1'', value = ''1'', expireAt = (DateTime?) DateTime.UtcNow.AddMinutes(60) },\r\n                    new { key = ''set-2'', value = ''2'', expireAt = (DateTime?) null }\r\n                })", span="1351-1355"];
m65_894 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Entry lambda expression", span="1348-1363"];
m65_896 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="var result = connection.GetSetTtl(''set-1'')", span="1358-1358"];
m65_897 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(TimeSpan.FromMinutes(59) < result)", span="1361-1361"];
m65_898 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Assert.True(result < TimeSpan.FromMinutes(61))", span="1362-1362"];
m65_899 [cluster="lambda expression", file="ServerWatchdogSteps.cs", label="Exit lambda expression", span="1348-1363"];
m65_125 [cluster="Unk.UseConnections", file="ServerWatchdogSteps.cs", label="Entry Unk.UseConnections", span=""];
m65_412 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592"];
m65_413 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var context1 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''critical'', ''default'' },\r\n                    WorkerCount = 4\r\n                };\r\n                connection.AnnounceServer(''server'', context1);\r\n\r\n                var server = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', server.Id);\r\n                Assert.True(((string)server.Data).StartsWith(\r\n                    ''{\''WorkerCount\'':4,\''Queues\'':[\''critical\'',\''default\''],\''StartedAt\'':''),\r\n                    server.Data);\r\n                Assert.NotNull(server.LastHeartbeat);\r\n\r\n                var context2 = new ServerContext\r\n                {\r\n                    Queues = new[] { ''default'' },\r\n                    WorkerCount = 1000 \r\n                };\r\n                connection.AnnounceServer(''server'', context2);\r\n                var sameServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server'', sameServer.Id);\r\n                Assert.Contains(''1000'', sameServer.Data);\r\n            })", span="594-619"];
m65_414 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_CreatesOrUpdatesARecord()", span="592-592"];
m65_540 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266"];
m65_84 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="71-71"];
m65_693 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010"];
m65_694 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Hash ([Key], [Field])\r\nvalues (@key, @field)''", span="1012-1014"];
m65_695 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''hash-1'', field = ''field-1'' },\r\n                    new { key = ''hash-1'', field = ''field-2'' },\r\n                    new { key = ''hash-2'', field = ''field-1'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetHashCount(''hash-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1016-1031"];
m65_696 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsNumber_OfHashFields()", span="1010-1010"];
m65_17 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerWatchdogSteps.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new SqlServerConnection(null, IsolationLevel.Serializable, _providers))", span="35-36"];
m65_390 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568"];
m65_391 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.AnnounceServer(null, new ServerContext()));\r\n\r\n                Assert.Equal(''serverId'', exception.ParamName);\r\n            })", span="570-576"];
m65_392 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AnnounceServer_ThrowsAnException_WhenServerIdIsNull()", span="568-568"];
m65_117 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m65_501 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711"];
m65_502 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetAllItemsFromSet(null)))", span="713-714"];
m65_503 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ThrowsAnException_WhenKeyIsNull()", span="711-711"];
m65_40 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", color=green, community=0, file="ServerWatchdogSteps.cs", label="1: Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64"];
m65_42 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="ServerWatchdogSteps.cs", label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers, ownsConnection: false)", span="68-68"];
m65_41 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", color=red, community=0, file="ServerWatchdogSteps.cs", label="2: var sqlConnection = ConnectionUtils.CreateConnection()", span="66-66"];
m65_43 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="ServerWatchdogSteps.cs", label="connection.Dispose()", span="70-70"];
m65_44 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="ServerWatchdogSteps.cs", label="Assert.Equal(ConnectionState.Open, sqlConnection.State)", span="72-72"];
m65_45 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Dispose_DoesNotDisposeTheConnection_IfNotOwned()", span="64-64"];
m65_711 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416"];
m65_900 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366"];
m65_901 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="ServerWatchdogSteps.cs", label="var sqlConnection = ConnectionUtils.CreateConnection()", span="1368-1368"];
m65_903 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="ServerWatchdogSteps.cs", label="action(sqlConnection, connection)", span="1371-1371"];
m65_902 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="ServerWatchdogSteps.cs", label="var connection = new SqlServerConnection(sqlConnection, IsolationLevel.Serializable, _providers)", span="1369-1369"];
m65_904 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnections(System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>)", span="1366-1366"];
m65_260 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364"];
m65_261 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetJobParameter(null, ''name'', ''value''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="366-372"];
m65_262 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_ThrowsAnException_WhenJobIdIsNull()", span="364-364"];
m65_179 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206"];
m65_180 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetJobData(''1'');\r\n                Assert.Null(result);\r\n            })", span="208-212"];
m65_181 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsNull_WhenThereIsNoSuchJob()", span="206-206"];
m65_77 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105"];
m65_78 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var transaction = connection.CreateWriteTransaction();\r\n                Assert.NotNull(transaction);\r\n            })", span="107-111"];
m65_79 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateWriteTransaction_ReturnsNonNullInstance()", span="105-105"];
m65_157 [cluster="System.DateTime.AddMinutes(double)", file="ServerWatchdogSteps.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m65_336 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482"];
m65_337 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var value = connection.GetJobParameter(''1'', ''hello'');\r\n                Assert.Null(value);\r\n            })", span="484-488"];
m65_338 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ReturnsNull_WhenParameterDoesNotExists()", span="482-482"];
m65_66 [cluster="Unk.UseConnection", file="ServerWatchdogSteps.cs", label="Entry Unk.UseConnection", span=""];
m65_20 [cluster="System.Math.Max(long, long)", file="ServerWatchdogSteps.cs", label="Entry System.Math.Max(long, long)", span="0-0"];
m65_121 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386"];
m65_910 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SampleMethod(string)", span="1386-1386"];
m65_631 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361"];
m65_729 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080"];
m65_730 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListCount(null));\r\n            })", span="1082-1086"];
m65_731 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ThrowsAnException_WhenKeyIsNull()", span="1080-1080"];
m65_56 [cluster="System.Threading.CancellationToken.CancellationToken()", file="ServerWatchdogSteps.cs", label=heartbeats, span=""];
m65_530 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757"];
m65_531 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(null, new Dictionary<string, string>()));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="759-765"];
m65_532 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyIsNull()", span="757-757"];
m65_32 [cluster="Unk.FromStringTimestamp", file="ServerWatchdogSteps.cs", label="Entry Unk.FromStringTimestamp", span=""];
m65_178 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154"];
m65_94 [cluster="Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AcquireDistributedLock(string, System.TimeSpan)", span="76-76"];
m65_107 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141"];
m65_108 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        Job.FromExpression(() => SampleMethod(''hello'')),\r\n                        null,\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''parameters'', exception.ParamName);\r\n            })", span="143-153"];
m65_109 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenParametersCollectionIsNull()", span="141-141"];
m65_612 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867"];
m65_613 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into Hangfire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="869-871"];
m65_614 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''value-1'' },\r\n                    new { Key = ''set-2'', Value = ''value-1'' },\r\n                    new { Key = ''set-1'', Value = ''value-2'' }\r\n                });\r\n\r\n                var result = connection.GetSetCount(''set-1'');\r\n\r\n                Assert.Equal(2, result);\r\n            })", span="873-885"];
m65_615 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsNumberOfElements_InASet()", span="867-867"];
m65_765 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135"];
m65_766 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetListTtl(''my-list'');\r\n                Assert.True(result < TimeSpan.Zero);\r\n            })", span="1137-1141"];
m65_767 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ReturnsNegativeValue_WhenListDoesNotExist()", span="1135-1135"];
m65_151 [cluster="Unk.Query", file="ServerWatchdogSteps.cs", label="Entry Unk.Query", span=""];
m65_489 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687"];
m65_490 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues (@id, '', @heartbeat)''", span="689-691"];
m65_491 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { id = ''server1'', heartbeat = DateTime.UtcNow.AddDays(-1) },\r\n                        new { id = ''server2'', heartbeat = DateTime.UtcNow.AddHours(-12) }\r\n                    });\r\n\r\n                connection.RemoveTimedOutServers(TimeSpan.FromHours(15));\r\n\r\n                var liveServer = sql.Query(''select * from HangFire.Server'').Single();\r\n                Assert.Equal(''server2'', liveServer.Id);\r\n            })", span="693-707"];
m65_492 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.RemoveTimedOutServers_DoItsWorkPerfectly()", span="687-687"];
m65_755 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125"];
m65_756 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetListTtl(null));\r\n            })", span="1127-1131"];
m65_757 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListTtl_ThrowsAnException_WhenKeyIsNull()", span="1125-1125"];
m65_909 [cluster="System.Action<T>.Invoke(T)", file="ServerWatchdogSteps.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m65_18 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerWatchdogSteps.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="38-38"];
m65_226 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267"];
m65_227 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues ('', '', '', getutcdate());\r\ndeclare @JobId int;\r\nset @JobId = scope_identity();\r\ninsert into HangFire.State (JobId, Name, CreatedAt)\r\nvalues (@JobId, 'old-state', getutcdate());\r\ninsert into HangFire.State (JobId, Name, Reason, Data, CreatedAt)\r\nvalues (@JobId, @name, @reason, @data, getutcdate());\r\ndeclare @StateId int;\r\nset @StateId = scope_identity();\r\nupdate HangFire.Job set StateId = @StateId;\r\nselect @JobId as Id;''", span="269-281"];
m65_228 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var data = new Dictionary<string, string>\r\n                {\r\n                    { ''Key'', ''Value'' }\r\n                };\r\n\r\n                var jobId = (int)sql.Query(\r\n                    arrangeSql,\r\n                    new { name = ''Name'', reason = ''Reason'', @data = JobHelper.ToJson(data) }).Single().Id;\r\n\r\n                var result = connection.GetStateData(jobId.ToString());\r\n                Assert.NotNull(result);\r\n\r\n                Assert.Equal(''Name'', result.Name);\r\n                Assert.Equal(''Reason'', result.Reason);\r\n                Assert.Equal(''Value'', result.Data[''Key'']);\r\n            })", span="283-300"];
m65_229 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetStateData_ReturnsCorrectData()", span="267-267"];
m65_803 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194"];
m65_804 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetValueFromHash(''my-hash'', ''name'');\r\n                Assert.Null(result);\r\n            })", span="1196-1200"];
m65_805 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetValueFromHash_ReturnsNull_WhenHashDoesNotExist()", span="1194-1194"];
m65_73 [cluster="Unk.Add", file="ServerWatchdogSteps.cs", label="Entry Unk.Add", span=""];
m65_85 [cluster="Unk.NotNull", file="ServerWatchdogSteps.cs", label="Entry Unk.NotNull", span=""];
m65_63 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91"];
m65_64 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var token = new CancellationToken();\r\n                var anotherProvider = new Mock<IPersistentJobQueueProvider>();\r\n                _providers.Add(anotherProvider.Object, new [] { ''critical'' });\r\n\r\n                Assert.Throws<InvalidOperationException>(\r\n                    () => connection.FetchNextJob(new[] { ''critical'', ''default'' }, token));\r\n            })", span="93-101"];
m65_65 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.FetchNextJob_Throws_IfMultipleProvidersResolved()", span="91-91"];
m65_676 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991"];
m65_677 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetHashCount(null));\r\n            })", span="993-996"];
m65_678 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ThrowsAnException_WhenKeyIsNull()", span="991-991"];
m65_186 [cluster="Unk.Null", file="ServerWatchdogSteps.cs", label="Entry Unk.Null", span=""];
m65_19 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="33-33"];
m65_46 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="ServerWatchdogSteps.cs", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
m65_519 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730"];
m65_520 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues (@key, 0.0, @value)''", span="732-734"];
m65_521 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''some-set'', value = ''1'' },\r\n                    new { key = ''some-set'', value = ''2'' },\r\n                    new { key = ''another-set'', value = ''3'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetAllItemsFromSet(''some-set'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result.Count);\r\n                Assert.Contains(''1'', result);\r\n                Assert.Contains(''2'', result);\r\n            })", span="736-753"];
m65_522 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetAllItemsFromSet_ReturnsAllItems()", span="730-730"];
m65_106 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104"];
m65_204 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m65_499 [cluster="System.DateTime.AddHours(double)", file="ServerWatchdogSteps.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m65_150 [cluster="Unk.NotEmpty", file="ServerWatchdogSteps.cs", label="Entry Unk.NotEmpty", span=""];
m65_15 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerWatchdogSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m65_837 [cluster="Unk.Empty", file="ServerWatchdogSteps.cs", label="Entry Unk.Empty", span=""];
m65_541 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769"];
m65_542 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.SetRangeInHash(''some-hash'', null));\r\n\r\n                Assert.Equal(''keyValuePairs'', exception.ParamName);\r\n            })", span="771-777"];
m65_543 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_ThrowsAnException_WhenKeyValuePairsArgumentIsNull()", span="769-769"];
m65_686 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000"];
m65_687 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetHashCount(''my-hash'');\r\n                Assert.Equal(0, result);\r\n            })", span="1002-1006"];
m65_688 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashCount_ReturnsZero_WhenKeyDoesNotExist()", span="1000-1000"];
m65_702 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035"];
m65_703 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetHashTtl(null));\r\n            })", span="1037-1041"];
m65_704 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetHashTtl_ThrowsAnException_WhenKeyIsNull()", span="1035-1035"];
m65_906 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="ServerWatchdogSteps.cs", label="var connection = new SqlServerConnection( \r\n                ConnectionUtils.CreateConnection(),\r\n                IsolationLevel.Serializable,\r\n                _providers)", span="1377-1380"];
m65_907 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="ServerWatchdogSteps.cs", label="action(connection)", span="1382-1382"];
m65_908 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.UseConnection(System.Action<Hangfire.SqlServer.SqlServerConnection>)", span="1375-1375"];
m65_510 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244"];
m65_58 [cluster="Unk.Verify", file="ServerWatchdogSteps.cs", label="Entry Unk.Verify", span=""];
m65_641 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923"];
m65_642 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetCounter(null));\r\n            })", span="925-929"];
m65_643 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ThrowsAnException_WhenKeyIsNull()", span="923-923"];
m65_819 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229"];
m65_820 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetRangeFromList(null, 0, 1));\r\n\r\n                Assert.Equal(''key'', exception.ParamName);\r\n            })", span="1231-1237"];
m65_821 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ThrowsAnException_WhenKeyIsNull()", span="1229-1229"];
m65_315 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458"];
m65_316 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobParameter(null, ''hello''));\r\n\r\n                Assert.Equal(''id'', exception.ParamName);\r\n            })", span="460-466"];
m65_317 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetParameter_ThrowsAnException_WhenJobIdIsNull()", span="458-458"];
m65_428 [cluster="string.StartsWith(string)", file="ServerWatchdogSteps.cs", label="Entry string.StartsWith(string)", span="0-0"];
m65_487 [cluster="System.TimeSpan.FromMinutes(double)", file="ServerWatchdogSteps.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m65_838 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251"];
m65_839 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.List ([Key], [Value])\r\nvalues (@key, @value)''", span="1253-1255"];
m65_840 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'', value = ''1'' },\r\n                    new { key = ''list-2'', value = ''2'' },\r\n                    new { key = ''list-1'', value = ''3'' },\r\n                    new { key = ''list-1'', value = ''4'' },\r\n                    new { key = ''list-1'', value = ''5'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetRangeFromList(''list-1'', 1, 2);\r\n                \r\n                // Assert\r\n                Assert.Equal(new [] { ''4'', ''3'' }, result);\r\n            })", span="1257-1274"];
m65_841 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAllEntries_WithinGivenBounds()", span="1251-1251"];
m65_159 [cluster="Unk.ToDictionary", file="ServerWatchdogSteps.cs", label="Entry Unk.ToDictionary", span=""];
m65_500 [cluster="System.TimeSpan.FromHours(double)", file="ServerWatchdogSteps.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m65_95 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="125-125"];
m65_96 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.CreateExpiredJob(\r\n                        null,\r\n                        new Dictionary<string, string>(),\r\n                        DateTime.UtcNow,\r\n                        TimeSpan.Zero));\r\n\r\n                Assert.Equal(''job'', exception.ParamName);\r\n            })", span="127-137"];
m65_97 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_ThrowsAnException_WhenJobIsNull()", span="125-125"];
m65_651 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933"];
m65_652 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetCounter(''my-counter'');\r\n                Assert.Equal(0, result);\r\n            })", span="935-939"];
m65_653 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetCounter_ReturnsZero_WhenKeyDoesNotExist()", span="933-933"];
m65_856 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483"];
m65_873 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323"];
m65_874 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(() => connection.GetSetTtl(null));\r\n            })", span="1325-1328"];
m65_875 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetTtl_ThrowsAnException_WhenKeyIsNull()", span="1323-1323"];
m65_86 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="115-115"];
m65_87 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var @lock = connection.AcquireDistributedLock(''1'', TimeSpan.FromSeconds(1));\r\n                Assert.NotNull(@lock);\r\n            })", span="117-121"];
m65_88 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.AcquireLock_ReturnsNonNullInstance()", span="115-115"];
m65_148 [cluster="System.DateTime.DateTime(int, int, int)", file="ServerWatchdogSteps.cs", label="Entry System.DateTime.DateTime(int, int, int)", span="0-0"];
m65_14 [cluster="Unk.GetAllItemsFromSet", file="ServerWatchdogSteps.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m65_270 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219"];
m65_595 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847"];
m65_596 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetSetCount(null));\r\n            })", span="849-853"];
m65_597 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ThrowsAnException_WhenKeyIsNull()", span="847-847"];
m65_93 [cluster="System.TimeSpan.FromSeconds(double)", file="ServerWatchdogSteps.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m65_380 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547"];
m65_381 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.[Set] ([Key], Score, Value)\r\nvalues \r\n('key', 1.0, '1.0'),\r\n('key', -1.0, '-1.0'),\r\n('key', -5.0, '-5.0'),\r\n('another-key', -2.0, '-2.0')''", span="549-555"];
m65_382 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                var result = connection.GetFirstByLowestScoreFromSet(''key'', -1.0, 3.0);\r\n                \r\n                Assert.Equal(''-1.0'', result);\r\n            })", span="557-564"];
m65_383 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsTheValueWithTheLowestScore()", span="547-547"];
m65_632 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898"];
m65_633 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into Hangfire.[Set] ([Key], [Value], [Score])\r\nvalues (@key, @value, 0.0)''", span="900-902"];
m65_634 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql, new List<dynamic>\r\n                {\r\n                    new { Key = ''set-1'', Value = ''1'' },\r\n                    new { Key = ''set-1'', Value = ''2'' },\r\n                    new { Key = ''set-1'', Value = ''3'' },\r\n                    new { Key = ''set-1'', Value = ''4'' },\r\n                    new { Key = ''set-2'', Value = ''4'' },\r\n                    new { Key = ''set-1'', Value = ''5'' }\r\n                });\r\n\r\n                var result = connection.GetRangeFromSet(''set-1'', 2, 3);\r\n\r\n                Assert.Equal(new [] { ''3'', ''4'' }, result);\r\n            })", span="904-919"];
m65_635 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromSet_ReturnsPagedElements()", span="898-898"];
m65_149 [cluster="System.TimeSpan.FromDays(double)", file="ServerWatchdogSteps.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m65_292 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411"];
m65_293 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues ('', '', getutcdate())\r\nselect scope_identity() as Id''", span="413-416"];
m65_294 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = sql.Query(arrangeSql).Single();\r\n                string jobId = job.Id.ToString();\r\n\r\n                connection.SetJobParameter(jobId, ''Name'', ''Value'');\r\n                connection.SetJobParameter(jobId, ''Name'', ''AnotherValue'');\r\n\r\n                var parameter = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                    new { id = jobId, name = ''Name'' }).Single();\r\n\r\n                Assert.Equal(''AnotherValue'', parameter.Value);\r\n            })", span="418-431"];
m65_295 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetParameter_UpdatesValue_WhenParameterWithTheGivenName_AlreadyExists()", span="411-411"];
m65_882 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377"];
m65_325 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233"];
m65_400 [cluster="Hangfire.Server.ServerContext.ServerContext()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.Server.ServerContext.ServerContext()", span="18-18"];
m65_105 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerWatchdogSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m65_218 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191"];
m65_352 [cluster="Unk.GetJobParameter", file="ServerWatchdogSteps.cs", label="Entry Unk.GetJobParameter", span=""];
m65_461 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657"];
m65_462 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Server (Id, Data, LastHeartbeat)\r\nvalues\r\n('server1', '', '2012-12-12 12:12:12'),\r\n('server2', '', '2012-12-12 12:12:12')''", span="659-663"];
m65_463 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                sql.Execute(arrangeSql);\r\n\r\n                connection.Heartbeat(''server1'');\r\n\r\n                var servers = sql.Query(''select * from HangFire.Server'')\r\n                    .ToDictionary(x => (string)x.Id, x => (DateTime)x.LastHeartbeat);\r\n\r\n                Assert.NotEqual(2012, servers[''server1''].Year);\r\n                Assert.Equal(2012, servers[''server2''].Year);\r\n            })", span="665-676"];
m65_464 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_UpdatesLastHeartbeat_OfTheServerWithGivenId()", span="657-657"];
m65_830 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241"];
m65_831 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetRangeFromList(''my-list'', 0, 1);\r\n                Assert.Empty(result);\r\n            })", span="1243-1247"];
m65_832 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetRangeFromList_ReturnsAnEmptyList_WhenListDoesNotExist()", span="1241-1241"];
m65_551 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781"];
m65_552 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                connection.SetRangeInHash(''some-hash'', new Dictionary<string, string>\r\n                {\r\n                    { ''Key1'', ''Value1'' },\r\n                    { ''Key2'', ''Value2'' }\r\n                });\r\n\r\n                var result = sql.Query(\r\n                    ''select * from HangFire.Hash where [Key] = @key'',\r\n                    new { key = ''some-hash'' })\r\n                    .ToDictionary(x => (string)x.Field, x => (string)x.Value);\r\n\r\n                Assert.Equal(''Value1'', result[''Key1'']);\r\n                Assert.Equal(''Value2'', result[''Key2'']);\r\n            })", span="783-798"];
m65_553 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.SetRangeInHash_MergesAllRecords()", span="781-781"];
m65_187 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216"];
m65_188 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, StateName, CreatedAt)\r\nvalues (@invocationData, @arguments, @stateName, getutcdate())\r\nselect scope_identity() as Id''", span="218-221"];
m65_189 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var job = Job.FromExpression(() => SampleMethod(''wrong''));\r\n\r\n                var jobId = sql.Query(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        invocationData = JobHelper.ToJson(InvocationData.Serialize(job)),\r\n                        stateName = ''Succeeded'',\r\n                        arguments = ''['Arguments']''\r\n                    }).Single();\r\n\r\n                var result = connection.GetJobData(((int)jobId.Id).ToString());\r\n\r\n                Assert.NotNull(result);\r\n                Assert.NotNull(result.Job);\r\n                Assert.Equal(''Succeeded'', result.State);\r\n                Assert.Equal(''Arguments'', result.Job.Arguments[0]);\r\n                Assert.Null(result.LoadException);\r\n                Assert.True(DateTime.UtcNow.AddMinutes(-1) < result.CreatedAt);\r\n                Assert.True(result.CreatedAt < DateTime.UtcNow.AddMinutes(1));\r\n            })", span="223-245"];
m65_190 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ReturnsResult_WhenJobExists()", span="216-216"];
m65_429 [cluster="Unk.Contains", file="ServerWatchdogSteps.cs", label="Entry Unk.Contains", span=""];
m65_451 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650"];
m65_452 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                () => connection.Heartbeat(null)))", span="652-653"];
m65_453 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.Heartbeat_ThrowsAnException_WhenServerIdIsNull()", span="650-650"];
m65_746 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100"];
m65_747 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="ServerWatchdogSteps.cs", label="string arrangeSql = @''\r\ninsert into Hangfire.List ([Key])\r\nvalues (@key)''", span="1102-1104"];
m65_748 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                // Arrange\r\n                sql.Execute(arrangeSql, new[]\r\n                {\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-1'' },\r\n                    new { key = ''list-2'' }\r\n                });\r\n\r\n                // Act\r\n                var result = connection.GetListCount(''list-1'');\r\n\r\n                // Assert\r\n                Assert.Equal(2, result);\r\n            })", span="1106-1121"];
m65_749 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetListCount_ReturnsTheNumberOfListElements()", span="1100-1100"];
m65_604 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352"];
m65_152 [cluster="Unk.Single", file="ServerWatchdogSteps.cs", label="Entry Unk.Single", span=""];
m65_169 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199"];
m65_170 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="UseConnection(connection => Assert.Throws<ArgumentNullException>(\r\n                    () => connection.GetJobData(null)))", span="201-202"];
m65_171 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetJobData_ThrowsAnException_WhenJobIdIsNull()", span="199-199"];
m65_122 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157"];
m65_123 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="ServerWatchdogSteps.cs", label="UseConnections((sql, connection) =>\r\n            {\r\n                var createdAt = new DateTime(2012, 12, 12);\r\n                var jobId = connection.CreateExpiredJob(\r\n                    Job.FromExpression(() => SampleMethod(''Hello'')),\r\n                    new Dictionary<string, string> { { ''Key1'', ''Value1'' }, { ''Key2'', ''Value2'' } },\r\n                    createdAt,\r\n                    TimeSpan.FromDays(1));\r\n\r\n                Assert.NotNull(jobId);\r\n                Assert.NotEmpty(jobId);\r\n\r\n                var sqlJob = sql.Query(''select * from HangFire.Job'').Single();\r\n                Assert.Equal(jobId, sqlJob.Id.ToString());\r\n                Assert.Equal(createdAt, sqlJob.CreatedAt);\r\n                Assert.Equal(null, (int?) sqlJob.StateId);\r\n                Assert.Equal(null, (string) sqlJob.StateName);\r\n\r\n                var invocationData = JobHelper.FromJson<InvocationData>((string)sqlJob.InvocationData);\r\n                invocationData.Arguments = sqlJob.Arguments;\r\n\r\n                var job = invocationData.Deserialize();\r\n                Assert.Equal(typeof(SqlServerConnectionFacts), job.Type);\r\n                Assert.Equal(''SampleMethod'', job.Method.Name);\r\n                Assert.Equal(''\''Hello\'''', job.Arguments[0]);\r\n\r\n                Assert.True(createdAt.AddDays(1).AddMinutes(-1) < sqlJob.ExpireAt);\r\n                Assert.True(sqlJob.ExpireAt < createdAt.AddDays(1).AddMinutes(1));\r\n\r\n                var parameters = sql.Query(\r\n                    ''select * from HangFire.JobParameter where JobId = @id'',\r\n                    new { id = jobId })\r\n                    .ToDictionary(x => (string) x.Name, x => (string) x.Value);\r\n\r\n                Assert.Equal(''Value1'', parameters[''Key1'']);\r\n                Assert.Equal(''Value2'', parameters[''Key2'']);\r\n            })", span="159-195"];
m65_124 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.CreateExpiredJob_CreatesAJobInTheStorage_AndSetsItsParameters()", span="157-157"];
m65_158 [cluster="Unk.True", file="ServerWatchdogSteps.cs", label="Entry Unk.True", span=""];
m65_373 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535"];
m65_374 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetFirstByLowestScoreFromSet(\r\n                    ''key'', 0, 1);\r\n\r\n                Assert.Null(result);\r\n            })", span="537-543"];
m65_375 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetFirstByLowestScoreFromSet_ReturnsNull_WhenTheKeyDoesNotExist()", span="535-535"];
m65_738 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442"];
m65_605 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="ServerWatchdogSteps.cs", label="Entry Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857"];
m65_606 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="ServerWatchdogSteps.cs", label="UseConnection(connection =>\r\n            {\r\n                var result = connection.GetSetCount(''my-set'');\r\n                Assert.Equal(0, result);\r\n            })", span="859-863"];
m65_607 [cluster="Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", file="ServerWatchdogSteps.cs", label="Exit Hangfire.SqlServer.Tests.SqlServerConnectionFacts.GetSetCount_ReturnsZero_WhenSetDoesNotExist()", span="857-857"];
m65_911 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", span=""];
m65_912 [file="ServerWatchdogSteps.cs", label=token, span=""];
m65_913 [file="ServerWatchdogSteps.cs", label=queues, span=""];
m65_914 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_915 [file="ServerWatchdogSteps.cs", label=token, span=""];
m65_916 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_917 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_918 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_919 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_920 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_921 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_922 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_923 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_924 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_925 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_926 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_927 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_928 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_929 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_930 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_931 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_932 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_933 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_934 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_935 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_936 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_937 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_938 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_939 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_940 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_941 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_942 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_943 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_944 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_945 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_946 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_947 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_948 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_949 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_950 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_951 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_952 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_953 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_954 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_955 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_956 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_957 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_958 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_959 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_960 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_961 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_962 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_963 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_964 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_965 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_966 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_967 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_968 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_969 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_970 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m65_971 [file="ServerWatchdogSteps.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m65_972 [file="ServerWatchdogSteps.cs", label=arrangeSql, span=""];
m67_0 [cluster="HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", file="SqlServerApplicationLockException.cs", label="Entry HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", span="7-7"];
m67_1 [cluster="HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", file="SqlServerApplicationLockException.cs", label="Exit HangFire.SqlServer.SqlServerApplicationLockException.SqlServerApplicationLockException(string)", span="7-7"];
m69_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerStorage.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m69_35 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69"];
m69_36 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", color=red, community=0, file="SqlServerStorage.cs", label="1: return new SqlStorageConnection(this, CreateAndOpenConnection());", span="71-71"];
m69_37 [cluster="HangFire.SqlServer.SqlServerStorage.GetConnection()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetConnection()", span="69-69"];
m69_34 [cluster="HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(SqlConnection)", span="20-20"];
m69_26 [cluster="object.GetType()", file="SqlServerStorage.cs", label="Entry object.GetType()", span="0-0"];
m69_38 [cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="16-16"];
m69_28 [cluster="string.Replace(string, string)", file="SqlServerStorage.cs", label="Entry string.Replace(string, string)", span="0-0"];
m69_24 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89"];
m69_53 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="var connection = CreateAndOpenConnection()", span="91-91"];
m69_54 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="var edition = connection.Query<int>(''SELECT SERVERPROPERTY ( 'EngineEdition' )'').Single()", span="93-93"];
m69_55 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="return edition >= SqlEngineEdition.Standard && edition <= SqlEngineEdition.Express;", span="94-94"];
m69_56 [cluster="HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.IsSqlEditionSupported(string)", span="89-89"];
m69_45 [cluster="HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", file="SqlServerStorage.cs", label="Entry HangFire.Server.Components.ServerWatchdog.ServerWatchdog(HangFire.JobStorage)", span="33-33"];
m69_57 [cluster="Unk.>", file="SqlServerStorage.cs", label="Entry Unk.>", span=""];
m69_52 [cluster="Unk.Open", file="SqlServerStorage.cs", label="Entry Unk.Open", span=""];
m69_51 [cluster="SqlConnection.cstr", file="SqlServerStorage.cs", label="Entry SqlConnection.cstr", span=""];
m69_27 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98"];
m69_59 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="var stream = assembly.GetManifestResourceStream(resourceName)", span="100-100"];
m69_60 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="var reader = new StreamReader(stream)", span="101-101"];
m69_61 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="return reader.ReadToEnd();", span="103-103"];
m69_62 [cluster="HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetStringResource(System.Reflection.Assembly, string)", span="98-98"];
m69_63 [cluster="System.Reflection.Assembly.GetManifestResourceStream(string)", file="SqlServerStorage.cs", label="Entry System.Reflection.Assembly.GetManifestResourceStream(string)", span="0-0"];
m69_31 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64"];
m69_32 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="return new SqlServerMonitoringApi(CreateAndOpenConnection());", span="66-66"];
m69_33 [cluster="HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="64-64"];
m69_44 [cluster="HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", file="SqlServerStorage.cs", label="Entry HangFire.Server.Components.SchedulePoller.SchedulePoller(HangFire.JobStorage, System.TimeSpan)", span="34-34"];
m69_2 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30"];
m69_3 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="connectionString == null", span="32-32"];
m69_5 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="options == null", span="33-33"];
m69_7 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="_options = options", span="35-35"];
m69_8 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="_connectionString = connectionString", span="36-36"];
m69_9 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="options.PrepareSchemaIfNecessary", span="38-38"];
m69_4 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''connectionString'');", span="32-32"];
m69_6 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="throw new ArgumentNullException(''options'');", span="33-33"];
m69_10 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="PrepareSchemaIfNecessary()", span="40-40"];
m69_11 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string, HangFire.SqlServer.SqlServerStorageOptions)", span="30-30"];
m69_39 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74"];
m69_40 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new SchedulePoller(this, _options.PollInterval);", span="76-76"];
m69_41 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new ServerWatchdog(this);", span="77-77"];
m69_42 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="yield return new ExpirationManager(this);", span="78-78"];
m69_43 [cluster="HangFire.SqlServer.SqlServerStorage.GetComponents()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.GetComponents()", span="74-74"];
m69_0 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25"];
m69_1 [cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="25-25"];
m69_58 [cluster="Unk.Single", file="SqlServerStorage.cs", label="Entry Unk.Single", span=""];
m69_64 [cluster="System.IO.StreamReader.StreamReader(System.IO.Stream)", file="SqlServerStorage.cs", label="Entry System.IO.StreamReader.StreamReader(System.IO.Stream)", span="0-0"];
m69_30 [cluster="Unk.Execute", file="SqlServerStorage.cs", label="Entry Unk.Execute", span=""];
m69_29 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m69_47 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="var connection = new SqlConnection(_connectionString)", span="83-83"];
m69_48 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="connection.Open()", span="84-84"];
m69_49 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="return connection;", span="86-86"];
m69_50 [cluster="HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="81-81"];
m69_65 [cluster="System.IO.StreamReader.ReadToEnd()", file="SqlServerStorage.cs", label="Entry System.IO.StreamReader.ReadToEnd()", span="0-0"];
m69_23 [cluster="Unk.Debug", file="SqlServerStorage.cs", label="Entry Unk.Debug", span=""];
m69_46 [cluster="HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.Components.ExpirationManager.ExpirationManager(HangFire.SqlServer.SqlServerStorage)", span="27-27"];
m69_13 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Entry HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44"];
m69_14 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Log.Debug(''Start installing HangFire SQL objects...'')", span="46-46"];
m69_15 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="!IsSqlEditionSupported(_connectionString)", span="48-48"];
m69_16 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="throw new PlatformNotSupportedException(''The SQL Server edition of the target server is unsupported, e.g. SQL Azure.'');", span="50-50"];
m69_17 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="var script = GetStringResource(GetType().Assembly, ''HangFire.SqlServer.Install.sql'')", span="53-53"];
m69_18 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="script = script.Replace(''SET @TARGET_SCHEMA_VERSION = 2;'', ''SET @TARGET_SCHEMA_VERSION = '' + RequiredSchemaVersion + '';'')", span="54-54"];
m69_19 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="var connection = CreateAndOpenConnection()", span="56-56"];
m69_20 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="connection.Execute(script)", span="58-58"];
m69_21 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Log.Debug(''HangFire SQL objects installed.'')", span="61-61"];
m69_22 [cluster="HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", file="SqlServerStorage.cs", label="Exit HangFire.SqlServer.SqlServerStorage.PrepareSchemaIfNecessary()", span="44-44"];
m69_25 [cluster="System.PlatformNotSupportedException.PlatformNotSupportedException(string)", file="SqlServerStorage.cs", label="Entry System.PlatformNotSupportedException.PlatformNotSupportedException(string)", span="0-0"];
m69_66 [file="SqlServerStorage.cs", label="HangFire.SqlServer.SqlServerStorage", span=""];
m70_0 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="SqlServerWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41"];
m70_1 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", color=green, community=0, file="SqlServerWriteOnlyCounter.cs", label="0: MapHangfireDashboard(app, DefaultDashboardPath, DefaultAppPath)", span="43-43"];
m70_2 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="SqlServerWriteOnlyCounter.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41"];
m70_18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyCounter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m70_24 [cluster="Unk.>", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.>", span=""];
m70_7 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="SqlServerWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
m70_10 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="SqlServerWriteOnlyCounter.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, authorizationFilters, JobStorage.Current)", span="94-94"];
m70_11 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="SqlServerWriteOnlyCounter.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
m70_20 [cluster="Unk.Map", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.Map", span=""];
m70_12 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="SqlServerWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
m70_13 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="SqlServerWriteOnlyCounter.cs", label="app == null", span="115-115"];
m70_15 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="SqlServerWriteOnlyCounter.cs", label="SignatureConversions.AddConversions(app)", span="117-117"];
m70_16 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="SqlServerWriteOnlyCounter.cs", label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="119-123"];
m70_14 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="SqlServerWriteOnlyCounter.cs", label="throw new ArgumentNullException(''app'');", span="115-115"];
m70_17 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="SqlServerWriteOnlyCounter.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
m70_4 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="SqlServerWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
m70_5 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="SqlServerWriteOnlyCounter.cs", label="MapHangfireDashboard(app, dashboardPath, DefaultAppPath, DefaultAuthorizationFilters)", span="58-58"];
m70_6 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="SqlServerWriteOnlyCounter.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
m70_3 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="SqlServerWriteOnlyCounter.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70"];
m70_8 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="SqlServerWriteOnlyCounter.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="75-75"];
m70_9 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="SqlServerWriteOnlyCounter.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70"];
m70_19 [cluster="Unk.AddConversions", file="SqlServerWriteOnlyCounter.cs", label="Entry Unk.AddConversions", span=""];
m70_21 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Entry lambda expression", span="119-123"];
m70_22 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="119-123"];
m70_23 [cluster="lambda expression", file="SqlServerWriteOnlyCounter.cs", label="Exit lambda expression", span="119-123"];
m70_25 [file="SqlServerWriteOnlyCounter.cs", label=string, span=""];
m70_26 [file="SqlServerWriteOnlyCounter.cs", label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span=""];
m70_27 [file="SqlServerWriteOnlyCounter.cs", label="Hangfire.JobStorage", span=""];
m71_13 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlServerWriteOnlyJob.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m71_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlServerWriteOnlyJob.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m71_27 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m71_28 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="40-40"];
m71_29 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) }))", span="42-45"];
m71_30 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="40-40"];
m71_9 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="38-38"];
m71_15 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", span="26-26"];
m71_16 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="0: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="28-30"];
m71_17 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Persist(string)", span="26-26"];
m71_14 [cluster="Unk.Execute", file="SqlServerWriteOnlyJob.cs", label="Entry Unk.Execute", span=""];
m71_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", span="19-19"];
m71_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="2: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="21-23"];
m71_8 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.Expire(string, System.TimeSpan)", span="19-19"];
m71_31 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Entry lambda expression", span="42-45"];
m71_10 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Entry lambda expression", span="21-23"];
m71_11 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="1: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="21-23"];
m71_12 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Exit lambda expression", span="21-23"];
m71_18 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Entry lambda expression", span="28-30"];
m71_19 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="1: x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="28-30"];
m71_20 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Exit lambda expression", span="28-30"];
m71_24 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Entry lambda expression", span="35-37"];
m71_25 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="1: x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId })", span="35-37"];
m71_26 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Exit lambda expression", span="35-37"];
m71_32 [cluster="lambda expression", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="1: x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) })", span="42-45"];
m71_33 [cluster="lambda expression", file="SqlServerWriteOnlyJob.cs", label="Exit lambda expression", span="42-45"];
m71_0 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="12-12"];
m71_1 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="1: transaction == null", span="14-14"];
m71_2 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="1: throw new ArgumentNullException(''transaction'');", span="14-14"];
m71_3 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="2: _transaction = transaction", span="16-16"];
m71_4 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SqlServerWriteOnlyJob(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="12-12"];
m71_21 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyJob.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="33-33"];
m71_22 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", color=green, community=0, file="SqlServerWriteOnlyJob.cs", label="1: _transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId }))", span="35-37"];
m71_23 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="SqlServerWriteOnlyJob.cs", label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="33-33"];
m71_34 [file="SqlServerWriteOnlyJob.cs", label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", span=""];
m71_35 [file="SqlServerWriteOnlyJob.cs", label=string, span=""];
m71_36 [file="SqlServerWriteOnlyJob.cs", label="System.TimeSpan", span=""];
m71_37 [file="SqlServerWriteOnlyJob.cs", label=string, span=""];
m71_38 [file="SqlServerWriteOnlyJob.cs", label=string, span=""];
m71_39 [file="SqlServerWriteOnlyJob.cs", label=string, span=""];
m71_40 [file="SqlServerWriteOnlyJob.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m71_41 [file="SqlServerWriteOnlyJob.cs", label=string, span=""];
m71_42 [file="SqlServerWriteOnlyJob.cs", label="System.Collections.Generic.Dictionary<string, string>", span=""];
m74_34 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", span="66-66"];
m74_35 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="SqlServerWriteOnlySet.cs", label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId))", span="68-70"];
m74_36 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheScheduleContainsTheJob()", span="66-66"];
m74_8 [cluster="HangFire.JobHelper.ToTimestamp(System.DateTime)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.JobHelper.ToTimestamp(System.DateTime)", span="44-44"];
m74_5 [cluster="Unk.Given", file="SqlServerWriteOnlySet.cs", label="Entry Unk.Given", span=""];
m74_29 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", span="58-58"];
m74_30 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="SqlServerWriteOnlySet.cs", label="Assert.IsFalse(Redis.Client.SortedSetContainsItem(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId))", span="60-62"];
m74_31 [cluster="HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.Tests.SchedulePollerSteps.ThenTheScheduleDoesNotContainItAnymore()", span="58-58"];
m74_21 [cluster="System.DateTime.AddHours(double)", file="SqlServerWriteOnlySet.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m74_7 [cluster="System.DateTime.AddMinutes(double)", file="SqlServerWriteOnlySet.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m74_10 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", span="25-25"];
m74_11 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="2: Given(String.Format(''a job of the '{0}' type'', type))", span="27-27"];
m74_12 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="2: And(''it's state is Scheduled'')", span="28-28"];
m74_13 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="2: Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddMinutes(-1)))", span="30-33"];
m74_14 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.Tests.SchedulePollerSteps.GivenAScheduleJobOfType(string)", span="25-25"];
m74_32 [cluster="Unk.SortedSetContainsItem", file="SqlServerWriteOnlySet.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m74_0 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", span="13-13"];
m74_1 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="2: Given(''a job'')", span="15-15"];
m74_2 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="2: And(''it's state is Scheduled'')", span="16-16"];
m74_3 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="0: Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddMinutes(-1)))", span="18-21"];
m74_4 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.Tests.SchedulePollerSteps.GivenAScheduledJob()", span="13-13"];
m74_37 [cluster="Unk.IsTrue", file="SqlServerWriteOnlySet.cs", label="Entry Unk.IsTrue", span=""];
m74_9 [cluster="Unk.AddItemToSortedSet", file="SqlServerWriteOnlySet.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m74_33 [cluster="Unk.IsFalse", file="SqlServerWriteOnlySet.cs", label="Entry Unk.IsFalse", span=""];
m74_15 [cluster="string.Format(string, object)", file="SqlServerWriteOnlySet.cs", label="Entry string.Format(string, object)", span="0-0"];
m74_6 [cluster="Unk.And", file="SqlServerWriteOnlySet.cs", label="Entry Unk.And", span=""];
m74_16 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="SqlServerWriteOnlySet.cs", label="Entry HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", span="37-37"];
m74_19 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="2: Redis.Client.AddItemToSortedSet(\r\n                ''hangfire:schedule'',\r\n                JobSteps.DefaultJobId,\r\n                JobHelper.ToTimestamp(DateTime.UtcNow.AddHours(1)))", span="42-45"];
m74_17 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="1: Given(''a job'')", span="39-39"];
m74_18 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", color=green, community=0, file="SqlServerWriteOnlySet.cs", label="2: And(''it's state is Scheduled'')", span="40-40"];
m74_20 [cluster="HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", file="SqlServerWriteOnlySet.cs", label="Exit HangFire.Tests.SchedulePollerSteps.GivenAFutureJob()", span="37-37"];
m77_49 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", span="115-115"];
m77_50 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", file="SqlStorageConnection.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="117-119"];
m77_51 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.RemoveServer(string)", span="115-115"];
m77_16 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="35-35"];
m77_17 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="return new SqlServerFetcher(_connection, queueNames);", span="37-37"];
m77_18 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="35-35"];
m77_19 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m77_47 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="4-4"];
m77_24 [cluster="string.Format(string, object)", file="SqlStorageConnection.cs", label="Entry string.Format(string, object)", span="0-0"];
m77_55 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="129-129"];
m77_56 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlStorageConnection.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="131-133"];
m77_57 [cluster="HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="129-129"];
m77_0 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="SqlStorageConnection.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="25-25"];
m77_2 [cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", color=green, community=0, file="SqlStorageConnection.cs", label="1: Jobs = new SqlServerJob(_connection)", span="20-20"];
m77_1 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="SqlStorageConnection.cs", label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="25-25"];
m77_3 [cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", color=green, community=0, file="SqlStorageConnection.cs", label="2: Sets = new SqlServerSet(_connection)", span="21-21"];
m77_4 [cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlStorageConnection.cs", label="Storage = storage", span="22-22"];
m77_5 [cluster="HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.SqlStorageConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="17-17"];
m77_52 [cluster="HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", span="122-122"];
m77_53 [cluster="HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", file="SqlStorageConnection.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="124-126"];
m77_54 [cluster="HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.Heartbeat(string)", span="122-122"];
m77_58 [cluster="System.TimeSpan.Negate()", file="SqlStorageConnection.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m77_39 [cluster="Unk.>", file="SqlStorageConnection.cs", label="Entry Unk.>", span=""];
m77_6 [cluster="HangFire.SqlServer.DataTypes.SqlServerJob.SqlServerJob(SqlConnection)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerJob.SqlServerJob(SqlConnection)", span="14-14"];
m77_41 [cluster="Unk.ToString", file="SqlStorageConnection.cs", label="Entry Unk.ToString", span=""];
m77_38 [cluster="System.DateTime.Add(System.TimeSpan)", file="SqlStorageConnection.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m77_25 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="51-51"];
m77_27 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    state = ''Created'',\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = JobHelper.ToJson(arguments),\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="62-71"];
m77_34 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="91-91"];
m77_26 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (State, InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@state, @invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="57-60"];
m77_28 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="parameters.Count > 0", span="73-73"];
m77_32 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="79-84"];
m77_35 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="return jobId;", span="94-94"];
m77_29 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="var parameterArray = new object[parameters.Count]", span="75-75"];
m77_33 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="87-89"];
m77_31 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label=parameters, span="77-77"];
m77_30 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="int parameterIndex = 0", span="76-76"];
m77_36 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="51-51"];
m77_43 [cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="97-97"];
m77_45 [cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="106-112"];
m77_44 [cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues.ToArray(),\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="99-104"];
m77_46 [cluster="HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="97-97"];
m77_11 [cluster="Unk.Dispose", file="SqlStorageConnection.cs", label="Entry Unk.Dispose", span=""];
m77_23 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="28-28"];
m77_37 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="SqlStorageConnection.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m77_15 [cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="15-15"];
m77_40 [cluster="Unk.Single", file="SqlStorageConnection.cs", label="Entry Unk.Single", span=""];
m77_8 [cluster="HangFire.SqlServer.SqlStorageConnection.Dispose()", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.Dispose()", span="25-25"];
m77_9 [cluster="HangFire.SqlServer.SqlStorageConnection.Dispose()", file="SqlStorageConnection.cs", label="_connection.Dispose()", span="27-27"];
m77_10 [cluster="HangFire.SqlServer.SqlStorageConnection.Dispose()", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.Dispose()", span="25-25"];
m77_42 [cluster="Unk.Execute", file="SqlStorageConnection.cs", label="Entry Unk.Execute", span=""];
m77_7 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11"];
m77_20 [cluster="HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", span="40-40"];
m77_21 [cluster="HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", color=green, community=0, file="SqlStorageConnection.cs", label="0: return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="42-44"];
m77_22 [cluster="HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.AcquireJobLock(string)", span="40-40"];
m77_48 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SqlStorageConnection.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m77_12 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", file="SqlStorageConnection.cs", label="Entry HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", span="30-30"];
m77_13 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", color=green, community=0, file="SqlStorageConnection.cs", label="1: return new SqlServerWriteOnlyTransaction(_connection);", span="32-32"];
m77_14 [cluster="HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", file="SqlStorageConnection.cs", label="Exit HangFire.SqlServer.SqlStorageConnection.CreateWriteTransaction()", span="30-30"];
m77_59 [file="SqlStorageConnection.cs", label="HangFire.SqlServer.SqlStorageConnection", span=""];
m78_104 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SqlStoredJobs.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m78_18 [cluster="Unk.RegisterPathHandlerFactory", file="SqlStoredJobs.cs", label="Entry Unk.RegisterPathHandlerFactory", span=""];
m78_131 [cluster="string.Format(string, object, object)", file="SqlStoredJobs.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m78_76 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="14-14"];
m78_30 [cluster="HangFire.Web.Pages.QueuesPage.QueuesPage()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.Pages.QueuesPage.QueuesPage()", span="35-35"];
m78_0 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="17-17"];
m78_1 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterDefaultPathHandlerFactory(() => new DashboardPage())", span="19-19"];
m78_2 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(\r\n                ''/job/(?<JobId>.+)'',\r\n                x => new JobDetailsPage(x.Groups[''JobId''].Value))", span="21-23"];
m78_3 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(''/queues'', x => new QueuesPage())", span="25-25"];
m78_4 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(\r\n                ''/queues/(?<Queue>.+)'',\r\n                x => new EnqueuedJobsPage(x.Groups[''Queue''].Value))", span="26-28"];
m78_5 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(''/processing'', x => new ProcessingJobsPage())", span="30-30"];
m78_6 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(''/scheduled'', x => new ScheduledJobsPage())", span="31-31"];
m78_7 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(\r\n                ''/schedule/enqueue/(?<JobId>.+)'',\r\n                x => new CommandHandler(() => Command.EnqueueScheduled(x.Groups[''JobId''].Value)))", span="33-35"];
m78_8 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(''/servers'', x => new ServersPage())", span="37-37"];
m78_9 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(''/succeeded'', x => new SucceededJobs())", span="38-38"];
m78_10 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(''/failed'', x => new FailedJobsPage())", span="39-39"];
m78_11 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(\r\n                ''/failed/retry/(?<JobId>.+)'', \r\n                x => new CommandHandler(() => Command.Retry(x.Groups[''JobId''].Value)))", span="41-43"];
m78_12 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(''/js/scripts.js'',  x => new JavaScriptHandler())", span="45-45"];
m78_13 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(''/css/styles.css'', x => new StyleSheetHandler())", span="46-46"];
m78_14 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(\r\n                ''/fonts/(?<File>.+)'',\r\n                x => new FontsHandler(x.Groups[''File''].Value))", span="48-50"];
m78_15 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="RegisterPathHandlerFactory(\r\n                ''/stats'',\r\n                x => new JsonStats())", span="52-54"];
m78_16 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="SqlStoredJobs.cs", label="Exit HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="17-17"];
m78_26 [cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", span="6-6"];
m78_58 [cluster="HangFire.Web.Pages.SucceededJobs.SucceededJobs()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.Pages.SucceededJobs.SucceededJobs()", span="25-25"];
m78_126 [cluster="string.EndsWith(string, System.StringComparison)", file="SqlStoredJobs.cs", label="Entry string.EndsWith(string, System.StringComparison)", span="0-0"];
m78_38 [cluster="HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", span="25-25"];
m78_90 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", span="64-64"];
m78_91 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="SqlStoredJobs.cs", label="_defaultHandlerFactory = handlerFactory", span="66-66"];
m78_92 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="SqlStoredJobs.cs", label="Exit HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", span="64-64"];
m78_50 [cluster="System.Func<T, TResult>.Invoke(T)", file="SqlStoredJobs.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m78_128 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", span="119-119"];
m78_129 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="SqlStoredJobs.cs", label="return String.Format(''{0}.Content.{1}'', typeof (HangFirePageFactory).Namespace, contentFolder);", span="121-121"];
m78_130 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="SqlStoredJobs.cs", label="Exit HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", span="119-119"];
m78_109 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.HangFirePageFactory.FindHandler(string)", span="89-89"];
m78_110 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="resource.Length == 0 || resource.Equals(''/'', StringComparison.OrdinalIgnoreCase)", span="91-91"];
m78_118 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="var match = Regex.Match(\r\n                    resource,\r\n                    pattern, \r\n                    RegexOptions.CultureInvariant | RegexOptions.IgnoreCase | RegexOptions.Singleline)", span="105-108"];
m78_111 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="return _defaultHandlerFactory();", span="93-93"];
m78_112 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label=PathHandlerFactories, span="96-96"];
m78_113 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="var pattern = pathHandlerFactory.Item1", span="98-98"];
m78_121 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="return null;", span="116-116"];
m78_120 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="return pathHandlerFactory.Item2(match);", span="112-112"];
m78_114 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="!pattern.StartsWith(''^'', StringComparison.OrdinalIgnoreCase)", span="100-100"];
m78_115 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="pattern = ''^'' + pattern", span="101-101"];
m78_116 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="!pattern.EndsWith(''$'', StringComparison.OrdinalIgnoreCase)", span="102-102"];
m78_117 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="pattern += ''$''", span="103-103"];
m78_119 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="match.Success", span="110-110"];
m78_122 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="SqlStoredJobs.cs", label="Exit HangFire.Web.HangFirePageFactory.FindHandler(string)", span="89-89"];
m78_108 [cluster="HttpException.cstr", file="SqlStoredJobs.cs", label="Entry HttpException.cstr", span=""];
m78_42 [cluster="HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", span="25-25"];
m78_80 [cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.FontsHandler.FontsHandler(string)", span="6-6"];
m78_22 [cluster="HangFire.Web.Pages.DashboardPage.DashboardPage()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.Pages.DashboardPage.DashboardPage()", span="41-41"];
m78_105 [cluster="Unk.Add", file="SqlStoredJobs.cs", label="Entry Unk.Add", span=""];
m78_46 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="10-10"];
m78_125 [cluster="string.StartsWith(string, System.StringComparison)", file="SqlStoredJobs.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m78_124 [cluster="System.Func<TResult>.Invoke()", file="SqlStoredJobs.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m78_88 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="SqlStoredJobs.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m78_84 [cluster="HangFire.Web.JsonStats.JsonStats()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.JsonStats.JsonStats()", span="7-7"];
m78_127 [cluster="System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", file="SqlStoredJobs.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m78_62 [cluster="HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", span="30-30"];
m78_72 [cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="18-18"];
m78_66 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="43-43"];
m78_19 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="19-19"];
m78_23 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="23-23"];
m78_27 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="25-25"];
m78_31 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="28-28"];
m78_35 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="30-30"];
m78_39 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="31-31"];
m78_43 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="35-35"];
m78_51 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="37-37"];
m78_55 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="38-38"];
m78_59 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="39-39"];
m78_63 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="43-43"];
m78_69 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="45-45"];
m78_73 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="46-46"];
m78_77 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="50-50"];
m78_81 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="54-54"];
m78_20 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new DashboardPage()", span="19-19"];
m78_21 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="19-19"];
m78_24 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new JobDetailsPage(x.Groups[''JobId''].Value)", span="23-23"];
m78_25 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="23-23"];
m78_28 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new QueuesPage()", span="25-25"];
m78_29 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="25-25"];
m78_32 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new EnqueuedJobsPage(x.Groups[''Queue''].Value)", span="28-28"];
m78_33 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="28-28"];
m78_36 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new ProcessingJobsPage()", span="30-30"];
m78_37 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="30-30"];
m78_40 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new ScheduledJobsPage()", span="31-31"];
m78_41 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="31-31"];
m78_44 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new CommandHandler(() => Command.EnqueueScheduled(x.Groups[''JobId''].Value))", span="35-35"];
m78_48 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Command.EnqueueScheduled(x.Groups[''JobId''].Value)", span="35-35"];
m78_45 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="35-35"];
m78_47 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Entry lambda expression", span="35-35"];
m78_49 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="35-35"];
m78_52 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new ServersPage()", span="37-37"];
m78_53 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="37-37"];
m78_56 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new SucceededJobs()", span="38-38"];
m78_57 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="38-38"];
m78_60 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new FailedJobsPage()", span="39-39"];
m78_61 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="39-39"];
m78_64 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new CommandHandler(() => Command.Retry(x.Groups[''JobId''].Value))", span="43-43"];
m78_67 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Command.Retry(x.Groups[''JobId''].Value)", span="43-43"];
m78_65 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="43-43"];
m78_68 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="43-43"];
m78_70 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new JavaScriptHandler()", span="45-45"];
m78_71 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="45-45"];
m78_74 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new StyleSheetHandler()", span="46-46"];
m78_75 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="46-46"];
m78_78 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new FontsHandler(x.Groups[''File''].Value)", span="50-50"];
m78_79 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="50-50"];
m78_82 [cluster="lambda expression", file="SqlStoredJobs.cs", label="new JsonStats()", span="54-54"];
m78_83 [cluster="lambda expression", file="SqlStoredJobs.cs", label="Exit lambda expression", span="54-54"];
m78_123 [cluster="string.Equals(string, System.StringComparison)", file="SqlStoredJobs.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m78_34 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4"];
m78_93 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", span="69-69"];
m78_94 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="context == null", span="71-71"];
m78_96 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="context.Items.Add(''GenerationStartedAt'', DateTime.UtcNow)", span="73-73"];
m78_97 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="var request = context.Request", span="75-75"];
m78_95 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="throw new ArgumentNullException(''context'');", span="71-71"];
m78_98 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="var resource = request.PathInfo.Length == 0\r\n                ? String.Empty\r\n                : request.PathInfo.ToLowerInvariant()", span="76-78"];
m78_99 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="var handler = FindHandler(resource)", span="80-80"];
m78_100 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="handler == null", span="81-81"];
m78_102 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="return handler;", span="86-86"];
m78_101 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="throw new HttpException(404, ''Resource not found.'');", span="83-83"];
m78_103 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="SqlStoredJobs.cs", label="Exit HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", span="69-69"];
m78_54 [cluster="HangFire.Web.Pages.ServersPage.ServersPage()", file="SqlStoredJobs.cs", label="Entry HangFire.Web.Pages.ServersPage.ServersPage()", span="35-35"];
m78_89 [cluster="System.Collections.Generic.List<T>.Add(T)", file="SqlStoredJobs.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m78_106 [cluster="Unk.ToLowerInvariant", file="SqlStoredJobs.cs", label="Entry Unk.ToLowerInvariant", span=""];
m78_132 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", span="124-124"];
m78_133 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="SqlStoredJobs.cs", label="return String.Format(''{0}.{1}'', GetContentFolderNamespace(contentFolder), resourceName);", span="126-126"];
m78_134 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="SqlStoredJobs.cs", label="Exit HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", span="124-124"];
m78_107 [cluster="Unk.FindHandler", file="SqlStoredJobs.cs", label="Entry Unk.FindHandler", span=""];
m78_85 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", span="57-57"];
m78_86 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="SqlStoredJobs.cs", label="PathHandlerFactories.Add(new Tuple<string, Func<Match, IHttpHandler>>(\r\n                pathPattern, handlerFactory))", span="60-61"];
m78_87 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="SqlStoredJobs.cs", label="Exit HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", span="57-57"];
m78_17 [cluster="Unk.RegisterDefaultPathHandlerFactory", file="SqlStoredJobs.cs", label="Entry Unk.RegisterDefaultPathHandlerFactory", span=""];
m78_135 [cluster="HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", file="SqlStoredJobs.cs", label="Entry HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", span="129-129"];
m78_136 [cluster="HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", file="SqlStoredJobs.cs", label="Exit HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", span="129-129"];
m78_137 [file="SqlStoredJobs.cs", label="System.Text.RegularExpressions.Match", span=""];
m78_138 [file="SqlStoredJobs.cs", label="System.Text.RegularExpressions.Match", span=""];
m78_139 [file="SqlStoredJobs.cs", label="HangFire.Web.HangFirePageFactory", span=""];
m79_7 [cluster="Unk.SingleOrDefault", file="SqlStoredSets.cs", label="Entry Unk.SingleOrDefault", span=""];
m79_6 [cluster="Unk.>", file="SqlStoredSets.cs", label="Entry Unk.>", span=""];
m79_3 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SqlStoredSets.cs", label="Entry HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m79_4 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SqlStoredSets.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="18-21"];
m79_5 [cluster="HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", file="SqlStoredSets.cs", label="Exit HangFire.SqlServer.SqlStoredSets.GetFirstByLowestScore(string, long, long)", span="16-16"];
m79_0 [cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SqlStoredSets.cs", label="Entry HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", span="11-11"];
m79_1 [cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SqlStoredSets.cs", label="_connection = connection", span="13-13"];
m79_2 [cluster="HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", file="SqlStoredSets.cs", label="Exit HangFire.SqlServer.SqlStoredSets.SqlStoredSets(SqlConnection)", span="11-11"];
m79_8 [file="SqlStoredSets.cs", label="HangFire.SqlServer.SqlStoredSets", span=""];
m80_6 [cluster="string.Format(string, object, object, object)", file="SqlWriteTransaction.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m80_4 [cluster="PooledRedisClientManager.cstr", file="SqlWriteTransaction.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m80_3 [cluster="string.IsNullOrEmpty(string)", file="SqlWriteTransaction.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m80_5 [cluster="string.Format(string, object, object)", file="SqlWriteTransaction.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m80_7 [cluster="HangFire.RedisFactory.CreateClient()", file="SqlWriteTransaction.cs", label="Entry HangFire.RedisFactory.CreateClient()", span="50-50"];
m80_8 [cluster="HangFire.RedisFactory.CreateClient()", color=red, community=0, file="SqlWriteTransaction.cs", label="2: return new RedisClient(\r\n                Host, \r\n                Port,\r\n                Password,\r\n                Db);", span="52-56"];
m80_9 [cluster="HangFire.RedisFactory.CreateClient()", file="SqlWriteTransaction.cs", label="Exit HangFire.RedisFactory.CreateClient()", span="50-50"];
m80_10 [cluster="RedisClient.cstr", file="SqlWriteTransaction.cs", label="Entry RedisClient.cstr", span=""];
m80_11 [cluster="HangFire.RedisFactory.GetManager()", file="SqlWriteTransaction.cs", label="Entry HangFire.RedisFactory.GetManager()", span="59-59"];
m80_12 [cluster="HangFire.RedisFactory.GetManager()", color=red, community=0, file="SqlWriteTransaction.cs", label="1: return _manager.Value;", span="61-61"];
m80_13 [cluster="HangFire.RedisFactory.GetManager()", file="SqlWriteTransaction.cs", label="Exit HangFire.RedisFactory.GetManager()", span="59-59"];
m80_0 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Entry lambda expression", span="8-12"];
m80_1 [cluster="lambda expression", color=red, community=0, file="SqlWriteTransaction.cs", label="2: String.IsNullOrEmpty(Password)\r\n                ? new PooledRedisClientManager(\r\n                    _db, String.Format(''{0}:{1}'', _host, _port)) \r\n                : new PooledRedisClientManager(\r\n                    _db, String.Format(''{0}:{1}@{2}'', _host, _port, Password))", span="8-12"];
m80_2 [cluster="lambda expression", file="SqlWriteTransaction.cs", label="Exit lambda expression", span="8-12"];
m81_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateApplyingContext.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m81_19 [cluster="HangFire.JobActivator.JobActivator()", file="StateApplyingContext.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m81_27 [cluster="System.Threading.Thread.Join()", file="StateApplyingContext.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m81_44 [cluster="HangFire.Server.JobServer.RunServer()", file="StateApplyingContext.cs", label="Entry HangFire.Server.JobServer.RunServer()", span="82-82"];
m81_45 [cluster="HangFire.Server.JobServer.RunServer()", file="StateApplyingContext.cs", label="AnnounceServer()", span="86-86"];
m81_46 [cluster="HangFire.Server.JobServer.RunServer()", file="StateApplyingContext.cs", label="StartServer()", span="87-87"];
m81_47 [cluster="HangFire.Server.JobServer.RunServer()", file="StateApplyingContext.cs", label="_stopped.WaitOne()", span="89-89"];
m81_48 [cluster="HangFire.Server.JobServer.RunServer()", file="StateApplyingContext.cs", label="StopServer()", span="91-91"];
m81_49 [cluster="HangFire.Server.JobServer.RunServer()", file="StateApplyingContext.cs", label="RemoveServer()", span="92-92"];
m81_50 [cluster="HangFire.Server.JobServer.RunServer()", file="StateApplyingContext.cs", label=Exception, span="94-94"];
m81_51 [cluster="HangFire.Server.JobServer.RunServer()", file="StateApplyingContext.cs", label="_logger.Fatal(''Unexpected exception caught.'', ex)", span="96-96"];
m81_52 [cluster="HangFire.Server.JobServer.RunServer()", file="StateApplyingContext.cs", label="Exit HangFire.Server.JobServer.RunServer()", span="82-82"];
m81_79 [cluster="Unk.SetRangeInHash", file="StateApplyingContext.cs", label="Entry Unk.SetRangeInHash", span=""];
m81_17 [cluster="string.Format(string, object, object)", file="StateApplyingContext.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m81_21 [cluster="System.Threading.Thread.Start()", file="StateApplyingContext.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m81_22 [cluster="HangFire.Server.JobServer.Dispose()", file="StateApplyingContext.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="61-61"];
m81_23 [cluster="HangFire.Server.JobServer.Dispose()", file="StateApplyingContext.cs", label="_stopped.Set()", span="63-63"];
m81_24 [cluster="HangFire.Server.JobServer.Dispose()", file="StateApplyingContext.cs", label="_serverThread.Join()", span="64-64"];
m81_25 [cluster="HangFire.Server.JobServer.Dispose()", file="StateApplyingContext.cs", label="Exit HangFire.Server.JobServer.Dispose()", span="61-61"];
m81_71 [cluster="Unk.AddItemToSet", file="StateApplyingContext.cs", label="Entry Unk.AddItemToSet", span=""];
m81_75 [cluster="string.Format(string, object)", file="StateApplyingContext.cs", label="Entry string.Format(string, object)", span="0-0"];
m81_78 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="StateApplyingContext.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m81_96 [cluster="Unk.RemoveEntry", file="StateApplyingContext.cs", label="Entry Unk.RemoveEntry", span=""];
m81_15 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="StateApplyingContext.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0"];
m81_77 [cluster="int.ToString()", file="StateApplyingContext.cs", label="Entry int.ToString()", span="0-0"];
m81_16 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="StateApplyingContext.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m81_34 [cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="StateApplyingContext.cs", label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10"];
m81_26 [cluster="System.Threading.EventWaitHandle.Set()", file="StateApplyingContext.cs", label="Entry System.Threading.EventWaitHandle.Set()", span="0-0"];
m81_33 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="StateApplyingContext.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
m81_35 [cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="StateApplyingContext.cs", label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17"];
m81_37 [cluster="HangFire.Server.JobServer.StopServer()", file="StateApplyingContext.cs", label="Entry HangFire.Server.JobServer.StopServer()", span="74-74"];
m81_38 [cluster="HangFire.Server.JobServer.StopServer()", file="StateApplyingContext.cs", label="_fetchedJobsWatcher.Dispose()", span="76-76"];
m81_39 [cluster="HangFire.Server.JobServer.StopServer()", file="StateApplyingContext.cs", label="_schedulePoller.Dispose()", span="77-77"];
m81_40 [cluster="HangFire.Server.JobServer.StopServer()", file="StateApplyingContext.cs", label="_manager.Dispose()", span="78-78"];
m81_41 [cluster="HangFire.Server.JobServer.StopServer()", file="StateApplyingContext.cs", label="Exit HangFire.Server.JobServer.StopServer()", span="74-74"];
m81_76 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateApplyingContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m81_0 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="Entry HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="28-28"];
m81_1 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="_workerCount = workerCount", span="35-35"];
m81_2 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="_queues = queues", span="36-36"];
m81_3 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="_pollInterval = pollInterval", span="37-37"];
m81_4 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="queues == null", span="39-39"];
m81_6 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="pollInterval != pollInterval.Duration()", span="41-41"];
m81_8 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="var serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", span="46-46"];
m81_9 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="_context = new ServerContext(\r\n                serverName,\r\n                jobActivator ?? new JobActivator(),\r\n                JobPerformer.Current)", span="48-51"];
m81_5 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="throw new ArgumentNullException(''queues'');", span="39-39"];
m81_7 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="43-43"];
m81_10 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="_serverThread = new Thread(RunServer)\r\n                {\r\n                    Name = typeof(JobServer).Name,\r\n                    IsBackground = true\r\n                }", span="53-57"];
m81_11 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="_serverThread.Start()", span="58-58"];
m81_12 [cluster="HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", file="StateApplyingContext.cs", label="Exit HangFire.Server.JobServer.JobServer(string, int, System.Collections.Generic.IEnumerable<string>, System.TimeSpan, HangFire.JobActivator)", span="28-28"];
m81_42 [cluster="HangFire.Server.ThreadWrapper.Dispose()", file="StateApplyingContext.cs", label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23"];
m81_83 [cluster="Unk.AddItemToList", file="StateApplyingContext.cs", label="Entry Unk.AddItemToList", span=""];
m81_53 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateApplyingContext.cs", label="Entry HangFire.Server.JobServer.AnnounceServer()", span="100-100"];
m81_57 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateApplyingContext.cs", label="var transaction = _redis.CreateTransaction()", span="102-102"];
m81_58 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateApplyingContext.cs", label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="104-105"];
m81_59 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateApplyingContext.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        }))", span="107-113"];
m81_62 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateApplyingContext.cs", label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1))", span="118-120"];
m81_63 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateApplyingContext.cs", label="transaction.Commit()", span="123-123"];
m81_60 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateApplyingContext.cs", label=_queues, span="115-115"];
m81_61 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateApplyingContext.cs", label="var queue1 = queue", span="117-117"];
m81_64 [cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateApplyingContext.cs", label="Exit HangFire.Server.JobServer.AnnounceServer()", span="100-100"];
m81_92 [cluster="Unk.RemoveItemFromSet", file="StateApplyingContext.cs", label="Entry Unk.RemoveItemFromSet", span=""];
m81_56 [cluster="Unk.Fatal", file="StateApplyingContext.cs", label="Entry Unk.Fatal", span=""];
m81_14 [cluster="System.TimeSpan.Duration()", file="StateApplyingContext.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m81_28 [cluster="HangFire.Server.JobServer.StartServer()", file="StateApplyingContext.cs", label="Entry HangFire.Server.JobServer.StartServer()", span="67-67"];
m81_29 [cluster="HangFire.Server.JobServer.StartServer()", file="StateApplyingContext.cs", label="_manager = new JobManager(_context, _workerCount, _queues)", span="69-69"];
m81_30 [cluster="HangFire.Server.JobServer.StartServer()", file="StateApplyingContext.cs", label="_schedulePoller = new ThreadWrapper(new SchedulePoller(_pollInterval))", span="70-70"];
m81_31 [cluster="HangFire.Server.JobServer.StartServer()", file="StateApplyingContext.cs", label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher())", span="71-71"];
m81_32 [cluster="HangFire.Server.JobServer.StartServer()", file="StateApplyingContext.cs", label="Exit HangFire.Server.JobServer.StartServer()", span="67-67"];
m81_94 [cluster="lambda expression", file="StateApplyingContext.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName))", span="135-137"];
m81_68 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="104-105"];
m81_72 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="107-113"];
m81_81 [cluster="lambda expression", file="StateApplyingContext.cs", label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queue1)", span="118-120"];
m81_80 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="118-120"];
m81_69 [cluster="lambda expression", file="StateApplyingContext.cs", label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="104-105"];
m81_70 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="104-105"];
m81_73 [cluster="lambda expression", file="StateApplyingContext.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', _workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="107-113"];
m81_74 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="107-113"];
m81_82 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="118-120"];
m81_89 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="131-133"];
m81_93 [cluster="lambda expression", file="StateApplyingContext.cs", label="Entry lambda expression", span="135-137"];
m81_90 [cluster="lambda expression", file="StateApplyingContext.cs", label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName)", span="131-133"];
m81_91 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="131-133"];
m81_95 [cluster="lambda expression", file="StateApplyingContext.cs", label="Exit lambda expression", span="135-137"];
m81_67 [cluster="Unk.Commit", file="StateApplyingContext.cs", label="Entry Unk.Commit", span=""];
m81_36 [cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="StateApplyingContext.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="8-8"];
m81_18 [cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="StateApplyingContext.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9"];
m81_66 [cluster="Unk.QueueCommand", file="StateApplyingContext.cs", label="Entry Unk.QueueCommand", span=""];
m81_43 [cluster="HangFire.Server.JobManager.Dispose()", file="StateApplyingContext.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="59-59"];
m81_54 [cluster="System.Threading.WaitHandle.WaitOne()", file="StateApplyingContext.cs", label="Entry System.Threading.WaitHandle.WaitOne()", span="0-0"];
m81_65 [cluster="Unk.CreateTransaction", file="StateApplyingContext.cs", label="Entry Unk.CreateTransaction", span=""];
m81_20 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="StateApplyingContext.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m81_86 [cluster="HangFire.Server.JobServer.RemoveServer()", file="StateApplyingContext.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName)))", span="135-137"];
m81_55 [cluster="HangFire.Server.JobServer.RemoveServer()", file="StateApplyingContext.cs", label="Entry HangFire.Server.JobServer.RemoveServer()", span="127-127"];
m81_84 [cluster="HangFire.Server.JobServer.RemoveServer()", file="StateApplyingContext.cs", label="var transaction = _redis.CreateTransaction()", span="129-129"];
m81_85 [cluster="HangFire.Server.JobServer.RemoveServer()", file="StateApplyingContext.cs", label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName))", span="131-133"];
m81_87 [cluster="HangFire.Server.JobServer.RemoveServer()", file="StateApplyingContext.cs", label="transaction.Commit()", span="139-139"];
m81_88 [cluster="HangFire.Server.JobServer.RemoveServer()", file="StateApplyingContext.cs", label="Exit HangFire.Server.JobServer.RemoveServer()", span="127-127"];
m81_97 [file="StateApplyingContext.cs", label="HangFire.Server.JobServer", span=""];
m81_98 [file="StateApplyingContext.cs", label=queue1, span=""];
m82_6 [cluster="string.Format(string, object, object, object)", file="StateMachine.cs", label="Entry string.Format(string, object, object, object)", span="0-0"];
m82_4 [cluster="PooledRedisClientManager.cstr", file="StateMachine.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m82_3 [cluster="string.IsNullOrEmpty(string)", file="StateMachine.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m82_5 [cluster="string.Format(string, object, object)", file="StateMachine.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m82_7 [cluster="HangFire.RedisFactory.CreateClient()", file="StateMachine.cs", label="Entry HangFire.RedisFactory.CreateClient()", span="50-50"];
m82_8 [cluster="HangFire.RedisFactory.CreateClient()", file="StateMachine.cs", label="return new RedisClient(\r\n                Host, \r\n                Port,\r\n                Password,\r\n                Db);", span="52-56"];
m82_9 [cluster="HangFire.RedisFactory.CreateClient()", file="StateMachine.cs", label="Exit HangFire.RedisFactory.CreateClient()", span="50-50"];
m82_10 [cluster="RedisClient.cstr", file="StateMachine.cs", label="Entry RedisClient.cstr", span=""];
m82_11 [cluster="HangFire.RedisFactory.GetManager()", file="StateMachine.cs", label="Entry HangFire.RedisFactory.GetManager()", span="59-59"];
m82_12 [cluster="HangFire.RedisFactory.GetManager()", file="StateMachine.cs", label="return _manager.Value;", span="61-61"];
m82_13 [cluster="HangFire.RedisFactory.GetManager()", file="StateMachine.cs", label="Exit HangFire.RedisFactory.GetManager()", span="59-59"];
m82_0 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="8-12"];
m82_1 [cluster="lambda expression", file="StateMachine.cs", label="String.IsNullOrEmpty(Password)\r\n                ? new PooledRedisClientManager(\r\n                    _db, String.Format(''{0}:{1}'', _host, _port)) \r\n                : new PooledRedisClientManager(\r\n                    _db, String.Format(''{0}:{1}@{2}'', _host, _port, Password))", span="8-12"];
m82_2 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="8-12"];
m83_30 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StateMachine.feature.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="48-48"];
m83_165 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Method()", span="187-187"];
m83_26 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="28-28"];
m83_27 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="29-29"];
m83_16 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="StateMachine.feature.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36"];
m83_8 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="StateMachine.feature.cs", label="2: _factory = new Mock<IBackgroundJobFactory>()", span="31-31"];
m83_9 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="StateMachine.feature.cs", label="0: _factory.Setup(x => x.Create(It.IsAny<CreateContext>()))\r\n                .Returns(new BackgroundJob(''some-job'', _job, DateTime.UtcNow))", span="32-33"];
m83_31 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="32-32"];
m83_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="StateMachine.feature.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39"];
m83_40 [cluster="Unk.Equal", file="StateMachine.feature.cs", label="Entry Unk.Equal", span=""];
m83_45 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", span="46-46"];
m83_46 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="StateMachine.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, null, _stateChanger.Object))", span="48-49"];
m83_47 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="StateMachine.feature.cs", label="Assert.Equal(''factory'', exception.ParamName)", span="51-51"];
m83_48 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenFactoryIsNull()", span="46-46"];
m83_100 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsOccurringExceptions_IntoItsOwnException()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsOccurringExceptions_IntoItsOwnException()", span="114-114"];
m83_101 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsOccurringExceptions_IntoItsOwnException()", color=green, community=0, file="StateMachine.feature.cs", label="1: var client = CreateClient()", span="116-116"];
m83_102 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsOccurringExceptions_IntoItsOwnException()", color=green, community=0, file="StateMachine.feature.cs", label="1: _factory.Setup(x => x.Create(It.IsAny<CreateContext>()))\r\n                .Throws<InvalidOperationException>()", span="117-118"];
m83_103 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsOccurringExceptions_IntoItsOwnException()", file="StateMachine.feature.cs", label="var exception = Assert.Throws<CreateJobFailedException>(\r\n                () => client.Create(_job, _state.Object))", span="120-121"];
m83_105 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsOccurringExceptions_IntoItsOwnException()", file="StateMachine.feature.cs", label="Assert.IsType<InvalidOperationException>(exception.InnerException)", span="124-124"];
m83_104 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsOccurringExceptions_IntoItsOwnException()", file="StateMachine.feature.cs", label="Assert.NotNull(exception.InnerException)", span="123-123"];
m83_106 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsOccurringExceptions_IntoItsOwnException()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_WrapsOccurringExceptions_IntoItsOwnException()", span="114-114"];
m83_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="StateMachine.feature.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m83_14 [cluster="Unk.Returns", file="StateMachine.feature.cs", label="Entry Unk.Returns", span=""];
m83_15 [cluster="Mock<IBackgroundJobStateChanger>.cstr", file="StateMachine.feature.cs", label="Entry Mock<IBackgroundJobStateChanger>.cstr", span=""];
m83_6 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="StateMachine.feature.cs", label="2: _state.Setup(x => x.Name).Returns(''Mock'')", span="28-28"];
m83_7 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", color=green, community=0, file="StateMachine.feature.cs", label="0: _job = Job.FromExpression(() => Method())", span="29-29"];
m83_63 [cluster="Unk.DoesNotThrow", file="StateMachine.feature.cs", label="Entry Unk.DoesNotThrow", span=""];
m83_86 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_DelegatesBackgroundJobCreation_ToFactory()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_DelegatesBackgroundJobCreation_ToFactory()", span="94-94"];
m83_87 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_DelegatesBackgroundJobCreation_ToFactory()", color=green, community=0, file="StateMachine.feature.cs", label="1: var client = CreateClient()", span="96-96"];
m83_88 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_DelegatesBackgroundJobCreation_ToFactory()", file="StateMachine.feature.cs", label="client.Create(_job, _state.Object)", span="98-98"];
m83_89 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_DelegatesBackgroundJobCreation_ToFactory()", file="StateMachine.feature.cs", label="_factory.Verify(x => x.Create(It.IsNotNull<CreateContext>()))", span="100-100"];
m83_90 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_DelegatesBackgroundJobCreation_ToFactory()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_DelegatesBackgroundJobCreation_ToFactory()", span="94-94"];
m83_85 [cluster="Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", file="StateMachine.feature.cs", label="Entry Hangfire.BackgroundJobClient.Create(Hangfire.Common.Job, Hangfire.States.IState)", span="87-87"];
m83_36 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m83_37 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="StateMachine.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(null, _factory.Object, _stateChanger.Object))", span="39-40"];
m83_38 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="StateMachine.feature.cs", label="Assert.Equal(''storage'', exception.ParamName)", span="42-42"];
m83_39 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="37-37"];
m83_34 [cluster="Unk.>", file="StateMachine.feature.cs", label="Entry Unk.>", span=""];
m83_68 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="72-72"];
m83_69 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", color=green, community=0, file="StateMachine.feature.cs", label="1: var client = CreateClient()", span="74-74"];
m83_70 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", color=green, community=0, file="StateMachine.feature.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(null, _state.Object))", span="76-77"];
m83_71 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachine.feature.cs", label="Assert.Equal(''job'', exception.ParamName)", span="79-79"];
m83_72 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenJobIsNull()", span="72-72"];
m83_59 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m83_60 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", color=green, community=0, file="StateMachine.feature.cs", label="1: JobStorage.Current = new Mock<JobStorage>().Object", span="66-66"];
m83_61 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", color=green, community=0, file="StateMachine.feature.cs", label="1: Assert.DoesNotThrow(() => new BackgroundJobClient())", span="68-68"];
m83_62 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_UsesCurrent_JobStorageInstance_ByDefault()", span="64-64"];
m83_23 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="StateMachine.feature.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m83_12 [cluster="Mock<JobStorage>.cstr", file="StateMachine.feature.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m83_13 [cluster="Unk.Setup", file="StateMachine.feature.cs", label="Entry Unk.Setup", span=""];
m83_122 [cluster="Unk.ChangeState", file="StateMachine.feature.cs", label="Entry Unk.ChangeState", span=""];
m83_155 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangerInvocation()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangerInvocation()", span="176-176"];
m83_156 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangerInvocation()", file="StateMachine.feature.cs", label="_stateChanger.Setup(x => x.ChangeState(It.IsAny<StateChangeContext>()))\r\n                .Returns(_state.Object)", span="178-179"];
m83_157 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangerInvocation()", file="StateMachine.feature.cs", label="var client = CreateClient()", span="180-180"];
m83_158 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangerInvocation()", file="StateMachine.feature.cs", label="var result = client.ChangeState(''job-id'', _state.Object, null)", span="182-182"];
m83_159 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangerInvocation()", file="StateMachine.feature.cs", label="Assert.True(result)", span="184-184"];
m83_160 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangerInvocation()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ReturnsTheResult_OfStateChangerInvocation()", span="176-176"];
m83_107 [cluster="Unk.NotNull", file="StateMachine.feature.cs", label="Entry Unk.NotNull", span=""];
m83_154 [cluster="Unk.SequenceEqual", file="StateMachine.feature.cs", label="Entry Unk.SequenceEqual", span=""];
m83_52 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", span="55-55"];
m83_53 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", file="StateMachine.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new BackgroundJobClient(_storage.Object, _factory.Object, null))", span="57-58"];
m83_54 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", file="StateMachine.feature.cs", label="Assert.Equal(''stateChanger'', exception.ParamName)", span="60-60"];
m83_55 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.Ctor_ThrowsAnException_WhenStateChangerIsNull()", span="55-55"];
m83_131 [cluster="Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", file="StateMachine.feature.cs", label="Entry Hangfire.BackgroundJobClient.ChangeState(string, Hangfire.States.IState, string)", span="109-109"];
m83_132 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="150-150"];
m83_133 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="StateMachine.feature.cs", label="var client = CreateClient()", span="152-152"];
m83_134 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="StateMachine.feature.cs", label="client.ChangeState(''job-id'', _state.Object, null)", span="154-154"];
m83_135 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="StateMachine.feature.cs", label="_stateChanger.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == ''job-id'' &&\r\n                ctx.NewState == _state.Object &&\r\n                ctx.ExpectedStates == null)))", span="156-159"];
m83_136 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ChangesTheStateOfAJob_ToTheGivenOne()", span="150-150"];
m83_67 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient()", file="StateMachine.feature.cs", label="Entry Hangfire.BackgroundJobClient.BackgroundJobClient()", span="50-50"];
m83_20 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="23-23"];
m83_21 [cluster="lambda expression", file="StateMachine.feature.cs", label="x.GetConnection()", span="23-23"];
m83_128 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="144-144"];
m83_24 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", file="StateMachine.feature.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
m83_25 [cluster="HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", color=green, community=0, file="StateMachine.feature.cs", label="0: Exit HangFire.Storage.IWriteOnlyTransaction.InsertToList(string, string)", span="44-44"];
m83_28 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", color=green, community=0, file="StateMachine.feature.cs", label="1: Entry HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
m83_29 [cluster="HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", file="StateMachine.feature.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.TrimList(string, int, int)", span="46-46"];
m83_32 [cluster="lambda expression", color=green, community=0, file="StateMachine.feature.cs", label="1: x.Create(It.IsAny<CreateContext>())", span="32-32"];
m83_33 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="32-32"];
m83_64 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="68-68"];
m83_65 [cluster="lambda expression", color=green, community=0, file="StateMachine.feature.cs", label="1: new BackgroundJobClient()", span="68-68"];
m83_66 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="68-68"];
m83_75 [cluster="lambda expression", color=green, community=0, file="StateMachine.feature.cs", label="2: client.Create(null, _state.Object)", span="77-77"];
m83_74 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="77-77"];
m83_76 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="77-77"];
m83_112 [cluster="lambda expression", file="StateMachine.feature.cs", label="client.Create(_job, _state.Object)", span="121-121"];
m83_108 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="117-117"];
m83_109 [cluster="lambda expression", color=green, community=0, file="StateMachine.feature.cs", label="1: x.Create(It.IsAny<CreateContext>())", span="117-117"];
m83_110 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="117-117"];
m83_42 [cluster="lambda expression", file="StateMachine.feature.cs", label="new BackgroundJobClient(null, _factory.Object, _stateChanger.Object)", span="40-40"];
m83_50 [cluster="lambda expression", file="StateMachine.feature.cs", label="new BackgroundJobClient(_storage.Object, null, _stateChanger.Object)", span="49-49"];
m83_57 [cluster="lambda expression", file="StateMachine.feature.cs", label="new BackgroundJobClient(_storage.Object, _factory.Object, null)", span="58-58"];
m83_83 [cluster="lambda expression", file="StateMachine.feature.cs", label="client.Create(_job, null)", span="88-88"];
m83_120 [cluster="lambda expression", file="StateMachine.feature.cs", label="client.ChangeState(null, _state.Object, null)", span="133-133"];
m83_138 [cluster="lambda expression", file="StateMachine.feature.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == ''job-id'' &&\r\n                ctx.NewState == _state.Object &&\r\n                ctx.ExpectedStates == null))", span="156-159"];
m83_141 [cluster="lambda expression", file="StateMachine.feature.cs", label="ctx.BackgroundJobId == ''job-id'' &&\r\n                ctx.NewState == _state.Object &&\r\n                ctx.ExpectedStates == null", span="157-159"];
m83_149 [cluster="lambda expression", file="StateMachine.feature.cs", label="x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == ''job-id'' &&\r\n                ctx.NewState == _state.Object &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ''State'' })))", span="169-172"];
m83_152 [cluster="lambda expression", file="StateMachine.feature.cs", label="ctx.BackgroundJobId == ''job-id'' &&\r\n                ctx.NewState == _state.Object &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ''State'' })", span="170-172"];
m83_93 [cluster="lambda expression", file="StateMachine.feature.cs", label="x.Create(It.IsNotNull<CreateContext>())", span="100-100"];
m83_163 [cluster="lambda expression", file="StateMachine.feature.cs", label="x.ChangeState(It.IsAny<StateChangeContext>())", span="178-178"];
m83_111 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="121-121"];
m83_113 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="121-121"];
m83_119 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="133-133"];
m83_41 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="40-40"];
m83_43 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="40-40"];
m83_49 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="49-49"];
m83_51 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="49-49"];
m83_56 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="58-58"];
m83_58 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="58-58"];
m83_82 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="88-88"];
m83_84 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="88-88"];
m83_92 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="100-100"];
m83_121 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="133-133"];
m83_129 [cluster="lambda expression", file="StateMachine.feature.cs", label="client.ChangeState(''jobId'', null, null)", span="144-144"];
m83_137 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="156-159"];
m83_139 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="156-159"];
m83_140 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="156-159"];
m83_142 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="156-159"];
m83_148 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="169-172"];
m83_150 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="169-172"];
m83_151 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="169-172"];
m83_153 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="169-172"];
m83_162 [cluster="lambda expression", file="StateMachine.feature.cs", label="Entry lambda expression", span="178-178"];
m83_94 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="100-100"];
m83_164 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="178-178"];
m83_22 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="StateMachine.feature.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41"];
m83_130 [cluster="lambda expression", file="StateMachine.feature.cs", label="Exit lambda expression", span="144-144"];
m83_77 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="83-83"];
m83_78 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachine.feature.cs", label="var client = CreateClient()", span="85-85"];
m83_79 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachine.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.Create(_job, null))", span="87-88"];
m83_80 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachine.feature.cs", label="Assert.Equal(''state'', exception.ParamName)", span="90-90"];
m83_81 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ThrowsAnException_WhenStateIsNull()", span="83-83"];
m83_95 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", span="104-104"];
m83_96 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="StateMachine.feature.cs", label="var client = CreateClient()", span="106-106"];
m83_97 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="StateMachine.feature.cs", label="var id = client.Create(_job, _state.Object)", span="108-108"];
m83_98 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="StateMachine.feature.cs", label="Assert.Equal(''some-job'', id)", span="110-110"];
m83_99 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateJob_ReturnsJobIdentifier()", span="104-104"];
m83_73 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="191-191"];
m83_166 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", color=green, community=0, file="StateMachine.feature.cs", label="2: return new BackgroundJobClient(_storage.Object, _factory.Object, _stateChanger.Object);", span="193-193"];
m83_167 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.CreateClient()", span="191-191"];
m83_0 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", span="19-19"];
m83_1 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="StateMachine.feature.cs", label="var connection = new Mock<IStorageConnection>()", span="21-21"];
m83_2 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="StateMachine.feature.cs", label="_storage = new Mock<JobStorage>()", span="22-22"];
m83_3 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.BackgroundJobClientFacts()", file="StateMachine.feature.cs", label="_storage.Setup(x => x.GetConnection()).Returns(connection.Object)", span="23-23"];
m83_114 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="128-128"];
m83_117 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", color=green, community=0, file="StateMachine.feature.cs", label="2: Assert.Equal(''jobId'', exception.ParamName)", span="135-135"];
m83_116 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachine.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(null, _state.Object, null))", span="132-133"];
m83_115 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachine.feature.cs", label="var client = CreateClient()", span="130-130"];
m83_118 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenJobIdIsNull()", span="128-128"];
m83_5 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateMachine.feature.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26"];
m83_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateMachine.feature.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="26-26"];
m83_10 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="StateMachine.feature.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33"];
m83_143 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="163-163"];
m83_144 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="StateMachine.feature.cs", label="var client = CreateClient()", span="165-165"];
m83_145 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="StateMachine.feature.cs", label="client.ChangeState(''job-id'', _state.Object, ''State'')", span="167-167"];
m83_146 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="StateMachine.feature.cs", label="_stateChanger.Verify(x => x.ChangeState(It.Is<StateChangeContext>(ctx =>\r\n                ctx.BackgroundJobId == ''job-id'' &&\r\n                ctx.NewState == _state.Object &&\r\n                ctx.ExpectedStates.SequenceEqual(new[] { ''State'' }))))", span="169-172"];
m83_147 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_WithFromState_ChangesTheStateOfAJob_WithFromStateValue()", span="163-163"];
m83_35 [cluster="Unk.Create", file="StateMachine.feature.cs", label="Entry Unk.Create", span=""];
m83_161 [cluster="Unk.True", file="StateMachine.feature.cs", label="Entry Unk.True", span=""];
m83_18 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", file="StateMachine.feature.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string)", span="39-39"];
m83_44 [cluster="BackgroundJobClient.cstr", file="StateMachine.feature.cs", label="Entry BackgroundJobClient.cstr", span=""];
m83_123 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="StateMachine.feature.cs", label="Entry Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="139-139"];
m83_124 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="StateMachine.feature.cs", label="var client = CreateClient()", span="141-141"];
m83_125 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="StateMachine.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => client.ChangeState(''jobId'', null, null))", span="143-144"];
m83_126 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="StateMachine.feature.cs", label="Assert.Equal(''state'', exception.ParamName)", span="146-146"];
m83_127 [cluster="Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", file="StateMachine.feature.cs", label="Exit Hangfire.Core.Tests.BackgroundJobClientFacts.ChangeState_ThrowsAnException_WhenStateIsNull()", span="139-139"];
m83_91 [cluster="Unk.Verify", file="StateMachine.feature.cs", label="Entry Unk.Verify", span=""];
m83_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="StateMachine.feature.cs", label="Exit HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="36-36"];
m83_168 [file="StateMachine.feature.cs", label="Hangfire.Core.Tests.BackgroundJobClientFacts", span=""];
m83_169 [file="StateMachine.feature.cs", label=client, span=""];
m83_171 [file="StateMachine.feature.cs", label=client, span=""];
m83_170 [file="StateMachine.feature.cs", label=client, span=""];
m83_172 [file="StateMachine.feature.cs", label=client, span=""];
m83_173 [file="StateMachine.feature.cs", label=client, span=""];
m84_10 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41"];
m84_128 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="158-158"];
m84_127 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", color=green, community=0, file="StateSteps.cs", label="2: _transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="157-157"];
m84_126 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="155-155"];
m84_129 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="155-155"];
m84_6 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="StateSteps.cs", label="Response.ContentEncoding = Encoding.UTF8", span="38-38"];
m84_7 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="StateSteps.cs", label="Response.Write(serialized)", span="39-39"];
m84_8 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="StateSteps.cs", label="Exit HangFire.Web.JsonStats.ProcessRequest()", span="24-24"];
m84_156 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="179-179"];
m84_157 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value))", span="181-182"];
m84_158 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.InsertToList(string, string)", span="179-179"];
m84_65 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m84_90 [cluster="Unk.EnqueueItemOnList", file="StateSteps.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m84_5 [cluster="HangFire.Web.JsonStats.ProcessRequest()", file="StateSteps.cs", label="Response.ContentType = ''application/json''", span="37-37"];
m84_78 [cluster="Unk.SetRangeInHash", file="StateSteps.cs", label="Entry Unk.SetRangeInHash", span=""];
m84_109 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="144-144"];
m84_110 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="146-146"];
m84_111 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn))", span="147-147"];
m84_112 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="144-144"];
m84_169 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="191-191"];
m84_170 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", color=green, community=0, file="StateSteps.cs", label="1: _transaction.QueueCommand(x => x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt))", span="194-195"];
m84_171 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.TrimList(string, int, int)", span="191-191"];
m84_55 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="94-95"];
m84_59 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", color=green, community=0, file="StateSteps.cs", label="2: storedData.Add(''Reason'', state.Reason)", span="106-106"];
m84_53 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87"];
m84_56 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateSteps.cs", label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="101-101"];
m84_58 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateSteps.cs", label="state.Reason != null", span="104-104"];
m84_60 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData))", span="109-111"];
m84_54 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name))", span="89-92"];
m84_61 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateSteps.cs", label="AddJobState(jobId, state)", span="113-113"];
m84_57 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateSteps.cs", label="storedData.Add(''State'', state.Name)", span="102-102"];
m84_62 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.SetJobState(string, HangFire.States.State)", span="87-87"];
m84_0 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
m84_1 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="StateSteps.cs", label="transaction == null", span="31-31"];
m84_2 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="StateSteps.cs", label="throw new ArgumentNullException(''transaction'');", span="31-31"];
m84_3 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="StateSteps.cs", label="_transaction = transaction", span="33-33"];
m84_4 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RedisWriteOnlyTransaction(IRedisTransaction)", span="29-29"];
m84_70 [cluster="Unk.SetEntryInHash", file="StateSteps.cs", label="Entry Unk.SetEntryInHash", span=""];
m84_98 [cluster="Unk.AddItemToSet", file="StateSteps.cs", label="Entry Unk.AddItemToSet", span=""];
m84_30 [cluster="string.Format(string, object)", file="StateSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m84_11 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="StateSteps.cs", label="!_transaction.Commit()", span="43-43"];
m84_188 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="209-209"];
m84_189 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn))", span="211-212"];
m84_190 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireValue(string, System.TimeSpan)", span="209-209"];
m84_74 [cluster="Unk.RemoveEntry", file="StateSteps.cs", label="Entry Unk.RemoveEntry", span=""];
m84_108 [cluster="Unk.IncrementValue", file="StateSteps.cs", label="Entry Unk.IncrementValue", span=""];
m84_38 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
m84_39 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", color=green, community=0, file="StateSteps.cs", label="2: _transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId)))", span="79-80"];
m84_40 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", color=green, community=0, file="StateSteps.cs", label="1: _transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId)))", span="81-82"];
m84_41 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="StateSteps.cs", label="_transaction.QueueCommand(x => ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId)))", span="83-84"];
m84_42 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.PersistJob(string)", span="77-77"];
m84_31 [cluster="Unk.ExpireEntryIn", file="StateSteps.cs", label="Entry Unk.ExpireEntryIn", span=""];
m84_13 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="StateSteps.cs", label="int maxReplayCount = 3", span="50-50"];
m84_119 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="150-150"];
m84_120 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="152-152"];
m84_121 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementCounter(string)", span="150-150"];
m84_136 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="161-161"];
m84_137 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="163-164"];
m84_138 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string)", span="161-161"];
m84_142 [cluster="Unk.AddItemToSortedSet", file="StateSteps.cs", label="Entry Unk.AddItemToSortedSet", span=""];
m84_149 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m84_150 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value))", span="175-176"];
m84_151 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromSet(string, string)", span="173-173"];
m84_12 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="StateSteps.cs", label="int replayCount = 1", span="49-49"];
m84_63 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m84_9 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="StateSteps.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m84_15 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", color=green, community=0, file="StateSteps.cs", label="1: HangFire.Web.JsonStats", span=""];
m84_14 [cluster="Unk.Write", color=green, community=0, file="StateSteps.cs", label="2: Entry Unk.Write", span=""];
m84_16 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="StateSteps.cs", label="throw new RedisException(''Transaction commit was failed due to WATCH condition failure. Retry attempts exceeded.'');", span="56-56"];
m84_17 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.Commit()", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.Commit()", span="41-41"];
m84_176 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", span="198-198"];
m84_177 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.IncrementValue(\r\n                RedisStorage.Prefix + key))", span="200-201"];
m84_178 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementValue(string)", span="198-198"];
m84_191 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="211-212"];
m84_27 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="64-66"];
m84_28 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="2: x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn)", span="64-66"];
m84_29 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="64-66"];
m84_32 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="68-70"];
m84_33 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn)", span="68-70"];
m84_34 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="68-70"];
m84_35 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="72-74"];
m84_36 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn)", span="72-74"];
m84_37 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="72-74"];
m84_43 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="79-80"];
m84_44 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId))", span="79-80"];
m84_45 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="79-80"];
m84_47 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="81-82"];
m84_48 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: ((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId))", span="81-82"];
m84_49 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="81-82"];
m84_105 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="141-141"];
m84_106 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="0: x.IncrementValue(RedisStorage.Prefix + key)", span="141-141"];
m84_107 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="141-141"];
m84_130 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="157-157"];
m84_131 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: x.DecrementValue(RedisStorage.Prefix + key)", span="157-157"];
m84_132 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="157-157"];
m84_172 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="194-195"];
m84_173 [cluster="lambda expression", color=green, community=0, file="StateSteps.cs", label="1: x.TrimList(\r\n                RedisStorage.Prefix + key, keepStartingFrom, keepEndingAt)", span="194-195"];
m84_174 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="194-195"];
m84_51 [cluster="lambda expression", file="StateSteps.cs", label="((IRedisNativeClient)x).Persist(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="83-84"];
m84_68 [cluster="lambda expression", file="StateSteps.cs", label="x.SetEntryInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                ''State'',\r\n                state.Name)", span="89-92"];
m84_72 [cluster="lambda expression", file="StateSteps.cs", label="x.RemoveEntry(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId))", span="94-95"];
m84_76 [cluster="lambda expression", file="StateSteps.cs", label="x.SetRangeInHash(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                storedData)", span="109-111"];
m84_87 [cluster="lambda expression", file="StateSteps.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData))", span="125-127"];
m84_100 [cluster="lambda expression", file="StateSteps.cs", label="x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId)", span="135-136"];
m84_117 [cluster="lambda expression", file="StateSteps.cs", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="147-147"];
m84_134 [cluster="lambda expression", file="StateSteps.cs", label="x.ExpireEntryIn(RedisStorage.Prefix + key, expireIn)", span="158-158"];
m84_192 [cluster="lambda expression", file="StateSteps.cs", label="x.ExpireEntryIn(\r\n                RedisStorage.Prefix + key, expireIn)", span="211-212"];
m84_50 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="83-84"];
m84_75 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="109-111"];
m84_114 [cluster="lambda expression", file="StateSteps.cs", label="x.IncrementValue(RedisStorage.Prefix + key)", span="146-146"];
m84_180 [cluster="lambda expression", file="StateSteps.cs", label="x.IncrementValue(\r\n                RedisStorage.Prefix + key)", span="200-201"];
m84_133 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="158-158"];
m84_123 [cluster="lambda expression", file="StateSteps.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="152-152"];
m84_186 [cluster="lambda expression", file="StateSteps.cs", label="x.DecrementValue(RedisStorage.Prefix + key)", span="206-206"];
m84_67 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="89-92"];
m84_71 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="94-95"];
m84_86 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="125-127"];
m84_95 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="132-133"];
m84_99 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="135-136"];
m84_113 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="146-146"];
m84_116 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="147-147"];
m84_122 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="152-152"];
m84_139 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="163-164"];
m84_146 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="169-170"];
m84_152 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="175-176"];
m84_159 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="181-182"];
m84_165 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="187-188"];
m84_179 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="200-201"];
m84_185 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="206-206"];
m84_52 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="83-84"];
m84_69 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="89-92"];
m84_73 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="94-95"];
m84_77 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="109-111"];
m84_88 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="125-127"];
m84_101 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="135-136"];
m84_118 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="147-147"];
m84_135 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="158-158"];
m84_193 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="211-212"];
m84_115 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="146-146"];
m84_181 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="200-201"];
m84_124 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="152-152"];
m84_187 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="206-206"];
m84_96 [cluster="lambda expression", file="StateSteps.cs", label="x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue)", span="132-133"];
m84_97 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="132-133"];
m84_140 [cluster="lambda expression", file="StateSteps.cs", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="163-164"];
m84_141 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="163-164"];
m84_147 [cluster="lambda expression", file="StateSteps.cs", label="x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score)", span="169-170"];
m84_148 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="169-170"];
m84_153 [cluster="lambda expression", file="StateSteps.cs", label="x.RemoveItemFromSortedSet(\r\n                RedisStorage.Prefix + key, value)", span="175-176"];
m84_154 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="175-176"];
m84_160 [cluster="lambda expression", file="StateSteps.cs", label="x.EnqueueItemOnList(\r\n                RedisStorage.Prefix + key, value)", span="181-182"];
m84_161 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="181-182"];
m84_166 [cluster="lambda expression", file="StateSteps.cs", label="x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value)", span="187-188"];
m84_167 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="187-188"];
m84_143 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="167-167"];
m84_144 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.AddItemToSortedSet(\r\n                RedisStorage.Prefix + key, value, score))", span="169-170"];
m84_145 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToSet(string, string, double)", span="167-167"];
m84_182 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", span="204-204"];
m84_183 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.DecrementValue(RedisStorage.Prefix + key))", span="206-206"];
m84_184 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.DecrementValue(string)", span="204-204"];
m84_64 [cluster="HangFire.States.State.SerializeData()", file="StateSteps.cs", label="Entry HangFire.States.State.SerializeData()", span="27-27"];
m84_102 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="139-139"];
m84_103 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", color=green, community=0, file="StateSteps.cs", label="0: _transaction.QueueCommand(x => x.IncrementValue(RedisStorage.Prefix + key))", span="141-141"];
m84_104 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.IncrementCounter(string)", span="139-139"];
m84_85 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="StateSteps.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m84_24 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", color=green, community=0, file="StateSteps.cs", label="1: _transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:state'', jobId),\r\n                expireIn))", span="72-74"];
m84_22 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", color=green, community=0, file="StateSteps.cs", label="1: _transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}'', jobId),\r\n                expireIn))", span="64-66"];
m84_21 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m84_23 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", color=green, community=0, file="StateSteps.cs", label="2: _transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                expireIn))", span="68-70"];
m84_25 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="62-62"];
m84_91 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="130-130"];
m84_92 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.AddItemToSet(\r\n                RedisStorage.Prefix + ''queues'', queue))", span="132-133"];
m84_93 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''queue:{0}'', queue), jobId))", span="135-136"];
m84_94 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddToQueue(string, string)", span="130-130"];
m84_168 [cluster="Unk.RemoveItemFromList", file="StateSteps.cs", label="Entry Unk.RemoveItemFromList", span=""];
m84_89 [cluster="HangFire.Common.JobHelper.ToJson(object)", file="StateSteps.cs", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
m84_46 [cluster="Unk.Persist", file="StateSteps.cs", label="Entry Unk.Persist", span=""];
m84_66 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="116-116"];
m84_83 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(RedisStorage.Prefix + ''job:{0}:history'', jobId),\r\n                JobHelper.ToJson(storedData)))", span="125-127"];
m84_80 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="StateSteps.cs", label="storedData.Add(''State'', state.Name)", span="121-121"];
m84_81 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="StateSteps.cs", label="storedData.Add(''Reason'', state.Reason)", span="122-122"];
m84_82 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="StateSteps.cs", label="storedData.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="123-123"];
m84_79 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="StateSteps.cs", label="var storedData = new Dictionary<string, string>(state.SerializeData())", span="120-120"];
m84_84 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.AddJobState(string, HangFire.States.State)", span="116-116"];
m84_18 [cluster="Unk.Commit", file="StateSteps.cs", label="Entry Unk.Commit", span=""];
m84_19 [cluster="Unk.Replay", file="StateSteps.cs", label="Entry Unk.Replay", span=""];
m84_20 [cluster="RedisException.cstr", file="StateSteps.cs", label="Entry RedisException.cstr", span=""];
m84_26 [cluster="Unk.QueueCommand", file="StateSteps.cs", label="Entry Unk.QueueCommand", span=""];
m84_125 [cluster="Unk.DecrementValue", file="StateSteps.cs", label="Entry Unk.DecrementValue", span=""];
m84_175 [cluster="Unk.TrimList", file="StateSteps.cs", label="Entry Unk.TrimList", span=""];
m84_162 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="StateSteps.cs", label="Entry HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="185-185"];
m84_163 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="StateSteps.cs", label="_transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                RedisStorage.Prefix + key, value))", span="187-188"];
m84_164 [cluster="HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", file="StateSteps.cs", label="Exit HangFire.Redis.RedisWriteOnlyTransaction.RemoveFromList(string, string)", span="185-185"];
m84_155 [cluster="Unk.RemoveItemFromSortedSet", file="StateSteps.cs", label="Entry Unk.RemoveItemFromSortedSet", span=""];
m84_194 [file="StateSteps.cs", label="HangFire.Redis.RedisWriteOnlyTransaction", span=""];
m84_195 [file="StateSteps.cs", label=string, span=""];
m84_196 [file="StateSteps.cs", label="System.TimeSpan", span=""];
m84_197 [file="StateSteps.cs", label=string, span=""];
m84_205 [file="StateSteps.cs", label=string, span=""];
m84_209 [file="StateSteps.cs", label=string, span=""];
m84_222 [file="StateSteps.cs", label=string, span=""];
m84_223 [file="StateSteps.cs", label=int, span=""];
m84_224 [file="StateSteps.cs", label=int, span=""];
m84_198 [file="StateSteps.cs", label=string, span=""];
m84_199 [file="StateSteps.cs", label="HangFire.States.State", span=""];
m84_200 [file="StateSteps.cs", label=storedData, span=""];
m84_201 [file="StateSteps.cs", label=string, span=""];
m84_202 [file="StateSteps.cs", label=storedData, span=""];
m84_203 [file="StateSteps.cs", label=string, span=""];
m84_204 [file="StateSteps.cs", label=string, span=""];
m84_206 [file="StateSteps.cs", label=string, span=""];
m84_207 [file="StateSteps.cs", label="System.TimeSpan", span=""];
m84_210 [file="StateSteps.cs", label="System.TimeSpan", span=""];
m84_227 [file="StateSteps.cs", label=string, span=""];
m84_228 [file="StateSteps.cs", label="System.TimeSpan", span=""];
m84_225 [file="StateSteps.cs", label=string, span=""];
m84_208 [file="StateSteps.cs", label=string, span=""];
m84_226 [file="StateSteps.cs", label=string, span=""];
m84_211 [file="StateSteps.cs", label=string, span=""];
m84_212 [file="StateSteps.cs", label=string, span=""];
m84_213 [file="StateSteps.cs", label=string, span=""];
m84_214 [file="StateSteps.cs", label=string, span=""];
m84_215 [file="StateSteps.cs", label=double, span=""];
m84_216 [file="StateSteps.cs", label=string, span=""];
m84_217 [file="StateSteps.cs", label=string, span=""];
m84_218 [file="StateSteps.cs", label=string, span=""];
m84_219 [file="StateSteps.cs", label=string, span=""];
m84_220 [file="StateSteps.cs", label=string, span=""];
m84_221 [file="StateSteps.cs", label=string, span=""];
m85_26 [cluster="HangFire.Web.RazorPage.Write(object)", file="SucceededState.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="40-40"];
m85_25 [cluster="HangFire.Web.JobStorage.Servers()", file="SucceededState.cs", label="Entry HangFire.Web.JobStorage.Servers()", span="127-127"];
m85_23 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SucceededState.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="33-33"];
m85_0 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="39-39"];
m85_1 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''\r\n'')", span="43-43"];
m85_2 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="Layout = new LayoutPage { Title = ''Servers'' }", span="53-53"];
m85_3 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''\r\n'')", span="59-59"];
m85_4 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="var servers = JobStorage.Servers()", span="65-65"];
m85_5 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''\r\n'')", span="71-71"];
m85_6 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="servers.Count == 0", span="76-76"];
m85_9 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label=servers, span="103-103"];
m85_7 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\r\n        There are no active servers. Backg'' +\r\n''round tasks will not be processed.\r\n    </div>\r\n'')", span="82-83"];
m85_8 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''    <table class=\''table\''>\r\n        <thead>\r\n            <tr>\r\n                <th'' +\r\n''>Name</th>\r\n                <th>Workers</th>\r\n                <th>Queues</th>\r\n '' +\r\n''               <th>Started</th>\r\n            </tr>\r\n        </thead>\r\n        <t'' +\r\n''body>\r\n'')", span="95-98"];
m85_10 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''                <tr>\r\n                    <td>'')", span="109-109"];
m85_21 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="169-169"];
m85_11 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="Write(server.Name)", span="114-114"];
m85_13 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="Write(server.WorkersCount)", span="124-124"];
m85_15 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="134-134"];
m85_17 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="Write(JobHelper.ToStringTimestamp(server.StartedAt))", span="144-144"];
m85_19 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="Write(server.StartedAt)", span="154-154"];
m85_12 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="119-119"];
m85_14 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''</td>\r\n                    <td>'')", span="129-129"];
m85_16 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''</td>\r\n                    <td data-moment=\'''')", span="139-139"];
m85_18 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''\''>'')", span="149-149"];
m85_20 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="WriteLiteral(''</td>\r\n                </tr>\r\n'')", span="159-159"];
m85_22 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="SucceededState.cs", label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="39-39"];
m85_29 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="SucceededState.cs", label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="12-12"];
m85_24 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="SucceededState.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m85_28 [cluster="Unk.Join", file="SucceededState.cs", label="Entry Unk.Join", span=""];
m85_31 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55"];
m85_30 [cluster="Unk.Write", file="SucceededState.cs", label="Entry Unk.Write", span=""];
m85_27 [cluster="Unk.Select", file="SucceededState.cs", label="Entry Unk.Select", span=""];
m85_32 [file="SucceededState.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m86_18 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", span="56-56"];
m86_19 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", file="SucceededState.feature.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m86_20 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.ScenarioTearDown()", span="56-56"];
m86_29 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="55-55"];
m86_14 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="41-41"];
m86_15 [cluster="lambda expression", color=red, community=0, file="SucceededState.feature.cs", label="0: new Job(null, _method, _arguments)", span="41-41"];
m86_16 [cluster="lambda expression", color=red, community=0, file="SucceededState.feature.cs", label="0: Exit lambda expression", span="41-41"];
m86_17 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="SucceededState.feature.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="13-13"];
m86_314 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", span="372-372"];
m86_316 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SucceededState.feature.cs", label="_activator.Setup(x => x.ActivateJob(It.IsAny<Type>())).Throws(exception)", span="375-375"];
m86_317 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SucceededState.feature.cs", label="var job = Job.FromExpression(() => InstanceMethod())", span="377-377"];
m86_318 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SucceededState.feature.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="379-380"];
m86_315 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SucceededState.feature.cs", label="var exception = new InvalidOperationException()", span="374-374"];
m86_319 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SucceededState.feature.cs", label="Assert.Same(exception, thrownException.InnerException)", span="382-382"];
m86_320 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorThrowsAnException()", span="372-372"];
m86_335 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="386-386"];
m86_336 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SucceededState.feature.cs", label="_activator.Setup(x => x.ActivateJob(It.IsNotNull<Type>())).Returns(null)", span="388-388"];
m86_337 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SucceededState.feature.cs", label="var job = Job.FromExpression(() => InstanceMethod())", span="389-389"];
m86_338 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SucceededState.feature.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="391-392"];
m86_339 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SucceededState.feature.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="394-394"];
m86_340 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WhenActivatorReturnsNull()", span="386-386"];
m86_360 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", span="408-408"];
m86_363 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SucceededState.feature.cs", label="var exception = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="414-415"];
m86_362 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SucceededState.feature.cs", label="var job = Job.FromExpression<BrokenDispose>(x => x.Method())", span="412-412"];
m86_364 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SucceededState.feature.cs", label="Assert.True(_methodInvoked)", span="417-417"];
m86_365 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SucceededState.feature.cs", label="Assert.NotNull(exception.InnerException)", span="418-418"];
m86_361 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SucceededState.feature.cs", label="_methodInvoked = false", span="410-410"];
m86_366 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_OnDisposalFailure()", span="408-408"];
m86_213 [cluster="Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", span="482-482"];
m86_440 [cluster="Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.PrivateMethod()", span="482-482"];
m86_384 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", span="542-542"];
m86_468 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="SucceededState.feature.cs", label="throw new InvalidOperationException(''exception'');", span="544-544"];
m86_469 [cluster="Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.ExceptionMethod()", span="542-542"];
m86_100 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should remove the job from the succeeded list'', ((string[])(null)))", span="227-227"];
m86_104 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", color=green, community=0, file="SucceededState.feature.cs", label="2: testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="235-235"];
m86_102 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="this.FeatureBackground()", span="231-231"];
m86_103 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="233-233"];
m86_101 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="229-229"];
m86_105 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldRemoveTheJobFromTheSucceededList()", file="SucceededState.feature.cs", label="testRunner.Then(''the job should be removed from the succeeded list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="237-237"];
m86_136 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", span="170-170"];
m86_137 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="SucceededState.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => Job.FromExpression<JobFacts>(null))", span="172-173"];
m86_138 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="SucceededState.feature.cs", label="Assert.Equal(''methodCall'', exception.ParamName)", span="175-175"];
m86_139 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldThrowException_WhenNullExpressionIsProvided()", span="170-170"];
m86_44 [cluster="Unk.True", file="SucceededState.feature.cs", label="Entry Unk.True", span=""];
m86_45 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", span="76-76"];
m86_46 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", color=green, community=0, file="SucceededState.feature.cs", label="1: var job = new Job(_type, _method)", span="78-78"];
m86_47 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", color=green, community=0, file="SucceededState.feature.cs", label="2: Assert.Empty(job.Arguments)", span="80-80"];
m86_48 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldHave_DefaultValueForArguments()", span="76-76"];
m86_49 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="SucceededState.feature.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="122-122"];
m86_50 [cluster="Unk.Empty", file="SucceededState.feature.cs", label="Entry Unk.Empty", span=""];
m86_51 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", span="84-84"];
m86_52 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ShouldThrowAnException_WhenArgumentCountIsNotEqualToParameterCount()", color=green, community=0, file="SucceededState.feature.cs", label="2: var exception = Assert.Throws<ArgumentException>(\r\n                () => new Job(_type, _method, new[] { ''hello!'' }))", span="86-87"];
m86_72 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="107-107"];
m86_73 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", span="111-111"];
m86_74 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="SucceededState.feature.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => Job.FromExpression(null))", span="113-114"];
m86_75 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="SucceededState.feature.cs", label="Assert.Equal(''methodCall'', exception.ParamName)", span="116-116"];
m86_76 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ShouldThrowException_WhenNullExpressionProvided()", span="111-111"];
m86_77 [cluster="Unk.Equal", file="SucceededState.feature.cs", label="Entry Unk.Equal", span=""];
m86_78 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="114-114"];
m86_79 [cluster="lambda expression", file="SucceededState.feature.cs", label="Job.FromExpression(null)", span="114-114"];
m86_80 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="114-114"];
m86_81 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="SucceededState.feature.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="227-227"];
m86_82 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="120-120"];
m86_83 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SucceededState.feature.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => new JobFacts()))", span="122-123"];
m86_84 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromStaticExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="120-120"];
m86_85 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="123-123"];
m86_86 [cluster="lambda expression", file="SucceededState.feature.cs", label="Job.FromExpression(() => new JobFacts())", span="123-123"];
m86_87 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="123-123"];
m86_88 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="123-123"];
m86_351 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", span="398-398"];
m86_353 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="SucceededState.feature.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="401-401"];
m86_354 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="SucceededState.feature.cs", label="Assert.Throws<JsonReaderException>(\r\n                () => new Job(type, method, new []{ JobHelper.ToJson(''sdfa'') }))", span="403-404"];
m86_352 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="SucceededState.feature.cs", label="var type = typeof (JobFacts)", span="400-400"];
m86_355 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsJsonReaderException_OnArgumentsDeserializationFailure()", span="398-398"];
m86_64 [cluster="lambda expression", file="SucceededState.feature.cs", label="new Job(_type, method, new[] { ''hello!'' })", span="98-98"];
m86_65 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="98-98"];
m86_66 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", span="102-102"];
m86_67 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="SucceededState.feature.cs", label="var method = _type.GetMethod(''AsyncMethod'')", span="104-104"];
m86_68 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="SucceededState.feature.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => new Job(_type, method, new string[0]))", span="106-107"];
m86_69 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodReturns_Task()", span="102-102"];
m86_70 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="107-107"];
m86_71 [cluster="lambda expression", file="SucceededState.feature.cs", label="new Job(_type, method, new string[0])", span="107-107"];
m86_0 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m86_1 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="SucceededState.feature.cs", label="2: testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m86_2 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="SucceededState.feature.cs", label="1: TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Succeeded state'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m86_3 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="SucceededState.feature.cs", label="2: testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m86_4 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=green, community=0, file="SucceededState.feature.cs", label="2: Exit HangFire.Tests.States.SucceededStateFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m86_5 [cluster="Unk.GetTestRunner", file="SucceededState.feature.cs", label="Entry Unk.GetTestRunner", span=""];
m86_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="SucceededState.feature.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m86_412 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="571-571"];
m86_483 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="SucceededState.feature.cs", label="return ''Return value'';", span="573-573"];
m86_484 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Instance.FunctionReturningValue()", span="571-571"];
m86_286 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="325-325"];
m86_292 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="337-337"];
m86_290 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SucceededState.feature.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="332-332"];
m86_291 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SucceededState.feature.cs", label="var job = new Job(type, method, new[] { convertedDate })", span="334-334"];
m86_293 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SucceededState.feature.cs", label="Assert.True(_methodInvoked)", span="340-340"];
m86_289 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SucceededState.feature.cs", label="var type = typeof(JobFacts)", span="331-331"];
m86_288 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SucceededState.feature.cs", label="var convertedDate = SomeDateTime.ToString(''MM/dd/yyyy HH:mm:ss.ffff'')", span="329-329"];
m86_287 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SucceededState.feature.cs", label="_methodInvoked = false", span="328-328"];
m86_294 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingOldFormat()", span="325-325"];
m86_450 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="SucceededState.feature.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m86_34 [cluster="lambda expression", file="SucceededState.feature.cs", label="new Job(_type, _method, null)", span="62-62"];
m86_192 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", span="486-486"];
m86_441 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithReferenceParameter(ref string)", span="486-486"];
m86_161 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", span="561-561"];
m86_478 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="SucceededState.feature.cs", label="_methodInvoked = true", span="563-563"];
m86_479 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Instance.Method()", span="561-561"];
m86_436 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="SucceededState.feature.cs", label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="185-185"];
m86_265 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", span="291-291"];
m86_267 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SucceededState.feature.cs", label="var job = Job.FromExpression(() => MethodWithArguments(''hello'', 5))", span="295-295"];
m86_268 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="298-298"];
m86_266 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SucceededState.feature.cs", label="_methodInvoked = false", span="294-294"];
m86_269 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SucceededState.feature.cs", label="Assert.True(_methodInvoked)", span="301-301"];
m86_270 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesArguments_ToACallingMethod()", span="291-291"];
m86_171 [cluster="System.IDisposable.Dispose()", file="SucceededState.feature.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m86_375 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", span="422-422"];
m86_377 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SucceededState.feature.cs", label="var thrownException = Assert.Throws<JobPerformanceException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="426-427"];
m86_378 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SucceededState.feature.cs", label="Assert.IsType<InvalidOperationException>(thrownException.InnerException)", span="429-429"];
m86_379 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SucceededState.feature.cs", label="Assert.Equal(''exception'', thrownException.InnerException.Message)", span="430-430"];
m86_376 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SucceededState.feature.cs", label="var job = Job.FromExpression(() => ExceptionMethod())", span="424-424"];
m86_380 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsPerformanceException_WithUnwrappedInnerException()", span="422-422"];
m86_423 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SucceededState.feature.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m86_153 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", span="186-186"];
m86_155 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="SucceededState.feature.cs", label="Assert.Equal(typeof(Instance), job.Type)", span="190-190"];
m86_156 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="SucceededState.feature.cs", label="Assert.Equal(''Method'', job.Method.Name)", span="191-191"];
m86_154 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="SucceededState.feature.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="188-188"];
m86_157 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ShouldReturnCorrectResult()", span="186-186"];
m86_53 [cluster="TechTalk.SpecFlow.Table.cstr", file="SucceededState.feature.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m86_54 [cluster="Unk.AddRow", file="SucceededState.feature.cs", label="Entry Unk.AddRow", span=""];
m86_172 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", span="204-204"];
m86_173 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="SucceededState.feature.cs", label="IDisposable instance = null", span="206-206"];
m86_174 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="SucceededState.feature.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => Job.FromExpression(() => instance.Dispose()))", span="208-209"];
m86_175 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldThrowAnException_IfGivenObjectIsNull()", span="204-204"];
m86_112 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", span="147-147"];
m86_113 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="SucceededState.feature.cs", label="var job = Job.FromExpression(() => MethodWithArguments(''123'', 1))", span="149-149"];
m86_114 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="SucceededState.feature.cs", label="Assert.Equal(''\''123\'''', job.Arguments[0])", span="151-151"];
m86_115 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="SucceededState.feature.cs", label="Assert.Equal(''1'', job.Arguments[1])", span="152-152"];
m86_116 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromExpression_ConvertsArgumentsToJson()", span="147-147"];
m86_120 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", span="516-516"];
m86_456 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="SucceededState.feature.cs", label="Assert.Equal(''hello'', stringArg)", span="520-520"];
m86_457 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="SucceededState.feature.cs", label="Assert.Equal(5, intArg)", span="521-521"];
m86_455 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="SucceededState.feature.cs", label="_methodInvoked = true", span="518-518"];
m86_458 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithArguments(string, int)", span="516-516"];
m86_26 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", span="52-52"];
m86_27 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="55-55"];
m86_28 [cluster="lambda expression", file="SucceededState.feature.cs", label="new Job(typeof(Job), _method, _arguments)", span="55-55"];
m86_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="SucceededState.feature.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m86_89 [cluster="lambda expression", file="SucceededState.feature.cs", label="new JobFacts()", span="123-123"];
m86_99 [cluster="System.Console.WriteLine()", file="SucceededState.feature.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m86_106 [cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="SucceededState.feature.cs", label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0"];
m86_107 [cluster="System.DateTime.ToString(string)", file="SucceededState.feature.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m86_143 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="SucceededState.feature.cs", label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="281-281"];
m86_422 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="SucceededState.feature.cs", label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="178-178"];
m86_203 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", span="490-490"];
m86_442 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="SucceededState.feature.cs", label="a = ''hello''", span="492-492"];
m86_443 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithOutputParameter(out string)", span="490-490"];
m86_111 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", span="535-535"];
m86_466 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="SucceededState.feature.cs", label="Assert.Equal(SomeDateTime, argument)", span="539-539"];
m86_465 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="SucceededState.feature.cs", label="_methodInvoked = true", span="537-537"];
m86_467 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithDateTimeArgument(System.DateTime)", span="535-535"];
m86_36 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''State name should be \'Succeeded\''', ((string[])(null)))", span="87-87"];
m86_37 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="SucceededState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="89-89"];
m86_38 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="SucceededState.feature.cs", label="this.FeatureBackground()", span="91-91"];
m86_39 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="SucceededState.feature.cs", label="testRunner.Then(''the state name should be equal to \'Succeeded\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="93-93"];
m86_40 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="SucceededState.feature.cs", label="this.ScenarioCleanup()", span="95-95"];
m86_41 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="85-85"];
m86_331 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", span="500-500"];
m86_446 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="SucceededState.feature.cs", label="_methodInvoked = true", span="502-502"];
m86_447 [cluster="Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.InstanceMethod()", span="500-500"];
m86_371 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", span="579-579"];
m86_485 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="SucceededState.feature.cs", label="_methodInvoked = true", span="581-581"];
m86_486 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Method()", span="579-579"];
m86_238 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", span="258-258"];
m86_241 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="263-263"];
m86_240 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SucceededState.feature.cs", label="var job = Job.FromExpression(() => StaticMethod())", span="261-261"];
m86_242 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SucceededState.feature.cs", label="Assert.True(_methodInvoked)", span="265-265"];
m86_239 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SucceededState.feature.cs", label="_methodInvoked = false", span="260-260"];
m86_243 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeStaticMethods()", span="258-258"];
m86_304 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", span="358-358"];
m86_307 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="365-365"];
m86_306 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SucceededState.feature.cs", label="var job = Job.FromExpression(() => NullArgumentMethod(null))", span="362-362"];
m86_308 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SucceededState.feature.cs", label="Assert.True(_methodInvoked)", span="368-368"];
m86_305 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SucceededState.feature.cs", label="_methodInvoked = false", span="361-361"];
m86_309 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_WorksCorrectly_WithNullValues()", span="358-358"];
m86_182 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", span="213-213"];
m86_184 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="SucceededState.feature.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => MethodWithReferenceParameter(ref test)))", span="216-217"];
m86_183 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="SucceededState.feature.cs", label="string test = null", span="215-215"];
m86_185 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsReferenceParameter()", span="213-213"];
m86_424 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="457-457"];
m86_56 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After applying it should expire the job data'', ((string[])(null)))", span="128-128"];
m86_57 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", color=green, community=0, file="SucceededState.feature.cs", label="2: this.ScenarioSetup(scenarioInfo)", span="130-130"];
m86_58 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterApplyingItShouldExpireTheJobData()", file="SucceededState.feature.cs", label="this.FeatureBackground()", span="132-132"];
m86_130 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="161-161"];
m86_131 [cluster="lambda expression", color=green, community=0, file="SucceededState.feature.cs", label="1: MethodWithDateTimeArgument(date)", span="161-161"];
m86_132 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="161-161"];
m86_168 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="198-198"];
m86_169 [cluster="lambda expression", color=green, community=0, file="SucceededState.feature.cs", label="1: instance.Dispose()", span="198-198"];
m86_170 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="198-198"];
m86_219 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="238-238"];
m86_224 [cluster="lambda expression", color=green, community=0, file="SucceededState.feature.cs", label="0: job.Perform(null, _token.Object)", span="241-241"];
m86_223 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="241-241"];
m86_225 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="241-241"];
m86_220 [cluster="lambda expression", color=green, community=0, file="SucceededState.feature.cs", label="0: StaticMethod()", span="238-238"];
m86_221 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="238-238"];
m86_232 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="249-249"];
m86_236 [cluster="lambda expression", color=green, community=0, file="SucceededState.feature.cs", label="0: job.Perform(_activator.Object, null)", span="252-252"];
m86_235 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="252-252"];
m86_237 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="252-252"];
m86_233 [cluster="lambda expression", color=green, community=0, file="SucceededState.feature.cs", label="1: StaticMethod()", span="249-249"];
m86_234 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="249-249"];
m86_22 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m86_109 [cluster="lambda expression", file="SucceededState.feature.cs", label="MethodWithDateTimeArgument(date)", span="141-141"];
m86_118 [cluster="lambda expression", file="SucceededState.feature.cs", label="MethodWithArguments(''123'', 1)", span="149-149"];
m86_134 [cluster="lambda expression", file="SucceededState.feature.cs", label="MethodWithDateTimeArgument(date)", span="164-164"];
m86_272 [cluster="lambda expression", file="SucceededState.feature.cs", label="MethodWithArguments(''hello'', 5)", span="295-295"];
m86_302 [cluster="lambda expression", file="SucceededState.feature.cs", label="MethodWithDateTimeArgument(SomeDateTime)", span="348-348"];
m86_329 [cluster="lambda expression", file="SucceededState.feature.cs", label="InstanceMethod()", span="377-377"];
m86_333 [cluster="lambda expression", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="380-380"];
m86_346 [cluster="lambda expression", file="SucceededState.feature.cs", label="InstanceMethod()", span="389-389"];
m86_349 [cluster="lambda expression", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="392-392"];
m86_373 [cluster="lambda expression", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="415-415"];
m86_386 [cluster="lambda expression", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="427-427"];
m86_402 [cluster="lambda expression", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="442-442"];
m86_151 [cluster="lambda expression", file="SucceededState.feature.cs", label="new JobFacts()", span="182-182"];
m86_33 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="71-71"];
m86_325 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ActivateJob(It.IsAny<Type>())", span="375-375"];
m86_343 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ActivateJob(It.IsNotNull<Type>())", span="388-388"];
m86_357 [cluster="lambda expression", file="SucceededState.feature.cs", label="new Job(type, method, new []{ JobHelper.ToJson(''sdfa'') })", span="404-404"];
m86_108 [cluster="lambda expression", file="SucceededState.feature.cs", label="HangFire.Tests.States.SucceededStateFeature", span=""];
m86_177 [cluster="lambda expression", file="SucceededState.feature.cs", label="Job.FromExpression(() => instance.Dispose())", span="209-209"];
m86_187 [cluster="lambda expression", file="SucceededState.feature.cs", label="Job.FromExpression(() => MethodWithReferenceParameter(ref test))", span="217-217"];
m86_198 [cluster="lambda expression", file="SucceededState.feature.cs", label="Job.FromExpression(() => MethodWithOutputParameter(out test))", span="225-225"];
m86_208 [cluster="lambda expression", file="SucceededState.feature.cs", label="Job.FromExpression(() => PrivateMethod())", span="232-232"];
m86_180 [cluster="lambda expression", file="SucceededState.feature.cs", label="instance.Dispose()", span="209-209"];
m86_245 [cluster="lambda expression", file="SucceededState.feature.cs", label="StaticMethod()", span="261-261"];
m86_21 [cluster="Unk.OnScenarioEnd", file="SucceededState.feature.cs", label="Entry Unk.OnScenarioEnd", span=""];
m86_23 [cluster="HangFire.Tests.States.SucceededStateFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="SucceededState.feature.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m86_35 [cluster="HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.StateNameShouldBeSucceeded()", span="85-85"];
m86_63 [cluster="Unk.When", file="SucceededState.feature.cs", label="Entry Unk.When", span=""];
m86_110 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="141-141"];
m86_117 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="149-149"];
m86_119 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="149-149"];
m86_133 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="164-164"];
m86_135 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="164-164"];
m86_271 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="295-295"];
m86_273 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="295-295"];
m86_301 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="348-348"];
m86_303 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="348-348"];
m86_324 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="375-375"];
m86_328 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="377-377"];
m86_330 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="377-377"];
m86_332 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="380-380"];
m86_334 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="380-380"];
m86_342 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="388-388"];
m86_345 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="389-389"];
m86_347 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="389-389"];
m86_348 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="392-392"];
m86_350 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="392-392"];
m86_372 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="415-415"];
m86_374 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="415-415"];
m86_385 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="427-427"];
m86_387 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="427-427"];
m86_397 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="438-438"];
m86_401 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="442-442"];
m86_403 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="442-442"];
m86_90 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="204-204"];
m86_150 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="182-182"];
m86_152 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="182-182"];
m86_140 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="173-173"];
m86_147 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="182-182"];
m86_176 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="209-209"];
m86_186 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="217-217"];
m86_197 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="225-225"];
m86_207 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="232-232"];
m86_326 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="375-375"];
m86_344 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="388-388"];
m86_356 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="404-404"];
m86_358 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="404-404"];
m86_96 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="testRunner.Then(''it should decrease the succeeded counter'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="216-216"];
m86_178 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="209-209"];
m86_179 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="209-209"];
m86_188 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="217-217"];
m86_189 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="217-217"];
m86_190 [cluster="lambda expression", file="SucceededState.feature.cs", label="MethodWithReferenceParameter(ref test)", span="217-217"];
m86_199 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="225-225"];
m86_200 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="225-225"];
m86_209 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="232-232"];
m86_210 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="232-232"];
m86_244 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="261-261"];
m86_310 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="362-362"];
m86_381 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="424-424"];
m86_393 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="437-437"];
m86_181 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="209-209"];
m86_246 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="261-261"];
m86_253 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="272-272"];
m86_262 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="283-283"];
m86_368 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="412-412"];
m86_399 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="438-438"];
m86_398 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.ThrowIfCancellationRequested()", span="438-438"];
m86_409 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="448-448"];
m86_148 [cluster="lambda expression", file="SucceededState.feature.cs", label="Job.FromExpression<JobFacts>(x => new JobFacts())", span="182-182"];
m86_142 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="173-173"];
m86_141 [cluster="lambda expression", file="SucceededState.feature.cs", label="Job.FromExpression<JobFacts>(null)", span="173-173"];
m86_149 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="182-182"];
m86_158 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="188-188"];
m86_98 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", span="204-204"];
m86_97 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="this.ScenarioCleanup()", span="218-218"];
m86_191 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="217-217"];
m86_202 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="225-225"];
m86_201 [cluster="lambda expression", file="SucceededState.feature.cs", label="MethodWithOutputParameter(out test)", span="225-225"];
m86_212 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="232-232"];
m86_211 [cluster="lambda expression", file="SucceededState.feature.cs", label="PrivateMethod()", span="232-232"];
m86_312 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="362-362"];
m86_311 [cluster="lambda expression", file="SucceededState.feature.cs", label="NullArgumentMethod(null)", span="362-362"];
m86_383 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="424-424"];
m86_382 [cluster="lambda expression", file="SucceededState.feature.cs", label="ExceptionMethod()", span="424-424"];
m86_395 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="437-437"];
m86_394 [cluster="lambda expression", file="SucceededState.feature.cs", label="CancelableJob(JobCancellationToken.Null)", span="437-437"];
m86_255 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="272-272"];
m86_254 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.Method()", span="272-272"];
m86_264 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="283-283"];
m86_263 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.Method()", span="283-283"];
m86_370 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="412-412"];
m86_369 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.Method()", span="412-412"];
m86_411 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="448-448"];
m86_410 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.FunctionReturningValue()", span="448-448"];
m86_437 [cluster="lambda expression", file="SucceededState.feature.cs", label="Entry lambda expression", span="471-471"];
m86_160 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="188-188"];
m86_159 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.Method()", span="188-188"];
m86_439 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="471-471"];
m86_438 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.Method()", span="471-471"];
m86_425 [cluster="lambda expression", file="SucceededState.feature.cs", label="x.Method()", span="457-457"];
m86_426 [cluster="lambda expression", file="SucceededState.feature.cs", label="Exit lambda expression", span="457-457"];
m86_295 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", span="344-344"];
m86_297 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SucceededState.feature.cs", label="var job = Job.FromExpression(() => MethodWithDateTimeArgument(SomeDateTime))", span="348-348"];
m86_298 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="351-351"];
m86_296 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SucceededState.feature.cs", label="_methodInvoked = false", span="347-347"];
m86_299 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SucceededState.feature.cs", label="Assert.True(_methodInvoked)", span="354-354"];
m86_300 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTimeArguments()", span="344-344"];
m86_8 [cluster="Unk.OnFeatureStart", file="SucceededState.feature.cs", label="Entry Unk.OnFeatureStart", span=""];
m86_222 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", span="495-495"];
m86_444 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="SucceededState.feature.cs", label="_methodInvoked = true", span="497-497"];
m86_445 [cluster="Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.StaticMethod()", span="495-495"];
m86_341 [cluster="Unk.Returns", file="SucceededState.feature.cs", label="Entry Unk.Returns", span=""];
m86_30 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="SucceededState.feature.cs", label="Entry HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", span="71-71"];
m86_31 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="SucceededState.feature.cs", label="testRunner.Given(''a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m86_32 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureBackground()", file="SucceededState.feature.cs", label="testRunner.Given(''the Succeeded state'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="77-77"];
m86_10 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="SucceededState.feature.cs", label="testRunner.OnFeatureEnd()", span="41-41"];
m86_11 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="SucceededState.feature.cs", label="testRunner = null", span="42-42"];
m86_12 [cluster="HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", file="SucceededState.feature.cs", label="Exit HangFire.Tests.States.SucceededStateFeature.FeatureTearDown()", span="39-39"];
m86_321 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SucceededState.feature.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m86_91 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''After unapplying it should change the stats'', ((string[])(null)))", span="206-206"];
m86_93 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="this.FeatureBackground()", span="210-210"];
m86_94 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="testRunner.When(''I apply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="212-212"];
m86_92 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="this.ScenarioSetup(scenarioInfo)", span="208-208"];
m86_95 [cluster="HangFire.Tests.States.SucceededStateFeature.AfterUnapplyingItShouldChangeTheStats()", file="SucceededState.feature.cs", label="testRunner.And(''after I unapply it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="214-214"];
m86_9 [cluster="Mock<IJobCancellationToken>.cstr", file="SucceededState.feature.cs", label="Entry Mock<IJobCancellationToken>.cstr", span=""];
m86_214 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", span="236-236"];
m86_215 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="SucceededState.feature.cs", label="2: var job = Job.FromExpression(() => StaticMethod())", span="238-238"];
m86_216 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="SucceededState.feature.cs", label="2: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => job.Perform(null, _token.Object))", span="240-241"];
m86_217 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", color=green, community=0, file="SucceededState.feature.cs", label="2: Assert.Equal(''activator'', exception.ParamName)", span="243-243"];
m86_218 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenActivatorIsNull()", span="236-236"];
m86_470 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SucceededState.feature.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m86_413 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", span="455-455"];
m86_417 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Assert.Equal(1, nonCachedAttributes.Length)", span="461-461"];
m86_418 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Assert.Equal(1, cachedAttributes.Length)", span="462-462"];
m86_415 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="var nonCachedAttributes = job.GetTypeFilterAttributes(false).ToArray()", span="458-458"];
m86_416 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="var cachedAttributes = job.GetTypeFilterAttributes(true).ToArray()", span="459-459"];
m86_419 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Assert.True(nonCachedAttributes[0] is TestTypeAttribute)", span="464-464"];
m86_420 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Assert.True(cachedAttributes[0] is TestTypeAttribute)", span="465-465"];
m86_414 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="457-457"];
m86_421 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.GetTypeFilterAttributes_ReturnsCorrectAttributes()", span="455-455"];
m86_367 [cluster="Unk.NotNull", file="SucceededState.feature.cs", label="Entry Unk.NotNull", span=""];
m86_322 [cluster="Unk.Setup", file="SucceededState.feature.cs", label="Entry Unk.Setup", span=""];
m86_487 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", span="584-584"];
m86_488 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", file="SucceededState.feature.cs", label="throw new InvalidOperationException();", span="586-586"];
m86_489 [cluster="Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.BrokenDispose.Dispose()", span="584-584"];
m86_454 [cluster="Unk.Null", file="SucceededState.feature.cs", label="Entry Unk.Null", span=""];
m86_55 [cluster="Unk.Contains", file="SucceededState.feature.cs", label="Entry Unk.Contains", span=""];
m86_59 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", span="93-93"];
m86_60 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="SucceededState.feature.cs", label="var method = _type.GetMethod(''GenericMethod'')", span="95-95"];
m86_61 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="SucceededState.feature.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => new Job(_type, method, new[] { ''hello!'' }))", span="97-98"];
m86_62 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContains_UnassignedGenericTypeParameters()", span="93-93"];
m86_359 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="SucceededState.feature.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m86_427 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", span="469-469"];
m86_431 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Assert.Equal(1, nonCachedAttributes.Length)", span="475-475"];
m86_432 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Assert.Equal(1, cachedAttributes.Length)", span="476-476"];
m86_429 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="var nonCachedAttributes = job.GetMethodFilterAttributes(false).ToArray()", span="472-472"];
m86_430 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="var cachedAttributes = job.GetMethodFilterAttributes(true).ToArray()", span="473-473"];
m86_433 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Assert.True(nonCachedAttributes[0] is TestMethodAttribute)", span="478-478"];
m86_434 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Assert.True(cachedAttributes[0] is TestMethodAttribute)", span="479-479"];
m86_428 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="471-471"];
m86_435 [cluster="Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.GetMethodFilterAttributes_ReturnsCorrectAttributes()", span="469-469"];
m86_313 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", span="510-510"];
m86_451 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="SucceededState.feature.cs", label="_methodInvoked = true", span="512-512"];
m86_452 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="SucceededState.feature.cs", label="Assert.Null(argument)", span="513-513"];
m86_453 [cluster="Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.NullArgumentMethod(string[])", span="510-510"];
m86_42 [cluster="Unk.Same", file="SucceededState.feature.cs", label="Entry Unk.Same", span=""];
m86_24 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", span="52-52"];
m86_43 [cluster="Unk.SequenceEqual", file="SucceededState.feature.cs", label="Entry Unk.SequenceEqual", span=""];
m86_167 [cluster="Hangfire.Core.Tests.Common.JobFacts.Instance.Instance()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Instance.Instance()", span="558-558"];
m86_204 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", span="229-229"];
m86_205 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="SucceededState.feature.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => PrivateMethod()))", span="231-232"];
m86_206 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodIsNotPublic()", span="229-229"];
m86_396 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="505-505"];
m86_448 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="SucceededState.feature.cs", label="token.ThrowIfCancellationRequested()", span="507-507"];
m86_449 [cluster="Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.CancelableJob(Hangfire.IJobCancellationToken)", span="505-505"];
m86_227 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", span="247-247"];
m86_228 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", color=green, community=0, file="SucceededState.feature.cs", label="2: var job = Job.FromExpression(() => StaticMethod())", span="249-249"];
m86_229 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", color=green, community=0, file="SucceededState.feature.cs", label="1: var exception = Assert.Throws<ArgumentNullException>(\r\n                () => job.Perform(_activator.Object, null))", span="251-252"];
m86_230 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="SucceededState.feature.cs", label="Assert.Equal(''cancellationToken'', exception.ParamName)", span="254-254"];
m86_231 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ThrowsAnException_WhenCancellationTokenIsNull()", span="247-247"];
m86_193 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", span="221-221"];
m86_195 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="SucceededState.feature.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression(() => MethodWithOutputParameter(out test)))", span="224-225"];
m86_194 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="SucceededState.feature.cs", label="string test", span="223-223"];
m86_196 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenMethodContainsOutputParameter()", span="221-221"];
m86_247 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", span="269-269"];
m86_250 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="274-274"];
m86_249 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SucceededState.feature.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="272-272"];
m86_251 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SucceededState.feature.cs", label="Assert.True(_methodInvoked)", span="276-276"];
m86_248 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SucceededState.feature.cs", label="_methodInvoked = false", span="271-271"];
m86_252 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_CanInvokeInstanceMethods()", span="269-269"];
m86_25 [cluster="Hangfire.Core.Tests.Common.JobFacts.Ctor_ThrowsAnException_WhenTheTypeDoesNotContainTheGivenMethod()", file="SucceededState.feature.cs", label="Assert.Throws<ArgumentException>(\r\n                () => new Job(typeof(Job), _method, _arguments))", span="54-55"];
m86_285 [cluster="System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", file="SucceededState.feature.cs", label="Entry System.ComponentModel.TypeConverter.ConvertToInvariantString(object)", span="0-0"];
m86_121 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", span="156-156"];
m86_123 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", color=green, community=0, file="SucceededState.feature.cs", label="1: Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''en-US'')", span="160-160"];
m86_122 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SucceededState.feature.cs", label="var date = DateTime.UtcNow", span="158-158"];
m86_124 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", color=green, community=0, file="SucceededState.feature.cs", label="1: var enJob = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="161-161"];
m86_125 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SucceededState.feature.cs", label="Thread.CurrentThread.CurrentCulture = CultureInfo.GetCultureInfo(''ru-RU'')", span="163-163"];
m86_127 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SucceededState.feature.cs", label="Assert.Equal(enJob.Arguments[0], ruJob.Arguments[0])", span="166-166"];
m86_126 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SucceededState.feature.cs", label="var ruJob = Job.FromExpression(() => MethodWithDateTimeArgument(date))", span="164-164"];
m86_128 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromExpression_ReturnValueDoesNotDepend_OnCurrentCulture()", span="156-156"];
m86_13 [cluster="Unk.OnFeatureEnd", file="SucceededState.feature.cs", label="Entry Unk.OnFeatureEnd", span=""];
m86_400 [cluster="Unk.ThrowIfCancellationRequested", file="SucceededState.feature.cs", label="Entry Unk.ThrowIfCancellationRequested", span=""];
m86_162 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", span="195-195"];
m86_164 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", color=green, community=0, file="SucceededState.feature.cs", label="2: var job = Job.FromExpression(() => instance.Dispose())", span="198-198"];
m86_163 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="SucceededState.feature.cs", label="IDisposable instance = new Instance()", span="197-197"];
m86_165 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", color=green, community=0, file="SucceededState.feature.cs", label="2: Assert.Equal(typeof(Instance), job.Type)", span="200-200"];
m86_166 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromNonGenericExpression_ShouldInferType_FromAGivenObject()", span="195-195"];
m86_144 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="179-179"];
m86_145 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SucceededState.feature.cs", label="Assert.Throws<NotSupportedException>(\r\n                () => Job.FromExpression<JobFacts>(x => new JobFacts()))", span="181-182"];
m86_146 [cluster="Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.FromInstanceExpression_ThrowsAnException_WhenNewExpressionIsGiven()", span="179-179"];
m86_284 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="SucceededState.feature.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m86_256 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", span="280-280"];
m86_259 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="285-285"];
m86_258 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SucceededState.feature.cs", label="var job = Job.FromExpression<Instance>(x => x.Method())", span="283-283"];
m86_260 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SucceededState.feature.cs", label="Assert.True(_disposed)", span="287-287"];
m86_257 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SucceededState.feature.cs", label="_disposed = false", span="282-282"];
m86_261 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_DisposesDisposableInstance_AfterPerformance()", span="280-280"];
m86_323 [cluster="Unk.Throws", file="SucceededState.feature.cs", label="Entry Unk.Throws", span=""];
m86_226 [cluster="Unk.Perform", file="SucceededState.feature.cs", label="Entry Unk.Perform", span=""];
m86_274 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="305-305"];
m86_281 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SucceededState.feature.cs", label="job.Perform(_activator.Object, _token.Object)", span="318-318"];
m86_279 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SucceededState.feature.cs", label="var method = type.GetMethod(''MethodWithDateTimeArgument'')", span="313-313"];
m86_280 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SucceededState.feature.cs", label="var job = new Job(type, method, new[] { convertedDate })", span="315-315"];
m86_282 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SucceededState.feature.cs", label="Assert.True(_methodInvoked)", span="321-321"];
m86_278 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SucceededState.feature.cs", label="var type = typeof (JobFacts)", span="312-312"];
m86_277 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SucceededState.feature.cs", label="var convertedDate = typeConverter.ConvertToInvariantString(SomeDateTime)", span="310-310"];
m86_276 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SucceededState.feature.cs", label="var typeConverter = TypeDescriptor.GetConverter(typeof (DateTime))", span="309-309"];
m86_275 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SucceededState.feature.cs", label="_methodInvoked = false", span="308-308"];
m86_283 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCorrectDateTime_IfItWasSerialized_UsingTypeConverter()", span="305-305"];
m86_459 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", span="524-524"];
m86_461 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="SucceededState.feature.cs", label="Assert.Equal(''5'', argument)", span="528-528"];
m86_460 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="SucceededState.feature.cs", label="_methodInvoked = true", span="526-526"];
m86_462 [cluster="Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.MethodWithObjectArgument(object)", span="524-524"];
m86_388 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="434-434"];
m86_390 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SucceededState.feature.cs", label="_token.Setup(x => x.ThrowIfCancellationRequested()).Throws<OperationCanceledException>()", span="438-438"];
m86_391 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SucceededState.feature.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => job.Perform(_activator.Object, _token.Object))", span="441-442"];
m86_389 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SucceededState.feature.cs", label="var job = Job.FromExpression(() => CancelableJob(JobCancellationToken.Null))", span="437-437"];
m86_392 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_PassesCancellationToken_IfThereIsIJobCancellationTokenParameter()", span="434-434"];
m86_327 [cluster="Unk.ActivateJob", file="SucceededState.feature.cs", label="Entry Unk.ActivateJob", span=""];
m86_129 [cluster="System.Globalization.CultureInfo.GetCultureInfo(string)", file="SucceededState.feature.cs", label="Entry System.Globalization.CultureInfo.GetCultureInfo(string)", span="0-0"];
m86_404 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="SucceededState.feature.cs", label="Entry Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", span="446-446"];
m86_406 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="SucceededState.feature.cs", label="var result = job.Perform(_activator.Object, _token.Object)", span="450-450"];
m86_407 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="SucceededState.feature.cs", label="Assert.Equal(''Return value'', result)", span="452-452"];
m86_405 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="SucceededState.feature.cs", label="var job = Job.FromExpression<Instance>(x => x.FunctionReturningValue())", span="448-448"];
m86_408 [cluster="Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", file="SucceededState.feature.cs", label="Exit Hangfire.Core.Tests.Common.JobFacts.Perform_ReturnsValue_WhenCallingFunctionReturningValue()", span="446-446"];
m86_492 [file="SucceededState.feature.cs", label="Hangfire.Core.Tests.Common.JobFacts", span=""];
m86_496 [file="SucceededState.feature.cs", label=date, span=""];
m86_497 [file="SucceededState.feature.cs", label=instance, span=""];
m86_500 [file="SucceededState.feature.cs", label=job, span=""];
m86_501 [file="SucceededState.feature.cs", label=job, span=""];
m86_493 [file="SucceededState.feature.cs", label=method, span=""];
m86_494 [file="SucceededState.feature.cs", label=method, span=""];
m86_495 [file="SucceededState.feature.cs", label=date, span=""];
m86_502 [file="SucceededState.feature.cs", label=job, span=""];
m86_503 [file="SucceededState.feature.cs", label=job, span=""];
m86_506 [file="SucceededState.feature.cs", label=job, span=""];
m86_507 [file="SucceededState.feature.cs", label=job, span=""];
m86_508 [file="SucceededState.feature.cs", label=job, span=""];
m86_504 [file="SucceededState.feature.cs", label=type, span=""];
m86_505 [file="SucceededState.feature.cs", label=method, span=""];
m86_498 [file="SucceededState.feature.cs", label=instance, span=""];
m86_499 [file="SucceededState.feature.cs", label=test, span=""];
m87_12 [cluster="System.TimeSpan.FromMinutes(double)", file="TestExceptionFilter.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m87_11 [cluster="Unk.IsNotNull", file="TestExceptionFilter.cs", label="Entry Unk.IsNotNull", span=""];
m87_0 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="TestExceptionFilter.cs", label="Entry Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="30-30"];
m87_1 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="TestExceptionFilter.cs", label="TransactionIsolationLevel = null", span="32-32"];
m87_2 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="TestExceptionFilter.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="33-33"];
m87_3 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="TestExceptionFilter.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="35-35"];
m87_4 [cluster="Hangfire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="TestExceptionFilter.cs", label="JobExpirationCheckInterval = TimeSpan.FromMinutes(30)", span="37-37"];
m87_13 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="TestExceptionFilter.cs", label="Hangfire.SqlServer.SqlServerStorageOptions", span=""];
m87_14 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", color=red, community=0, file="TestExceptionFilter.cs", label="2: Assert.IsNotNull(filterContext)", span="38-38"];
m87_17 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="TestExceptionFilter.cs", label="filterContext.ExceptionHandled = true", span="44-44"];
m87_15 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="TestExceptionFilter.cs", label="_results.Add(_name)", span="40-40"];
m87_16 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="TestExceptionFilter.cs", label=_handlesException, span="42-42"];
m87_18 [cluster="HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", file="TestExceptionFilter.cs", label="Exit HangFire.Tests.TestExceptionFilter.OnServerException(HangFire.Server.Filters.ServerExceptionContext)", span="36-36"];
m87_5 [cluster="HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", color=green, community=0, file="TestExceptionFilter.cs", label="1: Entry HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", span="24-24"];
m87_6 [cluster="HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", color=red, community=0, file="TestExceptionFilter.cs", label="1: Assert.IsNotNull(filterContext)", span="26-26"];
m87_7 [cluster="HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", file="TestExceptionFilter.cs", label="_results.Add(_name)", span="28-28"];
m87_8 [cluster="HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", file="TestExceptionFilter.cs", label=_handlesException, span="30-30"];
m87_9 [cluster="HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", file="TestExceptionFilter.cs", label="filterContext.ExceptionHandled = true", span="32-32"];
m87_10 [cluster="HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", file="TestExceptionFilter.cs", label="Exit HangFire.Tests.TestExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", span="24-24"];
m87_19 [file="TestExceptionFilter.cs", label="HangFire.Tests.TestExceptionFilter", span=""];
m88_8 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="TestFilter.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m88_0 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="TestFilter.cs", label="Entry Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m88_1 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="TestFilter.cs", label="ServerId = ''server''", span="14-14"];
m88_2 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="TestFilter.cs", label="Storage = new Mock<JobStorage>()", span="15-15"];
m88_3 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="TestFilter.cs", label="Properties = new Dictionary<string, object>()", span="16-16"];
m88_4 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="TestFilter.cs", label="CancellationTokenSource = new CancellationTokenSource()", span="17-17"];
m88_5 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="TestFilter.cs", label="_context = new Lazy<BackgroundProcessContext>(\r\n                () => new BackgroundProcessContext(ServerId, Storage.Object, Properties, CancellationTokenSource.Token))", span="19-20"];
m88_6 [cluster="Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", file="TestFilter.cs", label="Exit Hangfire.Core.Tests.BackgroundProcessContextMock.BackgroundProcessContextMock()", span="12-12"];
m88_10 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="TestFilter.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m88_14 [cluster="BackgroundProcessContext.cstr", file="TestFilter.cs", label="Entry BackgroundProcessContext.cstr", span=""];
m88_9 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="TestFilter.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m88_7 [cluster="Mock<JobStorage>.cstr", file="TestFilter.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m88_11 [cluster="lambda expression", file="TestFilter.cs", label="Entry lambda expression", span="20-20"];
m88_12 [cluster="lambda expression", file="TestFilter.cs", label="new BackgroundProcessContext(ServerId, Storage.Object, Properties, CancellationTokenSource.Token)", span="20-20"];
m88_13 [cluster="lambda expression", file="TestFilter.cs", label="Exit lambda expression", span="20-20"];
m88_15 [file="TestFilter.cs", label="Hangfire.Core.Tests.BackgroundProcessContextMock", span=""];
m89_10 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TestStateChangedFilter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m89_11 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m89_12 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="TestStateChangedFilter.cs", label="0: Assert.IsNotNull(context)", span="29-29"];
m89_13 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateUnapplied''))", span="31-31"];
m89_14 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="Exit HangFire.Tests.TestStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m89_0 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="TestStateChangedFilter.cs", label="Entry Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="23-23"];
m89_1 [cluster="Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", file="TestStateChangedFilter.cs", label="Exit Hangfire.BackgroundJobClientException.BackgroundJobClientException(string, System.Exception)", span="23-23"];
m89_2 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="TestStateChangedFilter.cs", label="_results = results", span="17-17"];
m89_3 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="TestStateChangedFilter.cs", label="Exit HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m89_9 [cluster="string.Format(string, object, object)", file="TestStateChangedFilter.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m89_8 [cluster="Unk.IsNotNull", file="TestStateChangedFilter.cs", label="Entry Unk.IsNotNull", span=""];
m89_4 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="Entry HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20"];
m89_5 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", color=green, community=0, file="TestStateChangedFilter.cs", label="0: Assert.IsNotNull(context)", span="22-22"];
m89_6 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnStateApplied''))", span="24-24"];
m89_7 [cluster="HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="TestStateChangedFilter.cs", label="Exit HangFire.Tests.TestStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="20-20"];
m89_15 [file="TestStateChangedFilter.cs", label="HangFire.Tests.TestStateChangedFilter", span=""];
m90_8 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="_changeState != null", span="27-27"];
m90_12 [cluster="Hangfire.Dashboard.DashboardContext.GetBackgroundJobClient()", file="TestStateChangingFilter.cs", label="Exit Hangfire.Dashboard.DashboardContext.GetBackgroundJobClient()", span="44-44"];
m90_0 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs", label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14"];
m90_1 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs", label="_name = name", span="16-16"];
m90_2 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs", label="_results = results", span="17-17"];
m90_3 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs", label="_changeState = changeState", span="18-18"];
m90_4 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="TestStateChangingFilter.cs", label="Exit HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14"];
m90_5 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="Entry HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="21-21"];
m90_6 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="TestStateChangingFilter.cs", label="2: Assert.IsNotNull(context)", span="23-23"];
m90_7 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="_results.Add(_name)", span="25-25"];
m90_17 [cluster="Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", file="TestStateChangingFilter.cs", label="Entry Hangfire.RecurringJobManager.RecurringJobManager(Hangfire.JobStorage)", span="41-41"];
m90_9 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="context.CandidateState = _changeState", span="29-29"];
m90_10 [cluster="HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="TestStateChangingFilter.cs", label="Exit HangFire.Tests.TestStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="21-21"];
m90_11 [cluster="Unk.IsNotNull", file="TestStateChangingFilter.cs", label="Entry Unk.IsNotNull", span=""];
m90_14 [cluster="Hangfire.Dashboard.DashboardContext.GetRecurringJobManager()", file="TestStateChangingFilter.cs", label="Entry Hangfire.Dashboard.DashboardContext.GetRecurringJobManager()", span="49-49"];
m90_15 [cluster="Hangfire.Dashboard.DashboardContext.GetRecurringJobManager()", file="TestStateChangingFilter.cs", label="return new RecurringJobManager(Storage);", span="51-51"];
m90_16 [cluster="Hangfire.Dashboard.DashboardContext.GetRecurringJobManager()", file="TestStateChangingFilter.cs", label="Exit Hangfire.Dashboard.DashboardContext.GetRecurringJobManager()", span="49-49"];
m90_13 [cluster="Hangfire.BackgroundJobClient.BackgroundJobClient(Hangfire.JobStorage)", file="TestStateChangingFilter.cs", label="HangFire.Tests.TestStateChangingFilter", span=""];
m90_18 [file="TestStateChangingFilter.cs", label="Hangfire.Dashboard.DashboardContext", span=""];
m91_123 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255"];
m91_128 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="Worker.cs", label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="260-263"];
m91_126 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="Worker.cs", label="toScore < fromScore", span="258-258"];
m91_125 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="257-257"];
m91_124 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="Worker.cs", label="key == null", span="257-257"];
m91_127 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="Worker.cs", label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="258-258"];
m91_129 [cluster="Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="255-255"];
m91_88 [cluster="Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="Worker.cs", label="return expressions.Select(GetExpressionValue).ToArray();", span="314-314"];
m91_157 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301"];
m91_163 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="Worker.cs", label="_connection.Execute(\r\n                @''merge HangFire.Server with (holdlock) as Target ''\r\n                + @''using (VALUES (@id, @data, @heartbeat)) as Source (Id, Data, Heartbeat) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = Source.Heartbeat ''\r\n                + @''when not matched then insert (Id, Data, LastHeartbeat) values (Source.Id, Source.Data, Source.Heartbeat);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data), heartbeat = DateTime.UtcNow })", span="313-319"];
m91_162 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="Worker.cs", label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="306-311"];
m91_159 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="Worker.cs", label="throw new ArgumentNullException(''serverId'');", span="303-303"];
m91_161 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="Worker.cs", label="throw new ArgumentNullException(''context'');", span="304-304"];
m91_158 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="Worker.cs", label="serverId == null", span="303-303"];
m91_160 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="Worker.cs", label="context == null", span="304-304"];
m91_164 [cluster="Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.AnnounceServer(string, Hangfire.Server.ServerContext)", span="301-301"];
m91_27 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="Worker.cs", label="Exit Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="160-160"];
m91_30 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="Worker.cs", label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="167-167"];
m91_33 [cluster="Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="Worker.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38"];
m91_28 [cluster="Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="Worker.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33"];
m91_31 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="Worker.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="169-171"];
m91_34 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="Worker.cs", label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="176-178"];
m91_29 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="Worker.cs", label="Entry Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="174-174"];
m91_32 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="Worker.cs", label="Exit Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="167-167"];
m91_35 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="Worker.cs", label="Exit Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="174-174"];
m91_6 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="Worker.cs", label="throw new ArgumentNullException(''queueProviders'');", span="51-51"];
m91_7 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="Worker.cs", label="_connection = connection", span="53-53"];
m91_9 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="Worker.cs", label="_queueProviders = queueProviders", span="55-55"];
m91_11 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", span="44-44"];
m91_13 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Dispose()", span="63-63"];
m91_14 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="Worker.cs", label=OwnsConnection, span="65-65"];
m91_15 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="Worker.cs", label="_connection.Dispose()", span="67-67"];
m91_16 [cluster="Hangfire.SqlServer.SqlServerConnection.Dispose()", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.Dispose()", span="63-63"];
m91_8 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="Worker.cs", label="_isolationLevel = isolationLevel", span="54-54"];
m91_10 [cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection, bool)", file="Worker.cs", label="OwnsConnection = ownsConnection", span="57-57"];
m91_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Worker.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m91_17 [cluster="Unk.Dispose", file="Worker.cs", label="Entry Unk.Dispose", span=""];
m91_171 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331"];
m91_174 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="Worker.cs", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="335-337"];
m91_172 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="Worker.cs", label="serverId == null", span="333-333"];
m91_173 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="Worker.cs", label="throw new ArgumentNullException(''serverId'');", span="333-333"];
m91_175 [cluster="Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.Heartbeat(string)", span="331-331"];
m91_37 [cluster="Unk.Distinct", file="Worker.cs", label="Entry Unk.Distinct", span=""];
m91_101 [cluster="Hangfire.Storage.StateData.StateData()", file="Worker.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="21-21"];
m91_56 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="var parameterArray = new object[parameters.Count]", span="132-132"];
m91_165 [cluster="Hangfire.SqlServer.Entities.ServerData.ServerData()", file="Worker.cs", label="Entry Hangfire.SqlServer.Entities.ServerData.ServerData()", span="20-20"];
m91_2 [cluster="Hangfire.Common.Job.Job(System.Reflection.MethodInfo, params object[])", file="Worker.cs", label="Entry Hangfire.Common.Job.Job(System.Reflection.MethodInfo, params object[])", span="80-80"];
m91_5 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="Worker.cs", label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="101-101"];
m91_4 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="Worker.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="101-101"];
m91_3 [cluster="Hangfire.Common.Job.Job(System.Reflection.MethodInfo, params object[])", file="Worker.cs", label="Exit Hangfire.Common.Job.Job(System.Reflection.MethodInfo, params object[])", span="80-80"];
m91_144 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289"];
m91_147 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="Worker.cs", label="var result = _connection.Query<SqlHash>(\r\n                ''select Field, Value from HangFire.Hash with (forceseek) where [Key] = @key'',\r\n                new { key })\r\n                .ToDictionary(x => x.Field, x => x.Value)", span="293-296"];
m91_145 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="Worker.cs", label="key == null", span="291-291"];
m91_148 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="Worker.cs", label="return result.Count != 0 ? result : null;", span="298-298"];
m91_146 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="291-291"];
m91_149 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllEntriesFromHash(string)", span="289-289"];
m91_69 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Worker.cs", label="throw new NotSupportedException(''Job method can not contain unassigned generic type parameters.'');", span="263-263"];
m91_25 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="Worker.cs", label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="160-160"];
m91_251 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467"];
m91_255 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="Worker.cs", label="return _connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList();", span="478-480"];
m91_254 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="Worker.cs", label="string query = @''\r\nselect [Value] from (\r\n	select [Value], row_number() over (order by [Id] desc) as row_num \r\n	from Hangfire.List\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="471-476"];
m91_253 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="469-469"];
m91_252 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="Worker.cs", label="key == null", span="469-469"];
m91_256 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromList(string, int, int)", span="467-467"];
m91_53 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="var invocationData = InvocationData.Serialize(job)", span="118-118"];
m91_58 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label=parameters, span="134-134"];
m91_59 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="136-141"];
m91_61 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="_connection.Execute(insertParameterSql, parameterArray)", span="148-148"];
m91_60 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", color=green, community=0, file="Worker.cs", label="1: string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="144-146"];
m91_62 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="return jobId;", span="151-151"];
m91_64 [cluster="Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", file="Worker.cs", label="Entry Hangfire.Storage.InvocationData.Serialize(Hangfire.Common.Job)", span="67-67"];
m91_63 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104"];
m91_65 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="Worker.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m91_228 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430"];
m91_234 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="Worker.cs", label="return _connection.Query<string>(query, new { key = key, field = name }).SingleOrDefault();", span="439-439"];
m91_233 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="Worker.cs", label="string query = @''\r\nselect [Value] from HangFire.Hash\r\nwhere [Key] = @key and [Field] = @field''", span="435-437"];
m91_230 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="432-432"];
m91_232 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="Worker.cs", label="throw new ArgumentNullException(''name'');", span="433-433"];
m91_229 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="Worker.cs", label="key == null", span="432-432"];
m91_231 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="Worker.cs", label="name == null", span="433-433"];
m91_235 [cluster="Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetValueFromHash(string, string)", span="430-430"];
m91_89 [cluster="Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="Worker.cs", label="Exit Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", span="312-312"];
m91_70 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="Worker.cs", label="method.DeclaringType == null", span="266-266"];
m91_122 [cluster="HashSet<string>.cstr", file="Worker.cs", label="Entry HashSet<string>.cstr", span=""];
m91_19 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="Worker.cs", label="return new SqlServerWriteOnlyTransaction(_connection, _isolationLevel, _queueProviders);", span="73-73"];
m91_66 [cluster="System.DateTime.Add(System.TimeSpan)", file="Worker.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m91_68 [cluster="Unk.Single", file="Worker.cs", label="Entry Unk.Single", span=""];
m91_72 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="id == null", span="156-156"];
m91_73 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="throw new ArgumentNullException(''id'');", span="156-156"];
m91_74 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="string sql = \r\n                @''select InvocationData, StateName, Arguments, CreatedAt from HangFire.Job where Id = @id''", span="158-159"];
m91_76 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="jobData == null", span="164-164"];
m91_77 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="return null;", span="164-164"];
m91_78 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="167-167"];
m91_67 [cluster="Unk.>", file="Worker.cs", label="Entry Unk.>", span=""];
m91_71 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", span="154-154"];
m91_75 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="161-162"];
m91_79 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="invocationData.Arguments = jobData.Arguments", span="168-168"];
m91_80 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="Job job = null", span="170-170"];
m91_82 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="job = invocationData.Deserialize()", span="175-175"];
m91_81 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="JobLoadException loadException = null", span="171-171"];
m91_83 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label=JobLoadException, span="177-177"];
m91_84 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobData(string)", file="Worker.cs", label="loadException = ex", span="179-179"];
m91_176 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340"];
m91_179 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="Worker.cs", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="347-349"];
m91_177 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="Worker.cs", label="timeOut.Duration() != timeOut", span="342-342"];
m91_178 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="Worker.cs", label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="344-344"];
m91_180 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="340-340"];
m91_18 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="71-71"];
m91_242 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453"];
m91_246 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="Worker.cs", label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="461-461"];
m91_245 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="Worker.cs", label="string query = @''\r\nselect min([ExpireAt]) from HangFire.List\r\nwhere [Key] = @key''", span="457-459"];
m91_247 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="Worker.cs", label="!result.HasValue", span="462-462"];
m91_249 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="Worker.cs", label="return result.Value - DateTime.UtcNow;", span="464-464"];
m91_244 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="455-455"];
m91_243 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="Worker.cs", label="key == null", span="455-455"];
m91_248 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="Worker.cs", label="return TimeSpan.FromSeconds(-1);", span="462-462"];
m91_250 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetListTtl(string)", span="453-453"];
m91_213 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405"];
m91_217 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="Worker.cs", label="return _connection.Query<long>(query, new { key = key }).Single();", span="413-413"];
m91_216 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="Worker.cs", label="string query = @''\r\nselect count([Id]) from HangFire.Hash\r\nwhere [Key] = @key''", span="409-411"];
m91_215 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="407-407"];
m91_214 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="Worker.cs", label="key == null", span="407-407"];
m91_218 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashCount(string)", span="405-405"];
m91_26 [cluster="string.Format(string, object)", file="Worker.cs", label="Entry string.Format(string, object)", span="0-0"];
m91_54 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = createdAt,\r\n                    expireAt = createdAt.Add(expireIn)\r\n                }).Single().ToString()", span="120-128"];
m91_92 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="Worker.cs", label="throw new ArgumentNullException(''jobId'');", span="193-193"];
m91_93 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="Worker.cs", label="string sql = @''\r\nselect s.Name, s.Reason, s.Data\r\nfrom HangFire.State s\r\ninner join HangFire.Job j on j.StateId = s.Id\r\nwhere j.Id = @jobId''", span="195-199"];
m91_94 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="Worker.cs", label="var sqlState = _connection.Query<SqlState>(sql, new { jobId = jobId }).SingleOrDefault()", span="201-201"];
m91_142 [cluster="TransactionScope.cstr", file="Worker.cs", label="Entry TransactionScope.cstr", span=""];
m91_207 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391"];
m91_211 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="Worker.cs", label="return _connection.Query<long?>(query, new { key = key }).Single() ?? 0;", span="402-402"];
m91_210 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="Worker.cs", label="string query = @''\r\nselect sum(s.[Value]) from (select sum([Value]) as [Value] from HangFire.Counter\r\nwhere [Key] = @key\r\nunion all\r\nselect [Value] from HangFire.AggregatedCounter\r\nwhere [Key] = @key) as s''", span="395-400"];
m91_209 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="393-393"];
m91_208 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="Worker.cs", label="key == null", span="393-393"];
m91_212 [cluster="Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetCounter(string)", span="391-391"];
m91_38 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Worker.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="188-188"];
m91_91 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="Worker.cs", label="jobId == null", span="193-193"];
m91_166 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322"];
m91_169 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="Worker.cs", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="326-328"];
m91_167 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="Worker.cs", label="serverId == null", span="324-324"];
m91_168 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="Worker.cs", label="throw new ArgumentNullException(''serverId'');", span="324-324"];
m91_170 [cluster="Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.RemoveServer(string)", span="322-322"];
m91_100 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", file="Worker.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m91_181 [cluster="System.TimeSpan.Duration()", file="Worker.cs", label="Entry System.TimeSpan.Duration()", span="0-0"];
m91_131 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266"];
m91_139 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label="_connection.Execute(sql, new { key = key, field = keyValuePair.Key, value = keyValuePair.Value })", span="282-282"];
m91_138 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label=keyValuePairs, span="280-280"];
m91_136 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label="string sql = @''\r\nmerge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="271-276"];
m91_133 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="268-268"];
m91_135 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label="throw new ArgumentNullException(''keyValuePairs'');", span="269-269"];
m91_132 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label="key == null", span="268-268"];
m91_134 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label="keyValuePairs == null", span="269-269"];
m91_137 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label="var transaction = new TransactionScope()", span="278-278"];
m91_140 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label="transaction.Complete()", span="285-285"];
m91_141 [cluster="Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="266-266"];
m91_154 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="296-296"];
m91_44 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Worker.cs", label="Type type", span="198-198"];
m91_43 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Worker.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="195-195"];
m91_45 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Worker.cs", label="callExpression.Object != null", span="200-200"];
m91_151 [cluster="lambda expression", file="Worker.cs", label="Entry lambda expression", span="296-296"];
m91_153 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="296-296"];
m91_152 [cluster="lambda expression", file="Worker.cs", label="x.Field", span="296-296"];
m91_155 [cluster="lambda expression", file="Worker.cs", label="x.Value", span="296-296"];
m91_156 [cluster="lambda expression", file="Worker.cs", label="Exit lambda expression", span="296-296"];
m91_42 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Worker.cs", label="callExpression == null", span="193-193"];
m91_20 [cluster="Hangfire.Common.Job.ToString()", file="Worker.cs", label="Entry Hangfire.Common.Job.ToString()", span="155-155"];
m91_196 [cluster="Unk.ToList", file="Worker.cs", label="Entry Unk.ToList", span=""];
m91_87 [cluster="Unk.SingleOrDefault", file="Worker.cs", label="Entry Unk.SingleOrDefault", span=""];
m91_39 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="Worker.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m91_41 [cluster="Unk.GetJobQueue", file="Worker.cs", label="Entry Unk.GetJobQueue", span=""];
m91_40 [cluster="string.Join(string, params string[])", file="Worker.cs", label="Entry string.Join(string, params string[])", span="0-0"];
m91_46 [cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53"];
m91_50 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="parameters == null", span="111-111"];
m91_51 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="throw new ArgumentNullException(''parameters'');", span="111-111"];
m91_47 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", span="104-104"];
m91_49 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="throw new ArgumentNullException(''job'');", span="110-110"];
m91_48 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="job == null", span="110-110"];
m91_52 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="113-116"];
m91_57 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="int parameterIndex = 0", span="133-133"];
m91_219 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416"];
m91_223 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="Worker.cs", label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="424-424"];
m91_222 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="Worker.cs", label="string query = @''\r\nselect min([ExpireAt]) from HangFire.Hash\r\nwhere [Key] = @key''", span="420-422"];
m91_224 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="Worker.cs", label="!result.HasValue", span="425-425"];
m91_226 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="Worker.cs", label="return result.Value - DateTime.UtcNow;", span="427-427"];
m91_221 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="418-418"];
m91_220 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="Worker.cs", label="key == null", span="418-418"];
m91_225 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="Worker.cs", label="return TimeSpan.FromSeconds(-1);", span="425-425"];
m91_227 [cluster="Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetHashTtl(string)", span="416-416"];
m91_190 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361"];
m91_194 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="Worker.cs", label="return _connection\r\n                .Query<string>(query, new { key = key, startingFrom = startingFrom + 1, endingAt = endingAt + 1 })\r\n                .ToList();", span="372-374"];
m91_193 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="Worker.cs", label="var query = @''\r\nselect [Value] from (\r\n	select [Value], row_number() over (order by [Id] ASC) as row_num \r\n	from Hangfire.[Set]\r\n	where [Key] = @key \r\n) as s where s.row_num between @startingFrom and @endingAt''", span="365-370"];
m91_192 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="363-363"];
m91_191 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="Worker.cs", label="key == null", span="363-363"];
m91_195 [cluster="Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetRangeFromSet(string, int, int)", span="361-361"];
m91_85 [cluster="System.Type.IsAssignableFrom(System.Type)", color=green, community=0, file="Worker.cs", label="1: Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m91_86 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Worker.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m91_22 [cluster="Hangfire.Common.Job.ToString()", file="Worker.cs", label="Exit Hangfire.Common.Job.ToString()", span="155-155"];
m91_23 [cluster="System.Type.ToGenericTypeString()", file="Worker.cs", label="Entry System.Type.ToGenericTypeString()", span="8-8"];
m91_24 [cluster="string.Format(string, object, object)", file="Worker.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m91_183 [cluster="System.TimeSpan.Negate()", file="Worker.cs", label="Entry System.TimeSpan.Negate()", span="0-0"];
m91_55 [cluster="Hangfire.SqlServer.SqlServerConnection.CreateExpiredJob(Hangfire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.DateTime, System.TimeSpan)", file="Worker.cs", label="parameters.Count > 0", span="130-130"];
m91_143 [cluster="Unk.Complete", file="Worker.cs", label="Entry Unk.Complete", span=""];
m91_189 [cluster="Unk.First", file="Worker.cs", label="Entry Unk.First", span=""];
m91_182 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Worker.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m91_116 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244"];
m91_119 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="Worker.cs", label="var result = _connection.Query<string>(\r\n                @''select Value from HangFire.[Set] where [Key] = @key'',\r\n                new { key })", span="248-250"];
m91_117 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="Worker.cs", label="key == null", span="246-246"];
m91_120 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="Worker.cs", label="return new HashSet<string>(result);", span="252-252"];
m91_118 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="246-246"];
m91_121 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromSet(string)", span="244-244"];
m91_0 [cluster="Hangfire.Common.Job.Job(System.Reflection.MethodInfo)", file="Worker.cs", label="Entry Hangfire.Common.Job.Job(System.Reflection.MethodInfo)", span="67-67"];
m91_1 [cluster="Hangfire.Common.Job.Job(System.Reflection.MethodInfo)", file="Worker.cs", label="Exit Hangfire.Common.Job.Job(System.Reflection.MethodInfo)", span="67-67"];
m91_150 [cluster="Unk.ToDictionary", file="Worker.cs", label="Entry Unk.ToDictionary", span=""];
m91_95 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="Worker.cs", label="sqlState == null", span="202-202"];
m91_257 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483"];
m91_261 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="Worker.cs", label="return _connection.Query<string>(query, new { key = key }).ToList();", span="492-492"];
m91_260 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="Worker.cs", label="string query = @''\r\nselect [Value] from Hangfire.List\r\nwhere [Key] = @key\r\norder by [Id] desc''", span="487-490"];
m91_259 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="485-485"];
m91_258 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="Worker.cs", label="key == null", span="485-485"];
m91_262 [cluster="Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetAllItemsFromList(string)", span="483-483"];
m91_21 [cluster="Hangfire.Common.Job.ToString()", file="Worker.cs", label="return String.Format(''{0}.{1}'', Type.ToGenericTypeString(), Method.Name);", span="157-157"];
m91_36 [cluster="Unk.Select", file="Worker.cs", label="Entry Unk.Select", span=""];
m91_102 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219"];
m91_107 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="Worker.cs", label="_connection.Execute(\r\n                @''merge HangFire.JobParameter with (holdlock) as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="224-230"];
m91_105 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="Worker.cs", label="name == null", span="222-222"];
m91_104 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="Worker.cs", label="throw new ArgumentNullException(''id'');", span="221-221"];
m91_106 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="Worker.cs", label="throw new ArgumentNullException(''name'');", span="222-222"];
m91_103 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="Worker.cs", label="id == null", span="221-221"];
m91_108 [cluster="Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="219-219"];
m91_130 [cluster="System.ArgumentException.ArgumentException(string)", file="Worker.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m91_206 [cluster="System.TimeSpan.FromSeconds(double)", file="Worker.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m91_197 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377"];
m91_201 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="Worker.cs", label="var result = _connection.Query<DateTime?>(query, new { key = key }).Single()", span="385-385"];
m91_200 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="Worker.cs", label="string query = @''\r\nselect min([ExpireAt]) from HangFire.[Set]\r\nwhere [Key] = @key''", span="381-383"];
m91_202 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="Worker.cs", label="!result.HasValue", span="386-386"];
m91_204 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="Worker.cs", label="return result.Value - DateTime.UtcNow;", span="388-388"];
m91_199 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="379-379"];
m91_198 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="Worker.cs", label="key == null", span="379-379"];
m91_203 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="Worker.cs", label="return TimeSpan.FromSeconds(-1);", span="386-386"];
m91_205 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetTtl(string)", span="377-377"];
m91_109 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233"];
m91_114 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="Worker.cs", label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="238-241"];
m91_112 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="Worker.cs", label="name == null", span="236-236"];
m91_111 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="Worker.cs", label="throw new ArgumentNullException(''id'');", span="235-235"];
m91_113 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="Worker.cs", label="throw new ArgumentNullException(''name'');", span="236-236"];
m91_110 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="Worker.cs", label="id == null", span="235-235"];
m91_115 [cluster="Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="233-233"];
m91_90 [cluster="Unk.Select", file="Worker.cs", label="Entry Unk.Select", span=""];
m91_97 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="Worker.cs", label="var data = new Dictionary<string, string>(\r\n                JobHelper.FromJson<Dictionary<string, string>>(sqlState.Data),\r\n                StringComparer.OrdinalIgnoreCase)", span="207-209"];
m91_98 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="Worker.cs", label="return new StateData\r\n            {\r\n                Name = sqlState.Name,\r\n                Reason = sqlState.Reason,\r\n                Data = data\r\n            };", span="211-216"];
m91_96 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="Worker.cs", label="Hangfire.Common.Job", span=""];
m91_99 [cluster="Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetStateData(string)", span="191-191"];
m91_184 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352"];
m91_187 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="Worker.cs", label="return _connection.Query<int>(\r\n                ''select count([Key]) from HangFire.[Set] where [Key] = @key'',\r\n                new { key = key }).First();", span="356-358"];
m91_185 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="Worker.cs", label="key == null", span="354-354"];
m91_186 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="354-354"];
m91_188 [cluster="Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetSetCount(string)", span="352-352"];
m91_236 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="Worker.cs", label="Entry Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442"];
m91_240 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="Worker.cs", label="return _connection.Query<long>(query, new { key = key }).Single();", span="450-450"];
m91_239 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="Worker.cs", label="string query = @''\r\nselect count([Id]) from HangFire.List\r\nwhere [Key] = @key''", span="446-448"];
m91_238 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="Worker.cs", label="throw new ArgumentNullException(''key'');", span="444-444"];
m91_237 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="Worker.cs", label="key == null", span="444-444"];
m91_241 [cluster="Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", file="Worker.cs", label="Exit Hangfire.SqlServer.SqlServerConnection.GetListCount(string)", span="442-442"];
m91_263 [file="Worker.cs", label="Hangfire.SqlServer.SqlServerConnection", span=""];
m92_52 [cluster="Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", span="362-362"];
m92_84 [cluster="Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="WorkerManager.feature.cs", label="return expressions.Select(GetExpressionValue).ToArray();", span="364-364"];
m92_85 [cluster="Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.GetExpressionValues(System.Collections.Generic.IEnumerable<System.Linq.Expressions.Expression>)", span="362-362"];
m92_18 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="WorkerManager.feature.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m92_0 [cluster="Hangfire.Common.Job.Job(System.Reflection.MethodInfo)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.Job(System.Reflection.MethodInfo)", span="85-85"];
m92_1 [cluster="Hangfire.Common.Job.Job(System.Reflection.MethodInfo)", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.Job(System.Reflection.MethodInfo)", span="85-85"];
m92_82 [cluster="string.Format(string, object, object)", file="WorkerManager.feature.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m92_6 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="144-144"];
m92_7 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="type == null", span="146-146"];
m92_9 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="method == null", span="147-147"];
m92_11 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="args == null", span="148-148"];
m92_13 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="Validate(type, ''type'', method, ''method'', args.Length, ''args'')", span="150-150"];
m92_14 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="Type = type", span="152-152"];
m92_15 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="Method = method", span="153-153"];
m92_16 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="Args = args", span="154-154"];
m92_8 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="throw new ArgumentNullException(''type'');", span="146-146"];
m92_10 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="throw new ArgumentNullException(''method'');", span="147-147"];
m92_12 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="throw new ArgumentNullException(''args'');", span="148-148"];
m92_17 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, params object[])", span="144-144"];
m92_91 [cluster="Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25"];
m92_32 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="WorkerManager.feature.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m92_81 [cluster="System.Type.IsAssignableFrom(System.Type)", file="WorkerManager.feature.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m92_51 [cluster="object.GetType()", file="WorkerManager.feature.cs", label="Entry object.GetType()", span="0-0"];
m92_53 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="281-281"];
m92_54 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="WorkerManager.feature.cs", label="methodCall == null", span="283-283"];
m92_56 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="WorkerManager.feature.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="285-285"];
m92_55 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="WorkerManager.feature.cs", label="throw new ArgumentNullException(''methodCall'');", span="283-283"];
m92_57 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="WorkerManager.feature.cs", label="callExpression == null", span="286-286"];
m92_59 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="WorkerManager.feature.cs", label="return new Job(\r\n                typeof(TType),\r\n                callExpression.Method,\r\n                GetExpressionValues(callExpression.Arguments));", span="291-294"];
m92_58 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="WorkerManager.feature.cs", label="throw new ArgumentException(''Expression body should be of type `MethodCallExpression`'', ''methodCall'');", span="288-288"];
m92_60 [cluster="Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.FromExpression<TType>(System.Linq.Expressions.Expression<System.Action<TType>>)", span="281-281"];
m92_20 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="178-178"];
m92_21 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", color=red, community=0, file="WorkerManager.feature.cs", label="1: return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="180-182"];
m92_22 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="178-178"];
m92_31 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="WorkerManager.feature.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m92_23 [cluster="Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33"];
m92_49 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="367-367"];
m92_88 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="WorkerManager.feature.cs", label="var constantExpression = expression as ConstantExpression", span="369-369"];
m92_89 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="WorkerManager.feature.cs", label="return constantExpression != null\r\n                ? constantExpression.Value\r\n                : CachedExpressionCompiler.Evaluate(expression);", span="371-373"];
m92_90 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="367-367"];
m92_87 [cluster="Unk.ToArray", file="WorkerManager.feature.cs", label="Entry Unk.ToArray", span=""];
m92_50 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="WorkerManager.feature.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m92_2 [cluster="Hangfire.Common.Job.Job(System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.Job(System.Reflection.MethodInfo, params object[])", span="101-101"];
m92_3 [cluster="Hangfire.Common.Job.Job(System.Reflection.MethodInfo, params object[])", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.Job(System.Reflection.MethodInfo, params object[])", span="101-101"];
m92_80 [cluster="System.NotSupportedException.NotSupportedException(string)", file="WorkerManager.feature.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m92_24 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="192-192"];
m92_29 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="WorkerManager.feature.cs", label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="194-196"];
m92_30 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="192-192"];
m92_28 [cluster="Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38"];
m92_86 [cluster="Unk.Select", file="WorkerManager.feature.cs", label="Entry Unk.Select", span=""];
m92_48 [cluster="System.ArgumentException.ArgumentException(string, string)", file="WorkerManager.feature.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m92_25 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="185-185"];
m92_26 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="WorkerManager.feature.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="187-189"];
m92_27 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="185-185"];
m92_83 [cluster="System.Reflection.MethodBase.GetParameters()", file="WorkerManager.feature.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m92_4 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="122-122"];
m92_5 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="122-122"];
m92_19 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", span="297-297"];
m92_61 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="!method.IsPublic", span="306-306"];
m92_63 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="method.ContainsGenericParameters", span="311-311"];
m92_65 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="method.DeclaringType == null", span="316-316"];
m92_67 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="!method.DeclaringType.IsAssignableFrom(type)", span="321-321"];
m92_68 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="throw new ArgumentException(\r\n                    String.Format(''The type `{0}` must be derived from the `{1}` type.'', method.DeclaringType, type),\r\n                    typeParameterName);", span="323-325"];
m92_69 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="typeof(Task).IsAssignableFrom(method.ReturnType)", span="328-328"];
m92_71 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="var parameters = method.GetParameters()", span="333-333"];
m92_72 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="parameters.Length != argumentCount", span="335-335"];
m92_73 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="throw new ArgumentException(\r\n                    ''Argument count must be equal to method parameter count.'',\r\n                    argumentParameterName);", span="337-339"];
m92_62 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="308-308"];
m92_64 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="throw new NotSupportedException(''Job method can not contain unassigned generic type parameters.'');", span="313-313"];
m92_66 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="318-318"];
m92_70 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="throw new NotSupportedException(''Async methods are not supported. Please make them synchronous before using them in background.'');", span="330-330"];
m92_74 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label=parameters, span="342-342"];
m92_75 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="parameter.IsOut", span="348-348"];
m92_77 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="parameter.ParameterType.IsByRef", span="354-354"];
m92_76 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="350-351"];
m92_78 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="356-357"];
m92_79 [cluster="Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.Validate(System.Type, string, System.Reflection.MethodInfo, string, int, string)", span="297-297"];
m92_33 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="227-227"];
m92_34 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="methodCall == null", span="229-229"];
m92_36 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="231-231"];
m92_35 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="throw new ArgumentNullException(''methodCall'');", span="229-229"];
m92_37 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="callExpression == null", span="232-232"];
m92_40 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="callExpression.Object != null", span="239-239"];
m92_41 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="var objectValue = GetExpressionValue(callExpression.Object)", span="241-241"];
m92_45 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="type = callExpression.Method.DeclaringType", span="251-251"];
m92_46 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="return new Job(\r\n                // ReSharper disable once AssignNullToNotNullAttribute\r\n                type,\r\n                callExpression.Method,\r\n                GetExpressionValues(callExpression.Arguments));", span="254-258"];
m92_38 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="throw new ArgumentException(''Expression body should be of type `MethodCallExpression`'', ''methodCall'');", span="234-234"];
m92_39 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="Type type", span="237-237"];
m92_42 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="objectValue == null", span="242-242"];
m92_44 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="type = objectValue.GetType()", span="247-247"];
m92_43 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="throw new InvalidOperationException(''Expression object should be not null.'');", span="244-244"];
m92_47 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerManager.feature.cs", label="Exit Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="227-227"];
m92_92 [file="WorkerManager.feature.cs", label="Hangfire.Common.Job", span=""];
m93_10 [cluster="RedisClient.cstr", file="WorkerManagerSteps.cs", label="Entry RedisClient.cstr", span=""];
m93_44 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerExceptionFilter(string)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.GivenAServerExceptionFilter(string)", span="82-82"];
m93_45 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerExceptionFilter(string)", file="WorkerManagerSteps.cs", label="_filters.Add(new TestExceptionFilter(name, _exceptionResults))", span="84-84"];
m93_46 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerExceptionFilter(string)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.GivenAServerExceptionFilter(string)", span="82-82"];
m93_5 [cluster="string.Format(string, object, object)", file="WorkerManagerSteps.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m93_11 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", span="42-42"];
m93_12 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", file="WorkerManagerSteps.cs", label="_filters.Add(new TestFilter(name, _serverResults, false, true))", span="44-44"];
m93_13 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", span="42-42"];
m93_102 [cluster="HangFire.Tests.WorkerManagerSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", span="182-182"];
m93_105 [cluster="HangFire.Tests.WorkerManagerSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", color=green, community=0, file="WorkerManagerSteps.cs", label="2: Assert.IsTrue(job.ContainsKey(parameter.Key))", span="187-187"];
m93_103 [cluster="HangFire.Tests.WorkerManagerSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="WorkerManagerSteps.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="184-184"];
m93_104 [cluster="HangFire.Tests.WorkerManagerSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="WorkerManagerSteps.cs", label=_parameters, span="185-185"];
m93_106 [cluster="HangFire.Tests.WorkerManagerSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="WorkerManagerSteps.cs", label="Assert.AreEqual(parameter.Value, JobHelper.FromJson<string>(job[parameter.Key]))", span="188-188"];
m93_107 [cluster="HangFire.Tests.WorkerManagerSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", span="182-182"];
m93_109 [cluster="Unk.GetAllEntriesFromHash", file="WorkerManagerSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m93_63 [cluster="Unk.IsTrue", file="WorkerManagerSteps.cs", label="Entry Unk.IsTrue", span=""];
m93_24 [cluster="Unk.ToDictionary", file="WorkerManagerSteps.cs", label="Entry Unk.ToDictionary", span=""];
m93_47 [cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="16-16"];
m93_108 [cluster="string.Format(string, object)", file="WorkerManagerSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m93_59 [cluster="Unk.Inconclusive", file="WorkerManagerSteps.cs", label="Entry Unk.Inconclusive", span=""];
m93_14 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatThrowsAnException(string)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatThrowsAnException(string)", span="48-48"];
m93_15 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatThrowsAnException(string)", file="WorkerManagerSteps.cs", label="_filters.Add(new TestFilter(name, _serverResults, true))", span="50-50"];
m93_16 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatThrowsAnException(string)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatThrowsAnException(string)", span="48-48"];
m93_111 [cluster="Unk.>", file="WorkerManagerSteps.cs", label="Entry Unk.>", span=""];
m93_85 [cluster="Unk.AreNotEqual", file="WorkerManagerSteps.cs", label="Entry Unk.AreNotEqual", span=""];
m93_86 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="152-152"];
m93_90 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", color=green, community=0, file="WorkerManagerSteps.cs", label="0: var filter = table.Rows[i][''Filter'']", span="158-158"];
m93_89 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="WorkerManagerSteps.cs", label="i < table.RowCount", span="156-156"];
m93_88 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="WorkerManagerSteps.cs", label="var i = 0", span="156-156"];
m93_91 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="WorkerManagerSteps.cs", label="Assert.AreEqual(filter, _exceptionResults[i])", span="159-159"];
m93_87 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="WorkerManagerSteps.cs", label="Assert.AreEqual(table.RowCount, _exceptionResults.Count)", span="154-154"];
m93_92 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="WorkerManagerSteps.cs", label="i++", span="156-156"];
m93_93 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="152-152"];
m93_58 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.JobStorage, HangFire.Server.ServerContext, int)", file="WorkerManagerSteps.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.JobStorage, HangFire.Server.ServerContext, int)", span="30-30"];
m93_81 [cluster="Unk.AreEqual", file="WorkerManagerSteps.cs", label="Entry Unk.AreEqual", span=""];
m93_31 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", span="69-69"];
m93_32 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="WorkerManagerSteps.cs", label="_parameters = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="71-71"];
m93_33 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="WorkerManagerSteps.cs", label="GivenTheServerFilterThatReadsAllOfTheAboveParameters(name)", span="72-72"];
m93_34 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", span="69-69"];
m93_97 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheLastAuthorShouldBeEqualTo(string)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.ThenTheLastAuthorShouldBeEqualTo(string)", span="170-170"];
m93_98 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheLastAuthorShouldBeEqualTo(string)", file="WorkerManagerSteps.cs", label="Assert.AreEqual(value, CustomJob.LastAuthor)", span="172-172"];
m93_99 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheLastAuthorShouldBeEqualTo(string)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.ThenTheLastAuthorShouldBeEqualTo(string)", span="170-170"];
m93_35 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatReadsAllOfTheAboveParameters(string)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatReadsAllOfTheAboveParameters(string)", span="76-76"];
m93_42 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatReadsAllOfTheAboveParameters(string)", file="WorkerManagerSteps.cs", label="_filters.Add(new TestFilter(name, _serverResults, readParameters: _parameters))", span="78-78"];
m93_43 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatReadsAllOfTheAboveParameters(string)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatReadsAllOfTheAboveParameters(string)", span="76-76"];
m93_56 [cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IEnumerable<string>, HangFire.Server.Performing.JobPerformer)", file="WorkerManagerSteps.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IEnumerable<string>, HangFire.Server.Performing.JobPerformer)", span="28-28"];
m93_60 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheJobShouldBePerformed()", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.ThenTheJobShouldBePerformed()", span="109-109"];
m93_61 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheJobShouldBePerformed()", file="WorkerManagerSteps.cs", label="Assert.IsTrue(TestJob.Performed)", span="111-111"];
m93_62 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheJobShouldBePerformed()", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.ThenTheJobShouldBePerformed()", span="109-109"];
m93_6 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerFilter(string)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.GivenAServerFilter(string)", span="36-36"];
m93_73 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", span="133-133"];
m93_77 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", color=green, community=0, file="WorkerManagerSteps.cs", label="0: var method = table.Rows[i][''Method'']", span="139-139"];
m93_76 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="WorkerManagerSteps.cs", label="i < table.RowCount", span="137-137"];
m93_75 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="WorkerManagerSteps.cs", label="var i = 0", span="137-137"];
m93_78 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="WorkerManagerSteps.cs", label="Assert.AreEqual(method, _serverResults[i])", span="140-140"];
m93_74 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="WorkerManagerSteps.cs", label="Assert.AreEqual(table.RowCount, _serverResults.Count)", span="135-135"];
m93_79 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="WorkerManagerSteps.cs", label="i++", span="137-137"];
m93_80 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", span="133-133"];
m93_3 [cluster="string.IsNullOrEmpty(string)", file="WorkerManagerSteps.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m93_57 [cluster="HangFire.Server.Performing.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<object>)", file="WorkerManagerSteps.cs", label="Entry HangFire.Server.Performing.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<object>)", span="34-34"];
m93_48 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", span="88-88"];
m93_49 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", file="WorkerManagerSteps.cs", label="_filters.Add(new TestExceptionFilter(name, _exceptionResults, true))", span="90-90"];
m93_50 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", span="88-88"];
m93_94 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheLastArticleIdShouldBeEqualTo(int)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.ThenTheLastArticleIdShouldBeEqualTo(int)", span="164-164"];
m93_95 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheLastArticleIdShouldBeEqualTo(int)", file="WorkerManagerSteps.cs", label="Assert.AreEqual(value, CustomJob.LastArticleId)", span="166-166"];
m93_96 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheLastArticleIdShouldBeEqualTo(int)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.ThenTheLastArticleIdShouldBeEqualTo(int)", span="164-164"];
m93_39 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="Entry lambda expression", span="71-71"];
m93_0 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="Entry lambda expression", span="8-12"];
m93_1 [cluster="lambda expression", color=red, community=0, file="WorkerManagerSteps.cs", label="1: String.IsNullOrEmpty(Password)\r\n                ? new PooledRedisClientManager(\r\n                    _db, String.Format(''{0}:{1}'', _host, _port)) \r\n                : new PooledRedisClientManager(\r\n                    _db, String.Format(''{0}:{1}@{2}'', _host, _port, Password))", span="8-12"];
m93_2 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="Exit lambda expression", span="8-12"];
m93_28 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="Entry lambda expression", span="62-62"];
m93_36 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="Entry lambda expression", span="71-71"];
m93_30 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="Exit lambda expression", span="62-62"];
m93_29 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="x[''Value'']", span="62-62"];
m93_38 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="Exit lambda expression", span="71-71"];
m93_37 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="x[''Name'']", span="71-71"];
m93_40 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="x[''Value'']", span="71-71"];
m93_41 [cluster="lambda expression", file="WorkerManagerSteps.cs", label="Exit lambda expression", span="71-71"];
m93_70 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheJobShouldBeDisposed()", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.ThenTheJobShouldBeDisposed()", span="126-126"];
m93_71 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheJobShouldBeDisposed()", file="WorkerManagerSteps.cs", label="Assert.IsTrue(TestJob.Disposed)", span="128-128"];
m93_72 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheJobShouldBeDisposed()", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.ThenTheJobShouldBeDisposed()", span="126-126"];
m93_7 [cluster="HangFire.RedisFactory.CreateClient()", file="WorkerManagerSteps.cs", label="Entry HangFire.RedisFactory.CreateClient()", span="50-50"];
m93_8 [cluster="HangFire.RedisFactory.CreateClient()", file="WorkerManagerSteps.cs", label="return new RedisClient(\r\n                Host, \r\n                Port,\r\n                Password,\r\n                Db);", span="52-56"];
m93_4 [cluster="PooledRedisClientManager.cstr", file="WorkerManagerSteps.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m93_9 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="21-21"];
m93_17 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatHandlesAnException(string)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatHandlesAnException(string)", span="54-54"];
m93_18 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatHandlesAnException(string)", file="WorkerManagerSteps.cs", label="_filters.Add(new TestFilter(name, _serverResults, false, false, true))", span="56-56"];
m93_19 [cluster="HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatHandlesAnException(string)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.GivenAServerFilterThatHandlesAnException(string)", span="54-54"];
m93_82 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientFilterWasExecuted()", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.ThenTheClientFilterWasExecuted()", span="145-145"];
m93_83 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientFilterWasExecuted()", file="WorkerManagerSteps.cs", label="Assert.AreNotEqual(0, _exceptionResults.Count)", span="147-147"];
m93_84 [cluster="HangFire.Tests.WorkerManagerSteps.ThenTheClientFilterWasExecuted()", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.ThenTheClientFilterWasExecuted()", span="145-145"];
m93_51 [cluster="HangFire.Tests.WorkerManagerSteps.WhenTheWorkerPerformsTheJob()", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.WhenTheWorkerPerformsTheJob()", span="94-94"];
m93_52 [cluster="HangFire.Tests.WorkerManagerSteps.WhenTheWorkerPerformsTheJob()", file="WorkerManagerSteps.cs", label="var context = new ServerContext(\r\n                ServerSteps.DefaultServerName,\r\n                new [] { QueueSteps.DefaultQueue },\r\n                new JobPerformer(_filters))", span="96-99"];
m93_53 [cluster="HangFire.Tests.WorkerManagerSteps.WhenTheWorkerPerformsTheJob()", file="WorkerManagerSteps.cs", label="var manager = new WorkerManager(Redis.Storage, context, 1)", span="101-101"];
m93_54 [cluster="HangFire.Tests.WorkerManagerSteps.WhenTheWorkerPerformsTheJob()", file="WorkerManagerSteps.cs", label="Assert.Inconclusive()", span="104-104"];
m93_55 [cluster="HangFire.Tests.WorkerManagerSteps.WhenTheWorkerPerformsTheJob()", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.WhenTheWorkerPerformsTheJob()", span="94-94"];
m93_20 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatSetsTheFollowingParameters(string, Table)", file="WorkerManagerSteps.cs", label="Entry HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatSetsTheFollowingParameters(string, Table)", span="60-60"];
m93_21 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatSetsTheFollowingParameters(string, Table)", file="WorkerManagerSteps.cs", label="_parameters = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="62-62"];
m93_22 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatSetsTheFollowingParameters(string, Table)", file="WorkerManagerSteps.cs", label="_filters.Add(\r\n                new TestFilter(name, _serverResults, setOnPreMethodParameters: _parameters))", span="64-65"];
m93_23 [cluster="HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatSetsTheFollowingParameters(string, Table)", file="WorkerManagerSteps.cs", label="Exit HangFire.Tests.WorkerManagerSteps.GivenTheServerFilterThatSetsTheFollowingParameters(string, Table)", span="60-60"];
m93_110 [cluster="Unk.ContainsKey", file="WorkerManagerSteps.cs", label="Entry Unk.ContainsKey", span=""];
m93_112 [file="WorkerManagerSteps.cs", label="HangFire.Tests.WorkerManagerSteps", span=""];
m0_34 -> m0_54  [key=0, style=solid];
m0_34 -> m0_56  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_34 -> m0_57  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m0_34 -> m0_27  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.MethodCallExpression callExpression", style=bold];
m0_34 -> m0_39  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.MethodCallExpression callExpression", style=bold];
m0_34 -> m0_11  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.States.JobState state", style=bold];
m0_34 -> m0_15  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.States.JobState state", style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_59  [key=2, style=dotted];
m0_54 -> m0_57  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_61  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_62  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_60  [key=2, style=dotted];
m0_55 -> m0_57  [color=darkseagreen4, key=1, label=client, style=dashed];
m0_58 -> m0_34  [color=blue, key=0, style=bold];
m0_59 -> m0_63  [key=0, style=solid];
m0_59 -> m0_34  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.MethodCallExpression callExpression", style=bold];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_73  [key=2, style=dotted];
m0_63 -> m0_74  [key=2, style=dotted];
m0_63 -> m0_65  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_75  [key=2, style=dotted];
m0_64 -> m0_70  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m0_64 -> m0_71  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_71  [key=0, style=solid];
m0_65 -> m0_67  [color=darkseagreen4, key=1, label=argument, style=dashed];
m0_65 -> m0_68  [color=darkseagreen4, key=1, label=argument, style=dashed];
m0_65 -> m0_69  [color=darkseagreen4, key=1, label=argument, style=dashed];
m0_70 -> m0_65  [key=0, style=solid];
m0_70 -> m0_79  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_80  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_70  [color=darkseagreen4, key=1, label=value, style=dashed];
m0_66 -> m0_66  [color=darkorchid, key=3, label="Local variable string value", style=bold];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_70  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_76  [key=2, style=dotted];
m0_68 -> m0_77  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_78  [key=2, style=dotted];
m0_72 -> m0_59  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_15  [color=darkorchid, key=3, label="method methodReturn string Schedule", style=bold];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_19  [key=2, style=dotted];
m0_21 -> m0_15  [key=2, style=dotted];
m0_22 -> m0_20  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_15  [color=darkorchid, key=3, label="method methodReturn string Enqueue", style=bold];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_10  [key=2, style=dotted];
m0_13 -> m0_15  [key=2, style=dotted];
m0_14 -> m0_12  [color=blue, key=0, style=bold];
m0_19 -> m0_47  [key=0, style=solid];
m0_19 -> m0_16  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan delay", style=bold];
m0_19 -> m0_20  [color=darkorchid, key=3, label="Parameter variable System.TimeSpan delay", style=bold];
m0_19 -> m0_50  [color=darkorchid, key=3, label="method methodReturn HangFire.Common.States.JobState CreateScheduledState", style=bold];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [key=2, style=dotted];
m0_47 -> m0_50  [key=2, style=dotted];
m0_48 -> m0_19  [color=blue, key=0, style=bold];
m0_10 -> m0_44  [color=red, key=0, style=solid];
m0_44 -> m0_45  [color=red, key=0, style=solid];
m0_44 -> m0_46  [color=red, key=2, style=dotted];
m0_45 -> m0_10  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_50 -> m0_51  [color=red, key=0, style=solid];
m0_51 -> m0_52  [color=red, key=0, style=solid];
m0_51 -> m0_53  [color=red, key=2, style=dotted];
m0_52 -> m0_50  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_11  [color=darkorchid, key=3, label="method methodReturn string Schedule", style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=2, style=dotted];
m0_17 -> m0_11  [key=2, style=dotted];
m0_18 -> m0_16  [color=blue, key=0, style=bold];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_85  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [color=darkseagreen4, key=1, label=constantExpression, style=dashed];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_87  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_85  [key=0, style=solid];
m0_84 -> m0_86  [key=0, style=solid];
m0_86 -> m0_81  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m0_11 -> m0_23  [key=0, style=solid];
m0_11 -> m0_25  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m0_11 -> m0_27  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m0_11 -> m0_30  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m0_11 -> m0_7  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.Expression<System.Action> methodCall", style=bold];
m0_11 -> m0_16  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.Expression<System.Action> methodCall", style=bold];
m0_11 -> m0_10  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.States.JobState state", style=bold];
m0_11 -> m0_19  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.States.JobState state", style=bold];
m0_11 -> m0_34  [color=darkorchid, key=3, label="method methodReturn string Create", style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_30  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_34  [key=2, style=dotted];
m0_24 -> m0_31  [key=0, style=solid];
m0_24 -> m0_32  [key=2, style=dotted];
m0_26 -> m0_31  [key=0, style=solid];
m0_26 -> m0_32  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=0, style=solid];
m0_29 -> m0_33  [key=2, style=dotted];
m0_31 -> m0_11  [color=blue, key=0, style=bold];
m0_15 -> m0_35  [key=0, style=solid];
m0_15 -> m0_37  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m0_15 -> m0_39  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<TJob>>", style=dashed];
m0_15 -> m0_42  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m0_15 -> m0_12  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.Expression<System.Action<TJob>> methodCall", style=bold];
m0_15 -> m0_20  [color=darkorchid, key=3, label="Parameter variable System.Linq.Expressions.Expression<System.Action<TJob>> methodCall", style=bold];
m0_15 -> m0_10  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.States.JobState state", style=bold];
m0_15 -> m0_19  [color=darkorchid, key=3, label="Parameter variable HangFire.Common.States.JobState state", style=bold];
m0_15 -> m0_34  [color=darkorchid, key=3, label="method methodReturn string Create", style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_42  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_34  [key=2, style=dotted];
m0_36 -> m0_43  [key=0, style=solid];
m0_36 -> m0_32  [key=2, style=dotted];
m0_38 -> m0_43  [key=0, style=solid];
m0_38 -> m0_32  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=0, style=solid];
m0_41 -> m0_33  [key=2, style=dotted];
m0_43 -> m0_15  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_11  [color=darkorchid, key=3, label="method methodReturn string Enqueue", style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=2, style=dotted];
m0_8 -> m0_11  [key=2, style=dotted];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m1_622 -> m1_623  [key=0, style=solid];
m1_623 -> m1_66  [key=2, style=dotted];
m1_623 -> m1_624  [key=0, style=solid];
m1_623 -> m1_625  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_624 -> m1_622  [color=blue, key=0, style=bold];
m1_57 -> m1_55  [color=blue, key=0, style=bold];
m1_810 -> m1_811  [key=0, style=solid];
m1_812 -> m1_125  [key=2, style=dotted];
m1_812 -> m1_813  [key=0, style=solid];
m1_812 -> m1_814  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_811 -> m1_812  [key=0, style=solid];
m1_811 -> m1_815  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_813 -> m1_810  [color=blue, key=0, style=bold];
m1_478 -> m1_479  [key=0, style=solid];
m1_479 -> m1_66  [key=2, style=dotted];
m1_479 -> m1_480  [key=0, style=solid];
m1_479 -> m1_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_480 -> m1_478  [color=blue, key=0, style=bold];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_50  [color=blue, key=0, style=bold];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_58  [key=2, style=dotted];
m1_364 -> m1_365  [key=0, style=solid];
m1_365 -> m1_66  [key=2, style=dotted];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_366 -> m1_364  [color=blue, key=0, style=bold];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_52  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_49 -> m1_906  [key=0, style=solid];
m1_49 -> m1_907  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [key=0, style=solid];
m1_50 -> m1_53  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_54  [key=2, style=dotted];
m1_52 -> m1_60  [color=green, key=1, label=queues, style=dashed];
m1_51 -> m1_53  [key=0, style=solid];
m1_51 -> m1_5  [key=2, style=dotted];
m1_51 -> m1_54  [color=green, key=1, label=token, style=dashed];
m1_51 -> m1_60  [color=green, key=1, label=token, style=dashed];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_56  [key=2, style=dotted];
m1_53 -> m1_49  [color=blue, key=0, style=bold];
m1_53 -> m1_54  [color=green, key=0, style=solid];
m1_53 -> m1_57  [key=2, style=dotted];
m1_667 -> m1_668  [key=0, style=solid];
m1_669 -> m1_125  [key=2, style=dotted];
m1_669 -> m1_670  [key=0, style=solid];
m1_669 -> m1_671  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_668 -> m1_669  [key=0, style=solid];
m1_668 -> m1_672  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_670 -> m1_667  [color=blue, key=0, style=bold];
m1_739 -> m1_740  [key=0, style=solid];
m1_740 -> m1_66  [key=2, style=dotted];
m1_740 -> m1_741  [key=0, style=solid];
m1_740 -> m1_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_741 -> m1_739  [color=blue, key=0, style=bold];
m1_864 -> m1_865  [key=0, style=solid];
m1_866 -> m1_125  [key=2, style=dotted];
m1_866 -> m1_867  [key=0, style=solid];
m1_866 -> m1_868  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_865 -> m1_866  [key=0, style=solid];
m1_865 -> m1_869  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_867 -> m1_864  [color=blue, key=0, style=bold];
m1_13 -> m1_11  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_23  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=2, style=dotted];
m1_23 -> m1_7  [key=2, style=dotted];
m1_23 -> m1_23  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m1_23 -> m1_21  [color=blue, key=0, style=bold];
m1_22 -> m1_24  [key=0, style=solid];
m1_22 -> m1_5  [key=2, style=dotted];
m1_22 -> m1_23  [key=0, style=solid];
m1_24 -> m1_20  [color=blue, key=0, style=bold];
m1_271 -> m1_272  [key=0, style=solid];
m1_272 -> m1_66  [key=2, style=dotted];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_273 -> m1_271  [color=blue, key=0, style=bold];
m1_343 -> m1_344  [key=0, style=solid];
m1_345 -> m1_125  [key=2, style=dotted];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_344 -> m1_348  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_344 -> m1_345  [key=0, style=solid];
m1_346 -> m1_343  [color=blue, key=0, style=bold];
m1_304 -> m1_305  [key=0, style=solid];
m1_306 -> m1_125  [key=2, style=dotted];
m1_306 -> m1_307  [key=0, style=solid];
m1_306 -> m1_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_309  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_307 -> m1_304  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [color=green, key=0, style=solid];
m1_64 -> m1_66  [color=green, key=2, style=dotted];
m1_64 -> m1_67  [color=green, key=1, label="lambda expression", style=dashed];
m1_25 -> m1_26  [color=green, key=0, style=solid];
m1_26 -> m1_27  [color=green, key=0, style=solid];
m1_26 -> m1_14  [color=green, key=2, style=dotted];
m1_26 -> m1_29  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_20  [key=2, style=dotted];
m1_27 -> m1_29  [key=0, style=solid];
m1_28 -> m1_25  [color=blue, key=0, style=bold];
m1_28 -> m1_30  [key=0, style=solid];
m1_28 -> m1_5  [key=2, style=dotted];
m1_857 -> m1_858  [key=0, style=solid];
m1_858 -> m1_66  [key=2, style=dotted];
m1_858 -> m1_859  [key=0, style=solid];
m1_858 -> m1_860  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_859 -> m1_857  [color=blue, key=0, style=bold];
m1_19 -> m1_16  [color=blue, key=0, style=bold];
m1_209 -> m1_210  [key=0, style=solid];
m1_210 -> m1_66  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_211 -> m1_209  [color=blue, key=0, style=bold];
m1_883 -> m1_884  [key=0, style=solid];
m1_884 -> m1_66  [key=2, style=dotted];
m1_884 -> m1_885  [key=0, style=solid];
m1_884 -> m1_886  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_885 -> m1_883  [color=blue, key=0, style=bold];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_63  [color=blue, key=0, style=bold];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_68  [key=2, style=dotted];
m1_67 -> m1_65  [color=blue, key=0, style=bold];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_71  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_67 -> m1_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_719 -> m1_720  [key=0, style=solid];
m1_721 -> m1_125  [key=2, style=dotted];
m1_721 -> m1_722  [key=0, style=solid];
m1_721 -> m1_723  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_720 -> m1_721  [key=0, style=solid];
m1_720 -> m1_724  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_722 -> m1_719  [color=blue, key=0, style=bold];
m1_281 -> m1_282  [key=0, style=solid];
m1_283 -> m1_125  [key=2, style=dotted];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_282 -> m1_283  [key=0, style=solid];
m1_282 -> m1_286  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_284 -> m1_281  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_8  [key=2, style=dotted];
m1_3 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2 -> m1_4  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=2, style=dotted];
m1_353 -> m1_354  [key=0, style=solid];
m1_354 -> m1_66  [key=2, style=dotted];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_355 -> m1_353  [color=blue, key=0, style=bold];
m1_430 -> m1_431  [key=0, style=solid];
m1_431 -> m1_66  [key=2, style=dotted];
m1_431 -> m1_432  [key=0, style=solid];
m1_431 -> m1_433  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_432 -> m1_430  [color=blue, key=0, style=bold];
m1_772 -> m1_773  [key=0, style=solid];
m1_774 -> m1_125  [key=2, style=dotted];
m1_774 -> m1_775  [key=0, style=solid];
m1_774 -> m1_776  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_773 -> m1_774  [key=0, style=solid];
m1_773 -> m1_777  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_775 -> m1_772  [color=blue, key=0, style=bold];
m1_239 -> m1_240  [key=0, style=solid];
m1_241 -> m1_125  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_245  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_242 -> m1_239  [color=blue, key=0, style=bold];
m1_658 -> m1_659  [key=0, style=solid];
m1_660 -> m1_125  [key=2, style=dotted];
m1_660 -> m1_661  [key=0, style=solid];
m1_660 -> m1_662  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_659 -> m1_660  [key=0, style=solid];
m1_659 -> m1_663  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_661 -> m1_658  [color=blue, key=0, style=bold];
m1_54 -> m1_55  [color=green, key=0, style=solid];
m1_54 -> m1_58  [color=green, key=2, style=dotted];
m1_54 -> m1_59  [color=green, key=1, label="lambda expression", style=dashed];
m1_847 -> m1_848  [key=0, style=solid];
m1_848 -> m1_66  [key=2, style=dotted];
m1_848 -> m1_849  [key=0, style=solid];
m1_848 -> m1_850  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_849 -> m1_847  [color=blue, key=0, style=bold];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_402 -> m1_403  [key=0, style=solid];
m1_403 -> m1_66  [key=2, style=dotted];
m1_403 -> m1_404  [key=0, style=solid];
m1_403 -> m1_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_404 -> m1_402  [color=blue, key=0, style=bold];
m1_77 -> m1_82  [key=0, style=solid];
m1_77 -> m1_78  [color=green, key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_84  [key=2, style=dotted];
m1_82 -> m1_85  [key=2, style=dotted];
m1_83 -> m1_77  [color=blue, key=0, style=bold];
m1_83 -> m1_80  [color=blue, key=0, style=bold];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=2, style=dotted];
m1_39 -> m1_42  [key=2, style=dotted];
m1_48 -> m1_46  [color=blue, key=0, style=bold];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [key=0, style=solid];
m1_33 -> m1_5  [key=2, style=dotted];
m1_36 -> m1_37  [color=green, key=0, style=solid];
m1_36 -> m1_39  [color=green, key=2, style=dotted];
m1_35 -> m1_36  [color=green, key=0, style=solid];
m1_35 -> m1_24  [key=2, style=dotted];
m1_35 -> m1_31  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_20  [key=2, style=dotted];
m1_37 -> m1_39  [key=0, style=solid];
m1_34 -> m1_32  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_37  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m1_34 -> m1_25  [key=2, style=dotted];
m1_34 -> m1_13  [key=2, style=dotted];
m1_34 -> m1_34  [color=darkseagreen4, key=1, label="System.DateTimeOffset", style=dashed];
m1_38 -> m1_33  [color=blue, key=0, style=bold];
m1_38 -> m1_40  [key=0, style=solid];
m1_38 -> m1_5  [key=2, style=dotted];
m1_326 -> m1_327  [key=0, style=solid];
m1_327 -> m1_66  [key=2, style=dotted];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_328 -> m1_326  [color=blue, key=0, style=bold];
m1_87 -> m1_100  [key=0, style=solid];
m1_87 -> m1_102  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_87 -> m1_103  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_87 -> m1_88  [color=green, key=0, style=solid];
m1_87 -> m1_66  [color=green, key=2, style=dotted];
m1_87 -> m1_89  [color=green, key=1, label="lambda expression", style=dashed];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_102  [key=0, style=solid];
m1_100 -> m1_20  [key=2, style=dotted];
m1_102 -> m1_103  [color=green, key=0, style=solid];
m1_102 -> m1_99  [key=2, style=dotted];
m1_103 -> m1_104  [color=green, key=0, style=solid];
m1_103 -> m1_48  [key=2, style=dotted];
m1_103 -> m1_42  [key=2, style=dotted];
m1_103 -> m1_105  [color=green, key=2, style=dotted];
m1_103 -> m1_106  [color=green, key=2, style=dotted];
m1_101 -> m1_104  [key=0, style=solid];
m1_101 -> m1_5  [key=2, style=dotted];
m1_101 -> m1_98  [color=blue, key=0, style=bold];
m1_104 -> m1_87  [color=blue, key=0, style=bold];
m1_104 -> m1_102  [color=blue, key=0, style=bold];
m1_250 -> m1_251  [key=0, style=solid];
m1_252 -> m1_125  [key=2, style=dotted];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_251 -> m1_252  [key=0, style=solid];
m1_251 -> m1_255  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_253 -> m1_250  [color=blue, key=0, style=bold];
m1_890 -> m1_891  [key=0, style=solid];
m1_892 -> m1_125  [key=2, style=dotted];
m1_892 -> m1_893  [key=0, style=solid];
m1_892 -> m1_894  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_891 -> m1_892  [key=0, style=solid];
m1_891 -> m1_895  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_893 -> m1_890  [color=blue, key=0, style=bold];
m1_566 -> m1_567  [key=0, style=solid];
m1_567 -> m1_66  [key=2, style=dotted];
m1_567 -> m1_568  [key=0, style=solid];
m1_567 -> m1_569  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_568 -> m1_566  [color=blue, key=0, style=bold];
m1_511 -> m1_512  [key=0, style=solid];
m1_512 -> m1_66  [key=2, style=dotted];
m1_512 -> m1_513  [key=0, style=solid];
m1_512 -> m1_514  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_513 -> m1_511  [color=blue, key=0, style=bold];
m1_219 -> m1_220  [key=0, style=solid];
m1_220 -> m1_66  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_221 -> m1_219  [color=blue, key=0, style=bold];
m1_576 -> m1_577  [key=0, style=solid];
m1_577 -> m1_66  [key=2, style=dotted];
m1_577 -> m1_578  [key=0, style=solid];
m1_577 -> m1_579  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_578 -> m1_576  [color=blue, key=0, style=bold];
m1_440 -> m1_441  [key=0, style=solid];
m1_442 -> m1_125  [key=2, style=dotted];
m1_442 -> m1_443  [key=0, style=solid];
m1_442 -> m1_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_441 -> m1_442  [key=0, style=solid];
m1_441 -> m1_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_443 -> m1_440  [color=blue, key=0, style=bold];
m1_583 -> m1_584  [key=0, style=solid];
m1_585 -> m1_125  [key=2, style=dotted];
m1_585 -> m1_586  [key=0, style=solid];
m1_585 -> m1_587  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_584 -> m1_585  [key=0, style=solid];
m1_584 -> m1_588  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_586 -> m1_583  [color=blue, key=0, style=bold];
m1_782 -> m1_783  [key=0, style=solid];
m1_783 -> m1_66  [key=2, style=dotted];
m1_783 -> m1_784  [key=0, style=solid];
m1_783 -> m1_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_784 -> m1_782  [color=blue, key=0, style=bold];
m1_712 -> m1_713  [key=0, style=solid];
m1_713 -> m1_66  [key=2, style=dotted];
m1_713 -> m1_714  [key=0, style=solid];
m1_713 -> m1_715  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_714 -> m1_712  [color=blue, key=0, style=bold];
m1_793 -> m1_794  [key=0, style=solid];
m1_794 -> m1_66  [key=2, style=dotted];
m1_794 -> m1_795  [key=0, style=solid];
m1_794 -> m1_796  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_795 -> m1_793  [color=blue, key=0, style=bold];
m1_78 -> m1_79  [color=green, key=0, style=solid];
m1_78 -> m1_66  [color=green, key=2, style=dotted];
m1_78 -> m1_80  [color=green, key=1, label="lambda expression", style=dashed];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_6  [key=2, style=dotted];
m1_79 -> m1_81  [key=2, style=dotted];
m1_79 -> m1_77  [color=blue, key=0, style=bold];
m1_80 -> m1_78  [color=blue, key=0, style=bold];
m1_80 -> m1_81  [key=0, style=solid];
m1_563 -> m1_564  [key=0, style=solid];
m1_29 -> m1_30  [color=green, key=0, style=solid];
m1_29 -> m1_19  [key=2, style=dotted];
m1_29 -> m1_13  [key=2, style=dotted];
m1_30 -> m1_31  [color=green, key=0, style=solid];
m1_30 -> m1_24  [color=green, key=2, style=dotted];
m1_30 -> m1_32  [color=green, key=2, style=dotted];
m1_30 -> m1_26  [color=blue, key=0, style=bold];
m1_31 -> m1_29  [color=blue, key=0, style=bold];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_34  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_59 -> m1_60  [color=green, key=0, style=solid];
m1_59 -> m1_61  [key=0, style=solid];
m1_60 -> m1_61  [color=green, key=0, style=solid];
m1_60 -> m1_62  [color=green, key=2, style=dotted];
m1_60 -> m1_63  [key=0, style=solid];
m1_60 -> m1_5  [key=2, style=dotted];
m1_61 -> m1_59  [color=blue, key=0, style=bold];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_64  [key=2, style=dotted];
m1_70 -> m1_71  [color=green, key=0, style=solid];
m1_70 -> m1_73  [color=green, key=2, style=dotted];
m1_70 -> m1_5  [key=2, style=dotted];
m1_69 -> m1_70  [color=green, key=0, style=solid];
m1_69 -> m1_7  [key=2, style=dotted];
m1_69 -> m1_71  [key=0, style=solid];
m1_71 -> m1_14  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_71 -> m1_6  [key=2, style=dotted];
m1_89 -> m1_90  [color=green, key=0, style=solid];
m1_89 -> m1_6  [key=2, style=dotted];
m1_89 -> m1_84  [key=2, style=dotted];
m1_90 -> m1_91  [color=green, key=0, style=solid];
m1_90 -> m1_93  [color=green, key=2, style=dotted];
m1_90 -> m1_94  [color=green, key=2, style=dotted];
m1_90 -> m1_88  [color=blue, key=0, style=bold];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_85  [key=2, style=dotted];
m1_98 -> m1_99  [color=green, key=0, style=solid];
m1_98 -> m1_103  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_98 -> m1_84  [color=blue, key=0, style=bold];
m1_99 -> m1_100  [color=green, key=0, style=solid];
m1_99 -> m1_14  [color=green, key=2, style=dotted];
m1_99 -> m1_102  [color=green, key=1, label="lambda expression", style=dashed];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_112 -> m1_113  [color=green, key=0, style=solid];
m1_112 -> m1_20  [color=green, key=2, style=dotted];
m1_111 -> m1_112  [color=green, key=0, style=solid];
m1_111 -> m1_14  [key=2, style=dotted];
m1_111 -> m1_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_113 -> m1_110  [color=blue, key=0, style=bold];
m1_126 -> m1_128  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_131  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_126 -> m1_144  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_128 -> m1_129  [color=green, key=0, style=solid];
m1_128 -> m1_117  [color=green, key=2, style=dotted];
m1_128 -> m1_105  [color=green, key=2, style=dotted];
m1_128 -> m1_149  [color=green, key=2, style=dotted];
m1_128 -> m1_106  [color=green, key=2, style=dotted];
m1_128 -> m1_160  [color=green, key=1, label="lambda expression", style=dashed];
m1_128 -> m1_130  [color=green, key=1, label=jobId, style=dashed];
m1_128 -> m1_132  [color=green, key=1, label=jobId, style=dashed];
m1_128 -> m1_144  [color=green, key=1, label=jobId, style=dashed];
m1_127 -> m1_128  [color=green, key=0, style=solid];
m1_127 -> m1_148  [key=2, style=dotted];
m1_127 -> m1_133  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m1_127 -> m1_142  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m1_127 -> m1_143  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m1_129 -> m1_130  [color=green, key=0, style=solid];
m1_129 -> m1_85  [color=green, key=2, style=dotted];
m1_160 -> m1_161  [color=green, key=0, style=solid];
m1_130 -> m1_131  [color=green, key=0, style=solid];
m1_130 -> m1_150  [color=green, key=2, style=dotted];
m1_132 -> m1_133  [color=green, key=0, style=solid];
m1_132 -> m1_153  [color=green, key=2, style=dotted];
m1_132 -> m1_20  [color=green, key=2, style=dotted];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_151  [key=2, style=dotted];
m1_144 -> m1_159  [key=2, style=dotted];
m1_144 -> m1_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_144 -> m1_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_144 -> m1_146  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m1_131 -> m1_132  [color=green, key=0, style=solid];
m1_131 -> m1_136  [color=green, key=1, label=sqlJob, style=dashed];
m1_131 -> m1_137  [color=green, key=1, label=sqlJob, style=dashed];
m1_131 -> m1_151  [key=2, style=dotted];
m1_131 -> m1_152  [key=2, style=dotted];
m1_131 -> m1_133  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m1_131 -> m1_134  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m1_131 -> m1_135  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m1_131 -> m1_142  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m1_131 -> m1_143  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m1_133 -> m1_20  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_136 -> m1_137  [color=green, key=0, style=solid];
m1_136 -> m1_154  [color=green, key=2, style=dotted];
m1_136 -> m1_138  [color=green, key=1, label=invocationData, style=dashed];
m1_135 -> m1_136  [color=green, key=0, style=solid];
m1_135 -> m1_20  [key=2, style=dotted];
m1_137 -> m1_138  [color=green, key=0, style=solid];
m1_138 -> m1_139  [color=green, key=0, style=solid];
m1_138 -> m1_155  [key=2, style=dotted];
m1_138 -> m1_140  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_138 -> m1_141  [color=darkseagreen4, key=1, label=job, style=dashed];
m1_139 -> m1_140  [color=green, key=0, style=solid];
m1_139 -> m1_20  [color=green, key=2, style=dotted];
m1_140 -> m1_20  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_161 -> m1_162  [color=green, key=0, style=solid];
m1_161 -> m1_121  [color=green, key=2, style=dotted];
m1_162 -> m1_160  [color=blue, key=0, style=bold];
m1_193 -> m1_194  [color=green, key=0, style=solid];
m1_193 -> m1_203  [color=green, key=2, style=dotted];
m1_193 -> m1_204  [color=green, key=2, style=dotted];
m1_193 -> m1_151  [color=green, key=2, style=dotted];
m1_193 -> m1_152  [color=green, key=2, style=dotted];
m1_191 -> m1_193  [color=green, key=1, label=SqlConnection, style=dashed];
m1_191 -> m1_194  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_191 -> m1_192  [key=0, style=solid];
m1_192 -> m1_193  [color=green, key=0, style=solid];
m1_192 -> m1_117  [key=2, style=dotted];
m1_192 -> m1_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_194 -> m1_195  [color=green, key=0, style=solid];
m1_194 -> m1_205  [color=green, key=2, style=dotted];
m1_194 -> m1_178  [color=green, key=2, style=dotted];
m1_194 -> m1_196  [color=green, key=1, label=result, style=dashed];
m1_194 -> m1_197  [color=green, key=1, label=result, style=dashed];
m1_194 -> m1_198  [color=green, key=1, label=result, style=dashed];
m1_194 -> m1_199  [color=green, key=1, label=result, style=dashed];
m1_194 -> m1_200  [color=green, key=1, label=result, style=dashed];
m1_194 -> m1_201  [color=green, key=1, label=result, style=dashed];
m1_195 -> m1_85  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_196 -> m1_85  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_197 -> m1_20  [key=2, style=dotted];
m1_197 -> m1_198  [key=0, style=solid];
m1_198 -> m1_20  [key=2, style=dotted];
m1_198 -> m1_199  [key=0, style=solid];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_186  [key=2, style=dotted];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_157  [key=2, style=dotted];
m1_200 -> m1_158  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_157  [key=2, style=dotted];
m1_201 -> m1_158  [key=2, style=dotted];
m1_12 -> m1_14  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_15  [key=2, style=dotted];
m1_12 -> m1_8  [color=blue, key=0, style=bold];
m1_173 -> m1_14  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_213 -> m1_14  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_264 -> m1_14  [key=2, style=dotted];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_275 -> m1_14  [key=2, style=dotted];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_319 -> m1_14  [key=2, style=dotted];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_330 -> m1_14  [key=2, style=dotted];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_348 -> m1_14  [key=2, style=dotted];
m1_348 -> m1_152  [key=2, style=dotted];
m1_348 -> m1_349  [key=0, style=solid];
m1_357 -> m1_14  [key=2, style=dotted];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_368 -> m1_14  [key=2, style=dotted];
m1_368 -> m1_369  [key=0, style=solid];
m1_368 -> m1_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_394 -> m1_14  [key=2, style=dotted];
m1_394 -> m1_395  [key=0, style=solid];
m1_394 -> m1_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_406 -> m1_14  [key=2, style=dotted];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_434 -> m1_14  [key=2, style=dotted];
m1_434 -> m1_435  [key=0, style=solid];
m1_434 -> m1_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_455 -> m1_14  [key=2, style=dotted];
m1_455 -> m1_456  [key=0, style=solid];
m1_455 -> m1_457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_482 -> m1_14  [key=2, style=dotted];
m1_482 -> m1_483  [key=0, style=solid];
m1_482 -> m1_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_505 -> m1_14  [key=2, style=dotted];
m1_505 -> m1_506  [key=0, style=solid];
m1_505 -> m1_507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_534 -> m1_14  [key=2, style=dotted];
m1_534 -> m1_535  [key=0, style=solid];
m1_534 -> m1_537  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_545 -> m1_14  [key=2, style=dotted];
m1_545 -> m1_546  [key=0, style=solid];
m1_545 -> m1_548  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_570 -> m1_14  [key=2, style=dotted];
m1_570 -> m1_571  [key=0, style=solid];
m1_570 -> m1_572  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_599 -> m1_14  [key=2, style=dotted];
m1_599 -> m1_600  [key=0, style=solid];
m1_599 -> m1_601  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_626 -> m1_14  [key=2, style=dotted];
m1_626 -> m1_627  [key=0, style=solid];
m1_626 -> m1_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_645 -> m1_14  [key=2, style=dotted];
m1_645 -> m1_646  [key=0, style=solid];
m1_645 -> m1_647  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_680 -> m1_14  [key=2, style=dotted];
m1_680 -> m1_681  [key=0, style=solid];
m1_680 -> m1_682  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_706 -> m1_14  [key=2, style=dotted];
m1_706 -> m1_707  [key=0, style=solid];
m1_706 -> m1_708  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_733 -> m1_14  [key=2, style=dotted];
m1_733 -> m1_734  [key=0, style=solid];
m1_733 -> m1_735  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_759 -> m1_14  [key=2, style=dotted];
m1_759 -> m1_760  [key=0, style=solid];
m1_759 -> m1_761  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_786 -> m1_14  [key=2, style=dotted];
m1_786 -> m1_787  [key=0, style=solid];
m1_786 -> m1_789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_797 -> m1_14  [key=2, style=dotted];
m1_797 -> m1_798  [key=0, style=solid];
m1_797 -> m1_800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_823 -> m1_14  [key=2, style=dotted];
m1_823 -> m1_824  [key=0, style=solid];
m1_823 -> m1_826  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_851 -> m1_14  [key=2, style=dotted];
m1_851 -> m1_852  [key=0, style=solid];
m1_851 -> m1_853  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_877 -> m1_14  [key=2, style=dotted];
m1_877 -> m1_878  [key=0, style=solid];
m1_877 -> m1_879  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_134 -> m1_20  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_141 -> m1_20  [key=2, style=dotted];
m1_141 -> m1_142  [key=0, style=solid];
m1_145 -> m1_20  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_146 -> m1_20  [key=2, style=dotted];
m1_146 -> m1_147  [key=0, style=solid];
m1_235 -> m1_20  [key=2, style=dotted];
m1_235 -> m1_236  [key=0, style=solid];
m1_236 -> m1_20  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_237 -> m1_20  [key=2, style=dotted];
m1_237 -> m1_238  [key=0, style=solid];
m1_248 -> m1_20  [key=2, style=dotted];
m1_248 -> m1_249  [key=0, style=solid];
m1_265 -> m1_20  [key=2, style=dotted];
m1_265 -> m1_266  [key=0, style=solid];
m1_276 -> m1_20  [key=2, style=dotted];
m1_276 -> m1_277  [key=0, style=solid];
m1_290 -> m1_20  [key=2, style=dotted];
m1_290 -> m1_291  [key=0, style=solid];
m1_302 -> m1_20  [key=2, style=dotted];
m1_302 -> m1_303  [key=0, style=solid];
m1_313 -> m1_20  [key=2, style=dotted];
m1_313 -> m1_314  [key=0, style=solid];
m1_320 -> m1_20  [key=2, style=dotted];
m1_320 -> m1_321  [key=0, style=solid];
m1_331 -> m1_20  [key=2, style=dotted];
m1_331 -> m1_332  [key=0, style=solid];
m1_350 -> m1_20  [key=2, style=dotted];
m1_350 -> m1_351  [key=0, style=solid];
m1_358 -> m1_20  [key=2, style=dotted];
m1_358 -> m1_359  [key=0, style=solid];
m1_387 -> m1_20  [key=2, style=dotted];
m1_387 -> m1_388  [key=0, style=solid];
m1_395 -> m1_20  [key=2, style=dotted];
m1_395 -> m1_396  [key=0, style=solid];
m1_407 -> m1_20  [key=2, style=dotted];
m1_407 -> m1_408  [key=0, style=solid];
m1_419 -> m1_20  [key=2, style=dotted];
m1_419 -> m1_420  [key=0, style=solid];
m1_425 -> m1_20  [key=2, style=dotted];
m1_425 -> m1_426  [key=0, style=solid];
m1_470 -> m1_20  [key=2, style=dotted];
m1_470 -> m1_471  [key=0, style=solid];
m1_497 -> m1_20  [key=2, style=dotted];
m1_497 -> m1_498  [key=0, style=solid];
m1_517 -> m1_20  [key=2, style=dotted];
m1_517 -> m1_518  [key=0, style=solid];
m1_526 -> m1_20  [key=2, style=dotted];
m1_526 -> m1_527  [key=0, style=solid];
m1_535 -> m1_20  [key=2, style=dotted];
m1_535 -> m1_536  [key=0, style=solid];
m1_546 -> m1_20  [key=2, style=dotted];
m1_546 -> m1_547  [key=0, style=solid];
m1_557 -> m1_20  [key=2, style=dotted];
m1_557 -> m1_558  [key=0, style=solid];
m1_558 -> m1_20  [key=2, style=dotted];
m1_558 -> m1_559  [key=0, style=solid];
m1_591 -> m1_20  [key=2, style=dotted];
m1_591 -> m1_592  [key=0, style=solid];
m1_592 -> m1_20  [key=2, style=dotted];
m1_592 -> m1_593  [key=0, style=solid];
m1_593 -> m1_20  [key=2, style=dotted];
m1_593 -> m1_594  [key=0, style=solid];
m1_610 -> m1_20  [key=2, style=dotted];
m1_610 -> m1_611  [key=0, style=solid];
m1_619 -> m1_20  [key=2, style=dotted];
m1_619 -> m1_620  [key=0, style=solid];
m1_639 -> m1_20  [key=2, style=dotted];
m1_639 -> m1_640  [key=0, style=solid];
m1_656 -> m1_20  [key=2, style=dotted];
m1_656 -> m1_657  [key=0, style=solid];
m1_665 -> m1_20  [key=2, style=dotted];
m1_665 -> m1_666  [key=0, style=solid];
m1_674 -> m1_20  [key=2, style=dotted];
m1_674 -> m1_675  [key=0, style=solid];
m1_691 -> m1_20  [key=2, style=dotted];
m1_691 -> m1_692  [key=0, style=solid];
m1_700 -> m1_20  [key=2, style=dotted];
m1_700 -> m1_701  [key=0, style=solid];
m1_744 -> m1_20  [key=2, style=dotted];
m1_744 -> m1_745  [key=0, style=solid];
m1_753 -> m1_20  [key=2, style=dotted];
m1_753 -> m1_754  [key=0, style=solid];
m1_787 -> m1_20  [key=2, style=dotted];
m1_787 -> m1_788  [key=0, style=solid];
m1_798 -> m1_20  [key=2, style=dotted];
m1_798 -> m1_799  [key=0, style=solid];
m1_817 -> m1_20  [key=2, style=dotted];
m1_817 -> m1_818  [key=0, style=solid];
m1_824 -> m1_20  [key=2, style=dotted];
m1_824 -> m1_825  [key=0, style=solid];
m1_845 -> m1_20  [key=2, style=dotted];
m1_845 -> m1_846  [key=0, style=solid];
m1_871 -> m1_20  [key=2, style=dotted];
m1_871 -> m1_872  [key=0, style=solid];
m1_72 -> m1_67  [color=blue, key=0, style=bold];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_54  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_71  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_68 -> m1_56  [key=2, style=dotted];
m1_68 -> m1_75  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_68 -> m1_72  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_75 -> m1_57  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_6  [key=2, style=dotted];
m1_75 -> m1_77  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_84  [key=2, style=dotted];
m1_81 -> m1_85  [key=0, style=solid];
m1_92 -> m1_89  [color=blue, key=0, style=bold];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_6  [key=2, style=dotted];
m1_92 -> m1_87  [key=2, style=dotted];
m1_231 -> m1_105  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_244 -> m1_105  [key=2, style=dotted];
m1_244 -> m1_245  [key=0, style=solid];
m1_538 -> m1_105  [key=2, style=dotted];
m1_538 -> m1_539  [key=0, style=solid];
m1_538 -> m1_540  [key=2, style=dotted];
m1_555 -> m1_105  [key=2, style=dotted];
m1_555 -> m1_556  [key=0, style=solid];
m1_555 -> m1_540  [key=2, style=dotted];
m1_115 -> m1_106  [key=2, style=dotted];
m1_115 -> m1_117  [key=2, style=dotted];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_114 -> m1_115  [key=0, style=solid];
m1_147 -> m1_126  [color=blue, key=0, style=bold];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_156  [key=2, style=dotted];
m1_142 -> m1_157  [key=2, style=dotted];
m1_142 -> m1_158  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_156  [key=2, style=dotted];
m1_143 -> m1_157  [key=2, style=dotted];
m1_143 -> m1_158  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_166 -> m1_167  [key=0, style=solid];
m1_234 -> m1_85  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_247 -> m1_85  [key=2, style=dotted];
m1_247 -> m1_248  [key=0, style=solid];
m1_257 -> m1_85  [key=2, style=dotted];
m1_257 -> m1_258  [key=0, style=solid];
m1_421 -> m1_85  [key=2, style=dotted];
m1_421 -> m1_422  [key=0, style=solid];
m1_516 -> m1_85  [key=2, style=dotted];
m1_516 -> m1_517  [key=0, style=solid];
m1_590 -> m1_85  [key=2, style=dotted];
m1_590 -> m1_591  [key=0, style=solid];
m1_287 -> m1_153  [key=2, style=dotted];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_289  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m1_298 -> m1_153  [key=2, style=dotted];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_300  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m1_298 -> m1_301  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m1_310 -> m1_153  [key=2, style=dotted];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_312  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m1_349 -> m1_153  [key=2, style=dotted];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_352  [key=2, style=dotted];
m1_119 -> m1_121  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_207 -> m1_121  [key=2, style=dotted];
m1_207 -> m1_208  [key=0, style=solid];
m1_202 -> m1_191  [color=blue, key=0, style=bold];
m1_206 -> m1_207  [key=0, style=solid];
m1_232 -> m1_204  [key=2, style=dotted];
m1_232 -> m1_151  [key=2, style=dotted];
m1_232 -> m1_152  [key=2, style=dotted];
m1_232 -> m1_233  [key=0, style=solid];
m1_245 -> m1_204  [key=2, style=dotted];
m1_245 -> m1_151  [key=2, style=dotted];
m1_245 -> m1_152  [key=2, style=dotted];
m1_245 -> m1_246  [key=0, style=solid];
m1_255 -> m1_204  [key=2, style=dotted];
m1_255 -> m1_151  [key=2, style=dotted];
m1_255 -> m1_152  [key=2, style=dotted];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_259  [key=2, style=dotted];
m1_286 -> m1_151  [key=2, style=dotted];
m1_286 -> m1_152  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_289 -> m1_151  [key=2, style=dotted];
m1_289 -> m1_152  [key=2, style=dotted];
m1_289 -> m1_290  [key=0, style=solid];
m1_297 -> m1_151  [key=2, style=dotted];
m1_297 -> m1_152  [key=2, style=dotted];
m1_297 -> m1_298  [key=0, style=solid];
m1_301 -> m1_151  [key=2, style=dotted];
m1_301 -> m1_152  [key=2, style=dotted];
m1_301 -> m1_302  [key=0, style=solid];
m1_309 -> m1_151  [key=2, style=dotted];
m1_309 -> m1_152  [key=2, style=dotted];
m1_309 -> m1_310  [key=0, style=solid];
m1_312 -> m1_151  [key=2, style=dotted];
m1_312 -> m1_152  [key=2, style=dotted];
m1_312 -> m1_313  [key=0, style=solid];
m1_418 -> m1_151  [key=2, style=dotted];
m1_418 -> m1_152  [key=2, style=dotted];
m1_418 -> m1_419  [key=0, style=solid];
m1_418 -> m1_421  [color=darkseagreen4, key=1, label=server, style=dashed];
m1_418 -> m1_420  [color=darkseagreen4, key=1, label=server, style=dashed];
m1_424 -> m1_151  [key=2, style=dotted];
m1_424 -> m1_152  [key=2, style=dotted];
m1_424 -> m1_425  [key=0, style=solid];
m1_424 -> m1_426  [color=darkseagreen4, key=1, label=sameServer, style=dashed];
m1_447 -> m1_151  [key=2, style=dotted];
m1_447 -> m1_152  [key=2, style=dotted];
m1_447 -> m1_448  [key=0, style=solid];
m1_468 -> m1_151  [key=2, style=dotted];
m1_468 -> m1_470  [color=darkseagreen4, key=1, label=servers, style=dashed];
m1_468 -> m1_159  [key=2, style=dotted];
m1_468 -> m1_469  [key=0, style=solid];
m1_468 -> m1_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_468 -> m1_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_496 -> m1_151  [key=2, style=dotted];
m1_496 -> m1_152  [key=2, style=dotted];
m1_496 -> m1_497  [key=0, style=solid];
m1_556 -> m1_151  [key=2, style=dotted];
m1_556 -> m1_557  [key=0, style=solid];
m1_556 -> m1_558  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_556 -> m1_159  [key=2, style=dotted];
m1_556 -> m1_560  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_556 -> m1_563  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_233 -> m1_205  [key=2, style=dotted];
m1_233 -> m1_235  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_233 -> m1_236  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_233 -> m1_237  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_218  [key=2, style=dotted];
m1_246 -> m1_205  [key=2, style=dotted];
m1_246 -> m1_248  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_246 -> m1_247  [key=0, style=solid];
m1_246 -> m1_218  [key=2, style=dotted];
m1_256 -> m1_205  [key=2, style=dotted];
m1_256 -> m1_178  [key=2, style=dotted];
m1_256 -> m1_257  [key=0, style=solid];
m1_176 -> m1_178  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_183 -> m1_178  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_11 -> m1_12  [color=red, key=0, style=solid];
m1_11 -> m1_6  [color=red, key=2, style=dotted];
m1_11 -> m1_13  [color=red, key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_174 -> m1_172  [color=blue, key=0, style=bold];
m1_175 -> m1_176  [key=0, style=solid];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_214 -> m1_212  [color=blue, key=0, style=bold];
m1_215 -> m1_216  [key=0, style=solid];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_267 -> m1_268  [key=0, style=solid];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_278 -> m1_279  [key=0, style=solid];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_322 -> m1_323  [key=0, style=solid];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_333 -> m1_334  [key=0, style=solid];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_349  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_356 -> m1_357  [key=0, style=solid];
m1_356 -> m1_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_360 -> m1_361  [key=0, style=solid];
m1_367 -> m1_368  [key=0, style=solid];
m1_367 -> m1_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_369 -> m1_367  [color=blue, key=0, style=bold];
m1_370 -> m1_371  [key=0, style=solid];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_397 -> m1_398  [key=0, style=solid];
m1_405 -> m1_406  [key=0, style=solid];
m1_405 -> m1_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_409 -> m1_410  [key=0, style=solid];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_435 -> m1_433  [color=blue, key=0, style=bold];
m1_436 -> m1_437  [key=0, style=solid];
m1_454 -> m1_455  [key=0, style=solid];
m1_454 -> m1_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_456 -> m1_454  [color=blue, key=0, style=bold];
m1_457 -> m1_458  [key=0, style=solid];
m1_481 -> m1_482  [key=0, style=solid];
m1_481 -> m1_485  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_483 -> m1_481  [color=blue, key=0, style=bold];
m1_484 -> m1_485  [key=0, style=solid];
m1_504 -> m1_505  [key=0, style=solid];
m1_504 -> m1_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_506 -> m1_504  [color=blue, key=0, style=bold];
m1_507 -> m1_508  [key=0, style=solid];
m1_533 -> m1_534  [key=0, style=solid];
m1_533 -> m1_538  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_537 -> m1_538  [key=0, style=solid];
m1_544 -> m1_545  [key=0, style=solid];
m1_544 -> m1_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_548 -> m1_549  [key=0, style=solid];
m1_569 -> m1_570  [key=0, style=solid];
m1_569 -> m1_573  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_571 -> m1_569  [color=blue, key=0, style=bold];
m1_572 -> m1_573  [key=0, style=solid];
m1_598 -> m1_599  [key=0, style=solid];
m1_598 -> m1_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_600 -> m1_598  [color=blue, key=0, style=bold];
m1_601 -> m1_602  [key=0, style=solid];
m1_625 -> m1_626  [key=0, style=solid];
m1_625 -> m1_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_627 -> m1_625  [color=blue, key=0, style=bold];
m1_628 -> m1_629  [key=0, style=solid];
m1_644 -> m1_645  [key=0, style=solid];
m1_644 -> m1_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_646 -> m1_644  [color=blue, key=0, style=bold];
m1_647 -> m1_648  [key=0, style=solid];
m1_679 -> m1_680  [key=0, style=solid];
m1_679 -> m1_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_681 -> m1_679  [color=blue, key=0, style=bold];
m1_682 -> m1_683  [key=0, style=solid];
m1_705 -> m1_706  [key=0, style=solid];
m1_705 -> m1_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_707 -> m1_705  [color=blue, key=0, style=bold];
m1_708 -> m1_709  [key=0, style=solid];
m1_732 -> m1_733  [key=0, style=solid];
m1_732 -> m1_736  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_734 -> m1_732  [color=blue, key=0, style=bold];
m1_735 -> m1_736  [key=0, style=solid];
m1_758 -> m1_759  [key=0, style=solid];
m1_758 -> m1_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_760 -> m1_758  [color=blue, key=0, style=bold];
m1_761 -> m1_762  [key=0, style=solid];
m1_785 -> m1_786  [key=0, style=solid];
m1_785 -> m1_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_789 -> m1_790  [key=0, style=solid];
m1_796 -> m1_797  [key=0, style=solid];
m1_796 -> m1_801  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_800 -> m1_801  [key=0, style=solid];
m1_822 -> m1_823  [key=0, style=solid];
m1_822 -> m1_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_826 -> m1_827  [key=0, style=solid];
m1_850 -> m1_851  [key=0, style=solid];
m1_850 -> m1_854  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_852 -> m1_850  [color=blue, key=0, style=bold];
m1_853 -> m1_854  [key=0, style=solid];
m1_876 -> m1_877  [key=0, style=solid];
m1_876 -> m1_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_878 -> m1_876  [color=blue, key=0, style=bold];
m1_879 -> m1_880  [key=0, style=solid];
m1_238 -> m1_230  [color=blue, key=0, style=bold];
m1_249 -> m1_243  [color=blue, key=0, style=bold];
m1_266 -> m1_263  [color=blue, key=0, style=bold];
m1_277 -> m1_274  [color=blue, key=0, style=bold];
m1_291 -> m1_285  [color=blue, key=0, style=bold];
m1_303 -> m1_296  [color=blue, key=0, style=bold];
m1_314 -> m1_308  [color=blue, key=0, style=bold];
m1_321 -> m1_318  [color=blue, key=0, style=bold];
m1_332 -> m1_329  [color=blue, key=0, style=bold];
m1_351 -> m1_347  [color=blue, key=0, style=bold];
m1_359 -> m1_356  [color=blue, key=0, style=bold];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_363  [key=2, style=dotted];
m1_388 -> m1_384  [color=blue, key=0, style=bold];
m1_396 -> m1_393  [color=blue, key=0, style=bold];
m1_408 -> m1_405  [color=blue, key=0, style=bold];
m1_420 -> m1_421  [key=0, style=solid];
m1_420 -> m1_158  [key=2, style=dotted];
m1_420 -> m1_428  [key=2, style=dotted];
m1_426 -> m1_427  [key=0, style=solid];
m1_426 -> m1_429  [key=2, style=dotted];
m1_469 -> m1_470  [key=0, style=solid];
m1_469 -> m1_450  [key=2, style=dotted];
m1_471 -> m1_465  [color=blue, key=0, style=bold];
m1_498 -> m1_493  [color=blue, key=0, style=bold];
m1_515 -> m1_517  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_515 -> m1_516  [key=0, style=solid];
m1_515 -> m1_510  [key=2, style=dotted];
m1_518 -> m1_514  [color=blue, key=0, style=bold];
m1_525 -> m1_526  [key=0, style=solid];
m1_525 -> m1_510  [key=2, style=dotted];
m1_525 -> m1_527  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_525 -> m1_528  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_527 -> m1_528  [key=0, style=solid];
m1_527 -> m1_429  [key=2, style=dotted];
m1_536 -> m1_533  [color=blue, key=0, style=bold];
m1_547 -> m1_544  [color=blue, key=0, style=bold];
m1_559 -> m1_554  [color=blue, key=0, style=bold];
m1_589 -> m1_591  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_589 -> m1_592  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_589 -> m1_593  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_589 -> m1_590  [key=0, style=solid];
m1_589 -> m1_575  [key=2, style=dotted];
m1_594 -> m1_587  [color=blue, key=0, style=bold];
m1_609 -> m1_610  [key=0, style=solid];
m1_609 -> m1_604  [key=2, style=dotted];
m1_611 -> m1_608  [color=blue, key=0, style=bold];
m1_618 -> m1_619  [key=0, style=solid];
m1_618 -> m1_604  [key=2, style=dotted];
m1_620 -> m1_616  [color=blue, key=0, style=bold];
m1_638 -> m1_639  [key=0, style=solid];
m1_638 -> m1_631  [key=2, style=dotted];
m1_640 -> m1_636  [color=blue, key=0, style=bold];
m1_655 -> m1_656  [key=0, style=solid];
m1_655 -> m1_650  [key=2, style=dotted];
m1_657 -> m1_654  [color=blue, key=0, style=bold];
m1_664 -> m1_665  [key=0, style=solid];
m1_664 -> m1_650  [key=2, style=dotted];
m1_666 -> m1_662  [color=blue, key=0, style=bold];
m1_673 -> m1_674  [key=0, style=solid];
m1_673 -> m1_650  [key=2, style=dotted];
m1_675 -> m1_671  [color=blue, key=0, style=bold];
m1_690 -> m1_691  [key=0, style=solid];
m1_690 -> m1_685  [key=2, style=dotted];
m1_692 -> m1_689  [color=blue, key=0, style=bold];
m1_699 -> m1_700  [key=0, style=solid];
m1_699 -> m1_685  [key=2, style=dotted];
m1_701 -> m1_697  [color=blue, key=0, style=bold];
m1_743 -> m1_744  [key=0, style=solid];
m1_743 -> m1_738  [key=2, style=dotted];
m1_745 -> m1_742  [color=blue, key=0, style=bold];
m1_752 -> m1_753  [key=0, style=solid];
m1_752 -> m1_738  [key=2, style=dotted];
m1_754 -> m1_750  [color=blue, key=0, style=bold];
m1_788 -> m1_785  [color=blue, key=0, style=bold];
m1_799 -> m1_796  [color=blue, key=0, style=bold];
m1_816 -> m1_817  [key=0, style=solid];
m1_816 -> m1_792  [key=2, style=dotted];
m1_818 -> m1_814  [color=blue, key=0, style=bold];
m1_825 -> m1_822  [color=blue, key=0, style=bold];
m1_844 -> m1_845  [key=0, style=solid];
m1_844 -> m1_829  [key=2, style=dotted];
m1_846 -> m1_842  [color=blue, key=0, style=bold];
m1_870 -> m1_871  [key=0, style=solid];
m1_870 -> m1_856  [key=2, style=dotted];
m1_872 -> m1_868  [color=blue, key=0, style=bold];
m1_182 -> m1_183  [key=0, style=solid];
m1_222 -> m1_223  [key=0, style=solid];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_232  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_230 -> m1_233  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_243 -> m1_244  [key=0, style=solid];
m1_243 -> m1_245  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_243 -> m1_246  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_285 -> m1_286  [key=0, style=solid];
m1_285 -> m1_289  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_285 -> m1_288  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_301  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_296 -> m1_299  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_296 -> m1_300  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_308 -> m1_309  [key=0, style=solid];
m1_308 -> m1_312  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_308 -> m1_311  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_339 -> m1_340  [key=0, style=solid];
m1_376 -> m1_377  [key=0, style=solid];
m1_384 -> m1_386  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_384 -> m1_385  [key=0, style=solid];
m1_415 -> m1_418  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_415 -> m1_424  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_415 -> m1_416  [key=0, style=solid];
m1_415 -> m1_417  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_415 -> m1_423  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_444 -> m1_447  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_444 -> m1_445  [key=0, style=solid];
m1_444 -> m1_446  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_465 -> m1_468  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_465 -> m1_466  [key=0, style=solid];
m1_465 -> m1_467  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_493 -> m1_496  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_493 -> m1_494  [key=0, style=solid];
m1_493 -> m1_495  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_514 -> m1_515  [key=0, style=solid];
m1_523 -> m1_525  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_523 -> m1_524  [key=0, style=solid];
m1_554 -> m1_555  [key=0, style=solid];
m1_554 -> m1_556  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m1_579 -> m1_580  [key=0, style=solid];
m1_587 -> m1_589  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_587 -> m1_588  [key=0, style=solid];
m1_608 -> m1_609  [key=0, style=solid];
m1_616 -> m1_618  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_616 -> m1_617  [key=0, style=solid];
m1_636 -> m1_638  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_636 -> m1_637  [key=0, style=solid];
m1_654 -> m1_655  [key=0, style=solid];
m1_662 -> m1_664  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_662 -> m1_663  [key=0, style=solid];
m1_671 -> m1_673  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_671 -> m1_672  [key=0, style=solid];
m1_689 -> m1_690  [key=0, style=solid];
m1_697 -> m1_699  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_697 -> m1_698  [key=0, style=solid];
m1_715 -> m1_716  [key=0, style=solid];
m1_723 -> m1_724  [key=0, style=solid];
m1_723 -> m1_725  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_742 -> m1_743  [key=0, style=solid];
m1_750 -> m1_752  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_750 -> m1_751  [key=0, style=solid];
m1_768 -> m1_769  [key=0, style=solid];
m1_776 -> m1_777  [key=0, style=solid];
m1_776 -> m1_778  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_806 -> m1_807  [key=0, style=solid];
m1_814 -> m1_816  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_814 -> m1_815  [key=0, style=solid];
m1_833 -> m1_834  [key=0, style=solid];
m1_842 -> m1_844  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_842 -> m1_843  [key=0, style=solid];
m1_860 -> m1_861  [key=0, style=solid];
m1_868 -> m1_870  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_868 -> m1_869  [key=0, style=solid];
m1_886 -> m1_887  [key=0, style=solid];
m1_894 -> m1_895  [key=0, style=solid];
m1_894 -> m1_896  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_76 -> m1_74  [color=blue, key=0, style=bold];
m1_539 -> m1_537  [color=blue, key=0, style=bold];
m1_116 -> m1_114  [color=blue, key=0, style=bold];
m1_118 -> m1_119  [key=0, style=solid];
m1_165 -> m1_163  [color=blue, key=0, style=bold];
m1_164 -> m1_165  [key=0, style=solid];
m1_168 -> m1_166  [color=blue, key=0, style=bold];
m1_167 -> m1_168  [key=0, style=solid];
m1_258 -> m1_254  [color=blue, key=0, style=bold];
m1_422 -> m1_423  [key=0, style=solid];
m1_422 -> m1_400  [key=2, style=dotted];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_270  [key=2, style=dotted];
m1_299 -> m1_300  [key=0, style=solid];
m1_299 -> m1_270  [key=2, style=dotted];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_270  [key=2, style=dotted];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_270  [key=2, style=dotted];
m1_120 -> m1_118  [color=blue, key=0, style=bold];
m1_208 -> m1_206  [color=blue, key=0, style=bold];
m1_417 -> m1_418  [key=0, style=solid];
m1_417 -> m1_401  [key=2, style=dotted];
m1_423 -> m1_424  [key=0, style=solid];
m1_423 -> m1_401  [key=2, style=dotted];
m1_446 -> m1_447  [key=0, style=solid];
m1_446 -> m1_439  [key=2, style=dotted];
m1_448 -> m1_449  [key=0, style=solid];
m1_448 -> m1_450  [key=2, style=dotted];
m1_467 -> m1_468  [key=0, style=solid];
m1_467 -> m1_460  [key=2, style=dotted];
m1_472 -> m1_473  [key=0, style=solid];
m1_475 -> m1_476  [key=0, style=solid];
m1_495 -> m1_496  [key=0, style=solid];
m1_495 -> m1_500  [key=2, style=dotted];
m1_495 -> m1_488  [key=2, style=dotted];
m1_560 -> m1_561  [key=0, style=solid];
m1_177 -> m1_175  [color=blue, key=0, style=bold];
m1_184 -> m1_186  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_224 -> m1_186  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_341 -> m1_186  [key=2, style=dotted];
m1_341 -> m1_342  [key=0, style=solid];
m1_378 -> m1_186  [key=2, style=dotted];
m1_378 -> m1_379  [key=0, style=solid];
m1_581 -> m1_186  [key=2, style=dotted];
m1_581 -> m1_582  [key=0, style=solid];
m1_808 -> m1_186  [key=2, style=dotted];
m1_808 -> m1_809  [key=0, style=solid];
m1_895 -> m1_157  [key=2, style=dotted];
m1_895 -> m1_896  [key=0, style=solid];
m1_895 -> m1_389  [key=2, style=dotted];
m1_717 -> m1_158  [key=2, style=dotted];
m1_717 -> m1_718  [key=0, style=solid];
m1_726 -> m1_158  [key=2, style=dotted];
m1_726 -> m1_727  [key=0, style=solid];
m1_726 -> m1_487  [key=2, style=dotted];
m1_727 -> m1_158  [key=2, style=dotted];
m1_727 -> m1_728  [key=0, style=solid];
m1_727 -> m1_487  [key=2, style=dotted];
m1_770 -> m1_158  [key=2, style=dotted];
m1_770 -> m1_771  [key=0, style=solid];
m1_779 -> m1_158  [key=2, style=dotted];
m1_779 -> m1_780  [key=0, style=solid];
m1_779 -> m1_487  [key=2, style=dotted];
m1_780 -> m1_158  [key=2, style=dotted];
m1_780 -> m1_781  [key=0, style=solid];
m1_780 -> m1_487  [key=2, style=dotted];
m1_888 -> m1_158  [key=2, style=dotted];
m1_888 -> m1_889  [key=0, style=solid];
m1_897 -> m1_158  [key=2, style=dotted];
m1_897 -> m1_898  [key=0, style=solid];
m1_897 -> m1_487  [key=2, style=dotted];
m1_898 -> m1_158  [key=2, style=dotted];
m1_898 -> m1_899  [key=0, style=solid];
m1_898 -> m1_487  [key=2, style=dotted];
m1_216 -> m1_218  [key=2, style=dotted];
m1_216 -> m1_217  [key=0, style=solid];
m1_217 -> m1_215  [color=blue, key=0, style=bold];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_270  [key=2, style=dotted];
m1_269 -> m1_267  [color=blue, key=0, style=bold];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_270  [key=2, style=dotted];
m1_280 -> m1_278  [color=blue, key=0, style=bold];
m1_323 -> m1_324  [key=0, style=solid];
m1_323 -> m1_325  [key=2, style=dotted];
m1_324 -> m1_322  [color=blue, key=0, style=bold];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_325  [key=2, style=dotted];
m1_335 -> m1_333  [color=blue, key=0, style=bold];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_363  [key=2, style=dotted];
m1_362 -> m1_360  [color=blue, key=0, style=bold];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_363  [key=2, style=dotted];
m1_372 -> m1_370  [color=blue, key=0, style=bold];
m1_398 -> m1_399  [key=0, style=solid];
m1_398 -> m1_400  [key=2, style=dotted];
m1_398 -> m1_401  [key=2, style=dotted];
m1_399 -> m1_397  [color=blue, key=0, style=bold];
m1_410 -> m1_411  [key=0, style=solid];
m1_410 -> m1_401  [key=2, style=dotted];
m1_411 -> m1_409  [color=blue, key=0, style=bold];
m1_437 -> m1_438  [key=0, style=solid];
m1_437 -> m1_439  [key=2, style=dotted];
m1_438 -> m1_436  [color=blue, key=0, style=bold];
m1_458 -> m1_459  [key=0, style=solid];
m1_458 -> m1_460  [key=2, style=dotted];
m1_459 -> m1_457  [color=blue, key=0, style=bold];
m1_485 -> m1_486  [key=0, style=solid];
m1_485 -> m1_487  [key=2, style=dotted];
m1_485 -> m1_488  [key=2, style=dotted];
m1_486 -> m1_484  [color=blue, key=0, style=bold];
m1_508 -> m1_509  [key=0, style=solid];
m1_508 -> m1_510  [key=2, style=dotted];
m1_509 -> m1_507  [color=blue, key=0, style=bold];
m1_549 -> m1_540  [key=2, style=dotted];
m1_549 -> m1_550  [key=0, style=solid];
m1_550 -> m1_548  [color=blue, key=0, style=bold];
m1_573 -> m1_574  [key=0, style=solid];
m1_573 -> m1_575  [key=2, style=dotted];
m1_574 -> m1_572  [color=blue, key=0, style=bold];
m1_602 -> m1_603  [key=0, style=solid];
m1_602 -> m1_604  [key=2, style=dotted];
m1_603 -> m1_601  [color=blue, key=0, style=bold];
m1_629 -> m1_630  [key=0, style=solid];
m1_629 -> m1_631  [key=2, style=dotted];
m1_630 -> m1_628  [color=blue, key=0, style=bold];
m1_648 -> m1_649  [key=0, style=solid];
m1_648 -> m1_650  [key=2, style=dotted];
m1_649 -> m1_647  [color=blue, key=0, style=bold];
m1_683 -> m1_684  [key=0, style=solid];
m1_683 -> m1_685  [key=2, style=dotted];
m1_684 -> m1_682  [color=blue, key=0, style=bold];
m1_709 -> m1_710  [key=0, style=solid];
m1_709 -> m1_711  [key=2, style=dotted];
m1_710 -> m1_708  [color=blue, key=0, style=bold];
m1_736 -> m1_737  [key=0, style=solid];
m1_736 -> m1_738  [key=2, style=dotted];
m1_737 -> m1_735  [color=blue, key=0, style=bold];
m1_762 -> m1_763  [key=0, style=solid];
m1_762 -> m1_764  [key=2, style=dotted];
m1_763 -> m1_761  [color=blue, key=0, style=bold];
m1_790 -> m1_791  [key=0, style=solid];
m1_790 -> m1_792  [key=2, style=dotted];
m1_791 -> m1_789  [color=blue, key=0, style=bold];
m1_801 -> m1_802  [key=0, style=solid];
m1_801 -> m1_792  [key=2, style=dotted];
m1_802 -> m1_800  [color=blue, key=0, style=bold];
m1_827 -> m1_828  [key=0, style=solid];
m1_827 -> m1_829  [key=2, style=dotted];
m1_828 -> m1_826  [color=blue, key=0, style=bold];
m1_854 -> m1_855  [key=0, style=solid];
m1_854 -> m1_856  [key=2, style=dotted];
m1_855 -> m1_853  [color=blue, key=0, style=bold];
m1_880 -> m1_881  [key=0, style=solid];
m1_880 -> m1_882  [key=2, style=dotted];
m1_881 -> m1_879  [color=blue, key=0, style=bold];
m1_385 -> m1_386  [key=0, style=solid];
m1_385 -> m1_389  [key=2, style=dotted];
m1_427 -> m1_415  [color=blue, key=0, style=bold];
m1_524 -> m1_525  [key=0, style=solid];
m1_524 -> m1_389  [key=2, style=dotted];
m1_528 -> m1_429  [key=2, style=dotted];
m1_528 -> m1_529  [key=0, style=solid];
m1_588 -> m1_589  [key=0, style=solid];
m1_588 -> m1_389  [key=2, style=dotted];
m1_617 -> m1_618  [key=0, style=solid];
m1_617 -> m1_621  [key=2, style=dotted];
m1_617 -> m1_389  [key=2, style=dotted];
m1_637 -> m1_638  [key=0, style=solid];
m1_637 -> m1_621  [key=2, style=dotted];
m1_637 -> m1_389  [key=2, style=dotted];
m1_663 -> m1_664  [key=0, style=solid];
m1_663 -> m1_389  [key=2, style=dotted];
m1_672 -> m1_673  [key=0, style=solid];
m1_672 -> m1_389  [key=2, style=dotted];
m1_698 -> m1_699  [key=0, style=solid];
m1_698 -> m1_389  [key=2, style=dotted];
m1_751 -> m1_752  [key=0, style=solid];
m1_751 -> m1_389  [key=2, style=dotted];
m1_815 -> m1_816  [key=0, style=solid];
m1_815 -> m1_389  [key=2, style=dotted];
m1_843 -> m1_844  [key=0, style=solid];
m1_843 -> m1_389  [key=2, style=dotted];
m1_869 -> m1_870  [key=0, style=solid];
m1_869 -> m1_389  [key=2, style=dotted];
m1_185 -> m1_182  [color=blue, key=0, style=bold];
m1_225 -> m1_222  [color=blue, key=0, style=bold];
m1_223 -> m1_218  [key=2, style=dotted];
m1_223 -> m1_224  [key=0, style=solid];
m1_342 -> m1_339  [color=blue, key=0, style=bold];
m1_340 -> m1_341  [key=0, style=solid];
m1_340 -> m1_325  [key=2, style=dotted];
m1_379 -> m1_376  [color=blue, key=0, style=bold];
m1_377 -> m1_378  [key=0, style=solid];
m1_377 -> m1_363  [key=2, style=dotted];
m1_416 -> m1_417  [key=0, style=solid];
m1_416 -> m1_400  [key=2, style=dotted];
m1_445 -> m1_446  [key=0, style=solid];
m1_445 -> m1_389  [key=2, style=dotted];
m1_449 -> m1_444  [color=blue, key=0, style=bold];
m1_466 -> m1_467  [key=0, style=solid];
m1_466 -> m1_389  [key=2, style=dotted];
m1_494 -> m1_156  [key=2, style=dotted];
m1_494 -> m1_495  [key=0, style=solid];
m1_494 -> m1_499  [key=2, style=dotted];
m1_494 -> m1_389  [key=2, style=dotted];
m1_529 -> m1_523  [color=blue, key=0, style=bold];
m1_582 -> m1_579  [color=blue, key=0, style=bold];
m1_580 -> m1_581  [key=0, style=solid];
m1_580 -> m1_575  [key=2, style=dotted];
m1_718 -> m1_715  [color=blue, key=0, style=bold];
m1_716 -> m1_717  [key=0, style=solid];
m1_716 -> m1_711  [key=2, style=dotted];
m1_724 -> m1_725  [key=0, style=solid];
m1_724 -> m1_499  [key=2, style=dotted];
m1_724 -> m1_389  [key=2, style=dotted];
m1_728 -> m1_723  [color=blue, key=0, style=bold];
m1_725 -> m1_726  [key=0, style=solid];
m1_725 -> m1_727  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_725 -> m1_711  [key=2, style=dotted];
m1_771 -> m1_768  [color=blue, key=0, style=bold];
m1_769 -> m1_770  [key=0, style=solid];
m1_769 -> m1_764  [key=2, style=dotted];
m1_777 -> m1_778  [key=0, style=solid];
m1_777 -> m1_499  [key=2, style=dotted];
m1_777 -> m1_389  [key=2, style=dotted];
m1_781 -> m1_776  [color=blue, key=0, style=bold];
m1_778 -> m1_779  [key=0, style=solid];
m1_778 -> m1_780  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_778 -> m1_764  [key=2, style=dotted];
m1_809 -> m1_806  [color=blue, key=0, style=bold];
m1_807 -> m1_808  [key=0, style=solid];
m1_807 -> m1_792  [key=2, style=dotted];
m1_836 -> m1_833  [color=blue, key=0, style=bold];
m1_834 -> m1_829  [key=2, style=dotted];
m1_834 -> m1_835  [key=0, style=solid];
m1_863 -> m1_860  [color=blue, key=0, style=bold];
m1_861 -> m1_856  [key=2, style=dotted];
m1_861 -> m1_862  [key=0, style=solid];
m1_889 -> m1_886  [color=blue, key=0, style=bold];
m1_887 -> m1_888  [key=0, style=solid];
m1_887 -> m1_882  [key=2, style=dotted];
m1_899 -> m1_894  [color=blue, key=0, style=bold];
m1_896 -> m1_897  [key=0, style=solid];
m1_896 -> m1_898  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_896 -> m1_882  [key=2, style=dotted];
m1_474 -> m1_472  [color=blue, key=0, style=bold];
m1_473 -> m1_474  [key=0, style=solid];
m1_477 -> m1_475  [color=blue, key=0, style=bold];
m1_476 -> m1_477  [key=0, style=solid];
m1_562 -> m1_560  [color=blue, key=0, style=bold];
m1_561 -> m1_562  [key=0, style=solid];
m1_564 -> m1_565  [key=0, style=solid];
m1_835 -> m1_836  [key=0, style=solid];
m1_835 -> m1_837  [key=2, style=dotted];
m1_862 -> m1_863  [key=0, style=solid];
m1_862 -> m1_837  [key=2, style=dotted];
m1_565 -> m1_563  [color=blue, key=0, style=bold];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_54  [key=2, style=dotted];
m1_412 -> m1_413  [key=0, style=solid];
m1_413 -> m1_125  [key=2, style=dotted];
m1_413 -> m1_414  [key=0, style=solid];
m1_413 -> m1_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_414 -> m1_412  [color=blue, key=0, style=bold];
m1_693 -> m1_694  [key=0, style=solid];
m1_695 -> m1_125  [key=2, style=dotted];
m1_695 -> m1_696  [key=0, style=solid];
m1_695 -> m1_697  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_694 -> m1_695  [key=0, style=solid];
m1_694 -> m1_698  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_696 -> m1_693  [color=blue, key=0, style=bold];
m1_84 -> m1_94  [key=0, style=solid];
m1_84 -> m1_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_84 -> m1_97  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [color=red, key=0, style=solid];
m1_390 -> m1_391  [key=0, style=solid];
m1_391 -> m1_66  [key=2, style=dotted];
m1_391 -> m1_392  [key=0, style=solid];
m1_391 -> m1_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_392 -> m1_390  [color=blue, key=0, style=bold];
m1_41 -> m1_44  [color=green, key=1, label=sqlConnection, style=dashed];
m1_41 -> m1_32  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_501 -> m1_502  [key=0, style=solid];
m1_502 -> m1_66  [key=2, style=dotted];
m1_502 -> m1_503  [key=0, style=solid];
m1_502 -> m1_504  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_503 -> m1_501  [color=blue, key=0, style=bold];
m1_900 -> m1_901  [key=0, style=solid];
m1_900 -> m1_903  [color=darkseagreen4, key=1, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m1_902 -> m1_24  [key=2, style=dotted];
m1_902 -> m1_903  [key=0, style=solid];
m1_901 -> m1_32  [key=2, style=dotted];
m1_901 -> m1_902  [key=0, style=solid];
m1_901 -> m1_903  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m1_903 -> m1_904  [key=0, style=solid];
m1_903 -> m1_905  [key=2, style=dotted];
m1_904 -> m1_900  [color=blue, key=0, style=bold];
m1_260 -> m1_261  [key=0, style=solid];
m1_261 -> m1_66  [key=2, style=dotted];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_262 -> m1_260  [color=blue, key=0, style=bold];
m1_179 -> m1_180  [key=0, style=solid];
m1_180 -> m1_66  [key=2, style=dotted];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_181 -> m1_179  [color=blue, key=0, style=bold];
m1_336 -> m1_337  [key=0, style=solid];
m1_337 -> m1_66  [key=2, style=dotted];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_338 -> m1_336  [color=blue, key=0, style=bold];
m1_121 -> m1_910  [key=0, style=solid];
m1_910 -> m1_121  [color=blue, key=0, style=bold];
m1_729 -> m1_730  [key=0, style=solid];
m1_730 -> m1_66  [key=2, style=dotted];
m1_730 -> m1_731  [key=0, style=solid];
m1_730 -> m1_732  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_731 -> m1_729  [color=blue, key=0, style=bold];
m1_73 -> m1_68  [color=blue, key=0, style=bold];
m1_530 -> m1_531  [key=0, style=solid];
m1_531 -> m1_66  [key=2, style=dotted];
m1_531 -> m1_532  [key=0, style=solid];
m1_531 -> m1_533  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_532 -> m1_530  [color=blue, key=0, style=bold];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_96  [key=0, style=solid];
m1_107 -> m1_108  [color=green, key=0, style=solid];
m1_108 -> m1_109  [color=green, key=0, style=solid];
m1_108 -> m1_66  [color=green, key=2, style=dotted];
m1_108 -> m1_110  [color=green, key=1, label="lambda expression", style=dashed];
m1_109 -> m1_107  [color=blue, key=0, style=bold];
m1_612 -> m1_613  [key=0, style=solid];
m1_614 -> m1_125  [key=2, style=dotted];
m1_614 -> m1_615  [key=0, style=solid];
m1_614 -> m1_616  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_613 -> m1_614  [key=0, style=solid];
m1_613 -> m1_617  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_615 -> m1_612  [color=blue, key=0, style=bold];
m1_765 -> m1_766  [key=0, style=solid];
m1_766 -> m1_66  [key=2, style=dotted];
m1_766 -> m1_767  [key=0, style=solid];
m1_766 -> m1_768  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_767 -> m1_765  [color=blue, key=0, style=bold];
m1_489 -> m1_490  [key=0, style=solid];
m1_491 -> m1_125  [key=2, style=dotted];
m1_491 -> m1_492  [key=0, style=solid];
m1_491 -> m1_493  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_490 -> m1_491  [key=0, style=solid];
m1_490 -> m1_494  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_492 -> m1_489  [color=blue, key=0, style=bold];
m1_755 -> m1_756  [key=0, style=solid];
m1_756 -> m1_66  [key=2, style=dotted];
m1_756 -> m1_757  [key=0, style=solid];
m1_756 -> m1_758  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_757 -> m1_755  [color=blue, key=0, style=bold];
m1_226 -> m1_227  [key=0, style=solid];
m1_228 -> m1_125  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_232  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_229 -> m1_226  [color=blue, key=0, style=bold];
m1_803 -> m1_804  [key=0, style=solid];
m1_804 -> m1_66  [key=2, style=dotted];
m1_804 -> m1_805  [key=0, style=solid];
m1_804 -> m1_806  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_805 -> m1_803  [color=blue, key=0, style=bold];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_87  [key=2, style=dotted];
m1_63 -> m1_64  [color=green, key=0, style=solid];
m1_63 -> m1_58  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [color=red, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_676 -> m1_677  [key=0, style=solid];
m1_677 -> m1_66  [key=2, style=dotted];
m1_677 -> m1_678  [key=0, style=solid];
m1_677 -> m1_679  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_678 -> m1_676  [color=blue, key=0, style=bold];
m1_46 -> m1_47  [color=red, key=0, style=solid];
m1_46 -> m1_48  [color=red, key=2, style=dotted];
m1_46 -> m1_42  [color=red, key=2, style=dotted];
m1_47 -> m1_48  [color=green, key=0, style=solid];
m1_47 -> m1_49  [color=green, key=2, style=dotted];
m1_47 -> m1_50  [color=green, key=1, label="lambda expression", style=dashed];
m1_47 -> m1_43  [color=blue, key=0, style=bold];
m1_519 -> m1_520  [key=0, style=solid];
m1_521 -> m1_125  [key=2, style=dotted];
m1_521 -> m1_522  [key=0, style=solid];
m1_521 -> m1_523  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_520 -> m1_521  [key=0, style=solid];
m1_520 -> m1_524  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_522 -> m1_519  [color=blue, key=0, style=bold];
m1_10 -> m1_12  [key=0, style=solid];
m1_10 -> m1_5  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_541 -> m1_542  [key=0, style=solid];
m1_542 -> m1_66  [key=2, style=dotted];
m1_542 -> m1_543  [key=0, style=solid];
m1_542 -> m1_544  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_543 -> m1_541  [color=blue, key=0, style=bold];
m1_686 -> m1_687  [key=0, style=solid];
m1_687 -> m1_66  [key=2, style=dotted];
m1_687 -> m1_688  [key=0, style=solid];
m1_687 -> m1_689  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_688 -> m1_686  [color=blue, key=0, style=bold];
m1_702 -> m1_703  [key=0, style=solid];
m1_703 -> m1_66  [key=2, style=dotted];
m1_703 -> m1_704  [key=0, style=solid];
m1_703 -> m1_705  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_704 -> m1_702  [color=blue, key=0, style=bold];
m1_906 -> m1_24  [key=2, style=dotted];
m1_906 -> m1_32  [key=2, style=dotted];
m1_906 -> m1_907  [key=0, style=solid];
m1_907 -> m1_908  [key=0, style=solid];
m1_907 -> m1_909  [key=2, style=dotted];
m1_908 -> m1_49  [color=blue, key=0, style=bold];
m1_641 -> m1_642  [key=0, style=solid];
m1_642 -> m1_66  [key=2, style=dotted];
m1_642 -> m1_643  [key=0, style=solid];
m1_642 -> m1_644  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_643 -> m1_641  [color=blue, key=0, style=bold];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_62  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_819 -> m1_820  [key=0, style=solid];
m1_820 -> m1_66  [key=2, style=dotted];
m1_820 -> m1_821  [key=0, style=solid];
m1_820 -> m1_822  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_821 -> m1_819  [color=blue, key=0, style=bold];
m1_315 -> m1_316  [key=0, style=solid];
m1_316 -> m1_66  [key=2, style=dotted];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_317 -> m1_315  [color=blue, key=0, style=bold];
m1_838 -> m1_839  [key=0, style=solid];
m1_840 -> m1_125  [key=2, style=dotted];
m1_840 -> m1_841  [key=0, style=solid];
m1_840 -> m1_842  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_839 -> m1_840  [key=0, style=solid];
m1_839 -> m1_843  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_841 -> m1_838  [color=blue, key=0, style=bold];
m1_40 -> m1_36  [color=blue, key=0, style=bold];
m1_40 -> m1_41  [key=0, style=solid];
m1_95 -> m1_96  [color=green, key=0, style=solid];
m1_95 -> m1_98  [key=0, style=solid];
m1_95 -> m1_5  [key=2, style=dotted];
m1_96 -> m1_97  [color=green, key=0, style=solid];
m1_96 -> m1_66  [color=green, key=2, style=dotted];
m1_96 -> m1_98  [color=green, key=1, label="lambda expression", style=dashed];
m1_96 -> m1_99  [key=2, style=dotted];
m1_97 -> m1_95  [color=blue, key=0, style=bold];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_41  [key=2, style=dotted];
m1_97 -> m1_42  [key=2, style=dotted];
m1_651 -> m1_652  [key=0, style=solid];
m1_652 -> m1_66  [key=2, style=dotted];
m1_652 -> m1_653  [key=0, style=solid];
m1_652 -> m1_654  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_653 -> m1_651  [color=blue, key=0, style=bold];
m1_873 -> m1_874  [key=0, style=solid];
m1_874 -> m1_66  [key=2, style=dotted];
m1_874 -> m1_875  [key=0, style=solid];
m1_874 -> m1_876  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_875 -> m1_873  [color=blue, key=0, style=bold];
m1_86 -> m1_87  [color=green, key=0, style=solid];
m1_86 -> m1_81  [color=blue, key=0, style=bold];
m1_88 -> m1_86  [color=blue, key=0, style=bold];
m1_88 -> m1_89  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_17  [color=darkseagreen4, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_17 -> m1_7  [key=2, style=dotted];
m1_17 -> m1_14  [key=2, style=dotted];
m1_17 -> m1_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_16 -> m1_18  [key=0, style=solid];
m1_16 -> m1_5  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_18 -> m1_14  [color=blue, key=0, style=bold];
m1_18 -> m1_20  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_42 -> m1_24  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_595 -> m1_596  [key=0, style=solid];
m1_596 -> m1_66  [key=2, style=dotted];
m1_596 -> m1_597  [key=0, style=solid];
m1_596 -> m1_598  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_597 -> m1_595  [color=blue, key=0, style=bold];
m1_93 -> m1_91  [color=blue, key=0, style=bold];
m1_380 -> m1_381  [key=0, style=solid];
m1_382 -> m1_125  [key=2, style=dotted];
m1_382 -> m1_383  [key=0, style=solid];
m1_382 -> m1_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_385  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_383 -> m1_380  [color=blue, key=0, style=bold];
m1_43 -> m1_44  [color=green, key=0, style=solid];
m1_43 -> m1_46  [color=red, key=1, label="Hangfire.IBackgroundJobClient", style=dashed];
m1_43 -> m1_39  [key=2, style=dotted];
m1_44 -> m1_45  [color=green, key=0, style=solid];
m1_44 -> m1_46  [color=red, key=0, style=solid];
m1_44 -> m1_20  [color=green, key=2, style=dotted];
m1_45 -> m1_47  [key=0, style=solid];
m1_45 -> m1_5  [key=2, style=dotted];
m1_45 -> m1_40  [color=blue, key=0, style=bold];
m1_632 -> m1_633  [key=0, style=solid];
m1_634 -> m1_125  [key=2, style=dotted];
m1_634 -> m1_635  [key=0, style=solid];
m1_634 -> m1_636  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_633 -> m1_634  [key=0, style=solid];
m1_633 -> m1_637  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_635 -> m1_632  [color=blue, key=0, style=bold];
m1_292 -> m1_293  [key=0, style=solid];
m1_294 -> m1_125  [key=2, style=dotted];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_293 -> m1_294  [key=0, style=solid];
m1_293 -> m1_297  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_295 -> m1_292  [color=blue, key=0, style=bold];
m1_461 -> m1_462  [key=0, style=solid];
m1_463 -> m1_125  [key=2, style=dotted];
m1_463 -> m1_464  [key=0, style=solid];
m1_463 -> m1_465  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_462 -> m1_463  [key=0, style=solid];
m1_462 -> m1_466  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_464 -> m1_461  [color=blue, key=0, style=bold];
m1_830 -> m1_831  [key=0, style=solid];
m1_831 -> m1_66  [key=2, style=dotted];
m1_831 -> m1_832  [key=0, style=solid];
m1_831 -> m1_833  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_832 -> m1_830  [color=blue, key=0, style=bold];
m1_551 -> m1_552  [key=0, style=solid];
m1_552 -> m1_125  [key=2, style=dotted];
m1_552 -> m1_553  [key=0, style=solid];
m1_552 -> m1_554  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_553 -> m1_551  [color=blue, key=0, style=bold];
m1_187 -> m1_188  [color=green, key=0, style=solid];
m1_188 -> m1_189  [color=green, key=0, style=solid];
m1_188 -> m1_193  [color=green, key=1, label=arrangeSql, style=dashed];
m1_189 -> m1_190  [color=green, key=0, style=solid];
m1_189 -> m1_125  [color=green, key=2, style=dotted];
m1_189 -> m1_191  [color=green, key=1, label="lambda expression", style=dashed];
m1_190 -> m1_187  [color=blue, key=0, style=bold];
m1_451 -> m1_452  [key=0, style=solid];
m1_452 -> m1_66  [key=2, style=dotted];
m1_452 -> m1_453  [key=0, style=solid];
m1_452 -> m1_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_453 -> m1_451  [color=blue, key=0, style=bold];
m1_746 -> m1_747  [key=0, style=solid];
m1_748 -> m1_125  [key=2, style=dotted];
m1_748 -> m1_749  [key=0, style=solid];
m1_748 -> m1_750  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_747 -> m1_748  [key=0, style=solid];
m1_747 -> m1_751  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_749 -> m1_746  [color=blue, key=0, style=bold];
m1_169 -> m1_170  [key=0, style=solid];
m1_170 -> m1_66  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_171 -> m1_169  [color=blue, key=0, style=bold];
m1_122 -> m1_123  [color=green, key=0, style=solid];
m1_123 -> m1_124  [color=green, key=0, style=solid];
m1_123 -> m1_125  [color=green, key=2, style=dotted];
m1_123 -> m1_126  [color=green, key=1, label="lambda expression", style=dashed];
m1_124 -> m1_122  [color=blue, key=0, style=bold];
m1_373 -> m1_374  [key=0, style=solid];
m1_374 -> m1_66  [key=2, style=dotted];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_375 -> m1_373  [color=blue, key=0, style=bold];
m1_605 -> m1_606  [key=0, style=solid];
m1_606 -> m1_66  [key=2, style=dotted];
m1_606 -> m1_607  [key=0, style=solid];
m1_606 -> m1_608  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_607 -> m1_605  [color=blue, key=0, style=bold];
m1_911 -> m1_47  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_54  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_64  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_70  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_78  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_87  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_96  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_108  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_123  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_189  [color=green, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_22  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_42  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_170  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_180  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_210  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_220  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_228  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_241  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_252  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_261  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_272  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_283  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_294  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_306  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_316  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_327  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_337  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_345  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_354  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_365  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_374  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_382  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_391  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_403  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_413  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_431  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_442  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_452  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_463  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_479  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_491  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_502  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_512  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_521  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_531  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_542  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_552  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_567  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_577  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_585  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_596  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_606  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_614  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_623  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_634  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_642  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_652  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_660  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_669  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_677  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_687  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_695  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_703  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_713  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_721  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_730  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_740  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_748  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_756  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_766  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_774  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_783  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_794  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_804  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_812  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_820  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_831  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_840  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_848  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_858  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_866  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_874  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_884  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_892  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_902  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_911 -> m1_906  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m1_912 -> m1_60  [color=green, key=1, label=token, style=dashed];
m1_913 -> m1_60  [color=green, key=1, label=queues, style=dashed];
m1_916 -> m1_103  [color=green, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_919 -> m1_193  [color=green, key=1, label=arrangeSql, style=dashed];
m1_931 -> m1_348  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_914 -> m1_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_915 -> m1_75  [color=darkseagreen4, key=1, label=token, style=dashed];
m1_945 -> m1_538  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_917 -> m1_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_921 -> m1_232  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_922 -> m1_245  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_923 -> m1_255  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_926 -> m1_286  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_927 -> m1_297  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_928 -> m1_309  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_918 -> m1_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_972 -> m1_895  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_920 -> m1_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_924 -> m1_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_925 -> m1_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_929 -> m1_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_930 -> m1_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_932 -> m1_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_933 -> m1_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_935 -> m1_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_936 -> m1_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_937 -> m1_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_939 -> m1_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_941 -> m1_485  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_943 -> m1_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_946 -> m1_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_947 -> m1_573  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_949 -> m1_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_951 -> m1_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_953 -> m1_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_956 -> m1_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_958 -> m1_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_960 -> m1_736  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_962 -> m1_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_964 -> m1_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_965 -> m1_801  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_967 -> m1_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_969 -> m1_854  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_971 -> m1_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m1_934 -> m1_385  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_944 -> m1_524  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_948 -> m1_588  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_950 -> m1_617  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_952 -> m1_637  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_954 -> m1_663  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_955 -> m1_672  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_957 -> m1_698  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_961 -> m1_751  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_966 -> m1_815  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_968 -> m1_843  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_970 -> m1_869  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_938 -> m1_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_940 -> m1_466  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_942 -> m1_494  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_959 -> m1_724  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m1_963 -> m1_777  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m4_10 -> m4_14  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_4 -> m4_5  [color=green, key=0, style=solid];
m4_4 -> m4_9  [color=green, key=2, style=dotted];
m4_0 -> m4_4  [color=green, key=1, label=string, style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_2 -> m4_4  [color=green, key=1, label=stateMachine, style=dashed];
m4_2 -> m4_3  [color=green, key=0, style=solid];
m4_2 -> m4_7  [key=2, style=dotted];
m4_3 -> m4_4  [color=green, key=0, style=solid];
m4_3 -> m4_8  [color=green, key=2, style=dotted];
m4_5 -> m4_0  [color=blue, key=0, style=bold];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_6  [key=2, style=dotted];
m4_14 -> m4_9  [key=2, style=dotted];
m4_14 -> m4_15  [key=0, style=solid];
m4_13 -> m4_8  [key=2, style=dotted];
m4_13 -> m4_14  [key=0, style=solid];
m4_12 -> m4_7  [key=2, style=dotted];
m4_12 -> m4_14  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m4_12 -> m4_13  [key=0, style=solid];
m4_11 -> m4_6  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_15 -> m4_10  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_53 -> m5_54  [key=0, style=solid];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_56  [key=2, style=dotted];
m5_54 -> m5_57  [key=2, style=dotted];
m5_55 -> m5_53  [color=blue, key=0, style=bold];
m5_58 -> m5_59  [key=0, style=solid];
m5_58 -> m5_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_58 -> m5_39  [color=darkorchid, key=3, label="method methodReturn bool TimedOutByCheckedTime", style=bold];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_61  [key=0, style=solid];
m5_59 -> m5_56  [key=2, style=dotted];
m5_61 -> m5_62  [key=0, style=solid];
m5_61 -> m5_56  [key=2, style=dotted];
m5_61 -> m5_57  [key=2, style=dotted];
m5_60 -> m5_62  [key=0, style=solid];
m5_62 -> m5_58  [color=blue, key=0, style=bold];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_78  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_80  [key=2, style=dotted];
m5_78 -> m5_79  [key=0, style=solid];
m5_78 -> m5_81  [key=2, style=dotted];
m5_79 -> m5_76  [color=blue, key=0, style=bold];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_19  [key=2, style=dotted];
m5_4 -> m5_8  [color=darkseagreen4, key=1, label=redis, style=dashed];
m5_4 -> m5_10  [color=darkseagreen4, key=1, label=redis, style=dashed];
m5_4 -> m5_13  [color=darkseagreen4, key=1, label=redis, style=dashed];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_20  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_22  [key=2, style=dotted];
m5_8 -> m5_23  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_22  [key=2, style=dotted];
m5_10 -> m5_24  [key=2, style=dotted];
m5_10 -> m5_12  [color=darkseagreen4, key=1, label=jobIds, style=dashed];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_12  [key=0, style=solid];
m5_13 -> m5_25  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_18  [key=0, style=solid];
m5_6 -> m5_8  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_6 -> m5_9  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_6 -> m5_10  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_6 -> m5_13  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_6 -> m5_16  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_6 -> m5_17  [color=darkseagreen4, key=1, label=queue, style=dashed];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_21  [key=2, style=dotted];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_21  [key=2, style=dotted];
m5_16 -> m5_6  [key=0, style=solid];
m5_16 -> m5_21  [key=2, style=dotted];
m5_17 -> m5_6  [key=0, style=solid];
m5_17 -> m5_26  [key=2, style=dotted];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_14  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m5_11 -> m5_15  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m5_11 -> m5_17  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m5_11 -> m5_11  [color=darkorchid, key=3, label="Local variable int requeued", style=bold];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_15  [key=0, style=solid];
m5_14 -> m5_12  [key=0, style=solid];
m5_14 -> m5_14  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m5_14 -> m5_15  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m5_14 -> m5_17  [color=darkseagreen4, key=1, label=requeued, style=dashed];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_17  [key=0, style=solid];
m5_18 -> m5_3  [color=blue, key=0, style=bold];
m5_63 -> m5_64  [key=0, style=solid];
m5_64 -> m5_65  [key=0, style=solid];
m5_64 -> m5_72  [key=2, style=dotted];
m5_65 -> m5_66  [key=0, style=solid];
m5_65 -> m5_68  [key=0, style=solid];
m5_66 -> m5_67  [key=0, style=solid];
m5_66 -> m5_73  [key=2, style=dotted];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_71  [key=0, style=solid];
m5_68 -> m5_72  [key=2, style=dotted];
m5_67 -> m5_65  [key=0, style=solid];
m5_67 -> m5_68  [key=0, style=solid];
m5_67 -> m5_74  [key=2, style=dotted];
m5_69 -> m5_70  [key=0, style=solid];
m5_70 -> m5_71  [key=0, style=solid];
m5_70 -> m5_75  [key=2, style=dotted];
m5_71 -> m5_63  [color=blue, key=0, style=bold];
m5_32 -> m5_39  [key=0, style=solid];
m5_32 -> m5_41  [key=2, style=dotted];
m5_32 -> m5_44  [key=2, style=dotted];
m5_32 -> m5_45  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_32  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m5_27 -> m5_34  [color=red, key=1, label=IRedisClient, style=dashed];
m5_27 -> m5_36  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_27 -> m5_37  [color=red, key=1, label=IRedisClient, style=dashed];
m5_27 -> m5_38  [color=darkorchid, key=3, label="method methodReturn bool RequeueJobIfTimedOut", style=bold];
m5_27 -> m5_39  [color=darkorchid, key=3, label="method methodReturn bool RequeueJobIfTimedOut", style=bold];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_41  [key=2, style=dotted];
m5_28 -> m5_42  [key=2, style=dotted];
m5_28 -> m5_30  [color=darkseagreen4, key=1, label=flags, style=dashed];
m5_34 -> m5_35  [color=red, key=0, style=solid];
m5_34 -> m5_48  [color=red, key=2, style=dotted];
m5_34 -> m5_49  [color=red, key=2, style=dotted];
m5_34 -> m5_36  [color=red, key=1, label=stateMachine, style=dashed];
m5_36 -> m5_37  [color=red, key=0, style=solid];
m5_36 -> m5_51  [key=2, style=dotted];
m5_37 -> m5_38  [color=red, key=0, style=solid];
m5_37 -> m5_52  [color=red, key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_31  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m5_29 -> m5_33  [color=darkseagreen4, key=1, label=fetched, style=dashed];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_33  [color=darkseagreen4, key=1, label="@checked", style=dashed];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_33  [key=0, style=solid];
m5_31 -> m5_43  [key=2, style=dotted];
m5_33 -> m5_34  [color=red, key=0, style=solid];
m5_33 -> m5_39  [key=0, style=solid];
m5_33 -> m5_46  [key=2, style=dotted];
m5_33 -> m5_47  [key=2, style=dotted];
m5_39 -> m5_40  [key=0, style=solid];
m5_35 -> m5_36  [color=red, key=0, style=solid];
m5_35 -> m5_50  [color=red, key=2, style=dotted];
m5_38 -> m5_40  [key=0, style=solid];
m5_40 -> m5_27  [color=blue, key=0, style=bold];
m5_82 -> m5_1  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m5_82 -> m5_4  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m5_82 -> m5_13  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m5_82 -> m5_33  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m5_82 -> m5_34  [color=red, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m5_82 -> m5_66  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m5_82 -> m5_67  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m5_82 -> m5_77  [color=darkseagreen4, key=1, label="HangFire.Redis.Components.DequeuedJobsWatcher", style=dashed];
m6_40 -> m6_41  [color=red, key=0, style=solid];
m6_41 -> m6_42  [color=red, key=0, style=solid];
m6_41 -> m6_43  [color=red, key=2, style=dotted];
m6_42 -> m6_40  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_2  [color=blue, key=0, style=bold];
m6_37 -> m6_44  [key=0, style=solid];
m6_37 -> m6_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_54  [color=red, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m6_37 -> m6_56  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m6_37 -> m6_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_37 -> m6_63  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m6_37 -> m6_65  [color=red, key=1, label=string, style=dashed];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_67  [key=2, style=dotted];
m6_46 -> m6_47  [key=0, style=solid];
m6_48 -> m6_49  [key=0, style=solid];
m6_48 -> m6_70  [key=2, style=dotted];
m6_48 -> m6_71  [key=2, style=dotted];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_70  [key=2, style=dotted];
m6_50 -> m6_73  [key=2, style=dotted];
m6_50 -> m6_52  [color=red, key=1, label=lastExecutionTime, style=dashed];
m6_54 -> m6_55  [color=red, key=0, style=solid];
m6_54 -> m6_56  [color=red, key=0, style=solid];
m6_54 -> m6_70  [color=red, key=2, style=dotted];
m6_54 -> m6_78  [color=red, key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_79  [key=2, style=dotted];
m6_56 -> m6_80  [key=2, style=dotted];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_81  [key=2, style=dotted];
m6_63 -> m6_64  [color=red, key=0, style=solid];
m6_63 -> m6_66  [key=0, style=solid];
m6_63 -> m6_35  [key=2, style=dotted];
m6_63 -> m6_84  [key=2, style=dotted];
m6_65 -> m6_66  [color=red, key=0, style=solid];
m6_65 -> m6_85  [color=red, key=2, style=dotted];
m6_65 -> m6_86  [color=red, key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_68  [key=2, style=dotted];
m6_45 -> m6_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_69  [key=2, style=dotted];
m6_47 -> m6_49  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_72  [key=2, style=dotted];
m6_49 -> m6_52  [color=red, key=1, label=instant, style=dashed];
m6_49 -> m6_59  [color=darkseagreen4, key=1, label=instant, style=dashed];
m6_49 -> m6_60  [color=darkseagreen4, key=1, label=instant, style=dashed];
m6_49 -> m6_62  [color=darkseagreen4, key=1, label=instant, style=dashed];
m6_52 -> m6_53  [color=red, key=0, style=solid];
m6_52 -> m6_62  [color=red, key=0, style=solid];
m6_52 -> m6_75  [color=red, key=2, style=dotted];
m6_52 -> m6_76  [color=red, key=2, style=dotted];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_82  [key=2, style=dotted];
m6_60 -> m6_83  [key=2, style=dotted];
m6_62 -> m6_63  [key=0, style=solid];
m6_62 -> m6_82  [key=2, style=dotted];
m6_62 -> m6_83  [key=2, style=dotted];
m6_51 -> m6_52  [color=red, key=0, style=solid];
m6_51 -> m6_74  [key=2, style=dotted];
m6_51 -> m6_60  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m6_51 -> m6_61  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m6_51 -> m6_62  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m6_51 -> m6_63  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_83  [key=2, style=dotted];
m6_53 -> m6_54  [color=red, key=0, style=solid];
m6_53 -> m6_77  [color=red, key=2, style=dotted];
m6_53 -> m6_55  [color=red, key=1, label=state, style=dashed];
m6_53 -> m6_56  [color=red, key=1, label=state, style=dashed];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_61  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m6_58 -> m6_59  [key=0, style=solid];
m6_58 -> m6_60  [key=0, style=solid];
m6_58 -> m6_78  [key=2, style=dotted];
m6_64 -> m6_65  [color=red, key=0, style=solid];
m6_66 -> m6_37  [color=blue, key=0, style=bold];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m6_16 -> m6_20  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m6_16 -> m6_26  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m6_16 -> m6_29  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_31  [key=2, style=dotted];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_32  [key=2, style=dotted];
m6_20 -> m6_22  [color=darkseagreen4, key=1, label=connection, style=dashed];
m6_20 -> m6_24  [color=red, key=1, label=connection, style=dashed];
m6_20 -> m6_26  [color=darkseagreen4, key=1, label=connection, style=dashed];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_23  [color=red, key=0, style=solid];
m6_26 -> m6_37  [key=2, style=dotted];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_39  [key=2, style=dotted];
m6_18 -> m6_30  [key=0, style=solid];
m6_18 -> m6_15  [key=2, style=dotted];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_33  [key=2, style=dotted];
m6_22 -> m6_23  [color=red, key=0, style=solid];
m6_22 -> m6_34  [key=2, style=dotted];
m6_24 -> m6_25  [color=red, key=0, style=solid];
m6_24 -> m6_35  [color=red, key=2, style=dotted];
m6_24 -> m6_36  [color=red, key=2, style=dotted];
m6_24 -> m6_26  [color=red, key=1, label=recurringJob, style=dashed];
m6_23 -> m6_24  [color=red, key=0, style=solid];
m6_23 -> m6_29  [color=red, key=0, style=solid];
m6_23 -> m6_26  [color=red, key=1, label=recurringJobId, style=dashed];
m6_23 -> m6_28  [color=red, key=1, label=recurringJobId, style=dashed];
m6_28 -> m6_23  [color=red, key=0, style=solid];
m6_28 -> m6_35  [key=2, style=dotted];
m6_28 -> m6_38  [key=2, style=dotted];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_23  [color=red, key=0, style=solid];
m6_27 -> m6_28  [key=0, style=solid];
m6_30 -> m6_16  [color=blue, key=0, style=bold];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_7  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m6_4 -> m6_9  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m6_4 -> m6_11  [color=darkseagreen4, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m6_4 -> m6_12  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m6_4 -> m6_13  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=0, style=solid];
m6_11 -> m6_12  [key=0, style=solid];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_6 -> m6_14  [key=0, style=solid];
m6_6 -> m6_15  [key=2, style=dotted];
m6_8 -> m6_14  [key=0, style=solid];
m6_8 -> m6_15  [key=2, style=dotted];
m6_10 -> m6_14  [key=0, style=solid];
m6_10 -> m6_15  [key=2, style=dotted];
m6_14 -> m6_4  [color=blue, key=0, style=bold];
m6_86 -> m6_24  [color=red, key=3, label="Parameter variable System.Collections.Generic.IReadOnlyDictionary<string, string> recurringJob", style=bold];
m6_87 -> m6_11  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_87 -> m6_12  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_87 -> m6_13  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_87 -> m6_19  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_87 -> m6_26  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_87 -> m6_29  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_87 -> m6_41  [color=red, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_87 -> m6_49  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m6_87 -> m6_56  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_13  [key=2, style=dotted];
m7_23 -> m7_14  [key=2, style=dotted];
m7_23 -> m7_15  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_16 -> m7_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_16 -> m7_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_23  [color=darkseagreen4, key=1, label=time, style=dashed];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_20  [key=0, style=solid];
m7_18 -> m7_9  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_22  [key=0, style=solid];
m7_20 -> m7_9  [key=2, style=dotted];
m7_22 -> m7_24  [key=0, style=solid];
m7_22 -> m7_12  [key=2, style=dotted];
m7_22 -> m7_13  [key=2, style=dotted];
m7_19 -> m7_23  [key=0, style=solid];
m7_19 -> m7_10  [key=2, style=dotted];
m7_21 -> m7_23  [key=0, style=solid];
m7_21 -> m7_11  [key=2, style=dotted];
m7_24 -> m7_16  [color=blue, key=0, style=bold];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_13  [key=2, style=dotted];
m7_7 -> m7_14  [key=2, style=dotted];
m7_7 -> m7_15  [key=2, style=dotted];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_0 -> m7_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_0 -> m7_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_7  [color=darkseagreen4, key=1, label=time, style=dashed];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_4  [key=0, style=solid];
m7_2 -> m7_9  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_6  [key=0, style=solid];
m7_4 -> m7_9  [key=2, style=dotted];
m7_6 -> m7_8  [key=0, style=solid];
m7_6 -> m7_12  [key=2, style=dotted];
m7_6 -> m7_13  [key=2, style=dotted];
m7_3 -> m7_7  [key=0, style=solid];
m7_3 -> m7_10  [key=2, style=dotted];
m7_5 -> m7_7  [key=0, style=solid];
m7_5 -> m7_11  [key=2, style=dotted];
m7_8 -> m7_0  [color=blue, key=0, style=bold];
m7_25 -> m7_26  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_29  [key=2, style=dotted];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_30  [key=2, style=dotted];
m7_28 -> m7_25  [color=blue, key=0, style=bold];
m7_51 -> m7_52  [key=0, style=solid];
m7_52 -> m7_53  [color=green, key=0, style=solid];
m7_52 -> m7_13  [key=2, style=dotted];
m7_52 -> m7_37  [key=2, style=dotted];
m7_53 -> m7_54  [color=green, key=0, style=solid];
m7_53 -> m7_38  [color=green, key=2, style=dotted];
m7_54 -> m7_51  [color=blue, key=0, style=bold];
m7_55 -> m7_56  [key=0, style=solid];
m7_56 -> m7_57  [color=green, key=0, style=solid];
m7_56 -> m7_13  [key=2, style=dotted];
m7_56 -> m7_37  [key=2, style=dotted];
m7_57 -> m7_58  [color=green, key=0, style=solid];
m7_57 -> m7_50  [color=green, key=2, style=dotted];
m7_58 -> m7_55  [color=blue, key=0, style=bold];
m7_46 -> m7_47  [key=0, style=solid];
m7_47 -> m7_48  [color=green, key=0, style=solid];
m7_47 -> m7_13  [key=2, style=dotted];
m7_47 -> m7_37  [key=2, style=dotted];
m7_48 -> m7_49  [color=green, key=0, style=solid];
m7_48 -> m7_50  [color=green, key=2, style=dotted];
m7_49 -> m7_46  [color=blue, key=0, style=bold];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_33  [color=green, key=0, style=solid];
m7_32 -> m7_13  [key=2, style=dotted];
m7_32 -> m7_37  [key=2, style=dotted];
m7_32 -> m7_34  [color=darkseagreen4, key=1, label=checkedTimestamp, style=dashed];
m7_33 -> m7_34  [color=green, key=0, style=solid];
m7_33 -> m7_38  [color=green, key=2, style=dotted];
m7_34 -> m7_35  [color=green, key=0, style=solid];
m7_34 -> m7_39  [key=2, style=dotted];
m7_35 -> m7_36  [color=green, key=0, style=solid];
m7_35 -> m7_40  [color=green, key=2, style=dotted];
m7_35 -> m7_41  [color=green, key=2, style=dotted];
m7_36 -> m7_31  [color=blue, key=0, style=bold];
m7_42 -> m7_43  [key=0, style=solid];
m7_43 -> m7_44  [color=green, key=0, style=solid];
m7_43 -> m7_13  [key=2, style=dotted];
m7_43 -> m7_37  [key=2, style=dotted];
m7_44 -> m7_45  [color=green, key=0, style=solid];
m7_44 -> m7_38  [color=green, key=2, style=dotted];
m7_45 -> m7_42  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [color=green, key=0, style=solid];
m8_0 -> m8_4  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_0 -> m8_6  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_0 -> m8_9  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_0 -> m8_12  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_0 -> m8_15  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_0 -> m8_16  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m8_1 -> m8_2  [color=green, key=0, style=solid];
m8_1 -> m8_17  [color=green, key=0, style=solid];
m8_12 -> m8_1  [color=green, key=0, style=solid];
m8_12 -> m8_23  [color=green, key=2, style=dotted];
m8_12 -> m8_24  [color=green, key=2, style=dotted];
m8_15 -> m8_1  [color=green, key=0, style=solid];
m8_15 -> m8_27  [color=green, key=2, style=dotted];
m8_15 -> m8_28  [color=green, key=2, style=dotted];
m8_16 -> m8_1  [color=green, key=0, style=solid];
m8_16 -> m8_28  [color=green, key=2, style=dotted];
m8_7 -> m8_1  [color=green, key=0, style=solid];
m8_7 -> m8_21  [color=green, key=2, style=dotted];
m8_7 -> m8_19  [color=green, key=2, style=dotted];
m8_10 -> m8_1  [color=green, key=0, style=solid];
m8_10 -> m8_22  [color=green, key=2, style=dotted];
m8_10 -> m8_19  [color=green, key=2, style=dotted];
m8_2 -> m8_4  [color=green, key=1, label=name, style=dashed];
m8_2 -> m8_6  [color=green, key=1, label=name, style=dashed];
m8_2 -> m8_9  [color=green, key=1, label=name, style=dashed];
m8_2 -> m8_12  [color=green, key=1, label=name, style=dashed];
m8_2 -> m8_15  [color=green, key=1, label=name, style=dashed];
m8_2 -> m8_16  [color=green, key=1, label=name, style=dashed];
m8_2 -> m8_2  [color=green, key=1, label=row, style=dashed];
m8_2 -> m8_3  [color=green, key=0, style=solid];
m8_4 -> m8_5  [color=green, key=0, style=solid];
m8_4 -> m8_18  [color=green, key=2, style=dotted];
m8_4 -> m8_19  [color=green, key=2, style=dotted];
m8_3 -> m8_4  [color=green, key=0, style=solid];
m8_3 -> m8_16  [color=green, key=1, label=value, style=dashed];
m8_3 -> m8_3  [color=green, key=1, label=row, style=dashed];
m8_3 -> m8_5  [color=green, key=1, label=value, style=dashed];
m8_3 -> m8_8  [color=green, key=1, label=value, style=dashed];
m8_3 -> m8_11  [color=green, key=1, label=value, style=dashed];
m8_3 -> m8_13  [color=green, key=1, label=value, style=dashed];
m8_3 -> m8_14  [color=green, key=1, label=value, style=dashed];
m8_5 -> m8_6  [color=green, key=0, style=solid];
m8_5 -> m8_8  [color=green, key=0, style=solid];
m8_6 -> m8_7  [color=green, key=0, style=solid];
m8_6 -> m8_20  [color=green, key=2, style=dotted];
m8_9 -> m8_10  [color=green, key=0, style=solid];
m8_9 -> m8_20  [color=green, key=2, style=dotted];
m8_8 -> m8_9  [color=green, key=0, style=solid];
m8_8 -> m8_11  [color=green, key=0, style=solid];
m8_11 -> m8_12  [color=green, key=0, style=solid];
m8_11 -> m8_13  [color=green, key=0, style=solid];
m8_14 -> m8_15  [color=green, key=0, style=solid];
m8_14 -> m8_26  [color=green, key=2, style=dotted];
m8_13 -> m8_16  [color=green, key=0, style=solid];
m8_13 -> m8_14  [color=green, key=0, style=solid];
m8_13 -> m8_25  [color=green, key=2, style=dotted];
m8_17 -> m8_0  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_56  [key=2, style=dotted];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_57  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_58  [key=2, style=dotted];
m9_4 -> m9_9  [color=darkseagreen4, key=1, label=from, style=dashed];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_58  [key=2, style=dotted];
m9_5 -> m9_9  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_60  [key=2, style=dotted];
m9_9 -> m9_61  [key=2, style=dotted];
m9_9 -> m9_62  [key=2, style=dotted];
m9_9 -> m9_12  [color=darkseagreen4, key=1, label=pager, style=dashed];
m9_9 -> m9_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m9_9 -> m9_54  [color=darkseagreen4, key=1, label=pager, style=dashed];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_59  [key=2, style=dotted];
m9_8 -> m9_10  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_63  [key=2, style=dotted];
m9_10 -> m9_19  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_14  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_65  [key=2, style=dotted];
m9_17 -> m9_66  [key=2, style=dotted];
m9_17 -> m9_67  [key=2, style=dotted];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_71  [key=2, style=dotted];
m9_54 -> m9_66  [key=2, style=dotted];
m9_54 -> m9_67  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_56  [key=2, style=dotted];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_53  [key=0, style=solid];
m9_19 -> m9_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_13 -> m9_55  [key=0, style=solid];
m9_13 -> m9_56  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_56  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_62  [key=2, style=dotted];
m9_15 -> m9_64  [key=2, style=dotted];
m9_16 -> m9_17  [key=0, style=solid];
m9_16 -> m9_56  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_56  [key=2, style=dotted];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_56  [key=2, style=dotted];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_56  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_64  [key=2, style=dotted];
m9_21 -> m9_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_21 -> m9_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_56  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_64  [key=2, style=dotted];
m9_23 -> m9_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_23 -> m9_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_56  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_29  [key=0, style=solid];
m9_25 -> m9_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_25 -> m9_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_25 -> m9_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_56  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_56  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_64  [key=2, style=dotted];
m9_27 -> m9_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_27 -> m9_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_62  [key=2, style=dotted];
m9_30 -> m9_64  [key=2, style=dotted];
m9_30 -> m9_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_30 -> m9_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_56  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_56  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_68  [key=2, style=dotted];
m9_32 -> m9_67  [key=2, style=dotted];
m9_32 -> m9_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_32 -> m9_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_56  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_36  [key=0, style=solid];
m9_34 -> m9_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_34 -> m9_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_56  [key=2, style=dotted];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_56  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_39  [key=0, style=solid];
m9_37 -> m9_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_37 -> m9_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_38 -> m9_52  [key=0, style=solid];
m9_38 -> m9_56  [key=2, style=dotted];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_56  [key=2, style=dotted];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_62  [key=2, style=dotted];
m9_40 -> m9_64  [key=2, style=dotted];
m9_40 -> m9_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_40 -> m9_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_56  [key=2, style=dotted];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_69  [key=2, style=dotted];
m9_42 -> m9_67  [key=2, style=dotted];
m9_42 -> m9_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_42 -> m9_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_56  [key=2, style=dotted];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_51  [key=0, style=solid];
m9_45 -> m9_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_45 -> m9_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_56  [key=2, style=dotted];
m9_46 -> m9_47  [key=0, style=solid];
m9_46 -> m9_56  [key=2, style=dotted];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_56  [key=2, style=dotted];
m9_47 -> m9_48  [key=0, style=solid];
m9_47 -> m9_70  [key=2, style=dotted];
m9_47 -> m9_64  [key=2, style=dotted];
m9_47 -> m9_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_47 -> m9_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_48 -> m9_49  [key=0, style=solid];
m9_48 -> m9_56  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_64  [key=2, style=dotted];
m9_49 -> m9_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_56  [key=2, style=dotted];
m9_52 -> m9_19  [key=0, style=solid];
m9_52 -> m9_56  [key=2, style=dotted];
m9_55 -> m9_0  [color=blue, key=0, style=bold];
m9_72 -> m9_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m9_72 -> m9_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.DeletedJobsPage", style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_6  [key=2, style=dotted];
m10_4 -> m10_7  [key=2, style=dotted];
m10_4 -> m10_8  [key=2, style=dotted];
m10_4 -> m10_9  [key=2, style=dotted];
m10_5 -> m10_3  [color=blue, key=0, style=bold];
m10_10 -> m10_1  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m10_10 -> m10_4  [color=darkseagreen4, key=1, label="HangFire.States.FailedState", style=dashed];
m11_22 -> m11_41  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m11_22 -> m11_50  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_37  [color=red, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m11_22 -> m11_46  [color=red, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m11_22 -> m11_60  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m11_22 -> m11_69  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_25  [key=2, style=dotted];
m11_24 -> m11_22  [color=blue, key=0, style=bold];
m11_36 -> m11_37  [color=green, key=0, style=solid];
m11_37 -> m11_38  [color=green, key=0, style=solid];
m11_37 -> m11_43  [color=green, key=2, style=dotted];
m11_38 -> m11_39  [color=green, key=0, style=solid];
m11_38 -> m11_22  [color=red, key=2, style=dotted];
m11_39 -> m11_40  [color=green, key=0, style=solid];
m11_39 -> m11_30  [color=green, key=2, style=dotted];
m11_40 -> m11_41  [color=green, key=0, style=solid];
m11_40 -> m11_44  [color=red, key=2, style=dotted];
m11_41 -> m11_42  [color=green, key=0, style=solid];
m11_41 -> m11_26  [color=green, key=2, style=dotted];
m11_42 -> m11_36  [color=blue, key=0, style=bold];
m11_0 -> m11_1  [color=green, key=0, style=solid];
m11_0 -> m11_16  [color=red, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m11_1 -> m11_2  [color=green, key=0, style=solid];
m11_1 -> m11_5  [color=green, key=2, style=dotted];
m11_2 -> m11_3  [color=green, key=0, style=solid];
m11_2 -> m11_6  [color=green, key=2, style=dotted];
m11_2 -> m11_7  [color=green, key=2, style=dotted];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_8  [key=2, style=dotted];
m11_4 -> m11_0  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_21  [key=2, style=dotted];
m11_20 -> m11_18  [color=blue, key=0, style=bold];
m11_26 -> m11_27  [key=0, style=solid];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_29  [key=2, style=dotted];
m11_28 -> m11_26  [color=blue, key=0, style=bold];
m11_59 -> m11_60  [color=green, key=0, style=solid];
m11_60 -> m11_61  [color=green, key=0, style=solid];
m11_60 -> m11_43  [color=green, key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_22  [key=2, style=dotted];
m11_62 -> m11_63  [key=0, style=solid];
m11_62 -> m11_30  [key=2, style=dotted];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_67  [key=2, style=dotted];
m11_64 -> m11_65  [key=0, style=solid];
m11_64 -> m11_44  [key=2, style=dotted];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_26  [key=2, style=dotted];
m11_66 -> m11_59  [color=blue, key=0, style=bold];
m11_68 -> m11_69  [key=0, style=solid];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_43  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_22  [key=2, style=dotted];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_30  [key=2, style=dotted];
m11_72 -> m11_73  [key=0, style=solid];
m11_72 -> m11_67  [key=2, style=dotted];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_35  [key=2, style=dotted];
m11_74 -> m11_75  [key=0, style=solid];
m11_74 -> m11_44  [key=2, style=dotted];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_26  [key=2, style=dotted];
m11_76 -> m11_68  [color=blue, key=0, style=bold];
m11_45 -> m11_46  [color=green, key=0, style=solid];
m11_46 -> m11_47  [color=green, key=0, style=solid];
m11_46 -> m11_43  [color=green, key=2, style=dotted];
m11_47 -> m11_48  [color=red, key=0, style=solid];
m11_47 -> m11_22  [color=red, key=2, style=dotted];
m11_48 -> m11_49  [color=red, key=0, style=solid];
m11_48 -> m11_30  [color=red, key=2, style=dotted];
m11_49 -> m11_50  [color=green, key=0, style=solid];
m11_49 -> m11_57  [color=red, key=2, style=dotted];
m11_49 -> m11_51  [color=green, key=1, label=table1, style=dashed];
m11_49 -> m11_52  [color=darkseagreen4, key=1, label=table1, style=dashed];
m11_49 -> m11_53  [color=green, key=1, label=table1, style=dashed];
m11_49 -> m11_54  [color=green, key=1, label=table1, style=dashed];
m11_50 -> m11_51  [color=green, key=0, style=solid];
m11_50 -> m11_58  [color=green, key=2, style=dotted];
m11_51 -> m11_52  [color=green, key=0, style=solid];
m11_51 -> m11_58  [color=green, key=2, style=dotted];
m11_52 -> m11_53  [color=green, key=0, style=solid];
m11_52 -> m11_58  [color=red, key=2, style=dotted];
m11_53 -> m11_54  [color=green, key=0, style=solid];
m11_53 -> m11_58  [color=green, key=2, style=dotted];
m11_54 -> m11_55  [color=green, key=0, style=solid];
m11_54 -> m11_44  [color=green, key=2, style=dotted];
m11_55 -> m11_56  [color=green, key=0, style=solid];
m11_55 -> m11_26  [color=green, key=2, style=dotted];
m11_56 -> m11_45  [color=blue, key=0, style=bold];
m11_9 -> m11_10  [key=0, style=solid];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_13  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_12 -> m11_9  [color=blue, key=0, style=bold];
m11_30 -> m11_31  [key=0, style=solid];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_34  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_35  [key=2, style=dotted];
m11_33 -> m11_30  [color=blue, key=0, style=bold];
m11_14 -> m11_15  [color=red, key=0, style=solid];
m11_15 -> m11_16  [color=red, key=0, style=solid];
m11_15 -> m11_17  [color=red, key=0, style=solid];
m11_16 -> m11_17  [color=red, key=0, style=solid];
m11_16 -> m11_0  [color=red, key=2, style=dotted];
m11_17 -> m11_14  [color=blue, key=0, style=bold];
m11_77 -> m11_38  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_39  [color=green, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_41  [color=green, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_47  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_48  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_55  [color=green, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_61  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_62  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_65  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_70  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_71  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m11_77 -> m11_75  [color=darkseagreen4, key=1, label="HangFire.Tests.States.FailedStateFeature", style=dashed];
m12_8 -> m12_9  [color=green, key=0, style=solid];
m12_9 -> m12_10  [color=green, key=0, style=solid];
m12_9 -> m12_13  [color=green, key=2, style=dotted];
m12_9 -> m12_11  [color=green, key=1, label=exception, style=dashed];
m12_10 -> m12_11  [color=green, key=0, style=solid];
m12_10 -> m12_7  [color=green, key=2, style=dotted];
m12_11 -> m12_12  [color=green, key=0, style=solid];
m12_11 -> m12_14  [color=green, key=2, style=dotted];
m12_11 -> m12_15  [color=green, key=2, style=dotted];
m12_12 -> m12_8  [color=blue, key=0, style=bold];
m12_16 -> m12_17  [color=green, key=0, style=solid];
m12_17 -> m12_18  [color=green, key=0, style=solid];
m12_17 -> m12_7  [color=green, key=2, style=dotted];
m12_17 -> m12_13  [color=green, key=2, style=dotted];
m12_18 -> m12_19  [color=green, key=0, style=solid];
m12_18 -> m12_14  [color=green, key=2, style=dotted];
m12_18 -> m12_20  [color=green, key=2, style=dotted];
m12_19 -> m12_16  [color=blue, key=0, style=bold];
m12_0 -> m12_1  [color=green, key=0, style=solid];
m12_1 -> m12_2  [color=green, key=0, style=solid];
m12_1 -> m12_3  [color=green, key=2, style=dotted];
m12_1 -> m12_4  [color=green, key=1, label="lambda expression", style=dashed];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_4 -> m12_5  [color=green, key=0, style=solid];
m12_5 -> m12_6  [color=green, key=0, style=solid];
m12_5 -> m12_7  [color=green, key=2, style=dotted];
m12_6 -> m12_4  [color=blue, key=0, style=bold];
m12_21 -> m12_22  [color=green, key=0, style=solid];
m12_22 -> m12_23  [color=green, key=0, style=solid];
m12_22 -> m12_7  [color=green, key=2, style=dotted];
m12_22 -> m12_26  [color=green, key=2, style=dotted];
m12_23 -> m12_24  [color=green, key=0, style=solid];
m12_23 -> m12_27  [color=green, key=2, style=dotted];
m12_24 -> m12_25  [color=green, key=0, style=solid];
m12_24 -> m12_28  [color=green, key=2, style=dotted];
m12_24 -> m12_29  [color=green, key=2, style=dotted];
m12_25 -> m12_21  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m14_28 -> m14_29  [key=0, style=solid];
m14_29 -> m14_28  [color=blue, key=0, style=bold];
m14_24 -> m14_25  [key=0, style=solid];
m14_25 -> m14_24  [color=blue, key=0, style=bold];
m14_8 -> m14_9  [key=0, style=solid];
m14_9 -> m14_8  [color=blue, key=0, style=bold];
m14_10 -> m14_11  [key=0, style=solid];
m14_11 -> m14_10  [color=blue, key=0, style=bold];
m14_6 -> m14_7  [key=0, style=solid];
m14_7 -> m14_6  [color=blue, key=0, style=bold];
m14_36 -> m14_37  [key=0, style=solid];
m14_37 -> m14_36  [color=blue, key=0, style=bold];
m14_38 -> m14_39  [key=0, style=solid];
m14_39 -> m14_38  [color=blue, key=0, style=bold];
m14_4 -> m14_5  [key=0, style=solid];
m14_5 -> m14_4  [color=blue, key=0, style=bold];
m14_32 -> m14_33  [key=0, style=solid];
m14_33 -> m14_32  [color=blue, key=0, style=bold];
m14_12 -> m14_13  [key=0, style=solid];
m14_13 -> m14_12  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m14_26 -> m14_27  [key=0, style=solid];
m14_27 -> m14_26  [color=blue, key=0, style=bold];
m14_30 -> m14_31  [key=0, style=solid];
m14_31 -> m14_30  [color=blue, key=0, style=bold];
m14_20 -> m14_21  [key=0, style=solid];
m14_21 -> m14_20  [color=blue, key=0, style=bold];
m14_34 -> m14_35  [key=0, style=solid];
m14_35 -> m14_34  [color=blue, key=0, style=bold];
m14_40 -> m14_41  [key=0, style=solid];
m14_41 -> m14_40  [color=blue, key=0, style=bold];
m14_22 -> m14_23  [key=0, style=solid];
m14_23 -> m14_22  [color=blue, key=0, style=bold];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_2  [color=blue, key=0, style=bold];
m14_18 -> m14_19  [key=0, style=solid];
m14_19 -> m14_18  [color=blue, key=0, style=bold];
m14_14 -> m14_15  [key=0, style=solid];
m14_15 -> m14_14  [color=blue, key=0, style=bold];
m14_16 -> m14_17  [key=0, style=solid];
m14_17 -> m14_16  [color=blue, key=0, style=bold];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_2  [color=blue, key=0, style=bold];
m15_6 -> m15_7  [key=0, style=solid];
m15_7 -> m15_6  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [color=blue, key=0, style=bold];
m15_12 -> m15_13  [key=0, style=solid];
m15_13 -> m15_12  [color=blue, key=0, style=bold];
m15_8 -> m15_9  [key=0, style=solid];
m15_9 -> m15_8  [color=blue, key=0, style=bold];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_4  [color=blue, key=0, style=bold];
m15_10 -> m15_11  [key=0, style=solid];
m15_11 -> m15_10  [color=blue, key=0, style=bold];
m15_14 -> m15_15  [key=0, style=solid];
m15_15 -> m15_14  [color=blue, key=0, style=bold];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_6  [color=blue, key=0, style=bold];
m16_4 -> m16_5  [key=0, style=solid];
m16_5 -> m16_4  [color=blue, key=0, style=bold];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_2  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [color=blue, key=0, style=bold];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_0 -> m19_3  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RouteCollection", style=dashed];
m19_0 -> m19_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m19_0 -> m19_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_0 -> m19_8  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m19_0 -> m19_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RouteCollection", style=dashed];
m19_0 -> m19_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_3  [key=0, style=solid];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_5  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_10 -> m19_11  [key=0, style=solid];
m19_2 -> m19_11  [key=0, style=solid];
m19_2 -> m19_12  [key=2, style=dotted];
m19_4 -> m19_11  [key=0, style=solid];
m19_4 -> m19_12  [key=2, style=dotted];
m19_6 -> m19_11  [key=0, style=solid];
m19_6 -> m19_12  [key=2, style=dotted];
m19_11 -> m19_0  [color=blue, key=0, style=bold];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_16  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m19_13 -> m19_18  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m19_13 -> m19_19  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m19_13 -> m19_21  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m19_14 -> m19_15  [key=0, style=solid];
m19_14 -> m19_24  [key=2, style=dotted];
m19_14 -> m19_21  [color=darkseagreen4, key=1, label=dispatcher, style=dashed];
m19_14 -> m19_22  [color=darkseagreen4, key=1, label=dispatcher, style=dashed];
m19_16 -> m19_23  [key=0, style=solid];
m19_16 -> m19_25  [key=2, style=dotted];
m19_18 -> m19_19  [key=0, style=solid];
m19_18 -> m19_17  [key=0, style=solid];
m19_18 -> m19_26  [key=2, style=dotted];
m19_19 -> m19_20  [key=0, style=solid];
m19_19 -> m19_19  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m19_19 -> m19_21  [color=darkseagreen4, key=1, label=IOwinContext, style=dashed];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_28  [key=2, style=dotted];
m19_15 -> m19_16  [key=0, style=solid];
m19_15 -> m19_17  [key=0, style=solid];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_29  [key=2, style=dotted];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_21  [key=0, style=solid];
m19_20 -> m19_23  [key=0, style=solid];
m19_20 -> m19_27  [key=2, style=dotted];
m19_23 -> m19_13  [color=blue, key=0, style=bold];
m19_30 -> m19_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m19_30 -> m19_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m19_30 -> m19_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m19_30 -> m19_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m19_30 -> m19_14  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m19_30 -> m19_17  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m19_30 -> m19_21  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardMiddleware", style=dashed];
m21_2 -> m21_3  [key=0, style=solid];
m21_3 -> m21_2  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_0  [color=blue, key=0, style=bold];
m21_4 -> m21_5  [key=0, style=solid];
m21_5 -> m21_4  [color=blue, key=0, style=bold];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [color=blue, key=0, style=bold];
m22_4 -> m22_5  [key=0, style=solid];
m22_5 -> m22_4  [color=blue, key=0, style=bold];
m22_2 -> m22_3  [key=0, style=solid];
m22_3 -> m22_2  [color=blue, key=0, style=bold];
m23_4 -> m23_5  [key=0, style=solid];
m23_5 -> m23_4  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_0  [color=blue, key=0, style=bold];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_2  [color=blue, key=0, style=bold];
m25_5 -> m25_1  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m25_5 -> m25_2  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m25_0 -> m25_1  [color=green, key=0, style=solid];
m25_0 -> m25_16  [color=darkorchid, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m25_1 -> m25_2  [color=green, key=0, style=solid];
m25_1 -> m25_5  [color=green, key=2, style=dotted];
m25_2 -> m25_3  [color=green, key=0, style=solid];
m25_2 -> m25_6  [color=green, key=2, style=dotted];
m25_2 -> m25_7  [color=green, key=2, style=dotted];
m25_2 -> m25_4  [key=2, style=dotted];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_8  [key=2, style=dotted];
m25_3 -> m25_0  [color=blue, key=0, style=bold];
m25_4 -> m25_0  [color=blue, key=0, style=bold];
m25_30 -> m25_31  [color=green, key=0, style=solid];
m25_31 -> m25_32  [color=green, key=0, style=solid];
m25_31 -> m25_38  [color=green, key=2, style=dotted];
m25_32 -> m25_22  [key=2, style=dotted];
m25_32 -> m25_33  [key=0, style=solid];
m25_36 -> m25_26  [key=2, style=dotted];
m25_36 -> m25_37  [key=0, style=solid];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_39  [key=2, style=dotted];
m25_35 -> m25_36  [key=0, style=solid];
m25_35 -> m25_41  [key=2, style=dotted];
m25_34 -> m25_35  [key=0, style=solid];
m25_34 -> m25_40  [key=2, style=dotted];
m25_37 -> m25_30  [color=blue, key=0, style=bold];
m25_42 -> m25_43  [color=green, key=0, style=solid];
m25_43 -> m25_44  [color=green, key=0, style=solid];
m25_43 -> m25_38  [color=green, key=2, style=dotted];
m25_44 -> m25_22  [key=2, style=dotted];
m25_44 -> m25_45  [key=0, style=solid];
m25_48 -> m25_26  [key=2, style=dotted];
m25_48 -> m25_49  [key=0, style=solid];
m25_45 -> m25_46  [key=0, style=solid];
m25_45 -> m25_39  [key=2, style=dotted];
m25_47 -> m25_48  [key=0, style=solid];
m25_47 -> m25_41  [key=2, style=dotted];
m25_46 -> m25_47  [key=0, style=solid];
m25_46 -> m25_40  [key=2, style=dotted];
m25_49 -> m25_42  [color=blue, key=0, style=bold];
m25_22 -> m25_31  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m25_22 -> m25_43  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m25_22 -> m25_23  [key=0, style=solid];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_25  [key=2, style=dotted];
m25_24 -> m25_22  [color=blue, key=0, style=bold];
m25_14 -> m25_15  [key=0, style=solid];
m25_16 -> m25_0  [key=2, style=dotted];
m25_16 -> m25_17  [key=0, style=solid];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_17  [key=0, style=solid];
m25_17 -> m25_14  [color=blue, key=0, style=bold];
m25_26 -> m25_27  [color=green, key=0, style=solid];
m25_27 -> m25_28  [color=green, key=0, style=solid];
m25_27 -> m25_29  [color=green, key=2, style=dotted];
m25_28 -> m25_26  [color=blue, key=0, style=bold];
m25_50 -> m25_32  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorFeature", style=dashed];
m25_50 -> m25_44  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorFeature", style=dashed];
m25_50 -> m25_36  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorFeature", style=dashed];
m25_50 -> m25_48  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorFeature", style=dashed];
m26_50 -> m26_51  [key=0, style=solid];
m26_51 -> m26_52  [key=0, style=solid];
m26_52 -> m26_50  [color=blue, key=0, style=bold];
m26_14 -> m26_15  [color=green, key=0, style=solid];
m26_14 -> m26_16  [color=green, key=2, style=dotted];
m26_14 -> m26_17  [color=green, key=2, style=dotted];
m26_15 -> m26_16  [key=0, style=solid];
m26_15 -> m26_17  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_15 -> m26_20  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_15 -> m26_23  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_15 -> m26_26  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_15 -> m26_13  [color=blue, key=0, style=bold];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_37  [key=2, style=dotted];
m26_16 -> m26_18  [color=darkseagreen4, key=1, label=connection, style=dashed];
m26_16 -> m26_26  [color=darkseagreen4, key=1, label=connection, style=dashed];
m26_16 -> m26_27  [color=darkseagreen4, key=1, label=connection, style=dashed];
m26_17 -> m26_18  [key=0, style=solid];
m26_17 -> m26_38  [key=2, style=dotted];
m26_17 -> m26_22  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m26_17 -> m26_24  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m26_17 -> m26_26  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m26_17 -> m26_27  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m26_17 -> m26_29  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m26_17 -> m26_30  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m26_17 -> m26_32  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m26_17 -> m26_34  [color=darkseagreen4, key=1, label=fetchedJob, style=dashed];
m26_20 -> m26_21  [color=green, key=0, style=solid];
m26_20 -> m26_41  [key=2, style=dotted];
m26_20 -> m26_22  [color=darkseagreen4, key=1, label=linkedCts, style=dashed];
m26_20 -> m26_23  [color=green, key=2, style=dotted];
m26_20 -> m26_24  [color=green, key=2, style=dotted];
m26_23 -> m26_24  [key=0, style=solid];
m26_23 -> m26_44  [key=2, style=dotted];
m26_23 -> m26_23  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_23 -> m26_26  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m26_26 -> m26_27  [key=0, style=solid];
m26_26 -> m26_46  [key=2, style=dotted];
m26_18 -> m26_19  [color=green, key=0, style=solid];
m26_18 -> m26_39  [key=2, style=dotted];
m26_18 -> m26_22  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m26_18 -> m26_29  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m26_18 -> m26_20  [color=green, key=1, label=string, style=dashed];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_47  [key=2, style=dotted];
m26_27 -> m26_29  [color=darkseagreen4, key=1, label=state, style=dashed];
m26_22 -> m26_23  [key=0, style=solid];
m26_22 -> m26_26  [key=0, style=solid];
m26_22 -> m26_43  [key=2, style=dotted];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_45  [key=2, style=dotted];
m26_29 -> m26_30  [key=0, style=solid];
m26_29 -> m26_48  [key=2, style=dotted];
m26_30 -> m26_31  [key=0, style=solid];
m26_30 -> m26_33  [key=0, style=solid];
m26_30 -> m26_36  [key=0, style=solid];
m26_30 -> m26_45  [key=2, style=dotted];
m26_32 -> m26_36  [key=0, style=solid];
m26_32 -> m26_45  [key=2, style=dotted];
m26_34 -> m26_35  [key=0, style=solid];
m26_34 -> m26_49  [key=2, style=dotted];
m26_19 -> m26_20  [color=green, key=0, style=solid];
m26_19 -> m26_40  [key=2, style=dotted];
m26_19 -> m26_22  [color=green, key=2, style=dotted];
m26_21 -> m26_22  [key=0, style=solid];
m26_21 -> m26_42  [key=2, style=dotted];
m26_21 -> m26_18  [color=blue, key=0, style=bold];
m26_25 -> m26_36  [key=0, style=solid];
m26_25 -> m26_14  [color=green, key=1, label="HangFire.Tests.JobActivatorSteps", style=dashed];
m26_25 -> m26_19  [color=green, key=1, label="HangFire.Tests.JobActivatorSteps", style=dashed];
m26_25 -> m26_20  [color=green, key=1, label="HangFire.Tests.JobActivatorSteps", style=dashed];
m26_25 -> m26_7  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorSteps", style=dashed];
m26_25 -> m26_9  [color=darkseagreen4, key=1, label="HangFire.Tests.JobActivatorSteps", style=dashed];
m26_28 -> m26_29  [key=0, style=solid];
m26_28 -> m26_30  [key=0, style=solid];
m26_31 -> m26_32  [key=0, style=solid];
m26_33 -> m26_34  [key=0, style=solid];
m26_35 -> m26_36  [key=0, style=solid];
m26_36 -> m26_15  [color=blue, key=0, style=bold];
m26_11 -> m26_12  [key=0, style=solid];
m26_12 -> m26_13  [key=0, style=solid];
m26_13 -> m26_14  [color=green, key=0, style=solid];
m26_13 -> m26_0  [color=blue, key=0, style=bold];
m26_47 -> m26_53  [key=0, style=solid];
m26_47 -> m26_57  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_53 -> m26_54  [key=0, style=solid];
m26_53 -> m26_70  [key=2, style=dotted];
m26_53 -> m26_56  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m26_53 -> m26_57  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m26_53 -> m26_58  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m26_53 -> m26_60  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m26_57 -> m26_58  [key=0, style=solid];
m26_57 -> m26_72  [key=2, style=dotted];
m26_57 -> m26_60  [color=darkseagreen4, key=1, label=performContext, style=dashed];
m26_54 -> m26_55  [key=0, style=solid];
m26_54 -> m26_56  [key=0, style=solid];
m26_56 -> m26_57  [key=0, style=solid];
m26_56 -> m26_71  [key=2, style=dotted];
m26_58 -> m26_59  [key=0, style=solid];
m26_58 -> m26_62  [color=darkseagreen4, key=1, label=latency, style=dashed];
m26_60 -> m26_61  [key=0, style=solid];
m26_60 -> m26_74  [key=2, style=dotted];
m26_60 -> m26_62  [color=darkseagreen4, key=1, label=result, style=dashed];
m26_55 -> m26_69  [key=0, style=solid];
m26_59 -> m26_60  [key=0, style=solid];
m26_59 -> m26_73  [key=2, style=dotted];
m26_59 -> m26_61  [color=darkseagreen4, key=1, label=duration, style=dashed];
m26_59 -> m26_62  [color=darkseagreen4, key=1, label=duration, style=dashed];
m26_62 -> m26_69  [key=0, style=solid];
m26_62 -> m26_76  [key=2, style=dotted];
m26_61 -> m26_62  [key=0, style=solid];
m26_61 -> m26_75  [key=2, style=dotted];
m26_63 -> m26_64  [key=0, style=solid];
m26_64 -> m26_69  [key=0, style=solid];
m26_65 -> m26_66  [key=0, style=solid];
m26_66 -> m26_69  [key=0, style=solid];
m26_66 -> m26_77  [key=2, style=dotted];
m26_67 -> m26_68  [key=0, style=solid];
m26_68 -> m26_69  [key=0, style=solid];
m26_68 -> m26_77  [key=2, style=dotted];
m26_69 -> m26_47  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [color=red, key=0, style=solid];
m26_0 -> m26_3  [color=red, key=1, label="Hangfire.JobStorage", style=dashed];
m26_0 -> m26_5  [color=darkseagreen4, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m26_0 -> m26_7  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m26_0 -> m26_9  [color=darkseagreen4, key=1, label="Hangfire.Server.WorkerContext", style=dashed];
m26_0 -> m26_10  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m26_0 -> m26_11  [color=darkseagreen4, key=1, label="Hangfire.Server.IJobPerformanceProcess", style=dashed];
m26_0 -> m26_12  [color=darkseagreen4, key=1, label="Hangfire.States.IStateMachineFactory", style=dashed];
m26_0 -> m26_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_0 -> m26_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m26_1 -> m26_2  [color=red, key=0, style=solid];
m26_1 -> m26_3  [color=red, key=0, style=solid];
m26_1 -> m26_7  [color=darkseagreen4, key=1, label=jobType, style=dashed];
m26_1 -> m26_1  [color=darkorchid, key=3, label="Local variable System.Type jobType", style=bold];
m26_3 -> m26_4  [color=red, key=0, style=solid];
m26_3 -> m26_5  [color=red, key=0, style=solid];
m26_3 -> m26_7  [color=darkseagreen4, key=1, label=jobType, style=dashed];
m26_3 -> m26_6  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_7  [key=0, style=solid];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_9  [key=0, style=solid];
m26_7 -> m26_10  [key=0, style=solid];
m26_7 -> m26_12  [key=2, style=dotted];
m26_9 -> m26_10  [key=0, style=solid];
m26_10 -> m26_11  [key=0, style=solid];
m26_10 -> m26_0  [color=blue, key=0, style=bold];
m26_2 -> m26_13  [color=red, key=0, style=solid];
m26_2 -> m26_14  [color=red, key=2, style=dotted];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_4  [key=0, style=solid];
m26_4 -> m26_13  [color=red, key=0, style=solid];
m26_4 -> m26_14  [color=red, key=2, style=dotted];
m26_4 -> m26_5  [key=0, style=solid];
m26_4 -> m26_6  [key=0, style=solid];
m26_6 -> m26_13  [key=0, style=solid];
m26_6 -> m26_14  [key=2, style=dotted];
m26_6 -> m26_7  [key=0, style=solid];
m26_6 -> m26_11  [key=2, style=dotted];
m26_8 -> m26_13  [key=0, style=solid];
m26_8 -> m26_14  [key=2, style=dotted];
m26_8 -> m26_9  [key=0, style=solid];
m26_78 -> m26_9  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_10  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_11  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_12  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_16  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_17  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_18  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_21  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_26  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_27  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_51  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_57  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m26_78 -> m26_60  [color=darkseagreen4, key=1, label="Hangfire.Server.Worker", style=dashed];
m27_19 -> m27_20  [key=0, style=solid];
m27_19 -> m27_21  [key=2, style=dotted];
m27_29 -> m27_30  [color=green, key=0, style=solid];
m27_29 -> m27_31  [color=green, key=0, style=solid];
m27_86 -> m27_87  [key=0, style=solid];
m27_87 -> m27_88  [key=0, style=solid];
m27_87 -> m27_42  [key=2, style=dotted];
m27_88 -> m27_89  [key=0, style=solid];
m27_88 -> m27_22  [key=2, style=dotted];
m27_89 -> m27_90  [key=0, style=solid];
m27_89 -> m27_30  [key=2, style=dotted];
m27_90 -> m27_91  [key=0, style=solid];
m27_90 -> m27_43  [key=2, style=dotted];
m27_91 -> m27_92  [key=0, style=solid];
m27_91 -> m27_44  [key=2, style=dotted];
m27_92 -> m27_93  [key=0, style=solid];
m27_92 -> m27_26  [key=2, style=dotted];
m27_93 -> m27_86  [color=blue, key=0, style=bold];
m27_27 -> m27_28  [key=0, style=solid];
m27_27 -> m27_29  [key=2, style=dotted];
m27_30 -> m27_31  [key=0, style=solid];
m27_30 -> m27_40  [color=green, key=0, style=solid];
m27_31 -> m27_32  [color=green, key=0, style=solid];
m27_31 -> m27_33  [key=2, style=dotted];
m27_32 -> m27_30  [color=blue, key=0, style=bold];
m27_32 -> m27_33  [color=green, key=0, style=solid];
m27_32 -> m27_20  [color=green, key=2, style=dotted];
m27_32 -> m27_34  [color=green, key=1, label=parameters, style=dashed];
m27_32 -> m27_35  [color=green, key=1, label=parameters, style=dashed];
m27_32 -> m27_36  [color=green, key=1, label=parameters, style=dashed];
m27_32 -> m27_37  [color=green, key=1, label=parameters, style=dashed];
m27_94 -> m27_95  [key=0, style=solid];
m27_95 -> m27_96  [key=0, style=solid];
m27_95 -> m27_42  [key=2, style=dotted];
m27_96 -> m27_97  [key=0, style=solid];
m27_96 -> m27_22  [key=2, style=dotted];
m27_97 -> m27_98  [key=0, style=solid];
m27_97 -> m27_30  [key=2, style=dotted];
m27_98 -> m27_99  [key=0, style=solid];
m27_98 -> m27_43  [key=2, style=dotted];
m27_99 -> m27_100  [key=0, style=solid];
m27_99 -> m27_44  [key=2, style=dotted];
m27_100 -> m27_101  [key=0, style=solid];
m27_100 -> m27_26  [key=2, style=dotted];
m27_101 -> m27_94  [color=blue, key=0, style=bold];
m27_5 -> m27_6  [key=0, style=solid];
m27_18 -> m27_19  [key=0, style=solid];
m27_20 -> m27_18  [color=blue, key=0, style=bold];
m27_23 -> m27_24  [key=0, style=solid];
m27_23 -> m27_25  [key=2, style=dotted];
m27_34 -> m27_35  [color=green, key=0, style=solid];
m27_34 -> m27_21  [color=green, key=2, style=dotted];
m27_35 -> m27_36  [key=0, style=solid];
m27_35 -> m27_42  [key=2, style=dotted];
m27_35 -> m27_21  [key=2, style=dotted];
m27_36 -> m27_37  [key=0, style=solid];
m27_36 -> m27_22  [key=2, style=dotted];
m27_37 -> m27_38  [key=0, style=solid];
m27_37 -> m27_30  [key=2, style=dotted];
m27_37 -> m27_39  [color=green, key=1, label=releaseResult, style=dashed];
m27_37 -> m27_23  [key=2, style=dotted];
m27_38 -> m27_39  [color=green, key=0, style=solid];
m27_38 -> m27_43  [key=2, style=dotted];
m27_38 -> m27_40  [key=0, style=solid];
m27_39 -> m27_40  [color=green, key=0, style=solid];
m27_39 -> m27_44  [key=2, style=dotted];
m27_39 -> m27_24  [color=green, key=2, style=dotted];
m27_39 -> m27_26  [color=green, key=2, style=dotted];
m27_40 -> m27_41  [key=0, style=solid];
m27_40 -> m27_26  [key=2, style=dotted];
m27_40 -> m27_28  [color=blue, key=0, style=bold];
m27_41 -> m27_34  [color=blue, key=0, style=bold];
m27_41 -> m27_29  [color=green, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m27_41 -> m27_31  [color=green, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m27_41 -> m27_33  [color=green, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m27_41 -> m27_39  [color=green, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m27_41 -> m27_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m27_41 -> m27_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m27_41 -> m27_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m27_41 -> m27_16  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m27_41 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m27_13 -> m27_22  [key=2, style=dotted];
m27_13 -> m27_14  [key=0, style=solid];
m27_7 -> m27_20  [key=2, style=dotted];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_9  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m27_7 -> m27_10  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m27_7 -> m27_11  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m27_7 -> m27_12  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m27_7 -> m27_13  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m27_7 -> m27_14  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_16  [color=red, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m27_0 -> m27_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m27_0 -> m27_6  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m27_0 -> m27_3  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m27_0 -> m27_13  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_5  [key=2, style=dotted];
m27_1 -> m27_3  [key=0, style=solid];
m27_1 -> m27_18  [key=2, style=dotted];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_6  [key=2, style=dotted];
m27_2 -> m27_7  [key=2, style=dotted];
m27_2 -> m27_17  [key=0, style=solid];
m27_2 -> m27_19  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_8  [key=2, style=dotted];
m27_3 -> m27_5  [key=0, style=solid];
m27_4 -> m27_0  [color=blue, key=0, style=bold];
m27_4 -> m27_17  [key=0, style=solid];
m27_4 -> m27_19  [key=2, style=dotted];
m27_45 -> m27_46  [key=0, style=solid];
m27_46 -> m27_47  [key=0, style=solid];
m27_46 -> m27_42  [key=2, style=dotted];
m27_47 -> m27_48  [key=0, style=solid];
m27_47 -> m27_22  [key=2, style=dotted];
m27_48 -> m27_49  [key=0, style=solid];
m27_48 -> m27_30  [key=2, style=dotted];
m27_49 -> m27_50  [key=0, style=solid];
m27_49 -> m27_43  [key=2, style=dotted];
m27_50 -> m27_51  [key=0, style=solid];
m27_50 -> m27_55  [key=2, style=dotted];
m27_50 -> m27_52  [color=darkseagreen4, key=1, label=table1, style=dashed];
m27_51 -> m27_52  [key=0, style=solid];
m27_51 -> m27_56  [key=2, style=dotted];
m27_52 -> m27_53  [key=0, style=solid];
m27_52 -> m27_44  [key=2, style=dotted];
m27_53 -> m27_54  [key=0, style=solid];
m27_53 -> m27_26  [key=2, style=dotted];
m27_54 -> m27_45  [color=blue, key=0, style=bold];
m27_24 -> m27_22  [color=blue, key=0, style=bold];
m27_78 -> m27_79  [key=0, style=solid];
m27_79 -> m27_80  [key=0, style=solid];
m27_79 -> m27_42  [key=2, style=dotted];
m27_80 -> m27_81  [key=0, style=solid];
m27_80 -> m27_22  [key=2, style=dotted];
m27_81 -> m27_82  [key=0, style=solid];
m27_81 -> m27_30  [key=2, style=dotted];
m27_82 -> m27_83  [key=0, style=solid];
m27_82 -> m27_43  [key=2, style=dotted];
m27_83 -> m27_84  [key=0, style=solid];
m27_83 -> m27_44  [key=2, style=dotted];
m27_84 -> m27_85  [key=0, style=solid];
m27_84 -> m27_26  [key=2, style=dotted];
m27_85 -> m27_78  [color=blue, key=0, style=bold];
m27_9 -> m27_10  [key=0, style=solid];
m27_9 -> m27_21  [key=2, style=dotted];
m27_10 -> m27_11  [key=0, style=solid];
m27_10 -> m27_13  [key=2, style=dotted];
m27_10 -> m27_21  [key=2, style=dotted];
m27_11 -> m27_12  [key=0, style=solid];
m27_11 -> m27_21  [key=2, style=dotted];
m27_12 -> m27_9  [color=blue, key=0, style=bold];
m27_12 -> m27_21  [key=2, style=dotted];
m27_12 -> m27_13  [key=0, style=solid];
m27_6 -> m27_7  [key=0, style=solid];
m27_8 -> m27_21  [key=2, style=dotted];
m27_8 -> m27_9  [key=0, style=solid];
m27_16 -> m27_24  [key=2, style=dotted];
m27_16 -> m27_26  [key=2, style=dotted];
m27_16 -> m27_17  [color=red, key=0, style=solid];
m27_16 -> m27_25  [key=2, style=dotted];
m27_16 -> m27_27  [key=2, style=dotted];
m27_16 -> m27_0  [color=red, key=2, style=dotted];
m27_14 -> m27_16  [color=darkseagreen4, key=1, label=lockResult, style=dashed];
m27_14 -> m27_23  [key=2, style=dotted];
m27_14 -> m27_15  [color=red, key=0, style=solid];
m27_15 -> m27_16  [color=red, key=0, style=solid];
m27_15 -> m27_17  [color=red, key=0, style=solid];
m27_17 -> m27_0  [color=blue, key=0, style=bold];
m27_17 -> m27_14  [color=blue, key=0, style=bold];
m27_57 -> m27_58  [key=0, style=solid];
m27_58 -> m27_59  [key=0, style=solid];
m27_58 -> m27_42  [key=2, style=dotted];
m27_59 -> m27_60  [key=0, style=solid];
m27_59 -> m27_22  [key=2, style=dotted];
m27_60 -> m27_61  [key=0, style=solid];
m27_60 -> m27_30  [key=2, style=dotted];
m27_61 -> m27_62  [key=0, style=solid];
m27_61 -> m27_43  [key=2, style=dotted];
m27_62 -> m27_63  [key=0, style=solid];
m27_62 -> m27_55  [key=2, style=dotted];
m27_62 -> m27_64  [color=darkseagreen4, key=1, label=table2, style=dashed];
m27_63 -> m27_64  [key=0, style=solid];
m27_63 -> m27_56  [key=2, style=dotted];
m27_64 -> m27_65  [key=0, style=solid];
m27_64 -> m27_44  [key=2, style=dotted];
m27_65 -> m27_66  [key=0, style=solid];
m27_65 -> m27_26  [key=2, style=dotted];
m27_66 -> m27_57  [color=blue, key=0, style=bold];
m27_67 -> m27_68  [key=0, style=solid];
m27_68 -> m27_69  [key=0, style=solid];
m27_68 -> m27_42  [key=2, style=dotted];
m27_69 -> m27_70  [key=0, style=solid];
m27_69 -> m27_22  [key=2, style=dotted];
m27_70 -> m27_71  [key=0, style=solid];
m27_70 -> m27_30  [key=2, style=dotted];
m27_71 -> m27_72  [key=0, style=solid];
m27_71 -> m27_55  [key=2, style=dotted];
m27_71 -> m27_73  [color=darkseagreen4, key=1, label=table3, style=dashed];
m27_71 -> m27_74  [color=darkseagreen4, key=1, label=table3, style=dashed];
m27_72 -> m27_73  [key=0, style=solid];
m27_72 -> m27_56  [key=2, style=dotted];
m27_73 -> m27_74  [key=0, style=solid];
m27_73 -> m27_56  [key=2, style=dotted];
m27_74 -> m27_75  [key=0, style=solid];
m27_74 -> m27_43  [key=2, style=dotted];
m27_75 -> m27_76  [key=0, style=solid];
m27_75 -> m27_44  [key=2, style=dotted];
m27_76 -> m27_77  [key=0, style=solid];
m27_76 -> m27_26  [key=2, style=dotted];
m27_77 -> m27_67  [color=blue, key=0, style=bold];
m27_22 -> m27_23  [key=0, style=solid];
m27_22 -> m27_35  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m27_22 -> m27_46  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m27_22 -> m27_58  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m27_22 -> m27_68  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m27_22 -> m27_79  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m27_22 -> m27_87  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m27_22 -> m27_95  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m27_22 -> m27_103  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m27_22 -> m27_111  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m27_22 -> m27_119  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m27_33 -> m27_34  [color=green, key=0, style=solid];
m27_33 -> m27_21  [color=green, key=2, style=dotted];
m27_102 -> m27_103  [key=0, style=solid];
m27_103 -> m27_104  [key=0, style=solid];
m27_103 -> m27_42  [key=2, style=dotted];
m27_104 -> m27_105  [key=0, style=solid];
m27_104 -> m27_22  [key=2, style=dotted];
m27_105 -> m27_106  [key=0, style=solid];
m27_105 -> m27_30  [key=2, style=dotted];
m27_106 -> m27_107  [key=0, style=solid];
m27_106 -> m27_43  [key=2, style=dotted];
m27_107 -> m27_108  [key=0, style=solid];
m27_107 -> m27_44  [key=2, style=dotted];
m27_108 -> m27_109  [key=0, style=solid];
m27_108 -> m27_26  [key=2, style=dotted];
m27_109 -> m27_102  [color=blue, key=0, style=bold];
m27_28 -> m27_29  [color=green, key=0, style=solid];
m27_28 -> m27_26  [color=blue, key=0, style=bold];
m27_26 -> m27_27  [key=0, style=solid];
m27_118 -> m27_119  [key=0, style=solid];
m27_119 -> m27_120  [key=0, style=solid];
m27_119 -> m27_42  [key=2, style=dotted];
m27_120 -> m27_121  [key=0, style=solid];
m27_120 -> m27_22  [key=2, style=dotted];
m27_121 -> m27_122  [key=0, style=solid];
m27_121 -> m27_30  [key=2, style=dotted];
m27_122 -> m27_123  [key=0, style=solid];
m27_122 -> m27_43  [key=2, style=dotted];
m27_123 -> m27_124  [key=0, style=solid];
m27_123 -> m27_44  [key=2, style=dotted];
m27_124 -> m27_125  [key=0, style=solid];
m27_124 -> m27_26  [key=2, style=dotted];
m27_125 -> m27_118  [color=blue, key=0, style=bold];
m27_110 -> m27_111  [key=0, style=solid];
m27_111 -> m27_112  [key=0, style=solid];
m27_111 -> m27_42  [key=2, style=dotted];
m27_112 -> m27_113  [key=0, style=solid];
m27_112 -> m27_22  [key=2, style=dotted];
m27_113 -> m27_114  [key=0, style=solid];
m27_113 -> m27_30  [key=2, style=dotted];
m27_114 -> m27_115  [key=0, style=solid];
m27_114 -> m27_43  [key=2, style=dotted];
m27_115 -> m27_116  [key=0, style=solid];
m27_115 -> m27_44  [key=2, style=dotted];
m27_116 -> m27_117  [key=0, style=solid];
m27_116 -> m27_26  [key=2, style=dotted];
m27_117 -> m27_110  [color=blue, key=0, style=bold];
m27_126 -> m27_36  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_37  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_40  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_47  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_48  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_53  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_59  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_60  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_65  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_69  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_70  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_76  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_80  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_81  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_84  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_88  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_89  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_92  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_96  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_97  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_100  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_104  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_105  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_108  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_112  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_113  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_116  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_120  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_121  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m27_126 -> m27_124  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientFeature", style=dashed];
m28_49 -> m28_50  [key=0, style=solid];
m28_49 -> m28_52  [key=0, style=solid];
m28_49 -> m28_55  [key=2, style=dotted];
m28_13 -> m28_45  [key=2, style=dotted];
m28_13 -> m28_14  [key=0, style=solid];
m28_19 -> m28_42  [color=green, key=0, style=solid];
m28_19 -> m28_45  [color=green, key=2, style=dotted];
m28_27 -> m28_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_50  [key=2, style=dotted];
m28_27 -> m28_51  [key=2, style=dotted];
m28_27 -> m28_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_44 -> m28_45  [key=0, style=solid];
m28_44 -> m28_0  [color=blue, key=0, style=bold];
m28_45 -> m28_46  [key=0, style=solid];
m28_45 -> m28_53  [key=2, style=dotted];
m28_46 -> m28_47  [key=0, style=solid];
m28_46 -> m28_28  [key=2, style=dotted];
m28_47 -> m28_48  [key=0, style=solid];
m28_47 -> m28_54  [key=2, style=dotted];
m28_48 -> m28_49  [key=0, style=solid];
m28_48 -> m28_37  [key=2, style=dotted];
m28_50 -> m28_51  [key=0, style=solid];
m28_51 -> m28_52  [key=0, style=solid];
m28_51 -> m28_56  [key=2, style=dotted];
m28_52 -> m28_44  [color=blue, key=0, style=bold];
m28_17 -> m28_18  [color=green, key=0, style=solid];
m28_17 -> m28_45  [key=2, style=dotted];
m28_21 -> m28_22  [color=green, key=0, style=solid];
m28_21 -> m28_41  [key=0, style=solid];
m28_21 -> m28_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_22 -> m28_23  [color=green, key=0, style=solid];
m28_22 -> m28_45  [color=green, key=2, style=dotted];
m28_23 -> m28_24  [key=0, style=solid];
m28_23 -> m28_26  [key=2, style=dotted];
m28_23 -> m28_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_23 -> m28_49  [key=2, style=dotted];
m28_23 -> m28_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_24 -> m28_25  [key=0, style=solid];
m28_24 -> m28_27  [key=2, style=dotted];
m28_24 -> m28_45  [key=2, style=dotted];
m28_25 -> m28_22  [color=blue, key=0, style=bold];
m28_25 -> m28_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_25 -> m28_26  [key=0, style=solid];
m28_25 -> m28_48  [key=2, style=dotted];
m28_25 -> m28_49  [key=2, style=dotted];
m28_25 -> m28_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_53 -> m28_57  [key=0, style=solid];
m28_15 -> m28_45  [key=2, style=dotted];
m28_15 -> m28_16  [key=0, style=solid];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_49  [key=2, style=dotted];
m28_34 -> m28_35  [key=0, style=solid];
m28_34 -> m28_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_34 -> m28_40  [key=0, style=solid];
m28_34 -> m28_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_26 -> m28_45  [key=2, style=dotted];
m28_26 -> m28_27  [key=0, style=solid];
m28_33 -> m28_45  [key=2, style=dotted];
m28_33 -> m28_34  [key=0, style=solid];
m28_35 -> m28_45  [key=2, style=dotted];
m28_35 -> m28_36  [key=0, style=solid];
m28_37 -> m28_38  [key=0, style=solid];
m28_37 -> m28_45  [key=2, style=dotted];
m28_38 -> m28_39  [key=0, style=solid];
m28_38 -> m28_42  [key=2, style=dotted];
m28_38 -> m28_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_38 -> m28_49  [key=2, style=dotted];
m28_39 -> m28_40  [key=0, style=solid];
m28_39 -> m28_42  [key=2, style=dotted];
m28_39 -> m28_45  [key=2, style=dotted];
m28_40 -> m28_41  [key=0, style=solid];
m28_40 -> m28_43  [key=2, style=dotted];
m28_40 -> m28_45  [key=2, style=dotted];
m28_40 -> m28_21  [key=0, style=solid];
m28_41 -> m28_37  [color=blue, key=0, style=bold];
m28_41 -> m28_42  [key=0, style=solid];
m28_41 -> m28_45  [key=2, style=dotted];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m28_0 -> m28_3  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m28_0 -> m28_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m28_0 -> m28_6  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m28_0 -> m28_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_0 -> m28_9  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_45  [key=2, style=dotted];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_46  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_8  [color=darkseagreen4, key=1, label=queues, style=dashed];
m28_3 -> m28_47  [key=2, style=dotted];
m28_3 -> m28_5  [color=darkseagreen4, key=1, label=queues, style=dashed];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_6  [key=0, style=solid];
m28_4 -> m28_45  [key=2, style=dotted];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_8  [key=0, style=solid];
m28_6 -> m28_14  [key=2, style=dotted];
m28_6 -> m28_6  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m28_6 -> m28_45  [key=2, style=dotted];
m28_6 -> m28_44  [key=0, style=solid];
m28_8 -> m28_9  [key=0, style=solid];
m28_8 -> m28_16  [key=2, style=dotted];
m28_8 -> m28_17  [key=2, style=dotted];
m28_8 -> m28_18  [color=green, key=1, label=queue, style=dashed];
m28_8 -> m28_43  [key=0, style=solid];
m28_8 -> m28_10  [color=darkseagreen4, key=1, label=queue, style=dashed];
m28_8 -> m28_12  [color=darkseagreen4, key=1, label=queue, style=dashed];
m28_8 -> m28_14  [color=darkseagreen4, key=1, label=queue, style=dashed];
m28_8 -> m28_21  [color=darkseagreen4, key=1, label=queue, style=dashed];
m28_9 -> m28_10  [key=0, style=solid];
m28_9 -> m28_18  [key=2, style=dotted];
m28_9 -> m28_19  [key=2, style=dotted];
m28_9 -> m28_45  [key=2, style=dotted];
m28_5 -> m28_12  [key=0, style=solid];
m28_5 -> m28_13  [key=2, style=dotted];
m28_5 -> m28_7  [key=0, style=solid];
m28_5 -> m28_6  [key=0, style=solid];
m28_7 -> m28_12  [key=0, style=solid];
m28_7 -> m28_15  [key=2, style=dotted];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_45  [key=2, style=dotted];
m28_10 -> m28_11  [key=0, style=solid];
m28_10 -> m28_20  [key=2, style=dotted];
m28_10 -> m28_48  [key=2, style=dotted];
m28_10 -> m28_49  [key=2, style=dotted];
m28_11 -> m28_12  [key=0, style=solid];
m28_11 -> m28_21  [key=2, style=dotted];
m28_11 -> m28_45  [key=2, style=dotted];
m28_12 -> m28_0  [color=blue, key=0, style=bold];
m28_12 -> m28_13  [key=0, style=solid];
m28_12 -> m28_49  [key=2, style=dotted];
m28_42 -> m28_8  [key=0, style=solid];
m28_42 -> m28_45  [key=2, style=dotted];
m28_57 -> m28_58  [key=0, style=solid];
m28_57 -> m28_65  [key=2, style=dotted];
m28_57 -> m28_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m28_57 -> m28_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m28_57 -> m28_63  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m28_58 -> m28_59  [key=0, style=solid];
m28_58 -> m28_66  [key=2, style=dotted];
m28_58 -> m28_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_59 -> m28_60  [key=0, style=solid];
m28_59 -> m28_66  [key=2, style=dotted];
m28_59 -> m28_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_62 -> m28_60  [key=0, style=solid];
m28_62 -> m28_66  [key=2, style=dotted];
m28_62 -> m28_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_63 -> m28_64  [key=0, style=solid];
m28_63 -> m28_67  [key=2, style=dotted];
m28_60 -> m28_61  [key=0, style=solid];
m28_60 -> m28_63  [key=0, style=solid];
m28_61 -> m28_62  [key=0, style=solid];
m28_61 -> m28_81  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m28_61 -> m28_60  [color=darkorchid, key=3, label="Local variable string queue1", style=bold];
m28_64 -> m28_53  [color=blue, key=0, style=bold];
m28_14 -> m28_15  [key=0, style=solid];
m28_14 -> m28_49  [key=2, style=dotted];
m28_28 -> m28_29  [key=0, style=solid];
m28_28 -> m28_45  [key=2, style=dotted];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_33  [key=2, style=dotted];
m28_29 -> m28_31  [key=0, style=solid];
m28_29 -> m28_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_29 -> m28_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_30 -> m28_31  [key=0, style=solid];
m28_30 -> m28_34  [key=2, style=dotted];
m28_30 -> m28_35  [key=2, style=dotted];
m28_30 -> m28_45  [key=2, style=dotted];
m28_31 -> m28_32  [key=0, style=solid];
m28_31 -> m28_34  [key=2, style=dotted];
m28_31 -> m28_36  [key=2, style=dotted];
m28_31 -> m28_45  [key=2, style=dotted];
m28_32 -> m28_28  [color=blue, key=0, style=bold];
m28_32 -> m28_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_32 -> m28_33  [key=0, style=solid];
m28_32 -> m28_52  [key=2, style=dotted];
m28_32 -> m28_49  [key=2, style=dotted];
m28_32 -> m28_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_94 -> m28_95  [color=red, key=0, style=solid];
m28_94 -> m28_75  [color=red, key=2, style=dotted];
m28_94 -> m28_96  [color=red, key=2, style=dotted];
m28_68 -> m28_69  [key=0, style=solid];
m28_72 -> m28_73  [key=0, style=solid];
m28_81 -> m28_82  [key=0, style=solid];
m28_81 -> m28_75  [key=2, style=dotted];
m28_81 -> m28_83  [key=2, style=dotted];
m28_80 -> m28_81  [key=0, style=solid];
m28_69 -> m28_70  [key=0, style=solid];
m28_69 -> m28_71  [key=2, style=dotted];
m28_70 -> m28_68  [color=blue, key=0, style=bold];
m28_73 -> m28_74  [key=0, style=solid];
m28_73 -> m28_75  [key=2, style=dotted];
m28_73 -> m28_76  [key=2, style=dotted];
m28_73 -> m28_77  [key=2, style=dotted];
m28_73 -> m28_78  [key=2, style=dotted];
m28_73 -> m28_79  [key=2, style=dotted];
m28_74 -> m28_72  [color=blue, key=0, style=bold];
m28_82 -> m28_80  [color=blue, key=0, style=bold];
m28_89 -> m28_90  [key=0, style=solid];
m28_93 -> m28_94  [color=red, key=0, style=solid];
m28_90 -> m28_91  [key=0, style=solid];
m28_90 -> m28_92  [key=2, style=dotted];
m28_91 -> m28_89  [color=blue, key=0, style=bold];
m28_95 -> m28_93  [color=blue, key=0, style=bold];
m28_36 -> m28_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_36 -> m28_37  [key=0, style=solid];
m28_36 -> m28_53  [key=2, style=dotted];
m28_36 -> m28_49  [key=2, style=dotted];
m28_36 -> m28_38  [color=darkseagreen4, key=1, label=job, style=dashed];
m28_18 -> m28_19  [color=green, key=0, style=solid];
m28_18 -> m28_20  [color=green, key=0, style=solid];
m28_20 -> m28_21  [color=green, key=0, style=solid];
m28_20 -> m28_45  [color=green, key=2, style=dotted];
m28_43 -> m28_45  [key=2, style=dotted];
m28_43 -> m28_44  [key=0, style=solid];
m28_54 -> m28_19  [color=green, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_20  [color=green, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_22  [color=green, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_6  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_54 -> m28_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m28_86 -> m28_87  [color=red, key=0, style=solid];
m28_86 -> m28_66  [color=red, key=2, style=dotted];
m28_86 -> m28_93  [color=red, key=1, label="lambda expression", style=dashed];
m28_55 -> m28_84  [key=0, style=solid];
m28_84 -> m28_85  [key=0, style=solid];
m28_84 -> m28_65  [key=2, style=dotted];
m28_84 -> m28_86  [color=red, key=1, label=transaction, style=dashed];
m28_84 -> m28_87  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m28_85 -> m28_86  [color=red, key=0, style=solid];
m28_85 -> m28_66  [key=2, style=dotted];
m28_85 -> m28_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_87 -> m28_88  [key=0, style=solid];
m28_87 -> m28_67  [key=2, style=dotted];
m28_88 -> m28_55  [color=blue, key=0, style=bold];
m28_97 -> m28_1  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_2  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_3  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_9  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_10  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_11  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_23  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_24  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_29  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_30  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_31  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_38  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_45  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_46  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_47  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_49  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_51  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_57  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_58  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_69  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_59  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_73  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_62  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_81  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_84  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_85  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_90  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_86  [color=red, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_97 -> m28_94  [color=red, key=1, label="HangFire.Server.JobServer", style=dashed];
m28_98 -> m28_81  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m29_30 -> m29_31  [color=green, key=0, style=solid];
m29_13 -> m29_14  [color=red, key=0, style=solid];
m29_13 -> m29_9  [color=red, key=2, style=dotted];
m29_13 -> m29_10  [color=red, key=2, style=dotted];
m29_43 -> m29_44  [key=0, style=solid];
m29_43 -> m29_45  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_44 -> m29_45  [key=0, style=solid];
m29_45 -> m29_46  [key=0, style=solid];
m29_45 -> m29_58  [key=2, style=dotted];
m29_45 -> m29_51  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m29_45 -> m29_56  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m29_46 -> m29_47  [key=0, style=solid];
m29_46 -> m29_48  [key=0, style=solid];
m29_51 -> m29_52  [key=0, style=solid];
m29_51 -> m29_55  [key=0, style=solid];
m29_56 -> m29_57  [key=0, style=solid];
m29_56 -> m29_63  [key=2, style=dotted];
m29_56 -> m29_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_56 -> m29_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_47 -> m29_57  [key=0, style=solid];
m29_47 -> m29_59  [key=2, style=dotted];
m29_47 -> m29_3  [color=green, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_21  [color=green, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_27  [color=green, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_31  [color=green, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_1  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_2  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_4  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_5  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_6  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_24  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_34  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_47 -> m29_38  [color=darkseagreen4, key=1, label="HangFire.Tests.Client.JobClientTests", style=dashed];
m29_48 -> m29_49  [key=0, style=solid];
m29_48 -> m29_59  [key=2, style=dotted];
m29_48 -> m29_53  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_48 -> m29_70  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_48 -> m29_56  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_48 -> m29_84  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_49 -> m29_50  [key=0, style=solid];
m29_49 -> m29_59  [key=2, style=dotted];
m29_49 -> m29_54  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_49 -> m29_78  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_49 -> m29_56  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_49 -> m29_84  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_53 -> m29_54  [key=0, style=solid];
m29_53 -> m29_61  [key=2, style=dotted];
m29_53 -> m29_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_53 -> m29_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_50 -> m29_51  [key=0, style=solid];
m29_50 -> m29_60  [key=2, style=dotted];
m29_50 -> m29_53  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_50 -> m29_54  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_50 -> m29_55  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_54 -> m29_51  [key=0, style=solid];
m29_54 -> m29_61  [key=2, style=dotted];
m29_54 -> m29_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_54 -> m29_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_54 -> m29_54  [color=darkorchid, key=3, label="Local variable var job", style=bold];
m29_55 -> m29_56  [key=0, style=solid];
m29_55 -> m29_62  [key=2, style=dotted];
m29_52 -> m29_53  [key=0, style=solid];
m29_52 -> m29_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_52 -> m29_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_52 -> m29_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_52 -> m29_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_52 -> m29_78  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_52 -> m29_51  [color=darkorchid, key=3, label="Local variable var job", style=bold];
m29_57 -> m29_43  [color=blue, key=0, style=bold];
m29_38 -> m29_29  [key=2, style=dotted];
m29_38 -> m29_39  [key=0, style=solid];
m29_37 -> m29_38  [key=0, style=solid];
m29_39 -> m29_37  [color=blue, key=0, style=bold];
m29_31 -> m29_32  [color=green, key=0, style=solid];
m29_31 -> m29_29  [color=green, key=2, style=dotted];
m29_23 -> m29_24  [key=0, style=solid];
m29_23 -> m29_25  [color=red, key=1, label=int, style=dashed];
m29_24 -> m29_25  [color=red, key=0, style=solid];
m29_24 -> m29_13  [key=2, style=dotted];
m29_25 -> m29_26  [color=red, key=0, style=solid];
m29_25 -> m29_28  [color=red, key=2, style=dotted];
m29_25 -> m29_23  [color=blue, key=0, style=bold];
m29_26 -> m29_27  [color=green, key=0, style=solid];
m29_26 -> m29_29  [color=red, key=2, style=dotted];
m29_26 -> m29_30  [color=red, key=2, style=dotted];
m29_26 -> m29_31  [color=red, key=2, style=dotted];
m29_26 -> m29_32  [color=red, key=1, label="lambda expression", style=dashed];
m29_26 -> m29_40  [color=red, key=1, label="lambda expression", style=dashed];
m29_27 -> m29_23  [color=blue, key=0, style=bold];
m29_27 -> m29_28  [color=green, key=0, style=solid];
m29_27 -> m29_29  [color=green, key=2, style=dotted];
m29_173 -> m29_324  [key=0, style=solid];
m29_173 -> m29_326  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m29_173 -> m29_327  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m29_173 -> m29_328  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m29_173 -> m29_329  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m29_173 -> m29_331  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m29_173 -> m29_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m29_173 -> m29_332  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m29_173 -> m29_333  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m29_173 -> m29_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m29_173 -> m29_335  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m29_173 -> m29_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m29_324 -> m29_325  [key=0, style=solid];
m29_324 -> m29_326  [key=0, style=solid];
m29_326 -> m29_327  [key=0, style=solid];
m29_326 -> m29_337  [key=2, style=dotted];
m29_326 -> m29_331  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_326 -> m29_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_326 -> m29_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_326 -> m29_335  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_326 -> m29_354  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_327 -> m29_328  [key=0, style=solid];
m29_327 -> m29_337  [key=2, style=dotted];
m29_327 -> m29_333  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_327 -> m29_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_327 -> m29_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_327 -> m29_335  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_327 -> m29_354  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_328 -> m29_329  [key=0, style=solid];
m29_328 -> m29_60  [key=2, style=dotted];
m29_328 -> m29_331  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_328 -> m29_333  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_328 -> m29_334  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_329 -> m29_330  [key=0, style=solid];
m29_329 -> m29_334  [key=0, style=solid];
m29_331 -> m29_332  [key=0, style=solid];
m29_331 -> m29_61  [key=2, style=dotted];
m29_331 -> m29_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_331 -> m29_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_332 -> m29_333  [key=0, style=solid];
m29_332 -> m29_329  [key=0, style=solid];
m29_333 -> m29_329  [key=0, style=solid];
m29_333 -> m29_61  [key=2, style=dotted];
m29_333 -> m29_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_333 -> m29_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_335 -> m29_336  [key=0, style=solid];
m29_335 -> m29_114  [key=2, style=dotted];
m29_335 -> m29_115  [key=2, style=dotted];
m29_335 -> m29_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_335 -> m29_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_325 -> m29_336  [key=0, style=solid];
m29_325 -> m29_113  [key=2, style=dotted];
m29_334 -> m29_335  [key=0, style=solid];
m29_334 -> m29_62  [key=2, style=dotted];
m29_330 -> m29_331  [key=0, style=solid];
m29_330 -> m29_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_330 -> m29_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_330 -> m29_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_330 -> m29_333  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_330 -> m29_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_330 -> m29_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_330 -> m29_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_330 -> m29_329  [color=darkorchid, key=3, label="Local variable string id", style=bold];
m29_336 -> m29_173  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [color=red, key=0, style=solid];
m29_3 -> m29_4  [color=green, key=0, style=solid];
m29_3 -> m29_12  [color=green, key=2, style=dotted];
m29_3 -> m29_0  [color=blue, key=0, style=bold];
m29_2 -> m29_3  [color=red, key=0, style=solid];
m29_2 -> m29_9  [key=2, style=dotted];
m29_2 -> m29_10  [key=2, style=dotted];
m29_2 -> m29_11  [key=2, style=dotted];
m29_2 -> m29_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_2 -> m29_4  [color=red, key=2, style=dotted];
m29_4 -> m29_5  [key=0, style=solid];
m29_4 -> m29_13  [key=2, style=dotted];
m29_1 -> m29_2  [color=red, key=0, style=solid];
m29_1 -> m29_8  [key=2, style=dotted];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_14  [key=2, style=dotted];
m29_5 -> m29_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_6 -> m29_7  [key=0, style=solid];
m29_6 -> m29_15  [key=2, style=dotted];
m29_6 -> m29_16  [key=2, style=dotted];
m29_7 -> m29_0  [color=blue, key=0, style=bold];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_9  [key=2, style=dotted];
m29_7 -> m29_10  [key=2, style=dotted];
m29_14 -> m29_11  [color=blue, key=0, style=bold];
m29_16 -> m29_17  [color=red, key=0, style=solid];
m29_11 -> m29_12  [key=0, style=solid];
m29_11 -> m29_13  [color=red, key=1, label=string, style=dashed];
m29_12 -> m29_13  [color=red, key=0, style=solid];
m29_219 -> m29_269  [key=0, style=solid];
m29_219 -> m29_276  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_219 -> m29_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_219 -> m29_277  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m29_219 -> m29_278  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats", style=bold];
m29_269 -> m29_270  [key=0, style=solid];
m29_269 -> m29_273  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m29_269 -> m29_274  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m29_276 -> m29_277  [key=0, style=solid];
m29_276 -> m29_114  [key=2, style=dotted];
m29_276 -> m29_115  [key=2, style=dotted];
m29_276 -> m29_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_276 -> m29_92  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats", style=bold];
m29_277 -> m29_278  [key=0, style=solid];
m29_277 -> m29_289  [key=2, style=dotted];
m29_277 -> m29_282  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m29_277 -> m29_98  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m29_270 -> m29_271  [key=0, style=solid];
m29_270 -> m29_113  [key=2, style=dotted];
m29_270 -> m29_273  [color=darkseagreen4, key=1, label=dates, style=dashed];
m29_270 -> m29_276  [color=darkseagreen4, key=1, label=dates, style=dashed];
m29_270 -> m29_280  [color=darkseagreen4, key=1, label=dates, style=dashed];
m29_270 -> m29_284  [color=darkseagreen4, key=1, label=dates, style=dashed];
m29_273 -> m29_274  [key=0, style=solid];
m29_273 -> m29_175  [key=2, style=dotted];
m29_274 -> m29_275  [key=0, style=solid];
m29_274 -> m29_288  [key=2, style=dotted];
m29_274 -> m29_274  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m29_271 -> m29_272  [key=0, style=solid];
m29_271 -> m29_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_271 -> m29_161  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m29_280 -> m29_281  [key=0, style=solid];
m29_280 -> m29_286  [key=0, style=solid];
m29_280 -> m29_161  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m29_284 -> m29_285  [key=0, style=solid];
m29_284 -> m29_292  [key=2, style=dotted];
m29_272 -> m29_273  [key=0, style=solid];
m29_272 -> m29_276  [key=0, style=solid];
m29_275 -> m29_272  [key=0, style=solid];
m29_275 -> m29_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_278 -> m29_279  [key=0, style=solid];
m29_278 -> m29_59  [key=2, style=dotted];
m29_278 -> m29_284  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_278 -> m29_286  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_282 -> m29_283  [key=0, style=solid];
m29_282 -> m29_284  [key=0, style=solid];
m29_282 -> m29_290  [key=2, style=dotted];
m29_282 -> m29_291  [key=2, style=dotted];
m29_279 -> m29_280  [key=0, style=solid];
m29_279 -> m29_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_279 -> m29_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_279 -> m29_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_286 -> m29_287  [key=0, style=solid];
m29_285 -> m29_280  [key=0, style=solid];
m29_285 -> m29_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_281 -> m29_282  [key=0, style=solid];
m29_283 -> m29_284  [key=0, style=solid];
m29_287 -> m29_219  [color=blue, key=0, style=bold];
m29_15 -> m29_16  [color=red, key=0, style=solid];
m29_236 -> m29_237  [key=0, style=solid];
m29_236 -> m29_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_236 -> m29_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_236 -> m29_229  [color=darkorchid, key=3, label="method methodReturn bool EnqueueScheduled", style=bold];
m29_237 -> m29_238  [key=0, style=solid];
m29_238 -> m29_239  [key=0, style=solid];
m29_238 -> m29_9  [key=2, style=dotted];
m29_238 -> m29_76  [key=2, style=dotted];
m29_242 -> m29_243  [key=0, style=solid];
m29_242 -> m29_234  [key=2, style=dotted];
m29_242 -> m29_235  [key=2, style=dotted];
m29_239 -> m29_240  [key=0, style=solid];
m29_239 -> m29_232  [key=2, style=dotted];
m29_239 -> m29_242  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_240 -> m29_241  [key=0, style=solid];
m29_240 -> m29_242  [key=0, style=solid];
m29_240 -> m29_233  [key=2, style=dotted];
m29_241 -> m29_243  [key=0, style=solid];
m29_243 -> m29_236  [color=blue, key=0, style=bold];
m29_20 -> m29_21  [color=red, key=0, style=solid];
m29_21 -> m29_22  [color=green, key=0, style=solid];
m29_21 -> m29_13  [color=green, key=2, style=dotted];
m29_21 -> m29_4  [key=2, style=dotted];
m29_22 -> m29_20  [color=blue, key=0, style=bold];
m29_22 -> m29_19  [color=blue, key=0, style=bold];
m29_429 -> m29_430  [key=0, style=solid];
m29_32 -> m29_33  [color=red, key=0, style=solid];
m29_32 -> m29_30  [color=blue, key=0, style=bold];
m29_40 -> m29_41  [key=0, style=solid];
m29_33 -> m29_34  [color=red, key=0, style=solid];
m29_33 -> m29_35  [color=red, key=2, style=dotted];
m29_33 -> m29_36  [color=red, key=2, style=dotted];
m29_33 -> m29_37  [color=red, key=2, style=dotted];
m29_33 -> m29_38  [color=red, key=2, style=dotted];
m29_33 -> m29_39  [color=red, key=2, style=dotted];
m29_34 -> m29_32  [color=blue, key=0, style=bold];
m29_34 -> m29_35  [key=0, style=solid];
m29_34 -> m29_36  [key=2, style=dotted];
m29_41 -> m29_42  [key=0, style=solid];
m29_41 -> m29_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>", style=dashed];
m29_42 -> m29_40  [color=blue, key=0, style=bold];
m29_70 -> m29_71  [key=0, style=solid];
m29_70 -> m29_72  [key=2, style=dotted];
m29_84 -> m29_85  [key=0, style=solid];
m29_84 -> m29_86  [key=2, style=dotted];
m29_84 -> m29_87  [key=2, style=dotted];
m29_84 -> m29_36  [key=2, style=dotted];
m29_84 -> m29_37  [key=2, style=dotted];
m29_84 -> m29_39  [key=2, style=dotted];
m29_78 -> m29_79  [key=0, style=solid];
m29_78 -> m29_72  [key=2, style=dotted];
m29_65 -> m29_66  [key=0, style=solid];
m29_65 -> m29_67  [key=2, style=dotted];
m29_65 -> m29_68  [key=2, style=dotted];
m29_74 -> m29_75  [key=0, style=solid];
m29_74 -> m29_67  [key=2, style=dotted];
m29_74 -> m29_76  [key=2, style=dotted];
m29_64 -> m29_65  [key=0, style=solid];
m29_69 -> m29_70  [key=0, style=solid];
m29_73 -> m29_74  [key=0, style=solid];
m29_77 -> m29_78  [key=0, style=solid];
m29_80 -> m29_81  [key=0, style=solid];
m29_83 -> m29_84  [key=0, style=solid];
m29_66 -> m29_64  [color=blue, key=0, style=bold];
m29_71 -> m29_69  [color=blue, key=0, style=bold];
m29_75 -> m29_73  [color=blue, key=0, style=bold];
m29_79 -> m29_77  [color=blue, key=0, style=bold];
m29_81 -> m29_82  [key=0, style=solid];
m29_82 -> m29_80  [color=blue, key=0, style=bold];
m29_85 -> m29_83  [color=blue, key=0, style=bold];
m29_120 -> m29_121  [key=0, style=solid];
m29_120 -> m29_72  [key=2, style=dotted];
m29_130 -> m29_131  [key=0, style=solid];
m29_130 -> m29_132  [key=2, style=dotted];
m29_130 -> m29_133  [key=2, style=dotted];
m29_130 -> m29_134  [key=2, style=dotted];
m29_130 -> m29_38  [key=2, style=dotted];
m29_127 -> m29_128  [key=0, style=solid];
m29_127 -> m29_72  [key=2, style=dotted];
m29_117 -> m29_118  [key=0, style=solid];
m29_117 -> m29_67  [key=2, style=dotted];
m29_117 -> m29_68  [key=2, style=dotted];
m29_123 -> m29_124  [key=0, style=solid];
m29_123 -> m29_67  [key=2, style=dotted];
m29_123 -> m29_125  [key=2, style=dotted];
m29_116 -> m29_117  [key=0, style=solid];
m29_119 -> m29_120  [key=0, style=solid];
m29_122 -> m29_123  [key=0, style=solid];
m29_126 -> m29_127  [key=0, style=solid];
m29_129 -> m29_130  [key=0, style=solid];
m29_118 -> m29_116  [color=blue, key=0, style=bold];
m29_121 -> m29_119  [color=blue, key=0, style=bold];
m29_124 -> m29_122  [color=blue, key=0, style=bold];
m29_128 -> m29_126  [color=blue, key=0, style=bold];
m29_131 -> m29_129  [color=blue, key=0, style=bold];
m29_141 -> m29_142  [key=0, style=solid];
m29_142 -> m29_143  [key=0, style=solid];
m29_142 -> m29_144  [key=2, style=dotted];
m29_142 -> m29_37  [key=2, style=dotted];
m29_142 -> m29_36  [key=2, style=dotted];
m29_142 -> m29_38  [key=2, style=dotted];
m29_142 -> m29_39  [key=2, style=dotted];
m29_143 -> m29_141  [color=blue, key=0, style=bold];
m29_151 -> m29_152  [key=0, style=solid];
m29_152 -> m29_153  [key=0, style=solid];
m29_152 -> m29_154  [key=2, style=dotted];
m29_152 -> m29_37  [key=2, style=dotted];
m29_152 -> m29_36  [key=2, style=dotted];
m29_152 -> m29_38  [key=2, style=dotted];
m29_152 -> m29_39  [key=2, style=dotted];
m29_153 -> m29_151  [color=blue, key=0, style=bold];
m29_177 -> m29_178  [key=0, style=solid];
m29_177 -> m29_67  [key=2, style=dotted];
m29_177 -> m29_150  [key=2, style=dotted];
m29_183 -> m29_184  [key=0, style=solid];
m29_183 -> m29_67  [key=2, style=dotted];
m29_183 -> m29_10  [key=2, style=dotted];
m29_189 -> m29_190  [key=0, style=solid];
m29_189 -> m29_67  [key=2, style=dotted];
m29_189 -> m29_10  [key=2, style=dotted];
m29_176 -> m29_177  [key=0, style=solid];
m29_179 -> m29_180  [key=0, style=solid];
m29_182 -> m29_183  [key=0, style=solid];
m29_185 -> m29_186  [key=0, style=solid];
m29_188 -> m29_189  [key=0, style=solid];
m29_191 -> m29_192  [key=0, style=solid];
m29_194 -> m29_195  [key=0, style=solid];
m29_178 -> m29_176  [color=blue, key=0, style=bold];
m29_180 -> m29_181  [key=0, style=solid];
m29_181 -> m29_179  [color=blue, key=0, style=bold];
m29_184 -> m29_182  [color=blue, key=0, style=bold];
m29_186 -> m29_187  [key=0, style=solid];
m29_187 -> m29_185  [color=blue, key=0, style=bold];
m29_190 -> m29_188  [color=blue, key=0, style=bold];
m29_192 -> m29_193  [key=0, style=solid];
m29_193 -> m29_191  [color=blue, key=0, style=bold];
m29_195 -> m29_196  [key=0, style=solid];
m29_195 -> m29_197  [key=2, style=dotted];
m29_195 -> m29_36  [key=2, style=dotted];
m29_195 -> m29_38  [key=2, style=dotted];
m29_195 -> m29_39  [key=2, style=dotted];
m29_196 -> m29_194  [color=blue, key=0, style=bold];
m29_203 -> m29_204  [key=0, style=solid];
m29_204 -> m29_205  [key=0, style=solid];
m29_204 -> m29_197  [key=2, style=dotted];
m29_204 -> m29_36  [key=2, style=dotted];
m29_204 -> m29_38  [key=2, style=dotted];
m29_204 -> m29_39  [key=2, style=dotted];
m29_205 -> m29_203  [color=blue, key=0, style=bold];
m29_211 -> m29_212  [key=0, style=solid];
m29_212 -> m29_213  [key=0, style=solid];
m29_212 -> m29_214  [key=2, style=dotted];
m29_212 -> m29_36  [key=2, style=dotted];
m29_212 -> m29_38  [key=2, style=dotted];
m29_213 -> m29_211  [color=blue, key=0, style=bold];
m29_260 -> m29_261  [key=0, style=solid];
m29_260 -> m29_262  [key=2, style=dotted];
m29_259 -> m29_260  [key=0, style=solid];
m29_263 -> m29_264  [key=0, style=solid];
m29_266 -> m29_267  [key=0, style=solid];
m29_261 -> m29_259  [color=blue, key=0, style=bold];
m29_264 -> m29_265  [key=0, style=solid];
m29_265 -> m29_263  [color=blue, key=0, style=bold];
m29_267 -> m29_268  [key=0, style=solid];
m29_268 -> m29_266  [color=blue, key=0, style=bold];
m29_294 -> m29_295  [key=0, style=solid];
m29_294 -> m29_296  [key=2, style=dotted];
m29_294 -> m29_297  [key=2, style=dotted];
m29_293 -> m29_294  [key=0, style=solid];
m29_295 -> m29_293  [color=blue, key=0, style=bold];
m29_322 -> m29_323  [key=0, style=solid];
m29_322 -> m29_67  [key=2, style=dotted];
m29_318 -> m29_319  [key=0, style=solid];
m29_321 -> m29_322  [key=0, style=solid];
m29_319 -> m29_320  [key=0, style=solid];
m29_319 -> m29_296  [key=2, style=dotted];
m29_320 -> m29_318  [color=blue, key=0, style=bold];
m29_323 -> m29_321  [color=blue, key=0, style=bold];
m29_339 -> m29_340  [key=0, style=solid];
m29_339 -> m29_9  [key=2, style=dotted];
m29_339 -> m29_68  [key=2, style=dotted];
m29_347 -> m29_348  [key=0, style=solid];
m29_347 -> m29_9  [key=2, style=dotted];
m29_347 -> m29_68  [key=2, style=dotted];
m29_357 -> m29_358  [key=0, style=solid];
m29_357 -> m29_359  [key=2, style=dotted];
m29_357 -> m29_360  [key=2, style=dotted];
m29_357 -> m29_361  [key=2, style=dotted];
m29_357 -> m29_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_342 -> m29_343  [key=0, style=solid];
m29_342 -> m29_344  [key=0, style=solid];
m29_342 -> m29_345  [key=2, style=dotted];
m29_343 -> m29_344  [key=0, style=solid];
m29_343 -> m29_72  [key=2, style=dotted];
m29_354 -> m29_355  [key=0, style=solid];
m29_354 -> m29_345  [key=2, style=dotted];
m29_350 -> m29_351  [key=0, style=solid];
m29_350 -> m29_352  [key=0, style=solid];
m29_350 -> m29_345  [key=2, style=dotted];
m29_351 -> m29_352  [key=0, style=solid];
m29_351 -> m29_72  [key=2, style=dotted];
m29_338 -> m29_339  [key=0, style=solid];
m29_341 -> m29_342  [key=0, style=solid];
m29_341 -> m29_343  [color=darkseagreen4, key=1, label="?", style=dashed];
m29_346 -> m29_347  [key=0, style=solid];
m29_349 -> m29_350  [key=0, style=solid];
m29_349 -> m29_351  [color=darkseagreen4, key=1, label="?", style=dashed];
m29_353 -> m29_354  [key=0, style=solid];
m29_356 -> m29_357  [key=0, style=solid];
m29_340 -> m29_338  [color=blue, key=0, style=bold];
m29_344 -> m29_341  [color=blue, key=0, style=bold];
m29_348 -> m29_346  [color=blue, key=0, style=bold];
m29_352 -> m29_349  [color=blue, key=0, style=bold];
m29_355 -> m29_353  [color=blue, key=0, style=bold];
m29_358 -> m29_356  [color=blue, key=0, style=bold];
m29_362 -> m29_363  [key=0, style=solid];
m29_363 -> m29_364  [key=0, style=solid];
m29_364 -> m29_362  [color=blue, key=0, style=bold];
m29_392 -> m29_393  [key=0, style=solid];
m29_398 -> m29_399  [key=0, style=solid];
m29_404 -> m29_405  [key=0, style=solid];
m29_410 -> m29_411  [key=0, style=solid];
m29_417 -> m29_418  [key=0, style=solid];
m29_417 -> m29_419  [key=2, style=dotted];
m29_424 -> m29_425  [key=0, style=solid];
m29_430 -> m29_431  [key=0, style=solid];
m29_387 -> m29_388  [key=0, style=solid];
m29_391 -> m29_392  [key=0, style=solid];
m29_394 -> m29_395  [key=0, style=solid];
m29_397 -> m29_398  [key=0, style=solid];
m29_400 -> m29_401  [key=0, style=solid];
m29_403 -> m29_404  [key=0, style=solid];
m29_406 -> m29_407  [key=0, style=solid];
m29_409 -> m29_410  [key=0, style=solid];
m29_412 -> m29_413  [key=0, style=solid];
m29_416 -> m29_417  [key=0, style=solid];
m29_420 -> m29_421  [key=0, style=solid];
m29_423 -> m29_424  [key=0, style=solid];
m29_427 -> m29_428  [key=0, style=solid];
m29_427 -> m29_67  [key=2, style=dotted];
m29_427 -> m29_10  [key=2, style=dotted];
m29_426 -> m29_427  [key=0, style=solid];
m29_388 -> m29_389  [key=0, style=solid];
m29_388 -> m29_390  [key=2, style=dotted];
m29_389 -> m29_387  [color=blue, key=0, style=bold];
m29_393 -> m29_391  [color=blue, key=0, style=bold];
m29_395 -> m29_396  [key=0, style=solid];
m29_395 -> m29_390  [key=2, style=dotted];
m29_396 -> m29_394  [color=blue, key=0, style=bold];
m29_399 -> m29_397  [color=blue, key=0, style=bold];
m29_401 -> m29_402  [key=0, style=solid];
m29_401 -> m29_4  [key=2, style=dotted];
m29_402 -> m29_400  [color=blue, key=0, style=bold];
m29_405 -> m29_403  [color=blue, key=0, style=bold];
m29_407 -> m29_408  [key=0, style=solid];
m29_407 -> m29_4  [key=2, style=dotted];
m29_408 -> m29_406  [color=blue, key=0, style=bold];
m29_411 -> m29_409  [color=blue, key=0, style=bold];
m29_413 -> m29_414  [key=0, style=solid];
m29_413 -> m29_415  [key=2, style=dotted];
m29_414 -> m29_412  [color=blue, key=0, style=bold];
m29_418 -> m29_416  [color=blue, key=0, style=bold];
m29_421 -> m29_422  [key=0, style=solid];
m29_421 -> m29_4  [key=2, style=dotted];
m29_422 -> m29_420  [color=blue, key=0, style=bold];
m29_425 -> m29_423  [color=blue, key=0, style=bold];
m29_428 -> m29_426  [color=blue, key=0, style=bold];
m29_431 -> m29_429  [color=blue, key=0, style=bold];
m29_28 -> m29_26  [color=blue, key=0, style=bold];
m29_220 -> m29_221  [key=0, style=solid];
m29_220 -> m29_219  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlyFailedJobs", style=bold];
m29_221 -> m29_222  [key=0, style=solid];
m29_222 -> m29_223  [key=0, style=solid];
m29_222 -> m29_219  [key=2, style=dotted];
m29_223 -> m29_220  [color=blue, key=0, style=bold];
m29_35 -> m29_33  [color=blue, key=0, style=bold];
m29_135 -> m29_136  [key=0, style=solid];
m29_135 -> m29_137  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_136 -> m29_137  [key=0, style=solid];
m29_137 -> m29_138  [key=0, style=solid];
m29_137 -> m29_140  [key=2, style=dotted];
m29_138 -> m29_139  [key=0, style=solid];
m29_138 -> m29_29  [key=2, style=dotted];
m29_138 -> m29_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_139 -> m29_135  [color=blue, key=0, style=bold];
m29_145 -> m29_146  [key=0, style=solid];
m29_145 -> m29_147  [color=darkseagreen4, key=1, label=int, style=dashed];
m29_146 -> m29_147  [key=0, style=solid];
m29_147 -> m29_148  [key=0, style=solid];
m29_147 -> m29_150  [key=2, style=dotted];
m29_148 -> m29_149  [key=0, style=solid];
m29_148 -> m29_29  [key=2, style=dotted];
m29_148 -> m29_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_149 -> m29_145  [color=blue, key=0, style=bold];
m29_155 -> m29_156  [key=0, style=solid];
m29_155 -> m29_158  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<HangFire.Web.QueueWithTopEnqueuedJobsDto> Queues", style=bold];
m29_156 -> m29_157  [key=0, style=solid];
m29_157 -> m29_158  [key=0, style=solid];
m29_157 -> m29_112  [key=2, style=dotted];
m29_157 -> m29_159  [color=darkseagreen4, key=1, label=queues, style=dashed];
m29_158 -> m29_159  [key=0, style=solid];
m29_158 -> m29_172  [key=2, style=dotted];
m29_158 -> m29_169  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_158 -> m29_170  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_159 -> m29_160  [key=0, style=solid];
m29_159 -> m29_170  [key=0, style=solid];
m29_159 -> m29_164  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_159 -> m29_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_159 -> m29_165  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_159 -> m29_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_159 -> m29_166  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_159 -> m29_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_159 -> m29_169  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_169 -> m29_159  [key=0, style=solid];
m29_169 -> m29_174  [key=2, style=dotted];
m29_169 -> m29_175  [key=2, style=dotted];
m29_169 -> m29_305  [color=darkorchid, key=3, label="Local variable HangFire.Storage.Monitoring.JobList<HangFire.Storage.Monitoring.EnqueuedJobDto> jobs", style=bold];
m29_170 -> m29_171  [key=0, style=solid];
m29_160 -> m29_161  [key=0, style=solid];
m29_160 -> m29_160  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IList<string> firstJobIds", style=bold];
m29_160 -> m29_164  [color=darkorchid, key=3, label="Local variable System.Collections.Generic.IList<string> firstJobIds", style=bold];
m29_164 -> m29_165  [key=0, style=solid];
m29_164 -> m29_61  [key=2, style=dotted];
m29_164 -> m29_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_164 -> m29_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_164 -> m29_168  [color=darkseagreen4, key=1, label=firstJobIds, style=dashed];
m29_165 -> m29_166  [key=0, style=solid];
m29_165 -> m29_61  [key=2, style=dotted];
m29_165 -> m29_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_165 -> m29_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_165 -> m29_169  [color=darkseagreen4, key=1, label=length, style=dashed];
m29_166 -> m29_167  [key=0, style=solid];
m29_166 -> m29_61  [key=2, style=dotted];
m29_166 -> m29_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_166 -> m29_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_166 -> m29_169  [color=darkseagreen4, key=1, label=dequeued, style=dashed];
m29_166 -> m29_166  [color=darkorchid, key=3, label="Local variable long fetched", style=bold];
m29_166 -> m29_168  [color=darkorchid, key=3, label="Local variable long fetched", style=bold];
m29_161 -> m29_162  [key=0, style=solid];
m29_161 -> m29_161  [color=darkorchid, key=3, label="Local variable long length", style=bold];
m29_161 -> m29_165  [color=darkorchid, key=3, label="Local variable long length", style=bold];
m29_162 -> m29_163  [key=0, style=solid];
m29_162 -> m29_161  [color=darkorchid, key=3, label="Local variable long dequeued", style=bold];
m29_162 -> m29_166  [color=darkorchid, key=3, label="Local variable long dequeued", style=bold];
m29_163 -> m29_164  [key=0, style=solid];
m29_163 -> m29_60  [key=2, style=dotted];
m29_163 -> m29_165  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_163 -> m29_166  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_163 -> m29_167  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_167 -> m29_168  [key=0, style=solid];
m29_167 -> m29_62  [key=2, style=dotted];
m29_168 -> m29_169  [key=0, style=solid];
m29_168 -> m29_173  [key=2, style=dotted];
m29_168 -> m29_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_171 -> m29_155  [color=blue, key=0, style=bold];
m29_88 -> m29_89  [key=0, style=solid];
m29_88 -> m29_92  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> SucceededByDatesCount", style=bold];
m29_89 -> m29_90  [key=0, style=solid];
m29_90 -> m29_91  [key=0, style=solid];
m29_90 -> m29_92  [key=2, style=dotted];
m29_91 -> m29_88  [color=blue, key=0, style=bold];
m29_97 -> m29_98  [key=0, style=solid];
m29_97 -> m29_276  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount", style=bold];
m29_98 -> m29_99  [key=0, style=solid];
m29_99 -> m29_100  [key=0, style=solid];
m29_99 -> m29_112  [key=2, style=dotted];
m29_99 -> m29_105  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m29_99 -> m29_110  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m29_100 -> m29_101  [key=0, style=solid];
m29_100 -> m29_102  [key=0, style=solid];
m29_105 -> m29_106  [key=0, style=solid];
m29_105 -> m29_109  [key=0, style=solid];
m29_110 -> m29_111  [key=0, style=solid];
m29_110 -> m29_114  [key=2, style=dotted];
m29_110 -> m29_115  [key=2, style=dotted];
m29_110 -> m29_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_101 -> m29_111  [key=0, style=solid];
m29_101 -> m29_113  [key=2, style=dotted];
m29_102 -> m29_103  [key=0, style=solid];
m29_102 -> m29_59  [key=2, style=dotted];
m29_102 -> m29_107  [color=darkseagreen4, key=1, label=servers, style=dashed];
m29_102 -> m29_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m29_102 -> m29_110  [color=darkseagreen4, key=1, label=servers, style=dashed];
m29_102 -> m29_130  [color=darkseagreen4, key=1, label=servers, style=dashed];
m29_103 -> m29_104  [key=0, style=solid];
m29_103 -> m29_59  [key=2, style=dotted];
m29_103 -> m29_108  [color=darkseagreen4, key=1, label=queues, style=dashed];
m29_103 -> m29_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m29_103 -> m29_110  [color=darkseagreen4, key=1, label=queues, style=dashed];
m29_103 -> m29_130  [color=darkseagreen4, key=1, label=queues, style=dashed];
m29_107 -> m29_108  [key=0, style=solid];
m29_107 -> m29_61  [key=2, style=dotted];
m29_107 -> m29_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_107 -> m29_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_104 -> m29_105  [key=0, style=solid];
m29_104 -> m29_60  [key=2, style=dotted];
m29_104 -> m29_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_104 -> m29_108  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_104 -> m29_109  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_108 -> m29_105  [key=0, style=solid];
m29_108 -> m29_61  [key=2, style=dotted];
m29_108 -> m29_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_108 -> m29_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_109 -> m29_110  [key=0, style=solid];
m29_109 -> m29_62  [key=2, style=dotted];
m29_106 -> m29_107  [key=0, style=solid];
m29_106 -> m29_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m29_106 -> m29_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m29_106 -> m29_108  [color=darkseagreen4, key=1, label=name, style=dashed];
m29_106 -> m29_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m29_106 -> m29_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m29_106 -> m29_105  [color=darkorchid, key=3, label="Local variable var name", style=bold];
m29_111 -> m29_97  [color=blue, key=0, style=bold];
m29_369 -> m29_370  [key=0, style=solid];
m29_369 -> m29_371  [color=darkorchid, key=3, label="method methodReturn HangFire.Web.StatisticsDto GetStatistics", style=bold];
m29_370 -> m29_371  [key=0, style=solid];
m29_371 -> m29_372  [key=0, style=solid];
m29_371 -> m29_386  [key=2, style=dotted];
m29_371 -> m29_374  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_392  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_375  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_398  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_376  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_404  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_377  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_410  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_378  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_417  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_379  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_424  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_382  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_430  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_371 -> m29_384  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_372 -> m29_373  [key=0, style=solid];
m29_372 -> m29_112  [key=2, style=dotted];
m29_372 -> m29_380  [color=darkseagreen4, key=1, label=queues, style=dashed];
m29_374 -> m29_375  [key=0, style=solid];
m29_374 -> m29_61  [key=2, style=dotted];
m29_374 -> m29_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_374 -> m29_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_375 -> m29_376  [key=0, style=solid];
m29_375 -> m29_61  [key=2, style=dotted];
m29_375 -> m29_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_375 -> m29_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_376 -> m29_377  [key=0, style=solid];
m29_376 -> m29_61  [key=2, style=dotted];
m29_376 -> m29_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_376 -> m29_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_377 -> m29_378  [key=0, style=solid];
m29_377 -> m29_61  [key=2, style=dotted];
m29_377 -> m29_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_377 -> m29_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_378 -> m29_379  [key=0, style=solid];
m29_378 -> m29_61  [key=2, style=dotted];
m29_378 -> m29_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_378 -> m29_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_379 -> m29_380  [key=0, style=solid];
m29_379 -> m29_61  [key=2, style=dotted];
m29_379 -> m29_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_379 -> m29_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_379 -> m29_379  [color=darkorchid, key=3, label="Local variable var queueName", style=bold];
m29_382 -> m29_380  [key=0, style=solid];
m29_382 -> m29_61  [key=2, style=dotted];
m29_382 -> m29_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_382 -> m29_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_384 -> m29_385  [key=0, style=solid];
m29_373 -> m29_374  [key=0, style=solid];
m29_373 -> m29_60  [key=2, style=dotted];
m29_373 -> m29_375  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_373 -> m29_376  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_373 -> m29_377  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_373 -> m29_378  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_373 -> m29_379  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_373 -> m29_382  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_373 -> m29_383  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m29_380 -> m29_381  [key=0, style=solid];
m29_380 -> m29_383  [key=0, style=solid];
m29_383 -> m29_384  [key=0, style=solid];
m29_383 -> m29_62  [key=2, style=dotted];
m29_381 -> m29_382  [key=0, style=solid];
m29_381 -> m29_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m29_381 -> m29_380  [color=darkorchid, key=3, label="Local variable var queueName", style=bold];
m29_385 -> m29_369  [color=blue, key=0, style=bold];
m29_365 -> m29_366  [key=0, style=solid];
m29_366 -> m29_367  [key=0, style=solid];
m29_367 -> m29_368  [key=0, style=solid];
m29_367 -> m29_10  [key=2, style=dotted];
m29_368 -> m29_365  [color=blue, key=0, style=bold];
m29_215 -> m29_216  [key=0, style=solid];
m29_215 -> m29_219  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs", style=bold];
m29_216 -> m29_217  [key=0, style=solid];
m29_217 -> m29_218  [key=0, style=solid];
m29_217 -> m29_219  [key=2, style=dotted];
m29_217 -> m29_250  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> HourlySucceededJobs", style=bold];
m29_218 -> m29_215  [color=blue, key=0, style=bold];
m29_92 -> m29_298  [key=0, style=solid];
m29_92 -> m29_305  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_92 -> m29_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_92 -> m29_306  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m29_92 -> m29_307  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetTimelineStats", style=bold];
m29_298 -> m29_299  [key=0, style=solid];
m29_298 -> m29_301  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m29_298 -> m29_302  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m29_298 -> m29_303  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m29_305 -> m29_306  [key=0, style=solid];
m29_305 -> m29_114  [key=2, style=dotted];
m29_305 -> m29_115  [key=2, style=dotted];
m29_305 -> m29_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_306 -> m29_307  [key=0, style=solid];
m29_306 -> m29_289  [key=2, style=dotted];
m29_306 -> m29_311  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m29_299 -> m29_300  [key=0, style=solid];
m29_299 -> m29_317  [key=2, style=dotted];
m29_299 -> m29_301  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m29_301 -> m29_302  [key=0, style=solid];
m29_301 -> m29_304  [key=0, style=solid];
m29_302 -> m29_303  [key=0, style=solid];
m29_302 -> m29_175  [key=2, style=dotted];
m29_303 -> m29_301  [key=0, style=solid];
m29_303 -> m29_317  [key=2, style=dotted];
m29_303 -> m29_303  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m29_300 -> m29_301  [key=0, style=solid];
m29_300 -> m29_113  [key=2, style=dotted];
m29_300 -> m29_302  [color=darkseagreen4, key=1, label=dates, style=dashed];
m29_300 -> m29_304  [color=darkseagreen4, key=1, label=dates, style=dashed];
m29_300 -> m29_313  [color=darkseagreen4, key=1, label=dates, style=dashed];
m29_304 -> m29_305  [key=0, style=solid];
m29_304 -> m29_114  [key=2, style=dotted];
m29_304 -> m29_115  [key=2, style=dotted];
m29_304 -> m29_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_304 -> m29_309  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m29_313 -> m29_314  [key=0, style=solid];
m29_313 -> m29_292  [key=2, style=dotted];
m29_309 -> m29_310  [key=0, style=solid];
m29_309 -> m29_315  [key=0, style=solid];
m29_309 -> m29_161  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m29_309 -> m29_169  [color=darkorchid, key=3, label="Parameter variable System.Func<HangFire.Common.Job, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T> selector", style=bold];
m29_307 -> m29_308  [key=0, style=solid];
m29_307 -> m29_59  [key=2, style=dotted];
m29_307 -> m29_313  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_307 -> m29_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m29_311 -> m29_312  [key=0, style=solid];
m29_311 -> m29_313  [key=0, style=solid];
m29_311 -> m29_290  [key=2, style=dotted];
m29_311 -> m29_291  [key=2, style=dotted];
m29_308 -> m29_309  [key=0, style=solid];
m29_308 -> m29_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_308 -> m29_313  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_308 -> m29_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_315 -> m29_316  [key=0, style=solid];
m29_314 -> m29_309  [key=0, style=solid];
m29_314 -> m29_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m29_310 -> m29_311  [key=0, style=solid];
m29_312 -> m29_313  [key=0, style=solid];
m29_316 -> m29_92  [color=blue, key=0, style=bold];
m29_17 -> m29_18  [key=0, style=solid];
m29_17 -> m29_4  [key=2, style=dotted];
m29_18 -> m29_15  [color=blue, key=0, style=bold];
m29_244 -> m29_245  [key=0, style=solid];
m29_244 -> m29_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_244 -> m29_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_244 -> m29_160  [color=darkorchid, key=3, label="method methodReturn HangFire.Web.JobDetailsDto JobDetails", style=bold];
m29_245 -> m29_246  [key=0, style=solid];
m29_246 -> m29_247  [key=0, style=solid];
m29_246 -> m29_9  [key=2, style=dotted];
m29_246 -> m29_254  [key=2, style=dotted];
m29_246 -> m29_252  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_250 -> m29_251  [key=0, style=solid];
m29_250 -> m29_9  [key=2, style=dotted];
m29_250 -> m29_125  [key=2, style=dotted];
m29_250 -> m29_98  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m29_250 -> m29_252  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.Dictionary<System.DateTime, long> GetHourlyTimelineStats", style=bold];
m29_247 -> m29_248  [key=0, style=solid];
m29_247 -> m29_249  [key=0, style=solid];
m29_252 -> m29_253  [key=0, style=solid];
m29_252 -> m29_255  [key=2, style=dotted];
m29_252 -> m29_256  [key=2, style=dotted];
m29_252 -> m29_257  [key=2, style=dotted];
m29_252 -> m29_258  [key=2, style=dotted];
m29_252 -> m29_63  [key=2, style=dotted];
m29_252 -> m29_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_252 -> m29_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_252 -> m29_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_248 -> m29_253  [key=0, style=solid];
m29_249 -> m29_250  [key=0, style=solid];
m29_249 -> m29_252  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m29_249 -> m29_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m29_251 -> m29_252  [key=0, style=solid];
m29_251 -> m29_114  [key=2, style=dotted];
m29_251 -> m29_115  [key=2, style=dotted];
m29_251 -> m29_166  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m29_253 -> m29_244  [color=blue, key=0, style=bold];
m29_8 -> m29_5  [color=blue, key=0, style=bold];
m29_206 -> m29_207  [key=0, style=solid];
m29_206 -> m29_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_207 -> m29_208  [key=0, style=solid];
m29_208 -> m29_209  [key=0, style=solid];
m29_208 -> m29_9  [key=2, style=dotted];
m29_208 -> m29_150  [key=2, style=dotted];
m29_209 -> m29_210  [key=0, style=solid];
m29_209 -> m29_29  [key=2, style=dotted];
m29_209 -> m29_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_210 -> m29_206  [color=blue, key=0, style=bold];
m29_93 -> m29_94  [key=0, style=solid];
m29_93 -> m29_92  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IDictionary<System.DateTime, long> FailedByDatesCount", style=bold];
m29_94 -> m29_95  [key=0, style=solid];
m29_95 -> m29_96  [key=0, style=solid];
m29_95 -> m29_92  [key=2, style=dotted];
m29_96 -> m29_93  [color=blue, key=0, style=bold];
m29_19 -> m29_20  [color=red, key=0, style=solid];
m29_224 -> m29_225  [key=0, style=solid];
m29_224 -> m29_226  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_224 -> m29_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_224 -> m29_229  [color=darkorchid, key=3, label="method methodReturn bool RetryJob", style=bold];
m29_225 -> m29_226  [key=0, style=solid];
m29_226 -> m29_227  [key=0, style=solid];
m29_226 -> m29_9  [key=2, style=dotted];
m29_226 -> m29_76  [key=2, style=dotted];
m29_230 -> m29_231  [key=0, style=solid];
m29_230 -> m29_234  [key=2, style=dotted];
m29_230 -> m29_235  [key=2, style=dotted];
m29_227 -> m29_228  [key=0, style=solid];
m29_227 -> m29_232  [key=2, style=dotted];
m29_227 -> m29_230  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_228 -> m29_229  [key=0, style=solid];
m29_228 -> m29_230  [key=0, style=solid];
m29_228 -> m29_233  [key=2, style=dotted];
m29_229 -> m29_231  [key=0, style=solid];
m29_231 -> m29_224  [color=blue, key=0, style=bold];
m29_198 -> m29_199  [key=0, style=solid];
m29_198 -> m29_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_199 -> m29_200  [key=0, style=solid];
m29_200 -> m29_201  [key=0, style=solid];
m29_200 -> m29_9  [key=2, style=dotted];
m29_200 -> m29_150  [key=2, style=dotted];
m29_201 -> m29_202  [key=0, style=solid];
m29_201 -> m29_29  [key=2, style=dotted];
m29_201 -> m29_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_202 -> m29_198  [color=blue, key=0, style=bold];
m29_432 -> m29_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_432 -> m29_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_432 -> m29_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_432 -> m29_78  [color=darkseagreen4, key=1, label=job, style=dashed];
m29_433 -> m29_70  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_433 -> m29_84  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_434 -> m29_78  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_434 -> m29_84  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_435 -> m29_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m29_435 -> m29_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m29_435 -> m29_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m29_435 -> m29_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m29_436 -> m29_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m29_436 -> m29_130  [color=darkseagreen4, key=1, label=servers, style=dashed];
m29_437 -> m29_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m29_437 -> m29_130  [color=darkseagreen4, key=1, label=queues, style=dashed];
m29_438 -> m29_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_438 -> m29_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_438 -> m29_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m29_439 -> m29_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m29_440 -> m29_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_441 -> m29_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m29_442 -> m29_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m29_443 -> m29_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_443 -> m29_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_443 -> m29_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_443 -> m29_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_443 -> m29_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_443 -> m29_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m29_444 -> m29_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_444 -> m29_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_444 -> m29_354  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m29_445 -> m29_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m29_446 -> m29_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_446 -> m29_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_446 -> m29_354  [color=darkseagreen4, key=1, label=states, style=dashed];
m29_447 -> m29_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m29_448 -> m29_392  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_448 -> m29_398  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_448 -> m29_404  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_448 -> m29_410  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_448 -> m29_417  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_448 -> m29_424  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_448 -> m29_430  [color=darkseagreen4, key=1, label=stats, style=dashed];
m29_449 -> m29_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m31_0 -> m31_1  [color=green, key=0, style=solid];
m31_0 -> m31_16  [color=darkorchid, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m31_1 -> m31_2  [color=green, key=0, style=solid];
m31_1 -> m31_5  [color=green, key=2, style=dotted];
m31_1 -> m31_0  [color=blue, key=0, style=bold];
m31_2 -> m31_3  [color=red, key=0, style=solid];
m31_2 -> m31_6  [color=green, key=2, style=dotted];
m31_2 -> m31_7  [color=green, key=2, style=dotted];
m31_2 -> m31_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m31_3 -> m31_4  [color=red, key=0, style=solid];
m31_3 -> m31_8  [key=2, style=dotted];
m31_3 -> m31_5  [color=red, key=0, style=solid];
m31_4 -> m31_0  [color=blue, key=0, style=bold];
m31_4 -> m31_7  [color=red, key=0, style=solid];
m31_4 -> m31_8  [color=red, key=2, style=dotted];
m31_5 -> m31_6  [color=red, key=0, style=solid];
m31_22 -> m31_31  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m31_22 -> m31_23  [color=red, key=0, style=solid];
m31_22 -> m31_45  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m31_22 -> m31_56  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m31_22 -> m31_65  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m31_22 -> m31_77  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m31_22 -> m31_86  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m31_23 -> m31_24  [key=0, style=solid];
m31_23 -> m31_25  [key=2, style=dotted];
m31_23 -> m31_21  [color=blue, key=0, style=bold];
m31_24 -> m31_22  [color=blue, key=0, style=bold];
m31_24 -> m31_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m31_24 -> m31_6  [color=red, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m31_24 -> m31_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m31_24 -> m31_14  [color=darkseagreen4, key=1, label="HangFire.SqlServer.ExpirationManager", style=dashed];
m31_30 -> m31_31  [color=green, key=0, style=solid];
m31_31 -> m31_32  [color=green, key=0, style=solid];
m31_31 -> m31_39  [color=green, key=2, style=dotted];
m31_32 -> m31_22  [key=2, style=dotted];
m31_32 -> m31_33  [key=0, style=solid];
m31_37 -> m31_26  [key=2, style=dotted];
m31_37 -> m31_38  [key=0, style=solid];
m31_33 -> m31_34  [key=0, style=solid];
m31_33 -> m31_40  [key=2, style=dotted];
m31_36 -> m31_37  [key=0, style=solid];
m31_36 -> m31_43  [key=2, style=dotted];
m31_34 -> m31_35  [key=0, style=solid];
m31_34 -> m31_41  [key=2, style=dotted];
m31_35 -> m31_36  [key=0, style=solid];
m31_35 -> m31_42  [key=2, style=dotted];
m31_38 -> m31_30  [color=blue, key=0, style=bold];
m31_85 -> m31_86  [key=0, style=solid];
m31_92 -> m31_93  [color=green, key=0, style=solid];
m31_92 -> m31_26  [color=green, key=2, style=dotted];
m31_91 -> m31_92  [color=green, key=0, style=solid];
m31_91 -> m31_43  [key=2, style=dotted];
m31_87 -> m31_22  [key=2, style=dotted];
m31_87 -> m31_88  [key=0, style=solid];
m31_86 -> m31_39  [key=2, style=dotted];
m31_86 -> m31_87  [key=0, style=solid];
m31_90 -> m31_91  [key=0, style=solid];
m31_90 -> m31_42  [key=2, style=dotted];
m31_88 -> m31_89  [key=0, style=solid];
m31_88 -> m31_40  [key=2, style=dotted];
m31_89 -> m31_90  [key=0, style=solid];
m31_89 -> m31_41  [key=2, style=dotted];
m31_93 -> m31_85  [color=blue, key=0, style=bold];
m31_7 -> m31_2  [color=blue, key=0, style=bold];
m31_6 -> m31_7  [color=red, key=0, style=solid];
m31_76 -> m31_77  [key=0, style=solid];
m31_83 -> m31_26  [key=2, style=dotted];
m31_83 -> m31_84  [key=0, style=solid];
m31_78 -> m31_22  [key=2, style=dotted];
m31_78 -> m31_79  [key=0, style=solid];
m31_77 -> m31_39  [key=2, style=dotted];
m31_77 -> m31_78  [key=0, style=solid];
m31_82 -> m31_83  [key=0, style=solid];
m31_82 -> m31_43  [key=2, style=dotted];
m31_79 -> m31_80  [key=0, style=solid];
m31_79 -> m31_40  [key=2, style=dotted];
m31_81 -> m31_82  [key=0, style=solid];
m31_81 -> m31_42  [key=2, style=dotted];
m31_80 -> m31_81  [key=0, style=solid];
m31_80 -> m31_41  [key=2, style=dotted];
m31_84 -> m31_76  [color=blue, key=0, style=bold];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_20  [key=2, style=dotted];
m31_14 -> m31_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m31_16 -> m31_0  [key=2, style=dotted];
m31_16 -> m31_17  [key=0, style=solid];
m31_16 -> m31_22  [color=red, key=3, label="method methodReturn string ToString", style=bold];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_17  [key=0, style=solid];
m31_15 -> m31_9  [color=blue, key=0, style=bold];
m31_17 -> m31_14  [color=blue, key=0, style=bold];
m31_44 -> m31_45  [key=0, style=solid];
m31_52 -> m31_26  [key=2, style=dotted];
m31_52 -> m31_53  [key=0, style=solid];
m31_46 -> m31_22  [key=2, style=dotted];
m31_46 -> m31_47  [key=0, style=solid];
m31_45 -> m31_39  [key=2, style=dotted];
m31_45 -> m31_46  [key=0, style=solid];
m31_51 -> m31_52  [key=0, style=solid];
m31_51 -> m31_54  [key=2, style=dotted];
m31_47 -> m31_48  [key=0, style=solid];
m31_47 -> m31_40  [key=2, style=dotted];
m31_50 -> m31_43  [key=2, style=dotted];
m31_50 -> m31_51  [key=0, style=solid];
m31_48 -> m31_49  [key=0, style=solid];
m31_48 -> m31_41  [key=2, style=dotted];
m31_49 -> m31_42  [key=2, style=dotted];
m31_49 -> m31_50  [key=0, style=solid];
m31_53 -> m31_44  [color=blue, key=0, style=bold];
m31_9 -> m31_10  [key=0, style=solid];
m31_9 -> m31_14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
m31_10 -> m31_11  [color=red, key=0, style=solid];
m31_10 -> m31_16  [key=2, style=dotted];
m31_10 -> m31_13  [color=darkseagreen4, key=1, label=connection, style=dashed];
m31_11 -> m31_12  [color=red, key=0, style=solid];
m31_11 -> m31_14  [color=red, key=0, style=solid];
m31_11 -> m31_13  [color=red, key=1, label=table, style=dashed];
m31_13 -> m31_11  [color=red, key=0, style=solid];
m31_13 -> m31_18  [key=2, style=dotted];
m31_13 -> m31_19  [key=2, style=dotted];
m31_12 -> m31_13  [key=0, style=solid];
m31_12 -> m31_17  [key=2, style=dotted];
m31_21 -> m31_22  [color=red, key=0, style=solid];
m31_26 -> m31_27  [color=green, key=0, style=solid];
m31_27 -> m31_28  [color=green, key=0, style=solid];
m31_27 -> m31_29  [color=green, key=2, style=dotted];
m31_28 -> m31_26  [color=blue, key=0, style=bold];
m31_55 -> m31_56  [key=0, style=solid];
m31_62 -> m31_26  [key=2, style=dotted];
m31_62 -> m31_63  [key=0, style=solid];
m31_57 -> m31_22  [key=2, style=dotted];
m31_57 -> m31_58  [key=0, style=solid];
m31_56 -> m31_39  [key=2, style=dotted];
m31_56 -> m31_57  [key=0, style=solid];
m31_61 -> m31_62  [key=0, style=solid];
m31_61 -> m31_43  [key=2, style=dotted];
m31_58 -> m31_59  [key=0, style=solid];
m31_58 -> m31_40  [key=2, style=dotted];
m31_60 -> m31_61  [key=0, style=solid];
m31_60 -> m31_42  [key=2, style=dotted];
m31_59 -> m31_60  [key=0, style=solid];
m31_59 -> m31_41  [key=2, style=dotted];
m31_63 -> m31_55  [color=blue, key=0, style=bold];
m31_64 -> m31_65  [key=0, style=solid];
m31_74 -> m31_26  [key=2, style=dotted];
m31_74 -> m31_75  [key=0, style=solid];
m31_66 -> m31_22  [key=2, style=dotted];
m31_66 -> m31_67  [key=0, style=solid];
m31_65 -> m31_39  [key=2, style=dotted];
m31_65 -> m31_66  [key=0, style=solid];
m31_73 -> m31_74  [key=0, style=solid];
m31_73 -> m31_43  [key=2, style=dotted];
m31_67 -> m31_68  [key=0, style=solid];
m31_67 -> m31_40  [key=2, style=dotted];
m31_71 -> m31_43  [key=2, style=dotted];
m31_71 -> m31_72  [key=0, style=solid];
m31_72 -> m31_73  [key=0, style=solid];
m31_72 -> m31_42  [key=2, style=dotted];
m31_68 -> m31_69  [key=0, style=solid];
m31_68 -> m31_41  [key=2, style=dotted];
m31_70 -> m31_42  [key=2, style=dotted];
m31_70 -> m31_71  [key=0, style=solid];
m31_69 -> m31_41  [key=2, style=dotted];
m31_69 -> m31_70  [key=0, style=solid];
m31_75 -> m31_64  [color=blue, key=0, style=bold];
m31_94 -> m31_92  [color=green, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_32  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_37  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_46  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_52  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_57  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_62  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_66  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_74  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_78  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_83  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m31_94 -> m31_87  [color=darkseagreen4, key=1, label="HangFire.Tests.Server.JobFetcherFeature", style=dashed];
m32_38 -> m32_39  [key=0, style=solid];
m32_39 -> m32_40  [key=0, style=solid];
m32_39 -> m32_41  [key=2, style=dotted];
m32_40 -> m32_38  [color=blue, key=0, style=bold];
m32_16 -> m32_27  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m32_16 -> m32_17  [key=0, style=solid];
m32_16 -> m32_18  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m32_16 -> m32_24  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m32_27 -> m32_28  [color=green, key=0, style=solid];
m32_27 -> m32_37  [color=green, key=2, style=dotted];
m32_21 -> m32_27  [color=green, key=0, style=solid];
m32_21 -> m32_26  [color=green, key=1, label=recurringJobId, style=dashed];
m32_21 -> m32_22  [key=0, style=solid];
m32_21 -> m32_24  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
m32_26 -> m32_21  [color=green, key=0, style=solid];
m32_26 -> m32_33  [color=green, key=2, style=dotted];
m32_26 -> m32_36  [color=green, key=2, style=dotted];
m32_25 -> m32_26  [color=green, key=0, style=solid];
m32_17 -> m32_18  [key=0, style=solid];
m32_17 -> m32_29  [key=2, style=dotted];
m32_24 -> m32_21  [key=0, style=solid];
m32_24 -> m32_25  [key=0, style=solid];
m32_24 -> m32_35  [key=2, style=dotted];
m32_18 -> m32_24  [color=darkseagreen4, key=1, label=connection, style=dashed];
m32_18 -> m32_19  [key=0, style=solid];
m32_18 -> m32_30  [key=2, style=dotted];
m32_18 -> m32_20  [color=darkseagreen4, key=1, label=connection, style=dashed];
m32_18 -> m32_22  [color=darkseagreen4, key=1, label=connection, style=dashed];
m32_20 -> m32_21  [key=0, style=solid];
m32_20 -> m32_32  [key=2, style=dotted];
m32_23 -> m32_21  [key=0, style=solid];
m32_23 -> m32_24  [key=0, style=solid];
m32_22 -> m32_33  [key=2, style=dotted];
m32_22 -> m32_24  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
m32_22 -> m32_23  [key=0, style=solid];
m32_22 -> m32_34  [key=2, style=dotted];
m32_19 -> m32_20  [key=0, style=solid];
m32_19 -> m32_31  [key=2, style=dotted];
m32_28 -> m32_16  [color=blue, key=0, style=bold];
m32_4 -> m32_11  [color=darkseagreen4, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m32_4 -> m32_12  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m32_4 -> m32_13  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_7  [color=darkseagreen4, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m32_4 -> m32_9  [color=darkseagreen4, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m32_11 -> m32_12  [key=0, style=solid];
m32_12 -> m32_13  [key=0, style=solid];
m32_13 -> m32_14  [key=0, style=solid];
m32_9 -> m32_11  [key=0, style=solid];
m32_9 -> m32_10  [key=0, style=solid];
m32_5 -> m32_6  [key=0, style=solid];
m32_5 -> m32_7  [key=0, style=solid];
m32_7 -> m32_9  [key=0, style=solid];
m32_7 -> m32_8  [key=0, style=solid];
m32_10 -> m32_14  [key=0, style=solid];
m32_10 -> m32_15  [key=2, style=dotted];
m32_6 -> m32_14  [key=0, style=solid];
m32_6 -> m32_15  [key=2, style=dotted];
m32_8 -> m32_14  [key=0, style=solid];
m32_8 -> m32_15  [key=2, style=dotted];
m32_14 -> m32_4  [color=blue, key=0, style=bold];
m32_35 -> m32_62  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m32_35 -> m32_42  [key=0, style=solid];
m32_35 -> m32_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m32_35 -> m32_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m32_35 -> m32_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m32_35 -> m32_52  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m32_35 -> m32_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m32_35 -> m32_54  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m32_35 -> m32_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_35 -> m32_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m32_47 -> m32_48  [key=0, style=solid];
m32_47 -> m32_71  [key=2, style=dotted];
m32_47 -> m32_50  [color=darkseagreen4, key=1, label=instant, style=dashed];
m32_47 -> m32_58  [color=darkseagreen4, key=1, label=instant, style=dashed];
m32_47 -> m32_59  [color=darkseagreen4, key=1, label=instant, style=dashed];
m32_47 -> m32_61  [color=darkseagreen4, key=1, label=instant, style=dashed];
m32_55 -> m32_56  [key=0, style=solid];
m32_55 -> m32_79  [key=2, style=dotted];
m32_62 -> m32_33  [key=2, style=dotted];
m32_62 -> m32_63  [key=0, style=solid];
m32_62 -> m32_65  [key=0, style=solid];
m32_62 -> m32_83  [key=2, style=dotted];
m32_46 -> m32_47  [key=0, style=solid];
m32_46 -> m32_69  [key=2, style=dotted];
m32_46 -> m32_70  [key=2, style=dotted];
m32_45 -> m32_47  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m32_45 -> m32_46  [key=0, style=solid];
m32_45 -> m32_68  [key=2, style=dotted];
m32_48 -> m32_49  [key=0, style=solid];
m32_48 -> m32_69  [key=2, style=dotted];
m32_48 -> m32_72  [key=2, style=dotted];
m32_48 -> m32_50  [color=darkseagreen4, key=1, label=lastExecutionTime, style=dashed];
m32_50 -> m32_51  [key=0, style=solid];
m32_50 -> m32_61  [key=0, style=solid];
m32_50 -> m32_74  [key=2, style=dotted];
m32_50 -> m32_75  [key=2, style=dotted];
m32_58 -> m32_59  [key=0, style=solid];
m32_58 -> m32_80  [key=2, style=dotted];
m32_59 -> m32_60  [key=0, style=solid];
m32_59 -> m32_81  [key=2, style=dotted];
m32_59 -> m32_82  [key=2, style=dotted];
m32_61 -> m32_62  [key=0, style=solid];
m32_61 -> m32_81  [key=2, style=dotted];
m32_61 -> m32_82  [key=2, style=dotted];
m32_54 -> m32_55  [key=0, style=solid];
m32_54 -> m32_78  [key=2, style=dotted];
m32_56 -> m32_57  [key=0, style=solid];
m32_56 -> m32_60  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m32_49 -> m32_62  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m32_49 -> m32_50  [key=0, style=solid];
m32_49 -> m32_59  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m32_49 -> m32_61  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m32_49 -> m32_73  [key=2, style=dotted];
m32_49 -> m32_60  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m32_63 -> m32_64  [key=0, style=solid];
m32_42 -> m32_43  [key=0, style=solid];
m32_42 -> m32_66  [key=2, style=dotted];
m32_44 -> m32_45  [key=0, style=solid];
m32_52 -> m32_54  [key=0, style=solid];
m32_52 -> m32_53  [key=0, style=solid];
m32_52 -> m32_69  [key=2, style=dotted];
m32_52 -> m32_77  [key=2, style=dotted];
m32_53 -> m32_54  [key=0, style=solid];
m32_64 -> m32_65  [key=0, style=solid];
m32_64 -> m32_84  [key=2, style=dotted];
m32_64 -> m32_85  [key=2, style=dotted];
m32_51 -> m32_54  [color=darkseagreen4, key=1, label=state, style=dashed];
m32_51 -> m32_52  [key=0, style=solid];
m32_51 -> m32_53  [color=darkseagreen4, key=1, label=state, style=dashed];
m32_51 -> m32_76  [key=2, style=dotted];
m32_57 -> m32_58  [key=0, style=solid];
m32_57 -> m32_59  [key=0, style=solid];
m32_57 -> m32_77  [key=2, style=dotted];
m32_60 -> m32_61  [key=0, style=solid];
m32_60 -> m32_82  [key=2, style=dotted];
m32_43 -> m32_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m32_43 -> m32_44  [key=0, style=solid];
m32_43 -> m32_67  [key=2, style=dotted];
m32_65 -> m32_35  [color=blue, key=0, style=bold];
m32_86 -> m32_27  [color=green, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m32_86 -> m32_11  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m32_86 -> m32_12  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m32_86 -> m32_13  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m32_86 -> m32_17  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m32_86 -> m32_24  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m32_86 -> m32_39  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m32_86 -> m32_47  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m32_86 -> m32_55  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m34_68 -> m34_69  [key=0, style=solid];
m34_69 -> m34_70  [color=red, key=0, style=solid];
m34_69 -> m34_30  [key=2, style=dotted];
m34_70 -> m34_71  [color=red, key=0, style=solid];
m34_70 -> m34_6  [color=red, key=2, style=dotted];
m34_71 -> m34_68  [color=blue, key=0, style=bold];
m34_20 -> m34_21  [key=0, style=solid];
m34_20 -> m34_5  [key=2, style=dotted];
m34_20 -> m34_6  [key=2, style=dotted];
m34_172 -> m34_173  [key=0, style=solid];
m34_173 -> m34_172  [color=blue, key=0, style=bold];
m34_154 -> m34_155  [key=0, style=solid];
m34_155 -> m34_154  [color=blue, key=0, style=bold];
m34_38 -> m34_39  [key=0, style=solid];
m34_38 -> m34_24  [key=2, style=dotted];
m34_38 -> m34_40  [color=darkseagreen4, key=1, label=releaseResult, style=dashed];
m34_39 -> m34_40  [color=red, key=0, style=solid];
m34_39 -> m34_30  [key=2, style=dotted];
m34_39 -> m34_41  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_40 -> m34_41  [color=red, key=0, style=solid];
m34_40 -> m34_6  [color=red, key=2, style=dotted];
m34_40 -> m34_25  [key=2, style=dotted];
m34_40 -> m34_27  [key=2, style=dotted];
m34_41 -> m34_42  [key=0, style=solid];
m34_41 -> m34_6  [key=2, style=dotted];
m34_41 -> m34_29  [color=blue, key=0, style=bold];
m34_42 -> m34_38  [color=blue, key=0, style=bold];
m34_42 -> m34_17  [color=green, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m34_42 -> m34_37  [color=green, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m34_42 -> m34_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m34_42 -> m34_6  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m34_42 -> m34_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m34_42 -> m34_30  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m34_42 -> m34_32  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m34_42 -> m34_34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m34_42 -> m34_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerDistributedLock", style=dashed];
m34_101 -> m34_102  [key=0, style=solid];
m34_102 -> m34_103  [key=0, style=solid];
m34_102 -> m34_30  [key=2, style=dotted];
m34_102 -> m34_104  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_102 -> m34_105  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_103 -> m34_104  [key=0, style=solid];
m34_103 -> m34_6  [key=2, style=dotted];
m34_104 -> m34_105  [key=0, style=solid];
m34_104 -> m34_55  [key=2, style=dotted];
m34_104 -> m34_6  [key=2, style=dotted];
m34_105 -> m34_106  [key=0, style=solid];
m34_105 -> m34_55  [key=2, style=dotted];
m34_105 -> m34_6  [key=2, style=dotted];
m34_106 -> m34_101  [color=blue, key=0, style=bold];
m34_156 -> m34_157  [key=0, style=solid];
m34_157 -> m34_156  [color=blue, key=0, style=bold];
m34_28 -> m34_29  [key=0, style=solid];
m34_28 -> m34_30  [key=2, style=dotted];
m34_158 -> m34_159  [key=0, style=solid];
m34_159 -> m34_158  [color=blue, key=0, style=bold];
m34_6 -> m34_7  [key=0, style=solid];
m34_148 -> m34_149  [key=0, style=solid];
m34_149 -> m34_148  [color=blue, key=0, style=bold];
m34_113 -> m34_114  [key=0, style=solid];
m34_114 -> m34_115  [key=0, style=solid];
m34_114 -> m34_30  [key=2, style=dotted];
m34_114 -> m34_116  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_114 -> m34_117  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_115 -> m34_116  [key=0, style=solid];
m34_115 -> m34_6  [key=2, style=dotted];
m34_116 -> m34_117  [key=0, style=solid];
m34_116 -> m34_55  [key=2, style=dotted];
m34_116 -> m34_6  [key=2, style=dotted];
m34_117 -> m34_118  [key=0, style=solid];
m34_117 -> m34_55  [key=2, style=dotted];
m34_117 -> m34_6  [key=2, style=dotted];
m34_118 -> m34_113  [color=blue, key=0, style=bold];
m34_31 -> m34_32  [key=0, style=solid];
m34_31 -> m34_41  [key=0, style=solid];
m34_32 -> m34_33  [key=0, style=solid];
m34_32 -> m34_26  [key=2, style=dotted];
m34_32 -> m34_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_33 -> m34_34  [key=0, style=solid];
m34_33 -> m34_6  [key=2, style=dotted];
m34_33 -> m34_37  [color=green, key=1, label=parameters, style=dashed];
m34_33 -> m34_21  [key=2, style=dotted];
m34_33 -> m34_35  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m34_33 -> m34_36  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m34_33 -> m34_38  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m34_34 -> m34_31  [color=blue, key=0, style=bold];
m34_34 -> m34_22  [key=2, style=dotted];
m34_34 -> m34_35  [key=0, style=solid];
m34_13 -> m34_14  [color=green, key=0, style=solid];
m34_13 -> m34_22  [key=2, style=dotted];
m34_14 -> m34_15  [color=green, key=0, style=solid];
m34_14 -> m34_5  [color=red, key=2, style=dotted];
m34_14 -> m34_6  [color=red, key=2, style=dotted];
m34_14 -> m34_23  [color=green, key=2, style=dotted];
m34_15 -> m34_16  [color=green, key=0, style=solid];
m34_15 -> m34_5  [key=2, style=dotted];
m34_15 -> m34_6  [key=2, style=dotted];
m34_15 -> m34_17  [color=green, key=1, label=lockResult, style=dashed];
m34_15 -> m34_24  [key=2, style=dotted];
m34_16 -> m34_17  [color=green, key=0, style=solid];
m34_16 -> m34_5  [key=2, style=dotted];
m34_16 -> m34_6  [key=2, style=dotted];
m34_16 -> m34_18  [color=green, key=0, style=solid];
m34_17 -> m34_18  [color=green, key=0, style=solid];
m34_17 -> m34_5  [color=red, key=2, style=dotted];
m34_17 -> m34_6  [color=red, key=2, style=dotted];
m34_17 -> m34_25  [color=green, key=2, style=dotted];
m34_17 -> m34_26  [color=green, key=2, style=dotted];
m34_17 -> m34_27  [color=green, key=2, style=dotted];
m34_17 -> m34_28  [color=green, key=2, style=dotted];
m34_18 -> m34_13  [color=blue, key=0, style=bold];
m34_18 -> m34_0  [color=blue, key=0, style=bold];
m34_134 -> m34_135  [key=0, style=solid];
m34_135 -> m34_136  [key=0, style=solid];
m34_135 -> m34_30  [key=2, style=dotted];
m34_135 -> m34_137  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_135 -> m34_138  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_136 -> m34_137  [key=0, style=solid];
m34_136 -> m34_6  [key=2, style=dotted];
m34_137 -> m34_138  [key=0, style=solid];
m34_137 -> m34_55  [key=2, style=dotted];
m34_137 -> m34_6  [key=2, style=dotted];
m34_138 -> m34_139  [key=0, style=solid];
m34_138 -> m34_55  [key=2, style=dotted];
m34_138 -> m34_6  [key=2, style=dotted];
m34_139 -> m34_134  [color=blue, key=0, style=bold];
m34_107 -> m34_108  [key=0, style=solid];
m34_108 -> m34_109  [key=0, style=solid];
m34_108 -> m34_30  [key=2, style=dotted];
m34_108 -> m34_110  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_108 -> m34_111  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_109 -> m34_110  [key=0, style=solid];
m34_109 -> m34_6  [key=2, style=dotted];
m34_110 -> m34_111  [key=0, style=solid];
m34_110 -> m34_55  [key=2, style=dotted];
m34_110 -> m34_6  [key=2, style=dotted];
m34_111 -> m34_112  [key=0, style=solid];
m34_111 -> m34_55  [key=2, style=dotted];
m34_111 -> m34_6  [key=2, style=dotted];
m34_112 -> m34_107  [color=blue, key=0, style=bold];
m34_144 -> m34_145  [key=0, style=solid];
m34_145 -> m34_146  [key=0, style=solid];
m34_145 -> m34_30  [key=2, style=dotted];
m34_146 -> m34_147  [key=0, style=solid];
m34_146 -> m34_6  [key=2, style=dotted];
m34_147 -> m34_144  [color=blue, key=0, style=bold];
m34_24 -> m34_25  [key=0, style=solid];
m34_24 -> m34_6  [key=2, style=dotted];
m34_164 -> m34_165  [key=0, style=solid];
m34_165 -> m34_164  [color=blue, key=0, style=bold];
m34_176 -> m34_177  [key=0, style=solid];
m34_177 -> m34_176  [color=blue, key=0, style=bold];
m34_43 -> m34_44  [color=red, key=0, style=solid];
m34_44 -> m34_45  [color=red, key=0, style=solid];
m34_44 -> m34_30  [color=red, key=2, style=dotted];
m34_44 -> m34_46  [color=red, key=1, label=method, style=dashed];
m34_45 -> m34_46  [key=0, style=solid];
m34_45 -> m34_6  [key=2, style=dotted];
m34_46 -> m34_47  [key=0, style=solid];
m34_46 -> m34_6  [key=2, style=dotted];
m34_47 -> m34_43  [color=blue, key=0, style=bold];
m34_119 -> m34_120  [key=0, style=solid];
m34_120 -> m34_121  [key=0, style=solid];
m34_120 -> m34_30  [key=2, style=dotted];
m34_120 -> m34_122  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_120 -> m34_123  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_120 -> m34_124  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_121 -> m34_122  [key=0, style=solid];
m34_121 -> m34_6  [key=2, style=dotted];
m34_122 -> m34_123  [key=0, style=solid];
m34_122 -> m34_55  [key=2, style=dotted];
m34_122 -> m34_6  [key=2, style=dotted];
m34_123 -> m34_124  [key=0, style=solid];
m34_123 -> m34_55  [key=2, style=dotted];
m34_123 -> m34_6  [key=2, style=dotted];
m34_124 -> m34_125  [key=0, style=solid];
m34_124 -> m34_55  [key=2, style=dotted];
m34_124 -> m34_6  [key=2, style=dotted];
m34_125 -> m34_119  [color=blue, key=0, style=bold];
m34_140 -> m34_141  [key=0, style=solid];
m34_141 -> m34_142  [key=0, style=solid];
m34_141 -> m34_30  [key=2, style=dotted];
m34_142 -> m34_143  [key=0, style=solid];
m34_142 -> m34_6  [key=2, style=dotted];
m34_143 -> m34_140  [color=blue, key=0, style=bold];
m34_79 -> m34_80  [color=red, key=0, style=solid];
m34_80 -> m34_81  [color=red, key=0, style=solid];
m34_80 -> m34_30  [color=red, key=2, style=dotted];
m34_81 -> m34_82  [key=0, style=solid];
m34_81 -> m34_6  [key=2, style=dotted];
m34_82 -> m34_79  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [key=0, style=solid];
m34_0 -> m34_14  [color=green, key=1, label=IDbConnection, style=dashed];
m34_0 -> m34_3  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m34_0 -> m34_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m34_0 -> m34_6  [color=darkseagreen4, key=1, label=IDbConnection, style=dashed];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_5  [key=2, style=dotted];
m34_1 -> m34_6  [key=2, style=dotted];
m34_1 -> m34_3  [key=0, style=solid];
m34_1 -> m34_19  [key=2, style=dotted];
m34_2 -> m34_3  [color=red, key=0, style=solid];
m34_2 -> m34_5  [key=2, style=dotted];
m34_2 -> m34_6  [key=2, style=dotted];
m34_2 -> m34_18  [key=0, style=solid];
m34_2 -> m34_20  [key=2, style=dotted];
m34_3 -> m34_4  [color=red, key=0, style=solid];
m34_3 -> m34_5  [color=red, key=2, style=dotted];
m34_3 -> m34_6  [color=red, key=2, style=dotted];
m34_4 -> m34_0  [color=blue, key=0, style=bold];
m34_4 -> m34_18  [key=0, style=solid];
m34_4 -> m34_20  [key=2, style=dotted];
m34_22 -> m34_23  [color=red, key=0, style=solid];
m34_23 -> m34_24  [color=red, key=0, style=solid];
m34_23 -> m34_26  [color=red, key=2, style=dotted];
m34_23 -> m34_27  [color=red, key=1, label="lambda expression", style=dashed];
m34_25 -> m34_22  [color=blue, key=0, style=bold];
m34_95 -> m34_96  [color=red, key=0, style=solid];
m34_96 -> m34_97  [color=red, key=0, style=solid];
m34_96 -> m34_30  [color=red, key=2, style=dotted];
m34_96 -> m34_98  [color=red, key=1, label=method, style=dashed];
m34_96 -> m34_99  [color=red, key=1, label=method, style=dashed];
m34_97 -> m34_98  [key=0, style=solid];
m34_97 -> m34_6  [key=2, style=dotted];
m34_98 -> m34_99  [key=0, style=solid];
m34_98 -> m34_55  [key=2, style=dotted];
m34_98 -> m34_6  [key=2, style=dotted];
m34_99 -> m34_100  [key=0, style=solid];
m34_99 -> m34_55  [key=2, style=dotted];
m34_99 -> m34_6  [key=2, style=dotted];
m34_100 -> m34_95  [color=blue, key=0, style=bold];
m34_166 -> m34_167  [key=0, style=solid];
m34_167 -> m34_166  [color=blue, key=0, style=bold];
m34_170 -> m34_171  [key=0, style=solid];
m34_171 -> m34_170  [color=blue, key=0, style=bold];
m34_7 -> m34_14  [color=green, key=1, label=parameters, style=dashed];
m34_7 -> m34_8  [color=red, key=0, style=solid];
m34_7 -> m34_21  [key=2, style=dotted];
m34_7 -> m34_9  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m34_7 -> m34_10  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m34_7 -> m34_11  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m34_7 -> m34_12  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m34_7 -> m34_13  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m34_7 -> m34_15  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m34_5 -> m34_6  [key=0, style=solid];
m34_8 -> m34_9  [color=red, key=0, style=solid];
m34_8 -> m34_22  [key=2, style=dotted];
m34_8 -> m34_5  [color=red, key=2, style=dotted];
m34_8 -> m34_6  [color=red, key=2, style=dotted];
m34_9 -> m34_10  [key=0, style=solid];
m34_9 -> m34_22  [key=2, style=dotted];
m34_9 -> m34_5  [key=2, style=dotted];
m34_9 -> m34_6  [key=2, style=dotted];
m34_10 -> m34_11  [color=red, key=0, style=solid];
m34_10 -> m34_22  [key=2, style=dotted];
m34_10 -> m34_5  [key=2, style=dotted];
m34_10 -> m34_6  [key=2, style=dotted];
m34_11 -> m34_12  [color=red, key=0, style=solid];
m34_11 -> m34_22  [key=2, style=dotted];
m34_11 -> m34_5  [color=red, key=2, style=dotted];
m34_11 -> m34_6  [color=red, key=2, style=dotted];
m34_12 -> m34_13  [key=0, style=solid];
m34_12 -> m34_22  [key=2, style=dotted];
m34_12 -> m34_7  [color=blue, key=0, style=bold];
m34_21 -> m34_19  [color=blue, key=0, style=bold];
m34_19 -> m34_20  [key=0, style=solid];
m34_91 -> m34_92  [color=red, key=0, style=solid];
m34_92 -> m34_93  [color=red, key=0, style=solid];
m34_92 -> m34_30  [color=red, key=2, style=dotted];
m34_93 -> m34_94  [key=0, style=solid];
m34_93 -> m34_6  [key=2, style=dotted];
m34_94 -> m34_91  [color=blue, key=0, style=bold];
m34_30 -> m34_31  [key=0, style=solid];
m34_30 -> m34_32  [key=0, style=solid];
m34_72 -> m34_73  [color=red, key=0, style=solid];
m34_73 -> m34_74  [color=red, key=0, style=solid];
m34_73 -> m34_30  [color=red, key=2, style=dotted];
m34_73 -> m34_75  [color=red, key=1, label=method, style=dashed];
m34_73 -> m34_76  [color=red, key=1, label=method, style=dashed];
m34_73 -> m34_77  [color=red, key=1, label=method, style=dashed];
m34_74 -> m34_75  [key=0, style=solid];
m34_74 -> m34_6  [key=2, style=dotted];
m34_75 -> m34_76  [key=0, style=solid];
m34_75 -> m34_6  [key=2, style=dotted];
m34_76 -> m34_77  [key=0, style=solid];
m34_76 -> m34_6  [key=2, style=dotted];
m34_77 -> m34_78  [key=0, style=solid];
m34_77 -> m34_6  [key=2, style=dotted];
m34_78 -> m34_72  [color=blue, key=0, style=bold];
m34_48 -> m34_49  [key=0, style=solid];
m34_49 -> m34_50  [key=0, style=solid];
m34_49 -> m34_30  [key=2, style=dotted];
m34_49 -> m34_51  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_49 -> m34_52  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_49 -> m34_53  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_50 -> m34_51  [key=0, style=solid];
m34_50 -> m34_6  [key=2, style=dotted];
m34_51 -> m34_52  [key=0, style=solid];
m34_51 -> m34_6  [key=2, style=dotted];
m34_52 -> m34_53  [key=0, style=solid];
m34_52 -> m34_55  [key=2, style=dotted];
m34_52 -> m34_6  [key=2, style=dotted];
m34_53 -> m34_54  [key=0, style=solid];
m34_53 -> m34_55  [key=2, style=dotted];
m34_53 -> m34_6  [key=2, style=dotted];
m34_54 -> m34_48  [color=blue, key=0, style=bold];
m34_126 -> m34_127  [key=0, style=solid];
m34_127 -> m34_128  [key=0, style=solid];
m34_127 -> m34_30  [key=2, style=dotted];
m34_127 -> m34_129  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_127 -> m34_130  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_127 -> m34_131  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_127 -> m34_132  [color=darkseagreen4, key=1, label=method, style=dashed];
m34_128 -> m34_129  [key=0, style=solid];
m34_128 -> m34_6  [key=2, style=dotted];
m34_129 -> m34_130  [key=0, style=solid];
m34_129 -> m34_55  [key=2, style=dotted];
m34_129 -> m34_6  [key=2, style=dotted];
m34_130 -> m34_131  [key=0, style=solid];
m34_130 -> m34_55  [key=2, style=dotted];
m34_130 -> m34_6  [key=2, style=dotted];
m34_131 -> m34_132  [key=0, style=solid];
m34_131 -> m34_55  [key=2, style=dotted];
m34_131 -> m34_6  [key=2, style=dotted];
m34_132 -> m34_133  [key=0, style=solid];
m34_132 -> m34_55  [key=2, style=dotted];
m34_132 -> m34_6  [key=2, style=dotted];
m34_133 -> m34_126  [color=blue, key=0, style=bold];
m34_152 -> m34_153  [key=0, style=solid];
m34_153 -> m34_152  [color=blue, key=0, style=bold];
m34_64 -> m34_65  [key=0, style=solid];
m34_65 -> m34_66  [color=red, key=0, style=solid];
m34_65 -> m34_30  [key=2, style=dotted];
m34_66 -> m34_67  [color=red, key=0, style=solid];
m34_66 -> m34_6  [color=red, key=2, style=dotted];
m34_67 -> m34_64  [color=blue, key=0, style=bold];
m34_168 -> m34_169  [key=0, style=solid];
m34_169 -> m34_168  [color=blue, key=0, style=bold];
m34_174 -> m34_175  [key=0, style=solid];
m34_175 -> m34_174  [color=blue, key=0, style=bold];
m34_83 -> m34_84  [key=0, style=solid];
m34_84 -> m34_85  [key=0, style=solid];
m34_84 -> m34_30  [key=2, style=dotted];
m34_85 -> m34_86  [key=0, style=solid];
m34_85 -> m34_6  [key=2, style=dotted];
m34_86 -> m34_83  [color=blue, key=0, style=bold];
m34_35 -> m34_36  [key=0, style=solid];
m34_35 -> m34_22  [key=2, style=dotted];
m34_27 -> m34_28  [key=0, style=solid];
m34_29 -> m34_27  [color=blue, key=0, style=bold];
m34_29 -> m34_30  [key=0, style=solid];
m34_36 -> m34_37  [color=green, key=0, style=solid];
m34_36 -> m34_30  [key=2, style=dotted];
m34_36 -> m34_22  [key=2, style=dotted];
m34_37 -> m34_35  [color=blue, key=0, style=bold];
m34_37 -> m34_38  [color=green, key=0, style=solid];
m34_37 -> m34_23  [color=green, key=2, style=dotted];
m34_150 -> m34_151  [key=0, style=solid];
m34_151 -> m34_150  [color=blue, key=0, style=bold];
m34_87 -> m34_88  [key=0, style=solid];
m34_88 -> m34_89  [key=0, style=solid];
m34_88 -> m34_30  [key=2, style=dotted];
m34_89 -> m34_90  [key=0, style=solid];
m34_89 -> m34_6  [key=2, style=dotted];
m34_90 -> m34_87  [color=blue, key=0, style=bold];
m34_56 -> m34_57  [color=red, key=0, style=solid];
m34_57 -> m34_58  [color=red, key=0, style=solid];
m34_57 -> m34_30  [color=red, key=2, style=dotted];
m34_57 -> m34_59  [color=red, key=1, label=method, style=dashed];
m34_57 -> m34_60  [color=red, key=1, label=method, style=dashed];
m34_57 -> m34_61  [color=red, key=1, label=method, style=dashed];
m34_57 -> m34_62  [color=red, key=1, label=method, style=dashed];
m34_58 -> m34_59  [key=0, style=solid];
m34_58 -> m34_6  [key=2, style=dotted];
m34_59 -> m34_60  [key=0, style=solid];
m34_59 -> m34_6  [key=2, style=dotted];
m34_60 -> m34_61  [key=0, style=solid];
m34_60 -> m34_55  [key=2, style=dotted];
m34_60 -> m34_6  [key=2, style=dotted];
m34_61 -> m34_62  [key=0, style=solid];
m34_61 -> m34_55  [key=2, style=dotted];
m34_61 -> m34_6  [key=2, style=dotted];
m34_62 -> m34_63  [key=0, style=solid];
m34_62 -> m34_55  [key=2, style=dotted];
m34_62 -> m34_6  [key=2, style=dotted];
m34_63 -> m34_56  [color=blue, key=0, style=bold];
m34_160 -> m34_161  [key=0, style=solid];
m34_161 -> m34_160  [color=blue, key=0, style=bold];
m34_162 -> m34_163  [key=0, style=solid];
m34_163 -> m34_162  [color=blue, key=0, style=bold];
m35_3 -> m35_4  [key=0, style=solid];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_6  [key=2, style=dotted];
m35_5 -> m35_3  [color=blue, key=0, style=bold];
m35_0 -> m35_1  [color=red, key=0, style=solid];
m35_1 -> m35_2  [color=red, key=0, style=solid];
m35_2 -> m35_0  [color=blue, key=0, style=bold];
m35_7 -> m35_1  [color=red, key=1, label="HangFire.Common.States.JobState", style=dashed];
m36_5 -> m36_6  [key=0, style=solid];
m36_6 -> m36_7  [key=0, style=solid];
m36_6 -> m36_8  [key=2, style=dotted];
m36_6 -> m36_4  [key=2, style=dotted];
m36_7 -> m36_5  [color=blue, key=0, style=bold];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_2  [key=0, style=solid];
m36_1 -> m36_3  [key=2, style=dotted];
m36_1 -> m36_4  [key=2, style=dotted];
m36_2 -> m36_0  [color=blue, key=0, style=bold];
m36_17 -> m36_18  [key=0, style=solid];
m36_17 -> m36_36  [color=darkorchid, key=3, label="Parameter variable Table args", style=bold];
m36_18 -> m36_19  [key=0, style=solid];
m36_18 -> m36_16  [key=2, style=dotted];
m36_19 -> m36_17  [color=blue, key=0, style=bold];
m36_46 -> m36_47  [key=0, style=solid];
m36_46 -> m36_3  [key=2, style=dotted];
m36_46 -> m36_25  [key=2, style=dotted];
m36_45 -> m36_46  [key=0, style=solid];
m36_47 -> m36_45  [color=blue, key=0, style=bold];
m36_12 -> m36_13  [key=0, style=solid];
m36_13 -> m36_14  [key=0, style=solid];
m36_13 -> m36_15  [key=2, style=dotted];
m36_13 -> m36_16  [key=2, style=dotted];
m36_14 -> m36_12  [color=blue, key=0, style=bold];
m36_9 -> m36_10  [key=0, style=solid];
m36_10 -> m36_11  [key=0, style=solid];
m36_10 -> m36_8  [key=2, style=dotted];
m36_10 -> m36_4  [key=2, style=dotted];
m36_11 -> m36_9  [color=blue, key=0, style=bold];
m36_41 -> m36_42  [key=0, style=solid];
m36_42 -> m36_43  [key=0, style=solid];
m36_42 -> m36_3  [key=2, style=dotted];
m36_42 -> m36_26  [key=2, style=dotted];
m36_42 -> m36_44  [key=2, style=dotted];
m36_42 -> m36_29  [key=2, style=dotted];
m36_43 -> m36_41  [color=blue, key=0, style=bold];
m36_33 -> m36_34  [key=0, style=solid];
m36_30 -> m36_31  [key=0, style=solid];
m36_31 -> m36_32  [key=0, style=solid];
m36_32 -> m36_30  [color=blue, key=0, style=bold];
m36_34 -> m36_35  [key=0, style=solid];
m36_35 -> m36_33  [color=blue, key=0, style=bold];
m36_21 -> m36_22  [key=0, style=solid];
m36_21 -> m36_3  [key=2, style=dotted];
m36_21 -> m36_25  [key=2, style=dotted];
m36_16 -> m36_20  [key=0, style=solid];
m36_16 -> m36_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m36_16 -> m36_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m36_16 -> m36_12  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m36_16 -> m36_17  [color=darkorchid, key=3, label="Parameter variable Table args", style=bold];
m36_20 -> m36_21  [key=0, style=solid];
m36_20 -> m36_3  [key=2, style=dotted];
m36_20 -> m36_24  [key=2, style=dotted];
m36_22 -> m36_23  [key=0, style=solid];
m36_22 -> m36_3  [key=2, style=dotted];
m36_22 -> m36_26  [key=2, style=dotted];
m36_22 -> m36_27  [key=2, style=dotted];
m36_22 -> m36_28  [key=2, style=dotted];
m36_22 -> m36_29  [key=2, style=dotted];
m36_22 -> m36_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_22 -> m36_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m36_23 -> m36_16  [color=blue, key=0, style=bold];
m36_36 -> m36_37  [key=0, style=solid];
m36_37 -> m36_38  [key=0, style=solid];
m36_37 -> m36_17  [key=2, style=dotted];
m36_38 -> m36_39  [key=0, style=solid];
m36_38 -> m36_3  [key=2, style=dotted];
m36_38 -> m36_40  [key=2, style=dotted];
m36_39 -> m36_36  [color=blue, key=0, style=bold];
m36_48 -> m36_49  [key=0, style=solid];
m36_48 -> m36_50  [color=red, key=1, label=string, style=dashed];
m36_49 -> m36_50  [color=red, key=0, style=solid];
m36_49 -> m36_3  [key=2, style=dotted];
m36_49 -> m36_52  [key=2, style=dotted];
m36_50 -> m36_51  [color=red, key=0, style=solid];
m36_50 -> m36_53  [color=red, key=2, style=dotted];
m36_51 -> m36_48  [color=blue, key=0, style=bold];
m36_54 -> m36_13  [color=darkseagreen4, key=1, label="HangFire.Tests.JobSteps", style=dashed];
m36_54 -> m36_18  [color=darkseagreen4, key=1, label="HangFire.Tests.JobSteps", style=dashed];
m36_54 -> m36_37  [color=darkseagreen4, key=1, label="HangFire.Tests.JobSteps", style=dashed];
m37_15 -> m37_23  [key=0, style=solid];
m37_15 -> m37_25  [color=darkseagreen4, key=1, label="System.Reflection.Assembly", style=dashed];
m37_15 -> m37_6  [color=red, key=3, label="Parameter variable string resourceName", style=bold];
m37_11 -> m37_12  [key=0, style=solid];
m37_28 -> m37_15  [color=blue, key=0, style=bold];
m37_23 -> m37_24  [color=green, key=0, style=solid];
m37_23 -> m37_29  [key=2, style=dotted];
m37_23 -> m37_26  [color=darkseagreen4, key=1, label=stream, style=dashed];
m37_23 -> m37_30  [key=2, style=dotted];
m37_25 -> m37_28  [key=0, style=solid];
m37_25 -> m37_30  [key=2, style=dotted];
m37_25 -> m37_31  [key=2, style=dotted];
m37_25 -> m37_26  [key=0, style=solid];
m37_24 -> m37_25  [key=0, style=solid];
m37_24 -> m37_26  [key=0, style=solid];
m37_24 -> m37_27  [color=green, key=0, style=solid];
m37_26 -> m37_27  [key=0, style=solid];
m37_26 -> m37_32  [key=2, style=dotted];
m37_26 -> m37_31  [key=2, style=dotted];
m37_27 -> m37_28  [key=0, style=solid];
m37_27 -> m37_33  [key=2, style=dotted];
m37_27 -> m37_16  [color=blue, key=0, style=bold];
m37_16 -> m37_22  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m37_16 -> m37_17  [key=0, style=solid];
m37_16 -> m37_19  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m37_22 -> m37_23  [key=0, style=solid];
m37_22 -> m37_29  [key=2, style=dotted];
m37_18 -> m37_27  [key=0, style=solid];
m37_18 -> m37_15  [key=2, style=dotted];
m37_18 -> m37_19  [key=0, style=solid];
m37_18 -> m37_21  [key=2, style=dotted];
m37_18 -> m37_22  [key=2, style=dotted];
m37_20 -> m37_27  [key=0, style=solid];
m37_20 -> m37_15  [key=2, style=dotted];
m37_20 -> m37_13  [color=blue, key=0, style=bold];
m37_21 -> m37_22  [key=0, style=solid];
m37_21 -> m37_28  [key=2, style=dotted];
m37_17 -> m37_18  [key=0, style=solid];
m37_17 -> m37_19  [key=0, style=solid];
m37_19 -> m37_20  [key=0, style=solid];
m37_19 -> m37_21  [key=0, style=solid];
m37_32 -> m37_38  [color=green, key=1, label=string, style=dashed];
m37_32 -> m37_33  [key=0, style=solid];
m37_32 -> m37_35  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m37_32 -> m37_39  [color=darkseagreen4, key=1, label="Hangfire.States.IState", style=dashed];
m37_38 -> m37_39  [color=green, key=0, style=solid];
m37_38 -> m37_43  [color=green, key=2, style=dotted];
m37_38 -> m37_44  [color=green, key=2, style=dotted];
m37_37 -> m37_38  [color=green, key=0, style=solid];
m37_37 -> m37_28  [key=2, style=dotted];
m37_39 -> m37_42  [key=0, style=solid];
m37_39 -> m37_45  [key=2, style=dotted];
m37_33 -> m37_34  [key=0, style=solid];
m37_33 -> m37_35  [key=0, style=solid];
m37_35 -> m37_37  [key=0, style=solid];
m37_35 -> m37_36  [key=0, style=solid];
m37_34 -> m37_42  [key=0, style=solid];
m37_34 -> m37_15  [key=2, style=dotted];
m37_36 -> m37_42  [key=0, style=solid];
m37_36 -> m37_15  [key=2, style=dotted];
m37_41 -> m37_42  [key=0, style=solid];
m37_41 -> m37_31  [key=2, style=dotted];
m37_40 -> m37_41  [key=0, style=solid];
m37_42 -> m37_32  [color=blue, key=0, style=bold];
m37_0 -> m37_39  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m37_0 -> m37_1  [key=0, style=solid];
m37_0 -> m37_25  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m37_0 -> m37_4  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m37_0 -> m37_8  [color=red, key=1, label=SqlConnection, style=dashed];
m37_1 -> m37_0  [color=blue, key=0, style=bold];
m37_1 -> m37_2  [key=0, style=solid];
m37_1 -> m37_3  [color=red, key=0, style=solid];
m37_13 -> m37_18  [key=0, style=solid];
m37_13 -> m37_0  [color=darkorchid, key=3, label="Parameter variable SqlConnection connection", style=bold];
m37_13 -> m37_14  [key=0, style=solid];
m37_4 -> m37_5  [key=0, style=solid];
m37_4 -> m37_6  [color=red, key=0, style=solid];
m37_4 -> m37_13  [key=2, style=dotted];
m37_4 -> m37_11  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m37_4 -> m37_12  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m37_4 -> m37_7  [color=darkseagreen4, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m37_4 -> m37_9  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m37_8 -> m37_9  [color=red, key=0, style=solid];
m37_8 -> m37_17  [color=red, key=2, style=dotted];
m37_8 -> m37_15  [key=2, style=dotted];
m37_8 -> m37_14  [key=0, style=solid];
m37_2 -> m37_10  [key=0, style=solid];
m37_2 -> m37_11  [key=2, style=dotted];
m37_3 -> m37_4  [color=red, key=0, style=solid];
m37_3 -> m37_12  [color=red, key=2, style=dotted];
m37_5 -> m37_10  [key=0, style=solid];
m37_5 -> m37_14  [key=2, style=dotted];
m37_5 -> m37_6  [key=0, style=solid];
m37_5 -> m37_7  [key=0, style=solid];
m37_6 -> m37_7  [color=red, key=0, style=solid];
m37_6 -> m37_15  [color=red, key=2, style=dotted];
m37_6 -> m37_14  [key=0, style=solid];
m37_7 -> m37_8  [color=red, key=0, style=solid];
m37_7 -> m37_16  [color=red, key=2, style=dotted];
m37_7 -> m37_7  [color=red, key=1, label=script, style=dashed];
m37_7 -> m37_9  [key=0, style=solid];
m37_9 -> m37_10  [key=0, style=solid];
m37_9 -> m37_12  [key=2, style=dotted];
m37_9 -> m37_11  [key=0, style=solid];
m37_10 -> m37_0  [color=blue, key=0, style=bold];
m37_10 -> m37_15  [key=2, style=dotted];
m37_10 -> m37_14  [key=0, style=solid];
m37_12 -> m37_13  [key=0, style=solid];
m37_14 -> m37_4  [color=blue, key=0, style=bold];
m37_46 -> m37_38  [color=green, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m37_46 -> m37_23  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m37_46 -> m37_11  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m37_46 -> m37_12  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m37_46 -> m37_13  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m37_46 -> m37_21  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m37_46 -> m37_22  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m37_46 -> m37_37  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobClient", style=dashed];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_0  [color=blue, key=0, style=bold];
m40_10 -> m40_11  [key=0, style=solid];
m40_11 -> m40_10  [color=blue, key=0, style=bold];
m40_6 -> m40_7  [key=0, style=solid];
m40_7 -> m40_6  [color=blue, key=0, style=bold];
m40_24 -> m40_25  [key=0, style=solid];
m40_25 -> m40_24  [color=blue, key=0, style=bold];
m40_0 -> m40_1  [key=0, style=solid];
m40_1 -> m40_0  [color=blue, key=0, style=bold];
m40_20 -> m40_21  [key=0, style=solid];
m40_21 -> m40_20  [color=blue, key=0, style=bold];
m40_14 -> m40_15  [key=0, style=solid];
m40_15 -> m40_14  [color=blue, key=0, style=bold];
m40_22 -> m40_23  [key=0, style=solid];
m40_23 -> m40_22  [color=blue, key=0, style=bold];
m40_12 -> m40_13  [key=0, style=solid];
m40_13 -> m40_12  [color=blue, key=0, style=bold];
m40_18 -> m40_19  [key=0, style=solid];
m40_19 -> m40_18  [color=blue, key=0, style=bold];
m40_16 -> m40_17  [key=0, style=solid];
m40_17 -> m40_16  [color=blue, key=0, style=bold];
m40_2 -> m40_3  [key=0, style=solid];
m40_3 -> m40_2  [color=blue, key=0, style=bold];
m40_8 -> m40_9  [key=0, style=solid];
m40_9 -> m40_8  [color=blue, key=0, style=bold];
m40_4 -> m40_5  [key=0, style=solid];
m40_5 -> m40_4  [color=blue, key=0, style=bold];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_2  [key=0, style=solid];
m41_2 -> m41_0  [color=blue, key=0, style=bold];
m41_3 -> m41_4  [key=0, style=solid];
m41_3 -> m41_5  [color=green, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m41_4 -> m41_5  [color=green, key=0, style=solid];
m41_4 -> m41_6  [key=0, style=solid];
m41_5 -> m41_6  [color=green, key=0, style=solid];
m41_5 -> m41_7  [color=green, key=2, style=dotted];
m41_5 -> m41_8  [color=green, key=2, style=dotted];
m41_6 -> m41_3  [color=blue, key=0, style=bold];
m41_9 -> m41_1  [color=darkseagreen4, key=1, label="HangFire.Filters.RecurringAttribute", style=dashed];
m41_9 -> m41_5  [color=green, key=1, label="HangFire.Filters.RecurringAttribute", style=dashed];
m42_0 -> m42_1  [color=red, key=0, style=solid];
m42_1 -> m42_2  [color=red, key=0, style=solid];
m42_2 -> m42_3  [color=red, key=0, style=solid];
m42_2 -> m42_10  [color=red, key=2, style=dotted];
m42_2 -> m42_4  [color=red, key=1, label=storage, style=dashed];
m42_2 -> m42_5  [color=red, key=1, label=storage, style=dashed];
m42_2 -> m42_6  [color=red, key=1, label=storage, style=dashed];
m42_2 -> m42_7  [color=red, key=1, label=storage, style=dashed];
m42_2 -> m42_8  [color=red, key=1, label=storage, style=dashed];
m42_3 -> m42_4  [color=red, key=0, style=solid];
m42_4 -> m42_5  [color=red, key=0, style=solid];
m42_5 -> m42_6  [color=red, key=0, style=solid];
m42_6 -> m42_7  [color=red, key=0, style=solid];
m42_7 -> m42_8  [color=red, key=0, style=solid];
m42_8 -> m42_9  [color=red, key=0, style=solid];
m42_9 -> m42_0  [color=blue, key=0, style=bold];
m42_15 -> m42_16  [color=red, key=0, style=solid];
m42_16 -> m42_17  [color=red, key=0, style=solid];
m42_16 -> m42_18  [color=red, key=2, style=dotted];
m42_17 -> m42_15  [color=blue, key=0, style=bold];
m42_11 -> m42_12  [color=red, key=0, style=solid];
m42_12 -> m42_13  [color=red, key=0, style=solid];
m42_12 -> m42_14  [color=red, key=2, style=dotted];
m42_13 -> m42_11  [color=blue, key=0, style=bold];
m42_19 -> m42_1  [color=red, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m42_19 -> m42_2  [color=red, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m42_19 -> m42_3  [color=red, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m42_19 -> m42_4  [color=red, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m42_19 -> m42_5  [color=red, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m42_19 -> m42_6  [color=red, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m42_19 -> m42_7  [color=red, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m42_19 -> m42_8  [color=red, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m42_19 -> m42_12  [color=red, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m42_19 -> m42_16  [color=red, key=1, label="HangFire.Redis.RedisAtomicWriteTransaction", style=dashed];
m43_0 -> m43_1  [key=0, style=solid];
m43_1 -> m43_0  [color=blue, key=0, style=bold];
m43_4 -> m43_5  [key=0, style=solid];
m43_5 -> m43_4  [color=blue, key=0, style=bold];
m43_2 -> m43_3  [key=0, style=solid];
m43_3 -> m43_2  [color=blue, key=0, style=bold];
m44_43 -> m44_45  [color=green, key=1, label=int, style=dashed];
m44_43 -> m44_44  [key=0, style=solid];
m44_45 -> m44_46  [color=green, key=0, style=solid];
m44_45 -> m44_58  [color=green, key=2, style=dotted];
m44_45 -> m44_51  [color=green, key=1, label=scheduledJobs, style=dashed];
m44_45 -> m44_56  [color=green, key=1, label=scheduledJobs, style=dashed];
m44_44 -> m44_45  [color=green, key=0, style=solid];
m44_46 -> m44_47  [color=green, key=0, style=solid];
m44_46 -> m44_48  [color=green, key=0, style=solid];
m44_51 -> m44_52  [key=0, style=solid];
m44_51 -> m44_55  [key=0, style=solid];
m44_56 -> m44_57  [color=green, key=0, style=solid];
m44_56 -> m44_63  [color=green, key=2, style=dotted];
m44_56 -> m44_80  [color=green, key=1, label="lambda expression", style=dashed];
m44_56 -> m44_83  [color=green, key=1, label="lambda expression", style=dashed];
m44_47 -> m44_57  [key=0, style=solid];
m44_47 -> m44_59  [key=2, style=dotted];
m44_48 -> m44_56  [color=green, key=1, label=jobs, style=dashed];
m44_48 -> m44_84  [color=green, key=1, label=jobs, style=dashed];
m44_48 -> m44_49  [key=0, style=solid];
m44_48 -> m44_59  [key=2, style=dotted];
m44_48 -> m44_53  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_48 -> m44_70  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_49 -> m44_56  [color=green, key=1, label=states, style=dashed];
m44_49 -> m44_84  [color=green, key=1, label=states, style=dashed];
m44_49 -> m44_50  [key=0, style=solid];
m44_49 -> m44_59  [key=2, style=dotted];
m44_49 -> m44_54  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_49 -> m44_78  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_55 -> m44_56  [color=green, key=0, style=solid];
m44_55 -> m44_62  [key=2, style=dotted];
m44_50 -> m44_51  [key=0, style=solid];
m44_50 -> m44_55  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_50 -> m44_60  [key=2, style=dotted];
m44_50 -> m44_53  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_50 -> m44_54  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_54 -> m44_51  [key=0, style=solid];
m44_54 -> m44_61  [key=2, style=dotted];
m44_54 -> m44_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_54 -> m44_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_52 -> m44_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m44_52 -> m44_53  [key=0, style=solid];
m44_52 -> m44_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m44_52 -> m44_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m44_52 -> m44_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m44_52 -> m44_78  [color=darkseagreen4, key=1, label=job, style=dashed];
m44_53 -> m44_54  [key=0, style=solid];
m44_53 -> m44_61  [key=2, style=dotted];
m44_53 -> m44_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_53 -> m44_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_57 -> m44_43  [color=blue, key=0, style=bold];
m44_23 -> m44_25  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_23 -> m44_24  [key=0, style=solid];
m44_26 -> m44_27  [color=green, key=0, style=solid];
m44_26 -> m44_29  [color=green, key=2, style=dotted];
m44_26 -> m44_30  [color=green, key=2, style=dotted];
m44_26 -> m44_31  [color=green, key=2, style=dotted];
m44_26 -> m44_32  [color=green, key=1, label="lambda expression", style=dashed];
m44_26 -> m44_40  [color=green, key=1, label="lambda expression", style=dashed];
m44_25 -> m44_26  [color=green, key=0, style=solid];
m44_25 -> m44_28  [key=2, style=dotted];
m44_24 -> m44_25  [key=0, style=solid];
m44_27 -> m44_23  [color=blue, key=0, style=bold];
m44_173 -> m44_335  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m44_173 -> m44_324  [key=0, style=solid];
m44_173 -> m44_326  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m44_173 -> m44_327  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m44_173 -> m44_328  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m44_173 -> m44_329  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m44_173 -> m44_331  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m44_173 -> m44_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m44_173 -> m44_332  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m44_173 -> m44_333  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m44_173 -> m44_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m44_173 -> m44_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m44_335 -> m44_114  [key=2, style=dotted];
m44_335 -> m44_115  [key=2, style=dotted];
m44_335 -> m44_336  [key=0, style=solid];
m44_335 -> m44_353  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_335 -> m44_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_334 -> m44_62  [key=2, style=dotted];
m44_334 -> m44_335  [key=0, style=solid];
m44_326 -> m44_335  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_326 -> m44_327  [key=0, style=solid];
m44_326 -> m44_337  [key=2, style=dotted];
m44_326 -> m44_331  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_326 -> m44_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_326 -> m44_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_326 -> m44_354  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_327 -> m44_335  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_327 -> m44_328  [key=0, style=solid];
m44_327 -> m44_337  [key=2, style=dotted];
m44_327 -> m44_333  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_327 -> m44_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_327 -> m44_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_327 -> m44_354  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_328 -> m44_60  [key=2, style=dotted];
m44_328 -> m44_334  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_328 -> m44_329  [key=0, style=solid];
m44_328 -> m44_331  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_328 -> m44_333  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_331 -> m44_61  [key=2, style=dotted];
m44_331 -> m44_332  [key=0, style=solid];
m44_331 -> m44_338  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_331 -> m44_341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_333 -> m44_61  [key=2, style=dotted];
m44_333 -> m44_329  [key=0, style=solid];
m44_333 -> m44_346  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_333 -> m44_349  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_329 -> m44_334  [key=0, style=solid];
m44_329 -> m44_330  [key=0, style=solid];
m44_325 -> m44_113  [key=2, style=dotted];
m44_325 -> m44_336  [key=0, style=solid];
m44_324 -> m44_326  [key=0, style=solid];
m44_324 -> m44_325  [key=0, style=solid];
m44_332 -> m44_333  [key=0, style=solid];
m44_332 -> m44_329  [key=0, style=solid];
m44_330 -> m44_331  [key=0, style=solid];
m44_330 -> m44_333  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_330 -> m44_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_330 -> m44_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_330 -> m44_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_330 -> m44_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_330 -> m44_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_330 -> m44_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_336 -> m44_173  [color=blue, key=0, style=bold];
m44_11 -> m44_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_11 -> m44_12  [key=0, style=solid];
m44_13 -> m44_9  [key=2, style=dotted];
m44_13 -> m44_14  [key=0, style=solid];
m44_13 -> m44_10  [key=2, style=dotted];
m44_12 -> m44_13  [key=0, style=solid];
m44_14 -> m44_11  [color=blue, key=0, style=bold];
m44_219 -> m44_276  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_219 -> m44_269  [key=0, style=solid];
m44_219 -> m44_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_219 -> m44_277  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m44_276 -> m44_114  [key=2, style=dotted];
m44_276 -> m44_115  [key=2, style=dotted];
m44_276 -> m44_277  [key=0, style=solid];
m44_276 -> m44_293  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_278 -> m44_59  [key=2, style=dotted];
m44_278 -> m44_279  [key=0, style=solid];
m44_278 -> m44_284  [color=darkseagreen4, key=1, label=result, style=dashed];
m44_278 -> m44_286  [color=darkseagreen4, key=1, label=result, style=dashed];
m44_270 -> m44_276  [color=darkseagreen4, key=1, label=dates, style=dashed];
m44_270 -> m44_113  [key=2, style=dotted];
m44_270 -> m44_271  [key=0, style=solid];
m44_270 -> m44_273  [color=darkseagreen4, key=1, label=dates, style=dashed];
m44_270 -> m44_280  [color=darkseagreen4, key=1, label=dates, style=dashed];
m44_270 -> m44_284  [color=darkseagreen4, key=1, label=dates, style=dashed];
m44_272 -> m44_276  [key=0, style=solid];
m44_272 -> m44_273  [key=0, style=solid];
m44_277 -> m44_278  [key=0, style=solid];
m44_277 -> m44_289  [key=2, style=dotted];
m44_277 -> m44_282  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m44_279 -> m44_280  [key=0, style=solid];
m44_279 -> m44_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_279 -> m44_284  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_279 -> m44_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_284 -> m44_285  [key=0, style=solid];
m44_284 -> m44_292  [key=2, style=dotted];
m44_286 -> m44_287  [key=0, style=solid];
m44_269 -> m44_270  [key=0, style=solid];
m44_269 -> m44_273  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m44_269 -> m44_274  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m44_271 -> m44_272  [key=0, style=solid];
m44_271 -> m44_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_273 -> m44_274  [key=0, style=solid];
m44_273 -> m44_175  [key=2, style=dotted];
m44_280 -> m44_286  [key=0, style=solid];
m44_280 -> m44_281  [key=0, style=solid];
m44_275 -> m44_272  [key=0, style=solid];
m44_275 -> m44_275  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_282 -> m44_284  [key=0, style=solid];
m44_282 -> m44_283  [key=0, style=solid];
m44_282 -> m44_290  [key=2, style=dotted];
m44_282 -> m44_291  [key=2, style=dotted];
m44_285 -> m44_280  [key=0, style=solid];
m44_285 -> m44_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_283 -> m44_284  [key=0, style=solid];
m44_274 -> m44_275  [key=0, style=solid];
m44_274 -> m44_274  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m44_274 -> m44_288  [key=2, style=dotted];
m44_281 -> m44_282  [key=0, style=solid];
m44_287 -> m44_219  [color=blue, key=0, style=bold];
m44_236 -> m44_238  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_236 -> m44_237  [key=0, style=solid];
m44_236 -> m44_242  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_238 -> m44_9  [key=2, style=dotted];
m44_238 -> m44_76  [key=2, style=dotted];
m44_238 -> m44_239  [key=0, style=solid];
m44_237 -> m44_238  [key=0, style=solid];
m44_239 -> m44_240  [key=0, style=solid];
m44_239 -> m44_232  [key=2, style=dotted];
m44_239 -> m44_242  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_242 -> m44_243  [key=0, style=solid];
m44_242 -> m44_234  [key=2, style=dotted];
m44_242 -> m44_235  [key=2, style=dotted];
m44_240 -> m44_242  [key=0, style=solid];
m44_240 -> m44_241  [key=0, style=solid];
m44_240 -> m44_233  [key=2, style=dotted];
m44_241 -> m44_243  [key=0, style=solid];
m44_243 -> m44_236  [color=blue, key=0, style=bold];
m44_362 -> m44_363  [key=0, style=solid];
m44_32 -> m44_33  [color=green, key=0, style=solid];
m44_40 -> m44_41  [key=0, style=solid];
m44_33 -> m44_34  [color=green, key=0, style=solid];
m44_33 -> m44_35  [color=green, key=2, style=dotted];
m44_33 -> m44_36  [color=green, key=2, style=dotted];
m44_33 -> m44_37  [color=green, key=2, style=dotted];
m44_33 -> m44_38  [color=green, key=2, style=dotted];
m44_33 -> m44_39  [color=green, key=2, style=dotted];
m44_34 -> m44_32  [color=blue, key=0, style=bold];
m44_80 -> m44_81  [key=0, style=solid];
m44_83 -> m44_84  [color=green, key=0, style=solid];
m44_84 -> m44_85  [color=green, key=0, style=solid];
m44_84 -> m44_86  [color=green, key=2, style=dotted];
m44_84 -> m44_87  [color=green, key=2, style=dotted];
m44_84 -> m44_36  [color=green, key=2, style=dotted];
m44_84 -> m44_37  [color=green, key=2, style=dotted];
m44_84 -> m44_39  [color=green, key=2, style=dotted];
m44_85 -> m44_83  [color=blue, key=0, style=bold];
m44_129 -> m44_130  [color=green, key=0, style=solid];
m44_130 -> m44_131  [color=green, key=0, style=solid];
m44_130 -> m44_132  [color=green, key=2, style=dotted];
m44_130 -> m44_133  [color=green, key=2, style=dotted];
m44_130 -> m44_134  [color=green, key=2, style=dotted];
m44_131 -> m44_129  [color=blue, key=0, style=bold];
m44_42 -> m44_40  [color=blue, key=0, style=bold];
m44_41 -> m44_42  [key=0, style=solid];
m44_41 -> m44_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Web.ProcessingJobDto>", style=dashed];
m44_142 -> m44_36  [key=2, style=dotted];
m44_142 -> m44_37  [key=2, style=dotted];
m44_142 -> m44_38  [key=2, style=dotted];
m44_142 -> m44_39  [key=2, style=dotted];
m44_142 -> m44_143  [key=0, style=solid];
m44_142 -> m44_144  [key=2, style=dotted];
m44_152 -> m44_36  [key=2, style=dotted];
m44_152 -> m44_37  [key=2, style=dotted];
m44_152 -> m44_38  [key=2, style=dotted];
m44_152 -> m44_39  [key=2, style=dotted];
m44_152 -> m44_153  [key=0, style=solid];
m44_152 -> m44_154  [key=2, style=dotted];
m44_195 -> m44_36  [key=2, style=dotted];
m44_195 -> m44_38  [key=2, style=dotted];
m44_195 -> m44_39  [key=2, style=dotted];
m44_195 -> m44_196  [key=0, style=solid];
m44_195 -> m44_197  [key=2, style=dotted];
m44_204 -> m44_36  [key=2, style=dotted];
m44_204 -> m44_38  [key=2, style=dotted];
m44_204 -> m44_39  [key=2, style=dotted];
m44_204 -> m44_205  [key=0, style=solid];
m44_204 -> m44_197  [key=2, style=dotted];
m44_212 -> m44_36  [key=2, style=dotted];
m44_212 -> m44_38  [key=2, style=dotted];
m44_212 -> m44_213  [key=0, style=solid];
m44_212 -> m44_214  [key=2, style=dotted];
m44_70 -> m44_71  [key=0, style=solid];
m44_70 -> m44_72  [key=2, style=dotted];
m44_78 -> m44_79  [key=0, style=solid];
m44_78 -> m44_72  [key=2, style=dotted];
m44_82 -> m44_80  [color=blue, key=0, style=bold];
m44_81 -> m44_82  [key=0, style=solid];
m44_120 -> m44_121  [key=0, style=solid];
m44_120 -> m44_72  [key=2, style=dotted];
m44_127 -> m44_128  [key=0, style=solid];
m44_127 -> m44_72  [key=2, style=dotted];
m44_401 -> m44_4  [key=2, style=dotted];
m44_401 -> m44_402  [key=0, style=solid];
m44_407 -> m44_4  [key=2, style=dotted];
m44_407 -> m44_408  [key=0, style=solid];
m44_421 -> m44_4  [key=2, style=dotted];
m44_421 -> m44_422  [key=0, style=solid];
m44_141 -> m44_142  [key=0, style=solid];
m44_151 -> m44_152  [key=0, style=solid];
m44_203 -> m44_204  [key=0, style=solid];
m44_211 -> m44_212  [key=0, style=solid];
m44_143 -> m44_141  [color=blue, key=0, style=bold];
m44_153 -> m44_151  [color=blue, key=0, style=bold];
m44_194 -> m44_195  [key=0, style=solid];
m44_196 -> m44_194  [color=blue, key=0, style=bold];
m44_205 -> m44_203  [color=blue, key=0, style=bold];
m44_213 -> m44_211  [color=blue, key=0, style=bold];
m44_73 -> m44_74  [key=0, style=solid];
m44_77 -> m44_78  [key=0, style=solid];
m44_65 -> m44_66  [key=0, style=solid];
m44_65 -> m44_67  [key=2, style=dotted];
m44_65 -> m44_68  [key=2, style=dotted];
m44_74 -> m44_75  [key=0, style=solid];
m44_74 -> m44_67  [key=2, style=dotted];
m44_74 -> m44_76  [key=2, style=dotted];
m44_64 -> m44_65  [key=0, style=solid];
m44_69 -> m44_70  [key=0, style=solid];
m44_71 -> m44_69  [color=blue, key=0, style=bold];
m44_79 -> m44_77  [color=blue, key=0, style=bold];
m44_259 -> m44_260  [key=0, style=solid];
m44_263 -> m44_264  [key=0, style=solid];
m44_266 -> m44_267  [key=0, style=solid];
m44_116 -> m44_117  [key=0, style=solid];
m44_119 -> m44_120  [key=0, style=solid];
m44_121 -> m44_119  [color=blue, key=0, style=bold];
m44_122 -> m44_123  [key=0, style=solid];
m44_126 -> m44_127  [key=0, style=solid];
m44_128 -> m44_126  [color=blue, key=0, style=bold];
m44_293 -> m44_294  [key=0, style=solid];
m44_321 -> m44_322  [key=0, style=solid];
m44_318 -> m44_319  [key=0, style=solid];
m44_353 -> m44_354  [key=0, style=solid];
m44_356 -> m44_357  [key=0, style=solid];
m44_400 -> m44_401  [key=0, style=solid];
m44_402 -> m44_400  [color=blue, key=0, style=bold];
m44_406 -> m44_407  [key=0, style=solid];
m44_408 -> m44_406  [color=blue, key=0, style=bold];
m44_420 -> m44_421  [key=0, style=solid];
m44_422 -> m44_420  [color=blue, key=0, style=bold];
m44_75 -> m44_73  [color=blue, key=0, style=bold];
m44_66 -> m44_64  [color=blue, key=0, style=bold];
m44_343 -> m44_72  [key=2, style=dotted];
m44_343 -> m44_344  [key=0, style=solid];
m44_351 -> m44_72  [key=2, style=dotted];
m44_351 -> m44_352  [key=0, style=solid];
m44_260 -> m44_261  [key=0, style=solid];
m44_260 -> m44_262  [key=2, style=dotted];
m44_261 -> m44_259  [color=blue, key=0, style=bold];
m44_265 -> m44_263  [color=blue, key=0, style=bold];
m44_264 -> m44_265  [key=0, style=solid];
m44_268 -> m44_266  [color=blue, key=0, style=bold];
m44_267 -> m44_268  [key=0, style=solid];
m44_117 -> m44_67  [key=2, style=dotted];
m44_117 -> m44_68  [key=2, style=dotted];
m44_117 -> m44_118  [key=0, style=solid];
m44_123 -> m44_67  [key=2, style=dotted];
m44_123 -> m44_124  [key=0, style=solid];
m44_123 -> m44_125  [key=2, style=dotted];
m44_118 -> m44_116  [color=blue, key=0, style=bold];
m44_124 -> m44_122  [color=blue, key=0, style=bold];
m44_294 -> m44_295  [key=0, style=solid];
m44_294 -> m44_296  [key=2, style=dotted];
m44_294 -> m44_297  [key=2, style=dotted];
m44_295 -> m44_293  [color=blue, key=0, style=bold];
m44_322 -> m44_67  [key=2, style=dotted];
m44_322 -> m44_323  [key=0, style=solid];
m44_323 -> m44_321  [color=blue, key=0, style=bold];
m44_320 -> m44_318  [color=blue, key=0, style=bold];
m44_319 -> m44_320  [key=0, style=solid];
m44_319 -> m44_296  [key=2, style=dotted];
m44_339 -> m44_9  [key=2, style=dotted];
m44_339 -> m44_68  [key=2, style=dotted];
m44_339 -> m44_340  [key=0, style=solid];
m44_347 -> m44_9  [key=2, style=dotted];
m44_347 -> m44_68  [key=2, style=dotted];
m44_347 -> m44_348  [key=0, style=solid];
m44_357 -> m44_358  [key=0, style=solid];
m44_357 -> m44_359  [key=2, style=dotted];
m44_357 -> m44_360  [key=2, style=dotted];
m44_357 -> m44_361  [key=2, style=dotted];
m44_357 -> m44_362  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_342 -> m44_343  [key=0, style=solid];
m44_342 -> m44_344  [key=0, style=solid];
m44_342 -> m44_345  [key=2, style=dotted];
m44_354 -> m44_355  [key=0, style=solid];
m44_354 -> m44_345  [key=2, style=dotted];
m44_350 -> m44_351  [key=0, style=solid];
m44_350 -> m44_352  [key=0, style=solid];
m44_350 -> m44_345  [key=2, style=dotted];
m44_355 -> m44_353  [color=blue, key=0, style=bold];
m44_358 -> m44_356  [color=blue, key=0, style=bold];
m44_177 -> m44_150  [key=2, style=dotted];
m44_177 -> m44_67  [key=2, style=dotted];
m44_177 -> m44_178  [key=0, style=solid];
m44_176 -> m44_177  [key=0, style=solid];
m44_179 -> m44_180  [key=0, style=solid];
m44_182 -> m44_183  [key=0, style=solid];
m44_185 -> m44_186  [key=0, style=solid];
m44_188 -> m44_189  [key=0, style=solid];
m44_191 -> m44_192  [key=0, style=solid];
m44_338 -> m44_339  [key=0, style=solid];
m44_341 -> m44_343  [color=darkseagreen4, key=1, label="?", style=dashed];
m44_341 -> m44_342  [key=0, style=solid];
m44_346 -> m44_347  [key=0, style=solid];
m44_349 -> m44_351  [color=darkseagreen4, key=1, label="?", style=dashed];
m44_349 -> m44_350  [key=0, style=solid];
m44_387 -> m44_388  [key=0, style=solid];
m44_391 -> m44_392  [key=0, style=solid];
m44_394 -> m44_395  [key=0, style=solid];
m44_397 -> m44_398  [key=0, style=solid];
m44_403 -> m44_404  [key=0, style=solid];
m44_409 -> m44_410  [key=0, style=solid];
m44_412 -> m44_413  [key=0, style=solid];
m44_416 -> m44_417  [key=0, style=solid];
m44_423 -> m44_424  [key=0, style=solid];
m44_426 -> m44_427  [key=0, style=solid];
m44_429 -> m44_430  [key=0, style=solid];
m44_183 -> m44_67  [key=2, style=dotted];
m44_183 -> m44_184  [key=0, style=solid];
m44_183 -> m44_10  [key=2, style=dotted];
m44_189 -> m44_67  [key=2, style=dotted];
m44_189 -> m44_190  [key=0, style=solid];
m44_189 -> m44_10  [key=2, style=dotted];
m44_427 -> m44_67  [key=2, style=dotted];
m44_427 -> m44_428  [key=0, style=solid];
m44_427 -> m44_10  [key=2, style=dotted];
m44_344 -> m44_341  [color=blue, key=0, style=bold];
m44_352 -> m44_349  [color=blue, key=0, style=bold];
m44_392 -> m44_393  [key=0, style=solid];
m44_398 -> m44_399  [key=0, style=solid];
m44_404 -> m44_405  [key=0, style=solid];
m44_410 -> m44_411  [key=0, style=solid];
m44_417 -> m44_418  [key=0, style=solid];
m44_417 -> m44_419  [key=2, style=dotted];
m44_424 -> m44_425  [key=0, style=solid];
m44_430 -> m44_431  [key=0, style=solid];
m44_340 -> m44_338  [color=blue, key=0, style=bold];
m44_348 -> m44_346  [color=blue, key=0, style=bold];
m44_178 -> m44_176  [color=blue, key=0, style=bold];
m44_181 -> m44_179  [color=blue, key=0, style=bold];
m44_180 -> m44_181  [key=0, style=solid];
m44_184 -> m44_182  [color=blue, key=0, style=bold];
m44_187 -> m44_185  [color=blue, key=0, style=bold];
m44_186 -> m44_187  [key=0, style=solid];
m44_190 -> m44_188  [color=blue, key=0, style=bold];
m44_193 -> m44_191  [color=blue, key=0, style=bold];
m44_192 -> m44_193  [key=0, style=solid];
m44_389 -> m44_387  [color=blue, key=0, style=bold];
m44_388 -> m44_389  [key=0, style=solid];
m44_388 -> m44_390  [key=2, style=dotted];
m44_393 -> m44_391  [color=blue, key=0, style=bold];
m44_396 -> m44_394  [color=blue, key=0, style=bold];
m44_395 -> m44_396  [key=0, style=solid];
m44_395 -> m44_390  [key=2, style=dotted];
m44_399 -> m44_397  [color=blue, key=0, style=bold];
m44_405 -> m44_403  [color=blue, key=0, style=bold];
m44_411 -> m44_409  [color=blue, key=0, style=bold];
m44_414 -> m44_412  [color=blue, key=0, style=bold];
m44_413 -> m44_414  [key=0, style=solid];
m44_413 -> m44_415  [key=2, style=dotted];
m44_418 -> m44_416  [color=blue, key=0, style=bold];
m44_425 -> m44_423  [color=blue, key=0, style=bold];
m44_428 -> m44_426  [color=blue, key=0, style=bold];
m44_431 -> m44_429  [color=blue, key=0, style=bold];
m44_363 -> m44_364  [key=0, style=solid];
m44_364 -> m44_362  [color=blue, key=0, style=bold];
m44_220 -> m44_221  [key=0, style=solid];
m44_222 -> m44_219  [key=2, style=dotted];
m44_222 -> m44_223  [key=0, style=solid];
m44_221 -> m44_222  [key=0, style=solid];
m44_223 -> m44_220  [color=blue, key=0, style=bold];
m44_135 -> m44_137  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_135 -> m44_136  [key=0, style=solid];
m44_138 -> m44_29  [key=2, style=dotted];
m44_138 -> m44_139  [key=0, style=solid];
m44_138 -> m44_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_137 -> m44_138  [key=0, style=solid];
m44_137 -> m44_140  [key=2, style=dotted];
m44_136 -> m44_137  [key=0, style=solid];
m44_139 -> m44_135  [color=blue, key=0, style=bold];
m44_0 -> m44_1  [key=0, style=solid];
m44_2 -> m44_4  [key=2, style=dotted];
m44_2 -> m44_3  [key=0, style=solid];
m44_1 -> m44_2  [key=0, style=solid];
m44_3 -> m44_0  [color=blue, key=0, style=bold];
m44_145 -> m44_147  [color=darkseagreen4, key=1, label=int, style=dashed];
m44_145 -> m44_146  [key=0, style=solid];
m44_148 -> m44_29  [key=2, style=dotted];
m44_148 -> m44_149  [key=0, style=solid];
m44_148 -> m44_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_147 -> m44_148  [key=0, style=solid];
m44_147 -> m44_150  [key=2, style=dotted];
m44_146 -> m44_147  [key=0, style=solid];
m44_149 -> m44_145  [color=blue, key=0, style=bold];
m44_155 -> m44_156  [key=0, style=solid];
m44_167 -> m44_62  [key=2, style=dotted];
m44_167 -> m44_168  [key=0, style=solid];
m44_157 -> m44_112  [key=2, style=dotted];
m44_157 -> m44_158  [key=0, style=solid];
m44_157 -> m44_159  [color=darkseagreen4, key=1, label=queues, style=dashed];
m44_168 -> m44_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_168 -> m44_173  [key=2, style=dotted];
m44_168 -> m44_169  [key=0, style=solid];
m44_163 -> m44_60  [key=2, style=dotted];
m44_163 -> m44_167  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_163 -> m44_164  [key=0, style=solid];
m44_163 -> m44_165  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_163 -> m44_166  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_164 -> m44_61  [key=2, style=dotted];
m44_164 -> m44_168  [color=darkseagreen4, key=1, label=firstJobIds, style=dashed];
m44_164 -> m44_165  [key=0, style=solid];
m44_164 -> m44_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_164 -> m44_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_165 -> m44_61  [key=2, style=dotted];
m44_165 -> m44_166  [key=0, style=solid];
m44_165 -> m44_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_165 -> m44_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_165 -> m44_169  [color=darkseagreen4, key=1, label=length, style=dashed];
m44_166 -> m44_61  [key=2, style=dotted];
m44_166 -> m44_167  [key=0, style=solid];
m44_166 -> m44_188  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_166 -> m44_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_166 -> m44_169  [color=darkseagreen4, key=1, label=dequeued, style=dashed];
m44_156 -> m44_157  [key=0, style=solid];
m44_158 -> m44_159  [key=0, style=solid];
m44_158 -> m44_172  [key=2, style=dotted];
m44_158 -> m44_169  [color=darkseagreen4, key=1, label=result, style=dashed];
m44_158 -> m44_170  [color=darkseagreen4, key=1, label=result, style=dashed];
m44_159 -> m44_164  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_159 -> m44_165  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_159 -> m44_166  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_159 -> m44_160  [key=0, style=solid];
m44_159 -> m44_170  [key=0, style=solid];
m44_159 -> m44_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_159 -> m44_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_159 -> m44_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_159 -> m44_169  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_169 -> m44_159  [key=0, style=solid];
m44_169 -> m44_174  [key=2, style=dotted];
m44_169 -> m44_175  [key=2, style=dotted];
m44_162 -> m44_163  [key=0, style=solid];
m44_170 -> m44_171  [key=0, style=solid];
m44_160 -> m44_161  [key=0, style=solid];
m44_161 -> m44_162  [key=0, style=solid];
m44_171 -> m44_155  [color=blue, key=0, style=bold];
m44_88 -> m44_89  [key=0, style=solid];
m44_90 -> m44_92  [key=2, style=dotted];
m44_90 -> m44_91  [key=0, style=solid];
m44_89 -> m44_90  [key=0, style=solid];
m44_91 -> m44_88  [color=blue, key=0, style=bold];
m44_97 -> m44_98  [key=0, style=solid];
m44_110 -> m44_111  [color=green, key=0, style=solid];
m44_110 -> m44_114  [color=green, key=2, style=dotted];
m44_110 -> m44_115  [color=green, key=2, style=dotted];
m44_110 -> m44_129  [color=green, key=1, label="lambda expression", style=dashed];
m44_99 -> m44_110  [color=green, key=1, label=serverNames, style=dashed];
m44_99 -> m44_100  [key=0, style=solid];
m44_99 -> m44_112  [key=2, style=dotted];
m44_99 -> m44_105  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m44_102 -> m44_110  [color=green, key=1, label=servers, style=dashed];
m44_102 -> m44_130  [color=green, key=1, label=servers, style=dashed];
m44_102 -> m44_103  [key=0, style=solid];
m44_102 -> m44_59  [key=2, style=dotted];
m44_102 -> m44_107  [color=darkseagreen4, key=1, label=servers, style=dashed];
m44_102 -> m44_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m44_103 -> m44_110  [color=green, key=1, label=queues, style=dashed];
m44_103 -> m44_130  [color=green, key=1, label=queues, style=dashed];
m44_103 -> m44_104  [key=0, style=solid];
m44_103 -> m44_59  [key=2, style=dotted];
m44_103 -> m44_108  [color=darkseagreen4, key=1, label=queues, style=dashed];
m44_103 -> m44_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m44_109 -> m44_110  [color=green, key=0, style=solid];
m44_109 -> m44_62  [key=2, style=dotted];
m44_98 -> m44_99  [key=0, style=solid];
m44_100 -> m44_102  [key=0, style=solid];
m44_100 -> m44_101  [key=0, style=solid];
m44_105 -> m44_109  [key=0, style=solid];
m44_105 -> m44_106  [key=0, style=solid];
m44_107 -> m44_108  [key=0, style=solid];
m44_107 -> m44_61  [key=2, style=dotted];
m44_107 -> m44_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_107 -> m44_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_104 -> m44_109  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_104 -> m44_105  [key=0, style=solid];
m44_104 -> m44_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_104 -> m44_60  [key=2, style=dotted];
m44_104 -> m44_108  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_108 -> m44_105  [key=0, style=solid];
m44_108 -> m44_61  [key=2, style=dotted];
m44_108 -> m44_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_108 -> m44_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_101 -> m44_111  [key=0, style=solid];
m44_101 -> m44_113  [key=2, style=dotted];
m44_106 -> m44_107  [key=0, style=solid];
m44_106 -> m44_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m44_106 -> m44_108  [color=darkseagreen4, key=1, label=name, style=dashed];
m44_106 -> m44_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m44_106 -> m44_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m44_106 -> m44_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m44_111 -> m44_97  [color=blue, key=0, style=bold];
m44_369 -> m44_370  [key=0, style=solid];
m44_383 -> m44_62  [key=2, style=dotted];
m44_383 -> m44_384  [key=0, style=solid];
m44_372 -> m44_112  [key=2, style=dotted];
m44_372 -> m44_373  [key=0, style=solid];
m44_372 -> m44_380  [color=darkseagreen4, key=1, label=queues, style=dashed];
m44_373 -> m44_60  [key=2, style=dotted];
m44_373 -> m44_383  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_373 -> m44_374  [key=0, style=solid];
m44_373 -> m44_375  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_373 -> m44_376  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_373 -> m44_377  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_373 -> m44_378  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_373 -> m44_379  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_373 -> m44_382  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m44_374 -> m44_61  [key=2, style=dotted];
m44_374 -> m44_375  [key=0, style=solid];
m44_374 -> m44_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_374 -> m44_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_375 -> m44_61  [key=2, style=dotted];
m44_375 -> m44_376  [key=0, style=solid];
m44_375 -> m44_394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_375 -> m44_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_376 -> m44_61  [key=2, style=dotted];
m44_376 -> m44_400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_376 -> m44_377  [key=0, style=solid];
m44_376 -> m44_403  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_377 -> m44_61  [key=2, style=dotted];
m44_377 -> m44_406  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_377 -> m44_378  [key=0, style=solid];
m44_377 -> m44_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_378 -> m44_61  [key=2, style=dotted];
m44_378 -> m44_379  [key=0, style=solid];
m44_378 -> m44_412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_378 -> m44_416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_379 -> m44_61  [key=2, style=dotted];
m44_379 -> m44_420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_379 -> m44_380  [key=0, style=solid];
m44_379 -> m44_423  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_382 -> m44_61  [key=2, style=dotted];
m44_382 -> m44_380  [key=0, style=solid];
m44_382 -> m44_426  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_382 -> m44_429  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_380 -> m44_383  [key=0, style=solid];
m44_380 -> m44_381  [key=0, style=solid];
m44_384 -> m44_385  [key=0, style=solid];
m44_371 -> m44_372  [key=0, style=solid];
m44_371 -> m44_374  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_375  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_376  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_377  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_378  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_379  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_382  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_384  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_386  [key=2, style=dotted];
m44_371 -> m44_392  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_398  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_404  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_410  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_417  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_424  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_371 -> m44_430  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_381 -> m44_382  [key=0, style=solid];
m44_381 -> m44_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m44_370 -> m44_371  [key=0, style=solid];
m44_385 -> m44_369  [color=blue, key=0, style=bold];
m44_365 -> m44_366  [key=0, style=solid];
m44_367 -> m44_10  [key=2, style=dotted];
m44_367 -> m44_368  [key=0, style=solid];
m44_366 -> m44_367  [key=0, style=solid];
m44_368 -> m44_365  [color=blue, key=0, style=bold];
m44_215 -> m44_216  [key=0, style=solid];
m44_217 -> m44_219  [key=2, style=dotted];
m44_217 -> m44_218  [key=0, style=solid];
m44_216 -> m44_217  [key=0, style=solid];
m44_218 -> m44_215  [color=blue, key=0, style=bold];
m44_92 -> m44_305  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_92 -> m44_298  [key=0, style=solid];
m44_92 -> m44_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_92 -> m44_306  [color=darkseagreen4, key=1, label=IRedisClient, style=dashed];
m44_305 -> m44_114  [key=2, style=dotted];
m44_305 -> m44_115  [key=2, style=dotted];
m44_305 -> m44_306  [key=0, style=solid];
m44_305 -> m44_321  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_304 -> m44_114  [key=2, style=dotted];
m44_304 -> m44_115  [key=2, style=dotted];
m44_304 -> m44_305  [key=0, style=solid];
m44_304 -> m44_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_304 -> m44_309  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m44_307 -> m44_59  [key=2, style=dotted];
m44_307 -> m44_308  [key=0, style=solid];
m44_307 -> m44_313  [color=darkseagreen4, key=1, label=result, style=dashed];
m44_307 -> m44_315  [color=darkseagreen4, key=1, label=result, style=dashed];
m44_306 -> m44_307  [key=0, style=solid];
m44_306 -> m44_289  [key=2, style=dotted];
m44_306 -> m44_311  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m44_301 -> m44_304  [key=0, style=solid];
m44_301 -> m44_302  [key=0, style=solid];
m44_300 -> m44_304  [color=darkseagreen4, key=1, label=dates, style=dashed];
m44_300 -> m44_113  [key=2, style=dotted];
m44_300 -> m44_301  [key=0, style=solid];
m44_300 -> m44_302  [color=darkseagreen4, key=1, label=dates, style=dashed];
m44_300 -> m44_313  [color=darkseagreen4, key=1, label=dates, style=dashed];
m44_309 -> m44_310  [key=0, style=solid];
m44_309 -> m44_315  [key=0, style=solid];
m44_308 -> m44_309  [key=0, style=solid];
m44_308 -> m44_311  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_308 -> m44_313  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_308 -> m44_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_313 -> m44_314  [key=0, style=solid];
m44_313 -> m44_292  [key=2, style=dotted];
m44_315 -> m44_316  [key=0, style=solid];
m44_298 -> m44_301  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m44_298 -> m44_299  [key=0, style=solid];
m44_298 -> m44_302  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m44_298 -> m44_303  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m44_311 -> m44_313  [key=0, style=solid];
m44_311 -> m44_312  [key=0, style=solid];
m44_311 -> m44_290  [key=2, style=dotted];
m44_311 -> m44_291  [key=2, style=dotted];
m44_299 -> m44_301  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m44_299 -> m44_300  [key=0, style=solid];
m44_299 -> m44_317  [key=2, style=dotted];
m44_303 -> m44_301  [key=0, style=solid];
m44_303 -> m44_303  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m44_303 -> m44_317  [key=2, style=dotted];
m44_302 -> m44_303  [key=0, style=solid];
m44_302 -> m44_175  [key=2, style=dotted];
m44_314 -> m44_309  [key=0, style=solid];
m44_314 -> m44_314  [color=darkseagreen4, key=1, label=i, style=dashed];
m44_310 -> m44_311  [key=0, style=solid];
m44_312 -> m44_313  [key=0, style=solid];
m44_316 -> m44_92  [color=blue, key=0, style=bold];
m44_15 -> m44_16  [key=0, style=solid];
m44_17 -> m44_4  [key=2, style=dotted];
m44_17 -> m44_18  [key=0, style=solid];
m44_16 -> m44_17  [key=0, style=solid];
m44_18 -> m44_15  [color=blue, key=0, style=bold];
m44_244 -> m44_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_244 -> m44_250  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_244 -> m44_245  [key=0, style=solid];
m44_252 -> m44_63  [key=2, style=dotted];
m44_252 -> m44_253  [key=0, style=solid];
m44_252 -> m44_255  [key=2, style=dotted];
m44_252 -> m44_256  [key=2, style=dotted];
m44_252 -> m44_257  [key=2, style=dotted];
m44_252 -> m44_258  [key=2, style=dotted];
m44_252 -> m44_259  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_252 -> m44_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_252 -> m44_266  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_251 -> m44_114  [key=2, style=dotted];
m44_251 -> m44_115  [key=2, style=dotted];
m44_251 -> m44_252  [key=0, style=solid];
m44_246 -> m44_252  [color=darkseagreen4, key=1, label=job, style=dashed];
m44_246 -> m44_247  [key=0, style=solid];
m44_246 -> m44_9  [key=2, style=dotted];
m44_246 -> m44_254  [key=2, style=dotted];
m44_249 -> m44_252  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m44_249 -> m44_250  [key=0, style=solid];
m44_249 -> m44_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m44_250 -> m44_251  [key=0, style=solid];
m44_250 -> m44_9  [key=2, style=dotted];
m44_250 -> m44_125  [key=2, style=dotted];
m44_245 -> m44_246  [key=0, style=solid];
m44_247 -> m44_249  [key=0, style=solid];
m44_247 -> m44_248  [key=0, style=solid];
m44_248 -> m44_253  [key=0, style=solid];
m44_253 -> m44_244  [color=blue, key=0, style=bold];
m44_5 -> m44_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_5 -> m44_6  [key=0, style=solid];
m44_7 -> m44_9  [key=2, style=dotted];
m44_7 -> m44_8  [key=0, style=solid];
m44_7 -> m44_10  [key=2, style=dotted];
m44_6 -> m44_7  [key=0, style=solid];
m44_8 -> m44_5  [color=blue, key=0, style=bold];
m44_206 -> m44_208  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_206 -> m44_207  [key=0, style=solid];
m44_209 -> m44_29  [key=2, style=dotted];
m44_209 -> m44_210  [key=0, style=solid];
m44_209 -> m44_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_208 -> m44_209  [key=0, style=solid];
m44_208 -> m44_9  [key=2, style=dotted];
m44_208 -> m44_150  [key=2, style=dotted];
m44_207 -> m44_208  [key=0, style=solid];
m44_210 -> m44_206  [color=blue, key=0, style=bold];
m44_93 -> m44_94  [key=0, style=solid];
m44_95 -> m44_92  [key=2, style=dotted];
m44_95 -> m44_96  [key=0, style=solid];
m44_94 -> m44_95  [key=0, style=solid];
m44_96 -> m44_93  [color=blue, key=0, style=bold];
m44_19 -> m44_20  [color=green, key=0, style=solid];
m44_20 -> m44_21  [color=green, key=0, style=solid];
m44_21 -> m44_22  [key=0, style=solid];
m44_21 -> m44_4  [key=2, style=dotted];
m44_22 -> m44_19  [color=blue, key=0, style=bold];
m44_224 -> m44_226  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_224 -> m44_225  [key=0, style=solid];
m44_224 -> m44_230  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_226 -> m44_9  [key=2, style=dotted];
m44_226 -> m44_76  [key=2, style=dotted];
m44_226 -> m44_227  [key=0, style=solid];
m44_225 -> m44_226  [key=0, style=solid];
m44_227 -> m44_228  [key=0, style=solid];
m44_227 -> m44_232  [key=2, style=dotted];
m44_227 -> m44_230  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_230 -> m44_231  [key=0, style=solid];
m44_230 -> m44_234  [key=2, style=dotted];
m44_230 -> m44_235  [key=2, style=dotted];
m44_228 -> m44_230  [key=0, style=solid];
m44_228 -> m44_229  [key=0, style=solid];
m44_228 -> m44_233  [key=2, style=dotted];
m44_229 -> m44_231  [key=0, style=solid];
m44_231 -> m44_224  [color=blue, key=0, style=bold];
m44_198 -> m44_200  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_198 -> m44_199  [key=0, style=solid];
m44_201 -> m44_29  [key=2, style=dotted];
m44_201 -> m44_202  [key=0, style=solid];
m44_201 -> m44_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_200 -> m44_201  [key=0, style=solid];
m44_200 -> m44_9  [key=2, style=dotted];
m44_200 -> m44_150  [key=2, style=dotted];
m44_199 -> m44_200  [key=0, style=solid];
m44_202 -> m44_198  [color=blue, key=0, style=bold];
m44_433 -> m44_84  [color=green, key=1, label=jobs, style=dashed];
m44_433 -> m44_70  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_434 -> m44_84  [color=green, key=1, label=states, style=dashed];
m44_434 -> m44_78  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_436 -> m44_130  [color=green, key=1, label=servers, style=dashed];
m44_436 -> m44_120  [color=darkseagreen4, key=1, label=servers, style=dashed];
m44_437 -> m44_130  [color=green, key=1, label=queues, style=dashed];
m44_437 -> m44_127  [color=darkseagreen4, key=1, label=queues, style=dashed];
m44_432 -> m44_70  [color=darkseagreen4, key=1, label=job, style=dashed];
m44_432 -> m44_78  [color=darkseagreen4, key=1, label=job, style=dashed];
m44_432 -> m44_65  [color=darkseagreen4, key=1, label=job, style=dashed];
m44_432 -> m44_74  [color=darkseagreen4, key=1, label=job, style=dashed];
m44_435 -> m44_120  [color=darkseagreen4, key=1, label=name, style=dashed];
m44_435 -> m44_127  [color=darkseagreen4, key=1, label=name, style=dashed];
m44_435 -> m44_117  [color=darkseagreen4, key=1, label=name, style=dashed];
m44_435 -> m44_123  [color=darkseagreen4, key=1, label=name, style=dashed];
m44_443 -> m44_343  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_443 -> m44_351  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_443 -> m44_339  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_443 -> m44_347  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_443 -> m44_342  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_443 -> m44_350  [color=darkseagreen4, key=1, label=id, style=dashed];
m44_444 -> m44_343  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_444 -> m44_342  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_444 -> m44_354  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m44_446 -> m44_351  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_446 -> m44_354  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_446 -> m44_350  [color=darkseagreen4, key=1, label=states, style=dashed];
m44_439 -> m44_260  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m44_440 -> m44_294  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_441 -> m44_322  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_442 -> m44_339  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m44_445 -> m44_347  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m44_447 -> m44_357  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m44_438 -> m44_177  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_438 -> m44_183  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_438 -> m44_189  [color=darkseagreen4, key=1, label=queue, style=dashed];
m44_449 -> m44_427  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m44_448 -> m44_392  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_448 -> m44_398  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_448 -> m44_404  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_448 -> m44_410  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_448 -> m44_417  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_448 -> m44_424  [color=darkseagreen4, key=1, label=stats, style=dashed];
m44_448 -> m44_430  [color=darkseagreen4, key=1, label=stats, style=dashed];
m45_3 -> m45_4  [key=0, style=solid];
m45_3 -> m45_5  [color=darkorchid, key=3, label="method methodReturn HangFire.Storage.StateAndInvocationData GetStateAndInvocationData", style=bold];
m45_4 -> m45_5  [key=0, style=solid];
m45_4 -> m45_16  [key=2, style=dotted];
m45_4 -> m45_17  [key=2, style=dotted];
m45_4 -> m45_8  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m45_4 -> m45_9  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m45_4 -> m45_10  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m45_4 -> m45_11  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m45_4 -> m45_12  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m45_4 -> m45_13  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m45_4 -> m45_14  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m45_5 -> m45_6  [key=0, style=solid];
m45_5 -> m45_7  [key=0, style=solid];
m45_8 -> m45_9  [key=0, style=solid];
m45_8 -> m45_10  [key=0, style=solid];
m45_8 -> m45_19  [key=2, style=dotted];
m45_9 -> m45_10  [key=0, style=solid];
m45_10 -> m45_11  [key=0, style=solid];
m45_10 -> m45_12  [key=0, style=solid];
m45_10 -> m45_19  [key=2, style=dotted];
m45_11 -> m45_12  [key=0, style=solid];
m45_12 -> m45_13  [key=0, style=solid];
m45_12 -> m45_14  [key=0, style=solid];
m45_12 -> m45_19  [key=2, style=dotted];
m45_13 -> m45_14  [key=0, style=solid];
m45_14 -> m45_15  [key=0, style=solid];
m45_14 -> m45_20  [key=2, style=dotted];
m45_14 -> m45_19  [key=2, style=dotted];
m45_6 -> m45_15  [key=0, style=solid];
m45_7 -> m45_8  [key=0, style=solid];
m45_7 -> m45_18  [key=2, style=dotted];
m45_7 -> m45_9  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m45_7 -> m45_11  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m45_7 -> m45_13  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m45_7 -> m45_14  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m45_15 -> m45_3  [color=blue, key=0, style=bold];
m45_29 -> m45_30  [color=red, key=0, style=solid];
m45_30 -> m45_31  [color=red, key=0, style=solid];
m45_30 -> m45_32  [color=red, key=2, style=dotted];
m45_31 -> m45_29  [color=blue, key=0, style=bold];
m45_0 -> m45_1  [key=0, style=solid];
m45_1 -> m45_2  [key=0, style=solid];
m45_2 -> m45_0  [color=blue, key=0, style=bold];
m45_25 -> m45_26  [key=0, style=solid];
m45_26 -> m45_27  [key=0, style=solid];
m45_26 -> m45_16  [key=2, style=dotted];
m45_26 -> m45_28  [key=2, style=dotted];
m45_27 -> m45_25  [color=blue, key=0, style=bold];
m45_22 -> m45_23  [key=0, style=solid];
m45_22 -> m45_16  [key=2, style=dotted];
m45_22 -> m45_24  [key=2, style=dotted];
m45_21 -> m45_22  [key=0, style=solid];
m45_23 -> m45_21  [color=blue, key=0, style=bold];
m45_33 -> m45_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredJobs", style=dashed];
m45_33 -> m45_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredJobs", style=dashed];
m45_33 -> m45_22  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredJobs", style=dashed];
m45_33 -> m45_26  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredJobs", style=dashed];
m45_33 -> m45_30  [color=red, key=1, label="HangFire.Redis.RedisStoredJobs", style=dashed];
m46_0 -> m46_1  [key=0, style=solid];
m46_1 -> m46_2  [key=0, style=solid];
m46_2 -> m46_0  [color=blue, key=0, style=bold];
m46_3 -> m46_4  [key=0, style=solid];
m46_4 -> m46_5  [key=0, style=solid];
m46_4 -> m46_6  [key=2, style=dotted];
m46_4 -> m46_7  [key=2, style=dotted];
m46_5 -> m46_3  [color=blue, key=0, style=bold];
m46_8 -> m46_1  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredSets", style=dashed];
m46_8 -> m46_4  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisStoredSets", style=dashed];
m47_40 -> m47_41  [key=0, style=solid];
m47_41 -> m47_42  [key=0, style=solid];
m47_41 -> m47_43  [key=2, style=dotted];
m47_42 -> m47_40  [color=blue, key=0, style=bold];
m47_0 -> m47_1  [key=0, style=solid];
m47_1 -> m47_0  [color=blue, key=0, style=bold];
m47_2 -> m47_3  [key=0, style=solid];
m47_3 -> m47_2  [color=blue, key=0, style=bold];
m47_37 -> m47_44  [key=0, style=solid];
m47_37 -> m47_46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m47_37 -> m47_48  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m47_37 -> m47_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m47_37 -> m47_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m47_37 -> m47_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IReadOnlyDictionary<string, string>", style=dashed];
m47_37 -> m47_56  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m47_37 -> m47_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_37 -> m47_63  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m47_37 -> m47_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m47_44 -> m47_45  [key=0, style=solid];
m47_44 -> m47_67  [key=2, style=dotted];
m47_46 -> m47_47  [key=0, style=solid];
m47_48 -> m47_49  [key=0, style=solid];
m47_48 -> m47_70  [key=2, style=dotted];
m47_48 -> m47_71  [key=2, style=dotted];
m47_50 -> m47_51  [key=0, style=solid];
m47_50 -> m47_70  [key=2, style=dotted];
m47_50 -> m47_73  [key=2, style=dotted];
m47_50 -> m47_52  [color=darkseagreen4, key=1, label=lastExecutionTime, style=dashed];
m47_54 -> m47_55  [key=0, style=solid];
m47_54 -> m47_56  [key=0, style=solid];
m47_54 -> m47_70  [key=2, style=dotted];
m47_54 -> m47_78  [key=2, style=dotted];
m47_55 -> m47_56  [key=0, style=solid];
m47_56 -> m47_57  [key=0, style=solid];
m47_56 -> m47_79  [key=2, style=dotted];
m47_56 -> m47_80  [key=2, style=dotted];
m47_59 -> m47_60  [key=0, style=solid];
m47_59 -> m47_81  [key=2, style=dotted];
m47_63 -> m47_64  [key=0, style=solid];
m47_63 -> m47_66  [key=0, style=solid];
m47_63 -> m47_35  [key=2, style=dotted];
m47_63 -> m47_84  [key=2, style=dotted];
m47_65 -> m47_66  [key=0, style=solid];
m47_65 -> m47_85  [key=2, style=dotted];
m47_65 -> m47_86  [key=2, style=dotted];
m47_45 -> m47_46  [key=0, style=solid];
m47_45 -> m47_68  [key=2, style=dotted];
m47_45 -> m47_56  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_47 -> m47_48  [key=0, style=solid];
m47_47 -> m47_69  [key=2, style=dotted];
m47_47 -> m47_49  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
m47_49 -> m47_50  [key=0, style=solid];
m47_49 -> m47_72  [key=2, style=dotted];
m47_49 -> m47_52  [color=darkseagreen4, key=1, label=instant, style=dashed];
m47_49 -> m47_59  [color=darkseagreen4, key=1, label=instant, style=dashed];
m47_49 -> m47_60  [color=darkseagreen4, key=1, label=instant, style=dashed];
m47_49 -> m47_62  [color=darkseagreen4, key=1, label=instant, style=dashed];
m47_52 -> m47_53  [key=0, style=solid];
m47_52 -> m47_62  [key=0, style=solid];
m47_52 -> m47_75  [key=2, style=dotted];
m47_52 -> m47_76  [key=2, style=dotted];
m47_60 -> m47_61  [key=0, style=solid];
m47_60 -> m47_82  [key=2, style=dotted];
m47_60 -> m47_83  [key=2, style=dotted];
m47_62 -> m47_63  [key=0, style=solid];
m47_62 -> m47_82  [key=2, style=dotted];
m47_62 -> m47_83  [key=2, style=dotted];
m47_51 -> m47_52  [key=0, style=solid];
m47_51 -> m47_74  [key=2, style=dotted];
m47_51 -> m47_60  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m47_51 -> m47_61  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m47_51 -> m47_62  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m47_51 -> m47_63  [color=darkseagreen4, key=1, label=changedFields, style=dashed];
m47_61 -> m47_62  [key=0, style=solid];
m47_61 -> m47_83  [key=2, style=dotted];
m47_53 -> m47_54  [key=0, style=solid];
m47_53 -> m47_77  [key=2, style=dotted];
m47_53 -> m47_55  [color=darkseagreen4, key=1, label=state, style=dashed];
m47_53 -> m47_56  [color=darkseagreen4, key=1, label=state, style=dashed];
m47_57 -> m47_58  [key=0, style=solid];
m47_57 -> m47_61  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m47_58 -> m47_59  [key=0, style=solid];
m47_58 -> m47_60  [key=0, style=solid];
m47_58 -> m47_78  [key=2, style=dotted];
m47_64 -> m47_65  [key=0, style=solid];
m47_66 -> m47_37  [color=blue, key=0, style=bold];
m47_16 -> m47_17  [color=red, key=0, style=solid];
m47_16 -> m47_19  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m47_16 -> m47_20  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m47_16 -> m47_26  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m47_16 -> m47_29  [color=red, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m47_17 -> m47_18  [color=red, key=0, style=solid];
m47_17 -> m47_19  [color=red, key=0, style=solid];
m47_19 -> m47_20  [color=red, key=0, style=solid];
m47_19 -> m47_31  [color=red, key=2, style=dotted];
m47_20 -> m47_21  [color=red, key=0, style=solid];
m47_20 -> m47_32  [color=red, key=2, style=dotted];
m47_20 -> m47_22  [color=red, key=1, label=connection, style=dashed];
m47_20 -> m47_24  [color=red, key=1, label=connection, style=dashed];
m47_20 -> m47_26  [color=red, key=1, label=connection, style=dashed];
m47_26 -> m47_27  [color=red, key=0, style=solid];
m47_26 -> m47_23  [color=red, key=0, style=solid];
m47_26 -> m47_37  [color=red, key=2, style=dotted];
m47_29 -> m47_30  [color=red, key=0, style=solid];
m47_29 -> m47_39  [color=red, key=2, style=dotted];
m47_18 -> m47_30  [color=red, key=0, style=solid];
m47_18 -> m47_15  [color=red, key=2, style=dotted];
m47_21 -> m47_22  [color=red, key=0, style=solid];
m47_21 -> m47_33  [color=red, key=2, style=dotted];
m47_22 -> m47_23  [color=red, key=0, style=solid];
m47_22 -> m47_34  [color=red, key=2, style=dotted];
m47_24 -> m47_25  [color=red, key=0, style=solid];
m47_24 -> m47_35  [color=red, key=2, style=dotted];
m47_24 -> m47_36  [color=red, key=2, style=dotted];
m47_24 -> m47_26  [color=red, key=1, label=recurringJob, style=dashed];
m47_23 -> m47_24  [color=red, key=0, style=solid];
m47_23 -> m47_29  [color=red, key=0, style=solid];
m47_23 -> m47_26  [color=red, key=1, label=recurringJobId, style=dashed];
m47_23 -> m47_28  [color=red, key=1, label=recurringJobId, style=dashed];
m47_28 -> m47_23  [color=red, key=0, style=solid];
m47_28 -> m47_35  [color=red, key=2, style=dotted];
m47_28 -> m47_38  [color=red, key=2, style=dotted];
m47_25 -> m47_26  [color=red, key=0, style=solid];
m47_25 -> m47_23  [color=red, key=0, style=solid];
m47_27 -> m47_28  [color=red, key=0, style=solid];
m47_30 -> m47_16  [color=blue, key=0, style=bold];
m47_4 -> m47_5  [color=red, key=0, style=solid];
m47_4 -> m47_7  [color=red, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m47_4 -> m47_9  [color=red, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m47_4 -> m47_11  [color=red, key=1, label="Hangfire.Client.IBackgroundJobFactory", style=dashed];
m47_4 -> m47_12  [color=red, key=1, label="System.Func<CrontabSchedule, System.TimeZoneInfo, Hangfire.Server.IScheduleInstant>", style=dashed];
m47_4 -> m47_13  [color=red, key=1, label="Hangfire.Server.IThrottler", style=dashed];
m47_5 -> m47_6  [color=red, key=0, style=solid];
m47_5 -> m47_7  [color=red, key=0, style=solid];
m47_7 -> m47_8  [color=red, key=0, style=solid];
m47_7 -> m47_9  [color=red, key=0, style=solid];
m47_9 -> m47_10  [color=red, key=0, style=solid];
m47_9 -> m47_11  [color=red, key=0, style=solid];
m47_11 -> m47_12  [color=red, key=0, style=solid];
m47_12 -> m47_13  [color=red, key=0, style=solid];
m47_13 -> m47_14  [color=red, key=0, style=solid];
m47_6 -> m47_14  [color=red, key=0, style=solid];
m47_6 -> m47_15  [color=red, key=2, style=dotted];
m47_8 -> m47_14  [color=red, key=0, style=solid];
m47_8 -> m47_15  [color=red, key=2, style=dotted];
m47_10 -> m47_14  [color=red, key=0, style=solid];
m47_10 -> m47_15  [color=red, key=2, style=dotted];
m47_14 -> m47_4  [color=blue, key=0, style=bold];
m47_87 -> m47_11  [color=red, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m47_87 -> m47_12  [color=red, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m47_87 -> m47_13  [color=red, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m47_87 -> m47_19  [color=red, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m47_87 -> m47_26  [color=red, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m47_87 -> m47_29  [color=red, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m47_87 -> m47_41  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m47_87 -> m47_49  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m47_87 -> m47_56  [color=darkseagreen4, key=1, label="Hangfire.Server.RecurringJobScheduler", style=dashed];
m49_0 -> m49_1  [color=green, key=0, style=solid];
m49_1 -> m49_2  [color=green, key=0, style=solid];
m49_2 -> m49_3  [color=green, key=0, style=solid];
m49_3 -> m49_0  [color=blue, key=0, style=bold];
m49_4 -> m49_1  [color=green, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
m49_4 -> m49_2  [color=green, key=1, label="Hangfire.Server.ServerWatchdogOptions", style=dashed];
m53_22 -> m53_23  [color=green, key=0, style=solid];
m53_23 -> m53_24  [color=green, key=0, style=solid];
m53_23 -> m53_25  [color=green, key=2, style=dotted];
m53_24 -> m53_22  [color=blue, key=0, style=bold];
m53_18 -> m53_19  [color=green, key=0, style=solid];
m53_19 -> m53_20  [color=green, key=0, style=solid];
m53_19 -> m53_21  [color=green, key=2, style=dotted];
m53_20 -> m53_18  [color=blue, key=0, style=bold];
m53_0 -> m53_1  [color=green, key=0, style=solid];
m53_0 -> m53_3  [color=green, key=1, label=IRedisTransaction, style=dashed];
m53_0 -> m53_4  [color=green, key=1, label=IRedisTransaction, style=dashed];
m53_0 -> m53_5  [color=green, key=1, label=IRedisTransaction, style=dashed];
m53_0 -> m53_6  [color=green, key=1, label=IRedisTransaction, style=dashed];
m53_0 -> m53_7  [color=green, key=1, label=IRedisTransaction, style=dashed];
m53_0 -> m53_8  [color=green, key=1, label=IRedisTransaction, style=dashed];
m53_0 -> m53_9  [color=green, key=1, label=IRedisTransaction, style=dashed];
m53_1 -> m53_2  [color=green, key=0, style=solid];
m53_1 -> m53_3  [color=green, key=0, style=solid];
m53_2 -> m53_10  [color=green, key=0, style=solid];
m53_2 -> m53_11  [color=green, key=2, style=dotted];
m53_3 -> m53_4  [color=green, key=0, style=solid];
m53_4 -> m53_5  [color=green, key=0, style=solid];
m53_4 -> m53_12  [color=green, key=2, style=dotted];
m53_5 -> m53_6  [color=green, key=0, style=solid];
m53_5 -> m53_13  [color=green, key=2, style=dotted];
m53_6 -> m53_7  [color=green, key=0, style=solid];
m53_6 -> m53_14  [color=green, key=2, style=dotted];
m53_7 -> m53_8  [color=green, key=0, style=solid];
m53_7 -> m53_15  [color=green, key=2, style=dotted];
m53_8 -> m53_9  [color=green, key=0, style=solid];
m53_8 -> m53_16  [color=green, key=2, style=dotted];
m53_9 -> m53_10  [color=green, key=0, style=solid];
m53_9 -> m53_17  [color=green, key=2, style=dotted];
m53_10 -> m53_0  [color=blue, key=0, style=bold];
m53_26 -> m53_3  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m53_26 -> m53_4  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m53_26 -> m53_5  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m53_26 -> m53_6  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m53_26 -> m53_7  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m53_26 -> m53_8  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m53_26 -> m53_9  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m53_26 -> m53_19  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m53_26 -> m53_23  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m56_56 -> m56_68  [key=0, style=solid];
m56_68 -> m56_69  [key=0, style=solid];
m56_68 -> m56_71  [key=2, style=dotted];
m56_69 -> m56_70  [key=0, style=solid];
m56_69 -> m56_72  [key=2, style=dotted];
m56_69 -> m56_73  [key=2, style=dotted];
m56_69 -> m56_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m56_70 -> m56_56  [color=blue, key=0, style=bold];
m56_4 -> m56_5  [key=0, style=solid];
m56_4 -> m56_7  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m56_4 -> m56_9  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m56_4 -> m56_11  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m56_4 -> m56_13  [color=darkseagreen4, key=1, label="HangFire.JobStorage", style=dashed];
m56_4 -> m56_14  [color=darkseagreen4, key=1, label=int, style=dashed];
m56_4 -> m56_15  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m56_5 -> m56_6  [key=0, style=solid];
m56_5 -> m56_7  [key=0, style=solid];
m56_7 -> m56_8  [key=0, style=solid];
m56_7 -> m56_9  [key=0, style=solid];
m56_9 -> m56_10  [key=0, style=solid];
m56_9 -> m56_11  [key=0, style=solid];
m56_11 -> m56_12  [key=0, style=solid];
m56_11 -> m56_13  [key=0, style=solid];
m56_13 -> m56_14  [key=0, style=solid];
m56_14 -> m56_15  [key=0, style=solid];
m56_15 -> m56_16  [key=0, style=solid];
m56_6 -> m56_18  [key=0, style=solid];
m56_6 -> m56_19  [key=2, style=dotted];
m56_8 -> m56_18  [key=0, style=solid];
m56_8 -> m56_20  [key=2, style=dotted];
m56_10 -> m56_18  [key=0, style=solid];
m56_10 -> m56_21  [key=2, style=dotted];
m56_12 -> m56_18  [key=0, style=solid];
m56_12 -> m56_20  [key=2, style=dotted];
m56_16 -> m56_17  [key=0, style=solid];
m56_16 -> m56_22  [key=2, style=dotted];
m56_16 -> m56_23  [key=2, style=dotted];
m56_16 -> m56_24  [key=2, style=dotted];
m56_17 -> m56_18  [key=0, style=solid];
m56_17 -> m56_25  [key=2, style=dotted];
m56_18 -> m56_4  [color=blue, key=0, style=bold];
m56_0 -> m56_1  [key=0, style=solid];
m56_1 -> m56_0  [color=blue, key=0, style=bold];
m56_2 -> m56_3  [key=0, style=solid];
m56_3 -> m56_2  [color=blue, key=0, style=bold];
m56_54 -> m56_58  [key=0, style=solid];
m56_54 -> m56_59  [color=crimson, key=0, style=bold];
m56_54 -> m56_60  [color=crimson, key=0, style=bold];
m56_58 -> m56_59  [key=0, style=solid];
m56_58 -> m56_62  [key=2, style=dotted];
m56_58 -> m56_63  [key=2, style=dotted];
m56_59 -> m56_60  [key=0, style=solid];
m56_59 -> m56_64  [key=2, style=dotted];
m56_59 -> m56_65  [key=2, style=dotted];
m56_59 -> m56_66  [key=2, style=dotted];
m56_60 -> m56_61  [key=0, style=solid];
m56_60 -> m56_62  [key=2, style=dotted];
m56_60 -> m56_67  [key=2, style=dotted];
m56_61 -> m56_54  [color=blue, key=0, style=bold];
m56_30 -> m56_31  [key=0, style=solid];
m56_31 -> m56_32  [key=0, style=solid];
m56_31 -> m56_33  [key=2, style=dotted];
m56_32 -> m56_30  [color=blue, key=0, style=bold];
m56_47 -> m56_48  [key=0, style=solid];
m56_48 -> m56_49  [key=0, style=solid];
m56_48 -> m56_53  [key=2, style=dotted];
m56_48 -> m56_50  [color=darkseagreen4, key=1, label=componentRunners, style=dashed];
m56_48 -> m56_51  [color=darkseagreen4, key=1, label=componentRunners, style=dashed];
m56_49 -> m56_50  [key=0, style=solid];
m56_49 -> m56_54  [key=2, style=dotted];
m56_49 -> m56_55  [key=2, style=dotted];
m56_50 -> m56_51  [key=0, style=solid];
m56_50 -> m56_56  [key=2, style=dotted];
m56_50 -> m56_55  [key=2, style=dotted];
m56_51 -> m56_52  [key=0, style=solid];
m56_51 -> m56_57  [key=2, style=dotted];
m56_52 -> m56_47  [color=blue, key=0, style=bold];
m56_74 -> m56_75  [key=0, style=solid];
m56_75 -> m56_76  [key=0, style=solid];
m56_75 -> m56_62  [key=2, style=dotted];
m56_76 -> m56_74  [color=blue, key=0, style=bold];
m56_26 -> m56_27  [key=0, style=solid];
m56_27 -> m56_28  [key=0, style=solid];
m56_27 -> m56_29  [key=2, style=dotted];
m56_28 -> m56_26  [color=blue, key=0, style=bold];
m56_25 -> m56_38  [key=0, style=solid];
m56_38 -> m56_39  [key=0, style=solid];
m56_38 -> m56_42  [key=2, style=dotted];
m56_39 -> m56_40  [key=0, style=solid];
m56_39 -> m56_43  [key=2, style=dotted];
m56_39 -> m56_44  [key=2, style=dotted];
m56_40 -> m56_41  [key=0, style=solid];
m56_40 -> m56_45  [key=2, style=dotted];
m56_40 -> m56_46  [key=2, style=dotted];
m56_41 -> m56_25  [color=blue, key=0, style=bold];
m56_34 -> m56_35  [key=0, style=solid];
m56_35 -> m56_36  [key=0, style=solid];
m56_35 -> m56_37  [key=2, style=dotted];
m56_36 -> m56_34  [color=blue, key=0, style=bold];
m56_77 -> m56_13  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_14  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_15  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_16  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_17  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_27  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_31  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_35  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_38  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_39  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_49  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_50  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_58  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_59  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_60  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m56_77 -> m56_68  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m57_0 -> m57_1  [key=0, style=solid];
m57_1 -> m57_0  [color=blue, key=0, style=bold];
m58_0 -> m58_1  [key=0, style=solid];
m58_0 -> m58_2  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m58_1 -> m58_2  [key=0, style=solid];
m58_2 -> m58_3  [key=0, style=solid];
m58_3 -> m58_0  [color=blue, key=0, style=bold];
m58_22 -> m58_23  [key=0, style=solid];
m58_23 -> m58_24  [key=0, style=solid];
m58_23 -> m58_38  [key=2, style=dotted];
m58_24 -> m58_25  [key=0, style=solid];
m58_24 -> m58_29  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m58_24 -> m58_30  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m58_24 -> m58_31  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m58_24 -> m58_7  [color=darkorchid, key=3, label="Local variable int enqueued", style=bold];
m58_25 -> m58_26  [key=0, style=solid];
m58_25 -> m58_34  [key=0, style=solid];
m58_29 -> m58_25  [key=0, style=solid];
m58_29 -> m58_29  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m58_29 -> m58_30  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m58_29 -> m58_31  [color=darkseagreen4, key=1, label=enqueued, style=dashed];
m58_30 -> m58_31  [key=0, style=solid];
m58_30 -> m58_33  [key=0, style=solid];
m58_31 -> m58_32  [key=0, style=solid];
m58_31 -> m58_40  [key=2, style=dotted];
m58_26 -> m58_27  [key=0, style=solid];
m58_26 -> m58_9  [color=darkorchid, key=3, label="Local variable bool wasEnqueued", style=bold];
m58_26 -> m58_4  [color=darkorchid, key=3, label="Local variable bool wasEnqueued", style=bold];
m58_34 -> m58_35  [key=0, style=solid];
m58_34 -> m58_37  [key=0, style=solid];
m58_34 -> m58_38  [key=2, style=dotted];
m58_27 -> m58_28  [key=0, style=solid];
m58_27 -> m58_39  [key=2, style=dotted];
m58_27 -> m58_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m58_28 -> m58_29  [key=0, style=solid];
m58_28 -> m58_30  [key=0, style=solid];
m58_33 -> m58_25  [key=0, style=solid];
m58_33 -> m58_34  [key=0, style=solid];
m58_33 -> m58_41  [key=2, style=dotted];
m58_32 -> m58_33  [key=0, style=solid];
m58_35 -> m58_36  [key=0, style=solid];
m58_36 -> m58_37  [key=0, style=solid];
m58_36 -> m58_42  [key=2, style=dotted];
m58_37 -> m58_22  [color=blue, key=0, style=bold];
m58_46 -> m58_47  [key=0, style=solid];
m58_46 -> m58_48  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m58_47 -> m58_48  [key=0, style=solid];
m58_47 -> m58_50  [key=2, style=dotted];
m58_48 -> m58_49  [key=0, style=solid];
m58_48 -> m58_51  [key=2, style=dotted];
m58_49 -> m58_46  [color=blue, key=0, style=bold];
m58_4 -> m58_5  [key=0, style=solid];
m58_4 -> m58_9  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m58_4 -> m58_13  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m58_5 -> m58_6  [key=0, style=solid];
m58_5 -> m58_15  [key=2, style=dotted];
m58_5 -> m58_7  [color=darkseagreen4, key=1, label=connection, style=dashed];
m58_5 -> m58_10  [color=darkseagreen4, key=1, label=connection, style=dashed];
m58_6 -> m58_7  [key=0, style=solid];
m58_6 -> m58_16  [key=2, style=dotted];
m58_7 -> m58_8  [key=0, style=solid];
m58_7 -> m58_17  [key=2, style=dotted];
m58_7 -> m58_12  [color=green, key=1, label=jobId, style=dashed];
m58_10 -> m58_11  [color=green, key=0, style=solid];
m58_10 -> m58_19  [key=2, style=dotted];
m58_10 -> m58_12  [color=green, key=1, label=stateMachine, style=dashed];
m58_8 -> m58_9  [key=0, style=solid];
m58_8 -> m58_10  [key=0, style=solid];
m58_8 -> m58_18  [key=2, style=dotted];
m58_12 -> m58_13  [color=green, key=0, style=solid];
m58_12 -> m58_21  [color=green, key=2, style=dotted];
m58_9 -> m58_14  [key=0, style=solid];
m58_11 -> m58_12  [color=green, key=0, style=solid];
m58_11 -> m58_20  [color=green, key=2, style=dotted];
m58_13 -> m58_14  [key=0, style=solid];
m58_14 -> m58_4  [color=blue, key=0, style=bold];
m58_43 -> m58_44  [key=0, style=solid];
m58_44 -> m58_45  [key=0, style=solid];
m58_44 -> m58_4  [key=2, style=dotted];
m58_45 -> m58_43  [color=blue, key=0, style=bold];
m58_52 -> m58_1  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m58_52 -> m58_2  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m58_52 -> m58_5  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m58_52 -> m58_27  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m58_52 -> m58_44  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m58_52 -> m58_28  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m58_52 -> m58_33  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m58_52 -> m58_47  [color=darkseagreen4, key=1, label="HangFire.Server.Components.SchedulePoller", style=dashed];
m59_0 -> m59_1  [key=0, style=solid];
m59_1 -> m59_2  [key=0, style=solid];
m59_2 -> m59_3  [key=0, style=solid];
m59_2 -> m59_4  [key=2, style=dotted];
m59_3 -> m59_0  [color=blue, key=0, style=bold];
m59_5 -> m59_1  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m59_5 -> m59_2  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m60_0 -> m60_1  [key=0, style=solid];
m60_1 -> m60_2  [key=0, style=solid];
m60_1 -> m60_57  [key=2, style=dotted];
m60_2 -> m60_3  [key=0, style=solid];
m60_2 -> m60_58  [key=2, style=dotted];
m60_3 -> m60_4  [color=red, key=0, style=solid];
m60_4 -> m60_5  [color=red, key=0, style=solid];
m60_4 -> m60_59  [color=red, key=2, style=dotted];
m60_4 -> m60_9  [color=red, key=1, label=from, style=dashed];
m60_5 -> m60_6  [key=0, style=solid];
m60_5 -> m60_59  [key=2, style=dotted];
m60_5 -> m60_9  [color=darkseagreen4, key=1, label=perPage, style=dashed];
m60_9 -> m60_10  [key=0, style=solid];
m60_9 -> m60_61  [key=2, style=dotted];
m60_9 -> m60_62  [key=2, style=dotted];
m60_9 -> m60_63  [key=2, style=dotted];
m60_9 -> m60_12  [color=darkseagreen4, key=1, label=pager, style=dashed];
m60_9 -> m60_19  [color=darkseagreen4, key=1, label=pager, style=dashed];
m60_9 -> m60_55  [color=darkseagreen4, key=1, label=pager, style=dashed];
m60_6 -> m60_7  [key=0, style=solid];
m60_7 -> m60_8  [key=0, style=solid];
m60_8 -> m60_9  [key=0, style=solid];
m60_8 -> m60_60  [key=2, style=dotted];
m60_8 -> m60_10  [color=darkseagreen4, key=1, label=monitor, style=dashed];
m60_10 -> m60_11  [key=0, style=solid];
m60_10 -> m60_64  [key=2, style=dotted];
m60_10 -> m60_21  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m60_12 -> m60_13  [key=0, style=solid];
m60_12 -> m60_14  [key=0, style=solid];
m60_19 -> m60_20  [key=0, style=solid];
m60_19 -> m60_66  [key=2, style=dotted];
m60_19 -> m60_67  [key=2, style=dotted];
m60_19 -> m60_68  [key=2, style=dotted];
m60_55 -> m60_56  [key=0, style=solid];
m60_55 -> m60_72  [key=2, style=dotted];
m60_55 -> m60_67  [key=2, style=dotted];
m60_55 -> m60_68  [key=2, style=dotted];
m60_11 -> m60_12  [key=0, style=solid];
m60_11 -> m60_57  [key=2, style=dotted];
m60_21 -> m60_22  [key=0, style=solid];
m60_21 -> m60_54  [key=0, style=solid];
m60_21 -> m60_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_13 -> m60_56  [key=0, style=solid];
m60_13 -> m60_57  [key=2, style=dotted];
m60_14 -> m60_15  [key=0, style=solid];
m60_14 -> m60_57  [key=2, style=dotted];
m60_15 -> m60_16  [key=0, style=solid];
m60_15 -> m60_63  [key=2, style=dotted];
m60_15 -> m60_65  [key=2, style=dotted];
m60_16 -> m60_17  [key=0, style=solid];
m60_16 -> m60_57  [key=2, style=dotted];
m60_17 -> m60_18  [key=0, style=solid];
m60_17 -> m60_63  [key=2, style=dotted];
m60_17 -> m60_65  [key=2, style=dotted];
m60_18 -> m60_19  [key=0, style=solid];
m60_18 -> m60_57  [key=2, style=dotted];
m60_20 -> m60_21  [key=0, style=solid];
m60_20 -> m60_57  [key=2, style=dotted];
m60_22 -> m60_23  [key=0, style=solid];
m60_22 -> m60_57  [key=2, style=dotted];
m60_54 -> m60_55  [key=0, style=solid];
m60_54 -> m60_57  [key=2, style=dotted];
m60_23 -> m60_24  [key=0, style=solid];
m60_23 -> m60_65  [key=2, style=dotted];
m60_23 -> m60_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_23 -> m60_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_24 -> m60_25  [key=0, style=solid];
m60_24 -> m60_57  [key=2, style=dotted];
m60_25 -> m60_26  [key=0, style=solid];
m60_25 -> m60_65  [key=2, style=dotted];
m60_25 -> m60_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_25 -> m60_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_26 -> m60_27  [key=0, style=solid];
m60_26 -> m60_57  [key=2, style=dotted];
m60_27 -> m60_28  [key=0, style=solid];
m60_27 -> m60_31  [key=0, style=solid];
m60_27 -> m60_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_27 -> m60_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_27 -> m60_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_28 -> m60_29  [key=0, style=solid];
m60_28 -> m60_57  [key=2, style=dotted];
m60_31 -> m60_32  [key=0, style=solid];
m60_31 -> m60_57  [key=2, style=dotted];
m60_29 -> m60_30  [key=0, style=solid];
m60_29 -> m60_65  [key=2, style=dotted];
m60_29 -> m60_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_29 -> m60_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_32 -> m60_33  [key=0, style=solid];
m60_32 -> m60_63  [key=2, style=dotted];
m60_32 -> m60_65  [key=2, style=dotted];
m60_32 -> m60_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_32 -> m60_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_30 -> m60_31  [key=0, style=solid];
m60_30 -> m60_57  [key=2, style=dotted];
m60_33 -> m60_34  [key=0, style=solid];
m60_33 -> m60_57  [key=2, style=dotted];
m60_34 -> m60_35  [key=0, style=solid];
m60_34 -> m60_69  [key=2, style=dotted];
m60_34 -> m60_68  [key=2, style=dotted];
m60_34 -> m60_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_34 -> m60_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_35 -> m60_36  [key=0, style=solid];
m60_35 -> m60_57  [key=2, style=dotted];
m60_36 -> m60_37  [key=0, style=solid];
m60_36 -> m60_38  [key=0, style=solid];
m60_36 -> m60_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_36 -> m60_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_37 -> m60_38  [key=0, style=solid];
m60_37 -> m60_57  [key=2, style=dotted];
m60_38 -> m60_39  [key=0, style=solid];
m60_38 -> m60_57  [key=2, style=dotted];
m60_39 -> m60_40  [key=0, style=solid];
m60_39 -> m60_70  [key=2, style=dotted];
m60_39 -> m60_65  [key=2, style=dotted];
m60_39 -> m60_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_39 -> m60_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_40 -> m60_41  [key=0, style=solid];
m60_40 -> m60_57  [key=2, style=dotted];
m60_41 -> m60_42  [key=0, style=solid];
m60_41 -> m60_65  [key=2, style=dotted];
m60_41 -> m60_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_41 -> m60_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_42 -> m60_43  [key=0, style=solid];
m60_42 -> m60_57  [key=2, style=dotted];
m60_43 -> m60_44  [key=0, style=solid];
m60_43 -> m60_63  [key=2, style=dotted];
m60_43 -> m60_65  [key=2, style=dotted];
m60_43 -> m60_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_43 -> m60_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_44 -> m60_45  [key=0, style=solid];
m60_44 -> m60_57  [key=2, style=dotted];
m60_45 -> m60_46  [key=0, style=solid];
m60_45 -> m60_71  [key=2, style=dotted];
m60_45 -> m60_68  [key=2, style=dotted];
m60_45 -> m60_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_45 -> m60_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_46 -> m60_47  [key=0, style=solid];
m60_46 -> m60_57  [key=2, style=dotted];
m60_47 -> m60_48  [key=0, style=solid];
m60_47 -> m60_53  [key=0, style=solid];
m60_47 -> m60_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_47 -> m60_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_48 -> m60_49  [key=0, style=solid];
m60_48 -> m60_57  [key=2, style=dotted];
m60_53 -> m60_21  [key=0, style=solid];
m60_53 -> m60_57  [key=2, style=dotted];
m60_49 -> m60_50  [key=0, style=solid];
m60_49 -> m60_70  [key=2, style=dotted];
m60_49 -> m60_65  [key=2, style=dotted];
m60_49 -> m60_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_49 -> m60_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_50 -> m60_51  [key=0, style=solid];
m60_50 -> m60_57  [key=2, style=dotted];
m60_51 -> m60_52  [key=0, style=solid];
m60_51 -> m60_65  [key=2, style=dotted];
m60_51 -> m60_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m60_52 -> m60_53  [key=0, style=solid];
m60_52 -> m60_57  [key=2, style=dotted];
m60_56 -> m60_0  [color=blue, key=0, style=bold];
m60_73 -> m60_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_4  [color=red, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m60_73 -> m60_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ScheduledJobsPage", style=dashed];
m61_43 -> m61_44  [key=0, style=solid];
m61_43 -> m61_38  [key=2, style=dotted];
m61_10 -> m61_11  [key=0, style=solid];
m61_10 -> m61_13  [key=2, style=dotted];
m61_66 -> m61_67  [key=0, style=solid];
m61_67 -> m61_68  [key=0, style=solid];
m61_67 -> m61_37  [key=2, style=dotted];
m61_68 -> m61_69  [key=0, style=solid];
m61_68 -> m61_22  [key=2, style=dotted];
m61_69 -> m61_70  [key=0, style=solid];
m61_69 -> m61_38  [key=2, style=dotted];
m61_70 -> m61_71  [key=0, style=solid];
m61_70 -> m61_39  [key=2, style=dotted];
m61_71 -> m61_72  [key=0, style=solid];
m61_71 -> m61_26  [key=2, style=dotted];
m61_72 -> m61_66  [color=blue, key=0, style=bold];
m61_22 -> m61_23  [key=0, style=solid];
m61_22 -> m61_31  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m61_22 -> m61_41  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m61_22 -> m61_53  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m61_22 -> m61_60  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m61_22 -> m61_67  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m61_22 -> m61_74  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m61_23 -> m61_24  [key=0, style=solid];
m61_23 -> m61_25  [key=2, style=dotted];
m61_24 -> m61_22  [color=blue, key=0, style=bold];
m61_24 -> m61_25  [key=0, style=solid];
m61_24 -> m61_26  [key=2, style=dotted];
m61_25 -> m61_23  [color=blue, key=0, style=bold];
m61_26 -> m61_27  [key=0, style=solid];
m61_27 -> m61_28  [key=0, style=solid];
m61_27 -> m61_29  [key=2, style=dotted];
m61_27 -> m61_34  [color=green, key=1, label=connection, style=dashed];
m61_27 -> m61_41  [key=2, style=dotted];
m61_27 -> m61_30  [color=darkseagreen4, key=1, label=connection, style=dashed];
m61_27 -> m61_36  [color=darkseagreen4, key=1, label=connection, style=dashed];
m61_28 -> m61_26  [color=blue, key=0, style=bold];
m61_28 -> m61_29  [color=green, key=0, style=solid];
m61_28 -> m61_42  [key=2, style=dotted];
m61_29 -> m61_30  [color=green, key=0, style=solid];
m61_29 -> m61_43  [color=green, key=2, style=dotted];
m61_52 -> m61_53  [key=0, style=solid];
m61_53 -> m61_54  [key=0, style=solid];
m61_53 -> m61_37  [key=2, style=dotted];
m61_53 -> m61_7  [color=green, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m61_53 -> m61_8  [color=green, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m61_53 -> m61_34  [color=green, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m61_53 -> m61_13  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m61_53 -> m61_18  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m61_53 -> m61_24  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m61_54 -> m61_55  [key=0, style=solid];
m61_54 -> m61_22  [key=2, style=dotted];
m61_55 -> m61_56  [key=0, style=solid];
m61_55 -> m61_38  [key=2, style=dotted];
m61_56 -> m61_57  [key=0, style=solid];
m61_56 -> m61_39  [key=2, style=dotted];
m61_57 -> m61_58  [key=0, style=solid];
m61_57 -> m61_26  [key=2, style=dotted];
m61_58 -> m61_52  [color=blue, key=0, style=bold];
m61_59 -> m61_60  [key=0, style=solid];
m61_60 -> m61_61  [key=0, style=solid];
m61_60 -> m61_37  [key=2, style=dotted];
m61_61 -> m61_62  [key=0, style=solid];
m61_61 -> m61_22  [key=2, style=dotted];
m61_62 -> m61_63  [key=0, style=solid];
m61_62 -> m61_38  [key=2, style=dotted];
m61_63 -> m61_64  [key=0, style=solid];
m61_63 -> m61_39  [key=2, style=dotted];
m61_64 -> m61_65  [key=0, style=solid];
m61_64 -> m61_26  [key=2, style=dotted];
m61_65 -> m61_59  [color=blue, key=0, style=bold];
m61_47 -> m61_48  [key=0, style=solid];
m61_47 -> m61_39  [key=2, style=dotted];
m61_41 -> m61_42  [key=0, style=solid];
m61_41 -> m61_37  [key=2, style=dotted];
m61_42 -> m61_43  [key=0, style=solid];
m61_42 -> m61_22  [key=2, style=dotted];
m61_46 -> m61_47  [key=0, style=solid];
m61_46 -> m61_51  [key=2, style=dotted];
m61_18 -> m61_19  [key=0, style=solid];
m61_18 -> m61_22  [key=2, style=dotted];
m61_19 -> m61_20  [key=0, style=solid];
m61_19 -> m61_21  [key=2, style=dotted];
m61_19 -> m61_11  [color=blue, key=0, style=bold];
m61_20 -> m61_18  [color=blue, key=0, style=bold];
m61_20 -> m61_34  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m61_20 -> m61_27  [key=0, style=solid];
m61_20 -> m61_11  [color=darkorchid, key=3, label="Parameter variable Hangfire.Server.BackgroundProcessContext context", style=bold];
m61_20 -> m61_32  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m61_20 -> m61_39  [color=darkorchid, key=3, label="method methodReturn bool EnqueueNextScheduledJob", style=bold];
m61_34 -> m61_35  [color=green, key=0, style=solid];
m61_34 -> m61_47  [color=green, key=2, style=dotted];
m61_34 -> m61_46  [color=green, key=2, style=dotted];
m61_34 -> m61_23  [color=green, key=2, style=dotted];
m61_34 -> m61_48  [color=green, key=2, style=dotted];
m61_34 -> m61_49  [color=green, key=2, style=dotted];
m61_34 -> m61_39  [key=2, style=dotted];
m61_30 -> m61_34  [color=green, key=1, label=jobId, style=dashed];
m61_30 -> m61_31  [key=0, style=solid];
m61_30 -> m61_44  [key=2, style=dotted];
m61_30 -> m61_37  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m61_33 -> m61_34  [color=green, key=0, style=solid];
m61_33 -> m61_46  [key=2, style=dotted];
m61_33 -> m61_38  [key=2, style=dotted];
m61_35 -> m61_36  [key=0, style=solid];
m61_35 -> m61_39  [key=0, style=solid];
m61_35 -> m61_26  [key=2, style=dotted];
m61_38 -> m61_39  [color=green, key=0, style=solid];
m61_38 -> m61_52  [color=green, key=2, style=dotted];
m61_36 -> m61_38  [color=green, key=1, label=transaction, style=dashed];
m61_36 -> m61_37  [key=0, style=solid];
m61_36 -> m61_50  [key=2, style=dotted];
m61_36 -> m61_30  [color=blue, key=0, style=bold];
m61_37 -> m61_38  [color=green, key=0, style=solid];
m61_37 -> m61_51  [key=2, style=dotted];
m61_39 -> m61_40  [key=0, style=solid];
m61_32 -> m61_40  [key=0, style=solid];
m61_32 -> m61_33  [key=0, style=solid];
m61_32 -> m61_22  [key=2, style=dotted];
m61_31 -> m61_33  [key=0, style=solid];
m61_31 -> m61_32  [key=0, style=solid];
m61_31 -> m61_45  [key=2, style=dotted];
m61_31 -> m61_37  [key=2, style=dotted];
m61_40 -> m61_20  [color=blue, key=0, style=bold];
m61_40 -> m61_41  [key=0, style=solid];
m61_0 -> m61_1  [key=0, style=solid];
m61_0 -> m61_16  [color=red, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m61_1 -> m61_2  [key=0, style=solid];
m61_1 -> m61_5  [key=2, style=dotted];
m61_2 -> m61_3  [key=0, style=solid];
m61_2 -> m61_6  [key=2, style=dotted];
m61_2 -> m61_7  [key=2, style=dotted];
m61_3 -> m61_4  [key=0, style=solid];
m61_3 -> m61_8  [key=2, style=dotted];
m61_4 -> m61_0  [color=blue, key=0, style=bold];
m61_4 -> m61_7  [color=green, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m61_4 -> m61_8  [color=green, key=1, label="System.TimeSpan", style=dashed];
m61_4 -> m61_5  [key=0, style=solid];
m61_48 -> m61_49  [key=0, style=solid];
m61_48 -> m61_26  [key=2, style=dotted];
m61_5 -> m61_7  [color=green, key=0, style=solid];
m61_5 -> m61_6  [key=0, style=solid];
m61_44 -> m61_45  [key=0, style=solid];
m61_44 -> m61_50  [key=2, style=dotted];
m61_44 -> m61_46  [color=darkseagreen4, key=1, label=table1, style=dashed];
m61_44 -> m61_47  [color=darkseagreen4, key=1, label=table1, style=dashed];
m61_45 -> m61_46  [key=0, style=solid];
m61_45 -> m61_51  [key=2, style=dotted];
m61_49 -> m61_40  [color=blue, key=0, style=bold];
m61_13 -> m61_14  [key=0, style=solid];
m61_13 -> m61_16  [key=0, style=solid];
m61_13 -> m61_20  [key=2, style=dotted];
m61_7 -> m61_8  [color=green, key=0, style=solid];
m61_14 -> m61_15  [color=red, key=0, style=solid];
m61_14 -> m61_17  [color=green, key=1, label=jobsEnqueued, style=dashed];
m61_14 -> m61_14  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m61_14 -> m61_16  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m61_15 -> m61_16  [color=red, key=0, style=solid];
m61_15 -> m61_17  [color=red, key=0, style=solid];
m61_15 -> m61_13  [key=0, style=solid];
m61_16 -> m61_17  [color=green, key=0, style=solid];
m61_16 -> m61_0  [color=red, key=2, style=dotted];
m61_16 -> m61_18  [key=0, style=solid];
m61_17 -> m61_14  [color=blue, key=0, style=bold];
m61_17 -> m61_18  [color=green, key=0, style=solid];
m61_17 -> m61_21  [color=green, key=2, style=dotted];
m61_73 -> m61_74  [key=0, style=solid];
m61_74 -> m61_75  [key=0, style=solid];
m61_74 -> m61_37  [key=2, style=dotted];
m61_75 -> m61_76  [key=0, style=solid];
m61_75 -> m61_22  [key=2, style=dotted];
m61_76 -> m61_77  [key=0, style=solid];
m61_76 -> m61_38  [key=2, style=dotted];
m61_77 -> m61_78  [key=0, style=solid];
m61_77 -> m61_39  [key=2, style=dotted];
m61_78 -> m61_79  [key=0, style=solid];
m61_78 -> m61_26  [key=2, style=dotted];
m61_79 -> m61_73  [color=blue, key=0, style=bold];
m61_6 -> m61_9  [key=0, style=solid];
m61_6 -> m61_10  [key=2, style=dotted];
m61_9 -> m61_10  [key=0, style=solid];
m61_9 -> m61_4  [color=blue, key=0, style=bold];
m61_11 -> m61_12  [key=0, style=solid];
m61_11 -> m61_18  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m61_11 -> m61_13  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m61_11 -> m61_15  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m61_12 -> m61_9  [color=blue, key=0, style=bold];
m61_12 -> m61_17  [color=green, key=1, label=jobsEnqueued, style=dashed];
m61_12 -> m61_12  [color=darkorchid, key=3, label="Local variable int jobsEnqueued", style=bold];
m61_12 -> m61_13  [key=0, style=solid];
m61_12 -> m61_14  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m61_12 -> m61_16  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m61_8 -> m61_9  [color=green, key=0, style=solid];
m61_80 -> m61_32  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_35  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_42  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_48  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_54  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_57  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_64  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_68  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_71  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_75  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m61_80 -> m61_78  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerFeature", style=dashed];
m62_0 -> m62_1  [color=green, key=0, style=solid];
m62_0 -> m62_3  [color=green, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m62_0 -> m62_5  [color=green, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m62_0 -> m62_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m62_0 -> m62_8  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m62_0 -> m62_9  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, object>", style=dashed];
m62_0 -> m62_10  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m62_1 -> m62_2  [color=green, key=0, style=solid];
m62_1 -> m62_3  [color=green, key=0, style=solid];
m62_2 -> m62_11  [color=green, key=0, style=solid];
m62_2 -> m62_12  [color=green, key=2, style=dotted];
m62_3 -> m62_4  [color=green, key=0, style=solid];
m62_3 -> m62_5  [color=green, key=0, style=solid];
m62_4 -> m62_11  [color=green, key=0, style=solid];
m62_4 -> m62_12  [color=green, key=2, style=dotted];
m62_5 -> m62_6  [color=green, key=0, style=solid];
m62_5 -> m62_7  [color=green, key=0, style=solid];
m62_6 -> m62_11  [color=green, key=0, style=solid];
m62_6 -> m62_12  [color=green, key=2, style=dotted];
m62_7 -> m62_8  [key=0, style=solid];
m62_8 -> m62_9  [key=0, style=solid];
m62_9 -> m62_10  [key=0, style=solid];
m62_10 -> m62_11  [key=0, style=solid];
m62_11 -> m62_0  [color=blue, key=0, style=bold];
m62_13 -> m62_7  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m62_13 -> m62_8  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m62_13 -> m62_9  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m62_13 -> m62_10  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.RequestDispatcherContext", style=dashed];
m63_44 -> m63_45  [key=0, style=solid];
m63_44 -> m63_5  [key=2, style=dotted];
m63_43 -> m63_44  [key=0, style=solid];
m63_43 -> m63_29  [key=2, style=dotted];
m63_46 -> m63_47  [key=0, style=solid];
m63_47 -> m63_48  [color=red, key=0, style=solid];
m63_47 -> m63_15  [key=2, style=dotted];
m63_47 -> m63_50  [key=2, style=dotted];
m63_48 -> m63_49  [color=red, key=0, style=solid];
m63_48 -> m63_51  [color=red, key=2, style=dotted];
m63_49 -> m63_46  [color=blue, key=0, style=bold];
m63_42 -> m63_43  [key=0, style=solid];
m63_35 -> m63_39  [key=0, style=solid];
m63_35 -> m63_32  [color=darkorchid, key=3, label="Parameter variable int workers", style=bold];
m63_35 -> m63_36  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m63_35 -> m63_30  [color=darkorchid, key=3, label="Parameter variable int workers", style=bold];
m63_35 -> m63_46  [color=green, key=2, style=dotted];
m63_35 -> m63_47  [color=green, key=2, style=dotted];
m63_35 -> m63_25  [color=green, key=2, style=dotted];
m63_35 -> m63_15  [color=green, key=2, style=dotted];
m63_35 -> m63_49  [color=green, key=2, style=dotted];
m63_39 -> m63_40  [key=0, style=solid];
m63_39 -> m63_41  [key=2, style=dotted];
m63_39 -> m63_52  [key=2, style=dotted];
m63_40 -> m63_35  [color=blue, key=0, style=bold];
m63_40 -> m63_41  [key=0, style=solid];
m63_20 -> m63_21  [key=0, style=solid];
m63_20 -> m63_24  [key=2, style=dotted];
m63_21 -> m63_22  [key=0, style=solid];
m63_21 -> m63_15  [key=2, style=dotted];
m63_21 -> m63_10  [key=2, style=dotted];
m63_21 -> m63_11  [color=blue, key=0, style=bold];
m63_22 -> m63_20  [color=blue, key=0, style=bold];
m63_22 -> m63_35  [color=green, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m63_22 -> m63_29  [key=0, style=solid];
m63_5 -> m63_6  [color=green, key=0, style=solid];
m63_5 -> m63_7  [color=green, key=0, style=solid];
m63_29 -> m63_30  [key=0, style=solid];
m63_29 -> m63_42  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m63_29 -> m63_35  [color=green, key=1, label=connection, style=dashed];
m63_29 -> m63_32  [color=green, key=1, label=connection, style=dashed];
m63_29 -> m63_37  [color=darkseagreen4, key=1, label=connection, style=dashed];
m63_30 -> m63_31  [key=0, style=solid];
m63_30 -> m63_32  [key=2, style=dotted];
m63_30 -> m63_43  [key=2, style=dotted];
m63_31 -> m63_29  [color=blue, key=0, style=bold];
m63_31 -> m63_32  [color=green, key=0, style=solid];
m63_31 -> m63_44  [key=2, style=dotted];
m63_6 -> m63_7  [key=0, style=solid];
m63_6 -> m63_9  [color=green, key=0, style=solid];
m63_6 -> m63_10  [color=green, key=2, style=dotted];
m63_7 -> m63_8  [key=0, style=solid];
m63_7 -> m63_10  [key=2, style=dotted];
m63_8 -> m63_9  [key=0, style=solid];
m63_8 -> m63_10  [key=2, style=dotted];
m63_9 -> m63_6  [color=blue, key=0, style=bold];
m63_9 -> m63_4  [color=blue, key=0, style=bold];
m63_32 -> m63_35  [color=green, key=1, label=jobId, style=dashed];
m63_32 -> m63_33  [color=green, key=0, style=solid];
m63_32 -> m63_45  [color=green, key=2, style=dotted];
m63_32 -> m63_38  [color=green, key=1, label=jobId, style=dashed];
m63_32 -> m63_29  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m63_32 -> m63_30  [color=darkorchid, key=3, label="Parameter variable int workers", style=bold];
m63_33 -> m63_35  [color=green, key=0, style=solid];
m63_33 -> m63_34  [color=green, key=0, style=solid];
m63_36 -> m63_37  [key=0, style=solid];
m63_36 -> m63_40  [key=0, style=solid];
m63_38 -> m63_39  [key=0, style=solid];
m63_38 -> m63_51  [key=2, style=dotted];
m63_38 -> m63_36  [color=blue, key=0, style=bold];
m63_34 -> m63_41  [key=0, style=solid];
m63_34 -> m63_32  [color=blue, key=0, style=bold];
m63_37 -> m63_38  [key=0, style=solid];
m63_37 -> m63_50  [key=2, style=dotted];
m63_37 -> m63_39  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m63_37 -> m63_35  [key=2, style=dotted];
m63_41 -> m63_22  [color=blue, key=0, style=bold];
m63_27 -> m63_25  [color=blue, key=0, style=bold];
m63_15 -> m63_18  [color=green, key=0, style=solid];
m63_15 -> m63_16  [key=0, style=solid];
m63_15 -> m63_22  [key=2, style=dotted];
m63_60 -> m63_61  [key=0, style=solid];
m63_60 -> m63_62  [color=red, key=1, label=string, style=dashed];
m63_61 -> m63_62  [color=red, key=0, style=solid];
m63_61 -> m63_64  [key=2, style=dotted];
m63_62 -> m63_63  [color=red, key=0, style=solid];
m63_62 -> m63_65  [color=red, key=2, style=dotted];
m63_62 -> m63_66  [color=red, key=2, style=dotted];
m63_63 -> m63_60  [color=blue, key=0, style=bold];
m63_52 -> m63_53  [key=0, style=solid];
m63_53 -> m63_54  [key=0, style=solid];
m63_53 -> m63_55  [key=2, style=dotted];
m63_53 -> m63_35  [color=green, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m63_53 -> m63_7  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m63_53 -> m63_15  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m63_53 -> m63_20  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m63_53 -> m63_8  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m63_53 -> m63_26  [color=darkseagreen4, key=1, label="Hangfire.Server.DelayedJobScheduler", style=dashed];
m63_54 -> m63_52  [color=blue, key=0, style=bold];
m63_78 -> m63_79  [key=0, style=solid];
m63_78 -> m63_81  [color=red, key=1, label=string, style=dashed];
m63_78 -> m63_82  [color=red, key=1, label=string, style=dashed];
m63_79 -> m63_80  [color=red, key=0, style=solid];
m63_79 -> m63_15  [key=2, style=dotted];
m63_79 -> m63_50  [key=2, style=dotted];
m63_79 -> m63_81  [color=red, key=1, label=registeredQueues, style=dashed];
m63_79 -> m63_82  [color=red, key=1, label=registeredQueues, style=dashed];
m63_81 -> m63_82  [color=red, key=0, style=solid];
m63_81 -> m63_84  [color=red, key=2, style=dotted];
m63_82 -> m63_83  [color=red, key=0, style=solid];
m63_82 -> m63_84  [color=red, key=2, style=dotted];
m63_80 -> m63_81  [color=red, key=0, style=solid];
m63_80 -> m63_84  [color=red, key=2, style=dotted];
m63_83 -> m63_78  [color=blue, key=0, style=bold];
m63_24 -> m63_25  [key=0, style=solid];
m63_24 -> m63_27  [key=2, style=dotted];
m63_45 -> m63_42  [color=blue, key=0, style=bold];
m63_25 -> m63_26  [key=0, style=solid];
m63_25 -> m63_15  [key=2, style=dotted];
m63_25 -> m63_28  [key=2, style=dotted];
m63_26 -> m63_27  [key=0, style=solid];
m63_26 -> m63_28  [key=2, style=dotted];
m63_26 -> m63_23  [color=blue, key=0, style=bold];
m63_55 -> m63_56  [key=0, style=solid];
m63_55 -> m63_57  [color=red, key=1, label=string, style=dashed];
m63_55 -> m63_53  [color=darkorchid, key=3, label="Parameter variable string jobId", style=bold];
m63_56 -> m63_57  [color=red, key=0, style=solid];
m63_56 -> m63_15  [key=2, style=dotted];
m63_56 -> m63_50  [key=2, style=dotted];
m63_57 -> m63_58  [color=red, key=0, style=solid];
m63_57 -> m63_59  [color=red, key=2, style=dotted];
m63_58 -> m63_55  [color=blue, key=0, style=bold];
m63_0 -> m63_1  [key=0, style=solid];
m63_1 -> m63_2  [key=0, style=solid];
m63_1 -> m63_4  [key=0, style=solid];
m63_2 -> m63_3  [key=0, style=solid];
m63_2 -> m63_5  [key=2, style=dotted];
m63_3 -> m63_4  [key=0, style=solid];
m63_4 -> m63_0  [color=blue, key=0, style=bold];
m63_4 -> m63_5  [color=green, key=0, style=solid];
m63_4 -> m63_7  [color=darkseagreen4, key=1, label="Hangfire.States.IBackgroundJobStateChanger", style=dashed];
m63_4 -> m63_8  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m63_16 -> m63_17  [key=0, style=solid];
m63_16 -> m63_18  [color=green, key=1, label=jobsEnqueued, style=dashed];
m63_16 -> m63_16  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m63_16 -> m63_19  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m63_17 -> m63_18  [color=green, key=0, style=solid];
m63_17 -> m63_10  [key=2, style=dotted];
m63_17 -> m63_15  [key=0, style=solid];
m63_18 -> m63_19  [color=green, key=0, style=solid];
m63_18 -> m63_15  [key=2, style=dotted];
m63_18 -> m63_10  [key=2, style=dotted];
m63_18 -> m63_20  [color=green, key=0, style=solid];
m63_19 -> m63_16  [color=blue, key=0, style=bold];
m63_19 -> m63_20  [key=0, style=solid];
m63_19 -> m63_23  [key=2, style=dotted];
m63_72 -> m63_73  [key=0, style=solid];
m63_72 -> m63_74  [color=red, key=1, label=Table, style=dashed];
m63_73 -> m63_74  [color=red, key=0, style=solid];
m63_73 -> m63_15  [key=2, style=dotted];
m63_73 -> m63_76  [key=2, style=dotted];
m63_74 -> m63_75  [color=red, key=0, style=solid];
m63_74 -> m63_77  [color=red, key=2, style=dotted];
m63_75 -> m63_72  [color=blue, key=0, style=bold];
m63_23 -> m63_24  [key=0, style=solid];
m63_23 -> m63_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m63_91 -> m63_89  [color=blue, key=0, style=bold];
m63_89 -> m63_90  [color=red, key=0, style=solid];
m63_90 -> m63_91  [color=red, key=0, style=solid];
m63_90 -> m63_15  [color=red, key=2, style=dotted];
m63_90 -> m63_88  [color=red, key=2, style=dotted];
m63_90 -> m63_71  [color=red, key=2, style=dotted];
m63_11 -> m63_12  [key=0, style=solid];
m63_11 -> m63_15  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m63_11 -> m63_17  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m63_11 -> m63_20  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m63_12 -> m63_13  [key=0, style=solid];
m63_12 -> m63_15  [key=2, style=dotted];
m63_12 -> m63_10  [key=2, style=dotted];
m63_12 -> m63_14  [key=0, style=solid];
m63_13 -> m63_14  [key=0, style=solid];
m63_13 -> m63_10  [key=2, style=dotted];
m63_13 -> m63_21  [key=0, style=solid];
m63_14 -> m63_11  [color=blue, key=0, style=bold];
m63_14 -> m63_18  [color=green, key=1, label=jobsEnqueued, style=dashed];
m63_14 -> m63_15  [key=0, style=solid];
m63_14 -> m63_16  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m63_14 -> m63_19  [color=darkseagreen4, key=1, label=jobsEnqueued, style=dashed];
m63_87 -> m63_85  [color=blue, key=0, style=bold];
m63_85 -> m63_86  [color=red, key=0, style=solid];
m63_86 -> m63_87  [color=red, key=0, style=solid];
m63_86 -> m63_15  [color=red, key=2, style=dotted];
m63_86 -> m63_88  [color=red, key=2, style=dotted];
m63_86 -> m63_71  [color=red, key=2, style=dotted];
m63_67 -> m63_68  [key=0, style=solid];
m63_67 -> m63_69  [color=red, key=1, label=string, style=dashed];
m63_68 -> m63_69  [color=red, key=0, style=solid];
m63_68 -> m63_64  [key=2, style=dotted];
m63_69 -> m63_70  [color=red, key=0, style=solid];
m63_69 -> m63_65  [color=red, key=2, style=dotted];
m63_69 -> m63_71  [color=red, key=2, style=dotted];
m63_70 -> m63_67  [color=blue, key=0, style=bold];
m63_92 -> m63_1  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_2  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_3  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_30  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_33  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_39  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_43  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_44  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_53  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m63_92 -> m63_68  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerSteps", style=dashed];
m64_60 -> m64_64  [color=green, key=1, label=string, style=dashed];
m64_60 -> m64_61  [key=0, style=solid];
m64_64 -> m64_64  [color=green, key=1, label=string, style=dashed];
m64_64 -> m64_65  [color=green, key=0, style=solid];
m64_64 -> m64_69  [color=green, key=2, style=dotted];
m64_64 -> m64_70  [color=green, key=1, label="lambda expression", style=dashed];
m64_64 -> m64_72  [color=green, key=1, label=genericArguments, style=dashed];
m64_64 -> m64_73  [color=green, key=1, label=genericArguments, style=dashed];
m64_61 -> m64_64  [color=green, key=1, label=genericArguments, style=dashed];
m64_61 -> m64_5  [key=2, style=dotted];
m64_61 -> m64_62  [key=0, style=solid];
m64_61 -> m64_67  [key=2, style=dotted];
m64_63 -> m64_64  [color=green, key=0, style=solid];
m64_63 -> m64_68  [key=2, style=dotted];
m64_65 -> m64_66  [key=0, style=solid];
m64_62 -> m64_63  [key=0, style=solid];
m64_66 -> m64_60  [color=blue, key=0, style=bold];
m64_0 -> m64_1  [color=green, key=0, style=solid];
m64_0 -> m64_2  [color=green, key=1, label="System.Type", style=dashed];
m64_0 -> m64_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m64_1 -> m64_2  [color=green, key=0, style=solid];
m64_1 -> m64_3  [color=green, key=0, style=solid];
m64_1 -> m64_5  [color=green, key=2, style=dotted];
m64_2 -> m64_4  [color=green, key=0, style=solid];
m64_2 -> m64_6  [color=green, key=2, style=dotted];
m64_2 -> m64_7  [color=green, key=2, style=dotted];
m64_3 -> m64_4  [key=0, style=solid];
m64_3 -> m64_8  [key=2, style=dotted];
m64_3 -> m64_6  [key=2, style=dotted];
m64_3 -> m64_7  [key=2, style=dotted];
m64_3 -> m64_9  [key=2, style=dotted];
m64_4 -> m64_0  [color=blue, key=0, style=bold];
m64_10 -> m64_24  [color=darkseagreen4, key=1, label="System.Type[]", style=dashed];
m64_10 -> m64_12  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m64_10 -> m64_13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m64_10 -> m64_11  [key=0, style=solid];
m64_10 -> m64_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m64_10 -> m64_17  [color=darkseagreen4, key=1, label="System.Type[]", style=dashed];
m64_26 -> m64_21  [color=green, key=0, style=solid];
m64_26 -> m64_41  [color=green, key=2, style=dotted];
m64_24 -> m64_26  [color=green, key=1, label=actualType, style=dashed];
m64_24 -> m64_27  [color=green, key=1, label=actualType, style=dashed];
m64_24 -> m64_25  [key=0, style=solid];
m64_19 -> m64_26  [color=green, key=1, label=genericArguments, style=dashed];
m64_19 -> m64_20  [key=0, style=solid];
m64_19 -> m64_40  [key=2, style=dotted];
m64_19 -> m64_31  [color=darkseagreen4, key=1, label=genericArguments, style=dashed];
m64_25 -> m64_26  [color=green, key=0, style=solid];
m64_25 -> m64_27  [color=green, key=0, style=solid];
m64_21 -> m64_22  [key=0, style=solid];
m64_21 -> m64_30  [key=0, style=solid];
m64_27 -> m64_28  [color=green, key=0, style=solid];
m64_27 -> m64_21  [color=green, key=0, style=solid];
m64_27 -> m64_5  [color=green, key=2, style=dotted];
m64_27 -> m64_42  [color=green, key=2, style=dotted];
m64_23 -> m64_27  [color=green, key=1, label=parameterType, style=dashed];
m64_23 -> m64_24  [key=0, style=solid];
m64_23 -> m64_25  [color=darkseagreen4, key=1, label=parameterType, style=dashed];
m64_28 -> m64_30  [color=green, key=0, style=solid];
m64_30 -> m64_31  [key=0, style=solid];
m64_30 -> m64_14  [key=0, style=solid];
m64_12 -> m64_5  [key=2, style=dotted];
m64_12 -> m64_13  [key=0, style=solid];
m64_12 -> m64_14  [key=0, style=solid];
m64_13 -> m64_5  [key=2, style=dotted];
m64_13 -> m64_14  [key=0, style=solid];
m64_13 -> m64_36  [key=2, style=dotted];
m64_13 -> m64_37  [key=2, style=dotted];
m64_13 -> m64_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m64_20 -> m64_24  [color=darkseagreen4, key=1, label=i, style=dashed];
m64_20 -> m64_21  [key=0, style=solid];
m64_20 -> m64_22  [color=darkseagreen4, key=1, label=i, style=dashed];
m64_20 -> m64_29  [color=darkseagreen4, key=1, label=i, style=dashed];
m64_18 -> m64_19  [key=0, style=solid];
m64_18 -> m64_30  [color=darkseagreen4, key=1, label=parameterTypesMatched, style=dashed];
m64_31 -> m64_33  [key=0, style=solid];
m64_31 -> m64_43  [key=2, style=dotted];
m64_31 -> m64_44  [key=2, style=dotted];
m64_16 -> m64_21  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m64_16 -> m64_17  [key=0, style=solid];
m64_16 -> m64_39  [key=2, style=dotted];
m64_16 -> m64_22  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m64_29 -> m64_21  [key=0, style=solid];
m64_29 -> m64_29  [color=darkseagreen4, key=1, label=i, style=dashed];
m64_22 -> m64_23  [key=0, style=solid];
m64_14 -> m64_31  [color=darkseagreen4, key=1, label=methodCandidate, style=dashed];
m64_14 -> m64_16  [color=darkseagreen4, key=1, label=methodCandidate, style=dashed];
m64_14 -> m64_15  [key=0, style=solid];
m64_14 -> m64_32  [key=0, style=solid];
m64_11 -> m64_12  [key=0, style=solid];
m64_11 -> m64_13  [color=darkseagreen4, key=1, label=methodCandidates, style=dashed];
m64_11 -> m64_14  [color=darkseagreen4, key=1, label=methodCandidates, style=dashed];
m64_11 -> m64_34  [key=2, style=dotted];
m64_11 -> m64_35  [key=2, style=dotted];
m64_15 -> m64_16  [key=0, style=solid];
m64_15 -> m64_14  [key=0, style=solid];
m64_15 -> m64_38  [key=2, style=dotted];
m64_17 -> m64_18  [key=0, style=solid];
m64_17 -> m64_14  [key=0, style=solid];
m64_32 -> m64_33  [key=0, style=solid];
m64_33 -> m64_10  [color=blue, key=0, style=bold];
m64_45 -> m64_46  [key=0, style=solid];
m64_70 -> m64_71  [key=0, style=solid];
m64_72 -> m64_73  [color=green, key=0, style=solid];
m64_72 -> m64_77  [color=green, key=2, style=dotted];
m64_72 -> m64_78  [color=green, key=2, style=dotted];
m64_72 -> m64_79  [color=green, key=2, style=dotted];
m64_72 -> m64_74  [color=green, key=1, label=currentArguments, style=dashed];
m64_73 -> m64_73  [color=green, key=1, label=genericArguments, style=dashed];
m64_73 -> m64_74  [color=green, key=0, style=solid];
m64_73 -> m64_80  [color=green, key=2, style=dotted];
m64_73 -> m64_81  [color=green, key=2, style=dotted];
m64_71 -> m64_72  [color=green, key=0, style=solid];
m64_71 -> m64_73  [color=green, key=1, label=currentGenericArgumentNumbers, style=dashed];
m64_71 -> m64_55  [key=2, style=dotted];
m64_71 -> m64_76  [key=2, style=dotted];
m64_74 -> m64_75  [color=green, key=0, style=solid];
m64_74 -> m64_82  [color=green, key=2, style=dotted];
m64_75 -> m64_70  [color=blue, key=0, style=bold];
m64_46 -> m64_35  [key=2, style=dotted];
m64_46 -> m64_47  [key=0, style=solid];
m64_47 -> m64_45  [color=blue, key=0, style=bold];
m64_48 -> m64_52  [color=green, key=1, label="System.Type", style=dashed];
m64_48 -> m64_49  [key=0, style=solid];
m64_48 -> m64_50  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m64_52 -> m64_53  [color=green, key=0, style=solid];
m64_52 -> m64_54  [color=green, key=2, style=dotted];
m64_52 -> m64_55  [color=green, key=2, style=dotted];
m64_51 -> m64_52  [color=green, key=0, style=solid];
m64_49 -> m64_51  [key=0, style=solid];
m64_49 -> m64_50  [key=0, style=solid];
m64_50 -> m64_53  [key=0, style=solid];
m64_53 -> m64_48  [color=blue, key=0, style=bold];
m64_86 -> m64_72  [color=green, key=1, label=genericArguments, style=dashed];
m64_86 -> m64_73  [color=green, key=1, label=genericArguments, style=dashed];
m65_622 -> m65_623  [key=0, style=solid];
m65_623 -> m65_624  [key=0, style=solid];
m65_623 -> m65_66  [key=2, style=dotted];
m65_623 -> m65_625  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_624 -> m65_622  [color=blue, key=0, style=bold];
m65_810 -> m65_811  [key=0, style=solid];
m65_811 -> m65_812  [key=0, style=solid];
m65_811 -> m65_815  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_812 -> m65_813  [key=0, style=solid];
m65_812 -> m65_125  [key=2, style=dotted];
m65_812 -> m65_814  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_813 -> m65_810  [color=blue, key=0, style=bold];
m65_478 -> m65_479  [key=0, style=solid];
m65_479 -> m65_480  [key=0, style=solid];
m65_479 -> m65_66  [key=2, style=dotted];
m65_479 -> m65_481  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_480 -> m65_478  [color=blue, key=0, style=bold];
m65_364 -> m65_365  [key=0, style=solid];
m65_365 -> m65_366  [key=0, style=solid];
m65_365 -> m65_66  [key=2, style=dotted];
m65_365 -> m65_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_366 -> m65_364  [color=blue, key=0, style=bold];
m65_739 -> m65_740  [key=0, style=solid];
m65_740 -> m65_741  [key=0, style=solid];
m65_740 -> m65_66  [key=2, style=dotted];
m65_740 -> m65_742  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_741 -> m65_739  [color=blue, key=0, style=bold];
m65_667 -> m65_668  [key=0, style=solid];
m65_668 -> m65_669  [key=0, style=solid];
m65_668 -> m65_672  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_669 -> m65_670  [key=0, style=solid];
m65_669 -> m65_125  [key=2, style=dotted];
m65_669 -> m65_671  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_670 -> m65_667  [color=blue, key=0, style=bold];
m65_864 -> m65_865  [key=0, style=solid];
m65_865 -> m65_866  [key=0, style=solid];
m65_865 -> m65_869  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_866 -> m65_867  [key=0, style=solid];
m65_866 -> m65_125  [key=2, style=dotted];
m65_866 -> m65_868  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_867 -> m65_864  [color=blue, key=0, style=bold];
m65_271 -> m65_272  [key=0, style=solid];
m65_272 -> m65_273  [key=0, style=solid];
m65_272 -> m65_66  [key=2, style=dotted];
m65_272 -> m65_274  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_273 -> m65_271  [color=blue, key=0, style=bold];
m65_343 -> m65_344  [key=0, style=solid];
m65_344 -> m65_345  [key=0, style=solid];
m65_344 -> m65_348  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_345 -> m65_346  [key=0, style=solid];
m65_345 -> m65_125  [key=2, style=dotted];
m65_345 -> m65_347  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_346 -> m65_343  [color=blue, key=0, style=bold];
m65_22 -> m65_23  [key=0, style=solid];
m65_22 -> m65_24  [key=2, style=dotted];
m65_304 -> m65_305  [key=0, style=solid];
m65_305 -> m65_306  [key=0, style=solid];
m65_305 -> m65_309  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_306 -> m65_307  [key=0, style=solid];
m65_306 -> m65_125  [key=2, style=dotted];
m65_306 -> m65_308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_307 -> m65_304  [color=blue, key=0, style=bold];
m65_25 -> m65_26  [key=0, style=solid];
m65_25 -> m65_23  [color=blue, key=0, style=bold];
m65_26 -> m65_27  [key=0, style=solid];
m65_26 -> m65_14  [key=2, style=dotted];
m65_26 -> m65_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_27 -> m65_28  [key=0, style=solid];
m65_27 -> m65_20  [key=2, style=dotted];
m65_28 -> m65_25  [color=blue, key=0, style=bold];
m65_28 -> m65_29  [key=0, style=solid];
m65_857 -> m65_858  [key=0, style=solid];
m65_858 -> m65_859  [key=0, style=solid];
m65_858 -> m65_66  [key=2, style=dotted];
m65_858 -> m65_860  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_859 -> m65_857  [color=blue, key=0, style=bold];
m65_24 -> m65_25  [key=0, style=solid];
m65_24 -> m65_26  [key=2, style=dotted];
m65_24 -> m65_27  [key=2, style=dotted];
m65_209 -> m65_210  [key=0, style=solid];
m65_210 -> m65_211  [key=0, style=solid];
m65_210 -> m65_66  [key=2, style=dotted];
m65_210 -> m65_212  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_211 -> m65_209  [color=blue, key=0, style=bold];
m65_883 -> m65_884  [key=0, style=solid];
m65_884 -> m65_885  [key=0, style=solid];
m65_884 -> m65_66  [key=2, style=dotted];
m65_884 -> m65_886  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_885 -> m65_883  [color=blue, key=0, style=bold];
m65_47 -> m65_48  [color=red, key=0, style=solid];
m65_47 -> m65_49  [color=red, key=2, style=dotted];
m65_47 -> m65_50  [color=red, key=1, label="lambda expression", style=dashed];
m65_719 -> m65_720  [key=0, style=solid];
m65_720 -> m65_721  [key=0, style=solid];
m65_720 -> m65_724  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_721 -> m65_722  [key=0, style=solid];
m65_721 -> m65_125  [key=2, style=dotted];
m65_721 -> m65_723  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_722 -> m65_719  [color=blue, key=0, style=bold];
m65_281 -> m65_282  [key=0, style=solid];
m65_282 -> m65_283  [key=0, style=solid];
m65_282 -> m65_286  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_283 -> m65_284  [key=0, style=solid];
m65_283 -> m65_125  [key=2, style=dotted];
m65_283 -> m65_285  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_284 -> m65_281  [color=blue, key=0, style=bold];
m65_353 -> m65_354  [key=0, style=solid];
m65_354 -> m65_355  [key=0, style=solid];
m65_354 -> m65_66  [key=2, style=dotted];
m65_354 -> m65_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_355 -> m65_353  [color=blue, key=0, style=bold];
m65_16 -> m65_17  [key=0, style=solid];
m65_430 -> m65_431  [key=0, style=solid];
m65_431 -> m65_432  [key=0, style=solid];
m65_431 -> m65_66  [key=2, style=dotted];
m65_431 -> m65_433  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_432 -> m65_430  [color=blue, key=0, style=bold];
m65_772 -> m65_773  [key=0, style=solid];
m65_773 -> m65_774  [key=0, style=solid];
m65_773 -> m65_777  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_774 -> m65_775  [key=0, style=solid];
m65_774 -> m65_125  [key=2, style=dotted];
m65_774 -> m65_776  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_775 -> m65_772  [color=blue, key=0, style=bold];
m65_239 -> m65_240  [key=0, style=solid];
m65_240 -> m65_241  [key=0, style=solid];
m65_240 -> m65_245  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_241 -> m65_242  [key=0, style=solid];
m65_241 -> m65_125  [key=2, style=dotted];
m65_241 -> m65_243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_242 -> m65_239  [color=blue, key=0, style=bold];
m65_658 -> m65_659  [key=0, style=solid];
m65_659 -> m65_660  [key=0, style=solid];
m65_659 -> m65_663  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_660 -> m65_661  [key=0, style=solid];
m65_660 -> m65_125  [key=2, style=dotted];
m65_660 -> m65_662  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_661 -> m65_658  [color=blue, key=0, style=bold];
m65_847 -> m65_848  [key=0, style=solid];
m65_848 -> m65_849  [key=0, style=solid];
m65_848 -> m65_66  [key=2, style=dotted];
m65_848 -> m65_850  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_849 -> m65_847  [color=blue, key=0, style=bold];
m65_6 -> m65_7  [key=0, style=solid];
m65_6 -> m65_29  [color=darkseagreen4, key=1, label=name, style=dashed];
m65_6 -> m65_24  [color=darkseagreen4, key=1, label=name, style=dashed];
m65_33 -> m65_34  [key=0, style=solid];
m65_402 -> m65_403  [key=0, style=solid];
m65_403 -> m65_404  [key=0, style=solid];
m65_403 -> m65_66  [key=2, style=dotted];
m65_403 -> m65_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_404 -> m65_402  [color=blue, key=0, style=bold];
m65_39 -> m65_40  [color=green, key=0, style=solid];
m65_34 -> m65_35  [key=0, style=solid];
m65_34 -> m65_32  [key=2, style=dotted];
m65_34 -> m65_37  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m65_35 -> m65_36  [key=0, style=solid];
m65_35 -> m65_24  [key=2, style=dotted];
m65_37 -> m65_38  [key=0, style=solid];
m65_37 -> m65_20  [key=2, style=dotted];
m65_37 -> m65_35  [color=blue, key=0, style=bold];
m65_36 -> m65_37  [key=0, style=solid];
m65_36 -> m65_39  [key=2, style=dotted];
m65_36 -> m65_38  [key=2, style=dotted];
m65_38 -> m65_33  [color=blue, key=0, style=bold];
m65_48 -> m65_49  [key=0, style=solid];
m65_48 -> m65_50  [color=darkseagreen4, key=1, label="System.Threading.Thread", style=dashed];
m65_48 -> m65_46  [color=blue, key=0, style=bold];
m65_49 -> m65_50  [key=0, style=solid];
m65_49 -> m65_52  [key=2, style=dotted];
m65_49 -> m65_906  [key=0, style=solid];
m65_49 -> m65_907  [color=darkseagreen4, key=1, label="System.Action<Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m65_50 -> m65_51  [key=0, style=solid];
m65_50 -> m65_53  [key=2, style=dotted];
m65_51 -> m65_48  [color=blue, key=0, style=bold];
m65_51 -> m65_52  [key=0, style=solid];
m65_51 -> m65_56  [key=2, style=dotted];
m65_51 -> m65_53  [color=darkseagreen4, key=1, label=token, style=dashed];
m65_51 -> m65_54  [color=darkseagreen4, key=1, label=token, style=dashed];
m65_51 -> m65_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m65_326 -> m65_327  [key=0, style=solid];
m65_327 -> m65_328  [key=0, style=solid];
m65_327 -> m65_66  [key=2, style=dotted];
m65_327 -> m65_329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_328 -> m65_326  [color=blue, key=0, style=bold];
m65_52 -> m65_53  [key=0, style=solid];
m65_52 -> m65_54  [color=darkseagreen4, key=1, label=queues, style=dashed];
m65_52 -> m65_60  [color=darkseagreen4, key=1, label=queues, style=dashed];
m65_250 -> m65_251  [key=0, style=solid];
m65_251 -> m65_252  [key=0, style=solid];
m65_251 -> m65_255  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_252 -> m65_253  [key=0, style=solid];
m65_252 -> m65_125  [key=2, style=dotted];
m65_252 -> m65_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_253 -> m65_250  [color=blue, key=0, style=bold];
m65_890 -> m65_891  [key=0, style=solid];
m65_891 -> m65_892  [key=0, style=solid];
m65_891 -> m65_895  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_892 -> m65_893  [key=0, style=solid];
m65_892 -> m65_125  [key=2, style=dotted];
m65_892 -> m65_894  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_893 -> m65_890  [color=blue, key=0, style=bold];
m65_7 -> m65_5  [key=0, style=solid];
m65_7 -> m65_17  [key=2, style=dotted];
m65_7 -> m65_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_7 -> m65_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_566 -> m65_567  [key=0, style=solid];
m65_567 -> m65_568  [key=0, style=solid];
m65_567 -> m65_66  [key=2, style=dotted];
m65_567 -> m65_569  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_568 -> m65_566  [color=blue, key=0, style=bold];
m65_0 -> m65_1  [key=0, style=solid];
m65_1 -> m65_2  [key=0, style=solid];
m65_1 -> m65_14  [key=2, style=dotted];
m65_1 -> m65_5  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m65_1 -> m65_6  [key=2, style=dotted];
m65_4 -> m65_5  [key=0, style=solid];
m65_4 -> m65_16  [key=2, style=dotted];
m65_4 -> m65_7  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m65_4 -> m65_8  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m65_4 -> m65_10  [key=2, style=dotted];
m65_12 -> m65_12  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m65_12 -> m65_9  [key=0, style=solid];
m65_12 -> m65_22  [key=2, style=dotted];
m65_12 -> m65_13  [key=0, style=solid];
m65_12 -> m65_14  [key=2, style=dotted];
m65_12 -> m65_15  [key=2, style=dotted];
m65_2 -> m65_3  [key=0, style=solid];
m65_2 -> m65_15  [key=2, style=dotted];
m65_2 -> m65_7  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m65_2 -> m65_29  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m65_2 -> m65_9  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m65_2 -> m65_4  [color=darkseagreen4, key=1, label=provider, style=dashed];
m65_5 -> m65_6  [key=0, style=solid];
m65_5 -> m65_8  [key=0, style=solid];
m65_5 -> m65_0  [color=blue, key=0, style=bold];
m65_3 -> m65_4  [key=0, style=solid];
m65_3 -> m65_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_3 -> m65_8  [key=2, style=dotted];
m65_3 -> m65_9  [key=2, style=dotted];
m65_8 -> m65_9  [key=0, style=solid];
m65_8 -> m65_18  [key=2, style=dotted];
m65_11 -> m65_12  [key=0, style=solid];
m65_11 -> m65_9  [key=0, style=solid];
m65_11 -> m65_21  [key=2, style=dotted];
m65_10 -> m65_12  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m65_10 -> m65_11  [key=0, style=solid];
m65_10 -> m65_10  [color=darkseagreen4, key=1, label=heartbeat, style=dashed];
m65_10 -> m65_19  [key=2, style=dotted];
m65_10 -> m65_20  [key=2, style=dotted];
m65_9 -> m65_13  [key=0, style=solid];
m65_9 -> m65_10  [key=0, style=solid];
m65_13 -> m65_0  [color=blue, key=0, style=bold];
m65_13 -> m65_11  [color=blue, key=0, style=bold];
m65_511 -> m65_512  [key=0, style=solid];
m65_512 -> m65_513  [key=0, style=solid];
m65_512 -> m65_66  [key=2, style=dotted];
m65_512 -> m65_514  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_513 -> m65_511  [color=blue, key=0, style=bold];
m65_219 -> m65_220  [key=0, style=solid];
m65_220 -> m65_221  [key=0, style=solid];
m65_220 -> m65_66  [key=2, style=dotted];
m65_220 -> m65_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_221 -> m65_219  [color=blue, key=0, style=bold];
m65_576 -> m65_577  [key=0, style=solid];
m65_577 -> m65_578  [key=0, style=solid];
m65_577 -> m65_66  [key=2, style=dotted];
m65_577 -> m65_579  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_578 -> m65_576  [color=blue, key=0, style=bold];
m65_440 -> m65_441  [key=0, style=solid];
m65_441 -> m65_442  [key=0, style=solid];
m65_441 -> m65_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_442 -> m65_443  [key=0, style=solid];
m65_442 -> m65_125  [key=2, style=dotted];
m65_442 -> m65_444  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_443 -> m65_440  [color=blue, key=0, style=bold];
m65_583 -> m65_584  [key=0, style=solid];
m65_584 -> m65_585  [key=0, style=solid];
m65_584 -> m65_588  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_585 -> m65_586  [key=0, style=solid];
m65_585 -> m65_125  [key=2, style=dotted];
m65_585 -> m65_587  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_586 -> m65_583  [color=blue, key=0, style=bold];
m65_782 -> m65_783  [key=0, style=solid];
m65_783 -> m65_784  [key=0, style=solid];
m65_783 -> m65_66  [key=2, style=dotted];
m65_783 -> m65_785  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_784 -> m65_782  [color=blue, key=0, style=bold];
m65_712 -> m65_713  [key=0, style=solid];
m65_713 -> m65_714  [key=0, style=solid];
m65_713 -> m65_66  [key=2, style=dotted];
m65_713 -> m65_715  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_714 -> m65_712  [color=blue, key=0, style=bold];
m65_793 -> m65_794  [key=0, style=solid];
m65_794 -> m65_795  [key=0, style=solid];
m65_794 -> m65_66  [key=2, style=dotted];
m65_794 -> m65_796  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_795 -> m65_793  [color=blue, key=0, style=bold];
m65_21 -> m65_22  [key=0, style=solid];
m65_23 -> m65_21  [color=blue, key=0, style=bold];
m65_23 -> m65_24  [key=0, style=solid];
m65_29 -> m65_30  [key=0, style=solid];
m65_29 -> m65_31  [key=2, style=dotted];
m65_29 -> m65_32  [key=2, style=dotted];
m65_29 -> m65_33  [key=2, style=dotted];
m65_29 -> m65_34  [key=2, style=dotted];
m65_30 -> m65_31  [key=0, style=solid];
m65_30 -> m65_24  [key=2, style=dotted];
m65_30 -> m65_32  [key=2, style=dotted];
m65_30 -> m65_28  [color=blue, key=0, style=bold];
m65_31 -> m65_29  [color=blue, key=0, style=bold];
m65_53 -> m65_54  [key=0, style=solid];
m65_53 -> m65_57  [key=2, style=dotted];
m65_54 -> m65_55  [key=0, style=solid];
m65_54 -> m65_58  [key=2, style=dotted];
m65_54 -> m65_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_54 -> m65_42  [color=darkseagreen4, key=1, label="HangFire.Server.ServerWatchdog", style=dashed];
m65_54 -> m65_41  [color=darkseagreen4, key=1, label="HangFire.Server.ServerWatchdog", style=dashed];
m65_54 -> m65_1  [color=darkseagreen4, key=1, label="HangFire.Server.ServerWatchdog", style=dashed];
m65_54 -> m65_4  [color=darkseagreen4, key=1, label="HangFire.Server.ServerWatchdog", style=dashed];
m65_54 -> m65_12  [color=darkseagreen4, key=1, label="HangFire.Server.ServerWatchdog", style=dashed];
m65_54 -> m65_36  [color=darkseagreen4, key=1, label="HangFire.Server.ServerWatchdog", style=dashed];
m65_54 -> m65_44  [color=darkseagreen4, key=1, label="HangFire.Server.ServerWatchdog", style=dashed];
m65_54 -> m65_49  [color=darkseagreen4, key=1, label="HangFire.Server.ServerWatchdog", style=dashed];
m65_60 -> m65_61  [key=0, style=solid];
m65_60 -> m65_62  [key=2, style=dotted];
m65_55 -> m65_50  [color=blue, key=0, style=bold];
m65_55 -> m65_29  [color=darkseagreen4, key=1, label=name, style=dashed];
m65_55 -> m65_24  [color=darkseagreen4, key=1, label=name, style=dashed];
m65_59 -> m65_60  [key=0, style=solid];
m65_61 -> m65_59  [color=blue, key=0, style=bold];
m65_67 -> m65_68  [key=0, style=solid];
m65_67 -> m65_71  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_67 -> m65_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_68 -> m65_69  [key=0, style=solid];
m65_68 -> m65_56  [key=2, style=dotted];
m65_68 -> m65_71  [color=darkseagreen4, key=1, label=token, style=dashed];
m65_68 -> m65_75  [color=darkseagreen4, key=1, label=token, style=dashed];
m65_71 -> m65_72  [key=0, style=solid];
m65_71 -> m65_14  [key=2, style=dotted];
m65_71 -> m65_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_75 -> m65_76  [key=0, style=solid];
m65_75 -> m65_57  [key=2, style=dotted];
m65_69 -> m65_70  [key=0, style=solid];
m65_69 -> m65_7  [key=2, style=dotted];
m65_70 -> m65_71  [key=0, style=solid];
m65_70 -> m65_73  [key=2, style=dotted];
m65_72 -> m65_67  [color=blue, key=0, style=bold];
m65_74 -> m65_75  [key=0, style=solid];
m65_76 -> m65_74  [color=blue, key=0, style=bold];
m65_80 -> m65_81  [key=0, style=solid];
m65_81 -> m65_82  [key=0, style=solid];
m65_81 -> m65_84  [key=2, style=dotted];
m65_82 -> m65_83  [key=0, style=solid];
m65_82 -> m65_85  [key=2, style=dotted];
m65_83 -> m65_80  [color=blue, key=0, style=bold];
m65_89 -> m65_90  [key=0, style=solid];
m65_90 -> m65_91  [key=0, style=solid];
m65_90 -> m65_93  [key=2, style=dotted];
m65_90 -> m65_94  [key=2, style=dotted];
m65_91 -> m65_92  [key=0, style=solid];
m65_91 -> m65_85  [key=2, style=dotted];
m65_92 -> m65_89  [color=blue, key=0, style=bold];
m65_98 -> m65_99  [key=0, style=solid];
m65_98 -> m65_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_99 -> m65_100  [key=0, style=solid];
m65_99 -> m65_14  [key=2, style=dotted];
m65_99 -> m65_102  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_103 -> m65_104  [key=0, style=solid];
m65_103 -> m65_105  [key=2, style=dotted];
m65_103 -> m65_106  [key=2, style=dotted];
m65_100 -> m65_101  [key=0, style=solid];
m65_100 -> m65_20  [key=2, style=dotted];
m65_102 -> m65_103  [key=0, style=solid];
m65_101 -> m65_98  [color=blue, key=0, style=bold];
m65_104 -> m65_102  [color=blue, key=0, style=bold];
m65_110 -> m65_111  [key=0, style=solid];
m65_110 -> m65_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_111 -> m65_112  [key=0, style=solid];
m65_111 -> m65_14  [key=2, style=dotted];
m65_111 -> m65_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_115 -> m65_116  [key=0, style=solid];
m65_115 -> m65_117  [key=2, style=dotted];
m65_115 -> m65_106  [key=2, style=dotted];
m65_115 -> m65_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_112 -> m65_113  [key=0, style=solid];
m65_112 -> m65_20  [key=2, style=dotted];
m65_114 -> m65_115  [key=0, style=solid];
m65_113 -> m65_110  [color=blue, key=0, style=bold];
m65_116 -> m65_114  [color=blue, key=0, style=bold];
m65_118 -> m65_119  [key=0, style=solid];
m65_119 -> m65_120  [key=0, style=solid];
m65_119 -> m65_121  [key=2, style=dotted];
m65_120 -> m65_118  [color=blue, key=0, style=bold];
m65_126 -> m65_127  [key=0, style=solid];
m65_126 -> m65_128  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_126 -> m65_131  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_126 -> m65_144  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_127 -> m65_128  [key=0, style=solid];
m65_127 -> m65_148  [key=2, style=dotted];
m65_127 -> m65_133  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m65_127 -> m65_142  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m65_127 -> m65_143  [color=darkseagreen4, key=1, label=createdAt, style=dashed];
m65_128 -> m65_129  [key=0, style=solid];
m65_128 -> m65_117  [key=2, style=dotted];
m65_128 -> m65_105  [key=2, style=dotted];
m65_128 -> m65_149  [key=2, style=dotted];
m65_128 -> m65_106  [key=2, style=dotted];
m65_128 -> m65_160  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_128 -> m65_130  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m65_128 -> m65_132  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m65_128 -> m65_144  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m65_131 -> m65_132  [key=0, style=solid];
m65_131 -> m65_151  [key=2, style=dotted];
m65_131 -> m65_152  [key=2, style=dotted];
m65_131 -> m65_133  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m65_131 -> m65_134  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m65_131 -> m65_135  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m65_131 -> m65_136  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m65_131 -> m65_137  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m65_131 -> m65_142  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m65_131 -> m65_143  [color=darkseagreen4, key=1, label=sqlJob, style=dashed];
m65_144 -> m65_145  [key=0, style=solid];
m65_144 -> m65_151  [key=2, style=dotted];
m65_144 -> m65_159  [key=2, style=dotted];
m65_144 -> m65_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_144 -> m65_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_144 -> m65_146  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m65_133 -> m65_134  [key=0, style=solid];
m65_133 -> m65_20  [key=2, style=dotted];
m65_142 -> m65_143  [key=0, style=solid];
m65_142 -> m65_156  [key=2, style=dotted];
m65_142 -> m65_157  [key=2, style=dotted];
m65_142 -> m65_158  [key=2, style=dotted];
m65_143 -> m65_144  [key=0, style=solid];
m65_143 -> m65_156  [key=2, style=dotted];
m65_143 -> m65_157  [key=2, style=dotted];
m65_143 -> m65_158  [key=2, style=dotted];
m65_129 -> m65_130  [key=0, style=solid];
m65_129 -> m65_85  [key=2, style=dotted];
m65_160 -> m65_161  [key=0, style=solid];
m65_130 -> m65_131  [key=0, style=solid];
m65_130 -> m65_150  [key=2, style=dotted];
m65_132 -> m65_133  [key=0, style=solid];
m65_132 -> m65_153  [key=2, style=dotted];
m65_132 -> m65_20  [key=2, style=dotted];
m65_134 -> m65_135  [key=0, style=solid];
m65_134 -> m65_20  [key=2, style=dotted];
m65_135 -> m65_136  [key=0, style=solid];
m65_135 -> m65_20  [key=2, style=dotted];
m65_136 -> m65_137  [key=0, style=solid];
m65_136 -> m65_154  [key=2, style=dotted];
m65_136 -> m65_138  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m65_137 -> m65_138  [key=0, style=solid];
m65_138 -> m65_139  [key=0, style=solid];
m65_138 -> m65_155  [key=2, style=dotted];
m65_138 -> m65_140  [color=darkseagreen4, key=1, label=job, style=dashed];
m65_138 -> m65_141  [color=darkseagreen4, key=1, label=job, style=dashed];
m65_139 -> m65_140  [key=0, style=solid];
m65_139 -> m65_20  [key=2, style=dotted];
m65_140 -> m65_141  [key=0, style=solid];
m65_140 -> m65_20  [key=2, style=dotted];
m65_141 -> m65_142  [key=0, style=solid];
m65_141 -> m65_20  [key=2, style=dotted];
m65_145 -> m65_146  [key=0, style=solid];
m65_145 -> m65_20  [key=2, style=dotted];
m65_163 -> m65_164  [key=0, style=solid];
m65_166 -> m65_167  [key=0, style=solid];
m65_146 -> m65_147  [key=0, style=solid];
m65_146 -> m65_20  [key=2, style=dotted];
m65_147 -> m65_126  [color=blue, key=0, style=bold];
m65_161 -> m65_162  [key=0, style=solid];
m65_161 -> m65_121  [key=2, style=dotted];
m65_162 -> m65_160  [color=blue, key=0, style=bold];
m65_164 -> m65_165  [key=0, style=solid];
m65_165 -> m65_163  [color=blue, key=0, style=bold];
m65_167 -> m65_168  [key=0, style=solid];
m65_168 -> m65_166  [color=blue, key=0, style=bold];
m65_172 -> m65_173  [key=0, style=solid];
m65_172 -> m65_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_173 -> m65_174  [key=0, style=solid];
m65_173 -> m65_14  [key=2, style=dotted];
m65_173 -> m65_175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_176 -> m65_177  [key=0, style=solid];
m65_176 -> m65_178  [key=2, style=dotted];
m65_174 -> m65_172  [color=blue, key=0, style=bold];
m65_175 -> m65_176  [key=0, style=solid];
m65_177 -> m65_175  [color=blue, key=0, style=bold];
m65_182 -> m65_183  [key=0, style=solid];
m65_183 -> m65_184  [key=0, style=solid];
m65_183 -> m65_178  [key=2, style=dotted];
m65_184 -> m65_185  [key=0, style=solid];
m65_184 -> m65_186  [key=2, style=dotted];
m65_185 -> m65_182  [color=blue, key=0, style=bold];
m65_193 -> m65_194  [key=0, style=solid];
m65_193 -> m65_203  [key=2, style=dotted];
m65_193 -> m65_204  [key=2, style=dotted];
m65_193 -> m65_151  [key=2, style=dotted];
m65_193 -> m65_152  [key=2, style=dotted];
m65_191 -> m65_192  [key=0, style=solid];
m65_191 -> m65_193  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_191 -> m65_194  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_192 -> m65_193  [key=0, style=solid];
m65_192 -> m65_117  [key=2, style=dotted];
m65_192 -> m65_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_194 -> m65_195  [key=0, style=solid];
m65_194 -> m65_205  [key=2, style=dotted];
m65_194 -> m65_178  [key=2, style=dotted];
m65_194 -> m65_196  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_194 -> m65_197  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_194 -> m65_198  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_194 -> m65_199  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_194 -> m65_200  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_194 -> m65_201  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_206 -> m65_207  [key=0, style=solid];
m65_195 -> m65_196  [key=0, style=solid];
m65_195 -> m65_85  [key=2, style=dotted];
m65_196 -> m65_197  [key=0, style=solid];
m65_196 -> m65_85  [key=2, style=dotted];
m65_197 -> m65_198  [key=0, style=solid];
m65_197 -> m65_20  [key=2, style=dotted];
m65_198 -> m65_199  [key=0, style=solid];
m65_198 -> m65_20  [key=2, style=dotted];
m65_199 -> m65_200  [key=0, style=solid];
m65_199 -> m65_186  [key=2, style=dotted];
m65_200 -> m65_201  [key=0, style=solid];
m65_200 -> m65_157  [key=2, style=dotted];
m65_200 -> m65_158  [key=2, style=dotted];
m65_201 -> m65_202  [key=0, style=solid];
m65_201 -> m65_157  [key=2, style=dotted];
m65_201 -> m65_158  [key=2, style=dotted];
m65_202 -> m65_191  [color=blue, key=0, style=bold];
m65_207 -> m65_208  [key=0, style=solid];
m65_207 -> m65_121  [key=2, style=dotted];
m65_208 -> m65_206  [color=blue, key=0, style=bold];
m65_212 -> m65_213  [key=0, style=solid];
m65_212 -> m65_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_213 -> m65_214  [key=0, style=solid];
m65_213 -> m65_14  [key=2, style=dotted];
m65_213 -> m65_215  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_216 -> m65_217  [key=0, style=solid];
m65_216 -> m65_218  [key=2, style=dotted];
m65_214 -> m65_212  [color=blue, key=0, style=bold];
m65_215 -> m65_216  [key=0, style=solid];
m65_217 -> m65_215  [color=blue, key=0, style=bold];
m65_222 -> m65_223  [key=0, style=solid];
m65_223 -> m65_224  [key=0, style=solid];
m65_223 -> m65_218  [key=2, style=dotted];
m65_224 -> m65_225  [key=0, style=solid];
m65_224 -> m65_186  [key=2, style=dotted];
m65_225 -> m65_222  [color=blue, key=0, style=bold];
m65_232 -> m65_233  [key=0, style=solid];
m65_232 -> m65_204  [key=2, style=dotted];
m65_232 -> m65_151  [key=2, style=dotted];
m65_232 -> m65_152  [key=2, style=dotted];
m65_230 -> m65_231  [key=0, style=solid];
m65_230 -> m65_232  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_230 -> m65_233  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_231 -> m65_232  [key=0, style=solid];
m65_231 -> m65_105  [key=2, style=dotted];
m65_233 -> m65_234  [key=0, style=solid];
m65_233 -> m65_205  [key=2, style=dotted];
m65_233 -> m65_218  [key=2, style=dotted];
m65_233 -> m65_235  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_233 -> m65_236  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_233 -> m65_237  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_234 -> m65_235  [key=0, style=solid];
m65_234 -> m65_85  [key=2, style=dotted];
m65_235 -> m65_236  [key=0, style=solid];
m65_235 -> m65_20  [key=2, style=dotted];
m65_236 -> m65_237  [key=0, style=solid];
m65_236 -> m65_20  [key=2, style=dotted];
m65_237 -> m65_238  [key=0, style=solid];
m65_237 -> m65_20  [key=2, style=dotted];
m65_238 -> m65_230  [color=blue, key=0, style=bold];
m65_245 -> m65_246  [key=0, style=solid];
m65_245 -> m65_204  [key=2, style=dotted];
m65_245 -> m65_151  [key=2, style=dotted];
m65_245 -> m65_152  [key=2, style=dotted];
m65_243 -> m65_244  [key=0, style=solid];
m65_243 -> m65_245  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_243 -> m65_246  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_244 -> m65_245  [key=0, style=solid];
m65_244 -> m65_105  [key=2, style=dotted];
m65_246 -> m65_247  [key=0, style=solid];
m65_246 -> m65_205  [key=2, style=dotted];
m65_246 -> m65_218  [key=2, style=dotted];
m65_246 -> m65_248  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_247 -> m65_248  [key=0, style=solid];
m65_247 -> m65_85  [key=2, style=dotted];
m65_248 -> m65_249  [key=0, style=solid];
m65_248 -> m65_20  [key=2, style=dotted];
m65_249 -> m65_243  [color=blue, key=0, style=bold];
m65_255 -> m65_256  [key=0, style=solid];
m65_255 -> m65_259  [key=2, style=dotted];
m65_255 -> m65_204  [key=2, style=dotted];
m65_255 -> m65_151  [key=2, style=dotted];
m65_255 -> m65_152  [key=2, style=dotted];
m65_254 -> m65_255  [key=0, style=solid];
m65_254 -> m65_256  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_256 -> m65_257  [key=0, style=solid];
m65_256 -> m65_205  [key=2, style=dotted];
m65_256 -> m65_178  [key=2, style=dotted];
m65_257 -> m65_258  [key=0, style=solid];
m65_257 -> m65_85  [key=2, style=dotted];
m65_258 -> m65_254  [color=blue, key=0, style=bold];
m65_263 -> m65_264  [key=0, style=solid];
m65_263 -> m65_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_264 -> m65_265  [key=0, style=solid];
m65_264 -> m65_14  [key=2, style=dotted];
m65_264 -> m65_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_268 -> m65_269  [key=0, style=solid];
m65_268 -> m65_270  [key=2, style=dotted];
m65_265 -> m65_266  [key=0, style=solid];
m65_265 -> m65_20  [key=2, style=dotted];
m65_267 -> m65_268  [key=0, style=solid];
m65_266 -> m65_263  [color=blue, key=0, style=bold];
m65_269 -> m65_267  [color=blue, key=0, style=bold];
m65_274 -> m65_275  [key=0, style=solid];
m65_274 -> m65_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_275 -> m65_276  [key=0, style=solid];
m65_275 -> m65_14  [key=2, style=dotted];
m65_275 -> m65_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_279 -> m65_280  [key=0, style=solid];
m65_279 -> m65_270  [key=2, style=dotted];
m65_276 -> m65_277  [key=0, style=solid];
m65_276 -> m65_20  [key=2, style=dotted];
m65_278 -> m65_279  [key=0, style=solid];
m65_277 -> m65_274  [color=blue, key=0, style=bold];
m65_280 -> m65_278  [color=blue, key=0, style=bold];
m65_286 -> m65_287  [key=0, style=solid];
m65_286 -> m65_151  [key=2, style=dotted];
m65_286 -> m65_152  [key=2, style=dotted];
m65_285 -> m65_286  [key=0, style=solid];
m65_285 -> m65_288  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_285 -> m65_289  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_288 -> m65_289  [key=0, style=solid];
m65_288 -> m65_270  [key=2, style=dotted];
m65_289 -> m65_290  [key=0, style=solid];
m65_289 -> m65_151  [key=2, style=dotted];
m65_289 -> m65_152  [key=2, style=dotted];
m65_287 -> m65_288  [key=0, style=solid];
m65_287 -> m65_153  [key=2, style=dotted];
m65_287 -> m65_289  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m65_290 -> m65_291  [key=0, style=solid];
m65_290 -> m65_20  [key=2, style=dotted];
m65_291 -> m65_285  [color=blue, key=0, style=bold];
m65_297 -> m65_298  [key=0, style=solid];
m65_297 -> m65_151  [key=2, style=dotted];
m65_297 -> m65_152  [key=2, style=dotted];
m65_296 -> m65_297  [key=0, style=solid];
m65_296 -> m65_299  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_296 -> m65_300  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_296 -> m65_301  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_299 -> m65_300  [key=0, style=solid];
m65_299 -> m65_270  [key=2, style=dotted];
m65_300 -> m65_301  [key=0, style=solid];
m65_300 -> m65_270  [key=2, style=dotted];
m65_301 -> m65_302  [key=0, style=solid];
m65_301 -> m65_151  [key=2, style=dotted];
m65_301 -> m65_152  [key=2, style=dotted];
m65_298 -> m65_299  [key=0, style=solid];
m65_298 -> m65_153  [key=2, style=dotted];
m65_298 -> m65_300  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m65_298 -> m65_301  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m65_302 -> m65_303  [key=0, style=solid];
m65_302 -> m65_20  [key=2, style=dotted];
m65_303 -> m65_296  [color=blue, key=0, style=bold];
m65_309 -> m65_310  [key=0, style=solid];
m65_309 -> m65_151  [key=2, style=dotted];
m65_309 -> m65_152  [key=2, style=dotted];
m65_308 -> m65_309  [key=0, style=solid];
m65_308 -> m65_311  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_308 -> m65_312  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_311 -> m65_312  [key=0, style=solid];
m65_311 -> m65_270  [key=2, style=dotted];
m65_312 -> m65_313  [key=0, style=solid];
m65_312 -> m65_151  [key=2, style=dotted];
m65_312 -> m65_152  [key=2, style=dotted];
m65_310 -> m65_311  [key=0, style=solid];
m65_310 -> m65_153  [key=2, style=dotted];
m65_310 -> m65_312  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m65_313 -> m65_314  [key=0, style=solid];
m65_313 -> m65_20  [key=2, style=dotted];
m65_314 -> m65_308  [color=blue, key=0, style=bold];
m65_318 -> m65_319  [key=0, style=solid];
m65_318 -> m65_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_319 -> m65_320  [key=0, style=solid];
m65_319 -> m65_14  [key=2, style=dotted];
m65_319 -> m65_322  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_323 -> m65_324  [key=0, style=solid];
m65_323 -> m65_325  [key=2, style=dotted];
m65_320 -> m65_321  [key=0, style=solid];
m65_320 -> m65_20  [key=2, style=dotted];
m65_322 -> m65_323  [key=0, style=solid];
m65_321 -> m65_318  [color=blue, key=0, style=bold];
m65_324 -> m65_322  [color=blue, key=0, style=bold];
m65_329 -> m65_330  [key=0, style=solid];
m65_329 -> m65_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_330 -> m65_331  [key=0, style=solid];
m65_330 -> m65_14  [key=2, style=dotted];
m65_330 -> m65_333  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_334 -> m65_335  [key=0, style=solid];
m65_334 -> m65_325  [key=2, style=dotted];
m65_331 -> m65_332  [key=0, style=solid];
m65_331 -> m65_20  [key=2, style=dotted];
m65_333 -> m65_334  [key=0, style=solid];
m65_332 -> m65_329  [color=blue, key=0, style=bold];
m65_335 -> m65_333  [color=blue, key=0, style=bold];
m65_339 -> m65_340  [key=0, style=solid];
m65_340 -> m65_341  [key=0, style=solid];
m65_340 -> m65_325  [key=2, style=dotted];
m65_341 -> m65_342  [key=0, style=solid];
m65_341 -> m65_186  [key=2, style=dotted];
m65_342 -> m65_339  [color=blue, key=0, style=bold];
m65_348 -> m65_349  [key=0, style=solid];
m65_348 -> m65_14  [key=2, style=dotted];
m65_348 -> m65_152  [key=2, style=dotted];
m65_347 -> m65_348  [key=0, style=solid];
m65_347 -> m65_349  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_349 -> m65_350  [key=0, style=solid];
m65_349 -> m65_153  [key=2, style=dotted];
m65_349 -> m65_352  [key=2, style=dotted];
m65_350 -> m65_351  [key=0, style=solid];
m65_350 -> m65_20  [key=2, style=dotted];
m65_351 -> m65_347  [color=blue, key=0, style=bold];
m65_356 -> m65_357  [key=0, style=solid];
m65_356 -> m65_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_357 -> m65_358  [key=0, style=solid];
m65_357 -> m65_14  [key=2, style=dotted];
m65_357 -> m65_360  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_361 -> m65_362  [key=0, style=solid];
m65_361 -> m65_363  [key=2, style=dotted];
m65_358 -> m65_359  [key=0, style=solid];
m65_358 -> m65_20  [key=2, style=dotted];
m65_360 -> m65_361  [key=0, style=solid];
m65_359 -> m65_356  [color=blue, key=0, style=bold];
m65_362 -> m65_360  [color=blue, key=0, style=bold];
m65_367 -> m65_368  [key=0, style=solid];
m65_367 -> m65_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_368 -> m65_369  [key=0, style=solid];
m65_368 -> m65_14  [key=2, style=dotted];
m65_368 -> m65_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_371 -> m65_372  [key=0, style=solid];
m65_371 -> m65_363  [key=2, style=dotted];
m65_369 -> m65_367  [color=blue, key=0, style=bold];
m65_370 -> m65_371  [key=0, style=solid];
m65_372 -> m65_370  [color=blue, key=0, style=bold];
m65_376 -> m65_377  [key=0, style=solid];
m65_377 -> m65_378  [key=0, style=solid];
m65_377 -> m65_363  [key=2, style=dotted];
m65_378 -> m65_379  [key=0, style=solid];
m65_378 -> m65_186  [key=2, style=dotted];
m65_379 -> m65_376  [color=blue, key=0, style=bold];
m65_385 -> m65_386  [key=0, style=solid];
m65_385 -> m65_389  [key=2, style=dotted];
m65_384 -> m65_385  [key=0, style=solid];
m65_384 -> m65_386  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_386 -> m65_387  [key=0, style=solid];
m65_386 -> m65_363  [key=2, style=dotted];
m65_387 -> m65_388  [key=0, style=solid];
m65_387 -> m65_20  [key=2, style=dotted];
m65_388 -> m65_384  [color=blue, key=0, style=bold];
m65_393 -> m65_394  [key=0, style=solid];
m65_393 -> m65_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_394 -> m65_395  [key=0, style=solid];
m65_394 -> m65_14  [key=2, style=dotted];
m65_394 -> m65_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_398 -> m65_399  [key=0, style=solid];
m65_398 -> m65_400  [key=2, style=dotted];
m65_398 -> m65_401  [key=2, style=dotted];
m65_395 -> m65_396  [key=0, style=solid];
m65_395 -> m65_20  [key=2, style=dotted];
m65_397 -> m65_398  [key=0, style=solid];
m65_396 -> m65_393  [color=blue, key=0, style=bold];
m65_399 -> m65_397  [color=blue, key=0, style=bold];
m65_405 -> m65_406  [key=0, style=solid];
m65_405 -> m65_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_406 -> m65_407  [key=0, style=solid];
m65_406 -> m65_14  [key=2, style=dotted];
m65_406 -> m65_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_410 -> m65_411  [key=0, style=solid];
m65_410 -> m65_401  [key=2, style=dotted];
m65_407 -> m65_408  [key=0, style=solid];
m65_407 -> m65_20  [key=2, style=dotted];
m65_409 -> m65_410  [key=0, style=solid];
m65_408 -> m65_405  [color=blue, key=0, style=bold];
m65_411 -> m65_409  [color=blue, key=0, style=bold];
m65_415 -> m65_416  [key=0, style=solid];
m65_415 -> m65_417  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_415 -> m65_418  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_415 -> m65_423  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_415 -> m65_424  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_416 -> m65_417  [key=0, style=solid];
m65_416 -> m65_400  [key=2, style=dotted];
m65_417 -> m65_418  [key=0, style=solid];
m65_417 -> m65_401  [key=2, style=dotted];
m65_418 -> m65_419  [key=0, style=solid];
m65_418 -> m65_151  [key=2, style=dotted];
m65_418 -> m65_152  [key=2, style=dotted];
m65_418 -> m65_420  [color=darkseagreen4, key=1, label=server, style=dashed];
m65_418 -> m65_421  [color=darkseagreen4, key=1, label=server, style=dashed];
m65_423 -> m65_424  [key=0, style=solid];
m65_423 -> m65_401  [key=2, style=dotted];
m65_424 -> m65_425  [key=0, style=solid];
m65_424 -> m65_151  [key=2, style=dotted];
m65_424 -> m65_152  [key=2, style=dotted];
m65_424 -> m65_426  [color=darkseagreen4, key=1, label=sameServer, style=dashed];
m65_419 -> m65_420  [key=0, style=solid];
m65_419 -> m65_20  [key=2, style=dotted];
m65_420 -> m65_421  [key=0, style=solid];
m65_420 -> m65_428  [key=2, style=dotted];
m65_420 -> m65_158  [key=2, style=dotted];
m65_421 -> m65_422  [key=0, style=solid];
m65_421 -> m65_85  [key=2, style=dotted];
m65_422 -> m65_423  [key=0, style=solid];
m65_422 -> m65_400  [key=2, style=dotted];
m65_425 -> m65_426  [key=0, style=solid];
m65_425 -> m65_20  [key=2, style=dotted];
m65_426 -> m65_427  [key=0, style=solid];
m65_426 -> m65_429  [key=2, style=dotted];
m65_427 -> m65_415  [color=blue, key=0, style=bold];
m65_433 -> m65_434  [key=0, style=solid];
m65_433 -> m65_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_434 -> m65_435  [key=0, style=solid];
m65_434 -> m65_14  [key=2, style=dotted];
m65_434 -> m65_436  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_437 -> m65_438  [key=0, style=solid];
m65_437 -> m65_439  [key=2, style=dotted];
m65_435 -> m65_433  [color=blue, key=0, style=bold];
m65_436 -> m65_437  [key=0, style=solid];
m65_438 -> m65_436  [color=blue, key=0, style=bold];
m65_445 -> m65_446  [key=0, style=solid];
m65_445 -> m65_389  [key=2, style=dotted];
m65_444 -> m65_445  [key=0, style=solid];
m65_444 -> m65_446  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_444 -> m65_447  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_446 -> m65_447  [key=0, style=solid];
m65_446 -> m65_439  [key=2, style=dotted];
m65_447 -> m65_448  [key=0, style=solid];
m65_447 -> m65_151  [key=2, style=dotted];
m65_447 -> m65_152  [key=2, style=dotted];
m65_448 -> m65_449  [key=0, style=solid];
m65_448 -> m65_450  [key=2, style=dotted];
m65_449 -> m65_444  [color=blue, key=0, style=bold];
m65_454 -> m65_455  [key=0, style=solid];
m65_454 -> m65_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_455 -> m65_456  [key=0, style=solid];
m65_455 -> m65_14  [key=2, style=dotted];
m65_455 -> m65_457  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_458 -> m65_459  [key=0, style=solid];
m65_458 -> m65_460  [key=2, style=dotted];
m65_456 -> m65_454  [color=blue, key=0, style=bold];
m65_457 -> m65_458  [key=0, style=solid];
m65_459 -> m65_457  [color=blue, key=0, style=bold];
m65_466 -> m65_467  [key=0, style=solid];
m65_466 -> m65_389  [key=2, style=dotted];
m65_465 -> m65_466  [key=0, style=solid];
m65_465 -> m65_467  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_465 -> m65_468  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_467 -> m65_468  [key=0, style=solid];
m65_467 -> m65_460  [key=2, style=dotted];
m65_468 -> m65_469  [key=0, style=solid];
m65_468 -> m65_151  [key=2, style=dotted];
m65_468 -> m65_159  [key=2, style=dotted];
m65_468 -> m65_472  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_468 -> m65_475  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_468 -> m65_470  [color=darkseagreen4, key=1, label=servers, style=dashed];
m65_469 -> m65_470  [key=0, style=solid];
m65_469 -> m65_450  [key=2, style=dotted];
m65_472 -> m65_473  [key=0, style=solid];
m65_475 -> m65_476  [key=0, style=solid];
m65_470 -> m65_471  [key=0, style=solid];
m65_470 -> m65_20  [key=2, style=dotted];
m65_471 -> m65_465  [color=blue, key=0, style=bold];
m65_473 -> m65_474  [key=0, style=solid];
m65_474 -> m65_472  [color=blue, key=0, style=bold];
m65_476 -> m65_477  [key=0, style=solid];
m65_477 -> m65_475  [color=blue, key=0, style=bold];
m65_481 -> m65_482  [key=0, style=solid];
m65_481 -> m65_485  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_482 -> m65_483  [key=0, style=solid];
m65_482 -> m65_14  [key=2, style=dotted];
m65_482 -> m65_484  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_485 -> m65_486  [key=0, style=solid];
m65_485 -> m65_487  [key=2, style=dotted];
m65_485 -> m65_488  [key=2, style=dotted];
m65_483 -> m65_481  [color=blue, key=0, style=bold];
m65_484 -> m65_485  [key=0, style=solid];
m65_486 -> m65_484  [color=blue, key=0, style=bold];
m65_494 -> m65_495  [key=0, style=solid];
m65_494 -> m65_156  [key=2, style=dotted];
m65_494 -> m65_499  [key=2, style=dotted];
m65_494 -> m65_389  [key=2, style=dotted];
m65_493 -> m65_494  [key=0, style=solid];
m65_493 -> m65_495  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_493 -> m65_496  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_495 -> m65_496  [key=0, style=solid];
m65_495 -> m65_500  [key=2, style=dotted];
m65_495 -> m65_488  [key=2, style=dotted];
m65_496 -> m65_497  [key=0, style=solid];
m65_496 -> m65_151  [key=2, style=dotted];
m65_496 -> m65_152  [key=2, style=dotted];
m65_497 -> m65_498  [key=0, style=solid];
m65_497 -> m65_20  [key=2, style=dotted];
m65_498 -> m65_493  [color=blue, key=0, style=bold];
m65_504 -> m65_505  [key=0, style=solid];
m65_504 -> m65_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_505 -> m65_506  [key=0, style=solid];
m65_505 -> m65_14  [key=2, style=dotted];
m65_505 -> m65_507  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_508 -> m65_509  [key=0, style=solid];
m65_508 -> m65_510  [key=2, style=dotted];
m65_506 -> m65_504  [color=blue, key=0, style=bold];
m65_507 -> m65_508  [key=0, style=solid];
m65_509 -> m65_507  [color=blue, key=0, style=bold];
m65_514 -> m65_515  [key=0, style=solid];
m65_515 -> m65_516  [key=0, style=solid];
m65_515 -> m65_510  [key=2, style=dotted];
m65_515 -> m65_517  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_516 -> m65_517  [key=0, style=solid];
m65_516 -> m65_85  [key=2, style=dotted];
m65_517 -> m65_518  [key=0, style=solid];
m65_517 -> m65_20  [key=2, style=dotted];
m65_518 -> m65_514  [color=blue, key=0, style=bold];
m65_524 -> m65_525  [key=0, style=solid];
m65_524 -> m65_389  [key=2, style=dotted];
m65_523 -> m65_524  [key=0, style=solid];
m65_523 -> m65_525  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_525 -> m65_526  [key=0, style=solid];
m65_525 -> m65_510  [key=2, style=dotted];
m65_525 -> m65_527  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_525 -> m65_528  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_526 -> m65_527  [key=0, style=solid];
m65_526 -> m65_20  [key=2, style=dotted];
m65_527 -> m65_528  [key=0, style=solid];
m65_527 -> m65_429  [key=2, style=dotted];
m65_528 -> m65_529  [key=0, style=solid];
m65_528 -> m65_429  [key=2, style=dotted];
m65_529 -> m65_523  [color=blue, key=0, style=bold];
m65_533 -> m65_534  [key=0, style=solid];
m65_533 -> m65_538  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_534 -> m65_535  [key=0, style=solid];
m65_534 -> m65_14  [key=2, style=dotted];
m65_534 -> m65_537  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_538 -> m65_539  [key=0, style=solid];
m65_538 -> m65_105  [key=2, style=dotted];
m65_538 -> m65_540  [key=2, style=dotted];
m65_535 -> m65_536  [key=0, style=solid];
m65_535 -> m65_20  [key=2, style=dotted];
m65_537 -> m65_538  [key=0, style=solid];
m65_536 -> m65_533  [color=blue, key=0, style=bold];
m65_539 -> m65_537  [color=blue, key=0, style=bold];
m65_544 -> m65_545  [key=0, style=solid];
m65_544 -> m65_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_545 -> m65_546  [key=0, style=solid];
m65_545 -> m65_14  [key=2, style=dotted];
m65_545 -> m65_548  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_549 -> m65_550  [key=0, style=solid];
m65_549 -> m65_540  [key=2, style=dotted];
m65_546 -> m65_547  [key=0, style=solid];
m65_546 -> m65_20  [key=2, style=dotted];
m65_548 -> m65_549  [key=0, style=solid];
m65_547 -> m65_544  [color=blue, key=0, style=bold];
m65_550 -> m65_548  [color=blue, key=0, style=bold];
m65_554 -> m65_555  [key=0, style=solid];
m65_554 -> m65_556  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m65_555 -> m65_556  [key=0, style=solid];
m65_555 -> m65_105  [key=2, style=dotted];
m65_555 -> m65_540  [key=2, style=dotted];
m65_556 -> m65_557  [key=0, style=solid];
m65_556 -> m65_151  [key=2, style=dotted];
m65_556 -> m65_159  [key=2, style=dotted];
m65_556 -> m65_560  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_556 -> m65_563  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_556 -> m65_558  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_557 -> m65_558  [key=0, style=solid];
m65_557 -> m65_20  [key=2, style=dotted];
m65_560 -> m65_561  [key=0, style=solid];
m65_563 -> m65_564  [key=0, style=solid];
m65_558 -> m65_559  [key=0, style=solid];
m65_558 -> m65_20  [key=2, style=dotted];
m65_559 -> m65_554  [color=blue, key=0, style=bold];
m65_561 -> m65_562  [key=0, style=solid];
m65_562 -> m65_560  [color=blue, key=0, style=bold];
m65_564 -> m65_565  [key=0, style=solid];
m65_565 -> m65_563  [color=blue, key=0, style=bold];
m65_569 -> m65_570  [key=0, style=solid];
m65_569 -> m65_573  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_570 -> m65_571  [key=0, style=solid];
m65_570 -> m65_14  [key=2, style=dotted];
m65_570 -> m65_572  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_573 -> m65_574  [key=0, style=solid];
m65_573 -> m65_575  [key=2, style=dotted];
m65_571 -> m65_569  [color=blue, key=0, style=bold];
m65_572 -> m65_573  [key=0, style=solid];
m65_574 -> m65_572  [color=blue, key=0, style=bold];
m65_579 -> m65_580  [key=0, style=solid];
m65_580 -> m65_581  [key=0, style=solid];
m65_580 -> m65_575  [key=2, style=dotted];
m65_581 -> m65_582  [key=0, style=solid];
m65_581 -> m65_186  [key=2, style=dotted];
m65_582 -> m65_579  [color=blue, key=0, style=bold];
m65_588 -> m65_589  [key=0, style=solid];
m65_588 -> m65_389  [key=2, style=dotted];
m65_587 -> m65_588  [key=0, style=solid];
m65_587 -> m65_589  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_589 -> m65_590  [key=0, style=solid];
m65_589 -> m65_575  [key=2, style=dotted];
m65_589 -> m65_591  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_589 -> m65_592  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_589 -> m65_593  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_590 -> m65_591  [key=0, style=solid];
m65_590 -> m65_85  [key=2, style=dotted];
m65_591 -> m65_592  [key=0, style=solid];
m65_591 -> m65_20  [key=2, style=dotted];
m65_592 -> m65_593  [key=0, style=solid];
m65_592 -> m65_20  [key=2, style=dotted];
m65_593 -> m65_594  [key=0, style=solid];
m65_593 -> m65_20  [key=2, style=dotted];
m65_594 -> m65_587  [color=blue, key=0, style=bold];
m65_598 -> m65_599  [key=0, style=solid];
m65_598 -> m65_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_599 -> m65_600  [key=0, style=solid];
m65_599 -> m65_14  [key=2, style=dotted];
m65_599 -> m65_601  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_602 -> m65_603  [key=0, style=solid];
m65_602 -> m65_604  [key=2, style=dotted];
m65_600 -> m65_598  [color=blue, key=0, style=bold];
m65_601 -> m65_602  [key=0, style=solid];
m65_603 -> m65_601  [color=blue, key=0, style=bold];
m65_608 -> m65_609  [key=0, style=solid];
m65_609 -> m65_610  [key=0, style=solid];
m65_609 -> m65_604  [key=2, style=dotted];
m65_610 -> m65_611  [key=0, style=solid];
m65_610 -> m65_20  [key=2, style=dotted];
m65_611 -> m65_608  [color=blue, key=0, style=bold];
m65_617 -> m65_618  [key=0, style=solid];
m65_617 -> m65_621  [key=2, style=dotted];
m65_617 -> m65_389  [key=2, style=dotted];
m65_616 -> m65_617  [key=0, style=solid];
m65_616 -> m65_618  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_618 -> m65_619  [key=0, style=solid];
m65_618 -> m65_604  [key=2, style=dotted];
m65_619 -> m65_620  [key=0, style=solid];
m65_619 -> m65_20  [key=2, style=dotted];
m65_620 -> m65_616  [color=blue, key=0, style=bold];
m65_625 -> m65_626  [key=0, style=solid];
m65_625 -> m65_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_626 -> m65_627  [key=0, style=solid];
m65_626 -> m65_14  [key=2, style=dotted];
m65_626 -> m65_628  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_629 -> m65_630  [key=0, style=solid];
m65_629 -> m65_631  [key=2, style=dotted];
m65_627 -> m65_625  [color=blue, key=0, style=bold];
m65_628 -> m65_629  [key=0, style=solid];
m65_630 -> m65_628  [color=blue, key=0, style=bold];
m65_637 -> m65_638  [key=0, style=solid];
m65_637 -> m65_621  [key=2, style=dotted];
m65_637 -> m65_389  [key=2, style=dotted];
m65_636 -> m65_637  [key=0, style=solid];
m65_636 -> m65_638  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_638 -> m65_639  [key=0, style=solid];
m65_638 -> m65_631  [key=2, style=dotted];
m65_639 -> m65_640  [key=0, style=solid];
m65_639 -> m65_20  [key=2, style=dotted];
m65_640 -> m65_636  [color=blue, key=0, style=bold];
m65_644 -> m65_645  [key=0, style=solid];
m65_644 -> m65_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_645 -> m65_646  [key=0, style=solid];
m65_645 -> m65_14  [key=2, style=dotted];
m65_645 -> m65_647  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_648 -> m65_649  [key=0, style=solid];
m65_648 -> m65_650  [key=2, style=dotted];
m65_646 -> m65_644  [color=blue, key=0, style=bold];
m65_647 -> m65_648  [key=0, style=solid];
m65_649 -> m65_647  [color=blue, key=0, style=bold];
m65_654 -> m65_655  [key=0, style=solid];
m65_655 -> m65_656  [key=0, style=solid];
m65_655 -> m65_650  [key=2, style=dotted];
m65_656 -> m65_657  [key=0, style=solid];
m65_656 -> m65_20  [key=2, style=dotted];
m65_657 -> m65_654  [color=blue, key=0, style=bold];
m65_663 -> m65_664  [key=0, style=solid];
m65_663 -> m65_389  [key=2, style=dotted];
m65_662 -> m65_663  [key=0, style=solid];
m65_662 -> m65_664  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_664 -> m65_665  [key=0, style=solid];
m65_664 -> m65_650  [key=2, style=dotted];
m65_665 -> m65_666  [key=0, style=solid];
m65_665 -> m65_20  [key=2, style=dotted];
m65_666 -> m65_662  [color=blue, key=0, style=bold];
m65_672 -> m65_673  [key=0, style=solid];
m65_672 -> m65_389  [key=2, style=dotted];
m65_671 -> m65_672  [key=0, style=solid];
m65_671 -> m65_673  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_673 -> m65_674  [key=0, style=solid];
m65_673 -> m65_650  [key=2, style=dotted];
m65_674 -> m65_675  [key=0, style=solid];
m65_674 -> m65_20  [key=2, style=dotted];
m65_675 -> m65_671  [color=blue, key=0, style=bold];
m65_679 -> m65_680  [key=0, style=solid];
m65_679 -> m65_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_680 -> m65_681  [key=0, style=solid];
m65_680 -> m65_14  [key=2, style=dotted];
m65_680 -> m65_682  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_683 -> m65_684  [key=0, style=solid];
m65_683 -> m65_685  [key=2, style=dotted];
m65_681 -> m65_679  [color=blue, key=0, style=bold];
m65_682 -> m65_683  [key=0, style=solid];
m65_684 -> m65_682  [color=blue, key=0, style=bold];
m65_689 -> m65_690  [key=0, style=solid];
m65_690 -> m65_691  [key=0, style=solid];
m65_690 -> m65_685  [key=2, style=dotted];
m65_691 -> m65_692  [key=0, style=solid];
m65_691 -> m65_20  [key=2, style=dotted];
m65_692 -> m65_689  [color=blue, key=0, style=bold];
m65_698 -> m65_699  [key=0, style=solid];
m65_698 -> m65_389  [key=2, style=dotted];
m65_697 -> m65_698  [key=0, style=solid];
m65_697 -> m65_699  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_699 -> m65_700  [key=0, style=solid];
m65_699 -> m65_685  [key=2, style=dotted];
m65_700 -> m65_701  [key=0, style=solid];
m65_700 -> m65_20  [key=2, style=dotted];
m65_701 -> m65_697  [color=blue, key=0, style=bold];
m65_705 -> m65_706  [key=0, style=solid];
m65_705 -> m65_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_706 -> m65_707  [key=0, style=solid];
m65_706 -> m65_14  [key=2, style=dotted];
m65_706 -> m65_708  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_709 -> m65_710  [key=0, style=solid];
m65_709 -> m65_711  [key=2, style=dotted];
m65_707 -> m65_705  [color=blue, key=0, style=bold];
m65_708 -> m65_709  [key=0, style=solid];
m65_710 -> m65_708  [color=blue, key=0, style=bold];
m65_715 -> m65_716  [key=0, style=solid];
m65_716 -> m65_717  [key=0, style=solid];
m65_716 -> m65_711  [key=2, style=dotted];
m65_717 -> m65_718  [key=0, style=solid];
m65_717 -> m65_158  [key=2, style=dotted];
m65_718 -> m65_715  [color=blue, key=0, style=bold];
m65_724 -> m65_725  [key=0, style=solid];
m65_724 -> m65_499  [key=2, style=dotted];
m65_724 -> m65_389  [key=2, style=dotted];
m65_723 -> m65_724  [key=0, style=solid];
m65_723 -> m65_725  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_725 -> m65_726  [key=0, style=solid];
m65_725 -> m65_711  [key=2, style=dotted];
m65_725 -> m65_727  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_726 -> m65_727  [key=0, style=solid];
m65_726 -> m65_487  [key=2, style=dotted];
m65_726 -> m65_158  [key=2, style=dotted];
m65_727 -> m65_728  [key=0, style=solid];
m65_727 -> m65_487  [key=2, style=dotted];
m65_727 -> m65_158  [key=2, style=dotted];
m65_728 -> m65_723  [color=blue, key=0, style=bold];
m65_732 -> m65_733  [key=0, style=solid];
m65_732 -> m65_736  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_733 -> m65_734  [key=0, style=solid];
m65_733 -> m65_14  [key=2, style=dotted];
m65_733 -> m65_735  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_736 -> m65_737  [key=0, style=solid];
m65_736 -> m65_738  [key=2, style=dotted];
m65_734 -> m65_732  [color=blue, key=0, style=bold];
m65_735 -> m65_736  [key=0, style=solid];
m65_737 -> m65_735  [color=blue, key=0, style=bold];
m65_742 -> m65_743  [key=0, style=solid];
m65_743 -> m65_744  [key=0, style=solid];
m65_743 -> m65_738  [key=2, style=dotted];
m65_744 -> m65_745  [key=0, style=solid];
m65_744 -> m65_20  [key=2, style=dotted];
m65_745 -> m65_742  [color=blue, key=0, style=bold];
m65_751 -> m65_752  [key=0, style=solid];
m65_751 -> m65_389  [key=2, style=dotted];
m65_750 -> m65_751  [key=0, style=solid];
m65_750 -> m65_752  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_752 -> m65_753  [key=0, style=solid];
m65_752 -> m65_738  [key=2, style=dotted];
m65_753 -> m65_754  [key=0, style=solid];
m65_753 -> m65_20  [key=2, style=dotted];
m65_754 -> m65_750  [color=blue, key=0, style=bold];
m65_758 -> m65_759  [key=0, style=solid];
m65_758 -> m65_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_759 -> m65_760  [key=0, style=solid];
m65_759 -> m65_14  [key=2, style=dotted];
m65_759 -> m65_761  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_762 -> m65_763  [key=0, style=solid];
m65_762 -> m65_764  [key=2, style=dotted];
m65_760 -> m65_758  [color=blue, key=0, style=bold];
m65_761 -> m65_762  [key=0, style=solid];
m65_763 -> m65_761  [color=blue, key=0, style=bold];
m65_768 -> m65_769  [key=0, style=solid];
m65_769 -> m65_770  [key=0, style=solid];
m65_769 -> m65_764  [key=2, style=dotted];
m65_770 -> m65_771  [key=0, style=solid];
m65_770 -> m65_158  [key=2, style=dotted];
m65_771 -> m65_768  [color=blue, key=0, style=bold];
m65_777 -> m65_778  [key=0, style=solid];
m65_777 -> m65_499  [key=2, style=dotted];
m65_777 -> m65_389  [key=2, style=dotted];
m65_776 -> m65_777  [key=0, style=solid];
m65_776 -> m65_778  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_778 -> m65_779  [key=0, style=solid];
m65_778 -> m65_764  [key=2, style=dotted];
m65_778 -> m65_780  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_779 -> m65_780  [key=0, style=solid];
m65_779 -> m65_487  [key=2, style=dotted];
m65_779 -> m65_158  [key=2, style=dotted];
m65_780 -> m65_781  [key=0, style=solid];
m65_780 -> m65_487  [key=2, style=dotted];
m65_780 -> m65_158  [key=2, style=dotted];
m65_781 -> m65_776  [color=blue, key=0, style=bold];
m65_785 -> m65_786  [key=0, style=solid];
m65_785 -> m65_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_786 -> m65_787  [key=0, style=solid];
m65_786 -> m65_14  [key=2, style=dotted];
m65_786 -> m65_789  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_790 -> m65_791  [key=0, style=solid];
m65_790 -> m65_792  [key=2, style=dotted];
m65_787 -> m65_788  [key=0, style=solid];
m65_787 -> m65_20  [key=2, style=dotted];
m65_789 -> m65_790  [key=0, style=solid];
m65_788 -> m65_785  [color=blue, key=0, style=bold];
m65_791 -> m65_789  [color=blue, key=0, style=bold];
m65_796 -> m65_797  [key=0, style=solid];
m65_796 -> m65_801  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_797 -> m65_798  [key=0, style=solid];
m65_797 -> m65_14  [key=2, style=dotted];
m65_797 -> m65_800  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_801 -> m65_802  [key=0, style=solid];
m65_801 -> m65_792  [key=2, style=dotted];
m65_798 -> m65_799  [key=0, style=solid];
m65_798 -> m65_20  [key=2, style=dotted];
m65_800 -> m65_801  [key=0, style=solid];
m65_799 -> m65_796  [color=blue, key=0, style=bold];
m65_802 -> m65_800  [color=blue, key=0, style=bold];
m65_806 -> m65_807  [key=0, style=solid];
m65_807 -> m65_808  [key=0, style=solid];
m65_807 -> m65_792  [key=2, style=dotted];
m65_808 -> m65_809  [key=0, style=solid];
m65_808 -> m65_186  [key=2, style=dotted];
m65_809 -> m65_806  [color=blue, key=0, style=bold];
m65_815 -> m65_816  [key=0, style=solid];
m65_815 -> m65_389  [key=2, style=dotted];
m65_814 -> m65_815  [key=0, style=solid];
m65_814 -> m65_816  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_816 -> m65_817  [key=0, style=solid];
m65_816 -> m65_792  [key=2, style=dotted];
m65_817 -> m65_818  [key=0, style=solid];
m65_817 -> m65_20  [key=2, style=dotted];
m65_818 -> m65_814  [color=blue, key=0, style=bold];
m65_822 -> m65_823  [key=0, style=solid];
m65_822 -> m65_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_823 -> m65_824  [key=0, style=solid];
m65_823 -> m65_14  [key=2, style=dotted];
m65_823 -> m65_826  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_827 -> m65_828  [key=0, style=solid];
m65_827 -> m65_829  [key=2, style=dotted];
m65_824 -> m65_825  [key=0, style=solid];
m65_824 -> m65_20  [key=2, style=dotted];
m65_826 -> m65_827  [key=0, style=solid];
m65_825 -> m65_822  [color=blue, key=0, style=bold];
m65_828 -> m65_826  [color=blue, key=0, style=bold];
m65_833 -> m65_834  [key=0, style=solid];
m65_834 -> m65_835  [key=0, style=solid];
m65_834 -> m65_829  [key=2, style=dotted];
m65_835 -> m65_836  [key=0, style=solid];
m65_835 -> m65_837  [key=2, style=dotted];
m65_836 -> m65_833  [color=blue, key=0, style=bold];
m65_843 -> m65_844  [key=0, style=solid];
m65_843 -> m65_389  [key=2, style=dotted];
m65_842 -> m65_843  [key=0, style=solid];
m65_842 -> m65_844  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_844 -> m65_845  [key=0, style=solid];
m65_844 -> m65_829  [key=2, style=dotted];
m65_845 -> m65_846  [key=0, style=solid];
m65_845 -> m65_20  [key=2, style=dotted];
m65_846 -> m65_842  [color=blue, key=0, style=bold];
m65_850 -> m65_851  [key=0, style=solid];
m65_850 -> m65_854  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_851 -> m65_852  [key=0, style=solid];
m65_851 -> m65_14  [key=2, style=dotted];
m65_851 -> m65_853  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_854 -> m65_855  [key=0, style=solid];
m65_854 -> m65_856  [key=2, style=dotted];
m65_852 -> m65_850  [color=blue, key=0, style=bold];
m65_853 -> m65_854  [key=0, style=solid];
m65_855 -> m65_853  [color=blue, key=0, style=bold];
m65_860 -> m65_861  [key=0, style=solid];
m65_861 -> m65_862  [key=0, style=solid];
m65_861 -> m65_856  [key=2, style=dotted];
m65_862 -> m65_863  [key=0, style=solid];
m65_862 -> m65_837  [key=2, style=dotted];
m65_863 -> m65_860  [color=blue, key=0, style=bold];
m65_869 -> m65_870  [key=0, style=solid];
m65_869 -> m65_389  [key=2, style=dotted];
m65_868 -> m65_869  [key=0, style=solid];
m65_868 -> m65_870  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_870 -> m65_871  [key=0, style=solid];
m65_870 -> m65_856  [key=2, style=dotted];
m65_871 -> m65_872  [key=0, style=solid];
m65_871 -> m65_20  [key=2, style=dotted];
m65_872 -> m65_868  [color=blue, key=0, style=bold];
m65_876 -> m65_877  [key=0, style=solid];
m65_876 -> m65_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_877 -> m65_878  [key=0, style=solid];
m65_877 -> m65_14  [key=2, style=dotted];
m65_877 -> m65_879  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_880 -> m65_881  [key=0, style=solid];
m65_880 -> m65_882  [key=2, style=dotted];
m65_878 -> m65_876  [color=blue, key=0, style=bold];
m65_879 -> m65_880  [key=0, style=solid];
m65_881 -> m65_879  [color=blue, key=0, style=bold];
m65_886 -> m65_887  [key=0, style=solid];
m65_887 -> m65_888  [key=0, style=solid];
m65_887 -> m65_882  [key=2, style=dotted];
m65_888 -> m65_889  [key=0, style=solid];
m65_888 -> m65_158  [key=2, style=dotted];
m65_889 -> m65_886  [color=blue, key=0, style=bold];
m65_895 -> m65_896  [key=0, style=solid];
m65_895 -> m65_157  [key=2, style=dotted];
m65_895 -> m65_389  [key=2, style=dotted];
m65_894 -> m65_895  [key=0, style=solid];
m65_894 -> m65_896  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_896 -> m65_897  [key=0, style=solid];
m65_896 -> m65_882  [key=2, style=dotted];
m65_896 -> m65_898  [color=darkseagreen4, key=1, label=result, style=dashed];
m65_897 -> m65_898  [key=0, style=solid];
m65_897 -> m65_487  [key=2, style=dotted];
m65_897 -> m65_158  [key=2, style=dotted];
m65_898 -> m65_899  [key=0, style=solid];
m65_898 -> m65_487  [key=2, style=dotted];
m65_898 -> m65_158  [key=2, style=dotted];
m65_899 -> m65_894  [color=blue, key=0, style=bold];
m65_412 -> m65_413  [key=0, style=solid];
m65_413 -> m65_414  [key=0, style=solid];
m65_413 -> m65_125  [key=2, style=dotted];
m65_413 -> m65_415  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_414 -> m65_412  [color=blue, key=0, style=bold];
m65_693 -> m65_694  [key=0, style=solid];
m65_694 -> m65_695  [key=0, style=solid];
m65_694 -> m65_698  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_695 -> m65_696  [key=0, style=solid];
m65_695 -> m65_125  [key=2, style=dotted];
m65_695 -> m65_697  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_696 -> m65_693  [color=blue, key=0, style=bold];
m65_17 -> m65_18  [key=0, style=solid];
m65_17 -> m65_14  [key=2, style=dotted];
m65_17 -> m65_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_390 -> m65_391  [key=0, style=solid];
m65_391 -> m65_392  [key=0, style=solid];
m65_391 -> m65_66  [key=2, style=dotted];
m65_391 -> m65_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_392 -> m65_390  [color=blue, key=0, style=bold];
m65_501 -> m65_502  [key=0, style=solid];
m65_502 -> m65_503  [key=0, style=solid];
m65_502 -> m65_66  [key=2, style=dotted];
m65_502 -> m65_504  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_503 -> m65_501  [color=blue, key=0, style=bold];
m65_40 -> m65_41  [color=red, key=0, style=solid];
m65_40 -> m65_43  [color=green, key=0, style=solid];
m65_40 -> m65_45  [color=green, key=0, style=solid];
m65_42 -> m65_40  [color=green, key=0, style=solid];
m65_42 -> m65_43  [key=0, style=solid];
m65_42 -> m65_45  [key=0, style=solid];
m65_42 -> m65_46  [key=2, style=dotted];
m65_42 -> m65_24  [key=2, style=dotted];
m65_41 -> m65_42  [color=red, key=0, style=solid];
m65_41 -> m65_0  [key=2, style=dotted];
m65_41 -> m65_32  [color=red, key=2, style=dotted];
m65_41 -> m65_44  [color=red, key=1, label=sqlConnection, style=dashed];
m65_43 -> m65_44  [key=0, style=solid];
m65_43 -> m65_39  [key=2, style=dotted];
m65_44 -> m65_45  [key=0, style=solid];
m65_44 -> m65_47  [key=2, style=dotted];
m65_44 -> m65_20  [key=2, style=dotted];
m65_45 -> m65_39  [color=blue, key=0, style=bold];
m65_45 -> m65_40  [color=blue, key=0, style=bold];
m65_900 -> m65_901  [key=0, style=solid];
m65_900 -> m65_903  [color=darkseagreen4, key=1, label="System.Action<SqlConnection, Hangfire.SqlServer.SqlServerConnection>", style=dashed];
m65_901 -> m65_902  [key=0, style=solid];
m65_901 -> m65_32  [key=2, style=dotted];
m65_901 -> m65_903  [color=darkseagreen4, key=1, label=sqlConnection, style=dashed];
m65_903 -> m65_904  [key=0, style=solid];
m65_903 -> m65_905  [key=2, style=dotted];
m65_902 -> m65_903  [key=0, style=solid];
m65_902 -> m65_24  [key=2, style=dotted];
m65_904 -> m65_900  [color=blue, key=0, style=bold];
m65_260 -> m65_261  [key=0, style=solid];
m65_261 -> m65_262  [key=0, style=solid];
m65_261 -> m65_66  [key=2, style=dotted];
m65_261 -> m65_263  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_262 -> m65_260  [color=blue, key=0, style=bold];
m65_179 -> m65_180  [key=0, style=solid];
m65_180 -> m65_181  [key=0, style=solid];
m65_180 -> m65_66  [key=2, style=dotted];
m65_180 -> m65_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_181 -> m65_179  [color=blue, key=0, style=bold];
m65_77 -> m65_78  [key=0, style=solid];
m65_78 -> m65_79  [key=0, style=solid];
m65_78 -> m65_66  [key=2, style=dotted];
m65_78 -> m65_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_79 -> m65_77  [color=blue, key=0, style=bold];
m65_336 -> m65_337  [key=0, style=solid];
m65_337 -> m65_338  [key=0, style=solid];
m65_337 -> m65_66  [key=2, style=dotted];
m65_337 -> m65_339  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_338 -> m65_336  [color=blue, key=0, style=bold];
m65_121 -> m65_910  [key=0, style=solid];
m65_910 -> m65_121  [color=blue, key=0, style=bold];
m65_729 -> m65_730  [key=0, style=solid];
m65_730 -> m65_731  [key=0, style=solid];
m65_730 -> m65_66  [key=2, style=dotted];
m65_730 -> m65_732  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_731 -> m65_729  [color=blue, key=0, style=bold];
m65_56 -> m65_29  [color=darkseagreen4, key=1, label=heartbeats, style=dashed];
m65_530 -> m65_531  [key=0, style=solid];
m65_531 -> m65_532  [key=0, style=solid];
m65_531 -> m65_66  [key=2, style=dotted];
m65_531 -> m65_533  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_532 -> m65_530  [color=blue, key=0, style=bold];
m65_107 -> m65_108  [key=0, style=solid];
m65_108 -> m65_109  [key=0, style=solid];
m65_108 -> m65_66  [key=2, style=dotted];
m65_108 -> m65_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_109 -> m65_107  [color=blue, key=0, style=bold];
m65_612 -> m65_613  [key=0, style=solid];
m65_613 -> m65_614  [key=0, style=solid];
m65_613 -> m65_617  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_614 -> m65_615  [key=0, style=solid];
m65_614 -> m65_125  [key=2, style=dotted];
m65_614 -> m65_616  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_615 -> m65_612  [color=blue, key=0, style=bold];
m65_765 -> m65_766  [key=0, style=solid];
m65_766 -> m65_767  [key=0, style=solid];
m65_766 -> m65_66  [key=2, style=dotted];
m65_766 -> m65_768  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_767 -> m65_765  [color=blue, key=0, style=bold];
m65_489 -> m65_490  [key=0, style=solid];
m65_490 -> m65_491  [key=0, style=solid];
m65_490 -> m65_494  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_491 -> m65_492  [key=0, style=solid];
m65_491 -> m65_125  [key=2, style=dotted];
m65_491 -> m65_493  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_492 -> m65_489  [color=blue, key=0, style=bold];
m65_755 -> m65_756  [key=0, style=solid];
m65_756 -> m65_757  [key=0, style=solid];
m65_756 -> m65_66  [key=2, style=dotted];
m65_756 -> m65_758  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_757 -> m65_755  [color=blue, key=0, style=bold];
m65_18 -> m65_19  [key=0, style=solid];
m65_18 -> m65_20  [key=2, style=dotted];
m65_226 -> m65_227  [key=0, style=solid];
m65_227 -> m65_228  [key=0, style=solid];
m65_227 -> m65_232  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_228 -> m65_229  [key=0, style=solid];
m65_228 -> m65_125  [key=2, style=dotted];
m65_228 -> m65_230  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_229 -> m65_226  [color=blue, key=0, style=bold];
m65_803 -> m65_804  [key=0, style=solid];
m65_804 -> m65_805  [key=0, style=solid];
m65_804 -> m65_66  [key=2, style=dotted];
m65_804 -> m65_806  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_805 -> m65_803  [color=blue, key=0, style=bold];
m65_63 -> m65_64  [key=0, style=solid];
m65_64 -> m65_65  [key=0, style=solid];
m65_64 -> m65_66  [key=2, style=dotted];
m65_64 -> m65_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_65 -> m65_63  [color=blue, key=0, style=bold];
m65_676 -> m65_677  [key=0, style=solid];
m65_677 -> m65_678  [key=0, style=solid];
m65_677 -> m65_66  [key=2, style=dotted];
m65_677 -> m65_679  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_678 -> m65_676  [color=blue, key=0, style=bold];
m65_19 -> m65_16  [color=blue, key=0, style=bold];
m65_46 -> m65_47  [color=red, key=0, style=solid];
m65_519 -> m65_520  [key=0, style=solid];
m65_520 -> m65_521  [key=0, style=solid];
m65_520 -> m65_524  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_521 -> m65_522  [key=0, style=solid];
m65_521 -> m65_125  [key=2, style=dotted];
m65_521 -> m65_523  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_522 -> m65_519  [color=blue, key=0, style=bold];
m65_541 -> m65_542  [key=0, style=solid];
m65_542 -> m65_543  [key=0, style=solid];
m65_542 -> m65_66  [key=2, style=dotted];
m65_542 -> m65_544  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_543 -> m65_541  [color=blue, key=0, style=bold];
m65_686 -> m65_687  [key=0, style=solid];
m65_687 -> m65_688  [key=0, style=solid];
m65_687 -> m65_66  [key=2, style=dotted];
m65_687 -> m65_689  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_688 -> m65_686  [color=blue, key=0, style=bold];
m65_702 -> m65_703  [key=0, style=solid];
m65_703 -> m65_704  [key=0, style=solid];
m65_703 -> m65_66  [key=2, style=dotted];
m65_703 -> m65_705  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_704 -> m65_702  [color=blue, key=0, style=bold];
m65_906 -> m65_907  [key=0, style=solid];
m65_906 -> m65_24  [key=2, style=dotted];
m65_906 -> m65_32  [key=2, style=dotted];
m65_907 -> m65_908  [key=0, style=solid];
m65_907 -> m65_909  [key=2, style=dotted];
m65_908 -> m65_49  [color=blue, key=0, style=bold];
m65_641 -> m65_642  [key=0, style=solid];
m65_642 -> m65_643  [key=0, style=solid];
m65_642 -> m65_66  [key=2, style=dotted];
m65_642 -> m65_644  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_643 -> m65_641  [color=blue, key=0, style=bold];
m65_819 -> m65_820  [key=0, style=solid];
m65_820 -> m65_821  [key=0, style=solid];
m65_820 -> m65_66  [key=2, style=dotted];
m65_820 -> m65_822  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_821 -> m65_819  [color=blue, key=0, style=bold];
m65_315 -> m65_316  [key=0, style=solid];
m65_316 -> m65_317  [key=0, style=solid];
m65_316 -> m65_66  [key=2, style=dotted];
m65_316 -> m65_318  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_317 -> m65_315  [color=blue, key=0, style=bold];
m65_838 -> m65_839  [key=0, style=solid];
m65_839 -> m65_840  [key=0, style=solid];
m65_839 -> m65_843  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_840 -> m65_841  [key=0, style=solid];
m65_840 -> m65_125  [key=2, style=dotted];
m65_840 -> m65_842  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_841 -> m65_838  [color=blue, key=0, style=bold];
m65_95 -> m65_96  [key=0, style=solid];
m65_96 -> m65_97  [key=0, style=solid];
m65_96 -> m65_66  [key=2, style=dotted];
m65_96 -> m65_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_97 -> m65_95  [color=blue, key=0, style=bold];
m65_651 -> m65_652  [key=0, style=solid];
m65_652 -> m65_653  [key=0, style=solid];
m65_652 -> m65_66  [key=2, style=dotted];
m65_652 -> m65_654  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_653 -> m65_651  [color=blue, key=0, style=bold];
m65_873 -> m65_874  [key=0, style=solid];
m65_874 -> m65_875  [key=0, style=solid];
m65_874 -> m65_66  [key=2, style=dotted];
m65_874 -> m65_876  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_875 -> m65_873  [color=blue, key=0, style=bold];
m65_86 -> m65_87  [key=0, style=solid];
m65_87 -> m65_88  [key=0, style=solid];
m65_87 -> m65_66  [key=2, style=dotted];
m65_87 -> m65_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_88 -> m65_86  [color=blue, key=0, style=bold];
m65_595 -> m65_596  [key=0, style=solid];
m65_596 -> m65_597  [key=0, style=solid];
m65_596 -> m65_66  [key=2, style=dotted];
m65_596 -> m65_598  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_597 -> m65_595  [color=blue, key=0, style=bold];
m65_380 -> m65_381  [key=0, style=solid];
m65_381 -> m65_382  [key=0, style=solid];
m65_381 -> m65_385  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_382 -> m65_383  [key=0, style=solid];
m65_382 -> m65_125  [key=2, style=dotted];
m65_382 -> m65_384  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_383 -> m65_380  [color=blue, key=0, style=bold];
m65_632 -> m65_633  [key=0, style=solid];
m65_633 -> m65_634  [key=0, style=solid];
m65_633 -> m65_637  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_634 -> m65_635  [key=0, style=solid];
m65_634 -> m65_125  [key=2, style=dotted];
m65_634 -> m65_636  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_635 -> m65_632  [color=blue, key=0, style=bold];
m65_292 -> m65_293  [key=0, style=solid];
m65_293 -> m65_294  [key=0, style=solid];
m65_293 -> m65_297  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_294 -> m65_295  [key=0, style=solid];
m65_294 -> m65_125  [key=2, style=dotted];
m65_294 -> m65_296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_295 -> m65_292  [color=blue, key=0, style=bold];
m65_461 -> m65_462  [key=0, style=solid];
m65_462 -> m65_463  [key=0, style=solid];
m65_462 -> m65_466  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_463 -> m65_464  [key=0, style=solid];
m65_463 -> m65_125  [key=2, style=dotted];
m65_463 -> m65_465  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_464 -> m65_461  [color=blue, key=0, style=bold];
m65_830 -> m65_831  [key=0, style=solid];
m65_831 -> m65_832  [key=0, style=solid];
m65_831 -> m65_66  [key=2, style=dotted];
m65_831 -> m65_833  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_832 -> m65_830  [color=blue, key=0, style=bold];
m65_551 -> m65_552  [key=0, style=solid];
m65_552 -> m65_553  [key=0, style=solid];
m65_552 -> m65_125  [key=2, style=dotted];
m65_552 -> m65_554  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_553 -> m65_551  [color=blue, key=0, style=bold];
m65_187 -> m65_188  [key=0, style=solid];
m65_188 -> m65_189  [key=0, style=solid];
m65_188 -> m65_193  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_189 -> m65_190  [key=0, style=solid];
m65_189 -> m65_125  [key=2, style=dotted];
m65_189 -> m65_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_190 -> m65_187  [color=blue, key=0, style=bold];
m65_451 -> m65_452  [key=0, style=solid];
m65_452 -> m65_453  [key=0, style=solid];
m65_452 -> m65_66  [key=2, style=dotted];
m65_452 -> m65_454  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_453 -> m65_451  [color=blue, key=0, style=bold];
m65_746 -> m65_747  [key=0, style=solid];
m65_747 -> m65_748  [key=0, style=solid];
m65_747 -> m65_751  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_748 -> m65_749  [key=0, style=solid];
m65_748 -> m65_125  [key=2, style=dotted];
m65_748 -> m65_750  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_749 -> m65_746  [color=blue, key=0, style=bold];
m65_169 -> m65_170  [key=0, style=solid];
m65_170 -> m65_171  [key=0, style=solid];
m65_170 -> m65_66  [key=2, style=dotted];
m65_170 -> m65_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_171 -> m65_169  [color=blue, key=0, style=bold];
m65_122 -> m65_123  [key=0, style=solid];
m65_123 -> m65_124  [key=0, style=solid];
m65_123 -> m65_125  [key=2, style=dotted];
m65_123 -> m65_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_124 -> m65_122  [color=blue, key=0, style=bold];
m65_373 -> m65_374  [key=0, style=solid];
m65_374 -> m65_375  [key=0, style=solid];
m65_374 -> m65_66  [key=2, style=dotted];
m65_374 -> m65_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_375 -> m65_373  [color=blue, key=0, style=bold];
m65_605 -> m65_606  [key=0, style=solid];
m65_606 -> m65_607  [key=0, style=solid];
m65_606 -> m65_66  [key=2, style=dotted];
m65_606 -> m65_608  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m65_607 -> m65_605  [color=blue, key=0, style=bold];
m65_911 -> m65_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_17  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_22  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_35  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_42  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_47  [color=red, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_64  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_70  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_78  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_87  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_96  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_108  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_123  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_170  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_180  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_189  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_210  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_220  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_228  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_241  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_252  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_261  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_272  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_283  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_294  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_306  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_316  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_327  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_337  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_345  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_354  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_365  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_374  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_382  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_391  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_403  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_413  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_431  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_442  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_452  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_463  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_479  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_491  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_502  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_512  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_521  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_531  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_542  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_552  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_567  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_577  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_585  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_596  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_606  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_614  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_623  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_634  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_642  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_652  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_660  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_669  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_677  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_687  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_695  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_703  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_713  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_721  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_730  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_740  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_748  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_756  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_766  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_774  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_783  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_794  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_804  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_812  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_820  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_831  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_840  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_848  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_858  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_866  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_874  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_884  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_892  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_902  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_911 -> m65_906  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.Tests.SqlServerConnectionFacts", style=dashed];
m65_912 -> m65_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m65_913 -> m65_60  [color=darkseagreen4, key=1, label=queues, style=dashed];
m65_914 -> m65_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_915 -> m65_75  [color=darkseagreen4, key=1, label=token, style=dashed];
m65_916 -> m65_103  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_917 -> m65_115  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_918 -> m65_176  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_919 -> m65_193  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_920 -> m65_216  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_921 -> m65_232  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_922 -> m65_245  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_923 -> m65_255  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_924 -> m65_268  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_925 -> m65_279  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_926 -> m65_286  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_927 -> m65_297  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_928 -> m65_309  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_929 -> m65_323  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_930 -> m65_334  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_931 -> m65_348  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_932 -> m65_361  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_933 -> m65_371  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_934 -> m65_385  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_935 -> m65_398  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_936 -> m65_410  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_937 -> m65_437  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_938 -> m65_445  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_939 -> m65_458  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_940 -> m65_466  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_941 -> m65_485  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_942 -> m65_494  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_943 -> m65_508  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_944 -> m65_524  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_945 -> m65_538  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_946 -> m65_549  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_947 -> m65_573  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_948 -> m65_588  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_949 -> m65_602  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_950 -> m65_617  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_951 -> m65_629  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_952 -> m65_637  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_953 -> m65_648  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_954 -> m65_663  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_955 -> m65_672  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_956 -> m65_683  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_957 -> m65_698  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_958 -> m65_709  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_959 -> m65_724  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_960 -> m65_736  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_961 -> m65_751  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_962 -> m65_762  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_963 -> m65_777  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_964 -> m65_790  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_965 -> m65_801  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_966 -> m65_815  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_967 -> m65_827  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_968 -> m65_843  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_969 -> m65_854  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_970 -> m65_869  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m65_971 -> m65_880  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m65_972 -> m65_895  [color=darkseagreen4, key=1, label=arrangeSql, style=dashed];
m67_0 -> m67_1  [key=0, style=solid];
m67_1 -> m67_0  [color=blue, key=0, style=bold];
m69_35 -> m69_36  [color=red, key=0, style=solid];
m69_36 -> m69_37  [color=red, key=0, style=solid];
m69_36 -> m69_38  [color=red, key=2, style=dotted];
m69_36 -> m69_29  [color=red, key=2, style=dotted];
m69_37 -> m69_35  [color=blue, key=0, style=bold];
m69_24 -> m69_53  [key=0, style=solid];
m69_53 -> m69_54  [key=0, style=solid];
m69_53 -> m69_29  [key=2, style=dotted];
m69_54 -> m69_55  [key=0, style=solid];
m69_54 -> m69_57  [key=2, style=dotted];
m69_54 -> m69_58  [key=2, style=dotted];
m69_55 -> m69_56  [key=0, style=solid];
m69_56 -> m69_24  [color=blue, key=0, style=bold];
m69_27 -> m69_59  [key=0, style=solid];
m69_27 -> m69_17  [color=darkorchid, key=3, label="Parameter variable string resourceName", style=bold];
m69_59 -> m69_60  [key=0, style=solid];
m69_59 -> m69_63  [key=2, style=dotted];
m69_60 -> m69_61  [key=0, style=solid];
m69_60 -> m69_64  [key=2, style=dotted];
m69_61 -> m69_62  [key=0, style=solid];
m69_61 -> m69_65  [key=2, style=dotted];
m69_62 -> m69_27  [color=blue, key=0, style=bold];
m69_31 -> m69_32  [key=0, style=solid];
m69_32 -> m69_33  [key=0, style=solid];
m69_32 -> m69_34  [key=2, style=dotted];
m69_32 -> m69_29  [key=2, style=dotted];
m69_33 -> m69_31  [color=blue, key=0, style=bold];
m69_2 -> m69_3  [key=0, style=solid];
m69_2 -> m69_5  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m69_2 -> m69_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m69_2 -> m69_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m69_2 -> m69_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m69_3 -> m69_4  [key=0, style=solid];
m69_3 -> m69_5  [key=0, style=solid];
m69_5 -> m69_6  [key=0, style=solid];
m69_5 -> m69_7  [key=0, style=solid];
m69_7 -> m69_8  [key=0, style=solid];
m69_8 -> m69_9  [key=0, style=solid];
m69_9 -> m69_10  [key=0, style=solid];
m69_9 -> m69_11  [key=0, style=solid];
m69_4 -> m69_11  [key=0, style=solid];
m69_4 -> m69_12  [key=2, style=dotted];
m69_6 -> m69_11  [key=0, style=solid];
m69_6 -> m69_12  [key=2, style=dotted];
m69_10 -> m69_11  [key=0, style=solid];
m69_10 -> m69_13  [key=2, style=dotted];
m69_11 -> m69_2  [color=blue, key=0, style=bold];
m69_39 -> m69_40  [key=0, style=solid];
m69_39 -> m69_41  [color=crimson, key=0, style=bold];
m69_39 -> m69_42  [color=crimson, key=0, style=bold];
m69_40 -> m69_41  [key=0, style=solid];
m69_40 -> m69_44  [key=2, style=dotted];
m69_41 -> m69_42  [key=0, style=solid];
m69_41 -> m69_45  [key=2, style=dotted];
m69_42 -> m69_43  [key=0, style=solid];
m69_42 -> m69_46  [key=2, style=dotted];
m69_43 -> m69_39  [color=blue, key=0, style=bold];
m69_0 -> m69_1  [key=0, style=solid];
m69_1 -> m69_0  [color=blue, key=0, style=bold];
m69_29 -> m69_47  [key=0, style=solid];
m69_47 -> m69_48  [key=0, style=solid];
m69_47 -> m69_51  [key=2, style=dotted];
m69_47 -> m69_49  [color=darkseagreen4, key=1, label=connection, style=dashed];
m69_48 -> m69_49  [key=0, style=solid];
m69_48 -> m69_52  [key=2, style=dotted];
m69_49 -> m69_50  [key=0, style=solid];
m69_50 -> m69_29  [color=blue, key=0, style=bold];
m69_13 -> m69_14  [key=0, style=solid];
m69_14 -> m69_15  [key=0, style=solid];
m69_14 -> m69_23  [key=2, style=dotted];
m69_15 -> m69_16  [key=0, style=solid];
m69_15 -> m69_17  [key=0, style=solid];
m69_15 -> m69_24  [key=2, style=dotted];
m69_16 -> m69_22  [key=0, style=solid];
m69_16 -> m69_25  [key=2, style=dotted];
m69_17 -> m69_18  [key=0, style=solid];
m69_17 -> m69_26  [key=2, style=dotted];
m69_17 -> m69_27  [key=2, style=dotted];
m69_18 -> m69_19  [key=0, style=solid];
m69_18 -> m69_28  [key=2, style=dotted];
m69_18 -> m69_18  [color=darkseagreen4, key=1, label=script, style=dashed];
m69_18 -> m69_20  [color=darkseagreen4, key=1, label=script, style=dashed];
m69_19 -> m69_20  [key=0, style=solid];
m69_19 -> m69_29  [key=2, style=dotted];
m69_20 -> m69_21  [key=0, style=solid];
m69_20 -> m69_30  [key=2, style=dotted];
m69_21 -> m69_22  [key=0, style=solid];
m69_21 -> m69_23  [key=2, style=dotted];
m69_22 -> m69_13  [color=blue, key=0, style=bold];
m69_66 -> m69_7  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_8  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_10  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_15  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_19  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_32  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_36  [color=red, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_40  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_41  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_42  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m69_66 -> m69_53  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m70_0 -> m70_1  [color=green, key=0, style=solid];
m70_1 -> m70_2  [color=green, key=0, style=solid];
m70_1 -> m70_3  [color=green, key=2, style=dotted];
m70_2 -> m70_0  [color=blue, key=0, style=bold];
m70_7 -> m70_10  [key=0, style=solid];
m70_10 -> m70_11  [key=0, style=solid];
m70_10 -> m70_12  [key=2, style=dotted];
m70_11 -> m70_7  [color=blue, key=0, style=bold];
m70_12 -> m70_13  [key=0, style=solid];
m70_12 -> m70_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m70_12 -> m70_16  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m70_12 -> m70_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_13 -> m70_14  [key=0, style=solid];
m70_13 -> m70_15  [key=0, style=solid];
m70_15 -> m70_16  [key=0, style=solid];
m70_15 -> m70_19  [key=2, style=dotted];
m70_16 -> m70_17  [key=0, style=solid];
m70_16 -> m70_20  [key=2, style=dotted];
m70_16 -> m70_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_14 -> m70_17  [key=0, style=solid];
m70_14 -> m70_18  [key=2, style=dotted];
m70_17 -> m70_12  [color=blue, key=0, style=bold];
m70_4 -> m70_5  [key=0, style=solid];
m70_5 -> m70_7  [key=2, style=dotted];
m70_5 -> m70_6  [key=0, style=solid];
m70_6 -> m70_4  [color=blue, key=0, style=bold];
m70_3 -> m70_8  [key=0, style=solid];
m70_8 -> m70_9  [key=0, style=solid];
m70_8 -> m70_7  [key=2, style=dotted];
m70_9 -> m70_3  [color=blue, key=0, style=bold];
m70_21 -> m70_22  [key=0, style=solid];
m70_22 -> m70_23  [key=0, style=solid];
m70_22 -> m70_24  [key=2, style=dotted];
m70_23 -> m70_21  [color=blue, key=0, style=bold];
m70_25 -> m70_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m70_26 -> m70_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m70_27 -> m70_22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m71_28 -> m71_29  [color=green, key=0, style=solid];
m71_28 -> m71_32  [color=green, key=1, label=string, style=dashed];
m71_29 -> m71_30  [color=green, key=0, style=solid];
m71_29 -> m71_9  [color=green, key=2, style=dotted];
m71_29 -> m71_31  [color=green, key=1, label="lambda expression", style=dashed];
m71_30 -> m71_28  [color=blue, key=0, style=bold];
m71_15 -> m71_16  [color=green, key=0, style=solid];
m71_15 -> m71_19  [color=green, key=1, label=string, style=dashed];
m71_16 -> m71_17  [color=green, key=0, style=solid];
m71_16 -> m71_9  [color=green, key=2, style=dotted];
m71_16 -> m71_18  [color=green, key=1, label="lambda expression", style=dashed];
m71_17 -> m71_15  [color=blue, key=0, style=bold];
m71_6 -> m71_7  [color=green, key=0, style=solid];
m71_6 -> m71_11  [color=green, key=1, label=string, style=dashed];
m71_7 -> m71_8  [color=green, key=0, style=solid];
m71_7 -> m71_9  [color=green, key=2, style=dotted];
m71_7 -> m71_10  [color=green, key=1, label="lambda expression", style=dashed];
m71_8 -> m71_6  [color=blue, key=0, style=bold];
m71_31 -> m71_32  [color=green, key=0, style=solid];
m71_10 -> m71_11  [color=green, key=0, style=solid];
m71_11 -> m71_12  [color=green, key=0, style=solid];
m71_11 -> m71_13  [color=green, key=2, style=dotted];
m71_11 -> m71_14  [color=green, key=2, style=dotted];
m71_12 -> m71_10  [color=blue, key=0, style=bold];
m71_18 -> m71_19  [color=green, key=0, style=solid];
m71_19 -> m71_20  [color=green, key=0, style=solid];
m71_19 -> m71_14  [color=green, key=2, style=dotted];
m71_20 -> m71_18  [color=blue, key=0, style=bold];
m71_24 -> m71_25  [color=green, key=0, style=solid];
m71_25 -> m71_26  [color=green, key=0, style=solid];
m71_25 -> m71_27  [color=green, key=2, style=dotted];
m71_25 -> m71_14  [color=green, key=2, style=dotted];
m71_26 -> m71_24  [color=blue, key=0, style=bold];
m71_32 -> m71_33  [color=green, key=0, style=solid];
m71_32 -> m71_27  [color=green, key=2, style=dotted];
m71_32 -> m71_14  [color=green, key=2, style=dotted];
m71_33 -> m71_31  [color=blue, key=0, style=bold];
m71_0 -> m71_1  [color=green, key=0, style=solid];
m71_0 -> m71_3  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction", style=dashed];
m71_1 -> m71_2  [color=green, key=0, style=solid];
m71_1 -> m71_3  [color=green, key=0, style=solid];
m71_2 -> m71_4  [color=green, key=0, style=solid];
m71_2 -> m71_5  [color=green, key=2, style=dotted];
m71_3 -> m71_4  [color=green, key=0, style=solid];
m71_4 -> m71_0  [color=blue, key=0, style=bold];
m71_21 -> m71_22  [color=green, key=0, style=solid];
m71_21 -> m71_25  [color=green, key=1, label=string, style=dashed];
m71_22 -> m71_23  [color=green, key=0, style=solid];
m71_22 -> m71_9  [color=green, key=2, style=dotted];
m71_22 -> m71_24  [color=green, key=1, label="lambda expression", style=dashed];
m71_23 -> m71_21  [color=blue, key=0, style=bold];
m71_34 -> m71_3  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m71_34 -> m71_7  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m71_34 -> m71_16  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m71_34 -> m71_22  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m71_34 -> m71_29  [color=green, key=1, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyJob", style=dashed];
m71_35 -> m71_11  [color=green, key=1, label=string, style=dashed];
m71_36 -> m71_11  [color=green, key=1, label="System.TimeSpan", style=dashed];
m71_37 -> m71_19  [color=green, key=1, label=string, style=dashed];
m71_38 -> m71_25  [color=green, key=1, label=string, style=dashed];
m71_39 -> m71_25  [color=green, key=1, label=string, style=dashed];
m71_40 -> m71_25  [color=green, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m71_41 -> m71_32  [color=green, key=1, label=string, style=dashed];
m71_42 -> m71_32  [color=green, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
m74_34 -> m74_35  [key=0, style=solid];
m74_35 -> m74_32  [key=2, style=dotted];
m74_35 -> m74_36  [key=0, style=solid];
m74_35 -> m74_37  [key=2, style=dotted];
m74_36 -> m74_34  [color=blue, key=0, style=bold];
m74_29 -> m74_30  [key=0, style=solid];
m74_30 -> m74_13  [color=green, key=3, label="Property variable SqlConnection Connection", style=bold];
m74_30 -> m74_31  [key=0, style=solid];
m74_30 -> m74_32  [key=2, style=dotted];
m74_30 -> m74_33  [key=2, style=dotted];
m74_31 -> m74_29  [color=blue, key=0, style=bold];
m74_10 -> m74_11  [color=green, key=0, style=solid];
m74_11 -> m74_12  [color=green, key=0, style=solid];
m74_11 -> m74_15  [color=green, key=2, style=dotted];
m74_11 -> m74_5  [color=green, key=2, style=dotted];
m74_12 -> m74_13  [color=green, key=0, style=solid];
m74_12 -> m74_6  [color=green, key=2, style=dotted];
m74_13 -> m74_14  [color=green, key=0, style=solid];
m74_13 -> m74_7  [color=green, key=2, style=dotted];
m74_13 -> m74_8  [color=green, key=2, style=dotted];
m74_13 -> m74_9  [color=green, key=2, style=dotted];
m74_13 -> m74_19  [color=green, key=3, label="Field variable SqlConnection _connection", style=bold];
m74_14 -> m74_10  [color=blue, key=0, style=bold];
m74_0 -> m74_1  [color=green, key=0, style=solid];
m74_1 -> m74_2  [color=green, key=0, style=solid];
m74_1 -> m74_5  [color=green, key=2, style=dotted];
m74_2 -> m74_3  [color=green, key=0, style=solid];
m74_2 -> m74_6  [color=green, key=2, style=dotted];
m74_3 -> m74_4  [color=green, key=0, style=solid];
m74_3 -> m74_7  [color=green, key=2, style=dotted];
m74_3 -> m74_8  [color=green, key=2, style=dotted];
m74_3 -> m74_9  [color=green, key=2, style=dotted];
m74_4 -> m74_0  [color=blue, key=0, style=bold];
m74_16 -> m74_17  [color=green, key=0, style=solid];
m74_19 -> m74_20  [color=green, key=0, style=solid];
m74_19 -> m74_21  [color=green, key=2, style=dotted];
m74_19 -> m74_8  [color=green, key=2, style=dotted];
m74_19 -> m74_9  [color=green, key=2, style=dotted];
m74_17 -> m74_18  [color=green, key=0, style=solid];
m74_17 -> m74_5  [color=green, key=2, style=dotted];
m74_18 -> m74_19  [color=green, key=0, style=solid];
m74_18 -> m74_6  [color=green, key=2, style=dotted];
m74_20 -> m74_16  [color=blue, key=0, style=bold];
m77_49 -> m77_50  [key=0, style=solid];
m77_50 -> m77_51  [key=0, style=solid];
m77_50 -> m77_42  [key=2, style=dotted];
m77_51 -> m77_49  [color=blue, key=0, style=bold];
m77_16 -> m77_17  [key=0, style=solid];
m77_17 -> m77_18  [key=0, style=solid];
m77_17 -> m77_19  [key=2, style=dotted];
m77_18 -> m77_16  [color=blue, key=0, style=bold];
m77_55 -> m77_56  [key=0, style=solid];
m77_56 -> m77_56  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m77_56 -> m77_57  [key=0, style=solid];
m77_56 -> m77_58  [key=2, style=dotted];
m77_56 -> m77_38  [key=2, style=dotted];
m77_56 -> m77_42  [key=2, style=dotted];
m77_57 -> m77_55  [color=blue, key=0, style=bold];
m77_0 -> m77_1  [key=0, style=solid];
m77_0 -> m77_4  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorage", style=dashed];
m77_2 -> m77_3  [color=green, key=0, style=solid];
m77_2 -> m77_6  [color=green, key=2, style=dotted];
m77_1 -> m77_2  [color=green, key=0, style=solid];
m77_1 -> m77_0  [color=blue, key=0, style=bold];
m77_3 -> m77_4  [color=green, key=0, style=solid];
m77_3 -> m77_7  [color=green, key=2, style=dotted];
m77_4 -> m77_5  [key=0, style=solid];
m77_5 -> m77_0  [color=blue, key=0, style=bold];
m77_52 -> m77_53  [key=0, style=solid];
m77_53 -> m77_54  [key=0, style=solid];
m77_53 -> m77_42  [key=2, style=dotted];
m77_54 -> m77_52  [color=blue, key=0, style=bold];
m77_25 -> m77_27  [color=darkseagreen4, key=1, label="HangFire.Storage.InvocationData", style=dashed];
m77_25 -> m77_26  [key=0, style=solid];
m77_25 -> m77_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m77_25 -> m77_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m77_25 -> m77_31  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m77_27 -> m77_28  [key=0, style=solid];
m77_27 -> m77_37  [key=2, style=dotted];
m77_27 -> m77_38  [key=2, style=dotted];
m77_27 -> m77_39  [key=2, style=dotted];
m77_27 -> m77_40  [key=2, style=dotted];
m77_27 -> m77_41  [key=2, style=dotted];
m77_27 -> m77_32  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m77_27 -> m77_35  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m77_34 -> m77_35  [key=0, style=solid];
m77_34 -> m77_42  [key=2, style=dotted];
m77_26 -> m77_27  [key=0, style=solid];
m77_26 -> m77_26  [color=darkorchid, key=3, label="Local variable string createJobSql", style=bold];
m77_28 -> m77_29  [key=0, style=solid];
m77_28 -> m77_35  [key=0, style=solid];
m77_32 -> m77_32  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m77_32 -> m77_31  [key=0, style=solid];
m77_35 -> m77_36  [key=0, style=solid];
m77_29 -> m77_34  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m77_29 -> m77_32  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m77_29 -> m77_30  [key=0, style=solid];
m77_33 -> m77_34  [key=0, style=solid];
m77_33 -> m77_33  [color=darkorchid, key=3, label="Local variable string insertParameterSql", style=bold];
m77_31 -> m77_32  [key=0, style=solid];
m77_31 -> m77_33  [key=0, style=solid];
m77_30 -> m77_32  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m77_30 -> m77_31  [key=0, style=solid];
m77_30 -> m77_30  [color=darkorchid, key=3, label="Local variable int parameterIndex", style=bold];
m77_36 -> m77_25  [color=blue, key=0, style=bold];
m77_43 -> m77_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m77_43 -> m77_44  [key=0, style=solid];
m77_45 -> m77_46  [key=0, style=solid];
m77_45 -> m77_37  [key=2, style=dotted];
m77_45 -> m77_42  [key=2, style=dotted];
m77_44 -> m77_45  [key=0, style=solid];
m77_44 -> m77_47  [key=2, style=dotted];
m77_44 -> m77_48  [key=2, style=dotted];
m77_46 -> m77_43  [color=blue, key=0, style=bold];
m77_15 -> m77_0  [color=darkorchid, key=3, label="Field variable SqlConnection _connection", style=bold];
m77_8 -> m77_9  [key=0, style=solid];
m77_9 -> m77_10  [key=0, style=solid];
m77_9 -> m77_11  [key=2, style=dotted];
m77_10 -> m77_8  [color=blue, key=0, style=bold];
m77_20 -> m77_21  [color=green, key=0, style=solid];
m77_21 -> m77_22  [color=green, key=0, style=solid];
m77_21 -> m77_23  [color=green, key=2, style=dotted];
m77_21 -> m77_24  [color=green, key=2, style=dotted];
m77_22 -> m77_20  [color=blue, key=0, style=bold];
m77_12 -> m77_13  [color=green, key=0, style=solid];
m77_13 -> m77_14  [color=green, key=0, style=solid];
m77_13 -> m77_15  [color=green, key=2, style=dotted];
m77_14 -> m77_12  [color=blue, key=0, style=bold];
m77_59 -> m77_2  [color=green, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_3  [color=green, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_13  [color=green, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_21  [color=green, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_4  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_9  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_27  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_45  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_50  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_53  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m77_59 -> m77_56  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStorageConnection", style=dashed];
m78_0 -> m78_1  [key=0, style=solid];
m78_1 -> m78_2  [key=0, style=solid];
m78_1 -> m78_17  [key=2, style=dotted];
m78_1 -> m78_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_2 -> m78_3  [key=0, style=solid];
m78_2 -> m78_18  [key=2, style=dotted];
m78_2 -> m78_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_3 -> m78_4  [key=0, style=solid];
m78_3 -> m78_18  [key=2, style=dotted];
m78_3 -> m78_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_4 -> m78_5  [key=0, style=solid];
m78_4 -> m78_18  [key=2, style=dotted];
m78_4 -> m78_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_5 -> m78_6  [key=0, style=solid];
m78_5 -> m78_18  [key=2, style=dotted];
m78_5 -> m78_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_6 -> m78_7  [key=0, style=solid];
m78_6 -> m78_18  [key=2, style=dotted];
m78_6 -> m78_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_7 -> m78_8  [key=0, style=solid];
m78_7 -> m78_18  [key=2, style=dotted];
m78_7 -> m78_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_8 -> m78_9  [key=0, style=solid];
m78_8 -> m78_18  [key=2, style=dotted];
m78_8 -> m78_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_9 -> m78_10  [key=0, style=solid];
m78_9 -> m78_18  [key=2, style=dotted];
m78_9 -> m78_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_10 -> m78_11  [key=0, style=solid];
m78_10 -> m78_18  [key=2, style=dotted];
m78_10 -> m78_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_11 -> m78_12  [key=0, style=solid];
m78_11 -> m78_18  [key=2, style=dotted];
m78_11 -> m78_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_12 -> m78_13  [key=0, style=solid];
m78_12 -> m78_18  [key=2, style=dotted];
m78_12 -> m78_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_13 -> m78_14  [key=0, style=solid];
m78_13 -> m78_18  [key=2, style=dotted];
m78_13 -> m78_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_14 -> m78_15  [key=0, style=solid];
m78_14 -> m78_18  [key=2, style=dotted];
m78_14 -> m78_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_15 -> m78_16  [key=0, style=solid];
m78_15 -> m78_18  [key=2, style=dotted];
m78_15 -> m78_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m78_16 -> m78_0  [color=blue, key=0, style=bold];
m78_90 -> m78_91  [key=0, style=solid];
m78_91 -> m78_92  [key=0, style=solid];
m78_92 -> m78_90  [color=blue, key=0, style=bold];
m78_128 -> m78_129  [key=0, style=solid];
m78_129 -> m78_130  [key=0, style=solid];
m78_129 -> m78_131  [key=2, style=dotted];
m78_130 -> m78_128  [color=blue, key=0, style=bold];
m78_109 -> m78_110  [key=0, style=solid];
m78_109 -> m78_118  [color=darkseagreen4, key=1, label=string, style=dashed];
m78_110 -> m78_111  [key=0, style=solid];
m78_110 -> m78_112  [key=0, style=solid];
m78_110 -> m78_123  [key=2, style=dotted];
m78_118 -> m78_119  [key=0, style=solid];
m78_118 -> m78_127  [key=2, style=dotted];
m78_118 -> m78_120  [color=darkseagreen4, key=1, label=match, style=dashed];
m78_111 -> m78_122  [key=0, style=solid];
m78_111 -> m78_124  [key=2, style=dotted];
m78_112 -> m78_113  [key=0, style=solid];
m78_112 -> m78_121  [key=0, style=solid];
m78_112 -> m78_120  [color=darkseagreen4, key=1, label=pathHandlerFactory, style=dashed];
m78_113 -> m78_114  [key=0, style=solid];
m78_113 -> m78_115  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m78_113 -> m78_116  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m78_113 -> m78_117  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m78_113 -> m78_118  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m78_121 -> m78_122  [key=0, style=solid];
m78_120 -> m78_122  [key=0, style=solid];
m78_120 -> m78_50  [key=2, style=dotted];
m78_114 -> m78_115  [key=0, style=solid];
m78_114 -> m78_116  [key=0, style=solid];
m78_114 -> m78_125  [key=2, style=dotted];
m78_115 -> m78_116  [key=0, style=solid];
m78_115 -> m78_115  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m78_115 -> m78_117  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m78_115 -> m78_118  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m78_116 -> m78_117  [key=0, style=solid];
m78_116 -> m78_118  [key=0, style=solid];
m78_116 -> m78_126  [key=2, style=dotted];
m78_117 -> m78_118  [key=0, style=solid];
m78_117 -> m78_117  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m78_119 -> m78_120  [key=0, style=solid];
m78_119 -> m78_112  [key=0, style=solid];
m78_122 -> m78_109  [color=blue, key=0, style=bold];
m78_66 -> m78_67  [key=0, style=solid];
m78_19 -> m78_20  [key=0, style=solid];
m78_23 -> m78_24  [key=0, style=solid];
m78_27 -> m78_28  [key=0, style=solid];
m78_31 -> m78_32  [key=0, style=solid];
m78_35 -> m78_36  [key=0, style=solid];
m78_39 -> m78_40  [key=0, style=solid];
m78_43 -> m78_44  [key=0, style=solid];
m78_43 -> m78_48  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m78_51 -> m78_52  [key=0, style=solid];
m78_55 -> m78_56  [key=0, style=solid];
m78_59 -> m78_60  [key=0, style=solid];
m78_63 -> m78_64  [key=0, style=solid];
m78_63 -> m78_67  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m78_69 -> m78_70  [key=0, style=solid];
m78_73 -> m78_74  [key=0, style=solid];
m78_77 -> m78_78  [key=0, style=solid];
m78_81 -> m78_82  [key=0, style=solid];
m78_20 -> m78_21  [key=0, style=solid];
m78_20 -> m78_22  [key=2, style=dotted];
m78_21 -> m78_19  [color=blue, key=0, style=bold];
m78_24 -> m78_25  [key=0, style=solid];
m78_24 -> m78_26  [key=2, style=dotted];
m78_25 -> m78_23  [color=blue, key=0, style=bold];
m78_28 -> m78_29  [key=0, style=solid];
m78_28 -> m78_30  [key=2, style=dotted];
m78_29 -> m78_27  [color=blue, key=0, style=bold];
m78_32 -> m78_33  [key=0, style=solid];
m78_32 -> m78_34  [key=2, style=dotted];
m78_33 -> m78_31  [color=blue, key=0, style=bold];
m78_36 -> m78_37  [key=0, style=solid];
m78_36 -> m78_38  [key=2, style=dotted];
m78_37 -> m78_35  [color=blue, key=0, style=bold];
m78_40 -> m78_41  [key=0, style=solid];
m78_40 -> m78_42  [key=2, style=dotted];
m78_41 -> m78_39  [color=blue, key=0, style=bold];
m78_44 -> m78_45  [key=0, style=solid];
m78_44 -> m78_46  [key=2, style=dotted];
m78_48 -> m78_49  [key=0, style=solid];
m78_48 -> m78_50  [key=2, style=dotted];
m78_45 -> m78_43  [color=blue, key=0, style=bold];
m78_47 -> m78_48  [key=0, style=solid];
m78_49 -> m78_47  [color=blue, key=0, style=bold];
m78_52 -> m78_53  [key=0, style=solid];
m78_52 -> m78_54  [key=2, style=dotted];
m78_53 -> m78_51  [color=blue, key=0, style=bold];
m78_56 -> m78_57  [key=0, style=solid];
m78_56 -> m78_58  [key=2, style=dotted];
m78_57 -> m78_55  [color=blue, key=0, style=bold];
m78_60 -> m78_61  [key=0, style=solid];
m78_60 -> m78_62  [key=2, style=dotted];
m78_61 -> m78_59  [color=blue, key=0, style=bold];
m78_64 -> m78_65  [key=0, style=solid];
m78_64 -> m78_46  [key=2, style=dotted];
m78_67 -> m78_68  [key=0, style=solid];
m78_67 -> m78_50  [key=2, style=dotted];
m78_65 -> m78_63  [color=blue, key=0, style=bold];
m78_68 -> m78_66  [color=blue, key=0, style=bold];
m78_70 -> m78_71  [key=0, style=solid];
m78_70 -> m78_72  [key=2, style=dotted];
m78_71 -> m78_69  [color=blue, key=0, style=bold];
m78_74 -> m78_75  [key=0, style=solid];
m78_74 -> m78_76  [key=2, style=dotted];
m78_75 -> m78_73  [color=blue, key=0, style=bold];
m78_78 -> m78_79  [key=0, style=solid];
m78_78 -> m78_80  [key=2, style=dotted];
m78_79 -> m78_77  [color=blue, key=0, style=bold];
m78_82 -> m78_83  [key=0, style=solid];
m78_82 -> m78_84  [key=2, style=dotted];
m78_83 -> m78_81  [color=blue, key=0, style=bold];
m78_93 -> m78_94  [key=0, style=solid];
m78_93 -> m78_96  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m78_93 -> m78_97  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m78_94 -> m78_95  [key=0, style=solid];
m78_94 -> m78_96  [key=0, style=solid];
m78_96 -> m78_97  [key=0, style=solid];
m78_96 -> m78_105  [key=2, style=dotted];
m78_97 -> m78_98  [key=0, style=solid];
m78_95 -> m78_103  [key=0, style=solid];
m78_95 -> m78_104  [key=2, style=dotted];
m78_98 -> m78_99  [key=0, style=solid];
m78_98 -> m78_106  [key=2, style=dotted];
m78_99 -> m78_100  [key=0, style=solid];
m78_99 -> m78_107  [key=2, style=dotted];
m78_99 -> m78_102  [color=darkseagreen4, key=1, label=handler, style=dashed];
m78_100 -> m78_101  [key=0, style=solid];
m78_100 -> m78_102  [key=0, style=solid];
m78_102 -> m78_103  [key=0, style=solid];
m78_101 -> m78_103  [key=0, style=solid];
m78_101 -> m78_108  [key=2, style=dotted];
m78_103 -> m78_93  [color=blue, key=0, style=bold];
m78_132 -> m78_133  [key=0, style=solid];
m78_133 -> m78_134  [key=0, style=solid];
m78_133 -> m78_128  [key=2, style=dotted];
m78_133 -> m78_131  [key=2, style=dotted];
m78_134 -> m78_132  [color=blue, key=0, style=bold];
m78_85 -> m78_86  [key=0, style=solid];
m78_86 -> m78_87  [key=0, style=solid];
m78_86 -> m78_88  [key=2, style=dotted];
m78_86 -> m78_89  [key=2, style=dotted];
m78_87 -> m78_85  [color=blue, key=0, style=bold];
m78_135 -> m78_136  [key=0, style=solid];
m78_136 -> m78_135  [color=blue, key=0, style=bold];
m78_137 -> m78_48  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m78_138 -> m78_67  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m78_139 -> m78_99  [color=darkseagreen4, key=1, label="HangFire.Web.HangFirePageFactory", style=dashed];
m79_3 -> m79_4  [key=0, style=solid];
m79_4 -> m79_5  [key=0, style=solid];
m79_4 -> m79_6  [key=2, style=dotted];
m79_4 -> m79_7  [key=2, style=dotted];
m79_5 -> m79_3  [color=blue, key=0, style=bold];
m79_0 -> m79_1  [key=0, style=solid];
m79_1 -> m79_2  [key=0, style=solid];
m79_2 -> m79_0  [color=blue, key=0, style=bold];
m79_8 -> m79_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredSets", style=dashed];
m79_8 -> m79_4  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlStoredSets", style=dashed];
m80_7 -> m80_8  [color=red, key=0, style=solid];
m80_8 -> m80_9  [color=red, key=0, style=solid];
m80_8 -> m80_10  [color=red, key=2, style=dotted];
m80_9 -> m80_7  [color=blue, key=0, style=bold];
m80_11 -> m80_12  [color=red, key=0, style=solid];
m80_12 -> m80_13  [color=red, key=0, style=solid];
m80_13 -> m80_11  [color=blue, key=0, style=bold];
m80_0 -> m80_1  [color=red, key=0, style=solid];
m80_1 -> m80_2  [color=red, key=0, style=solid];
m80_1 -> m80_3  [color=red, key=2, style=dotted];
m80_1 -> m80_4  [color=red, key=2, style=dotted];
m80_1 -> m80_5  [color=red, key=2, style=dotted];
m80_1 -> m80_6  [color=red, key=2, style=dotted];
m80_2 -> m80_0  [color=blue, key=0, style=bold];
m81_44 -> m81_45  [key=0, style=solid];
m81_45 -> m81_46  [key=0, style=solid];
m81_45 -> m81_53  [key=2, style=dotted];
m81_46 -> m81_47  [key=0, style=solid];
m81_46 -> m81_28  [key=2, style=dotted];
m81_47 -> m81_48  [key=0, style=solid];
m81_47 -> m81_54  [key=2, style=dotted];
m81_48 -> m81_49  [key=0, style=solid];
m81_48 -> m81_37  [key=2, style=dotted];
m81_49 -> m81_50  [key=0, style=solid];
m81_49 -> m81_52  [key=0, style=solid];
m81_49 -> m81_55  [key=2, style=dotted];
m81_50 -> m81_51  [key=0, style=solid];
m81_51 -> m81_52  [key=0, style=solid];
m81_51 -> m81_56  [key=2, style=dotted];
m81_52 -> m81_44  [color=blue, key=0, style=bold];
m81_22 -> m81_23  [key=0, style=solid];
m81_23 -> m81_24  [key=0, style=solid];
m81_23 -> m81_26  [key=2, style=dotted];
m81_24 -> m81_25  [key=0, style=solid];
m81_24 -> m81_27  [key=2, style=dotted];
m81_25 -> m81_22  [color=blue, key=0, style=bold];
m81_37 -> m81_38  [key=0, style=solid];
m81_38 -> m81_39  [key=0, style=solid];
m81_38 -> m81_42  [key=2, style=dotted];
m81_39 -> m81_40  [key=0, style=solid];
m81_39 -> m81_42  [key=2, style=dotted];
m81_40 -> m81_41  [key=0, style=solid];
m81_40 -> m81_43  [key=2, style=dotted];
m81_41 -> m81_37  [color=blue, key=0, style=bold];
m81_0 -> m81_1  [key=0, style=solid];
m81_0 -> m81_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m81_0 -> m81_3  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m81_0 -> m81_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m81_0 -> m81_6  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m81_0 -> m81_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m81_0 -> m81_9  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m81_1 -> m81_2  [key=0, style=solid];
m81_2 -> m81_3  [key=0, style=solid];
m81_3 -> m81_4  [key=0, style=solid];
m81_4 -> m81_5  [key=0, style=solid];
m81_4 -> m81_6  [key=0, style=solid];
m81_6 -> m81_7  [key=0, style=solid];
m81_6 -> m81_8  [key=0, style=solid];
m81_6 -> m81_14  [key=2, style=dotted];
m81_6 -> m81_6  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m81_8 -> m81_9  [key=0, style=solid];
m81_8 -> m81_16  [key=2, style=dotted];
m81_8 -> m81_17  [key=2, style=dotted];
m81_9 -> m81_10  [key=0, style=solid];
m81_9 -> m81_18  [key=2, style=dotted];
m81_9 -> m81_19  [key=2, style=dotted];
m81_5 -> m81_12  [key=0, style=solid];
m81_5 -> m81_13  [key=2, style=dotted];
m81_7 -> m81_12  [key=0, style=solid];
m81_7 -> m81_15  [key=2, style=dotted];
m81_10 -> m81_11  [key=0, style=solid];
m81_10 -> m81_20  [key=2, style=dotted];
m81_11 -> m81_12  [key=0, style=solid];
m81_11 -> m81_21  [key=2, style=dotted];
m81_12 -> m81_0  [color=blue, key=0, style=bold];
m81_53 -> m81_57  [key=0, style=solid];
m81_57 -> m81_58  [key=0, style=solid];
m81_57 -> m81_65  [key=2, style=dotted];
m81_57 -> m81_59  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m81_57 -> m81_62  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m81_57 -> m81_63  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m81_58 -> m81_59  [key=0, style=solid];
m81_58 -> m81_66  [key=2, style=dotted];
m81_58 -> m81_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m81_59 -> m81_60  [key=0, style=solid];
m81_59 -> m81_66  [key=2, style=dotted];
m81_59 -> m81_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m81_62 -> m81_60  [key=0, style=solid];
m81_62 -> m81_66  [key=2, style=dotted];
m81_62 -> m81_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m81_63 -> m81_64  [key=0, style=solid];
m81_63 -> m81_67  [key=2, style=dotted];
m81_60 -> m81_61  [key=0, style=solid];
m81_60 -> m81_63  [key=0, style=solid];
m81_61 -> m81_62  [key=0, style=solid];
m81_61 -> m81_81  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m81_64 -> m81_53  [color=blue, key=0, style=bold];
m81_28 -> m81_29  [key=0, style=solid];
m81_29 -> m81_30  [key=0, style=solid];
m81_29 -> m81_33  [key=2, style=dotted];
m81_30 -> m81_31  [key=0, style=solid];
m81_30 -> m81_34  [key=2, style=dotted];
m81_30 -> m81_35  [key=2, style=dotted];
m81_31 -> m81_32  [key=0, style=solid];
m81_31 -> m81_34  [key=2, style=dotted];
m81_31 -> m81_36  [key=2, style=dotted];
m81_32 -> m81_28  [color=blue, key=0, style=bold];
m81_94 -> m81_95  [key=0, style=solid];
m81_94 -> m81_75  [key=2, style=dotted];
m81_94 -> m81_96  [key=2, style=dotted];
m81_68 -> m81_69  [key=0, style=solid];
m81_72 -> m81_73  [key=0, style=solid];
m81_81 -> m81_82  [key=0, style=solid];
m81_81 -> m81_75  [key=2, style=dotted];
m81_81 -> m81_83  [key=2, style=dotted];
m81_80 -> m81_81  [key=0, style=solid];
m81_69 -> m81_70  [key=0, style=solid];
m81_69 -> m81_71  [key=2, style=dotted];
m81_70 -> m81_68  [color=blue, key=0, style=bold];
m81_73 -> m81_74  [key=0, style=solid];
m81_73 -> m81_75  [key=2, style=dotted];
m81_73 -> m81_76  [key=2, style=dotted];
m81_73 -> m81_77  [key=2, style=dotted];
m81_73 -> m81_78  [key=2, style=dotted];
m81_73 -> m81_79  [key=2, style=dotted];
m81_74 -> m81_72  [color=blue, key=0, style=bold];
m81_82 -> m81_80  [color=blue, key=0, style=bold];
m81_89 -> m81_90  [key=0, style=solid];
m81_93 -> m81_94  [key=0, style=solid];
m81_90 -> m81_91  [key=0, style=solid];
m81_90 -> m81_92  [key=2, style=dotted];
m81_91 -> m81_89  [color=blue, key=0, style=bold];
m81_95 -> m81_93  [color=blue, key=0, style=bold];
m81_86 -> m81_87  [key=0, style=solid];
m81_86 -> m81_66  [key=2, style=dotted];
m81_86 -> m81_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m81_55 -> m81_84  [key=0, style=solid];
m81_84 -> m81_85  [key=0, style=solid];
m81_84 -> m81_65  [key=2, style=dotted];
m81_84 -> m81_86  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m81_84 -> m81_87  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m81_85 -> m81_86  [key=0, style=solid];
m81_85 -> m81_66  [key=2, style=dotted];
m81_85 -> m81_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m81_87 -> m81_88  [key=0, style=solid];
m81_87 -> m81_67  [key=2, style=dotted];
m81_88 -> m81_55  [color=blue, key=0, style=bold];
m81_97 -> m81_1  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_2  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_3  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_9  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_10  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_11  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_23  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_24  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_29  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_30  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_31  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_38  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_45  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_46  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_47  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_49  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_51  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_57  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_58  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_69  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_59  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_73  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_62  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_81  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_84  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_85  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_90  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_86  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_97 -> m81_94  [color=darkseagreen4, key=1, label="HangFire.Server.JobServer", style=dashed];
m81_98 -> m81_81  [color=darkseagreen4, key=1, label=queue1, style=dashed];
m82_7 -> m82_8  [key=0, style=solid];
m82_8 -> m82_9  [key=0, style=solid];
m82_8 -> m82_10  [key=2, style=dotted];
m82_9 -> m82_7  [color=blue, key=0, style=bold];
m82_11 -> m82_12  [key=0, style=solid];
m82_12 -> m82_13  [key=0, style=solid];
m82_13 -> m82_11  [color=blue, key=0, style=bold];
m82_0 -> m82_1  [key=0, style=solid];
m82_1 -> m82_2  [key=0, style=solid];
m82_1 -> m82_3  [key=2, style=dotted];
m82_1 -> m82_4  [key=2, style=dotted];
m82_1 -> m82_5  [key=2, style=dotted];
m82_1 -> m82_6  [key=2, style=dotted];
m82_2 -> m82_0  [color=blue, key=0, style=bold];
m83_30 -> m83_165  [key=0, style=solid];
m83_30 -> m83_31  [key=0, style=solid];
m83_165 -> m83_30  [color=blue, key=0, style=bold];
m83_26 -> m83_27  [key=0, style=solid];
m83_26 -> m83_24  [color=blue, key=0, style=bold];
m83_27 -> m83_26  [color=blue, key=0, style=bold];
m83_27 -> m83_28  [color=green, key=0, style=solid];
m83_16 -> m83_17  [key=0, style=solid];
m83_8 -> m83_9  [color=green, key=0, style=solid];
m83_8 -> m83_18  [color=green, key=2, style=dotted];
m83_9 -> m83_8  [color=blue, key=0, style=bold];
m83_9 -> m83_10  [color=green, key=0, style=solid];
m83_9 -> m83_13  [color=green, key=2, style=dotted];
m83_9 -> m83_19  [color=green, key=2, style=dotted];
m83_9 -> m83_14  [color=green, key=2, style=dotted];
m83_9 -> m83_31  [color=green, key=1, label="lambda expression", style=dashed];
m83_31 -> m83_30  [color=blue, key=0, style=bold];
m83_31 -> m83_32  [color=green, key=0, style=solid];
m83_19 -> m83_18  [color=blue, key=0, style=bold];
m83_45 -> m83_46  [key=0, style=solid];
m83_46 -> m83_34  [key=2, style=dotted];
m83_46 -> m83_47  [key=0, style=solid];
m83_46 -> m83_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_47 -> m83_40  [key=2, style=dotted];
m83_47 -> m83_48  [key=0, style=solid];
m83_48 -> m83_45  [color=blue, key=0, style=bold];
m83_100 -> m83_101  [color=green, key=0, style=solid];
m83_101 -> m83_102  [color=green, key=0, style=solid];
m83_101 -> m83_73  [color=green, key=2, style=dotted];
m83_101 -> m83_103  [color=green, key=1, label=client, style=dashed];
m83_101 -> m83_112  [color=green, key=1, label=client, style=dashed];
m83_102 -> m83_103  [color=green, key=0, style=solid];
m83_102 -> m83_13  [color=green, key=2, style=dotted];
m83_102 -> m83_34  [color=green, key=2, style=dotted];
m83_102 -> m83_108  [color=green, key=1, label="lambda expression", style=dashed];
m83_103 -> m83_34  [key=2, style=dotted];
m83_103 -> m83_104  [key=0, style=solid];
m83_103 -> m83_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_103 -> m83_105  [color=darkseagreen4, key=1, label=exception, style=dashed];
m83_105 -> m83_34  [key=2, style=dotted];
m83_105 -> m83_106  [key=0, style=solid];
m83_104 -> m83_105  [key=0, style=solid];
m83_104 -> m83_107  [key=2, style=dotted];
m83_106 -> m83_100  [color=blue, key=0, style=bold];
m83_11 -> m83_10  [color=blue, key=0, style=bold];
m83_14 -> m83_15  [key=0, style=solid];
m83_15 -> m83_14  [color=blue, key=0, style=bold];
m83_6 -> m83_7  [color=green, key=0, style=solid];
m83_6 -> m83_13  [color=green, key=2, style=dotted];
m83_6 -> m83_14  [color=green, key=2, style=dotted];
m83_6 -> m83_24  [color=green, key=1, label="lambda expression", style=dashed];
m83_7 -> m83_6  [color=blue, key=0, style=bold];
m83_7 -> m83_8  [color=green, key=0, style=solid];
m83_7 -> m83_17  [color=green, key=2, style=dotted];
m83_7 -> m83_27  [color=green, key=1, label="lambda expression", style=dashed];
m83_86 -> m83_87  [color=green, key=0, style=solid];
m83_87 -> m83_88  [color=green, key=0, style=solid];
m83_87 -> m83_73  [color=green, key=2, style=dotted];
m83_88 -> m83_35  [key=2, style=dotted];
m83_88 -> m83_89  [key=0, style=solid];
m83_89 -> m83_90  [key=0, style=solid];
m83_89 -> m83_91  [key=2, style=dotted];
m83_89 -> m83_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_90 -> m83_86  [color=blue, key=0, style=bold];
m83_36 -> m83_37  [key=0, style=solid];
m83_37 -> m83_34  [key=2, style=dotted];
m83_37 -> m83_38  [key=0, style=solid];
m83_37 -> m83_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_38 -> m83_40  [key=2, style=dotted];
m83_38 -> m83_39  [key=0, style=solid];
m83_39 -> m83_36  [color=blue, key=0, style=bold];
m83_68 -> m83_69  [color=green, key=0, style=solid];
m83_69 -> m83_70  [color=green, key=0, style=solid];
m83_69 -> m83_73  [color=green, key=2, style=dotted];
m83_69 -> m83_75  [color=green, key=1, label=client, style=dashed];
m83_70 -> m83_71  [color=green, key=0, style=solid];
m83_70 -> m83_34  [color=green, key=2, style=dotted];
m83_70 -> m83_74  [color=green, key=1, label="lambda expression", style=dashed];
m83_71 -> m83_72  [key=0, style=solid];
m83_71 -> m83_40  [key=2, style=dotted];
m83_72 -> m83_68  [color=blue, key=0, style=bold];
m83_59 -> m83_60  [color=green, key=0, style=solid];
m83_60 -> m83_61  [color=green, key=0, style=solid];
m83_60 -> m83_12  [color=green, key=2, style=dotted];
m83_61 -> m83_62  [color=green, key=0, style=solid];
m83_61 -> m83_63  [color=green, key=2, style=dotted];
m83_61 -> m83_64  [color=green, key=1, label="lambda expression", style=dashed];
m83_62 -> m83_59  [color=blue, key=0, style=bold];
m83_23 -> m83_22  [color=blue, key=0, style=bold];
m83_12 -> m83_13  [key=0, style=solid];
m83_13 -> m83_12  [color=blue, key=0, style=bold];
m83_155 -> m83_156  [key=0, style=solid];
m83_156 -> m83_13  [key=2, style=dotted];
m83_156 -> m83_14  [key=2, style=dotted];
m83_156 -> m83_157  [key=0, style=solid];
m83_156 -> m83_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_157 -> m83_73  [key=2, style=dotted];
m83_157 -> m83_158  [key=0, style=solid];
m83_158 -> m83_159  [key=0, style=solid];
m83_158 -> m83_122  [key=2, style=dotted];
m83_159 -> m83_160  [key=0, style=solid];
m83_159 -> m83_161  [key=2, style=dotted];
m83_160 -> m83_155  [color=blue, key=0, style=bold];
m83_52 -> m83_53  [key=0, style=solid];
m83_53 -> m83_34  [key=2, style=dotted];
m83_53 -> m83_54  [key=0, style=solid];
m83_53 -> m83_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_54 -> m83_40  [key=2, style=dotted];
m83_54 -> m83_55  [key=0, style=solid];
m83_55 -> m83_52  [color=blue, key=0, style=bold];
m83_132 -> m83_133  [key=0, style=solid];
m83_133 -> m83_73  [key=2, style=dotted];
m83_133 -> m83_134  [key=0, style=solid];
m83_134 -> m83_135  [key=0, style=solid];
m83_134 -> m83_122  [key=2, style=dotted];
m83_135 -> m83_136  [key=0, style=solid];
m83_135 -> m83_91  [key=2, style=dotted];
m83_135 -> m83_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_136 -> m83_132  [color=blue, key=0, style=bold];
m83_20 -> m83_21  [key=0, style=solid];
m83_21 -> m83_20  [color=blue, key=0, style=bold];
m83_21 -> m83_22  [key=0, style=solid];
m83_21 -> m83_23  [key=2, style=dotted];
m83_128 -> m83_129  [key=0, style=solid];
m83_24 -> m83_25  [color=green, key=0, style=solid];
m83_25 -> m83_26  [color=green, key=0, style=solid];
m83_25 -> m83_24  [color=blue, key=0, style=bold];
m83_28 -> m83_29  [color=green, key=0, style=solid];
m83_28 -> m83_30  [color=green, key=2, style=dotted];
m83_29 -> m83_27  [color=blue, key=0, style=bold];
m83_29 -> m83_28  [color=blue, key=0, style=bold];
m83_32 -> m83_33  [color=green, key=0, style=solid];
m83_32 -> m83_34  [color=green, key=2, style=dotted];
m83_32 -> m83_35  [color=green, key=2, style=dotted];
m83_33 -> m83_31  [color=blue, key=0, style=bold];
m83_64 -> m83_65  [color=green, key=0, style=solid];
m83_65 -> m83_66  [color=green, key=0, style=solid];
m83_65 -> m83_67  [color=green, key=2, style=dotted];
m83_66 -> m83_64  [color=blue, key=0, style=bold];
m83_75 -> m83_76  [color=green, key=0, style=solid];
m83_75 -> m83_35  [color=green, key=2, style=dotted];
m83_74 -> m83_75  [color=green, key=0, style=solid];
m83_76 -> m83_74  [color=blue, key=0, style=bold];
m83_112 -> m83_35  [key=2, style=dotted];
m83_112 -> m83_113  [key=0, style=solid];
m83_108 -> m83_109  [color=green, key=0, style=solid];
m83_109 -> m83_110  [color=green, key=0, style=solid];
m83_109 -> m83_34  [color=green, key=2, style=dotted];
m83_109 -> m83_35  [color=green, key=2, style=dotted];
m83_110 -> m83_108  [color=blue, key=0, style=bold];
m83_42 -> m83_44  [key=2, style=dotted];
m83_42 -> m83_43  [key=0, style=solid];
m83_50 -> m83_44  [key=2, style=dotted];
m83_50 -> m83_51  [key=0, style=solid];
m83_57 -> m83_44  [key=2, style=dotted];
m83_57 -> m83_58  [key=0, style=solid];
m83_83 -> m83_84  [key=0, style=solid];
m83_83 -> m83_85  [key=2, style=dotted];
m83_120 -> m83_121  [key=0, style=solid];
m83_120 -> m83_122  [key=2, style=dotted];
m83_138 -> m83_34  [key=2, style=dotted];
m83_138 -> m83_139  [key=0, style=solid];
m83_138 -> m83_122  [key=2, style=dotted];
m83_138 -> m83_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_141 -> m83_142  [key=0, style=solid];
m83_149 -> m83_34  [key=2, style=dotted];
m83_149 -> m83_150  [key=0, style=solid];
m83_149 -> m83_122  [key=2, style=dotted];
m83_149 -> m83_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_152 -> m83_153  [key=0, style=solid];
m83_152 -> m83_154  [key=2, style=dotted];
m83_93 -> m83_34  [key=2, style=dotted];
m83_93 -> m83_35  [key=2, style=dotted];
m83_93 -> m83_94  [key=0, style=solid];
m83_163 -> m83_34  [key=2, style=dotted];
m83_163 -> m83_164  [key=0, style=solid];
m83_163 -> m83_122  [key=2, style=dotted];
m83_111 -> m83_112  [key=0, style=solid];
m83_113 -> m83_111  [color=blue, key=0, style=bold];
m83_119 -> m83_120  [key=0, style=solid];
m83_41 -> m83_42  [key=0, style=solid];
m83_43 -> m83_41  [color=blue, key=0, style=bold];
m83_49 -> m83_50  [key=0, style=solid];
m83_51 -> m83_49  [color=blue, key=0, style=bold];
m83_56 -> m83_57  [key=0, style=solid];
m83_58 -> m83_56  [color=blue, key=0, style=bold];
m83_82 -> m83_83  [key=0, style=solid];
m83_84 -> m83_82  [color=blue, key=0, style=bold];
m83_92 -> m83_93  [key=0, style=solid];
m83_121 -> m83_119  [color=blue, key=0, style=bold];
m83_129 -> m83_130  [key=0, style=solid];
m83_129 -> m83_131  [key=2, style=dotted];
m83_137 -> m83_138  [key=0, style=solid];
m83_139 -> m83_137  [color=blue, key=0, style=bold];
m83_140 -> m83_141  [key=0, style=solid];
m83_142 -> m83_140  [color=blue, key=0, style=bold];
m83_148 -> m83_149  [key=0, style=solid];
m83_150 -> m83_148  [color=blue, key=0, style=bold];
m83_151 -> m83_152  [key=0, style=solid];
m83_153 -> m83_151  [color=blue, key=0, style=bold];
m83_162 -> m83_163  [key=0, style=solid];
m83_94 -> m83_92  [color=blue, key=0, style=bold];
m83_164 -> m83_162  [color=blue, key=0, style=bold];
m83_22 -> m83_20  [color=blue, key=0, style=bold];
m83_22 -> m83_23  [key=0, style=solid];
m83_130 -> m83_128  [color=blue, key=0, style=bold];
m83_77 -> m83_78  [key=0, style=solid];
m83_78 -> m83_73  [key=2, style=dotted];
m83_78 -> m83_79  [key=0, style=solid];
m83_78 -> m83_83  [color=darkseagreen4, key=1, label=client, style=dashed];
m83_79 -> m83_34  [key=2, style=dotted];
m83_79 -> m83_80  [key=0, style=solid];
m83_79 -> m83_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_80 -> m83_40  [key=2, style=dotted];
m83_80 -> m83_81  [key=0, style=solid];
m83_81 -> m83_77  [color=blue, key=0, style=bold];
m83_95 -> m83_96  [key=0, style=solid];
m83_96 -> m83_73  [key=2, style=dotted];
m83_96 -> m83_97  [key=0, style=solid];
m83_97 -> m83_35  [key=2, style=dotted];
m83_97 -> m83_98  [key=0, style=solid];
m83_98 -> m83_40  [key=2, style=dotted];
m83_98 -> m83_99  [key=0, style=solid];
m83_99 -> m83_95  [color=blue, key=0, style=bold];
m83_73 -> m83_166  [color=green, key=0, style=solid];
m83_166 -> m83_167  [color=green, key=0, style=solid];
m83_166 -> m83_44  [color=green, key=2, style=dotted];
m83_167 -> m83_73  [color=blue, key=0, style=bold];
m83_0 -> m83_1  [key=0, style=solid];
m83_1 -> m83_0  [color=blue, key=0, style=bold];
m83_1 -> m83_2  [key=0, style=solid];
m83_1 -> m83_3  [color=darkseagreen4, key=1, label=connection, style=dashed];
m83_1 -> m83_11  [key=2, style=dotted];
m83_2 -> m83_3  [key=0, style=solid];
m83_2 -> m83_12  [key=2, style=dotted];
m83_3 -> m83_2  [color=blue, key=0, style=bold];
m83_3 -> m83_13  [key=2, style=dotted];
m83_3 -> m83_14  [key=2, style=dotted];
m83_3 -> m83_4  [key=0, style=solid];
m83_3 -> m83_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_114 -> m83_115  [key=0, style=solid];
m83_117 -> m83_118  [color=green, key=0, style=solid];
m83_117 -> m83_40  [color=green, key=2, style=dotted];
m83_116 -> m83_117  [color=green, key=0, style=solid];
m83_116 -> m83_34  [key=2, style=dotted];
m83_116 -> m83_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_115 -> m83_73  [key=2, style=dotted];
m83_115 -> m83_116  [key=0, style=solid];
m83_115 -> m83_120  [color=darkseagreen4, key=1, label=client, style=dashed];
m83_118 -> m83_114  [color=blue, key=0, style=bold];
m83_5 -> m83_6  [color=green, key=0, style=solid];
m83_5 -> m83_16  [key=2, style=dotted];
m83_5 -> m83_4  [color=blue, key=0, style=bold];
m83_4 -> m83_5  [key=0, style=solid];
m83_4 -> m83_15  [key=2, style=dotted];
m83_10 -> m83_0  [color=blue, key=0, style=bold];
m83_10 -> m83_11  [key=0, style=solid];
m83_143 -> m83_144  [key=0, style=solid];
m83_144 -> m83_73  [key=2, style=dotted];
m83_144 -> m83_145  [key=0, style=solid];
m83_145 -> m83_146  [key=0, style=solid];
m83_145 -> m83_122  [key=2, style=dotted];
m83_146 -> m83_147  [key=0, style=solid];
m83_146 -> m83_91  [key=2, style=dotted];
m83_146 -> m83_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_147 -> m83_143  [color=blue, key=0, style=bold];
m83_18 -> m83_19  [key=0, style=solid];
m83_123 -> m83_124  [key=0, style=solid];
m83_124 -> m83_73  [key=2, style=dotted];
m83_124 -> m83_125  [key=0, style=solid];
m83_124 -> m83_129  [color=darkseagreen4, key=1, label=client, style=dashed];
m83_125 -> m83_34  [key=2, style=dotted];
m83_125 -> m83_126  [key=0, style=solid];
m83_125 -> m83_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m83_126 -> m83_40  [key=2, style=dotted];
m83_126 -> m83_127  [key=0, style=solid];
m83_127 -> m83_123  [color=blue, key=0, style=bold];
m83_17 -> m83_16  [color=blue, key=0, style=bold];
m83_168 -> m83_6  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_7  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_8  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_9  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_69  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_70  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_75  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_87  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_101  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_102  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_166  [color=green, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_42  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_46  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_53  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_57  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_79  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_83  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_88  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_89  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_96  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_97  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_112  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_115  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_120  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_124  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_133  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_138  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_141  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_144  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_145  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_146  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_149  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_152  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_156  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_168 -> m83_158  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundJobClientFacts", style=dashed];
m83_169 -> m83_75  [color=green, key=1, label=client, style=dashed];
m83_171 -> m83_112  [color=darkseagreen4, key=1, label=client, style=dashed];
m83_170 -> m83_83  [color=darkseagreen4, key=1, label=client, style=dashed];
m83_172 -> m83_120  [color=darkseagreen4, key=1, label=client, style=dashed];
m83_173 -> m83_129  [color=darkseagreen4, key=1, label=client, style=dashed];
m84_10 -> m84_11  [key=0, style=solid];
m84_128 -> m84_26  [key=2, style=dotted];
m84_128 -> m84_129  [key=0, style=solid];
m84_128 -> m84_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_127 -> m84_128  [color=green, key=0, style=solid];
m84_127 -> m84_26  [color=green, key=2, style=dotted];
m84_127 -> m84_130  [color=green, key=1, label="lambda expression", style=dashed];
m84_126 -> m84_127  [color=green, key=0, style=solid];
m84_126 -> m84_131  [color=green, key=1, label=string, style=dashed];
m84_126 -> m84_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_126 -> m84_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_129 -> m84_126  [color=blue, key=0, style=bold];
m84_6 -> m84_7  [key=0, style=solid];
m84_7 -> m84_8  [key=0, style=solid];
m84_7 -> m84_9  [key=2, style=dotted];
m84_7 -> m84_14  [key=2, style=dotted];
m84_8 -> m84_6  [color=blue, key=0, style=bold];
m84_8 -> m84_0  [color=blue, key=0, style=bold];
m84_156 -> m84_157  [key=0, style=solid];
m84_156 -> m84_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_157 -> m84_26  [key=2, style=dotted];
m84_157 -> m84_158  [key=0, style=solid];
m84_157 -> m84_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_158 -> m84_156  [color=blue, key=0, style=bold];
m84_5 -> m84_6  [key=0, style=solid];
m84_109 -> m84_110  [key=0, style=solid];
m84_109 -> m84_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_109 -> m84_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_109 -> m84_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_110 -> m84_26  [key=2, style=dotted];
m84_110 -> m84_111  [key=0, style=solid];
m84_110 -> m84_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_111 -> m84_26  [key=2, style=dotted];
m84_111 -> m84_112  [key=0, style=solid];
m84_111 -> m84_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_112 -> m84_109  [color=blue, key=0, style=bold];
m84_169 -> m84_170  [color=green, key=0, style=solid];
m84_169 -> m84_173  [color=green, key=1, label=string, style=dashed];
m84_170 -> m84_171  [color=green, key=0, style=solid];
m84_170 -> m84_26  [color=green, key=2, style=dotted];
m84_170 -> m84_172  [color=green, key=1, label="lambda expression", style=dashed];
m84_171 -> m84_169  [color=blue, key=0, style=bold];
m84_55 -> m84_26  [key=2, style=dotted];
m84_55 -> m84_56  [key=0, style=solid];
m84_55 -> m84_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_59 -> m84_60  [color=green, key=0, style=solid];
m84_59 -> m84_65  [color=green, key=2, style=dotted];
m84_53 -> m84_59  [color=green, key=1, label="HangFire.States.State", style=dashed];
m84_53 -> m84_54  [key=0, style=solid];
m84_53 -> m84_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_53 -> m84_55  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_53 -> m84_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_53 -> m84_56  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m84_53 -> m84_57  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m84_53 -> m84_58  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m84_53 -> m84_60  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_53 -> m84_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_53 -> m84_61  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_56 -> m84_59  [color=green, key=1, label=storedData, style=dashed];
m84_56 -> m84_57  [key=0, style=solid];
m84_56 -> m84_63  [key=2, style=dotted];
m84_56 -> m84_64  [key=2, style=dotted];
m84_56 -> m84_60  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m84_56 -> m84_76  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m84_58 -> m84_59  [color=green, key=0, style=solid];
m84_58 -> m84_60  [key=0, style=solid];
m84_60 -> m84_26  [key=2, style=dotted];
m84_60 -> m84_61  [key=0, style=solid];
m84_60 -> m84_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_54 -> m84_26  [key=2, style=dotted];
m84_54 -> m84_55  [key=0, style=solid];
m84_54 -> m84_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_61 -> m84_62  [key=0, style=solid];
m84_61 -> m84_66  [key=2, style=dotted];
m84_57 -> m84_58  [key=0, style=solid];
m84_57 -> m84_65  [key=2, style=dotted];
m84_62 -> m84_53  [color=blue, key=0, style=bold];
m84_0 -> m84_1  [key=0, style=solid];
m84_0 -> m84_3  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m84_1 -> m84_2  [key=0, style=solid];
m84_1 -> m84_9  [key=2, style=dotted];
m84_1 -> m84_3  [key=0, style=solid];
m84_2 -> m84_3  [key=0, style=solid];
m84_2 -> m84_10  [key=2, style=dotted];
m84_2 -> m84_4  [color=darkseagreen4, key=1, label=response, style=dashed];
m84_2 -> m84_5  [key=2, style=dotted];
m84_3 -> m84_4  [key=0, style=solid];
m84_3 -> m84_11  [key=2, style=dotted];
m84_3 -> m84_12  [key=2, style=dotted];
m84_4 -> m84_5  [key=0, style=solid];
m84_4 -> m84_13  [key=2, style=dotted];
m84_4 -> m84_7  [color=darkseagreen4, key=1, label=serialized, style=dashed];
m84_4 -> m84_0  [color=blue, key=0, style=bold];
m84_11 -> m84_12  [key=0, style=solid];
m84_11 -> m84_17  [key=0, style=solid];
m84_11 -> m84_18  [key=2, style=dotted];
m84_188 -> m84_189  [key=0, style=solid];
m84_188 -> m84_192  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_189 -> m84_26  [key=2, style=dotted];
m84_189 -> m84_190  [key=0, style=solid];
m84_189 -> m84_191  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_190 -> m84_188  [color=blue, key=0, style=bold];
m84_38 -> m84_39  [color=green, key=0, style=solid];
m84_38 -> m84_44  [color=green, key=1, label=string, style=dashed];
m84_38 -> m84_40  [color=green, key=1, label=string, style=dashed];
m84_38 -> m84_48  [color=green, key=1, label=string, style=dashed];
m84_38 -> m84_41  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_38 -> m84_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_39 -> m84_40  [color=green, key=0, style=solid];
m84_39 -> m84_26  [color=green, key=2, style=dotted];
m84_39 -> m84_43  [color=green, key=1, label="lambda expression", style=dashed];
m84_40 -> m84_41  [color=green, key=0, style=solid];
m84_40 -> m84_26  [color=green, key=2, style=dotted];
m84_40 -> m84_47  [color=green, key=1, label="lambda expression", style=dashed];
m84_41 -> m84_26  [key=2, style=dotted];
m84_41 -> m84_42  [key=0, style=solid];
m84_41 -> m84_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_42 -> m84_38  [color=blue, key=0, style=bold];
m84_13 -> m84_15  [color=green, key=1, label=maxReplayCount, style=dashed];
m84_13 -> m84_14  [color=green, key=0, style=solid];
m84_119 -> m84_120  [key=0, style=solid];
m84_119 -> m84_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_120 -> m84_26  [key=2, style=dotted];
m84_120 -> m84_121  [key=0, style=solid];
m84_120 -> m84_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_121 -> m84_119  [color=blue, key=0, style=bold];
m84_136 -> m84_137  [key=0, style=solid];
m84_136 -> m84_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_137 -> m84_26  [key=2, style=dotted];
m84_137 -> m84_138  [key=0, style=solid];
m84_137 -> m84_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_138 -> m84_136  [color=blue, key=0, style=bold];
m84_149 -> m84_150  [key=0, style=solid];
m84_149 -> m84_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_150 -> m84_26  [key=2, style=dotted];
m84_150 -> m84_151  [key=0, style=solid];
m84_150 -> m84_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_151 -> m84_149  [color=blue, key=0, style=bold];
m84_12 -> m84_15  [color=green, key=1, label=replayCount, style=dashed];
m84_12 -> m84_13  [key=0, style=solid];
m84_15 -> m84_15  [color=green, key=1, label=replayCount, style=dashed];
m84_15 -> m84_16  [color=green, key=0, style=solid];
m84_15 -> m84_14  [color=green, key=0, style=solid];
m84_15 -> m84_5  [color=darkseagreen4, key=1, label="HangFire.Web.JsonStats", style=dashed];
m84_15 -> m84_6  [color=darkseagreen4, key=1, label="HangFire.Web.JsonStats", style=dashed];
m84_15 -> m84_7  [color=darkseagreen4, key=1, label="HangFire.Web.JsonStats", style=dashed];
m84_14 -> m84_15  [color=green, key=0, style=solid];
m84_14 -> m84_17  [color=green, key=0, style=solid];
m84_14 -> m84_19  [color=green, key=2, style=dotted];
m84_16 -> m84_17  [key=0, style=solid];
m84_16 -> m84_20  [key=2, style=dotted];
m84_17 -> m84_10  [color=blue, key=0, style=bold];
m84_176 -> m84_177  [key=0, style=solid];
m84_176 -> m84_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_177 -> m84_26  [key=2, style=dotted];
m84_177 -> m84_178  [key=0, style=solid];
m84_177 -> m84_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_178 -> m84_176  [color=blue, key=0, style=bold];
m84_191 -> m84_192  [key=0, style=solid];
m84_27 -> m84_28  [color=green, key=0, style=solid];
m84_28 -> m84_29  [color=green, key=0, style=solid];
m84_28 -> m84_30  [color=green, key=2, style=dotted];
m84_28 -> m84_31  [color=green, key=2, style=dotted];
m84_29 -> m84_27  [color=blue, key=0, style=bold];
m84_32 -> m84_33  [color=green, key=0, style=solid];
m84_33 -> m84_34  [color=green, key=0, style=solid];
m84_33 -> m84_30  [color=green, key=2, style=dotted];
m84_33 -> m84_31  [color=green, key=2, style=dotted];
m84_34 -> m84_32  [color=blue, key=0, style=bold];
m84_35 -> m84_36  [color=green, key=0, style=solid];
m84_36 -> m84_37  [color=green, key=0, style=solid];
m84_36 -> m84_30  [color=green, key=2, style=dotted];
m84_36 -> m84_31  [color=green, key=2, style=dotted];
m84_37 -> m84_35  [color=blue, key=0, style=bold];
m84_43 -> m84_44  [color=green, key=0, style=solid];
m84_44 -> m84_45  [color=green, key=0, style=solid];
m84_44 -> m84_30  [color=green, key=2, style=dotted];
m84_44 -> m84_46  [color=green, key=2, style=dotted];
m84_45 -> m84_43  [color=blue, key=0, style=bold];
m84_47 -> m84_48  [color=green, key=0, style=solid];
m84_48 -> m84_49  [color=green, key=0, style=solid];
m84_48 -> m84_30  [color=green, key=2, style=dotted];
m84_48 -> m84_46  [color=green, key=2, style=dotted];
m84_49 -> m84_47  [color=blue, key=0, style=bold];
m84_105 -> m84_106  [color=green, key=0, style=solid];
m84_106 -> m84_107  [color=green, key=0, style=solid];
m84_106 -> m84_108  [color=green, key=2, style=dotted];
m84_107 -> m84_105  [color=blue, key=0, style=bold];
m84_130 -> m84_131  [color=green, key=0, style=solid];
m84_131 -> m84_132  [color=green, key=0, style=solid];
m84_131 -> m84_125  [color=green, key=2, style=dotted];
m84_132 -> m84_130  [color=blue, key=0, style=bold];
m84_172 -> m84_173  [color=green, key=0, style=solid];
m84_173 -> m84_174  [color=green, key=0, style=solid];
m84_173 -> m84_175  [color=green, key=2, style=dotted];
m84_174 -> m84_172  [color=blue, key=0, style=bold];
m84_51 -> m84_30  [key=2, style=dotted];
m84_51 -> m84_46  [key=2, style=dotted];
m84_51 -> m84_52  [key=0, style=solid];
m84_68 -> m84_30  [key=2, style=dotted];
m84_68 -> m84_69  [key=0, style=solid];
m84_68 -> m84_70  [key=2, style=dotted];
m84_72 -> m84_30  [key=2, style=dotted];
m84_72 -> m84_73  [key=0, style=solid];
m84_72 -> m84_74  [key=2, style=dotted];
m84_76 -> m84_30  [key=2, style=dotted];
m84_76 -> m84_77  [key=0, style=solid];
m84_76 -> m84_78  [key=2, style=dotted];
m84_87 -> m84_30  [key=2, style=dotted];
m84_87 -> m84_88  [key=0, style=solid];
m84_87 -> m84_89  [key=2, style=dotted];
m84_87 -> m84_90  [key=2, style=dotted];
m84_100 -> m84_30  [key=2, style=dotted];
m84_100 -> m84_101  [key=0, style=solid];
m84_100 -> m84_90  [key=2, style=dotted];
m84_117 -> m84_31  [key=2, style=dotted];
m84_117 -> m84_118  [key=0, style=solid];
m84_134 -> m84_31  [key=2, style=dotted];
m84_134 -> m84_135  [key=0, style=solid];
m84_192 -> m84_31  [key=2, style=dotted];
m84_192 -> m84_193  [key=0, style=solid];
m84_50 -> m84_51  [key=0, style=solid];
m84_75 -> m84_76  [key=0, style=solid];
m84_114 -> m84_108  [key=2, style=dotted];
m84_114 -> m84_115  [key=0, style=solid];
m84_180 -> m84_108  [key=2, style=dotted];
m84_180 -> m84_181  [key=0, style=solid];
m84_133 -> m84_134  [key=0, style=solid];
m84_123 -> m84_125  [key=2, style=dotted];
m84_123 -> m84_124  [key=0, style=solid];
m84_186 -> m84_125  [key=2, style=dotted];
m84_186 -> m84_187  [key=0, style=solid];
m84_67 -> m84_68  [key=0, style=solid];
m84_71 -> m84_72  [key=0, style=solid];
m84_86 -> m84_87  [key=0, style=solid];
m84_95 -> m84_96  [key=0, style=solid];
m84_99 -> m84_100  [key=0, style=solid];
m84_113 -> m84_114  [key=0, style=solid];
m84_116 -> m84_117  [key=0, style=solid];
m84_122 -> m84_123  [key=0, style=solid];
m84_139 -> m84_140  [key=0, style=solid];
m84_146 -> m84_147  [key=0, style=solid];
m84_152 -> m84_153  [key=0, style=solid];
m84_159 -> m84_160  [key=0, style=solid];
m84_165 -> m84_166  [key=0, style=solid];
m84_179 -> m84_180  [key=0, style=solid];
m84_185 -> m84_186  [key=0, style=solid];
m84_52 -> m84_50  [color=blue, key=0, style=bold];
m84_69 -> m84_67  [color=blue, key=0, style=bold];
m84_73 -> m84_71  [color=blue, key=0, style=bold];
m84_77 -> m84_75  [color=blue, key=0, style=bold];
m84_88 -> m84_86  [color=blue, key=0, style=bold];
m84_101 -> m84_99  [color=blue, key=0, style=bold];
m84_118 -> m84_116  [color=blue, key=0, style=bold];
m84_135 -> m84_133  [color=blue, key=0, style=bold];
m84_193 -> m84_191  [color=blue, key=0, style=bold];
m84_115 -> m84_113  [color=blue, key=0, style=bold];
m84_181 -> m84_179  [color=blue, key=0, style=bold];
m84_124 -> m84_122  [color=blue, key=0, style=bold];
m84_187 -> m84_185  [color=blue, key=0, style=bold];
m84_96 -> m84_97  [key=0, style=solid];
m84_96 -> m84_98  [key=2, style=dotted];
m84_97 -> m84_95  [color=blue, key=0, style=bold];
m84_140 -> m84_141  [key=0, style=solid];
m84_140 -> m84_142  [key=2, style=dotted];
m84_141 -> m84_139  [color=blue, key=0, style=bold];
m84_147 -> m84_148  [key=0, style=solid];
m84_147 -> m84_142  [key=2, style=dotted];
m84_148 -> m84_146  [color=blue, key=0, style=bold];
m84_153 -> m84_154  [key=0, style=solid];
m84_153 -> m84_155  [key=2, style=dotted];
m84_154 -> m84_152  [color=blue, key=0, style=bold];
m84_160 -> m84_90  [key=2, style=dotted];
m84_160 -> m84_161  [key=0, style=solid];
m84_161 -> m84_159  [color=blue, key=0, style=bold];
m84_166 -> m84_167  [key=0, style=solid];
m84_166 -> m84_168  [key=2, style=dotted];
m84_167 -> m84_165  [color=blue, key=0, style=bold];
m84_143 -> m84_144  [key=0, style=solid];
m84_143 -> m84_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_144 -> m84_26  [key=2, style=dotted];
m84_144 -> m84_145  [key=0, style=solid];
m84_144 -> m84_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_145 -> m84_143  [color=blue, key=0, style=bold];
m84_182 -> m84_183  [key=0, style=solid];
m84_182 -> m84_186  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_183 -> m84_26  [key=2, style=dotted];
m84_183 -> m84_184  [key=0, style=solid];
m84_183 -> m84_185  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_184 -> m84_182  [color=blue, key=0, style=bold];
m84_102 -> m84_103  [color=green, key=0, style=solid];
m84_102 -> m84_106  [color=green, key=1, label=string, style=dashed];
m84_103 -> m84_104  [color=green, key=0, style=solid];
m84_103 -> m84_26  [color=green, key=2, style=dotted];
m84_103 -> m84_105  [color=green, key=1, label="lambda expression", style=dashed];
m84_104 -> m84_102  [color=blue, key=0, style=bold];
m84_24 -> m84_25  [color=green, key=0, style=solid];
m84_24 -> m84_26  [color=green, key=2, style=dotted];
m84_24 -> m84_35  [color=green, key=1, label="lambda expression", style=dashed];
m84_22 -> m84_23  [color=green, key=0, style=solid];
m84_22 -> m84_26  [color=green, key=2, style=dotted];
m84_22 -> m84_27  [color=green, key=1, label="lambda expression", style=dashed];
m84_21 -> m84_22  [color=green, key=0, style=solid];
m84_21 -> m84_28  [color=green, key=1, label=string, style=dashed];
m84_21 -> m84_23  [color=green, key=1, label=string, style=dashed];
m84_21 -> m84_33  [color=green, key=1, label=string, style=dashed];
m84_21 -> m84_24  [color=green, key=1, label=string, style=dashed];
m84_21 -> m84_36  [color=green, key=1, label=string, style=dashed];
m84_23 -> m84_24  [color=green, key=0, style=solid];
m84_23 -> m84_26  [color=green, key=2, style=dotted];
m84_23 -> m84_32  [color=green, key=1, label="lambda expression", style=dashed];
m84_25 -> m84_21  [color=blue, key=0, style=bold];
m84_91 -> m84_92  [key=0, style=solid];
m84_91 -> m84_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_91 -> m84_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_91 -> m84_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_92 -> m84_26  [key=2, style=dotted];
m84_92 -> m84_93  [key=0, style=solid];
m84_92 -> m84_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_93 -> m84_26  [key=2, style=dotted];
m84_93 -> m84_94  [key=0, style=solid];
m84_93 -> m84_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_94 -> m84_91  [color=blue, key=0, style=bold];
m84_66 -> m84_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_66 -> m84_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_66 -> m84_80  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m84_66 -> m84_81  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m84_66 -> m84_79  [key=0, style=solid];
m84_83 -> m84_26  [key=2, style=dotted];
m84_83 -> m84_84  [key=0, style=solid];
m84_83 -> m84_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_80 -> m84_65  [key=2, style=dotted];
m84_80 -> m84_81  [key=0, style=solid];
m84_81 -> m84_65  [key=2, style=dotted];
m84_81 -> m84_82  [key=0, style=solid];
m84_82 -> m84_65  [key=2, style=dotted];
m84_82 -> m84_83  [key=0, style=solid];
m84_82 -> m84_85  [key=2, style=dotted];
m84_79 -> m84_83  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m84_79 -> m84_87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m84_79 -> m84_63  [key=2, style=dotted];
m84_79 -> m84_64  [key=2, style=dotted];
m84_79 -> m84_80  [key=0, style=solid];
m84_79 -> m84_81  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m84_79 -> m84_82  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m84_84 -> m84_66  [color=blue, key=0, style=bold];
m84_162 -> m84_163  [key=0, style=solid];
m84_162 -> m84_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_163 -> m84_26  [key=2, style=dotted];
m84_163 -> m84_164  [key=0, style=solid];
m84_163 -> m84_165  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m84_164 -> m84_162  [color=blue, key=0, style=bold];
m84_194 -> m84_14  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_22  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_23  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_24  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_39  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_40  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_103  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_127  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_170  [color=green, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_3  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_7  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_11  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_41  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_54  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_55  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_60  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_61  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_83  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_92  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_93  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_110  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_111  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_120  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_128  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_137  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_144  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_150  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_157  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_163  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_177  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_183  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_194 -> m84_189  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisWriteOnlyTransaction", style=dashed];
m84_195 -> m84_28  [color=green, key=1, label=string, style=dashed];
m84_195 -> m84_33  [color=green, key=1, label=string, style=dashed];
m84_195 -> m84_36  [color=green, key=1, label=string, style=dashed];
m84_196 -> m84_28  [color=green, key=1, label="System.TimeSpan", style=dashed];
m84_196 -> m84_33  [color=green, key=1, label="System.TimeSpan", style=dashed];
m84_196 -> m84_36  [color=green, key=1, label="System.TimeSpan", style=dashed];
m84_197 -> m84_44  [color=green, key=1, label=string, style=dashed];
m84_197 -> m84_48  [color=green, key=1, label=string, style=dashed];
m84_197 -> m84_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_205 -> m84_106  [color=green, key=1, label=string, style=dashed];
m84_209 -> m84_131  [color=green, key=1, label=string, style=dashed];
m84_209 -> m84_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_222 -> m84_173  [color=green, key=1, label=string, style=dashed];
m84_223 -> m84_173  [color=green, key=1, label=int, style=dashed];
m84_224 -> m84_173  [color=green, key=1, label=int, style=dashed];
m84_198 -> m84_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_198 -> m84_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_198 -> m84_76  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_199 -> m84_68  [color=darkseagreen4, key=1, label="HangFire.States.State", style=dashed];
m84_200 -> m84_76  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m84_201 -> m84_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_202 -> m84_87  [color=darkseagreen4, key=1, label=storedData, style=dashed];
m84_203 -> m84_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_203 -> m84_96  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_204 -> m84_100  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_206 -> m84_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_206 -> m84_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_207 -> m84_117  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m84_210 -> m84_134  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m84_227 -> m84_192  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_228 -> m84_192  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m84_225 -> m84_180  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_208 -> m84_123  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_226 -> m84_186  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_211 -> m84_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_212 -> m84_140  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_213 -> m84_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_214 -> m84_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_215 -> m84_147  [color=darkseagreen4, key=1, label=double, style=dashed];
m84_216 -> m84_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_217 -> m84_153  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_218 -> m84_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_219 -> m84_160  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_220 -> m84_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m84_221 -> m84_166  [color=darkseagreen4, key=1, label=string, style=dashed];
m85_0 -> m85_1  [key=0, style=solid];
m85_1 -> m85_2  [key=0, style=solid];
m85_1 -> m85_23  [key=2, style=dotted];
m85_2 -> m85_3  [key=0, style=solid];
m85_2 -> m85_24  [key=2, style=dotted];
m85_3 -> m85_4  [key=0, style=solid];
m85_3 -> m85_23  [key=2, style=dotted];
m85_4 -> m85_5  [key=0, style=solid];
m85_4 -> m85_25  [key=2, style=dotted];
m85_4 -> m85_6  [color=darkseagreen4, key=1, label=servers, style=dashed];
m85_4 -> m85_9  [color=darkseagreen4, key=1, label=servers, style=dashed];
m85_5 -> m85_6  [key=0, style=solid];
m85_5 -> m85_23  [key=2, style=dotted];
m85_6 -> m85_7  [key=0, style=solid];
m85_6 -> m85_8  [key=0, style=solid];
m85_9 -> m85_10  [key=0, style=solid];
m85_9 -> m85_21  [key=0, style=solid];
m85_9 -> m85_11  [color=darkseagreen4, key=1, label=server, style=dashed];
m85_9 -> m85_13  [color=darkseagreen4, key=1, label=server, style=dashed];
m85_9 -> m85_15  [color=darkseagreen4, key=1, label=server, style=dashed];
m85_9 -> m85_17  [color=darkseagreen4, key=1, label=server, style=dashed];
m85_9 -> m85_19  [color=darkseagreen4, key=1, label=server, style=dashed];
m85_7 -> m85_22  [key=0, style=solid];
m85_7 -> m85_23  [key=2, style=dotted];
m85_8 -> m85_9  [key=0, style=solid];
m85_8 -> m85_23  [key=2, style=dotted];
m85_10 -> m85_11  [key=0, style=solid];
m85_10 -> m85_23  [key=2, style=dotted];
m85_21 -> m85_22  [key=0, style=solid];
m85_21 -> m85_23  [key=2, style=dotted];
m85_11 -> m85_12  [key=0, style=solid];
m85_11 -> m85_26  [key=2, style=dotted];
m85_13 -> m85_14  [key=0, style=solid];
m85_13 -> m85_26  [key=2, style=dotted];
m85_15 -> m85_16  [key=0, style=solid];
m85_15 -> m85_27  [key=2, style=dotted];
m85_15 -> m85_28  [key=2, style=dotted];
m85_15 -> m85_29  [key=2, style=dotted];
m85_15 -> m85_30  [key=2, style=dotted];
m85_17 -> m85_18  [key=0, style=solid];
m85_17 -> m85_31  [key=2, style=dotted];
m85_17 -> m85_26  [key=2, style=dotted];
m85_19 -> m85_20  [key=0, style=solid];
m85_19 -> m85_26  [key=2, style=dotted];
m85_12 -> m85_13  [key=0, style=solid];
m85_12 -> m85_23  [key=2, style=dotted];
m85_14 -> m85_15  [key=0, style=solid];
m85_14 -> m85_23  [key=2, style=dotted];
m85_16 -> m85_17  [key=0, style=solid];
m85_16 -> m85_23  [key=2, style=dotted];
m85_18 -> m85_19  [key=0, style=solid];
m85_18 -> m85_23  [key=2, style=dotted];
m85_20 -> m85_9  [key=0, style=solid];
m85_20 -> m85_23  [key=2, style=dotted];
m85_22 -> m85_0  [color=blue, key=0, style=bold];
m85_32 -> m85_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_2  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_3  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m85_32 -> m85_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m86_18 -> m86_19  [key=0, style=solid];
m86_19 -> m86_13  [key=2, style=dotted];
m86_19 -> m86_20  [key=0, style=solid];
m86_19 -> m86_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_20 -> m86_18  [color=blue, key=0, style=bold];
m86_29 -> m86_27  [color=blue, key=0, style=bold];
m86_14 -> m86_15  [color=red, key=0, style=solid];
m86_15 -> m86_16  [color=red, key=0, style=solid];
m86_15 -> m86_17  [color=red, key=0, style=solid];
m86_16 -> m86_17  [color=red, key=0, style=solid];
m86_16 -> m86_0  [color=red, key=2, style=dotted];
m86_16 -> m86_14  [color=blue, key=0, style=bold];
m86_17 -> m86_14  [color=blue, key=0, style=bold];
m86_314 -> m86_315  [key=0, style=solid];
m86_316 -> m86_317  [key=0, style=solid];
m86_316 -> m86_322  [key=2, style=dotted];
m86_316 -> m86_323  [key=2, style=dotted];
m86_316 -> m86_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_317 -> m86_81  [key=2, style=dotted];
m86_317 -> m86_318  [key=0, style=solid];
m86_317 -> m86_328  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_317 -> m86_333  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_318 -> m86_13  [key=2, style=dotted];
m86_318 -> m86_319  [key=0, style=solid];
m86_318 -> m86_332  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_315 -> m86_316  [key=0, style=solid];
m86_315 -> m86_321  [key=2, style=dotted];
m86_315 -> m86_319  [color=darkseagreen4, key=1, label=exception, style=dashed];
m86_319 -> m86_42  [key=2, style=dotted];
m86_319 -> m86_320  [key=0, style=solid];
m86_320 -> m86_314  [color=blue, key=0, style=bold];
m86_335 -> m86_336  [key=0, style=solid];
m86_336 -> m86_337  [key=0, style=solid];
m86_336 -> m86_322  [key=2, style=dotted];
m86_336 -> m86_341  [key=2, style=dotted];
m86_336 -> m86_342  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_337 -> m86_81  [key=2, style=dotted];
m86_337 -> m86_338  [key=0, style=solid];
m86_337 -> m86_345  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_337 -> m86_349  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_338 -> m86_13  [key=2, style=dotted];
m86_338 -> m86_339  [key=0, style=solid];
m86_338 -> m86_348  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_339 -> m86_13  [key=2, style=dotted];
m86_339 -> m86_340  [key=0, style=solid];
m86_340 -> m86_335  [color=blue, key=0, style=bold];
m86_360 -> m86_361  [key=0, style=solid];
m86_363 -> m86_13  [key=2, style=dotted];
m86_363 -> m86_364  [key=0, style=solid];
m86_363 -> m86_372  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_363 -> m86_365  [color=darkseagreen4, key=1, label=exception, style=dashed];
m86_362 -> m86_363  [key=0, style=solid];
m86_362 -> m86_373  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_362 -> m86_143  [key=2, style=dotted];
m86_362 -> m86_368  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_364 -> m86_44  [key=2, style=dotted];
m86_364 -> m86_365  [key=0, style=solid];
m86_365 -> m86_366  [key=0, style=solid];
m86_365 -> m86_367  [key=2, style=dotted];
m86_361 -> m86_362  [key=0, style=solid];
m86_366 -> m86_360  [color=blue, key=0, style=bold];
m86_213 -> m86_440  [key=0, style=solid];
m86_440 -> m86_213  [color=blue, key=0, style=bold];
m86_384 -> m86_468  [key=0, style=solid];
m86_468 -> m86_469  [key=0, style=solid];
m86_468 -> m86_470  [key=2, style=dotted];
m86_469 -> m86_384  [color=blue, key=0, style=bold];
m86_100 -> m86_101  [key=0, style=solid];
m86_100 -> m86_42  [key=2, style=dotted];
m86_104 -> m86_105  [color=green, key=0, style=solid];
m86_104 -> m86_77  [color=green, key=2, style=dotted];
m86_104 -> m86_89  [key=2, style=dotted];
m86_102 -> m86_104  [color=green, key=1, label=expected, style=dashed];
m86_102 -> m86_103  [key=0, style=solid];
m86_102 -> m86_107  [key=2, style=dotted];
m86_102 -> m86_30  [key=2, style=dotted];
m86_103 -> m86_104  [color=green, key=0, style=solid];
m86_103 -> m86_81  [key=2, style=dotted];
m86_103 -> m86_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_103 -> m86_63  [key=2, style=dotted];
m86_101 -> m86_102  [key=0, style=solid];
m86_101 -> m86_103  [color=darkseagreen4, key=1, label=date, style=dashed];
m86_101 -> m86_109  [color=darkseagreen4, key=1, label=date, style=dashed];
m86_101 -> m86_106  [key=2, style=dotted];
m86_101 -> m86_22  [key=2, style=dotted];
m86_105 -> m86_100  [color=blue, key=0, style=bold];
m86_105 -> m86_106  [key=0, style=solid];
m86_105 -> m86_43  [key=2, style=dotted];
m86_136 -> m86_137  [key=0, style=solid];
m86_137 -> m86_13  [key=2, style=dotted];
m86_137 -> m86_138  [key=0, style=solid];
m86_137 -> m86_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_138 -> m86_77  [key=2, style=dotted];
m86_138 -> m86_139  [key=0, style=solid];
m86_139 -> m86_136  [color=blue, key=0, style=bold];
m86_44 -> m86_45  [key=0, style=solid];
m86_45 -> m86_46  [color=green, key=0, style=solid];
m86_45 -> m86_42  [key=2, style=dotted];
m86_46 -> m86_47  [color=green, key=0, style=solid];
m86_46 -> m86_22  [key=2, style=dotted];
m86_46 -> m86_49  [color=green, key=2, style=dotted];
m86_47 -> m86_48  [color=green, key=0, style=solid];
m86_47 -> m86_30  [key=2, style=dotted];
m86_47 -> m86_50  [color=green, key=2, style=dotted];
m86_48 -> m86_49  [key=0, style=solid];
m86_48 -> m86_53  [key=2, style=dotted];
m86_48 -> m86_50  [color=darkseagreen4, key=1, label=table1, style=dashed];
m86_48 -> m86_45  [color=blue, key=0, style=bold];
m86_49 -> m86_50  [key=0, style=solid];
m86_49 -> m86_54  [key=2, style=dotted];
m86_50 -> m86_51  [key=0, style=solid];
m86_50 -> m86_43  [key=2, style=dotted];
m86_51 -> m86_52  [color=green, key=0, style=solid];
m86_51 -> m86_26  [key=2, style=dotted];
m86_52 -> m86_44  [color=blue, key=0, style=bold];
m86_52 -> m86_53  [color=green, key=0, style=solid];
m86_52 -> m86_13  [color=green, key=2, style=dotted];
m86_52 -> m86_56  [color=green, key=1, label="lambda expression", style=dashed];
m86_72 -> m86_73  [key=0, style=solid];
m86_72 -> m86_70  [color=blue, key=0, style=bold];
m86_73 -> m86_74  [key=0, style=solid];
m86_73 -> m86_42  [key=2, style=dotted];
m86_74 -> m86_75  [key=0, style=solid];
m86_74 -> m86_22  [key=2, style=dotted];
m86_74 -> m86_13  [key=2, style=dotted];
m86_74 -> m86_78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_75 -> m86_76  [key=0, style=solid];
m86_75 -> m86_30  [key=2, style=dotted];
m86_75 -> m86_77  [key=2, style=dotted];
m86_76 -> m86_77  [key=0, style=solid];
m86_76 -> m86_63  [key=2, style=dotted];
m86_76 -> m86_73  [color=blue, key=0, style=bold];
m86_77 -> m86_78  [key=0, style=solid];
m86_77 -> m86_43  [key=2, style=dotted];
m86_78 -> m86_79  [key=0, style=solid];
m86_78 -> m86_26  [key=2, style=dotted];
m86_79 -> m86_72  [color=blue, key=0, style=bold];
m86_79 -> m86_81  [key=2, style=dotted];
m86_79 -> m86_80  [key=0, style=solid];
m86_80 -> m86_81  [key=0, style=solid];
m86_80 -> m86_78  [color=blue, key=0, style=bold];
m86_81 -> m86_82  [key=0, style=solid];
m86_81 -> m86_42  [key=2, style=dotted];
m86_82 -> m86_83  [key=0, style=solid];
m86_82 -> m86_22  [key=2, style=dotted];
m86_83 -> m86_84  [key=0, style=solid];
m86_83 -> m86_30  [key=2, style=dotted];
m86_83 -> m86_13  [key=2, style=dotted];
m86_83 -> m86_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_84 -> m86_85  [key=0, style=solid];
m86_84 -> m86_63  [key=2, style=dotted];
m86_84 -> m86_82  [color=blue, key=0, style=bold];
m86_85 -> m86_86  [key=0, style=solid];
m86_85 -> m86_89  [key=2, style=dotted];
m86_86 -> m86_87  [key=0, style=solid];
m86_86 -> m86_43  [key=2, style=dotted];
m86_86 -> m86_81  [key=2, style=dotted];
m86_86 -> m86_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_87 -> m86_88  [key=0, style=solid];
m86_87 -> m86_26  [key=2, style=dotted];
m86_87 -> m86_85  [color=blue, key=0, style=bold];
m86_88 -> m86_80  [color=blue, key=0, style=bold];
m86_88 -> m86_89  [key=0, style=solid];
m86_351 -> m86_352  [key=0, style=solid];
m86_353 -> m86_7  [key=2, style=dotted];
m86_353 -> m86_354  [key=0, style=solid];
m86_353 -> m86_357  [color=darkseagreen4, key=1, label=method, style=dashed];
m86_354 -> m86_13  [key=2, style=dotted];
m86_354 -> m86_355  [key=0, style=solid];
m86_354 -> m86_356  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_352 -> m86_353  [key=0, style=solid];
m86_352 -> m86_354  [color=darkseagreen4, key=1, label=type, style=dashed];
m86_352 -> m86_357  [color=darkseagreen4, key=1, label=type, style=dashed];
m86_355 -> m86_351  [color=blue, key=0, style=bold];
m86_64 -> m86_65  [key=0, style=solid];
m86_64 -> m86_17  [key=2, style=dotted];
m86_65 -> m86_66  [key=0, style=solid];
m86_65 -> m86_42  [key=2, style=dotted];
m86_65 -> m86_63  [color=blue, key=0, style=bold];
m86_66 -> m86_67  [key=0, style=solid];
m86_66 -> m86_22  [key=2, style=dotted];
m86_67 -> m86_68  [key=0, style=solid];
m86_67 -> m86_30  [key=2, style=dotted];
m86_67 -> m86_7  [key=2, style=dotted];
m86_67 -> m86_71  [color=darkseagreen4, key=1, label=method, style=dashed];
m86_68 -> m86_69  [key=0, style=solid];
m86_68 -> m86_63  [key=2, style=dotted];
m86_68 -> m86_13  [key=2, style=dotted];
m86_68 -> m86_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_69 -> m86_70  [key=0, style=solid];
m86_69 -> m86_43  [key=2, style=dotted];
m86_69 -> m86_66  [color=blue, key=0, style=bold];
m86_70 -> m86_71  [key=0, style=solid];
m86_70 -> m86_26  [key=2, style=dotted];
m86_71 -> m86_64  [color=blue, key=0, style=bold];
m86_71 -> m86_17  [key=2, style=dotted];
m86_71 -> m86_72  [key=0, style=solid];
m86_0 -> m86_1  [color=green, key=0, style=solid];
m86_0 -> m86_16  [color=red, key=3, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext", style=bold];
m86_1 -> m86_2  [color=green, key=0, style=solid];
m86_1 -> m86_5  [key=2, style=dotted];
m86_2 -> m86_3  [color=green, key=0, style=solid];
m86_2 -> m86_7  [color=green, key=2, style=dotted];
m86_2 -> m86_6  [key=2, style=dotted];
m86_3 -> m86_4  [color=green, key=0, style=solid];
m86_3 -> m86_8  [key=2, style=dotted];
m86_4 -> m86_5  [color=green, key=0, style=solid];
m86_4 -> m86_8  [color=green, key=2, style=dotted];
m86_4 -> m86_0  [color=blue, key=0, style=bold];
m86_5 -> m86_6  [key=0, style=solid];
m86_5 -> m86_9  [key=2, style=dotted];
m86_6 -> m86_0  [color=blue, key=0, style=bold];
m86_412 -> m86_483  [key=0, style=solid];
m86_483 -> m86_484  [key=0, style=solid];
m86_484 -> m86_412  [color=blue, key=0, style=bold];
m86_286 -> m86_287  [key=0, style=solid];
m86_292 -> m86_226  [key=2, style=dotted];
m86_292 -> m86_293  [key=0, style=solid];
m86_290 -> m86_7  [key=2, style=dotted];
m86_290 -> m86_291  [key=0, style=solid];
m86_291 -> m86_17  [key=2, style=dotted];
m86_291 -> m86_292  [key=0, style=solid];
m86_293 -> m86_44  [key=2, style=dotted];
m86_293 -> m86_294  [key=0, style=solid];
m86_289 -> m86_290  [key=0, style=solid];
m86_289 -> m86_291  [color=darkseagreen4, key=1, label=type, style=dashed];
m86_288 -> m86_291  [color=darkseagreen4, key=1, label=convertedDate, style=dashed];
m86_288 -> m86_107  [key=2, style=dotted];
m86_288 -> m86_289  [key=0, style=solid];
m86_287 -> m86_288  [key=0, style=solid];
m86_294 -> m86_286  [color=blue, key=0, style=bold];
m86_34 -> m86_17  [key=2, style=dotted];
m86_34 -> m86_35  [key=0, style=solid];
m86_192 -> m86_441  [key=0, style=solid];
m86_441 -> m86_192  [color=blue, key=0, style=bold];
m86_161 -> m86_478  [key=0, style=solid];
m86_478 -> m86_479  [key=0, style=solid];
m86_479 -> m86_161  [color=blue, key=0, style=bold];
m86_265 -> m86_266  [key=0, style=solid];
m86_267 -> m86_81  [key=2, style=dotted];
m86_267 -> m86_268  [key=0, style=solid];
m86_267 -> m86_271  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_268 -> m86_226  [key=2, style=dotted];
m86_268 -> m86_269  [key=0, style=solid];
m86_266 -> m86_267  [key=0, style=solid];
m86_269 -> m86_44  [key=2, style=dotted];
m86_269 -> m86_270  [key=0, style=solid];
m86_270 -> m86_265  [color=blue, key=0, style=bold];
m86_375 -> m86_376  [key=0, style=solid];
m86_377 -> m86_13  [key=2, style=dotted];
m86_377 -> m86_378  [key=0, style=solid];
m86_377 -> m86_385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_377 -> m86_379  [color=darkseagreen4, key=1, label=thrownException, style=dashed];
m86_378 -> m86_13  [key=2, style=dotted];
m86_378 -> m86_379  [key=0, style=solid];
m86_379 -> m86_77  [key=2, style=dotted];
m86_379 -> m86_380  [key=0, style=solid];
m86_376 -> m86_81  [key=2, style=dotted];
m86_376 -> m86_377  [key=0, style=solid];
m86_376 -> m86_386  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_376 -> m86_381  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_380 -> m86_375  [color=blue, key=0, style=bold];
m86_153 -> m86_154  [key=0, style=solid];
m86_155 -> m86_77  [key=2, style=dotted];
m86_155 -> m86_156  [key=0, style=solid];
m86_156 -> m86_77  [key=2, style=dotted];
m86_156 -> m86_157  [key=0, style=solid];
m86_154 -> m86_155  [key=0, style=solid];
m86_154 -> m86_156  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_154 -> m86_143  [key=2, style=dotted];
m86_154 -> m86_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_157 -> m86_153  [color=blue, key=0, style=bold];
m86_53 -> m86_54  [key=0, style=solid];
m86_53 -> m86_55  [key=2, style=dotted];
m86_54 -> m86_51  [color=blue, key=0, style=bold];
m86_172 -> m86_173  [key=0, style=solid];
m86_173 -> m86_174  [key=0, style=solid];
m86_173 -> m86_177  [color=darkseagreen4, key=1, label=instance, style=dashed];
m86_173 -> m86_180  [color=darkseagreen4, key=1, label=instance, style=dashed];
m86_174 -> m86_13  [key=2, style=dotted];
m86_174 -> m86_175  [key=0, style=solid];
m86_174 -> m86_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_175 -> m86_172  [color=blue, key=0, style=bold];
m86_112 -> m86_113  [key=0, style=solid];
m86_113 -> m86_81  [key=2, style=dotted];
m86_113 -> m86_114  [key=0, style=solid];
m86_113 -> m86_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_113 -> m86_115  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_114 -> m86_77  [key=2, style=dotted];
m86_114 -> m86_115  [key=0, style=solid];
m86_115 -> m86_77  [key=2, style=dotted];
m86_115 -> m86_116  [key=0, style=solid];
m86_116 -> m86_112  [color=blue, key=0, style=bold];
m86_120 -> m86_456  [color=darkseagreen4, key=1, label=string, style=dashed];
m86_120 -> m86_457  [color=darkseagreen4, key=1, label=int, style=dashed];
m86_120 -> m86_455  [key=0, style=solid];
m86_456 -> m86_77  [key=2, style=dotted];
m86_456 -> m86_457  [key=0, style=solid];
m86_457 -> m86_77  [key=2, style=dotted];
m86_457 -> m86_458  [key=0, style=solid];
m86_455 -> m86_456  [key=0, style=solid];
m86_458 -> m86_120  [color=blue, key=0, style=bold];
m86_26 -> m86_27  [key=0, style=solid];
m86_26 -> m86_24  [color=blue, key=0, style=bold];
m86_27 -> m86_28  [key=0, style=solid];
m86_27 -> m86_29  [key=2, style=dotted];
m86_28 -> m86_26  [color=blue, key=0, style=bold];
m86_28 -> m86_17  [key=2, style=dotted];
m86_28 -> m86_29  [key=0, style=solid];
m86_89 -> m86_0  [key=2, style=dotted];
m86_89 -> m86_90  [key=0, style=solid];
m86_99 -> m86_100  [key=0, style=solid];
m86_106 -> m86_107  [key=0, style=solid];
m86_106 -> m86_26  [key=2, style=dotted];
m86_107 -> m86_99  [color=blue, key=0, style=bold];
m86_203 -> m86_442  [key=0, style=solid];
m86_442 -> m86_443  [key=0, style=solid];
m86_443 -> m86_203  [color=blue, key=0, style=bold];
m86_111 -> m86_465  [key=0, style=solid];
m86_111 -> m86_466  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m86_466 -> m86_77  [key=2, style=dotted];
m86_466 -> m86_467  [key=0, style=solid];
m86_465 -> m86_466  [key=0, style=solid];
m86_467 -> m86_111  [color=blue, key=0, style=bold];
m86_36 -> m86_37  [key=0, style=solid];
m86_36 -> m86_42  [key=2, style=dotted];
m86_37 -> m86_17  [key=2, style=dotted];
m86_37 -> m86_38  [key=0, style=solid];
m86_37 -> m86_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_37 -> m86_40  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_37 -> m86_22  [key=2, style=dotted];
m86_38 -> m86_39  [key=0, style=solid];
m86_38 -> m86_42  [key=2, style=dotted];
m86_38 -> m86_30  [key=2, style=dotted];
m86_39 -> m86_40  [key=0, style=solid];
m86_39 -> m86_42  [key=2, style=dotted];
m86_39 -> m86_43  [key=2, style=dotted];
m86_40 -> m86_41  [key=0, style=solid];
m86_40 -> m86_43  [key=2, style=dotted];
m86_40 -> m86_44  [key=2, style=dotted];
m86_40 -> m86_26  [key=2, style=dotted];
m86_41 -> m86_36  [color=blue, key=0, style=bold];
m86_41 -> m86_35  [color=blue, key=0, style=bold];
m86_331 -> m86_446  [key=0, style=solid];
m86_446 -> m86_447  [key=0, style=solid];
m86_447 -> m86_331  [color=blue, key=0, style=bold];
m86_371 -> m86_485  [key=0, style=solid];
m86_485 -> m86_486  [key=0, style=solid];
m86_486 -> m86_371  [color=blue, key=0, style=bold];
m86_238 -> m86_239  [key=0, style=solid];
m86_241 -> m86_226  [key=2, style=dotted];
m86_241 -> m86_242  [key=0, style=solid];
m86_240 -> m86_81  [key=2, style=dotted];
m86_240 -> m86_241  [key=0, style=solid];
m86_240 -> m86_244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_242 -> m86_44  [key=2, style=dotted];
m86_242 -> m86_243  [key=0, style=solid];
m86_239 -> m86_240  [key=0, style=solid];
m86_243 -> m86_238  [color=blue, key=0, style=bold];
m86_304 -> m86_305  [key=0, style=solid];
m86_307 -> m86_226  [key=2, style=dotted];
m86_307 -> m86_308  [key=0, style=solid];
m86_306 -> m86_81  [key=2, style=dotted];
m86_306 -> m86_307  [key=0, style=solid];
m86_306 -> m86_310  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_308 -> m86_44  [key=2, style=dotted];
m86_308 -> m86_309  [key=0, style=solid];
m86_305 -> m86_306  [key=0, style=solid];
m86_309 -> m86_304  [color=blue, key=0, style=bold];
m86_182 -> m86_183  [key=0, style=solid];
m86_184 -> m86_13  [key=2, style=dotted];
m86_184 -> m86_185  [key=0, style=solid];
m86_184 -> m86_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_184 -> m86_187  [color=darkseagreen4, key=1, label=test, style=dashed];
m86_183 -> m86_184  [key=0, style=solid];
m86_185 -> m86_182  [color=blue, key=0, style=bold];
m86_424 -> m86_425  [key=0, style=solid];
m86_56 -> m86_57  [color=green, key=0, style=solid];
m86_56 -> m86_42  [key=2, style=dotted];
m86_57 -> m86_58  [color=green, key=0, style=solid];
m86_57 -> m86_17  [color=green, key=2, style=dotted];
m86_57 -> m86_22  [key=2, style=dotted];
m86_58 -> m86_56  [color=blue, key=0, style=bold];
m86_58 -> m86_59  [key=0, style=solid];
m86_58 -> m86_30  [key=2, style=dotted];
m86_130 -> m86_131  [color=green, key=0, style=solid];
m86_131 -> m86_132  [color=green, key=0, style=solid];
m86_131 -> m86_111  [color=green, key=2, style=dotted];
m86_132 -> m86_130  [color=blue, key=0, style=bold];
m86_168 -> m86_169  [color=green, key=0, style=solid];
m86_169 -> m86_170  [color=green, key=0, style=solid];
m86_169 -> m86_171  [color=green, key=2, style=dotted];
m86_170 -> m86_168  [color=blue, key=0, style=bold];
m86_219 -> m86_220  [color=green, key=0, style=solid];
m86_224 -> m86_225  [color=green, key=0, style=solid];
m86_224 -> m86_226  [color=green, key=2, style=dotted];
m86_223 -> m86_224  [color=green, key=0, style=solid];
m86_225 -> m86_223  [color=blue, key=0, style=bold];
m86_220 -> m86_221  [color=green, key=0, style=solid];
m86_220 -> m86_222  [color=green, key=2, style=dotted];
m86_221 -> m86_219  [color=blue, key=0, style=bold];
m86_232 -> m86_233  [color=green, key=0, style=solid];
m86_236 -> m86_237  [color=green, key=0, style=solid];
m86_236 -> m86_226  [color=green, key=2, style=dotted];
m86_235 -> m86_236  [color=green, key=0, style=solid];
m86_237 -> m86_235  [color=blue, key=0, style=bold];
m86_233 -> m86_234  [color=green, key=0, style=solid];
m86_233 -> m86_222  [color=green, key=2, style=dotted];
m86_234 -> m86_232  [color=blue, key=0, style=bold];
m86_22 -> m86_17  [key=2, style=dotted];
m86_22 -> m86_23  [key=0, style=solid];
m86_22 -> m86_36  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_22 -> m86_45  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_22 -> m86_56  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_22 -> m86_65  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_22 -> m86_73  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_22 -> m86_81  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_22 -> m86_91  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_22 -> m86_100  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_109 -> m86_111  [key=2, style=dotted];
m86_109 -> m86_110  [key=0, style=solid];
m86_118 -> m86_119  [key=0, style=solid];
m86_118 -> m86_120  [key=2, style=dotted];
m86_134 -> m86_111  [key=2, style=dotted];
m86_134 -> m86_135  [key=0, style=solid];
m86_272 -> m86_273  [key=0, style=solid];
m86_272 -> m86_120  [key=2, style=dotted];
m86_302 -> m86_111  [key=2, style=dotted];
m86_302 -> m86_303  [key=0, style=solid];
m86_329 -> m86_330  [key=0, style=solid];
m86_329 -> m86_331  [key=2, style=dotted];
m86_333 -> m86_226  [key=2, style=dotted];
m86_333 -> m86_334  [key=0, style=solid];
m86_346 -> m86_347  [key=0, style=solid];
m86_346 -> m86_331  [key=2, style=dotted];
m86_349 -> m86_226  [key=2, style=dotted];
m86_349 -> m86_350  [key=0, style=solid];
m86_373 -> m86_226  [key=2, style=dotted];
m86_373 -> m86_374  [key=0, style=solid];
m86_386 -> m86_226  [key=2, style=dotted];
m86_386 -> m86_387  [key=0, style=solid];
m86_402 -> m86_226  [key=2, style=dotted];
m86_402 -> m86_403  [key=0, style=solid];
m86_151 -> m86_0  [key=2, style=dotted];
m86_151 -> m86_152  [key=0, style=solid];
m86_33 -> m86_34  [key=0, style=solid];
m86_33 -> m86_30  [color=blue, key=0, style=bold];
m86_325 -> m86_13  [key=2, style=dotted];
m86_325 -> m86_326  [key=0, style=solid];
m86_325 -> m86_327  [key=2, style=dotted];
m86_343 -> m86_13  [key=2, style=dotted];
m86_343 -> m86_344  [key=0, style=solid];
m86_343 -> m86_327  [key=2, style=dotted];
m86_357 -> m86_17  [key=2, style=dotted];
m86_357 -> m86_358  [key=0, style=solid];
m86_357 -> m86_359  [key=2, style=dotted];
m86_108 -> m86_109  [key=0, style=solid];
m86_108 -> m86_37  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_38  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_40  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_46  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_47  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_51  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_57  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_58  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_61  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_66  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_67  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_70  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_74  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_75  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_78  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_82  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_83  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_87  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_92  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_93  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_97  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_101  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_102  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_108 -> m86_106  [color=darkseagreen4, key=1, label="HangFire.Tests.States.SucceededStateFeature", style=dashed];
m86_177 -> m86_81  [key=2, style=dotted];
m86_177 -> m86_178  [key=0, style=solid];
m86_177 -> m86_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_187 -> m86_81  [key=2, style=dotted];
m86_187 -> m86_188  [key=0, style=solid];
m86_187 -> m86_189  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_187 -> m86_190  [color=darkseagreen4, key=1, label=test, style=dashed];
m86_198 -> m86_81  [key=2, style=dotted];
m86_198 -> m86_199  [key=0, style=solid];
m86_198 -> m86_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_208 -> m86_81  [key=2, style=dotted];
m86_208 -> m86_209  [key=0, style=solid];
m86_208 -> m86_210  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_180 -> m86_171  [key=2, style=dotted];
m86_180 -> m86_181  [key=0, style=solid];
m86_245 -> m86_222  [key=2, style=dotted];
m86_245 -> m86_246  [key=0, style=solid];
m86_21 -> m86_22  [key=0, style=solid];
m86_23 -> m86_21  [color=blue, key=0, style=bold];
m86_23 -> m86_24  [key=0, style=solid];
m86_23 -> m86_25  [key=2, style=dotted];
m86_35 -> m86_33  [color=blue, key=0, style=bold];
m86_35 -> m86_36  [key=0, style=solid];
m86_63 -> m86_64  [key=0, style=solid];
m86_110 -> m86_108  [color=blue, key=0, style=bold];
m86_117 -> m86_118  [key=0, style=solid];
m86_119 -> m86_117  [color=blue, key=0, style=bold];
m86_133 -> m86_134  [key=0, style=solid];
m86_135 -> m86_133  [color=blue, key=0, style=bold];
m86_271 -> m86_272  [key=0, style=solid];
m86_273 -> m86_271  [color=blue, key=0, style=bold];
m86_301 -> m86_302  [key=0, style=solid];
m86_303 -> m86_301  [color=blue, key=0, style=bold];
m86_324 -> m86_325  [key=0, style=solid];
m86_328 -> m86_329  [key=0, style=solid];
m86_330 -> m86_328  [color=blue, key=0, style=bold];
m86_332 -> m86_333  [key=0, style=solid];
m86_334 -> m86_332  [color=blue, key=0, style=bold];
m86_342 -> m86_343  [key=0, style=solid];
m86_345 -> m86_346  [key=0, style=solid];
m86_347 -> m86_345  [color=blue, key=0, style=bold];
m86_348 -> m86_349  [key=0, style=solid];
m86_350 -> m86_348  [color=blue, key=0, style=bold];
m86_372 -> m86_373  [key=0, style=solid];
m86_374 -> m86_372  [color=blue, key=0, style=bold];
m86_385 -> m86_386  [key=0, style=solid];
m86_387 -> m86_385  [color=blue, key=0, style=bold];
m86_397 -> m86_398  [key=0, style=solid];
m86_401 -> m86_402  [key=0, style=solid];
m86_403 -> m86_401  [color=blue, key=0, style=bold];
m86_90 -> m86_88  [color=blue, key=0, style=bold];
m86_90 -> m86_91  [key=0, style=solid];
m86_150 -> m86_151  [key=0, style=solid];
m86_152 -> m86_150  [color=blue, key=0, style=bold];
m86_140 -> m86_141  [key=0, style=solid];
m86_147 -> m86_148  [key=0, style=solid];
m86_176 -> m86_177  [key=0, style=solid];
m86_186 -> m86_187  [key=0, style=solid];
m86_197 -> m86_198  [key=0, style=solid];
m86_207 -> m86_208  [key=0, style=solid];
m86_326 -> m86_324  [color=blue, key=0, style=bold];
m86_344 -> m86_342  [color=blue, key=0, style=bold];
m86_356 -> m86_357  [key=0, style=solid];
m86_358 -> m86_356  [color=blue, key=0, style=bold];
m86_96 -> m86_97  [key=0, style=solid];
m86_96 -> m86_43  [key=2, style=dotted];
m86_178 -> m86_176  [color=blue, key=0, style=bold];
m86_179 -> m86_180  [key=0, style=solid];
m86_188 -> m86_186  [color=blue, key=0, style=bold];
m86_189 -> m86_190  [key=0, style=solid];
m86_190 -> m86_190  [color=darkseagreen4, key=1, label=test, style=dashed];
m86_190 -> m86_191  [key=0, style=solid];
m86_190 -> m86_192  [key=2, style=dotted];
m86_199 -> m86_197  [color=blue, key=0, style=bold];
m86_200 -> m86_201  [key=0, style=solid];
m86_209 -> m86_207  [color=blue, key=0, style=bold];
m86_210 -> m86_211  [key=0, style=solid];
m86_244 -> m86_245  [key=0, style=solid];
m86_310 -> m86_311  [key=0, style=solid];
m86_381 -> m86_382  [key=0, style=solid];
m86_393 -> m86_394  [key=0, style=solid];
m86_181 -> m86_179  [color=blue, key=0, style=bold];
m86_246 -> m86_244  [color=blue, key=0, style=bold];
m86_253 -> m86_254  [key=0, style=solid];
m86_262 -> m86_263  [key=0, style=solid];
m86_368 -> m86_369  [key=0, style=solid];
m86_399 -> m86_397  [color=blue, key=0, style=bold];
m86_398 -> m86_399  [key=0, style=solid];
m86_398 -> m86_400  [key=2, style=dotted];
m86_409 -> m86_410  [key=0, style=solid];
m86_148 -> m86_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_148 -> m86_143  [key=2, style=dotted];
m86_148 -> m86_149  [key=0, style=solid];
m86_142 -> m86_140  [color=blue, key=0, style=bold];
m86_141 -> m86_143  [key=2, style=dotted];
m86_141 -> m86_142  [key=0, style=solid];
m86_149 -> m86_147  [color=blue, key=0, style=bold];
m86_158 -> m86_159  [key=0, style=solid];
m86_98 -> m86_96  [color=blue, key=0, style=bold];
m86_98 -> m86_90  [color=blue, key=0, style=bold];
m86_97 -> m86_98  [key=0, style=solid];
m86_97 -> m86_99  [key=2, style=dotted];
m86_97 -> m86_26  [key=2, style=dotted];
m86_191 -> m86_189  [color=blue, key=0, style=bold];
m86_202 -> m86_200  [color=blue, key=0, style=bold];
m86_201 -> m86_202  [key=0, style=solid];
m86_201 -> m86_203  [key=2, style=dotted];
m86_212 -> m86_210  [color=blue, key=0, style=bold];
m86_211 -> m86_212  [key=0, style=solid];
m86_211 -> m86_213  [key=2, style=dotted];
m86_312 -> m86_310  [color=blue, key=0, style=bold];
m86_311 -> m86_312  [key=0, style=solid];
m86_311 -> m86_313  [key=2, style=dotted];
m86_383 -> m86_381  [color=blue, key=0, style=bold];
m86_382 -> m86_383  [key=0, style=solid];
m86_382 -> m86_384  [key=2, style=dotted];
m86_395 -> m86_393  [color=blue, key=0, style=bold];
m86_394 -> m86_395  [key=0, style=solid];
m86_394 -> m86_396  [key=2, style=dotted];
m86_255 -> m86_253  [color=blue, key=0, style=bold];
m86_254 -> m86_255  [key=0, style=solid];
m86_254 -> m86_161  [key=2, style=dotted];
m86_264 -> m86_262  [color=blue, key=0, style=bold];
m86_263 -> m86_264  [key=0, style=solid];
m86_263 -> m86_161  [key=2, style=dotted];
m86_370 -> m86_368  [color=blue, key=0, style=bold];
m86_369 -> m86_370  [key=0, style=solid];
m86_369 -> m86_371  [key=2, style=dotted];
m86_411 -> m86_409  [color=blue, key=0, style=bold];
m86_410 -> m86_411  [key=0, style=solid];
m86_410 -> m86_412  [key=2, style=dotted];
m86_437 -> m86_438  [key=0, style=solid];
m86_160 -> m86_158  [color=blue, key=0, style=bold];
m86_159 -> m86_160  [key=0, style=solid];
m86_159 -> m86_161  [key=2, style=dotted];
m86_439 -> m86_437  [color=blue, key=0, style=bold];
m86_438 -> m86_161  [key=2, style=dotted];
m86_438 -> m86_439  [key=0, style=solid];
m86_425 -> m86_161  [key=2, style=dotted];
m86_425 -> m86_426  [key=0, style=solid];
m86_426 -> m86_424  [color=blue, key=0, style=bold];
m86_295 -> m86_296  [key=0, style=solid];
m86_297 -> m86_81  [key=2, style=dotted];
m86_297 -> m86_298  [key=0, style=solid];
m86_297 -> m86_301  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_298 -> m86_226  [key=2, style=dotted];
m86_298 -> m86_299  [key=0, style=solid];
m86_296 -> m86_297  [key=0, style=solid];
m86_299 -> m86_44  [key=2, style=dotted];
m86_299 -> m86_300  [key=0, style=solid];
m86_300 -> m86_295  [color=blue, key=0, style=bold];
m86_222 -> m86_444  [key=0, style=solid];
m86_444 -> m86_445  [key=0, style=solid];
m86_445 -> m86_222  [color=blue, key=0, style=bold];
m86_30 -> m86_31  [key=0, style=solid];
m86_31 -> m86_52  [color=green, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_31 -> m86_32  [key=0, style=solid];
m86_31 -> m86_13  [key=2, style=dotted];
m86_31 -> m86_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_31 -> m86_67  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_31 -> m86_112  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_31 -> m86_127  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_31 -> m86_436  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_31 -> m86_173  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_31 -> m86_81  [color=darkorchid, key=3, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo", style=bold];
m86_31 -> m86_34  [key=2, style=dotted];
m86_32 -> m86_30  [color=blue, key=0, style=bold];
m86_32 -> m86_33  [key=0, style=solid];
m86_32 -> m86_34  [key=2, style=dotted];
m86_10 -> m86_11  [key=0, style=solid];
m86_10 -> m86_13  [key=2, style=dotted];
m86_11 -> m86_13  [key=2, style=dotted];
m86_11 -> m86_12  [key=0, style=solid];
m86_11 -> m86_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_12 -> m86_10  [color=blue, key=0, style=bold];
m86_12 -> m86_9  [color=blue, key=0, style=bold];
m86_91 -> m86_92  [key=0, style=solid];
m86_91 -> m86_42  [key=2, style=dotted];
m86_93 -> m86_77  [key=2, style=dotted];
m86_93 -> m86_94  [key=0, style=solid];
m86_93 -> m86_30  [key=2, style=dotted];
m86_94 -> m86_77  [key=2, style=dotted];
m86_94 -> m86_95  [key=0, style=solid];
m86_94 -> m86_63  [key=2, style=dotted];
m86_92 -> m86_81  [key=2, style=dotted];
m86_92 -> m86_93  [key=0, style=solid];
m86_92 -> m86_94  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_92 -> m86_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_92 -> m86_22  [key=2, style=dotted];
m86_95 -> m86_91  [color=blue, key=0, style=bold];
m86_95 -> m86_96  [key=0, style=solid];
m86_95 -> m86_89  [key=2, style=dotted];
m86_9 -> m86_10  [key=0, style=solid];
m86_214 -> m86_215  [color=green, key=0, style=solid];
m86_215 -> m86_216  [color=green, key=0, style=solid];
m86_215 -> m86_81  [color=green, key=2, style=dotted];
m86_215 -> m86_219  [color=green, key=1, label="lambda expression", style=dashed];
m86_215 -> m86_224  [color=green, key=1, label=job, style=dashed];
m86_216 -> m86_217  [color=green, key=0, style=solid];
m86_216 -> m86_13  [color=green, key=2, style=dotted];
m86_216 -> m86_223  [color=green, key=1, label="lambda expression", style=dashed];
m86_217 -> m86_218  [color=green, key=0, style=solid];
m86_217 -> m86_77  [color=green, key=2, style=dotted];
m86_218 -> m86_214  [color=blue, key=0, style=bold];
m86_413 -> m86_414  [key=0, style=solid];
m86_417 -> m86_77  [key=2, style=dotted];
m86_417 -> m86_418  [key=0, style=solid];
m86_418 -> m86_77  [key=2, style=dotted];
m86_418 -> m86_419  [key=0, style=solid];
m86_415 -> m86_417  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m86_415 -> m86_416  [key=0, style=solid];
m86_415 -> m86_422  [key=2, style=dotted];
m86_415 -> m86_423  [key=2, style=dotted];
m86_415 -> m86_419  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m86_416 -> m86_417  [key=0, style=solid];
m86_416 -> m86_418  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m86_416 -> m86_422  [key=2, style=dotted];
m86_416 -> m86_423  [key=2, style=dotted];
m86_416 -> m86_420  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m86_419 -> m86_44  [key=2, style=dotted];
m86_419 -> m86_420  [key=0, style=solid];
m86_420 -> m86_44  [key=2, style=dotted];
m86_420 -> m86_421  [key=0, style=solid];
m86_414 -> m86_415  [key=0, style=solid];
m86_414 -> m86_416  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_414 -> m86_143  [key=2, style=dotted];
m86_414 -> m86_424  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_421 -> m86_413  [color=blue, key=0, style=bold];
m86_487 -> m86_488  [key=0, style=solid];
m86_488 -> m86_321  [key=2, style=dotted];
m86_488 -> m86_489  [key=0, style=solid];
m86_489 -> m86_487  [color=blue, key=0, style=bold];
m86_55 -> m86_56  [key=0, style=solid];
m86_59 -> m86_60  [key=0, style=solid];
m86_59 -> m86_63  [key=2, style=dotted];
m86_60 -> m86_61  [key=0, style=solid];
m86_60 -> m86_43  [key=2, style=dotted];
m86_60 -> m86_7  [key=2, style=dotted];
m86_60 -> m86_64  [color=darkseagreen4, key=1, label=method, style=dashed];
m86_61 -> m86_62  [key=0, style=solid];
m86_61 -> m86_26  [key=2, style=dotted];
m86_61 -> m86_13  [key=2, style=dotted];
m86_61 -> m86_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_62 -> m86_55  [color=blue, key=0, style=bold];
m86_62 -> m86_59  [color=blue, key=0, style=bold];
m86_427 -> m86_428  [key=0, style=solid];
m86_431 -> m86_77  [key=2, style=dotted];
m86_431 -> m86_432  [key=0, style=solid];
m86_432 -> m86_77  [key=2, style=dotted];
m86_432 -> m86_433  [key=0, style=solid];
m86_429 -> m86_436  [key=2, style=dotted];
m86_429 -> m86_431  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m86_429 -> m86_430  [key=0, style=solid];
m86_429 -> m86_423  [key=2, style=dotted];
m86_429 -> m86_433  [color=darkseagreen4, key=1, label=nonCachedAttributes, style=dashed];
m86_430 -> m86_436  [key=2, style=dotted];
m86_430 -> m86_431  [key=0, style=solid];
m86_430 -> m86_432  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m86_430 -> m86_423  [key=2, style=dotted];
m86_430 -> m86_434  [color=darkseagreen4, key=1, label=cachedAttributes, style=dashed];
m86_433 -> m86_44  [key=2, style=dotted];
m86_433 -> m86_434  [key=0, style=solid];
m86_434 -> m86_44  [key=2, style=dotted];
m86_434 -> m86_435  [key=0, style=solid];
m86_428 -> m86_429  [key=0, style=solid];
m86_428 -> m86_430  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_428 -> m86_143  [key=2, style=dotted];
m86_428 -> m86_437  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_435 -> m86_427  [color=blue, key=0, style=bold];
m86_313 -> m86_451  [key=0, style=solid];
m86_313 -> m86_452  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m86_451 -> m86_452  [key=0, style=solid];
m86_452 -> m86_453  [key=0, style=solid];
m86_452 -> m86_454  [key=2, style=dotted];
m86_453 -> m86_313  [color=blue, key=0, style=bold];
m86_24 -> m86_22  [color=blue, key=0, style=bold];
m86_24 -> m86_25  [key=0, style=solid];
m86_204 -> m86_205  [key=0, style=solid];
m86_205 -> m86_13  [key=2, style=dotted];
m86_205 -> m86_206  [key=0, style=solid];
m86_205 -> m86_207  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_206 -> m86_204  [color=blue, key=0, style=bold];
m86_396 -> m86_448  [key=0, style=solid];
m86_448 -> m86_449  [key=0, style=solid];
m86_448 -> m86_450  [key=2, style=dotted];
m86_449 -> m86_396  [color=blue, key=0, style=bold];
m86_227 -> m86_228  [color=green, key=0, style=solid];
m86_228 -> m86_229  [color=green, key=0, style=solid];
m86_228 -> m86_81  [color=green, key=2, style=dotted];
m86_228 -> m86_232  [color=green, key=1, label="lambda expression", style=dashed];
m86_228 -> m86_236  [color=green, key=1, label=job, style=dashed];
m86_229 -> m86_230  [color=green, key=0, style=solid];
m86_229 -> m86_13  [color=green, key=2, style=dotted];
m86_229 -> m86_235  [color=green, key=1, label="lambda expression", style=dashed];
m86_230 -> m86_77  [key=2, style=dotted];
m86_230 -> m86_231  [key=0, style=solid];
m86_231 -> m86_227  [color=blue, key=0, style=bold];
m86_193 -> m86_194  [key=0, style=solid];
m86_195 -> m86_13  [key=2, style=dotted];
m86_195 -> m86_196  [key=0, style=solid];
m86_195 -> m86_197  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_194 -> m86_195  [key=0, style=solid];
m86_196 -> m86_193  [color=blue, key=0, style=bold];
m86_247 -> m86_248  [key=0, style=solid];
m86_250 -> m86_226  [key=2, style=dotted];
m86_250 -> m86_251  [key=0, style=solid];
m86_249 -> m86_250  [key=0, style=solid];
m86_249 -> m86_143  [key=2, style=dotted];
m86_249 -> m86_253  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_251 -> m86_44  [key=2, style=dotted];
m86_251 -> m86_252  [key=0, style=solid];
m86_248 -> m86_249  [key=0, style=solid];
m86_252 -> m86_247  [color=blue, key=0, style=bold];
m86_25 -> m86_13  [key=2, style=dotted];
m86_25 -> m86_26  [key=0, style=solid];
m86_25 -> m86_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_121 -> m86_122  [key=0, style=solid];
m86_123 -> m86_124  [color=green, key=0, style=solid];
m86_123 -> m86_129  [color=green, key=2, style=dotted];
m86_122 -> m86_123  [color=green, key=0, style=solid];
m86_122 -> m86_124  [color=green, key=1, label=date, style=dashed];
m86_122 -> m86_131  [color=green, key=1, label=date, style=dashed];
m86_122 -> m86_126  [color=darkseagreen4, key=1, label=date, style=dashed];
m86_122 -> m86_134  [color=darkseagreen4, key=1, label=date, style=dashed];
m86_124 -> m86_125  [color=green, key=0, style=solid];
m86_124 -> m86_81  [color=green, key=2, style=dotted];
m86_124 -> m86_130  [color=green, key=1, label="lambda expression", style=dashed];
m86_124 -> m86_127  [color=green, key=1, label=enJob, style=dashed];
m86_125 -> m86_129  [key=2, style=dotted];
m86_125 -> m86_126  [key=0, style=solid];
m86_127 -> m86_77  [key=2, style=dotted];
m86_127 -> m86_128  [key=0, style=solid];
m86_126 -> m86_81  [key=2, style=dotted];
m86_126 -> m86_127  [key=0, style=solid];
m86_126 -> m86_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_128 -> m86_121  [color=blue, key=0, style=bold];
m86_162 -> m86_163  [key=0, style=solid];
m86_164 -> m86_165  [color=green, key=0, style=solid];
m86_164 -> m86_81  [color=green, key=2, style=dotted];
m86_164 -> m86_168  [color=green, key=1, label="lambda expression", style=dashed];
m86_163 -> m86_164  [color=green, key=0, style=solid];
m86_163 -> m86_169  [color=green, key=1, label=instance, style=dashed];
m86_163 -> m86_167  [key=2, style=dotted];
m86_165 -> m86_166  [color=green, key=0, style=solid];
m86_165 -> m86_77  [color=green, key=2, style=dotted];
m86_166 -> m86_162  [color=blue, key=0, style=bold];
m86_144 -> m86_145  [key=0, style=solid];
m86_145 -> m86_13  [key=2, style=dotted];
m86_145 -> m86_146  [key=0, style=solid];
m86_145 -> m86_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_146 -> m86_144  [color=blue, key=0, style=bold];
m86_256 -> m86_257  [key=0, style=solid];
m86_259 -> m86_226  [key=2, style=dotted];
m86_259 -> m86_260  [key=0, style=solid];
m86_258 -> m86_259  [key=0, style=solid];
m86_258 -> m86_143  [key=2, style=dotted];
m86_258 -> m86_262  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_260 -> m86_44  [key=2, style=dotted];
m86_260 -> m86_261  [key=0, style=solid];
m86_257 -> m86_258  [key=0, style=solid];
m86_261 -> m86_256  [color=blue, key=0, style=bold];
m86_274 -> m86_275  [key=0, style=solid];
m86_281 -> m86_226  [key=2, style=dotted];
m86_281 -> m86_282  [key=0, style=solid];
m86_279 -> m86_7  [key=2, style=dotted];
m86_279 -> m86_280  [key=0, style=solid];
m86_280 -> m86_17  [key=2, style=dotted];
m86_280 -> m86_281  [key=0, style=solid];
m86_282 -> m86_44  [key=2, style=dotted];
m86_282 -> m86_283  [key=0, style=solid];
m86_278 -> m86_279  [key=0, style=solid];
m86_278 -> m86_280  [color=darkseagreen4, key=1, label=type, style=dashed];
m86_277 -> m86_280  [color=darkseagreen4, key=1, label=convertedDate, style=dashed];
m86_277 -> m86_278  [key=0, style=solid];
m86_277 -> m86_285  [key=2, style=dotted];
m86_276 -> m86_277  [key=0, style=solid];
m86_276 -> m86_284  [key=2, style=dotted];
m86_275 -> m86_276  [key=0, style=solid];
m86_283 -> m86_274  [color=blue, key=0, style=bold];
m86_459 -> m86_461  [color=darkseagreen4, key=1, label=object, style=dashed];
m86_459 -> m86_460  [key=0, style=solid];
m86_461 -> m86_77  [key=2, style=dotted];
m86_461 -> m86_462  [key=0, style=solid];
m86_460 -> m86_461  [key=0, style=solid];
m86_462 -> m86_459  [color=blue, key=0, style=bold];
m86_388 -> m86_389  [key=0, style=solid];
m86_390 -> m86_13  [key=2, style=dotted];
m86_390 -> m86_391  [key=0, style=solid];
m86_390 -> m86_322  [key=2, style=dotted];
m86_390 -> m86_397  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_391 -> m86_13  [key=2, style=dotted];
m86_391 -> m86_392  [key=0, style=solid];
m86_391 -> m86_401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_389 -> m86_81  [key=2, style=dotted];
m86_389 -> m86_390  [key=0, style=solid];
m86_389 -> m86_391  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_389 -> m86_402  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_389 -> m86_393  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_392 -> m86_388  [color=blue, key=0, style=bold];
m86_404 -> m86_405  [key=0, style=solid];
m86_406 -> m86_226  [key=2, style=dotted];
m86_406 -> m86_407  [key=0, style=solid];
m86_407 -> m86_77  [key=2, style=dotted];
m86_407 -> m86_408  [key=0, style=solid];
m86_405 -> m86_406  [key=0, style=solid];
m86_405 -> m86_143  [key=2, style=dotted];
m86_405 -> m86_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m86_408 -> m86_404  [color=blue, key=0, style=bold];
m86_492 -> m86_1  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_2  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_3  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_4  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_46  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_52  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_57  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_124  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_131  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_216  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_224  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_229  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_236  [color=green, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_19  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_25  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_28  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_34  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_39  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_40  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_60  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_61  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_68  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_109  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_113  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_118  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_126  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_241  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_250  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_259  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_267  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_272  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_268  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_281  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_292  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_297  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_302  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_298  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_307  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_316  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_317  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_329  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_318  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_333  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_336  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_337  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_346  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_338  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_349  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_363  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_373  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_377  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_386  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_390  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_391  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_402  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_492 -> m86_406  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Common.JobFacts", style=dashed];
m86_496 -> m86_131  [color=green, key=1, label=date, style=dashed];
m86_496 -> m86_134  [color=darkseagreen4, key=1, label=date, style=dashed];
m86_497 -> m86_169  [color=green, key=1, label=instance, style=dashed];
m86_500 -> m86_224  [color=green, key=1, label=job, style=dashed];
m86_501 -> m86_236  [color=green, key=1, label=job, style=dashed];
m86_493 -> m86_64  [color=darkseagreen4, key=1, label=method, style=dashed];
m86_494 -> m86_71  [color=darkseagreen4, key=1, label=method, style=dashed];
m86_495 -> m86_109  [color=darkseagreen4, key=1, label=date, style=dashed];
m86_502 -> m86_333  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_503 -> m86_349  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_506 -> m86_373  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_507 -> m86_386  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_508 -> m86_402  [color=darkseagreen4, key=1, label=job, style=dashed];
m86_504 -> m86_357  [color=darkseagreen4, key=1, label=type, style=dashed];
m86_505 -> m86_357  [color=darkseagreen4, key=1, label=method, style=dashed];
m86_498 -> m86_177  [color=darkseagreen4, key=1, label=instance, style=dashed];
m86_498 -> m86_180  [color=darkseagreen4, key=1, label=instance, style=dashed];
m86_499 -> m86_187  [color=darkseagreen4, key=1, label=test, style=dashed];
m86_499 -> m86_190  [color=darkseagreen4, key=1, label=test, style=dashed];
m87_0 -> m87_1  [key=0, style=solid];
m87_0 -> m87_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m87_0 -> m87_3  [color=darkseagreen4, key=1, label=bool, style=dashed];
m87_1 -> m87_2  [key=0, style=solid];
m87_2 -> m87_3  [key=0, style=solid];
m87_2 -> m87_11  [key=2, style=dotted];
m87_3 -> m87_4  [key=0, style=solid];
m87_3 -> m87_12  [key=2, style=dotted];
m87_4 -> m87_0  [color=blue, key=0, style=bold];
m87_4 -> m87_5  [color=green, key=0, style=solid];
m87_4 -> m87_12  [key=2, style=dotted];
m87_13 -> m87_14  [color=red, key=0, style=solid];
m87_13 -> m87_17  [color=darkseagreen4, key=1, label="HangFire.Server.Filters.ServerExceptionContext", style=dashed];
m87_13 -> m87_5  [color=green, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m87_13 -> m87_1  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m87_13 -> m87_2  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m87_13 -> m87_3  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m87_13 -> m87_4  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m87_13 -> m87_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m87_13 -> m87_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m87_13 -> m87_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m87_13 -> m87_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerStorageOptions", style=dashed];
m87_14 -> m87_15  [color=red, key=0, style=solid];
m87_14 -> m87_11  [color=red, key=2, style=dotted];
m87_17 -> m87_18  [key=0, style=solid];
m87_15 -> m87_16  [key=0, style=solid];
m87_15 -> m87_12  [key=2, style=dotted];
m87_16 -> m87_17  [key=0, style=solid];
m87_16 -> m87_18  [key=0, style=solid];
m87_18 -> m87_13  [color=blue, key=0, style=bold];
m87_5 -> m87_6  [color=red, key=0, style=solid];
m87_5 -> m87_12  [color=green, key=2, style=dotted];
m87_5 -> m87_9  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.ClientExceptionContext", style=dashed];
m87_6 -> m87_7  [color=red, key=0, style=solid];
m87_6 -> m87_11  [color=red, key=2, style=dotted];
m87_7 -> m87_8  [key=0, style=solid];
m87_7 -> m87_12  [key=2, style=dotted];
m87_8 -> m87_9  [key=0, style=solid];
m87_8 -> m87_10  [key=0, style=solid];
m87_9 -> m87_12  [key=2, style=dotted];
m87_9 -> m87_10  [key=0, style=solid];
m87_10 -> m87_0  [color=blue, key=0, style=bold];
m87_10 -> m87_5  [color=blue, key=0, style=bold];
m87_19 -> m87_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m87_19 -> m87_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m87_19 -> m87_3  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m87_19 -> m87_7  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m87_19 -> m87_8  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m87_19 -> m87_15  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m87_19 -> m87_16  [color=darkseagreen4, key=1, label="HangFire.Tests.TestExceptionFilter", style=dashed];
m88_0 -> m88_1  [key=0, style=solid];
m88_1 -> m88_2  [key=0, style=solid];
m88_2 -> m88_3  [key=0, style=solid];
m88_2 -> m88_7  [key=2, style=dotted];
m88_3 -> m88_4  [key=0, style=solid];
m88_3 -> m88_8  [key=2, style=dotted];
m88_4 -> m88_5  [key=0, style=solid];
m88_4 -> m88_9  [key=2, style=dotted];
m88_5 -> m88_6  [key=0, style=solid];
m88_5 -> m88_10  [key=2, style=dotted];
m88_6 -> m88_0  [color=blue, key=0, style=bold];
m88_11 -> m88_12  [key=0, style=solid];
m88_12 -> m88_13  [key=0, style=solid];
m88_12 -> m88_14  [key=2, style=dotted];
m88_13 -> m88_11  [color=blue, key=0, style=bold];
m88_15 -> m88_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m88_15 -> m88_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m88_15 -> m88_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m88_15 -> m88_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m88_15 -> m88_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m88_15 -> m88_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.BackgroundProcessContextMock", style=dashed];
m89_11 -> m89_12  [color=green, key=0, style=solid];
m89_12 -> m89_13  [color=green, key=0, style=solid];
m89_12 -> m89_8  [color=green, key=2, style=dotted];
m89_13 -> m89_14  [key=0, style=solid];
m89_13 -> m89_9  [key=2, style=dotted];
m89_13 -> m89_10  [key=2, style=dotted];
m89_14 -> m89_11  [color=blue, key=0, style=bold];
m89_0 -> m89_1  [key=0, style=solid];
m89_0 -> m89_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m89_1 -> m89_2  [key=0, style=solid];
m89_1 -> m89_0  [color=blue, key=0, style=bold];
m89_2 -> m89_3  [key=0, style=solid];
m89_3 -> m89_0  [color=blue, key=0, style=bold];
m89_4 -> m89_5  [color=green, key=0, style=solid];
m89_5 -> m89_6  [color=green, key=0, style=solid];
m89_5 -> m89_8  [color=green, key=2, style=dotted];
m89_6 -> m89_7  [key=0, style=solid];
m89_6 -> m89_9  [key=2, style=dotted];
m89_6 -> m89_10  [key=2, style=dotted];
m89_7 -> m89_4  [color=blue, key=0, style=bold];
m89_15 -> m89_6  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m89_15 -> m89_13  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m89_15 -> m89_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m89_15 -> m89_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangedFilter", style=dashed];
m90_8 -> m90_10  [key=0, style=solid];
m90_8 -> m90_9  [key=0, style=solid];
m90_12 -> m90_10  [color=blue, key=0, style=bold];
m90_0 -> m90_1  [key=0, style=solid];
m90_0 -> m90_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m90_0 -> m90_3  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m90_0 -> m90_4  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m90_0 -> m90_5  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m90_0 -> m90_6  [color=darkseagreen4, key=1, label="Hangfire.DashboardOptions", style=dashed];
m90_1 -> m90_2  [key=0, style=solid];
m90_1 -> m90_3  [key=0, style=solid];
m90_2 -> m90_7  [key=0, style=solid];
m90_2 -> m90_8  [key=2, style=dotted];
m90_2 -> m90_9  [key=2, style=dotted];
m90_2 -> m90_3  [key=0, style=solid];
m90_3 -> m90_4  [key=0, style=solid];
m90_3 -> m90_5  [key=0, style=solid];
m90_4 -> m90_7  [key=0, style=solid];
m90_4 -> m90_8  [key=2, style=dotted];
m90_4 -> m90_9  [key=2, style=dotted];
m90_4 -> m90_0  [color=blue, key=0, style=bold];
m90_5 -> m90_6  [color=green, key=0, style=solid];
m90_5 -> m90_9  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m90_6 -> m90_7  [color=green, key=0, style=solid];
m90_6 -> m90_11  [color=green, key=2, style=dotted];
m90_7 -> m90_0  [color=blue, key=0, style=bold];
m90_7 -> m90_8  [key=0, style=solid];
m90_7 -> m90_12  [key=2, style=dotted];
m90_9 -> m90_10  [key=0, style=solid];
m90_10 -> m90_11  [key=0, style=solid];
m90_10 -> m90_5  [color=blue, key=0, style=bold];
m90_11 -> m90_12  [key=0, style=solid];
m90_11 -> m90_13  [key=2, style=dotted];
m90_14 -> m90_15  [key=0, style=solid];
m90_15 -> m90_16  [key=0, style=solid];
m90_15 -> m90_17  [key=2, style=dotted];
m90_16 -> m90_14  [color=blue, key=0, style=bold];
m90_13 -> m90_7  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m90_13 -> m90_9  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m90_13 -> m90_1  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m90_13 -> m90_2  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m90_13 -> m90_3  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m90_13 -> m90_8  [color=darkseagreen4, key=1, label="HangFire.Tests.TestStateChangingFilter", style=dashed];
m90_18 -> m90_5  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m90_18 -> m90_6  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m90_18 -> m90_11  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m90_18 -> m90_15  [color=darkseagreen4, key=1, label="Hangfire.Dashboard.DashboardContext", style=dashed];
m91_123 -> m91_128  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_123 -> m91_124  [key=0, style=solid];
m91_123 -> m91_126  [color=darkseagreen4, key=1, label=double, style=dashed];
m91_128 -> m91_67  [key=2, style=dotted];
m91_128 -> m91_87  [key=2, style=dotted];
m91_128 -> m91_129  [key=0, style=solid];
m91_126 -> m91_128  [key=0, style=solid];
m91_126 -> m91_127  [key=0, style=solid];
m91_125 -> m91_12  [key=2, style=dotted];
m91_125 -> m91_129  [key=0, style=solid];
m91_124 -> m91_126  [key=0, style=solid];
m91_124 -> m91_125  [key=0, style=solid];
m91_127 -> m91_129  [key=0, style=solid];
m91_127 -> m91_130  [key=2, style=dotted];
m91_129 -> m91_123  [color=blue, key=0, style=bold];
m91_88 -> m91_89  [key=0, style=solid];
m91_88 -> m91_90  [key=2, style=dotted];
m91_88 -> m91_91  [key=2, style=dotted];
m91_157 -> m91_163  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_157 -> m91_158  [key=0, style=solid];
m91_157 -> m91_160  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerContext", style=dashed];
m91_157 -> m91_162  [color=darkseagreen4, key=1, label="Hangfire.Server.ServerContext", style=dashed];
m91_163 -> m91_70  [key=2, style=dotted];
m91_163 -> m91_164  [key=0, style=solid];
m91_163 -> m91_65  [key=2, style=dotted];
m91_162 -> m91_163  [key=0, style=solid];
m91_162 -> m91_165  [key=2, style=dotted];
m91_159 -> m91_12  [key=2, style=dotted];
m91_159 -> m91_164  [key=0, style=solid];
m91_161 -> m91_12  [key=2, style=dotted];
m91_161 -> m91_164  [key=0, style=solid];
m91_158 -> m91_159  [key=0, style=solid];
m91_158 -> m91_160  [key=0, style=solid];
m91_160 -> m91_162  [key=0, style=solid];
m91_160 -> m91_161  [key=0, style=solid];
m91_164 -> m91_157  [color=blue, key=0, style=bold];
m91_27 -> m91_30  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m91_27 -> m91_28  [key=0, style=solid];
m91_27 -> m91_32  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m91_27 -> m91_34  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m91_27 -> m91_25  [color=blue, key=0, style=bold];
m91_30 -> m91_31  [key=0, style=solid];
m91_30 -> m91_36  [key=2, style=dotted];
m91_30 -> m91_37  [key=2, style=dotted];
m91_30 -> m91_38  [key=2, style=dotted];
m91_30 -> m91_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_30 -> m91_33  [color=darkseagreen4, key=1, label=providers, style=dashed];
m91_33 -> m91_34  [key=0, style=solid];
m91_33 -> m91_41  [key=2, style=dotted];
m91_28 -> m91_30  [key=0, style=solid];
m91_28 -> m91_29  [key=0, style=solid];
m91_31 -> m91_33  [key=0, style=solid];
m91_31 -> m91_32  [key=0, style=solid];
m91_31 -> m91_29  [key=2, style=dotted];
m91_34 -> m91_35  [key=0, style=solid];
m91_34 -> m91_42  [key=2, style=dotted];
m91_34 -> m91_36  [key=2, style=dotted];
m91_34 -> m91_37  [key=2, style=dotted];
m91_29 -> m91_12  [key=2, style=dotted];
m91_29 -> m91_35  [key=0, style=solid];
m91_29 -> m91_34  [key=0, style=solid];
m91_32 -> m91_26  [key=2, style=dotted];
m91_32 -> m91_35  [key=0, style=solid];
m91_32 -> m91_39  [key=2, style=dotted];
m91_32 -> m91_40  [key=2, style=dotted];
m91_32 -> m91_30  [color=blue, key=0, style=bold];
m91_35 -> m91_27  [color=blue, key=0, style=bold];
m91_35 -> m91_29  [color=blue, key=0, style=bold];
m91_6 -> m91_7  [key=0, style=solid];
m91_6 -> m91_9  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m91_6 -> m91_11  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m91_6 -> m91_13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m91_6 -> m91_14  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m91_6 -> m91_15  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m91_6 -> m91_16  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m91_6 -> m91_12  [key=2, style=dotted];
m91_7 -> m91_8  [key=0, style=solid];
m91_7 -> m91_9  [key=0, style=solid];
m91_9 -> m91_10  [key=0, style=solid];
m91_9 -> m91_11  [key=0, style=solid];
m91_11 -> m91_12  [key=0, style=solid];
m91_11 -> m91_13  [key=0, style=solid];
m91_11 -> m91_2  [color=blue, key=0, style=bold];
m91_13 -> m91_14  [key=0, style=solid];
m91_13 -> m91_19  [key=2, style=dotted];
m91_14 -> m91_15  [key=0, style=solid];
m91_14 -> m91_16  [key=0, style=solid];
m91_15 -> m91_16  [key=0, style=solid];
m91_15 -> m91_17  [key=2, style=dotted];
m91_16 -> m91_17  [key=0, style=solid];
m91_16 -> m91_13  [color=blue, key=0, style=bold];
m91_8 -> m91_17  [key=0, style=solid];
m91_8 -> m91_18  [key=2, style=dotted];
m91_8 -> m91_9  [key=0, style=solid];
m91_10 -> m91_17  [key=0, style=solid];
m91_10 -> m91_18  [key=2, style=dotted];
m91_10 -> m91_11  [key=0, style=solid];
m91_12 -> m91_17  [key=0, style=solid];
m91_12 -> m91_18  [key=2, style=dotted];
m91_17 -> m91_6  [color=blue, key=0, style=bold];
m91_171 -> m91_174  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_171 -> m91_172  [key=0, style=solid];
m91_174 -> m91_70  [key=2, style=dotted];
m91_174 -> m91_175  [key=0, style=solid];
m91_172 -> m91_174  [key=0, style=solid];
m91_172 -> m91_173  [key=0, style=solid];
m91_173 -> m91_12  [key=2, style=dotted];
m91_173 -> m91_175  [key=0, style=solid];
m91_175 -> m91_171  [color=blue, key=0, style=bold];
m91_56 -> m91_61  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m91_56 -> m91_59  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m91_56 -> m91_57  [key=0, style=solid];
m91_2 -> m91_7  [color=darkseagreen4, key=1, label=SqlConnection, style=dashed];
m91_2 -> m91_8  [color=darkseagreen4, key=1, label="IsolationLevel?", style=dashed];
m91_2 -> m91_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m91_2 -> m91_10  [color=darkseagreen4, key=1, label=bool, style=dashed];
m91_2 -> m91_3  [key=0, style=solid];
m91_2 -> m91_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection", style=dashed];
m91_5 -> m91_7  [key=0, style=solid];
m91_5 -> m91_6  [key=0, style=solid];
m91_5 -> m91_4  [color=blue, key=0, style=bold];
m91_4 -> m91_12  [key=2, style=dotted];
m91_4 -> m91_11  [key=0, style=solid];
m91_4 -> m91_5  [key=0, style=solid];
m91_3 -> m91_5  [key=0, style=solid];
m91_3 -> m91_4  [key=0, style=solid];
m91_3 -> m91_2  [color=blue, key=0, style=bold];
m91_144 -> m91_147  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_144 -> m91_145  [key=0, style=solid];
m91_147 -> m91_67  [key=2, style=dotted];
m91_147 -> m91_148  [key=0, style=solid];
m91_147 -> m91_150  [key=2, style=dotted];
m91_147 -> m91_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_147 -> m91_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m91_145 -> m91_147  [key=0, style=solid];
m91_145 -> m91_146  [key=0, style=solid];
m91_148 -> m91_149  [key=0, style=solid];
m91_146 -> m91_12  [key=2, style=dotted];
m91_146 -> m91_149  [key=0, style=solid];
m91_149 -> m91_144  [color=blue, key=0, style=bold];
m91_69 -> m91_84  [key=0, style=solid];
m91_69 -> m91_53  [key=2, style=dotted];
m91_25 -> m91_26  [key=0, style=solid];
m91_251 -> m91_255  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_251 -> m91_252  [key=0, style=solid];
m91_255 -> m91_67  [key=2, style=dotted];
m91_255 -> m91_256  [key=0, style=solid];
m91_255 -> m91_196  [key=2, style=dotted];
m91_254 -> m91_255  [key=0, style=solid];
m91_253 -> m91_12  [key=2, style=dotted];
m91_253 -> m91_256  [key=0, style=solid];
m91_252 -> m91_254  [key=0, style=solid];
m91_252 -> m91_253  [key=0, style=solid];
m91_256 -> m91_251  [color=blue, key=0, style=bold];
m91_53 -> m91_54  [key=0, style=solid];
m91_53 -> m91_64  [key=2, style=dotted];
m91_58 -> m91_59  [key=0, style=solid];
m91_58 -> m91_61  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m91_58 -> m91_60  [color=green, key=0, style=solid];
m91_59 -> m91_60  [key=0, style=solid];
m91_59 -> m91_61  [key=0, style=solid];
m91_59 -> m91_58  [key=0, style=solid];
m91_59 -> m91_59  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m91_61 -> m91_62  [key=0, style=solid];
m91_61 -> m91_64  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m91_61 -> m91_70  [key=2, style=dotted];
m91_60 -> m91_65  [key=0, style=solid];
m91_60 -> m91_18  [key=2, style=dotted];
m91_60 -> m91_61  [color=green, key=0, style=solid];
m91_62 -> m91_63  [key=0, style=solid];
m91_62 -> m91_64  [key=0, style=solid];
m91_64 -> m91_65  [key=0, style=solid];
m91_64 -> m91_6  [key=2, style=dotted];
m91_64 -> m91_57  [key=2, style=dotted];
m91_63 -> m91_65  [key=0, style=solid];
m91_63 -> m91_53  [key=2, style=dotted];
m91_63 -> m91_47  [color=blue, key=0, style=bold];
m91_65 -> m91_58  [color=blue, key=0, style=bold];
m91_228 -> m91_234  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_228 -> m91_229  [key=0, style=solid];
m91_228 -> m91_231  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_234 -> m91_67  [key=2, style=dotted];
m91_234 -> m91_87  [key=2, style=dotted];
m91_234 -> m91_235  [key=0, style=solid];
m91_233 -> m91_234  [key=0, style=solid];
m91_230 -> m91_12  [key=2, style=dotted];
m91_230 -> m91_235  [key=0, style=solid];
m91_232 -> m91_12  [key=2, style=dotted];
m91_232 -> m91_235  [key=0, style=solid];
m91_229 -> m91_230  [key=0, style=solid];
m91_229 -> m91_231  [key=0, style=solid];
m91_231 -> m91_233  [key=0, style=solid];
m91_231 -> m91_232  [key=0, style=solid];
m91_235 -> m91_228  [color=blue, key=0, style=bold];
m91_89 -> m91_57  [color=blue, key=0, style=bold];
m91_70 -> m91_71  [key=0, style=solid];
m91_70 -> m91_72  [key=0, style=solid];
m91_19 -> m91_66  [key=0, style=solid];
m91_19 -> m91_68  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m91_19 -> m91_70  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m91_19 -> m91_72  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m91_19 -> m91_73  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m91_19 -> m91_74  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m91_19 -> m91_76  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m91_19 -> m91_77  [color=darkseagreen4, key=1, label=int, style=dashed];
m91_19 -> m91_78  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_19 -> m91_20  [key=0, style=solid];
m91_19 -> m91_21  [key=2, style=dotted];
m91_66 -> m91_67  [key=0, style=solid];
m91_66 -> m91_68  [key=0, style=solid];
m91_68 -> m91_69  [key=0, style=solid];
m91_68 -> m91_70  [key=0, style=solid];
m91_72 -> m91_73  [key=0, style=solid];
m91_72 -> m91_74  [key=0, style=solid];
m91_72 -> m91_85  [key=2, style=dotted];
m91_73 -> m91_84  [key=0, style=solid];
m91_73 -> m91_86  [key=2, style=dotted];
m91_73 -> m91_24  [key=2, style=dotted];
m91_73 -> m91_12  [key=2, style=dotted];
m91_74 -> m91_75  [key=0, style=solid];
m91_74 -> m91_76  [key=0, style=solid];
m91_74 -> m91_85  [key=2, style=dotted];
m91_76 -> m91_77  [key=0, style=solid];
m91_76 -> m91_87  [key=2, style=dotted];
m91_76 -> m91_79  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m91_76 -> m91_78  [key=0, style=solid];
m91_77 -> m91_78  [key=0, style=solid];
m91_77 -> m91_79  [key=0, style=solid];
m91_77 -> m91_86  [key=0, style=solid];
m91_78 -> m91_84  [key=0, style=solid];
m91_78 -> m91_86  [key=2, style=dotted];
m91_78 -> m91_82  [color=darkseagreen4, key=1, label=invocationData, style=dashed];
m91_78 -> m91_67  [key=2, style=dotted];
m91_78 -> m91_79  [key=0, style=solid];
m91_67 -> m91_84  [key=0, style=solid];
m91_67 -> m91_53  [key=2, style=dotted];
m91_71 -> m91_84  [key=0, style=solid];
m91_71 -> m91_53  [key=2, style=dotted];
m91_71 -> m91_75  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_71 -> m91_72  [key=0, style=solid];
m91_75 -> m91_84  [key=0, style=solid];
m91_75 -> m91_53  [key=2, style=dotted];
m91_75 -> m91_85  [color=green, key=1, label=jobData, style=dashed];
m91_75 -> m91_76  [key=0, style=solid];
m91_75 -> m91_67  [key=2, style=dotted];
m91_75 -> m91_87  [key=2, style=dotted];
m91_75 -> m91_78  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m91_75 -> m91_79  [color=darkseagreen4, key=1, label=jobData, style=dashed];
m91_79 -> m91_80  [key=0, style=solid];
m91_79 -> m91_84  [key=0, style=solid];
m91_79 -> m91_82  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m91_80 -> m91_81  [key=0, style=solid];
m91_80 -> m91_82  [key=0, style=solid];
m91_82 -> m91_83  [key=0, style=solid];
m91_82 -> m91_79  [key=0, style=solid];
m91_82 -> m91_85  [color=green, key=0, style=solid];
m91_82 -> m91_88  [key=2, style=dotted];
m91_81 -> m91_84  [key=0, style=solid];
m91_81 -> m91_53  [key=2, style=dotted];
m91_81 -> m91_82  [key=0, style=solid];
m91_83 -> m91_84  [key=0, style=solid];
m91_83 -> m91_53  [key=2, style=dotted];
m91_84 -> m91_19  [color=blue, key=0, style=bold];
m91_84 -> m91_85  [color=green, key=0, style=solid];
m91_176 -> m91_177  [key=0, style=solid];
m91_179 -> m91_70  [key=2, style=dotted];
m91_179 -> m91_179  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m91_179 -> m91_180  [key=0, style=solid];
m91_179 -> m91_183  [key=2, style=dotted];
m91_179 -> m91_66  [key=2, style=dotted];
m91_177 -> m91_179  [key=0, style=solid];
m91_177 -> m91_177  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m91_177 -> m91_178  [key=0, style=solid];
m91_177 -> m91_181  [key=2, style=dotted];
m91_178 -> m91_180  [key=0, style=solid];
m91_178 -> m91_182  [key=2, style=dotted];
m91_180 -> m91_176  [color=blue, key=0, style=bold];
m91_18 -> m91_19  [key=0, style=solid];
m91_242 -> m91_246  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_242 -> m91_243  [key=0, style=solid];
m91_246 -> m91_67  [key=2, style=dotted];
m91_246 -> m91_247  [key=0, style=solid];
m91_246 -> m91_68  [key=2, style=dotted];
m91_246 -> m91_249  [color=darkseagreen4, key=1, label=result, style=dashed];
m91_245 -> m91_246  [key=0, style=solid];
m91_247 -> m91_248  [key=0, style=solid];
m91_247 -> m91_249  [key=0, style=solid];
m91_249 -> m91_250  [key=0, style=solid];
m91_244 -> m91_12  [key=2, style=dotted];
m91_244 -> m91_250  [key=0, style=solid];
m91_243 -> m91_245  [key=0, style=solid];
m91_243 -> m91_244  [key=0, style=solid];
m91_248 -> m91_250  [key=0, style=solid];
m91_248 -> m91_206  [key=2, style=dotted];
m91_250 -> m91_242  [color=blue, key=0, style=bold];
m91_213 -> m91_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_213 -> m91_214  [key=0, style=solid];
m91_217 -> m91_67  [key=2, style=dotted];
m91_217 -> m91_218  [key=0, style=solid];
m91_217 -> m91_68  [key=2, style=dotted];
m91_216 -> m91_217  [key=0, style=solid];
m91_215 -> m91_12  [key=2, style=dotted];
m91_215 -> m91_218  [key=0, style=solid];
m91_214 -> m91_216  [key=0, style=solid];
m91_214 -> m91_215  [key=0, style=solid];
m91_218 -> m91_213  [color=blue, key=0, style=bold];
m91_26 -> m91_27  [key=0, style=solid];
m91_26 -> m91_28  [key=2, style=dotted];
m91_26 -> m91_29  [key=2, style=dotted];
m91_54 -> m91_92  [key=0, style=solid];
m91_54 -> m91_93  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m91_54 -> m91_59  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m91_54 -> m91_62  [color=darkseagreen4, key=1, label=jobId, style=dashed];
m91_54 -> m91_67  [key=2, style=dotted];
m91_54 -> m91_55  [key=0, style=solid];
m91_54 -> m91_65  [key=2, style=dotted];
m91_54 -> m91_66  [key=2, style=dotted];
m91_54 -> m91_68  [key=2, style=dotted];
m91_54 -> m91_69  [key=2, style=dotted];
m91_92 -> m91_93  [key=0, style=solid];
m91_92 -> m91_12  [key=2, style=dotted];
m91_92 -> m91_99  [key=0, style=solid];
m91_93 -> m91_94  [key=0, style=solid];
m91_93 -> m91_95  [key=2, style=dotted];
m91_94 -> m91_54  [color=blue, key=0, style=bold];
m91_94 -> m91_67  [key=2, style=dotted];
m91_94 -> m91_87  [key=2, style=dotted];
m91_94 -> m91_95  [key=0, style=solid];
m91_94 -> m91_97  [color=darkseagreen4, key=1, label=sqlState, style=dashed];
m91_94 -> m91_98  [color=darkseagreen4, key=1, label=sqlState, style=dashed];
m91_207 -> m91_211  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_207 -> m91_208  [key=0, style=solid];
m91_211 -> m91_67  [key=2, style=dotted];
m91_211 -> m91_212  [key=0, style=solid];
m91_211 -> m91_68  [key=2, style=dotted];
m91_210 -> m91_211  [key=0, style=solid];
m91_209 -> m91_12  [key=2, style=dotted];
m91_209 -> m91_212  [key=0, style=solid];
m91_208 -> m91_210  [key=0, style=solid];
m91_208 -> m91_209  [key=0, style=solid];
m91_212 -> m91_207  [color=blue, key=0, style=bold];
m91_38 -> m91_39  [key=0, style=solid];
m91_38 -> m91_41  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m91_91 -> m91_93  [key=0, style=solid];
m91_91 -> m91_92  [key=0, style=solid];
m91_166 -> m91_169  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_166 -> m91_167  [key=0, style=solid];
m91_169 -> m91_70  [key=2, style=dotted];
m91_169 -> m91_170  [key=0, style=solid];
m91_167 -> m91_169  [key=0, style=solid];
m91_167 -> m91_168  [key=0, style=solid];
m91_168 -> m91_12  [key=2, style=dotted];
m91_168 -> m91_170  [key=0, style=solid];
m91_170 -> m91_166  [color=blue, key=0, style=bold];
m91_131 -> m91_139  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_131 -> m91_132  [key=0, style=solid];
m91_131 -> m91_134  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m91_131 -> m91_138  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", style=dashed];
m91_139 -> m91_70  [key=2, style=dotted];
m91_139 -> m91_139  [color=darkseagreen4, key=1, label=keyValuePair, style=dashed];
m91_139 -> m91_138  [key=0, style=solid];
m91_138 -> m91_139  [key=0, style=solid];
m91_138 -> m91_140  [key=0, style=solid];
m91_136 -> m91_139  [color=darkseagreen4, key=1, label=sql, style=dashed];
m91_136 -> m91_137  [key=0, style=solid];
m91_133 -> m91_12  [key=2, style=dotted];
m91_133 -> m91_141  [key=0, style=solid];
m91_135 -> m91_12  [key=2, style=dotted];
m91_135 -> m91_141  [key=0, style=solid];
m91_132 -> m91_133  [key=0, style=solid];
m91_132 -> m91_134  [key=0, style=solid];
m91_134 -> m91_136  [key=0, style=solid];
m91_134 -> m91_135  [key=0, style=solid];
m91_137 -> m91_138  [key=0, style=solid];
m91_137 -> m91_142  [key=2, style=dotted];
m91_137 -> m91_140  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m91_140 -> m91_141  [key=0, style=solid];
m91_140 -> m91_143  [key=2, style=dotted];
m91_141 -> m91_131  [color=blue, key=0, style=bold];
m91_154 -> m91_155  [key=0, style=solid];
m91_44 -> m91_45  [key=0, style=solid];
m91_44 -> m91_46  [key=2, style=dotted];
m91_43 -> m91_44  [key=0, style=solid];
m91_43 -> m91_52  [key=0, style=solid];
m91_43 -> m91_53  [key=2, style=dotted];
m91_45 -> m91_43  [color=blue, key=0, style=bold];
m91_45 -> m91_46  [key=0, style=solid];
m91_45 -> m91_50  [key=0, style=solid];
m91_151 -> m91_152  [key=0, style=solid];
m91_153 -> m91_151  [color=blue, key=0, style=bold];
m91_152 -> m91_153  [key=0, style=solid];
m91_155 -> m91_156  [key=0, style=solid];
m91_156 -> m91_154  [color=blue, key=0, style=bold];
m91_42 -> m91_43  [key=0, style=solid];
m91_42 -> m91_44  [key=0, style=solid];
m91_20 -> m91_18  [color=blue, key=0, style=bold];
m91_20 -> m91_21  [key=0, style=solid];
m91_39 -> m91_40  [key=0, style=solid];
m91_39 -> m91_41  [key=0, style=solid];
m91_41 -> m91_42  [key=0, style=solid];
m91_41 -> m91_45  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m91_41 -> m91_46  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m91_41 -> m91_50  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m91_41 -> m91_51  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m91_40 -> m91_52  [key=0, style=solid];
m91_40 -> m91_18  [key=2, style=dotted];
m91_46 -> m91_47  [key=0, style=solid];
m91_46 -> m91_54  [key=2, style=dotted];
m91_46 -> m91_49  [color=darkseagreen4, key=1, label=objectValue, style=dashed];
m91_50 -> m91_51  [key=0, style=solid];
m91_50 -> m91_52  [key=0, style=solid];
m91_51 -> m91_52  [key=0, style=solid];
m91_51 -> m91_6  [key=2, style=dotted];
m91_51 -> m91_57  [key=2, style=dotted];
m91_51 -> m91_63  [key=0, style=solid];
m91_51 -> m91_12  [key=2, style=dotted];
m91_47 -> m91_48  [key=0, style=solid];
m91_47 -> m91_49  [key=0, style=solid];
m91_47 -> m91_58  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m91_47 -> m91_50  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m91_47 -> m91_53  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m91_47 -> m91_54  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m91_47 -> m91_55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m91_47 -> m91_56  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m91_49 -> m91_51  [key=0, style=solid];
m91_49 -> m91_56  [key=2, style=dotted];
m91_49 -> m91_63  [key=0, style=solid];
m91_49 -> m91_12  [key=2, style=dotted];
m91_48 -> m91_52  [key=0, style=solid];
m91_48 -> m91_55  [key=2, style=dotted];
m91_48 -> m91_49  [key=0, style=solid];
m91_48 -> m91_50  [key=0, style=solid];
m91_52 -> m91_38  [color=blue, key=0, style=bold];
m91_52 -> m91_53  [key=0, style=solid];
m91_52 -> m91_54  [color=darkseagreen4, key=1, label=createJobSql, style=dashed];
m91_57 -> m91_88  [key=0, style=solid];
m91_57 -> m91_58  [key=0, style=solid];
m91_57 -> m91_59  [color=darkseagreen4, key=1, label=parameterIndex, style=dashed];
m91_219 -> m91_223  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_219 -> m91_220  [key=0, style=solid];
m91_223 -> m91_67  [key=2, style=dotted];
m91_223 -> m91_224  [key=0, style=solid];
m91_223 -> m91_68  [key=2, style=dotted];
m91_223 -> m91_226  [color=darkseagreen4, key=1, label=result, style=dashed];
m91_222 -> m91_223  [key=0, style=solid];
m91_224 -> m91_225  [key=0, style=solid];
m91_224 -> m91_226  [key=0, style=solid];
m91_226 -> m91_227  [key=0, style=solid];
m91_221 -> m91_12  [key=2, style=dotted];
m91_221 -> m91_227  [key=0, style=solid];
m91_220 -> m91_222  [key=0, style=solid];
m91_220 -> m91_221  [key=0, style=solid];
m91_225 -> m91_227  [key=0, style=solid];
m91_225 -> m91_206  [key=2, style=dotted];
m91_227 -> m91_219  [color=blue, key=0, style=bold];
m91_190 -> m91_194  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_190 -> m91_191  [key=0, style=solid];
m91_194 -> m91_67  [key=2, style=dotted];
m91_194 -> m91_195  [key=0, style=solid];
m91_194 -> m91_196  [key=2, style=dotted];
m91_193 -> m91_194  [key=0, style=solid];
m91_192 -> m91_12  [key=2, style=dotted];
m91_192 -> m91_195  [key=0, style=solid];
m91_191 -> m91_193  [key=0, style=solid];
m91_191 -> m91_192  [key=0, style=solid];
m91_195 -> m91_190  [color=blue, key=0, style=bold];
m91_85 -> m91_86  [color=green, key=0, style=solid];
m91_85 -> m91_89  [color=green, key=2, style=dotted];
m91_86 -> m91_71  [color=blue, key=0, style=bold];
m91_22 -> m91_23  [key=0, style=solid];
m91_22 -> m91_20  [color=blue, key=0, style=bold];
m91_23 -> m91_24  [key=0, style=solid];
m91_23 -> m91_25  [key=2, style=dotted];
m91_23 -> m91_26  [key=2, style=dotted];
m91_24 -> m91_22  [color=blue, key=0, style=bold];
m91_55 -> m91_56  [key=0, style=solid];
m91_55 -> m91_62  [key=0, style=solid];
m91_116 -> m91_119  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_116 -> m91_117  [key=0, style=solid];
m91_119 -> m91_67  [key=2, style=dotted];
m91_119 -> m91_120  [key=0, style=solid];
m91_117 -> m91_119  [key=0, style=solid];
m91_117 -> m91_118  [key=0, style=solid];
m91_120 -> m91_121  [key=0, style=solid];
m91_120 -> m91_122  [key=2, style=dotted];
m91_118 -> m91_12  [key=2, style=dotted];
m91_118 -> m91_121  [key=0, style=solid];
m91_121 -> m91_116  [color=blue, key=0, style=bold];
m91_0 -> m91_1  [key=0, style=solid];
m91_1 -> m91_0  [color=blue, key=0, style=bold];
m91_95 -> m91_97  [key=0, style=solid];
m91_95 -> m91_96  [key=0, style=solid];
m91_257 -> m91_261  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_257 -> m91_258  [key=0, style=solid];
m91_261 -> m91_67  [key=2, style=dotted];
m91_261 -> m91_262  [key=0, style=solid];
m91_261 -> m91_196  [key=2, style=dotted];
m91_260 -> m91_261  [key=0, style=solid];
m91_259 -> m91_12  [key=2, style=dotted];
m91_259 -> m91_262  [key=0, style=solid];
m91_258 -> m91_260  [key=0, style=solid];
m91_258 -> m91_259  [key=0, style=solid];
m91_262 -> m91_257  [color=blue, key=0, style=bold];
m91_21 -> m91_22  [key=0, style=solid];
m91_21 -> m91_23  [key=2, style=dotted];
m91_21 -> m91_24  [key=2, style=dotted];
m91_102 -> m91_107  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_102 -> m91_103  [key=0, style=solid];
m91_102 -> m91_105  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_107 -> m91_70  [key=2, style=dotted];
m91_107 -> m91_108  [key=0, style=solid];
m91_105 -> m91_107  [key=0, style=solid];
m91_105 -> m91_106  [key=0, style=solid];
m91_104 -> m91_12  [key=2, style=dotted];
m91_104 -> m91_108  [key=0, style=solid];
m91_106 -> m91_12  [key=2, style=dotted];
m91_106 -> m91_108  [key=0, style=solid];
m91_103 -> m91_105  [key=0, style=solid];
m91_103 -> m91_104  [key=0, style=solid];
m91_108 -> m91_102  [color=blue, key=0, style=bold];
m91_197 -> m91_201  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_197 -> m91_198  [key=0, style=solid];
m91_201 -> m91_67  [key=2, style=dotted];
m91_201 -> m91_202  [key=0, style=solid];
m91_201 -> m91_68  [key=2, style=dotted];
m91_201 -> m91_204  [color=darkseagreen4, key=1, label=result, style=dashed];
m91_200 -> m91_201  [key=0, style=solid];
m91_202 -> m91_203  [key=0, style=solid];
m91_202 -> m91_204  [key=0, style=solid];
m91_204 -> m91_205  [key=0, style=solid];
m91_199 -> m91_12  [key=2, style=dotted];
m91_199 -> m91_205  [key=0, style=solid];
m91_198 -> m91_200  [key=0, style=solid];
m91_198 -> m91_199  [key=0, style=solid];
m91_203 -> m91_205  [key=0, style=solid];
m91_203 -> m91_206  [key=2, style=dotted];
m91_205 -> m91_197  [color=blue, key=0, style=bold];
m91_109 -> m91_114  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_109 -> m91_110  [key=0, style=solid];
m91_109 -> m91_112  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_114 -> m91_67  [key=2, style=dotted];
m91_114 -> m91_87  [key=2, style=dotted];
m91_114 -> m91_115  [key=0, style=solid];
m91_112 -> m91_114  [key=0, style=solid];
m91_112 -> m91_113  [key=0, style=solid];
m91_111 -> m91_12  [key=2, style=dotted];
m91_111 -> m91_115  [key=0, style=solid];
m91_113 -> m91_12  [key=2, style=dotted];
m91_113 -> m91_115  [key=0, style=solid];
m91_110 -> m91_112  [key=0, style=solid];
m91_110 -> m91_111  [key=0, style=solid];
m91_115 -> m91_109  [color=blue, key=0, style=bold];
m91_90 -> m91_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_90 -> m91_91  [key=0, style=solid];
m91_97 -> m91_67  [key=2, style=dotted];
m91_97 -> m91_98  [key=0, style=solid];
m91_97 -> m91_100  [key=2, style=dotted];
m91_98 -> m91_99  [key=0, style=solid];
m91_98 -> m91_101  [key=2, style=dotted];
m91_96 -> m91_99  [key=0, style=solid];
m91_96 -> m91_14  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m91_96 -> m91_15  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m91_96 -> m91_16  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m91_96 -> m91_21  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m91_96 -> m91_26  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m91_96 -> m91_31  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m91_99 -> m91_90  [color=blue, key=0, style=bold];
m91_184 -> m91_187  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_184 -> m91_185  [key=0, style=solid];
m91_187 -> m91_67  [key=2, style=dotted];
m91_187 -> m91_188  [key=0, style=solid];
m91_187 -> m91_189  [key=2, style=dotted];
m91_185 -> m91_187  [key=0, style=solid];
m91_185 -> m91_186  [key=0, style=solid];
m91_186 -> m91_12  [key=2, style=dotted];
m91_186 -> m91_188  [key=0, style=solid];
m91_188 -> m91_184  [color=blue, key=0, style=bold];
m91_236 -> m91_240  [color=darkseagreen4, key=1, label=string, style=dashed];
m91_236 -> m91_237  [key=0, style=solid];
m91_240 -> m91_67  [key=2, style=dotted];
m91_240 -> m91_241  [key=0, style=solid];
m91_240 -> m91_68  [key=2, style=dotted];
m91_239 -> m91_240  [key=0, style=solid];
m91_238 -> m91_12  [key=2, style=dotted];
m91_238 -> m91_241  [key=0, style=solid];
m91_237 -> m91_239  [key=0, style=solid];
m91_237 -> m91_238  [key=0, style=solid];
m91_241 -> m91_236  [color=blue, key=0, style=bold];
m91_263 -> m91_61  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_75  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_7  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_8  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_9  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_10  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_14  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_15  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_19  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_23  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_30  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_44  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_33  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_54  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_94  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_107  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_114  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_119  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_128  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_139  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_147  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_163  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_169  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_174  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_179  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_187  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_194  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_201  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_211  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_217  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_223  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_234  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_240  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_246  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_255  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m91_263 -> m91_261  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.SqlServerConnection", style=dashed];
m92_52 -> m92_84  [key=0, style=solid];
m92_84 -> m92_85  [key=0, style=solid];
m92_84 -> m92_86  [key=2, style=dotted];
m92_84 -> m92_87  [key=2, style=dotted];
m92_85 -> m92_52  [color=blue, key=0, style=bold];
m92_0 -> m92_1  [key=0, style=solid];
m92_1 -> m92_0  [color=blue, key=0, style=bold];
m92_6 -> m92_7  [key=0, style=solid];
m92_6 -> m92_9  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m92_6 -> m92_11  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m92_6 -> m92_13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m92_6 -> m92_14  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m92_6 -> m92_15  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m92_6 -> m92_16  [color=darkseagreen4, key=1, label="params object[]", style=dashed];
m92_7 -> m92_8  [key=0, style=solid];
m92_7 -> m92_9  [key=0, style=solid];
m92_9 -> m92_10  [key=0, style=solid];
m92_9 -> m92_11  [key=0, style=solid];
m92_11 -> m92_12  [key=0, style=solid];
m92_11 -> m92_13  [key=0, style=solid];
m92_13 -> m92_14  [key=0, style=solid];
m92_13 -> m92_19  [key=2, style=dotted];
m92_14 -> m92_15  [key=0, style=solid];
m92_15 -> m92_16  [key=0, style=solid];
m92_16 -> m92_17  [key=0, style=solid];
m92_8 -> m92_17  [key=0, style=solid];
m92_8 -> m92_18  [key=2, style=dotted];
m92_10 -> m92_17  [key=0, style=solid];
m92_10 -> m92_18  [key=2, style=dotted];
m92_12 -> m92_17  [key=0, style=solid];
m92_12 -> m92_18  [key=2, style=dotted];
m92_17 -> m92_6  [color=blue, key=0, style=bold];
m92_53 -> m92_54  [key=0, style=solid];
m92_53 -> m92_56  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<TType>>", style=dashed];
m92_54 -> m92_55  [key=0, style=solid];
m92_54 -> m92_56  [key=0, style=solid];
m92_56 -> m92_57  [key=0, style=solid];
m92_56 -> m92_59  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m92_55 -> m92_60  [key=0, style=solid];
m92_55 -> m92_18  [key=2, style=dotted];
m92_57 -> m92_58  [key=0, style=solid];
m92_57 -> m92_59  [key=0, style=solid];
m92_59 -> m92_60  [key=0, style=solid];
m92_59 -> m92_6  [key=2, style=dotted];
m92_59 -> m92_52  [key=2, style=dotted];
m92_58 -> m92_60  [key=0, style=solid];
m92_58 -> m92_48  [key=2, style=dotted];
m92_60 -> m92_53  [color=blue, key=0, style=bold];
m92_20 -> m92_21  [color=red, key=0, style=solid];
m92_21 -> m92_22  [color=red, key=0, style=solid];
m92_21 -> m92_23  [color=red, key=2, style=dotted];
m92_21 -> m92_24  [color=red, key=2, style=dotted];
m92_22 -> m92_20  [color=blue, key=0, style=bold];
m92_49 -> m92_88  [key=0, style=solid];
m92_49 -> m92_89  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m92_88 -> m92_89  [key=0, style=solid];
m92_89 -> m92_90  [key=0, style=solid];
m92_89 -> m92_91  [key=2, style=dotted];
m92_90 -> m92_49  [color=blue, key=0, style=bold];
m92_2 -> m92_3  [key=0, style=solid];
m92_3 -> m92_2  [color=blue, key=0, style=bold];
m92_24 -> m92_29  [key=0, style=solid];
m92_29 -> m92_30  [key=0, style=solid];
m92_29 -> m92_31  [key=2, style=dotted];
m92_29 -> m92_32  [key=2, style=dotted];
m92_30 -> m92_24  [color=blue, key=0, style=bold];
m92_25 -> m92_26  [key=0, style=solid];
m92_26 -> m92_27  [key=0, style=solid];
m92_26 -> m92_28  [key=2, style=dotted];
m92_26 -> m92_24  [key=2, style=dotted];
m92_27 -> m92_25  [color=blue, key=0, style=bold];
m92_4 -> m92_5  [key=0, style=solid];
m92_5 -> m92_4  [color=blue, key=0, style=bold];
m92_19 -> m92_61  [key=0, style=solid];
m92_19 -> m92_63  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m92_19 -> m92_65  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m92_19 -> m92_67  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m92_19 -> m92_68  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m92_19 -> m92_69  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m92_19 -> m92_71  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m92_19 -> m92_72  [color=darkseagreen4, key=1, label=int, style=dashed];
m92_19 -> m92_73  [color=darkseagreen4, key=1, label=string, style=dashed];
m92_61 -> m92_62  [key=0, style=solid];
m92_61 -> m92_63  [key=0, style=solid];
m92_63 -> m92_64  [key=0, style=solid];
m92_63 -> m92_65  [key=0, style=solid];
m92_65 -> m92_66  [key=0, style=solid];
m92_65 -> m92_67  [key=0, style=solid];
m92_67 -> m92_68  [key=0, style=solid];
m92_67 -> m92_69  [key=0, style=solid];
m92_67 -> m92_81  [key=2, style=dotted];
m92_68 -> m92_79  [key=0, style=solid];
m92_68 -> m92_48  [key=2, style=dotted];
m92_68 -> m92_82  [key=2, style=dotted];
m92_69 -> m92_70  [key=0, style=solid];
m92_69 -> m92_71  [key=0, style=solid];
m92_69 -> m92_81  [key=2, style=dotted];
m92_71 -> m92_72  [key=0, style=solid];
m92_71 -> m92_83  [key=2, style=dotted];
m92_71 -> m92_74  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m92_72 -> m92_73  [key=0, style=solid];
m92_72 -> m92_74  [key=0, style=solid];
m92_73 -> m92_79  [key=0, style=solid];
m92_73 -> m92_48  [key=2, style=dotted];
m92_62 -> m92_79  [key=0, style=solid];
m92_62 -> m92_80  [key=2, style=dotted];
m92_64 -> m92_79  [key=0, style=solid];
m92_64 -> m92_80  [key=2, style=dotted];
m92_66 -> m92_79  [key=0, style=solid];
m92_66 -> m92_80  [key=2, style=dotted];
m92_70 -> m92_79  [key=0, style=solid];
m92_70 -> m92_80  [key=2, style=dotted];
m92_74 -> m92_75  [key=0, style=solid];
m92_74 -> m92_79  [key=0, style=solid];
m92_74 -> m92_77  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m92_75 -> m92_76  [key=0, style=solid];
m92_75 -> m92_77  [key=0, style=solid];
m92_77 -> m92_78  [key=0, style=solid];
m92_77 -> m92_74  [key=0, style=solid];
m92_76 -> m92_79  [key=0, style=solid];
m92_76 -> m92_80  [key=2, style=dotted];
m92_78 -> m92_79  [key=0, style=solid];
m92_78 -> m92_80  [key=2, style=dotted];
m92_79 -> m92_19  [color=blue, key=0, style=bold];
m92_33 -> m92_34  [key=0, style=solid];
m92_33 -> m92_36  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m92_34 -> m92_35  [key=0, style=solid];
m92_34 -> m92_36  [key=0, style=solid];
m92_36 -> m92_37  [key=0, style=solid];
m92_36 -> m92_40  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m92_36 -> m92_41  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m92_36 -> m92_45  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m92_36 -> m92_46  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m92_35 -> m92_47  [key=0, style=solid];
m92_35 -> m92_18  [key=2, style=dotted];
m92_37 -> m92_38  [key=0, style=solid];
m92_37 -> m92_39  [key=0, style=solid];
m92_40 -> m92_41  [key=0, style=solid];
m92_40 -> m92_45  [key=0, style=solid];
m92_41 -> m92_42  [key=0, style=solid];
m92_41 -> m92_49  [key=2, style=dotted];
m92_41 -> m92_44  [color=darkseagreen4, key=1, label=objectValue, style=dashed];
m92_45 -> m92_46  [key=0, style=solid];
m92_46 -> m92_47  [key=0, style=solid];
m92_46 -> m92_6  [key=2, style=dotted];
m92_46 -> m92_52  [key=2, style=dotted];
m92_38 -> m92_47  [key=0, style=solid];
m92_38 -> m92_48  [key=2, style=dotted];
m92_39 -> m92_40  [key=0, style=solid];
m92_42 -> m92_43  [key=0, style=solid];
m92_42 -> m92_44  [key=0, style=solid];
m92_44 -> m92_46  [key=0, style=solid];
m92_44 -> m92_51  [key=2, style=dotted];
m92_43 -> m92_47  [key=0, style=solid];
m92_43 -> m92_50  [key=2, style=dotted];
m92_47 -> m92_33  [color=blue, key=0, style=bold];
m92_92 -> m92_14  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m92_92 -> m92_15  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m92_92 -> m92_16  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m92_92 -> m92_21  [color=red, key=1, label="Hangfire.Common.Job", style=dashed];
m92_92 -> m92_26  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m93_44 -> m93_45  [key=0, style=solid];
m93_45 -> m93_46  [key=0, style=solid];
m93_45 -> m93_47  [key=2, style=dotted];
m93_45 -> m93_10  [key=2, style=dotted];
m93_46 -> m93_44  [color=blue, key=0, style=bold];
m93_11 -> m93_12  [key=0, style=solid];
m93_12 -> m93_13  [key=0, style=solid];
m93_12 -> m93_9  [key=2, style=dotted];
m93_12 -> m93_10  [key=2, style=dotted];
m93_13 -> m93_11  [color=blue, key=0, style=bold];
m93_102 -> m93_103  [key=0, style=solid];
m93_105 -> m93_105  [color=green, key=1, label=parameter, style=dashed];
m93_105 -> m93_106  [color=green, key=0, style=solid];
m93_105 -> m93_110  [color=green, key=2, style=dotted];
m93_105 -> m93_63  [color=green, key=2, style=dotted];
m93_103 -> m93_105  [color=green, key=1, label=job, style=dashed];
m93_103 -> m93_104  [key=0, style=solid];
m93_103 -> m93_108  [key=2, style=dotted];
m93_103 -> m93_109  [key=2, style=dotted];
m93_103 -> m93_106  [color=darkseagreen4, key=1, label=job, style=dashed];
m93_104 -> m93_105  [color=green, key=0, style=solid];
m93_104 -> m93_107  [key=0, style=solid];
m93_106 -> m93_104  [key=0, style=solid];
m93_106 -> m93_106  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m93_106 -> m93_111  [key=2, style=dotted];
m93_106 -> m93_81  [key=2, style=dotted];
m93_107 -> m93_102  [color=blue, key=0, style=bold];
m93_14 -> m93_15  [key=0, style=solid];
m93_15 -> m93_16  [key=0, style=solid];
m93_15 -> m93_9  [key=2, style=dotted];
m93_15 -> m93_10  [key=2, style=dotted];
m93_16 -> m93_14  [color=blue, key=0, style=bold];
m93_86 -> m93_90  [color=green, key=1, label=Table, style=dashed];
m93_86 -> m93_87  [key=0, style=solid];
m93_86 -> m93_89  [color=darkseagreen4, key=1, label=Table, style=dashed];
m93_90 -> m93_91  [color=green, key=0, style=solid];
m93_89 -> m93_90  [color=green, key=0, style=solid];
m93_89 -> m93_76  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m93_89 -> m93_93  [key=0, style=solid];
m93_88 -> m93_90  [color=green, key=1, label=i, style=dashed];
m93_88 -> m93_89  [key=0, style=solid];
m93_88 -> m93_91  [color=darkseagreen4, key=1, label=i, style=dashed];
m93_88 -> m93_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m93_91 -> m93_92  [key=0, style=solid];
m93_91 -> m93_81  [key=2, style=dotted];
m93_87 -> m93_88  [key=0, style=solid];
m93_87 -> m93_81  [key=2, style=dotted];
m93_92 -> m93_89  [key=0, style=solid];
m93_92 -> m93_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m93_93 -> m93_86  [color=blue, key=0, style=bold];
m93_31 -> m93_32  [key=0, style=solid];
m93_31 -> m93_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m93_32 -> m93_33  [key=0, style=solid];
m93_32 -> m93_24  [key=2, style=dotted];
m93_32 -> m93_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_32 -> m93_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_33 -> m93_34  [key=0, style=solid];
m93_33 -> m93_35  [key=2, style=dotted];
m93_34 -> m93_31  [color=blue, key=0, style=bold];
m93_97 -> m93_98  [key=0, style=solid];
m93_98 -> m93_81  [key=2, style=dotted];
m93_98 -> m93_99  [key=0, style=solid];
m93_99 -> m93_97  [color=blue, key=0, style=bold];
m93_35 -> m93_42  [key=0, style=solid];
m93_35 -> m93_31  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m93_42 -> m93_43  [key=0, style=solid];
m93_42 -> m93_9  [key=2, style=dotted];
m93_42 -> m93_10  [key=2, style=dotted];
m93_43 -> m93_35  [color=blue, key=0, style=bold];
m93_60 -> m93_61  [key=0, style=solid];
m93_61 -> m93_63  [key=2, style=dotted];
m93_61 -> m93_62  [key=0, style=solid];
m93_62 -> m93_60  [color=blue, key=0, style=bold];
m93_6 -> m93_7  [key=0, style=solid];
m93_73 -> m93_77  [color=green, key=1, label=Table, style=dashed];
m93_73 -> m93_74  [key=0, style=solid];
m93_73 -> m93_76  [color=darkseagreen4, key=1, label=Table, style=dashed];
m93_77 -> m93_78  [color=green, key=0, style=solid];
m93_76 -> m93_77  [color=green, key=0, style=solid];
m93_76 -> m93_76  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m93_76 -> m93_80  [key=0, style=solid];
m93_75 -> m93_77  [color=green, key=1, label=i, style=dashed];
m93_75 -> m93_76  [key=0, style=solid];
m93_75 -> m93_78  [color=darkseagreen4, key=1, label=i, style=dashed];
m93_75 -> m93_79  [color=darkseagreen4, key=1, label=i, style=dashed];
m93_78 -> m93_79  [key=0, style=solid];
m93_78 -> m93_81  [key=2, style=dotted];
m93_74 -> m93_75  [key=0, style=solid];
m93_74 -> m93_81  [key=2, style=dotted];
m93_79 -> m93_76  [key=0, style=solid];
m93_79 -> m93_79  [color=darkseagreen4, key=1, label=i, style=dashed];
m93_80 -> m93_73  [color=blue, key=0, style=bold];
m93_48 -> m93_49  [key=0, style=solid];
m93_49 -> m93_50  [key=0, style=solid];
m93_49 -> m93_47  [key=2, style=dotted];
m93_49 -> m93_10  [key=2, style=dotted];
m93_50 -> m93_48  [color=blue, key=0, style=bold];
m93_94 -> m93_95  [key=0, style=solid];
m93_95 -> m93_81  [key=2, style=dotted];
m93_95 -> m93_96  [key=0, style=solid];
m93_96 -> m93_94  [color=blue, key=0, style=bold];
m93_39 -> m93_40  [key=0, style=solid];
m93_0 -> m93_1  [color=red, key=0, style=solid];
m93_1 -> m93_2  [color=red, key=0, style=solid];
m93_1 -> m93_3  [color=red, key=2, style=dotted];
m93_1 -> m93_4  [color=red, key=2, style=dotted];
m93_1 -> m93_5  [color=red, key=2, style=dotted];
m93_1 -> m93_6  [color=red, key=2, style=dotted];
m93_2 -> m93_0  [color=blue, key=0, style=bold];
m93_28 -> m93_29  [key=0, style=solid];
m93_36 -> m93_37  [key=0, style=solid];
m93_30 -> m93_28  [color=blue, key=0, style=bold];
m93_29 -> m93_30  [key=0, style=solid];
m93_38 -> m93_36  [color=blue, key=0, style=bold];
m93_37 -> m93_38  [key=0, style=solid];
m93_40 -> m93_41  [key=0, style=solid];
m93_41 -> m93_39  [color=blue, key=0, style=bold];
m93_70 -> m93_71  [key=0, style=solid];
m93_71 -> m93_63  [key=2, style=dotted];
m93_71 -> m93_72  [key=0, style=solid];
m93_72 -> m93_70  [color=blue, key=0, style=bold];
m93_7 -> m93_8  [key=0, style=solid];
m93_7 -> m93_9  [key=2, style=dotted];
m93_7 -> m93_10  [key=2, style=dotted];
m93_8 -> m93_6  [color=blue, key=0, style=bold];
m93_8 -> m93_9  [key=0, style=solid];
m93_8 -> m93_10  [key=2, style=dotted];
m93_9 -> m93_7  [color=blue, key=0, style=bold];
m93_17 -> m93_18  [key=0, style=solid];
m93_18 -> m93_19  [key=0, style=solid];
m93_18 -> m93_9  [key=2, style=dotted];
m93_18 -> m93_10  [key=2, style=dotted];
m93_19 -> m93_17  [color=blue, key=0, style=bold];
m93_82 -> m93_83  [key=0, style=solid];
m93_83 -> m93_84  [key=0, style=solid];
m93_83 -> m93_85  [key=2, style=dotted];
m93_84 -> m93_82  [color=blue, key=0, style=bold];
m93_51 -> m93_52  [key=0, style=solid];
m93_52 -> m93_53  [key=0, style=solid];
m93_52 -> m93_56  [key=2, style=dotted];
m93_52 -> m93_57  [key=2, style=dotted];
m93_53 -> m93_54  [key=0, style=solid];
m93_53 -> m93_58  [key=2, style=dotted];
m93_54 -> m93_55  [key=0, style=solid];
m93_54 -> m93_59  [key=2, style=dotted];
m93_55 -> m93_51  [color=blue, key=0, style=bold];
m93_20 -> m93_21  [key=0, style=solid];
m93_20 -> m93_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m93_21 -> m93_22  [key=0, style=solid];
m93_21 -> m93_24  [key=2, style=dotted];
m93_21 -> m93_0  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_21 -> m93_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m93_22 -> m93_23  [key=0, style=solid];
m93_22 -> m93_9  [key=2, style=dotted];
m93_22 -> m93_10  [key=2, style=dotted];
m93_23 -> m93_20  [color=blue, key=0, style=bold];
m93_112 -> m93_78  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_91  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_104  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_74  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_7  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_12  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_15  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_18  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_21  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_22  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_32  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_33  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_42  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_45  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_49  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_52  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_83  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
m93_112 -> m93_87  [color=darkseagreen4, key=1, label="HangFire.Tests.WorkerManagerSteps", style=dashed];
}
