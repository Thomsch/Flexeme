digraph  {
n0 [label="Entry Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)"];
n1 [label="Exit Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="20-20", cluster="Hangfire.States.IStateChangeProcess.ChangeState(Hangfire.States.StateContext, Hangfire.States.IState, string)"];
m0_0 [label="Entry Hangfire.Core.Tests.Storage.StorageConnectionExtensionsFacts.GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData()", span="11-11", cluster="Hangfire.Core.Tests.Storage.StorageConnectionExtensionsFacts.GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData()", file="StorageConnectionExtensionsFacts.cs"];
m0_1 [label="var connectionFake = new Mock<IStorageConnection>()", span="13-13", cluster="Hangfire.Core.Tests.Storage.StorageConnectionExtensionsFacts.GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData()", color=green, community=0, file="StorageConnectionExtensionsFacts.cs"];
m0_2 [label="connectionFake.Setup(o => o.GetAllItemsFromSet(It.IsAny<string>())).Returns(new HashSet<string> {''1''})", span="14-14", cluster="Hangfire.Core.Tests.Storage.StorageConnectionExtensionsFacts.GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData()", color=green, community=0, file="StorageConnectionExtensionsFacts.cs"];
m0_3 [label="connectionFake.Setup(o => o.GetAllEntriesFromHash(''recurring-job:1'')).Returns(new Dictionary<string, string>\r\n                {\r\n                    { ''Cron'', ''A''},\r\n                    { ''Job'', @''{''''Type'''':''''ConsoleApplication1.CommandHandler, ConsoleApplication1'''',''''Method'''':''''Handle'''',''''ParameterTypes'''':''''[\''''string\'''']'''',''''Arguments'''':''''[\''''Text\'''']''''}''},\r\n                    { ''LastJobId'', string.Empty}\r\n                }).Verifiable()", span="15-20", cluster="Hangfire.Core.Tests.Storage.StorageConnectionExtensionsFacts.GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData()", color=green, community=1, file="StorageConnectionExtensionsFacts.cs"];
m0_4 [label="var result = connectionFake.Object.GetRecurringJobs().Single()", span="22-22", cluster="Hangfire.Core.Tests.Storage.StorageConnectionExtensionsFacts.GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData()", color=green, community=0, file="StorageConnectionExtensionsFacts.cs"];
m0_6 [label="connectionFake.VerifyAll()", span="25-25", cluster="Hangfire.Core.Tests.Storage.StorageConnectionExtensionsFacts.GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData()", color=green, community=0, file="StorageConnectionExtensionsFacts.cs"];
m0_5 [label="Assert.Null(result.LastJobState)", span="24-24", cluster="Hangfire.Core.Tests.Storage.StorageConnectionExtensionsFacts.GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData()", color=green, community=0, file="StorageConnectionExtensionsFacts.cs"];
m0_7 [label="Exit Hangfire.Core.Tests.Storage.StorageConnectionExtensionsFacts.GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData()", span="11-11", cluster="Hangfire.Core.Tests.Storage.StorageConnectionExtensionsFacts.GivenRecurringJobIsCancelledWhenGetRecurringJobsThenNotGetStateData()", file="StorageConnectionExtensionsFacts.cs"];
m0_12 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StorageConnectionExtensionsFacts.cs"];
m0_21 [label="Entry Unk.>", span="", cluster="Unk.>", file="StorageConnectionExtensionsFacts.cs"];
m0_22 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="StorageConnectionExtensionsFacts.cs"];
m0_9 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StorageConnectionExtensionsFacts.cs"];
m0_17 [label="Entry Unk.VerifyAll", span="", cluster="Unk.VerifyAll", file="StorageConnectionExtensionsFacts.cs"];
m0_16 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="StorageConnectionExtensionsFacts.cs"];
m0_26 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="StorageConnectionExtensionsFacts.cs"];
m0_11 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StorageConnectionExtensionsFacts.cs"];
m0_13 [label="Entry Unk.Verifiable", span="", cluster="Unk.Verifiable", file="StorageConnectionExtensionsFacts.cs"];
m0_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="StorageConnectionExtensionsFacts.cs"];
m0_8 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="StorageConnectionExtensionsFacts.cs"];
m0_23 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m0_18 [label="Entry lambda expression", span="14-14", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m0_19 [label="o.GetAllItemsFromSet(It.IsAny<string>())", span="14-14", cluster="lambda expression", color=green, community=0, file="StorageConnectionExtensionsFacts.cs"];
m0_20 [label="Exit lambda expression", span="14-14", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m0_24 [label="o.GetAllEntriesFromHash(''recurring-job:1'')", span="15-15", cluster="lambda expression", color=green, community=0, file="StorageConnectionExtensionsFacts.cs"];
m0_25 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="StorageConnectionExtensionsFacts.cs"];
m0_14 [label="Entry Unk.GetRecurringJobs", span="", cluster="Unk.GetRecurringJobs", file="StorageConnectionExtensionsFacts.cs"];
m0_10 [label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0", cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="StorageConnectionExtensionsFacts.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_8  [key=2, style=dotted, color=green];
m0_1 -> m0_3  [key=1, style=dashed, color=green, label=connectionFake];
m0_1 -> m0_4  [key=1, style=dashed, color=green, label=connectionFake];
m0_1 -> m0_6  [key=1, style=dashed, color=green, label=connectionFake];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_9  [key=2, style=dotted, color=green];
m0_2 -> m0_10  [key=2, style=dotted, color=green];
m0_2 -> m0_11  [key=2, style=dotted, color=green];
m0_2 -> m0_18  [key=1, style=dashed, color=green, label="lambda expression"];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_9  [key=2, style=dotted, color=green];
m0_3 -> m0_12  [key=2, style=dotted, color=green];
m0_3 -> m0_11  [key=2, style=dotted, color=green];
m0_3 -> m0_13  [key=2, style=dotted, color=green];
m0_3 -> m0_23  [key=1, style=dashed, color=green, label="lambda expression"];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_14  [key=2, style=dotted, color=green];
m0_4 -> m0_15  [key=2, style=dotted, color=green];
m0_6 -> m0_7  [key=0, style=solid, color=green];
m0_6 -> m0_17  [key=2, style=dotted, color=green];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_5 -> m0_16  [key=2, style=dotted, color=green];
m0_7 -> m0_0  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid, color=green];
m0_18 -> m0_19  [key=0, style=solid, color=green];
m0_19 -> m0_20  [key=0, style=solid, color=green];
m0_19 -> m0_21  [key=2, style=dotted, color=green];
m0_19 -> m0_22  [key=2, style=dotted, color=green];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_24 -> m0_25  [key=0, style=solid, color=green];
m0_24 -> m0_26  [key=2, style=dotted, color=green];
m0_25 -> m0_23  [key=0, style=bold, color=blue];
}
