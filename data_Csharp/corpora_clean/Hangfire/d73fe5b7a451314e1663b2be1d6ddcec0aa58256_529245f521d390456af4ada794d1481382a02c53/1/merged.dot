digraph  {
m0_13 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="BinaryExpressionFingerprint.cs"];
m0_3 [label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="29-29", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="BinaryExpressionFingerprint.cs"];
m0_4 [label="BinaryExpressionFingerprint other = obj as BinaryExpressionFingerprint", span="31-31", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="BinaryExpressionFingerprint.cs"];
m0_5 [label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", span="32-34", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="BinaryExpressionFingerprint.cs"];
m0_6 [label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", span="29-29", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.Equals(object)", file="BinaryExpressionFingerprint.cs"];
m0_8 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="BinaryExpressionFingerprint.cs"];
m0_7 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="BinaryExpressionFingerprint.cs"];
m0_14 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="BinaryExpressionFingerprint.cs"];
m0_9 [label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="BinaryExpressionFingerprint.cs"];
m0_10 [label="combiner.AddObject(Method)", span="39-39", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="BinaryExpressionFingerprint.cs"];
m0_11 [label="base.AddToHashCodeCombiner(combiner)", span="40-40", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="BinaryExpressionFingerprint.cs"];
m0_12 [label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="BinaryExpressionFingerprint.cs"];
m0_0 [label="Entry HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="BinaryExpressionFingerprint.cs"];
m0_1 [label="Method = method", span="23-23", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="BinaryExpressionFingerprint.cs"];
m0_2 [label="Exit HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint.BinaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="BinaryExpressionFingerprint.cs"];
m0_15 [label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint", span="", file="BinaryExpressionFingerprint.cs"];
m1_6 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CachedExpressionCompiler.cs"];
m1_13 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="CachedExpressionCompiler.cs"];
m1_8 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="CachedExpressionCompiler.cs"];
m1_14 [label="Entry HangFire.Common.ExpressionUtil.CachedExpressionCompiler.Process<TModel, TValue>(System.Linq.Expressions.Expression<System.Func<TModel, TValue>>)", span="17-17", cluster="HangFire.Common.ExpressionUtil.CachedExpressionCompiler.Process<TModel, TValue>(System.Linq.Expressions.Expression<System.Func<TModel, TValue>>)", file="CachedExpressionCompiler.cs"];
m1_0 [label="Entry HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="24-24", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="CachedExpressionCompiler.cs"];
m1_1 [label="arg == null", span="26-26", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="CachedExpressionCompiler.cs"];
m1_3 [label="Func<object, object> func = Wrap(arg)", span="31-31", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="CachedExpressionCompiler.cs"];
m1_2 [label="throw new ArgumentNullException(''arg'');", span="28-28", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="CachedExpressionCompiler.cs"];
m1_4 [label="return func(null);", span="32-32", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="CachedExpressionCompiler.cs"];
m1_5 [label="Exit HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="24-24", cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="CachedExpressionCompiler.cs"];
m1_7 [label="Entry HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", span="35-35", cluster="HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", file="CachedExpressionCompiler.cs"];
m1_9 [label="var lambdaExpr = Expression.Lambda<Func<object, object>>(Expression.Convert(arg, typeof(object)), UnusedParameterExpr)", span="37-37", cluster="HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", file="CachedExpressionCompiler.cs"];
m1_10 [label="return ExpressionUtil.CachedExpressionCompiler.Process(lambdaExpr);", span="38-38", cluster="HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", file="CachedExpressionCompiler.cs"];
m1_11 [label="Exit HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", span="35-35", cluster="HangFire.Common.CachedExpressionCompiler.Wrap(System.Linq.Expressions.Expression)", file="CachedExpressionCompiler.cs"];
m1_12 [label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="CachedExpressionCompiler.cs"];
m2_0 [label="Entry HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.ConstantExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="20-20", cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.ConstantExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="ConstantExpressionFingerprint.cs"];
m2_1 [label="Exit HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.ConstantExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="20-20", cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.ConstantExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="ConstantExpressionFingerprint.cs"];
m2_2 [label="Entry HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", span="27-27", cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", file="ConstantExpressionFingerprint.cs"];
m2_3 [label="ConstantExpressionFingerprint other = obj as ConstantExpressionFingerprint", span="29-29", cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", file="ConstantExpressionFingerprint.cs"];
m2_4 [label="return (other != null)\r\n                   && this.Equals(other);", span="30-31", cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", file="ConstantExpressionFingerprint.cs"];
m2_5 [label="Exit HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", span="27-27", cluster="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint.Equals(object)", file="ConstantExpressionFingerprint.cs"];
m2_6 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ConstantExpressionFingerprint.cs"];
m2_7 [label="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint", span="", file="ConstantExpressionFingerprint.cs"];
m3_34 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="DefaultExpressionFingerprint.cs"];
m3_5 [label="Exit HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", span="24-24", cluster="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint.Equals(object)", file="DefaultExpressionFingerprint.cs"];
m3_0 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="DefaultExpressionFingerprint.cs"];
m3_1 [label="transaction == null", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="DefaultExpressionFingerprint.cs"];
m3_11 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="38-38", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="DefaultExpressionFingerprint.cs"];
m3_6 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", file="DefaultExpressionFingerprint.cs"];
m3_28 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", span="61-61", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", file="DefaultExpressionFingerprint.cs"];
m3_29 [label="_transaction.QueueCommand(x => x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="63-65", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", file="DefaultExpressionFingerprint.cs"];
m3_30 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", span="61-61", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.ExpireIn(string, System.TimeSpan)", file="DefaultExpressionFingerprint.cs"];
m3_2 [label="throw new ArgumentNullException(''transaction'');", span="12-12", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="DefaultExpressionFingerprint.cs"];
m3_3 [label="_transaction = transaction", span="14-14", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="DefaultExpressionFingerprint.cs", color=green, community=0];
m3_4 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", span="10-10", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.SqlServerWriteOnlyValue(HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction)", file="DefaultExpressionFingerprint.cs"];
m3_17 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="DefaultExpressionFingerprint.cs"];
m3_9 [label="_transaction.QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="28-36", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", file="DefaultExpressionFingerprint.cs"];
m3_7 [label="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint", span="", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", file="DefaultExpressionFingerprint.cs"];
m3_8 [label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue + 1 where [Key] = @key''", span="25-26", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", file="DefaultExpressionFingerprint.cs"];
m3_10 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", span="17-17", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Increment(string)", file="DefaultExpressionFingerprint.cs"];
m3_31 [label="Entry lambda expression", span="63-65", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_12 [label="Entry lambda expression", span="28-36", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_23 [label="Entry lambda expression", span="50-58", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_13 [label="var affectedRows = x.Execute(updateSql, new { key })", span="30-30", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_15 [label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="34-34", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_16 [label="Exit lambda expression", span="28-36", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_24 [label="var affectedRows = x.Execute(updateSql, new { key })", span="52-52", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_26 [label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="56-56", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_27 [label="Exit lambda expression", span="50-58", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_32 [label="x.Execute(\r\n                @''update HangFire.Value set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="63-65", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_14 [label="affectedRows == 0", span="32-32", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_25 [label="affectedRows == 0", span="54-54", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_33 [label="Exit lambda expression", span="63-65", cluster="lambda expression", file="DefaultExpressionFingerprint.cs"];
m3_18 [label="Entry HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", span="39-39", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", file="DefaultExpressionFingerprint.cs"];
m3_21 [label="_transaction.QueueCommand(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="50-58", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", file="DefaultExpressionFingerprint.cs"];
m3_19 [label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="41-46", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", file="DefaultExpressionFingerprint.cs"];
m3_20 [label="string updateSql = @''\r\nupdate HangFire.Value set IntValue = IntValue - 1 where [Key] = @key''", span="47-48", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", file="DefaultExpressionFingerprint.cs"];
m3_22 [label="Exit HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", span="39-39", cluster="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue.Decrement(string)", file="DefaultExpressionFingerprint.cs"];
m3_35 [label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue", span="", file="DefaultExpressionFingerprint.cs"];
m3_36 [label=string, span="", file="DefaultExpressionFingerprint.cs"];
m3_37 [label=updateSql, span="", file="DefaultExpressionFingerprint.cs"];
m3_38 [label=insertSql, span="", file="DefaultExpressionFingerprint.cs"];
m3_39 [label=string, span="", file="DefaultExpressionFingerprint.cs"];
m3_40 [label=updateSql, span="", file="DefaultExpressionFingerprint.cs"];
m3_41 [label=insertSql, span="", file="DefaultExpressionFingerprint.cs"];
m3_42 [label=string, span="", file="DefaultExpressionFingerprint.cs"];
m3_43 [label="System.TimeSpan", span="", file="DefaultExpressionFingerprint.cs"];
m4_2 [label="Entry HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="5-5", cluster="HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="EnqueuedState.cs"];
m4_3 [label="Exit HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="5-5", cluster="HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="EnqueuedState.cs"];
m4_0 [label="Entry HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="4-4", cluster="HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="EnqueuedState.cs"];
m4_1 [label="Exit HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="4-4", cluster="HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="EnqueuedState.cs"];
m4_4 [label="Entry HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="7-7", cluster="HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="EnqueuedState.cs"];
m4_5 [label="Exit HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="7-7", cluster="HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="EnqueuedState.cs"];
m5_21 [label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="77-77", cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="EnqueuedStateHandlerFacts.cs"];
m5_17 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", span="35-35", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m5_18 [label="var handler = new EnqueuedState.Handler()", span="37-37", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m5_19 [label="Assert.Equal(EnqueuedState.StateName, handler.StateName)", span="38-38", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m5_20 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", span="35-35", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.HandlerShouldBeRegistered_ForTheEnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m5_10 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="EnqueuedStateHandlerFacts.cs"];
m5_40 [label="Entry Unk.>", span="", cluster="Unk.>", file="EnqueuedStateHandlerFacts.cs"];
m5_12 [label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31", cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="EnqueuedStateHandlerFacts.cs"];
m5_39 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="EnqueuedStateHandlerFacts.cs"];
m5_8 [label="Entry Mock<IWriteOnlyTransaction>.cstr", span="", cluster="Mock<IWriteOnlyTransaction>.cstr", file="EnqueuedStateHandlerFacts.cs"];
m5_28 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="EnqueuedStateHandlerFacts.cs"];
m5_34 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m5_35 [label="var handler = new EnqueuedState.Handler()", span="54-54", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m5_36 [label="var context = new ApplyStateContext(\r\n                _connection.Object, _stateContext, new Mock<State>().Object, null)", span="55-56", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m5_37 [label="Assert.Throws<InvalidOperationException>(\r\n                () => handler.Apply(context, _transaction.Object))", span="58-59", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m5_38 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", span="52-52", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_ThrowsAnException_WhenOtherThanEnqueuedStateGiven()", file="EnqueuedStateHandlerFacts.cs"];
m5_7 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedStateHandlerFacts.cs"];
m5_11 [label="Entry ApplyStateContext.cstr", span="", cluster="ApplyStateContext.cstr", file="EnqueuedStateHandlerFacts.cs"];
m5_22 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="EnqueuedStateHandlerFacts.cs"];
m5_33 [label="Entry Unk.AddToQueue", span="", cluster="Unk.AddToQueue", file="EnqueuedStateHandlerFacts.cs"];
m5_0 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m5_1 [label="var job = Job.FromExpression(() => Console.WriteLine())", span="21-21", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m5_2 [label="_transaction = new Mock<IWriteOnlyTransaction>()", span="23-23", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m5_4 [label="_stateContext = new StateContext(JobId, job)", span="25-25", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m5_3 [label="_connection = new Mock<IStorageConnection>()", span="24-24", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m5_5 [label="_context = new ApplyStateContext(\r\n                _connection.Object,\r\n                _stateContext, \r\n                new EnqueuedState { Queue = Queue }, \r\n                null)", span="27-31", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m5_6 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", span="19-19", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.EnqueuedStateHandlerFacts()", file="EnqueuedStateHandlerFacts.cs"];
m5_23 [label="Entry HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m5_24 [label="var handler = new EnqueuedState.Handler()", span="44-44", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m5_25 [label="handler.Apply(_context, _transaction.Object)", span="46-46", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m5_26 [label="_transaction.Verify(x => x.AddToQueue(Queue, JobId))", span="48-48", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m5_27 [label="Exit HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", span="42-42", cluster="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts.Apply_AddsJob_ToTheSpecifiedQueue()", file="EnqueuedStateHandlerFacts.cs"];
m5_9 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="EnqueuedStateHandlerFacts.cs"];
m5_16 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="EnqueuedStateHandlerFacts.cs"];
m5_41 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m5_13 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m5_14 [label="Console.WriteLine()", span="21-21", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m5_15 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m5_30 [label="Entry lambda expression", span="48-48", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m5_31 [label="x.AddToQueue(Queue, JobId)", span="48-48", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m5_32 [label="Exit lambda expression", span="48-48", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m5_42 [label="handler.Apply(context, _transaction.Object)", span="59-59", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m5_43 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="EnqueuedStateHandlerFacts.cs"];
m5_29 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="EnqueuedStateHandlerFacts.cs"];
m5_44 [label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts", span="", file="EnqueuedStateHandlerFacts.cs"];
m5_45 [label=handler, span="", file="EnqueuedStateHandlerFacts.cs"];
m5_46 [label=context, span="", file="EnqueuedStateHandlerFacts.cs"];
m6_7 [label="Entry Unk.>", span="", cluster="Unk.>", file="ExpressionFingerprint.cs"];
m6_22 [label="Entry Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="38-38", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="ExpressionFingerprint.cs"];
m6_23 [label="var context = CreateContext()", span="40-40", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="ExpressionFingerprint.cs"];
m6_24 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => context.SetJobParameter(null, null))", span="42-43", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="ExpressionFingerprint.cs"];
m6_25 [label="Assert.Equal(''name'', exception.ParamName)", span="45-45", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="ExpressionFingerprint.cs"];
m6_26 [label="Exit Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", span="38-38", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_WhenParameterNameIsNull()", file="ExpressionFingerprint.cs"];
m6_49 [label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="187-187", cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="ExpressionFingerprint.cs"];
m6_50 [label="Entry Mock<IState>.cstr", span="", cluster="Mock<IState>.cstr", file="ExpressionFingerprint.cs"];
m6_0 [label="Entry Hangfire.Core.Tests.Client.CreatedContextFacts.CreatedContextFacts()", span="15-15", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreatedContextFacts()", file="ExpressionFingerprint.cs"];
m6_1 [label="_exception = new Exception()", span="17-17", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreatedContextFacts()", file="ExpressionFingerprint.cs"];
m6_2 [label="Exit Hangfire.Core.Tests.Client.CreatedContextFacts.CreatedContextFacts()", span="15-15", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreatedContextFacts()", file="ExpressionFingerprint.cs"];
m6_20 [label="Entry Unk.Same", span="", cluster="Unk.Same", file="ExpressionFingerprint.cs"];
m6_19 [label="Entry Unk.True", span="", cluster="Unk.True", file="ExpressionFingerprint.cs"];
m6_30 [label="Entry Hangfire.Client.CreatedContext.SetJobParameter(string, object)", span="70-70", cluster="Hangfire.Client.CreatedContext.SetJobParameter(string, object)", file="ExpressionFingerprint.cs"];
m6_21 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ExpressionFingerprint.cs"];
m6_3 [label="Entry System.Exception.Exception()", span="0-0", cluster="System.Exception.Exception()", file="ExpressionFingerprint.cs"];
m6_4 [label="Entry Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="21-21", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ExpressionFingerprint.cs"];
m6_5 [label="Assert.Throws<NullReferenceException>(\r\n                () => new CreatedContext(null, JobId, false, null))", span="23-24", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ExpressionFingerprint.cs"];
m6_6 [label="Exit Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", span="21-21", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_ThrowsAnException_WhenCreateContextIsNull()", file="ExpressionFingerprint.cs"];
m6_11 [label="Entry Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", span="29-29", cluster="Hangfire.Client.CreatedContext.CreatedContext(Hangfire.Client.CreateContext, string, bool, System.Exception)", file="ExpressionFingerprint.cs"];
m6_12 [label="Entry Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", span="28-28", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="ExpressionFingerprint.cs"];
m6_13 [label="var context = CreateContext()", span="30-30", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="ExpressionFingerprint.cs"];
m6_14 [label="Assert.True(context.Canceled)", span="32-32", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="ExpressionFingerprint.cs"];
m6_15 [label="Assert.Same(_exception, context.Exception)", span="33-33", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="ExpressionFingerprint.cs"];
m6_16 [label="Assert.Equal(JobId, context.JobId)", span="34-34", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="ExpressionFingerprint.cs"];
m6_17 [label="Exit Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", span="28-28", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.Ctor_CorrectlySetsAllProperties()", file="ExpressionFingerprint.cs"];
m6_48 [label="Entry Mock<IStorageConnection>.cstr", span="", cluster="Mock<IStorageConnection>.cstr", file="ExpressionFingerprint.cs"];
m6_38 [label="Entry Hangfire.Core.Tests.Client.CreatedContextFacts.TestMethod()", span="59-59", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.TestMethod()", file="ExpressionFingerprint.cs"];
m6_39 [label="Exit Hangfire.Core.Tests.Client.CreatedContextFacts.TestMethod()", span="59-59", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.TestMethod()", file="ExpressionFingerprint.cs"];
m6_52 [label="Entry lambda expression", span="65-65", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_8 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_9 [label="new CreatedContext(null, JobId, false, null)", span="24-24", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_10 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_28 [label="context.SetJobParameter(null, null)", span="43-43", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_27 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_29 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_36 [label="context.SetJobParameter(''name'', ''value'')", span="56-56", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_35 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_37 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_53 [label="TestMethod()", span="65-65", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_54 [label="Exit lambda expression", span="65-65", cluster="lambda expression", file="ExpressionFingerprint.cs"];
m6_51 [label="Entry CreateContext.cstr", span="", cluster="CreateContext.cstr", file="ExpressionFingerprint.cs"];
m6_31 [label="Entry Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="49-49", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="ExpressionFingerprint.cs"];
m6_32 [label="var context = CreateContext()", span="53-53", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="ExpressionFingerprint.cs"];
m6_33 [label="Assert.Throws<InvalidOperationException>(\r\n                () => context.SetJobParameter(''name'', ''value''))", span="55-56", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="ExpressionFingerprint.cs"];
m6_34 [label="Exit Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", span="49-49", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.SetJobParameter_ThrowsAnException_AfterCreateJobWasCalled()", file="ExpressionFingerprint.cs"];
m6_47 [label="Entry Mock<JobStorage>.cstr", span="", cluster="Mock<JobStorage>.cstr", file="ExpressionFingerprint.cs"];
m6_18 [label="Entry Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", span="61-61", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", file="ExpressionFingerprint.cs"];
m6_40 [label="var storage = new Mock<JobStorage>()", span="63-63", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", file="ExpressionFingerprint.cs"];
m6_41 [label="var connection = new Mock<IStorageConnection>()", span="64-64", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", file="ExpressionFingerprint.cs"];
m6_44 [label="var createContext = new CreateContext(storage.Object, connection.Object, job, state.Object)", span="68-68", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", file="ExpressionFingerprint.cs"];
m6_42 [label="var job = Job.FromExpression(() => TestMethod())", span="65-65", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", file="ExpressionFingerprint.cs"];
m6_43 [label="var state = new Mock<IState>()", span="66-66", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", file="ExpressionFingerprint.cs"];
m6_45 [label="return new CreatedContext(createContext, JobId, true, _exception);", span="69-69", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", file="ExpressionFingerprint.cs"];
m6_46 [label="Exit Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", span="61-61", cluster="Hangfire.Core.Tests.Client.CreatedContextFacts.CreateContext()", file="ExpressionFingerprint.cs"];
m6_55 [label="Hangfire.Core.Tests.Client.CreatedContextFacts", span="", file="ExpressionFingerprint.cs"];
m6_56 [label=context, span="", file="ExpressionFingerprint.cs"];
m6_57 [label=context, span="", file="ExpressionFingerprint.cs"];
m7_12 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="ExpressionFingerprintChain.cs"];
m7_0 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", span="49-49", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_1 [label="other == null", span="54-54", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_3 [label="this.Elements.Count != other.Elements.Count", span="59-59", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_7 [label="!Equals(this.Elements[i], other.Elements[i])", span="66-66", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_2 [label="return false;", span="56-56", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_4 [label="return false;", span="61-61", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_5 [label="int i = 0", span="64-64", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_6 [label="i < this.Elements.Count", span="64-64", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_9 [label="i++", span="64-64", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_10 [label="return true;", span="72-72", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_8 [label="return false;", span="68-68", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_11 [label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", span="49-49", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprintChain)", file="ExpressionFingerprintChain.cs"];
m7_22 [label="Entry System.Collections.Generic.List<T>.ForEach(System.Action<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.ForEach(System.Action<T>)", file="ExpressionFingerprintChain.cs"];
m7_16 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.GetHashCode()", span="80-80", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.GetHashCode()", file="ExpressionFingerprintChain.cs"];
m7_17 [label="HashCodeCombiner combiner = new HashCodeCombiner()", span="82-82", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.GetHashCode()", file="ExpressionFingerprintChain.cs"];
m7_18 [label="Elements.ForEach(combiner.AddFingerprint)", span="83-83", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.GetHashCode()", file="ExpressionFingerprintChain.cs"];
m7_19 [label="return combiner.CombinedHash;", span="84-84", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.GetHashCode()", file="ExpressionFingerprintChain.cs"];
m7_20 [label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.GetHashCode()", span="80-80", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.GetHashCode()", file="ExpressionFingerprintChain.cs"];
m7_13 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(object)", span="75-75", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(object)", file="ExpressionFingerprintChain.cs"];
m7_14 [label="return Equals(obj as ExpressionFingerprintChain);", span="77-77", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(object)", file="ExpressionFingerprintChain.cs"];
m7_15 [label="Exit HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(object)", span="75-75", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain.Equals(object)", file="ExpressionFingerprintChain.cs"];
m7_21 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.HashCodeCombiner()", span="7-7", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.HashCodeCombiner()", file="ExpressionFingerprintChain.cs"];
m7_23 [label="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain", span="", file="ExpressionFingerprintChain.cs"];
m8_66 [label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, HangFire.Server.JobPayload)", span="10-10", cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(HangFire.JobActivator, HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_26 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="FailedStateHandler.cs"];
m8_44 [label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Reset()", file="FailedStateHandler.cs"];
m8_68 [label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33", cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="FailedStateHandler.cs"];
m8_45 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="FailedStateHandler.cs"];
m8_10 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="FailedStateHandler.cs"];
m8_27 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="FailedStateHandler.cs"];
m8_9 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="FailedStateHandler.cs"];
m8_7 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="FailedStateHandler.cs"];
m8_20 [label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Set()", file="FailedStateHandler.cs"];
m8_41 [label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="87-87", cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="FailedStateHandler.cs"];
m8_14 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="FailedStateHandler.cs"];
m8_0 [label="Entry HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="FailedStateHandler.cs"];
m8_1 [label="_manager = manager", span="34-34", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", color=red, community=0, file="FailedStateHandler.cs"];
m8_2 [label="_context = context", span="35-35", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", color=red, community=0, file="FailedStateHandler.cs"];
m8_3 [label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber))", span="37-37", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="FailedStateHandler.cs"];
m8_4 [label="_thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                    IsBackground = true\r\n                }", span="39-43", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", color=red, community=0, file="FailedStateHandler.cs"];
m8_5 [label="_thread.Start()", span="44-44", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="FailedStateHandler.cs"];
m8_6 [label="Exit HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32", cluster="HangFire.Server.Worker.Worker(HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="FailedStateHandler.cs"];
m8_8 [label="Entry Unk.GetLogger", span="", cluster="Unk.GetLogger", file="FailedStateHandler.cs"];
m8_42 [label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0", cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="FailedStateHandler.cs"];
m8_29 [label="Entry HangFire.Server.Worker.DoWork()", span="89-89", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_30 [label=true, span="93-93", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_31 [label="_manager.NotifyReady(this)", span="95-95", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_36 [label=OperationCanceledException, span="105-105", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_37 [label=Exception, span="108-108", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_32 [label="_jobIsReady.Wait(_cts.Token)", span="96-96", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_33 [label=_jobLock, span="98-98", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_34 [label="PerformJob(_jobPayload)", span="100-100", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_35 [label="_jobIsReady.Reset()", span="101-101", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_38 [label="Crashed = true", span="110-110", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_39 [label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="111-114", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_40 [label="Exit HangFire.Server.Worker.DoWork()", span="89-89", cluster="HangFire.Server.Worker.DoWork()", file="FailedStateHandler.cs"];
m8_71 [label="Entry HangFire.States.FailedState.FailedState(string, string, System.Exception)", span="10-10", cluster="HangFire.States.FailedState.FailedState(string, string, System.Exception)", file="FailedStateHandler.cs"];
m8_64 [label="Entry HangFire.States.ProcessingState.ProcessingState(string, string, string)", span="10-10", cluster="HangFire.States.ProcessingState.ProcessingState(string, string, string)", file="FailedStateHandler.cs"];
m8_67 [label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13", cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="FailedStateHandler.cs"];
m8_46 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="FailedStateHandler.cs"];
m8_70 [label="Entry HangFire.States.SucceededState.SucceededState(string, string)", span="12-12", cluster="HangFire.States.SucceededState.SucceededState(string, string)", file="FailedStateHandler.cs"];
m8_11 [label="Entry HangFire.Server.Worker.SendStop()", span="47-47", cluster="HangFire.Server.Worker.SendStop()", file="FailedStateHandler.cs"];
m8_12 [label="_cts.Cancel()", span="49-49", cluster="HangFire.Server.Worker.SendStop()", file="FailedStateHandler.cs"];
m8_13 [label="Exit HangFire.Server.Worker.SendStop()", span="47-47", cluster="HangFire.Server.Worker.SendStop()", file="FailedStateHandler.cs"];
m8_65 [label="Entry HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", span="47-47", cluster="HangFire.States.JobState.Apply(IRedisClient, HangFire.States.JobState, params string[])", file="FailedStateHandler.cs"];
m8_43 [label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="119-119", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_47 [label=Redis, span="121-121", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_48 [label="!JobState.Apply(\r\n                    Redis,\r\n                    new ProcessingState(payload.Id, ''Worker has started processing.'', _context.ServerName),\r\n                    EnqueuedState.Name)", span="123-126", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_52 [label="jobDescriptor = new ServerJobDescriptor(\r\n                    _context.Activator, payload)", span="142-143", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_57 [label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="154-156", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_60 [label="JobState.Apply(\r\n                        Redis,\r\n                        new SucceededState(payload.Id, ''The job has been completed successfully.''),\r\n                        ProcessingState.Name)", span="170-173", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_61 [label="JobState.Apply(\r\n                        Redis,\r\n                        new FailedState(payload.Id, ''The job has been failed.'', exception),\r\n                        ProcessingState.Name)", span="177-180", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_62 [label="JobServer.RemoveFromFetchedQueue(\r\n                    Redis, payload.Id, payload.Queue)", span="188-189", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_49 [label="return;", span="128-128", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_50 [label="Exception exception = null", span="137-137", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_51 [label="ServerJobDescriptor jobDescriptor = null", span="139-139", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_53 [label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="145-146", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_54 [label="_context.Performer.PerformJob(performContext)", span="148-148", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_55 [label=Exception, span="150-150", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_58 [label=Redis, span="166-166", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_56 [label="exception = ex", span="152-152", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_59 [label="exception == null", span="168-168", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_63 [label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="119-119", cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_72 [label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="97-97", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="FailedStateHandler.cs"];
m8_21 [label="Entry HangFire.Server.Worker.Dispose()", span="80-80", cluster="HangFire.Server.Worker.Dispose()", file="FailedStateHandler.cs"];
m8_22 [label="_thread.Join()", span="82-82", cluster="HangFire.Server.Worker.Dispose()", file="FailedStateHandler.cs"];
m8_23 [label="_cts.Dispose()", span="84-84", cluster="HangFire.Server.Worker.Dispose()", file="FailedStateHandler.cs"];
m8_24 [label="_jobIsReady.Dispose()", span="85-85", cluster="HangFire.Server.Worker.Dispose()", file="FailedStateHandler.cs"];
m8_25 [label="Exit HangFire.Server.Worker.Dispose()", span="80-80", cluster="HangFire.Server.Worker.Dispose()", file="FailedStateHandler.cs"];
m8_69 [label="Entry Unk.Error", span="", cluster="Unk.Error", file="FailedStateHandler.cs"];
m8_28 [label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0", cluster="System.Threading.ManualResetEventSlim.Dispose()", file="FailedStateHandler.cs"];
m8_15 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="70-70", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_16 [label=_jobLock, span="72-72", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_17 [label="_jobPayload = payload", span="74-74", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_18 [label="_jobIsReady.Set()", span="77-77", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_19 [label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="70-70", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="FailedStateHandler.cs"];
m8_73 [label="HangFire.Server.Worker", span="", file="FailedStateHandler.cs"];
m9_132 [label="Entry Unk.FromNullableStringTimestamp", span="", cluster="Unk.FromNullableStringTimestamp", file="FingerprintingExpressionVisitor.cs"];
m9_20 [label="Entry HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", span="17-17", cluster="HangFire.Redis.RedisJobFetcher.RedisJobFetcher(IRedisClient, System.Collections.Generic.IEnumerable<string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_51 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="FingerprintingExpressionVisitor.cs"];
m9_7 [label="Entry HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", span="11-11", cluster="HangFire.Redis.RedisStoredSets.RedisStoredSets(IRedisClient)", file="FingerprintingExpressionVisitor.cs"];
m9_15 [label="Entry RedisAtomicWriteTransaction.cstr", span="", cluster="RedisAtomicWriteTransaction.cstr", file="FingerprintingExpressionVisitor.cs"];
m9_26 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="FingerprintingExpressionVisitor.cs"];
m9_12 [label="Entry HangFire.Redis.RedisStorageConnection.CreateWriteTransaction()", span="28-28", cluster="HangFire.Redis.RedisStorageConnection.CreateWriteTransaction()", file="FingerprintingExpressionVisitor.cs"];
m9_13 [label="return new RedisAtomicWriteTransaction(_redis.CreateTransaction());", span="30-30", cluster="HangFire.Redis.RedisStorageConnection.CreateWriteTransaction()", file="FingerprintingExpressionVisitor.cs"];
m9_14 [label="Exit HangFire.Redis.RedisStorageConnection.CreateWriteTransaction()", span="28-28", cluster="HangFire.Redis.RedisStorageConnection.CreateWriteTransaction()", file="FingerprintingExpressionVisitor.cs"];
m9_131 [label="Entry Unk.FromStringTimestamp", span="", cluster="Unk.FromStringTimestamp", file="FingerprintingExpressionVisitor.cs"];
m9_98 [label="Entry Unk.SetEntryInHash", span="", cluster="Unk.SetEntryInHash", file="FingerprintingExpressionVisitor.cs"];
m9_68 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="FingerprintingExpressionVisitor.cs"];
m9_25 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="FingerprintingExpressionVisitor.cs"];
m9_148 [label="Entry Unk.RemoveEntryFromHash", span="", cluster="Unk.RemoveEntryFromHash", file="FingerprintingExpressionVisitor.cs"];
m9_94 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="FingerprintingExpressionVisitor.cs"];
m9_37 [label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(Prefix + ''job:{0}'', jobId),\r\n                    expireIn))", span="69-71", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_28 [label="Entry HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="49-49", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_29 [label="var jobId = Guid.NewGuid().ToString()", span="55-55", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_30 [label="parameters.Add(''Type'', invocationData.Type)", span="57-57", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_31 [label="parameters.Add(''Method'', invocationData.Method)", span="58-58", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_32 [label="parameters.Add(''ParameterTypes'', invocationData.ParameterTypes)", span="59-59", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_33 [label="parameters.Add(''Arguments'', JobHelper.ToJson(arguments))", span="60-60", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_34 [label="parameters.Add(''CreatedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="61-61", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_36 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(Prefix + ''job:{0}'', jobId),\r\n                    parameters))", span="65-67", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_39 [label="return jobId;", span="77-77", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_35 [label="var transaction = _redis.CreateTransaction()", span="63-63", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_38 [label="transaction.Commit()", span="74-74", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_40 [label="Exit HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="49-49", cluster="HangFire.Redis.RedisStorageConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_73 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="FingerprintingExpressionVisitor.cs"];
m9_21 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="FingerprintingExpressionVisitor.cs"];
m9_55 [label="Entry Unk.ExpireEntryIn", span="", cluster="Unk.ExpireEntryIn", file="FingerprintingExpressionVisitor.cs"];
m9_96 [label="_redis.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', serverId),\r\n                ''Heartbeat'',\r\n                JobHelper.ToStringTimestamp(DateTime.UtcNow))", span="130-133", cluster="HangFire.Redis.RedisStorageConnection.Heartbeat(string)", file="FingerprintingExpressionVisitor.cs"];
m9_95 [label="Entry HangFire.Redis.RedisStorageConnection.Heartbeat(string)", span="128-128", cluster="HangFire.Redis.RedisStorageConnection.Heartbeat(string)", file="FingerprintingExpressionVisitor.cs"];
m9_97 [label="Exit HangFire.Redis.RedisStorageConnection.Heartbeat(string)", span="128-128", cluster="HangFire.Redis.RedisStorageConnection.Heartbeat(string)", file="FingerprintingExpressionVisitor.cs"];
m9_0 [label="Entry HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="14-14", cluster="HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="FingerprintingExpressionVisitor.cs"];
m9_1 [label="_redis = redis", span="16-16", cluster="HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="FingerprintingExpressionVisitor.cs"];
m9_2 [label="Jobs = new RedisStoredJobs(redis)", span="18-18", cluster="HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="FingerprintingExpressionVisitor.cs"];
m9_3 [label="Sets = new RedisStoredSets(redis)", span="19-19", cluster="HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="FingerprintingExpressionVisitor.cs"];
m9_4 [label="Storage = storage", span="20-20", cluster="HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="FingerprintingExpressionVisitor.cs"];
m9_5 [label="Exit HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="14-14", cluster="HangFire.Redis.RedisStorageConnection.RedisStorageConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="FingerprintingExpressionVisitor.cs"];
m9_138 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Checked''))", span="194-196", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="FingerprintingExpressionVisitor.cs"];
m9_134 [label="Entry HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="179-179", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="FingerprintingExpressionVisitor.cs"];
m9_135 [label="var transaction = redis.CreateTransaction()", span="184-184", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="FingerprintingExpressionVisitor.cs"];
m9_136 [label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="186-189", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="FingerprintingExpressionVisitor.cs"];
m9_137 [label="transaction.QueueCommand(x => x.RemoveEntryFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Fetched''))", span="191-193", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="FingerprintingExpressionVisitor.cs"];
m9_139 [label="transaction.Commit()", span="198-198", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="FingerprintingExpressionVisitor.cs"];
m9_140 [label="Exit HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", span="179-179", cluster="HangFire.Redis.RedisStorageConnection.RemoveFromDequeuedList(IRedisClient, string, string)", file="FingerprintingExpressionVisitor.cs"];
m9_42 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="FingerprintingExpressionVisitor.cs"];
m9_118 [label="Entry Unk.Flush", span="", cluster="Unk.Flush", file="FingerprintingExpressionVisitor.cs"];
m9_133 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="FingerprintingExpressionVisitor.cs"];
m9_121 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_72 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="FingerprintingExpressionVisitor.cs"];
m9_56 [label="Entry HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="80-80", cluster="HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_57 [label="var transaction = _redis.CreateTransaction()", span="82-82", cluster="HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_58 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', serverId))", span="84-85", cluster="HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_59 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        }))", span="87-93", cluster="HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_60 [label=queues, span="95-95", cluster="HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_62 [label="transaction.QueueCommand(x => x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', serverId),\r\n                        queue1))", span="98-100", cluster="HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_63 [label="transaction.Commit()", span="103-103", cluster="HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_61 [label="var queue1 = queue", span="97-97", cluster="HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_64 [label="Exit HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="80-80", cluster="HangFire.Redis.RedisStorageConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_99 [label="Entry HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="136-136", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_100 [label="var serverNames = _redis.GetAllItemsFromSet(''hangfire:servers'')", span="138-138", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_111 [label="utcNow > maxTime.Add(timeOut)", span="169-169", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_101 [label="var heartbeats = new Dictionary<string, Tuple<DateTime, DateTime?>>()", span="139-139", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_104 [label=serverNames, span="145-145", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_102 [label="var utcNow = DateTime.UtcNow", span="141-141", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_106 [label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat''),\r\n                        x => heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1]))))", span="149-157", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_109 [label=heartbeats, span="164-164", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_103 [label="var pipeline = _redis.CreatePipeline()", span="143-143", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_107 [label="pipeline.Flush()", span="160-160", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_105 [label="var name = serverName", span="147-147", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_108 [label="var removedServerCount = 0", span="163-163", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_113 [label="removedServerCount++", span="172-172", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_114 [label="return removedServerCount;", span="176-176", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_110 [label="var maxTime = new DateTime(\r\n                    Math.Max(heartbeat.Value.Item1.Ticks, (heartbeat.Value.Item2 ?? DateTime.MinValue).Ticks))", span="166-167", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_112 [label="RemoveServer(_redis, heartbeat.Key)", span="171-171", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_115 [label="Exit HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", span="136-136", cluster="HangFire.Redis.RedisStorageConnection.RemoveTimedOutServers(System.TimeSpan)", file="FingerprintingExpressionVisitor.cs"];
m9_130 [label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0", cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="FingerprintingExpressionVisitor.cs"];
m9_77 [label="Entry Unk.AddItemToList", span="", cluster="Unk.AddItemToList", file="FingerprintingExpressionVisitor.cs"];
m9_11 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="FingerprintingExpressionVisitor.cs"];
m9_90 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="FingerprintingExpressionVisitor.cs"];
m9_119 [label="Entry System.DateTime.DateTime(long)", span="0-0", cluster="System.DateTime.DateTime(long)", file="FingerprintingExpressionVisitor.cs"];
m9_120 [label="Entry System.Math.Max(long, long)", span="0-0", cluster="System.Math.Max(long, long)", file="FingerprintingExpressionVisitor.cs"];
m9_8 [label="Entry HangFire.Redis.RedisStorageConnection.Dispose()", span="23-23", cluster="HangFire.Redis.RedisStorageConnection.Dispose()", file="FingerprintingExpressionVisitor.cs"];
m9_9 [label="_redis.Dispose()", span="25-25", cluster="HangFire.Redis.RedisStorageConnection.Dispose()", file="FingerprintingExpressionVisitor.cs"];
m9_10 [label="Exit HangFire.Redis.RedisStorageConnection.Dispose()", span="23-23", cluster="HangFire.Redis.RedisStorageConnection.Dispose()", file="FingerprintingExpressionVisitor.cs"];
m9_6 [label="Entry HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", span="13-13", cluster="HangFire.Redis.RedisStoredJobs.RedisStoredJobs(IRedisClient)", file="FingerprintingExpressionVisitor.cs"];
m9_149 [label="Entry lambda expression", span="194-196", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_49 [label="x.SetRangeInHash(\r\n                    String.Format(Prefix + ''job:{0}'', jobId),\r\n                    parameters)", span="65-67", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_53 [label="x.ExpireEntryIn(\r\n                    String.Format(Prefix + ''job:{0}'', jobId),\r\n                    expireIn)", span="69-71", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_48 [label="Entry lambda expression", span="65-67", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_52 [label="Entry lambda expression", span="69-71", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_50 [label="Exit lambda expression", span="65-67", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_54 [label="Exit lambda expression", span="69-71", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_66 [label="x.AddItemToSet(\r\n                    ''hangfire:servers'', serverId)", span="84-85", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_70 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', serverId),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''WorkerCount'', workerCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) },\r\n                        })", span="87-93", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_75 [label="x.AddItemToList(\r\n                        String.Format(''hangfire:server:{0}:queues'', serverId),\r\n                        queue1)", span="98-100", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_65 [label="Entry lambda expression", span="84-85", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_69 [label="Entry lambda expression", span="87-93", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_74 [label="Entry lambda expression", span="98-100", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_67 [label="Exit lambda expression", span="84-85", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_71 [label="Exit lambda expression", span="87-93", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_76 [label="Exit lambda expression", span="98-100", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_88 [label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverId)", span="116-118", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_92 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverId),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverId))", span="120-122", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_87 [label="Entry lambda expression", span="116-118", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_91 [label="Entry lambda expression", span="120-122", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_89 [label="Exit lambda expression", span="116-118", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_93 [label="Exit lambda expression", span="120-122", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_128 [label="heartbeats.Add(\r\n                            name,\r\n                            new Tuple<DateTime, DateTime?>(\r\n                                JobHelper.FromStringTimestamp(x[0]),\r\n                                JobHelper.FromNullableStringTimestamp(x[1])))", span="153-157", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_123 [label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''StartedAt'', ''Heartbeat'')", span="150-152", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_122 [label="Entry lambda expression", span="150-152", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_127 [label="Entry lambda expression", span="153-157", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_124 [label="Exit lambda expression", span="150-152", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_129 [label="Exit lambda expression", span="153-157", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_142 [label="x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="186-189", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_146 [label="x.RemoveEntryFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Fetched'')", span="191-193", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_150 [label="x.RemoveEntryFromHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''Checked'')", span="194-196", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_141 [label="Entry lambda expression", span="186-189", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_145 [label="Entry lambda expression", span="191-193", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_143 [label="Exit lambda expression", span="186-189", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_147 [label="Exit lambda expression", span="191-193", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_151 [label="Exit lambda expression", span="194-196", cluster="lambda expression", file="FingerprintingExpressionVisitor.cs"];
m9_45 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="FingerprintingExpressionVisitor.cs"];
m9_78 [label="Entry HangFire.Redis.RedisStorageConnection.RemoveServer(string)", span="107-107", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(string)", file="FingerprintingExpressionVisitor.cs"];
m9_79 [label="RemoveServer(_redis, serverId)", span="109-109", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(string)", file="FingerprintingExpressionVisitor.cs"];
m9_80 [label="Exit HangFire.Redis.RedisStorageConnection.RemoveServer(string)", span="107-107", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(string)", file="FingerprintingExpressionVisitor.cs"];
m9_144 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="FingerprintingExpressionVisitor.cs"];
m9_117 [label="Entry Unk.CreatePipeline", span="", cluster="Unk.CreatePipeline", file="FingerprintingExpressionVisitor.cs"];
m9_41 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="FingerprintingExpressionVisitor.cs"];
m9_44 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="FingerprintingExpressionVisitor.cs"];
m9_47 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="FingerprintingExpressionVisitor.cs"];
m9_116 [label="Entry Unk.GetAllItemsFromSet", span="", cluster="Unk.GetAllItemsFromSet", file="FingerprintingExpressionVisitor.cs"];
m9_84 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', serverId),\r\n                    String.Format(''hangfire:server:{0}:queues'', serverId)))", span="120-122", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="FingerprintingExpressionVisitor.cs"];
m9_81 [label="Entry HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", span="112-112", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="FingerprintingExpressionVisitor.cs"];
m9_82 [label="var transaction = redis.CreateTransaction()", span="114-114", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="FingerprintingExpressionVisitor.cs"];
m9_83 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    serverId))", span="116-118", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="FingerprintingExpressionVisitor.cs"];
m9_85 [label="transaction.Commit()", span="124-124", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="FingerprintingExpressionVisitor.cs"];
m9_86 [label="Exit HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", span="112-112", cluster="HangFire.Redis.RedisStorageConnection.RemoveServer(IRedisClient, string)", file="FingerprintingExpressionVisitor.cs"];
m9_126 [label="Entry Unk.GetValuesFromHash", span="", cluster="Unk.GetValuesFromHash", file="FingerprintingExpressionVisitor.cs"];
m9_125 [label="Entry Unk.Format", span="", cluster="Unk.Format", file="FingerprintingExpressionVisitor.cs"];
m9_46 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="FingerprintingExpressionVisitor.cs"];
m9_43 [label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="FingerprintingExpressionVisitor.cs"];
m9_17 [label="Entry HangFire.Redis.RedisStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="33-33", cluster="HangFire.Redis.RedisStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_18 [label="return new RedisJobFetcher(_redis, queueNames, TimeSpan.FromSeconds(1));", span="35-35", cluster="HangFire.Redis.RedisStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_19 [label="Exit HangFire.Redis.RedisStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="33-33", cluster="HangFire.Redis.RedisStorageConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", file="FingerprintingExpressionVisitor.cs"];
m9_22 [label="Entry HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", span="38-38", cluster="HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", file="FingerprintingExpressionVisitor.cs"];
m9_23 [label="return _redis.AcquireLock(\r\n                Prefix + String.Format(''job:{0}:state-lock'', jobId),\r\n                TimeSpan.FromMinutes(1));", span="40-42", cluster="HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", file="FingerprintingExpressionVisitor.cs"];
m9_24 [label="Exit HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", span="38-38", cluster="HangFire.Redis.RedisStorageConnection.AcquireJobLock(string)", file="FingerprintingExpressionVisitor.cs"];
m9_27 [label="Entry Unk.AcquireLock", span="", cluster="Unk.AcquireLock", file="FingerprintingExpressionVisitor.cs"];
m9_16 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="FingerprintingExpressionVisitor.cs"];
m9_152 [label="HangFire.Redis.RedisStorageConnection", span="", file="FingerprintingExpressionVisitor.cs"];
m9_153 [label="System.Collections.Generic.IDictionary<string, string>", span="", file="FingerprintingExpressionVisitor.cs"];
m9_154 [label=jobId, span="", file="FingerprintingExpressionVisitor.cs"];
m9_155 [label="System.TimeSpan", span="", file="FingerprintingExpressionVisitor.cs"];
m9_156 [label=string, span="", file="FingerprintingExpressionVisitor.cs"];
m9_157 [label=int, span="", file="FingerprintingExpressionVisitor.cs"];
m9_158 [label=queue1, span="", file="FingerprintingExpressionVisitor.cs"];
m9_159 [label=string, span="", file="FingerprintingExpressionVisitor.cs"];
m9_160 [label=name, span="", file="FingerprintingExpressionVisitor.cs"];
m9_161 [label=heartbeats, span="", file="FingerprintingExpressionVisitor.cs"];
m9_162 [label=string, span="", file="FingerprintingExpressionVisitor.cs"];
m9_163 [label=string, span="", file="FingerprintingExpressionVisitor.cs"];
m10_10 [label="Entry HangFire.States.EnqueuedState.Handler.Handler()", span="77-77", cluster="HangFire.States.EnqueuedState.Handler.Handler()", file="GlobalStateHandlers.cs"];
m10_6 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="GlobalStateHandlers.cs"];
m10_8 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="GlobalStateHandlers.cs"];
m10_0 [label="Entry HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="23-23", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs"];
m10_1 [label="Handlers = new List<StateHandler>()", span="25-25", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", color=red, community=0, file="GlobalStateHandlers.cs"];
m10_2 [label="Handlers.Add(new SucceededState.Handler())", span="26-26", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs"];
m10_3 [label="Handlers.Add(new ScheduledState.Handler())", span="27-27", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs"];
m10_4 [label="Handlers.Add(new EnqueuedState.Handler())", span="28-28", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs"];
m10_5 [label="Exit HangFire.GlobalStateHandlers.GlobalStateHandlers()", span="23-23", cluster="HangFire.GlobalStateHandlers.GlobalStateHandlers()", file="GlobalStateHandlers.cs"];
m10_7 [label="Entry HangFire.States.SucceededState.Handler.Handler()", span="52-52", cluster="HangFire.States.SucceededState.Handler.Handler()", file="GlobalStateHandlers.cs"];
m10_9 [label="Entry HangFire.States.ScheduledState.Handler.Handler()", span="52-52", cluster="HangFire.States.ScheduledState.Handler.Handler()", file="GlobalStateHandlers.cs"];
m11_101 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="HashCodeCombiner.cs"];
m11_256 [label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="353-353", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="HashCodeCombiner.cs"];
m11_257 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="HashCodeCombiner.cs"];
m11_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HashCodeCombiner.cs"];
m11_105 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="HashCodeCombiner.cs"];
m11_106 [label="string query = @''delete from HangFire.[Set] where [Key] = @key and Value = @value''", span="185-185", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="HashCodeCombiner.cs"];
m11_108 [label="QueueCommand(x => x.Execute(\r\n                query,\r\n                new { key, value }))", span="188-190", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="HashCodeCombiner.cs"];
m11_107 [label="AcquireSetLock()", span="187-187", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="HashCodeCombiner.cs"];
m11_109 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="HashCodeCombiner.cs"];
m11_49 [label="Entry Hangfire.States.IState.SerializeData()", span="27-27", cluster="Hangfire.States.IState.SerializeData()", file="HashCodeCombiner.cs"];
m11_10 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="52-52", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="HashCodeCombiner.cs"];
m11_11 [label="var transaction = CreateTransaction(_isolationLevel)", span="54-54", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="HashCodeCombiner.cs"];
m11_12 [label="_connection.EnlistTransaction(Transaction.Current)", span="56-56", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="HashCodeCombiner.cs"];
m11_17 [label="transaction.Complete()", span="71-71", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="HashCodeCombiner.cs"];
m11_13 [label="_lockedResources.Count > 0", span="58-58", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="HashCodeCombiner.cs"];
m11_14 [label="_connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }))", span="60-63", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="HashCodeCombiner.cs"];
m11_15 [label=_commandQueue, span="66-66", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="HashCodeCombiner.cs"];
m11_16 [label="command(_connection)", span="68-68", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="HashCodeCombiner.cs"];
m11_18 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="52-52", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="HashCodeCombiner.cs"];
m11_69 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="135-135", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="HashCodeCombiner.cs"];
m11_70 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="137-139", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="HashCodeCombiner.cs"];
m11_71 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="135-135", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="HashCodeCombiner.cs"];
m11_229 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="HashCodeCombiner.cs"];
m11_230 [label="key == null", span="321-321", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="HashCodeCombiner.cs"];
m11_234 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="327-327", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="HashCodeCombiner.cs"];
m11_231 [label="throw new ArgumentNullException(''key'');", span="321-321", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="HashCodeCombiner.cs"];
m11_232 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="323-324", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="HashCodeCombiner.cs"];
m11_233 [label="AcquireSetLock()", span="326-326", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="HashCodeCombiner.cs"];
m11_235 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="HashCodeCombiner.cs"];
m11_63 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="HashCodeCombiner.cs"];
m11_239 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="HashCodeCombiner.cs"];
m11_240 [label="key == null", span="332-332", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="HashCodeCombiner.cs"];
m11_244 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="338-338", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="HashCodeCombiner.cs"];
m11_241 [label="throw new ArgumentNullException(''key'');", span="332-332", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="HashCodeCombiner.cs"];
m11_242 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="334-335", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="HashCodeCombiner.cs"];
m11_243 [label="AcquireListLock()", span="337-337", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="HashCodeCombiner.cs"];
m11_245 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="HashCodeCombiner.cs"];
m11_81 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="HashCodeCombiner.cs"];
m11_82 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="151-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="HashCodeCombiner.cs"];
m11_83 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="HashCodeCombiner.cs"];
m11_254 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="HashCodeCombiner.cs"];
m11_255 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="361-361", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="HashCodeCombiner.cs"];
m11_260 [label="_lockedResources.Add(resource)", span="363-363", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="HashCodeCombiner.cs"];
m11_261 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="361-361", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="HashCodeCombiner.cs"];
m11_199 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_200 [label="key == null", span="288-288", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_204 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="294-294", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_201 [label="throw new ArgumentNullException(''key'');", span="288-288", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_202 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="290-291", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_203 [label="AcquireSetLock()", span="293-293", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_205 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_0 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="HashCodeCombiner.cs"];
m11_1 [label="connection == null", span="44-44", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="HashCodeCombiner.cs"];
m11_3 [label="queueProviders == null", span="45-45", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="HashCodeCombiner.cs"];
m11_5 [label="_connection = connection", span="47-47", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="HashCodeCombiner.cs"];
m11_6 [label="_isolationLevel = isolationLevel", span="48-48", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="HashCodeCombiner.cs"];
m11_7 [label="_queueProviders = queueProviders", span="49-49", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="HashCodeCombiner.cs"];
m11_2 [label="throw new ArgumentNullException(''connection'');", span="44-44", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="HashCodeCombiner.cs"];
m11_4 [label="throw new ArgumentNullException(''queueProviders'');", span="45-45", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="HashCodeCombiner.cs"];
m11_8 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="HashCodeCombiner.cs"];
m11_145 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="356-356", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="HashCodeCombiner.cs"];
m11_258 [label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="358-358", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="HashCodeCombiner.cs"];
m11_259 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="356-356", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="HashCodeCombiner.cs"];
m11_251 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="HashCodeCombiner.cs"];
m11_42 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="89-89", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="HashCodeCombiner.cs"];
m11_43 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="91-94", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="HashCodeCombiner.cs"];
m11_44 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="96-106", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="HashCodeCombiner.cs"];
m11_45 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="89-89", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="HashCodeCombiner.cs"];
m11_209 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_210 [label="key == null", span="299-299", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_214 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="305-305", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_211 [label="throw new ArgumentNullException(''key'');", span="299-299", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_212 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="301-302", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_213 [label="AcquireListLock()", span="304-304", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_215 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_51 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="109-109", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="HashCodeCombiner.cs"];
m11_52 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="111-113", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="HashCodeCombiner.cs"];
m11_53 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="115-124", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="HashCodeCombiner.cs"];
m11_54 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="109-109", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="HashCodeCombiner.cs"];
m11_68 [label="Entry Hangfire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", span="24-24", cluster="Hangfire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", file="HashCodeCombiner.cs"];
m11_87 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_88 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="158-160", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_89 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_179 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="HashCodeCombiner.cs"];
m11_180 [label="key == null", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="HashCodeCombiner.cs"];
m11_184 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="272-272", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="HashCodeCombiner.cs"];
m11_181 [label="throw new ArgumentNullException(''key'');", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="HashCodeCombiner.cs"];
m11_182 [label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="269-269", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="HashCodeCombiner.cs"];
m11_183 [label="AcquireSetLock()", span="271-271", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="HashCodeCombiner.cs"];
m11_185 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="HashCodeCombiner.cs"];
m11_93 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="163-163", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="HashCodeCombiner.cs"];
m11_94 [label="AddToSet(key, value, 0.0)", span="165-165", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="HashCodeCombiner.cs"];
m11_95 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="163-163", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="HashCodeCombiner.cs"];
m11_31 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="HashCodeCombiner.cs"];
m11_249 [label="_commandQueue.Enqueue(action)", span="343-343", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="HashCodeCombiner.cs"];
m11_250 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="HashCodeCombiner.cs"];
m11_58 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="HashCodeCombiner.cs"];
m11_59 [label="var provider = _queueProviders.GetProvider(queue)", span="129-129", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="HashCodeCombiner.cs"];
m11_61 [label="QueueCommand(_ => persistentQueue.Enqueue(queue, jobId))", span="132-132", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="HashCodeCombiner.cs"];
m11_60 [label="var persistentQueue = provider.GetJobQueue(_connection)", span="130-130", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="HashCodeCombiner.cs"];
m11_62 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="HashCodeCombiner.cs"];
m11_75 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="142-142", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_76 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="144-146", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_77 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="142-142", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_20 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="HashCodeCombiner.cs"];
m11_23 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="HashCodeCombiner.cs"];
m11_136 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="224-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="HashCodeCombiner.cs"];
m11_137 [label="key == null", span="226-226", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="HashCodeCombiner.cs"];
m11_139 [label="keyValuePairs == null", span="227-227", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="HashCodeCombiner.cs"];
m11_143 [label="QueueCommand(x => x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value })))", span="237-239", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="HashCodeCombiner.cs"];
m11_138 [label="throw new ArgumentNullException(''key'');", span="226-226", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="HashCodeCombiner.cs"];
m11_140 [label="throw new ArgumentNullException(''keyValuePairs'');", span="227-227", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="HashCodeCombiner.cs"];
m11_141 [label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="229-234", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="HashCodeCombiner.cs"];
m11_142 [label="AcquireHashLock()", span="236-236", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="HashCodeCombiner.cs"];
m11_144 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="224-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="HashCodeCombiner.cs"];
m11_265 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="HashCodeCombiner.cs"];
m11_96 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="168-168", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="HashCodeCombiner.cs"];
m11_97 [label="string addSql = @''\r\n;merge HangFire.[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="170-175", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="HashCodeCombiner.cs"];
m11_99 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="178-180", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="HashCodeCombiner.cs"];
m11_98 [label="AcquireSetLock()", span="177-177", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="HashCodeCombiner.cs"];
m11_100 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="168-168", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="HashCodeCombiner.cs"];
m11_153 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="HashCodeCombiner.cs"];
m11_154 [label="key == null", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="HashCodeCombiner.cs"];
m11_158 [label="QueueCommand(x => x.Execute(query, new { key }))", span="249-249", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="HashCodeCombiner.cs"];
m11_155 [label="throw new ArgumentNullException(''key'');", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="HashCodeCombiner.cs"];
m11_156 [label="string query = @''delete from HangFire.Hash where [Key] = @key''", span="246-246", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="HashCodeCombiner.cs"];
m11_157 [label="AcquireHashLock()", span="248-248", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="HashCodeCombiner.cs"];
m11_159 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="HashCodeCombiner.cs"];
m11_24 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="HashCodeCombiner.cs"];
m11_35 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_36 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="82-82", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="HashCodeCombiner.cs"];
m11_37 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="84-86", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="HashCodeCombiner.cs"];
m11_38 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="82-82", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="HashCodeCombiner.cs"];
m11_19 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", span="366-366", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="HashCodeCombiner.cs"];
m11_263 [label="return isolationLevel != null\r\n                ? new TransactionScope(TransactionScopeOption.Required,\r\n                    new TransactionOptions { IsolationLevel = isolationLevel.Value })\r\n                : new TransactionScope();", span="368-371", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="HashCodeCombiner.cs"];
m11_264 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", span="366-366", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="HashCodeCombiner.cs"];
m11_189 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_190 [label="key == null", span="277-277", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_194 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="283-283", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_191 [label="throw new ArgumentNullException(''key'');", span="277-277", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_192 [label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="279-280", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_193 [label="AcquireHashLock()", span="282-282", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_195 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_50 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="HashCodeCombiner.cs"];
m11_266 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="HashCodeCombiner.cs"];
m11_28 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="75-75", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_29 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="77-79", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_30 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="75-75", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="HashCodeCombiner.cs"];
m11_246 [label="Entry lambda expression", span="338-338", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_25 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_26 [label="new { resource = x }", span="63-63", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_27 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_33 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="77-79", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_32 [label="Entry lambda expression", span="77-79", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_34 [label="Exit lambda expression", span="77-79", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_40 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="84-86", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_39 [label="Entry lambda expression", span="84-86", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_41 [label="Exit lambda expression", span="84-86", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_47 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="96-106", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_46 [label="Entry lambda expression", span="96-106", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_48 [label="Exit lambda expression", span="96-106", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_56 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="115-124", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_55 [label="Entry lambda expression", span="115-124", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_57 [label="Exit lambda expression", span="115-124", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_66 [label="persistentQueue.Enqueue(queue, jobId)", span="132-132", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_65 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_67 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_73 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="137-139", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_72 [label="Entry lambda expression", span="137-139", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_74 [label="Exit lambda expression", span="137-139", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_79 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="144-146", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_78 [label="Entry lambda expression", span="144-146", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_80 [label="Exit lambda expression", span="144-146", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_85 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="151-153", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_84 [label="Entry lambda expression", span="151-153", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_86 [label="Exit lambda expression", span="151-153", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_91 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="158-160", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_90 [label="Entry lambda expression", span="158-160", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_92 [label="Exit lambda expression", span="158-160", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_103 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="178-180", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_102 [label="Entry lambda expression", span="178-180", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_104 [label="Exit lambda expression", span="178-180", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_111 [label="x.Execute(\r\n                query,\r\n                new { key, value })", span="188-190", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_110 [label="Entry lambda expression", span="188-190", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_112 [label="Exit lambda expression", span="188-190", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_119 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value })", span="196-198", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_118 [label="Entry lambda expression", span="196-198", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_120 [label="Exit lambda expression", span="196-198", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_126 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="204-206", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_125 [label="Entry lambda expression", span="204-206", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_127 [label="Exit lambda expression", span="204-206", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_134 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="219-221", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_133 [label="Entry lambda expression", span="219-221", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_135 [label="Exit lambda expression", span="219-221", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_148 [label="x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value }))", span="237-239", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_151 [label="new { key = key, field = y.Key, value = y.Value }", span="239-239", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_147 [label="Entry lambda expression", span="237-239", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_149 [label="Exit lambda expression", span="237-239", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_150 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_152 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_161 [label="x.Execute(query, new { key })", span="249-249", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_160 [label="Entry lambda expression", span="249-249", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_162 [label="Exit lambda expression", span="249-249", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_173 [label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="262-262", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_177 [label="new { key = key, value = value }", span="262-262", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_172 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_174 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_176 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_178 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_187 [label="x.Execute(query, new { key = key })", span="272-272", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_186 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_188 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_197 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="283-283", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_196 [label="Entry lambda expression", span="283-283", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_198 [label="Exit lambda expression", span="283-283", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_207 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="294-294", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_206 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_208 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_217 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="305-305", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_216 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_218 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_227 [label="x.Execute(query, new { key = key })", span="316-316", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_226 [label="Entry lambda expression", span="316-316", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_228 [label="Exit lambda expression", span="316-316", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_237 [label="x.Execute(query, new { key = key })", span="327-327", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_236 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_238 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_247 [label="x.Execute(query, new { key = key })", span="338-338", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_248 [label="Exit lambda expression", span="338-338", cluster="lambda expression", file="HashCodeCombiner.cs"];
m11_163 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="HashCodeCombiner.cs"];
m11_164 [label="key == null", span="254-254", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="HashCodeCombiner.cs"];
m11_166 [label="items == null", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="HashCodeCombiner.cs"];
m11_170 [label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="262-262", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="HashCodeCombiner.cs"];
m11_165 [label="throw new ArgumentNullException(''key'');", span="254-254", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="HashCodeCombiner.cs"];
m11_167 [label="throw new ArgumentNullException(''items'');", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="HashCodeCombiner.cs"];
m11_168 [label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="257-259", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="HashCodeCombiner.cs"];
m11_169 [label="AcquireSetLock()", span="261-261", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="HashCodeCombiner.cs"];
m11_171 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="HashCodeCombiner.cs"];
m11_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="HashCodeCombiner.cs"];
m11_262 [label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="HashCodeCombiner.cs"];
m11_175 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="HashCodeCombiner.cs"];
m11_22 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="HashCodeCombiner.cs"];
m11_64 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="HashCodeCombiner.cs"];
m11_146 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="HashCodeCombiner.cs"];
m11_121 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="HashCodeCombiner.cs"];
m11_122 [label="AcquireListLock()", span="203-203", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="HashCodeCombiner.cs"];
m11_123 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="204-206", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="HashCodeCombiner.cs"];
m11_124 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="HashCodeCombiner.cs"];
m11_117 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="HashCodeCombiner.cs"];
m11_252 [label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="348-348", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="HashCodeCombiner.cs"];
m11_253 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="HashCodeCombiner.cs"];
m11_219 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="HashCodeCombiner.cs"];
m11_220 [label="key == null", span="310-310", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="HashCodeCombiner.cs"];
m11_224 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="316-316", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="HashCodeCombiner.cs"];
m11_221 [label="throw new ArgumentNullException(''key'');", span="310-310", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="HashCodeCombiner.cs"];
m11_222 [label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="312-313", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="HashCodeCombiner.cs"];
m11_223 [label="AcquireHashLock()", span="315-315", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="HashCodeCombiner.cs"];
m11_225 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="HashCodeCombiner.cs"];
m11_113 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="HashCodeCombiner.cs"];
m11_114 [label="AcquireListLock()", span="195-195", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="HashCodeCombiner.cs"];
m11_115 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="196-198", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="HashCodeCombiner.cs"];
m11_116 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="HashCodeCombiner.cs"];
m11_128 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="HashCodeCombiner.cs"];
m11_129 [label="string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="211-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="HashCodeCombiner.cs"];
m11_131 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="219-221", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="HashCodeCombiner.cs"];
m11_130 [label="AcquireListLock()", span="218-218", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="HashCodeCombiner.cs"];
m11_132 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="HashCodeCombiner.cs"];
m11_267 [label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="HashCodeCombiner.cs"];
m11_268 [label=string, span="", file="HashCodeCombiner.cs"];
m11_269 [label="System.TimeSpan", span="", file="HashCodeCombiner.cs"];
m11_270 [label=string, span="", file="HashCodeCombiner.cs"];
m11_271 [label=string, span="", file="HashCodeCombiner.cs"];
m11_272 [label="Hangfire.States.IState", span="", file="HashCodeCombiner.cs"];
m11_273 [label=addAndSetStateSql, span="", file="HashCodeCombiner.cs"];
m11_274 [label=string, span="", file="HashCodeCombiner.cs"];
m11_275 [label="Hangfire.States.IState", span="", file="HashCodeCombiner.cs"];
m11_276 [label=addStateSql, span="", file="HashCodeCombiner.cs"];
m11_277 [label=string, span="", file="HashCodeCombiner.cs"];
m11_278 [label=string, span="", file="HashCodeCombiner.cs"];
m11_279 [label=persistentQueue, span="", file="HashCodeCombiner.cs"];
m11_280 [label=string, span="", file="HashCodeCombiner.cs"];
m11_281 [label=string, span="", file="HashCodeCombiner.cs"];
m11_282 [label="System.TimeSpan", span="", file="HashCodeCombiner.cs"];
m11_283 [label=string, span="", file="HashCodeCombiner.cs"];
m11_284 [label=string, span="", file="HashCodeCombiner.cs"];
m11_285 [label="System.TimeSpan", span="", file="HashCodeCombiner.cs"];
m11_286 [label=string, span="", file="HashCodeCombiner.cs"];
m11_287 [label=string, span="", file="HashCodeCombiner.cs"];
m11_288 [label=double, span="", file="HashCodeCombiner.cs"];
m11_289 [label=addSql, span="", file="HashCodeCombiner.cs"];
m11_290 [label=string, span="", file="HashCodeCombiner.cs"];
m11_291 [label=string, span="", file="HashCodeCombiner.cs"];
m11_292 [label=query, span="", file="HashCodeCombiner.cs"];
m11_293 [label=string, span="", file="HashCodeCombiner.cs"];
m11_294 [label=string, span="", file="HashCodeCombiner.cs"];
m11_295 [label=string, span="", file="HashCodeCombiner.cs"];
m11_296 [label=string, span="", file="HashCodeCombiner.cs"];
m11_297 [label=string, span="", file="HashCodeCombiner.cs"];
m11_298 [label=int, span="", file="HashCodeCombiner.cs"];
m11_299 [label=int, span="", file="HashCodeCombiner.cs"];
m11_300 [label=trimSql, span="", file="HashCodeCombiner.cs"];
m11_301 [label=string, span="", file="HashCodeCombiner.cs"];
m11_302 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="HashCodeCombiner.cs"];
m11_303 [label=sql, span="", file="HashCodeCombiner.cs"];
m11_304 [label=string, span="", file="HashCodeCombiner.cs"];
m11_305 [label=query, span="", file="HashCodeCombiner.cs"];
m11_306 [label=string, span="", file="HashCodeCombiner.cs"];
m11_307 [label="System.Collections.Generic.IList<string>", span="", file="HashCodeCombiner.cs"];
m11_308 [label=query, span="", file="HashCodeCombiner.cs"];
m11_309 [label=string, span="", file="HashCodeCombiner.cs"];
m11_310 [label=query, span="", file="HashCodeCombiner.cs"];
m11_311 [label=string, span="", file="HashCodeCombiner.cs"];
m11_312 [label="System.TimeSpan", span="", file="HashCodeCombiner.cs"];
m11_313 [label=query, span="", file="HashCodeCombiner.cs"];
m11_314 [label=string, span="", file="HashCodeCombiner.cs"];
m11_315 [label="System.TimeSpan", span="", file="HashCodeCombiner.cs"];
m11_316 [label=query, span="", file="HashCodeCombiner.cs"];
m11_317 [label=string, span="", file="HashCodeCombiner.cs"];
m11_318 [label="System.TimeSpan", span="", file="HashCodeCombiner.cs"];
m11_319 [label=query, span="", file="HashCodeCombiner.cs"];
m11_320 [label=string, span="", file="HashCodeCombiner.cs"];
m11_321 [label=query, span="", file="HashCodeCombiner.cs"];
m11_322 [label=string, span="", file="HashCodeCombiner.cs"];
m11_323 [label=query, span="", file="HashCodeCombiner.cs"];
m11_324 [label=string, span="", file="HashCodeCombiner.cs"];
m11_325 [label=query, span="", file="HashCodeCombiner.cs"];
m13_14 [label="Entry System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Property(System.Linq.Expressions.Expression, string, params System.Linq.Expressions.Expression[])", file="HoistingExpressionVisitor.cs"];
m13_9 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="HoistingExpressionVisitor.cs"];
m13_0 [label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", span="17-17", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", file="HoistingExpressionVisitor.cs"];
m13_1 [label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", span="17-17", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.HoistingExpressionVisitor()", file="HoistingExpressionVisitor.cs"];
m13_13 [label="Entry System.Linq.Expressions.Expression.Constant(object)", span="0-0", cluster="System.Linq.Expressions.Expression.Constant(object)", file="HoistingExpressionVisitor.cs"];
m13_2 [label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", span="21-21", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m13_3 [label="var visitor = new HoistingExpressionVisitor<TIn, TOut>()", span="25-25", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m13_4 [label="var rewrittenBodyExpr = visitor.Visit(expr.Body)", span="26-26", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m13_5 [label="var rewrittenLambdaExpr = Expression.Lambda<Hoisted<TIn, TOut>>(rewrittenBodyExpr, expr.Parameters[0], _hoistedConstantsParamExpr)", span="27-27", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m13_6 [label="return rewrittenLambdaExpr;", span="28-28", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m13_7 [label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", span="21-21", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.Hoist(System.Linq.Expressions.Expression<System.Func<TIn, TOut>>)", file="HoistingExpressionVisitor.cs"];
m13_10 [label="Entry HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", span="31-31", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="HoistingExpressionVisitor.cs"];
m13_11 [label="return Expression.Convert(Expression.Property(_hoistedConstantsParamExpr, ''Item'', Expression.Constant(_numConstantsProcessed++)), node.Type);", span="34-34", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="HoistingExpressionVisitor.cs"];
m13_12 [label="Exit HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", span="31-31", cluster="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>.VisitConstant(System.Linq.Expressions.ConstantExpression)", file="HoistingExpressionVisitor.cs"];
m13_15 [label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="HoistingExpressionVisitor.cs"];
m13_8 [label="Entry System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)", span="0-0", cluster="System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)", file="HoistingExpressionVisitor.cs"];
m13_16 [label="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>", span="", file="HoistingExpressionVisitor.cs"];
m14_3 [label="Entry HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.Equals(object)", span="29-29", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.Equals(object)", file="IndexExpressionFingerprint.cs"];
m14_4 [label="IndexExpressionFingerprint other = obj as IndexExpressionFingerprint", span="31-31", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.Equals(object)", file="IndexExpressionFingerprint.cs"];
m14_5 [label="return (other != null)\r\n                   && Equals(this.Indexer, other.Indexer)\r\n                   && this.Equals(other);", span="32-34", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.Equals(object)", file="IndexExpressionFingerprint.cs"];
m14_6 [label="Exit HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.Equals(object)", span="29-29", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.Equals(object)", file="IndexExpressionFingerprint.cs"];
m14_9 [label="Entry HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="IndexExpressionFingerprint.cs"];
m14_10 [label="combiner.AddObject(Indexer)", span="39-39", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="IndexExpressionFingerprint.cs"];
m14_11 [label="base.AddToHashCodeCombiner(combiner)", span="40-40", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="IndexExpressionFingerprint.cs"];
m14_12 [label="Exit HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="IndexExpressionFingerprint.cs"];
m14_13 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="IndexExpressionFingerprint.cs"];
m14_8 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="IndexExpressionFingerprint.cs"];
m14_7 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="IndexExpressionFingerprint.cs"];
m14_14 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="IndexExpressionFingerprint.cs"];
m14_0 [label="Entry HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.IndexExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.PropertyInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.IndexExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.PropertyInfo)", file="IndexExpressionFingerprint.cs"];
m14_1 [label="Indexer = indexer", span="23-23", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.IndexExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.PropertyInfo)", file="IndexExpressionFingerprint.cs"];
m14_2 [label="Exit HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.IndexExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.PropertyInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint.IndexExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.PropertyInfo)", file="IndexExpressionFingerprint.cs"];
m14_15 [label="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint", span="", file="IndexExpressionFingerprint.cs"];
m15_101 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="Job.cs"];
m15_256 [label="AcquireLock(String.Format(''Hangfire:Set:Lock''))", span="353-353", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="Job.cs"];
m15_257 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", span="351-351", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireSetLock()", file="Job.cs"];
m15_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Job.cs"];
m15_105 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="Job.cs"];
m15_106 [label="string query = @''delete from HangFire.[Set] where [Key] = @key and Value = @value''", span="185-185", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="Job.cs"];
m15_108 [label="QueueCommand(x => x.Execute(\r\n                query,\r\n                new { key, value }))", span="188-190", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="Job.cs"];
m15_107 [label="AcquireSetLock()", span="187-187", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="Job.cs"];
m15_109 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", span="183-183", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromSet(string, string)", file="Job.cs"];
m15_49 [label="Entry Hangfire.States.IState.SerializeData()", span="27-27", cluster="Hangfire.States.IState.SerializeData()", file="Job.cs"];
m15_10 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="52-52", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="Job.cs"];
m15_11 [label="var transaction = CreateTransaction(_isolationLevel)", span="54-54", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="Job.cs"];
m15_12 [label="_connection.EnlistTransaction(Transaction.Current)", span="56-56", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="Job.cs"];
m15_17 [label="transaction.Complete()", span="71-71", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="Job.cs"];
m15_13 [label="_lockedResources.Count > 0", span="58-58", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="Job.cs"];
m15_14 [label="_connection.Execute(\r\n                        ''set nocount on;'' +\r\n                        ''exec sp_getapplock @Resource=@resource, @LockMode=N'Exclusive''',\r\n                        _lockedResources.Select(x => new { resource = x }))", span="60-63", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="Job.cs"];
m15_15 [label=_commandQueue, span="66-66", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="Job.cs"];
m15_16 [label="command(_connection)", span="68-68", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="Job.cs"];
m15_18 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", span="52-52", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.Commit()", file="Job.cs"];
m15_69 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="135-135", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="Job.cs"];
m15_70 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="137-139", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="Job.cs"];
m15_71 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", span="135-135", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string)", file="Job.cs"];
m15_229 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="Job.cs"];
m15_230 [label="key == null", span="321-321", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="Job.cs"];
m15_234 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="327-327", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="Job.cs"];
m15_231 [label="throw new ArgumentNullException(''key'');", span="321-321", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="Job.cs"];
m15_232 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = null where [Key] = @key''", span="323-324", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="Job.cs"];
m15_233 [label="AcquireSetLock()", span="326-326", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="Job.cs"];
m15_235 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", span="319-319", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistSet(string)", file="Job.cs"];
m15_63 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", span="53-53", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.GetProvider(string)", file="Job.cs"];
m15_239 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="Job.cs"];
m15_240 [label="key == null", span="332-332", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="Job.cs"];
m15_244 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="338-338", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="Job.cs"];
m15_241 [label="throw new ArgumentNullException(''key'');", span="332-332", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="Job.cs"];
m15_242 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = null where [Key] = @key''", span="334-335", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="Job.cs"];
m15_243 [label="AcquireListLock()", span="337-337", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="Job.cs"];
m15_245 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", span="330-330", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistList(string)", file="Job.cs"];
m15_81 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="Job.cs"];
m15_82 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="151-153", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="Job.cs"];
m15_83 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", span="149-149", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string)", file="Job.cs"];
m15_254 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="Job.cs"];
m15_255 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="361-361", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="Job.cs"];
m15_260 [label="_lockedResources.Add(resource)", span="363-363", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="Job.cs"];
m15_261 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", span="361-361", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireLock(string)", file="Job.cs"];
m15_199 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="Job.cs"];
m15_200 [label="key == null", span="288-288", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="Job.cs"];
m15_204 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="294-294", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="Job.cs"];
m15_201 [label="throw new ArgumentNullException(''key'');", span="288-288", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="Job.cs"];
m15_202 [label="string query = @''\r\nupdate HangFire.[Set] set ExpireAt = @expireAt where [Key] = @key''", span="290-291", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="Job.cs"];
m15_203 [label="AcquireSetLock()", span="293-293", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="Job.cs"];
m15_205 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", span="286-286", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireSet(string, System.TimeSpan)", file="Job.cs"];
m15_0 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="Job.cs"];
m15_1 [label="connection == null", span="44-44", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="Job.cs"];
m15_3 [label="queueProviders == null", span="45-45", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="Job.cs"];
m15_5 [label="_connection = connection", span="47-47", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="Job.cs"];
m15_6 [label="_isolationLevel = isolationLevel", span="48-48", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="Job.cs"];
m15_7 [label="_queueProviders = queueProviders", span="49-49", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="Job.cs"];
m15_2 [label="throw new ArgumentNullException(''connection'');", span="44-44", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="Job.cs"];
m15_4 [label="throw new ArgumentNullException(''queueProviders'');", span="45-45", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="Job.cs"];
m15_8 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", span="39-39", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection, IsolationLevel?, Hangfire.SqlServer.PersistentJobQueueProviderCollection)", file="Job.cs"];
m15_145 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="356-356", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="Job.cs"];
m15_258 [label="AcquireLock(String.Format(''Hangfire:Hash:Lock''))", span="358-358", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="Job.cs"];
m15_259 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", span="356-356", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireHashLock()", file="Job.cs"];
m15_251 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="Job.cs"];
m15_42 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="89-89", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="Job.cs"];
m15_43 [label="string addAndSetStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data);\r\nupdate HangFire.Job set StateId = SCOPE_IDENTITY(), StateName = @name where Id = @id;''", span="91-94", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="Job.cs"];
m15_44 [label="QueueCommand(x => x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                }))", span="96-106", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", color=red, community=0, file="Job.cs"];
m15_45 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", span="89-89", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetJobState(string, Hangfire.States.IState)", file="Job.cs"];
m15_209 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="Job.cs"];
m15_210 [label="key == null", span="299-299", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="Job.cs"];
m15_214 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="305-305", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="Job.cs"];
m15_211 [label="throw new ArgumentNullException(''key'');", span="299-299", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="Job.cs"];
m15_212 [label="string query = @''\r\nupdate HangFire.[List] set ExpireAt = @expireAt where [Key] = @key''", span="301-302", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="Job.cs"];
m15_213 [label="AcquireListLock()", span="304-304", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="Job.cs"];
m15_215 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", span="297-297", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireList(string, System.TimeSpan)", file="Job.cs"];
m15_51 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="109-109", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="Job.cs"];
m15_52 [label="string addStateSql = @''\r\ninsert into HangFire.State (JobId, Name, Reason, CreatedAt, Data)\r\nvalues (@jobId, @name, @reason, @createdAt, @data)''", span="111-113", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="Job.cs"];
m15_53 [label="QueueCommand(x => x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                }))", span="115-124", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="Job.cs"];
m15_54 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", span="109-109", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddJobState(string, Hangfire.States.IState)", file="Job.cs"];
m15_68 [label="Entry Hangfire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", span="24-24", cluster="Hangfire.SqlServer.IPersistentJobQueue.Enqueue(string, string)", file="Job.cs"];
m15_87 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="Job.cs"];
m15_88 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="158-160", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="Job.cs"];
m15_89 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", span="156-156", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.DecrementCounter(string, System.TimeSpan)", file="Job.cs"];
m15_179 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="Job.cs"];
m15_180 [label="key == null", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="Job.cs"];
m15_184 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="272-272", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="Job.cs"];
m15_181 [label="throw new ArgumentNullException(''key'');", span="267-267", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="Job.cs"];
m15_182 [label="string query = @''delete from HangFire.[Set] where [Key] = @key''", span="269-269", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="Job.cs"];
m15_183 [label="AcquireSetLock()", span="271-271", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="Job.cs"];
m15_185 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", span="265-265", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveSet(string)", file="Job.cs"];
m15_93 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="163-163", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="Job.cs"];
m15_94 [label="AddToSet(key, value, 0.0)", span="165-165", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="Job.cs"];
m15_95 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", span="163-163", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string)", file="Job.cs"];
m15_31 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="Job.cs"];
m15_249 [label="_commandQueue.Enqueue(action)", span="343-343", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="Job.cs"];
m15_250 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", span="341-341", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.QueueCommand(System.Action<SqlConnection>)", file="Job.cs"];
m15_58 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="Job.cs"];
m15_59 [label="var provider = _queueProviders.GetProvider(queue)", span="129-129", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="Job.cs"];
m15_61 [label="QueueCommand(_ => persistentQueue.Enqueue(queue, jobId))", span="132-132", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="Job.cs"];
m15_60 [label="var persistentQueue = provider.GetJobQueue(_connection)", span="130-130", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="Job.cs"];
m15_62 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", span="127-127", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToQueue(string, string)", file="Job.cs"];
m15_75 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="142-142", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="Job.cs"];
m15_76 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="144-146", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="Job.cs"];
m15_77 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="142-142", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="Job.cs"];
m15_20 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="Job.cs"];
m15_23 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="Job.cs"];
m15_136 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="224-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Job.cs"];
m15_137 [label="key == null", span="226-226", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Job.cs"];
m15_139 [label="keyValuePairs == null", span="227-227", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Job.cs"];
m15_143 [label="QueueCommand(x => x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value })))", span="237-239", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Job.cs"];
m15_138 [label="throw new ArgumentNullException(''key'');", span="226-226", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Job.cs"];
m15_140 [label="throw new ArgumentNullException(''keyValuePairs'');", span="227-227", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Job.cs"];
m15_141 [label="string sql = @''\r\n;merge HangFire.Hash with (holdlock) as Target\r\nusing (VALUES (@key, @field, @value)) as Source ([Key], Field, Value)\r\non Target.[Key] = Source.[Key] and Target.Field = Source.Field\r\nwhen matched then update set Value = Source.Value\r\nwhen not matched then insert ([Key], Field, Value) values (Source.[Key], Source.Field, Source.Value);''", span="229-234", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Job.cs"];
m15_142 [label="AcquireHashLock()", span="236-236", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Job.cs"];
m15_144 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="224-224", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", file="Job.cs"];
m15_265 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="Job.cs"];
m15_96 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="168-168", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="Job.cs"];
m15_97 [label="string addSql = @''\r\n;merge HangFire.[Set] with (holdlock) as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="170-175", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="Job.cs"];
m15_99 [label="QueueCommand(x => x.Execute(\r\n                addSql,\r\n                new { key, value, score }))", span="178-180", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="Job.cs"];
m15_98 [label="AcquireSetLock()", span="177-177", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="Job.cs"];
m15_100 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", span="168-168", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddToSet(string, string, double)", file="Job.cs"];
m15_153 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="Job.cs"];
m15_154 [label="key == null", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="Job.cs"];
m15_158 [label="QueueCommand(x => x.Execute(query, new { key }))", span="249-249", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="Job.cs"];
m15_155 [label="throw new ArgumentNullException(''key'');", span="244-244", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="Job.cs"];
m15_156 [label="string query = @''delete from HangFire.Hash where [Key] = @key''", span="246-246", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="Job.cs"];
m15_157 [label="AcquireHashLock()", span="248-248", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="Job.cs"];
m15_159 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", span="242-242", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveHash(string)", file="Job.cs"];
m15_24 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="Job.cs"];
m15_35 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="Job.cs"];
m15_36 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="82-82", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="Job.cs"];
m15_37 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="84-86", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="Job.cs"];
m15_38 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", span="82-82", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistJob(string)", file="Job.cs"];
m15_19 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", span="366-366", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="Job.cs"];
m15_263 [label="return isolationLevel != null\r\n                ? new TransactionScope(TransactionScopeOption.Required,\r\n                    new TransactionOptions { IsolationLevel = isolationLevel.Value })\r\n                : new TransactionScope();", span="368-371", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="Job.cs"];
m15_264 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", span="366-366", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.CreateTransaction(IsolationLevel?)", file="Job.cs"];
m15_189 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="Job.cs"];
m15_190 [label="key == null", span="277-277", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="Job.cs"];
m15_194 [label="QueueCommand(x => x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="283-283", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="Job.cs"];
m15_191 [label="throw new ArgumentNullException(''key'');", span="277-277", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="Job.cs"];
m15_192 [label="string query = @''\r\nupdate HangFire.[Hash] set ExpireAt = @expireAt where [Key] = @key''", span="279-280", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="Job.cs"];
m15_193 [label="AcquireHashLock()", span="282-282", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="Job.cs"];
m15_195 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", span="275-275", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireHash(string, System.TimeSpan)", file="Job.cs"];
m15_50 [label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32", cluster="Hangfire.Common.JobHelper.ToJson(object)", file="Job.cs"];
m15_266 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="Job.cs"];
m15_28 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="75-75", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="Job.cs"];
m15_29 [label="QueueCommand(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="77-79", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="Job.cs"];
m15_30 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", span="75-75", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.ExpireJob(string, System.TimeSpan)", file="Job.cs"];
m15_246 [label="Entry lambda expression", span="338-338", cluster="lambda expression", file="Job.cs"];
m15_25 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="Job.cs"];
m15_26 [label="new { resource = x }", span="63-63", cluster="lambda expression", file="Job.cs"];
m15_27 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="Job.cs"];
m15_33 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="77-79", cluster="lambda expression", file="Job.cs"];
m15_32 [label="Entry lambda expression", span="77-79", cluster="lambda expression", file="Job.cs"];
m15_34 [label="Exit lambda expression", span="77-79", cluster="lambda expression", file="Job.cs"];
m15_40 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="84-86", cluster="lambda expression", file="Job.cs"];
m15_39 [label="Entry lambda expression", span="84-86", cluster="lambda expression", file="Job.cs"];
m15_41 [label="Exit lambda expression", span="84-86", cluster="lambda expression", file="Job.cs"];
m15_47 [label="x.Execute(\r\n                addAndSetStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId,\r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow,\r\n                    data = JobHelper.ToJson(state.SerializeData()),\r\n                    id = jobId\r\n                })", span="96-106", cluster="lambda expression", color=red, community=0, file="Job.cs"];
m15_46 [label="Entry lambda expression", span="96-106", cluster="lambda expression", file="Job.cs"];
m15_48 [label="Exit lambda expression", span="96-106", cluster="lambda expression", file="Job.cs"];
m15_56 [label="x.Execute(\r\n                addStateSql,\r\n                new\r\n                {\r\n                    jobId = jobId, \r\n                    name = state.Name,\r\n                    reason = state.Reason,\r\n                    createdAt = DateTime.UtcNow, \r\n                    data = JobHelper.ToJson(state.SerializeData())\r\n                })", span="115-124", cluster="lambda expression", file="Job.cs"];
m15_55 [label="Entry lambda expression", span="115-124", cluster="lambda expression", file="Job.cs"];
m15_57 [label="Exit lambda expression", span="115-124", cluster="lambda expression", file="Job.cs"];
m15_66 [label="persistentQueue.Enqueue(queue, jobId)", span="132-132", cluster="lambda expression", file="Job.cs"];
m15_65 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="Job.cs"];
m15_67 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="Job.cs"];
m15_73 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="137-139", cluster="lambda expression", file="Job.cs"];
m15_72 [label="Entry lambda expression", span="137-139", cluster="lambda expression", file="Job.cs"];
m15_74 [label="Exit lambda expression", span="137-139", cluster="lambda expression", file="Job.cs"];
m15_79 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="144-146", cluster="lambda expression", file="Job.cs"];
m15_78 [label="Entry lambda expression", span="144-146", cluster="lambda expression", file="Job.cs"];
m15_80 [label="Exit lambda expression", span="144-146", cluster="lambda expression", file="Job.cs"];
m15_85 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="151-153", cluster="lambda expression", file="Job.cs"];
m15_84 [label="Entry lambda expression", span="151-153", cluster="lambda expression", file="Job.cs"];
m15_86 [label="Exit lambda expression", span="151-153", cluster="lambda expression", file="Job.cs"];
m15_91 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="158-160", cluster="lambda expression", file="Job.cs"];
m15_90 [label="Entry lambda expression", span="158-160", cluster="lambda expression", file="Job.cs"];
m15_92 [label="Exit lambda expression", span="158-160", cluster="lambda expression", file="Job.cs"];
m15_103 [label="x.Execute(\r\n                addSql,\r\n                new { key, value, score })", span="178-180", cluster="lambda expression", file="Job.cs"];
m15_102 [label="Entry lambda expression", span="178-180", cluster="lambda expression", file="Job.cs"];
m15_104 [label="Exit lambda expression", span="178-180", cluster="lambda expression", file="Job.cs"];
m15_111 [label="x.Execute(\r\n                query,\r\n                new { key, value })", span="188-190", cluster="lambda expression", file="Job.cs"];
m15_110 [label="Entry lambda expression", span="188-190", cluster="lambda expression", file="Job.cs"];
m15_112 [label="Exit lambda expression", span="188-190", cluster="lambda expression", file="Job.cs"];
m15_119 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value })", span="196-198", cluster="lambda expression", file="Job.cs"];
m15_118 [label="Entry lambda expression", span="196-198", cluster="lambda expression", file="Job.cs"];
m15_120 [label="Exit lambda expression", span="196-198", cluster="lambda expression", file="Job.cs"];
m15_126 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="204-206", cluster="lambda expression", file="Job.cs"];
m15_125 [label="Entry lambda expression", span="204-206", cluster="lambda expression", file="Job.cs"];
m15_127 [label="Exit lambda expression", span="204-206", cluster="lambda expression", file="Job.cs"];
m15_134 [label="x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="219-221", cluster="lambda expression", file="Job.cs"];
m15_133 [label="Entry lambda expression", span="219-221", cluster="lambda expression", file="Job.cs"];
m15_135 [label="Exit lambda expression", span="219-221", cluster="lambda expression", file="Job.cs"];
m15_148 [label="x.Execute(\r\n                sql,\r\n                keyValuePairs.Select(y => new { key = key, field = y.Key, value = y.Value }))", span="237-239", cluster="lambda expression", file="Job.cs"];
m15_151 [label="new { key = key, field = y.Key, value = y.Value }", span="239-239", cluster="lambda expression", file="Job.cs"];
m15_147 [label="Entry lambda expression", span="237-239", cluster="lambda expression", file="Job.cs"];
m15_149 [label="Exit lambda expression", span="237-239", cluster="lambda expression", file="Job.cs"];
m15_150 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="Job.cs"];
m15_152 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="Job.cs"];
m15_161 [label="x.Execute(query, new { key })", span="249-249", cluster="lambda expression", file="Job.cs"];
m15_160 [label="Entry lambda expression", span="249-249", cluster="lambda expression", file="Job.cs"];
m15_162 [label="Exit lambda expression", span="249-249", cluster="lambda expression", file="Job.cs"];
m15_173 [label="x.Execute(query, items.Select(value => new { key = key, value = value }).ToList())", span="262-262", cluster="lambda expression", file="Job.cs"];
m15_177 [label="new { key = key, value = value }", span="262-262", cluster="lambda expression", file="Job.cs"];
m15_172 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="Job.cs"];
m15_174 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="Job.cs"];
m15_176 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="Job.cs"];
m15_178 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="Job.cs"];
m15_187 [label="x.Execute(query, new { key = key })", span="272-272", cluster="lambda expression", file="Job.cs"];
m15_186 [label="Entry lambda expression", span="272-272", cluster="lambda expression", file="Job.cs"];
m15_188 [label="Exit lambda expression", span="272-272", cluster="lambda expression", file="Job.cs"];
m15_197 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="283-283", cluster="lambda expression", file="Job.cs"];
m15_196 [label="Entry lambda expression", span="283-283", cluster="lambda expression", file="Job.cs"];
m15_198 [label="Exit lambda expression", span="283-283", cluster="lambda expression", file="Job.cs"];
m15_207 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="294-294", cluster="lambda expression", file="Job.cs"];
m15_206 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="Job.cs"];
m15_208 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="Job.cs"];
m15_217 [label="x.Execute(query, new { key = key, expireAt = DateTime.UtcNow.Add(expireIn) })", span="305-305", cluster="lambda expression", file="Job.cs"];
m15_216 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="Job.cs"];
m15_218 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="Job.cs"];
m15_227 [label="x.Execute(query, new { key = key })", span="316-316", cluster="lambda expression", file="Job.cs"];
m15_226 [label="Entry lambda expression", span="316-316", cluster="lambda expression", file="Job.cs"];
m15_228 [label="Exit lambda expression", span="316-316", cluster="lambda expression", file="Job.cs"];
m15_237 [label="x.Execute(query, new { key = key })", span="327-327", cluster="lambda expression", file="Job.cs"];
m15_236 [label="Entry lambda expression", span="327-327", cluster="lambda expression", file="Job.cs"];
m15_238 [label="Exit lambda expression", span="327-327", cluster="lambda expression", file="Job.cs"];
m15_247 [label="x.Execute(query, new { key = key })", span="338-338", cluster="lambda expression", file="Job.cs"];
m15_248 [label="Exit lambda expression", span="338-338", cluster="lambda expression", file="Job.cs"];
m15_163 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="Job.cs"];
m15_164 [label="key == null", span="254-254", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="Job.cs"];
m15_166 [label="items == null", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="Job.cs"];
m15_170 [label="QueueCommand(x => x.Execute(query, items.Select(value => new { key = key, value = value }).ToList()))", span="262-262", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="Job.cs"];
m15_165 [label="throw new ArgumentNullException(''key'');", span="254-254", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="Job.cs"];
m15_167 [label="throw new ArgumentNullException(''items'');", span="255-255", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="Job.cs"];
m15_168 [label="string query = @''\r\ninsert into HangFire.[Set] ([Key], Value, Score)\r\nvalues (@key, @value, 0.0)''", span="257-259", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="Job.cs"];
m15_169 [label="AcquireSetLock()", span="261-261", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="Job.cs"];
m15_171 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", span="252-252", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AddRangeToSet(string, System.Collections.Generic.IList<string>)", file="Job.cs"];
m15_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Job.cs"];
m15_262 [label="Entry System.Collections.Generic.SortedSet<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.SortedSet<T>.Add(T)", file="Job.cs"];
m15_175 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="Job.cs"];
m15_22 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="Job.cs"];
m15_64 [label="Entry Unk.GetJobQueue", span="", cluster="Unk.GetJobQueue", file="Job.cs"];
m15_146 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="Job.cs"];
m15_121 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="Job.cs"];
m15_122 [label="AcquireListLock()", span="203-203", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="Job.cs"];
m15_123 [label="QueueCommand(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="204-206", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="Job.cs"];
m15_124 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", span="201-201", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.RemoveFromList(string, string)", file="Job.cs"];
m15_117 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="Job.cs"];
m15_252 [label="AcquireLock(String.Format(''Hangfire:List:Lock''))", span="348-348", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="Job.cs"];
m15_253 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", span="346-346", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.AcquireListLock()", file="Job.cs"];
m15_219 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="Job.cs"];
m15_220 [label="key == null", span="310-310", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="Job.cs"];
m15_224 [label="QueueCommand(x => x.Execute(query, new { key = key }))", span="316-316", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="Job.cs"];
m15_221 [label="throw new ArgumentNullException(''key'');", span="310-310", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="Job.cs"];
m15_222 [label="string query = @''\r\nupdate HangFire.Hash set ExpireAt = null where [Key] = @key''", span="312-313", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="Job.cs"];
m15_223 [label="AcquireHashLock()", span="315-315", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="Job.cs"];
m15_225 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", span="308-308", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.PersistHash(string)", file="Job.cs"];
m15_113 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="Job.cs"];
m15_114 [label="AcquireListLock()", span="195-195", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="Job.cs"];
m15_115 [label="QueueCommand(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value);'',\r\n                new { key, value }))", span="196-198", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="Job.cs"];
m15_116 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", span="193-193", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.InsertToList(string, string)", file="Job.cs"];
m15_128 [label="Entry Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="Job.cs"];
m15_129 [label="string trimSql = @''\r\n;with cte as (\r\n    select row_number() over (order by Id desc) as row_num, [Key] \r\n    from HangFire.List\r\n    where [Key] = @key)\r\ndelete from cte where row_num not between @start and @end''", span="211-216", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="Job.cs"];
m15_131 [label="QueueCommand(x => x.Execute(\r\n                trimSql,\r\n                new { key = key, start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="219-221", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="Job.cs"];
m15_130 [label="AcquireListLock()", span="218-218", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="Job.cs"];
m15_132 [label="Exit Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", span="209-209", cluster="Hangfire.SqlServer.SqlServerWriteOnlyTransaction.TrimList(string, int, int)", file="Job.cs"];
m15_267 [label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction", span="", file="Job.cs"];
m15_268 [label=string, span="", file="Job.cs"];
m15_269 [label="System.TimeSpan", span="", file="Job.cs"];
m15_270 [label=string, span="", file="Job.cs"];
m15_271 [label=string, span="", file="Job.cs"];
m15_272 [label="Hangfire.States.IState", span="", file="Job.cs"];
m15_273 [label=addAndSetStateSql, span="", file="Job.cs"];
m15_274 [label=string, span="", file="Job.cs"];
m15_275 [label="Hangfire.States.IState", span="", file="Job.cs"];
m15_276 [label=addStateSql, span="", file="Job.cs"];
m15_277 [label=string, span="", file="Job.cs"];
m15_278 [label=string, span="", file="Job.cs"];
m15_279 [label=persistentQueue, span="", file="Job.cs"];
m15_280 [label=string, span="", file="Job.cs"];
m15_281 [label=string, span="", file="Job.cs"];
m15_282 [label="System.TimeSpan", span="", file="Job.cs"];
m15_283 [label=string, span="", file="Job.cs"];
m15_284 [label=string, span="", file="Job.cs"];
m15_285 [label="System.TimeSpan", span="", file="Job.cs"];
m15_286 [label=string, span="", file="Job.cs"];
m15_287 [label=string, span="", file="Job.cs"];
m15_288 [label=double, span="", file="Job.cs"];
m15_289 [label=addSql, span="", file="Job.cs"];
m15_290 [label=string, span="", file="Job.cs"];
m15_291 [label=string, span="", file="Job.cs"];
m15_292 [label=query, span="", file="Job.cs"];
m15_293 [label=string, span="", file="Job.cs"];
m15_294 [label=string, span="", file="Job.cs"];
m15_295 [label=string, span="", file="Job.cs"];
m15_296 [label=string, span="", file="Job.cs"];
m15_297 [label=string, span="", file="Job.cs"];
m15_298 [label=int, span="", file="Job.cs"];
m15_299 [label=int, span="", file="Job.cs"];
m15_300 [label=trimSql, span="", file="Job.cs"];
m15_301 [label=string, span="", file="Job.cs"];
m15_302 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>", span="", file="Job.cs"];
m15_303 [label=sql, span="", file="Job.cs"];
m15_304 [label=string, span="", file="Job.cs"];
m15_305 [label=query, span="", file="Job.cs"];
m15_306 [label=string, span="", file="Job.cs"];
m15_307 [label="System.Collections.Generic.IList<string>", span="", file="Job.cs"];
m15_308 [label=query, span="", file="Job.cs"];
m15_309 [label=string, span="", file="Job.cs"];
m15_310 [label=query, span="", file="Job.cs"];
m15_311 [label=string, span="", file="Job.cs"];
m15_312 [label="System.TimeSpan", span="", file="Job.cs"];
m15_313 [label=query, span="", file="Job.cs"];
m15_314 [label=string, span="", file="Job.cs"];
m15_315 [label="System.TimeSpan", span="", file="Job.cs"];
m15_316 [label=query, span="", file="Job.cs"];
m15_317 [label=string, span="", file="Job.cs"];
m15_318 [label="System.TimeSpan", span="", file="Job.cs"];
m15_319 [label=query, span="", file="Job.cs"];
m15_320 [label=string, span="", file="Job.cs"];
m15_321 [label=query, span="", file="Job.cs"];
m15_322 [label=string, span="", file="Job.cs"];
m15_323 [label=query, span="", file="Job.cs"];
m15_324 [label=string, span="", file="Job.cs"];
m15_325 [label=query, span="", file="Job.cs"];
m16_17 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobHelperFacts.cs"];
m16_24 [label="Entry HangFire.JobActivator.JobActivator()", span="4-4", cluster="HangFire.JobActivator.JobActivator()", file="JobHelperFacts.cs"];
m16_47 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="JobHelperFacts.cs"];
m16_110 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="JobHelperFacts.cs"];
m16_21 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="JobHelperFacts.cs"];
m16_28 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="JobHelperFacts.cs"];
m16_33 [label="Entry HangFire.Server.JobServer.Dispose()", span="79-79", cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs"];
m16_34 [label=_disposed, span="81-81", cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobHelperFacts.cs"];
m16_35 [label="return;", span="82-82", cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobHelperFacts.cs"];
m16_36 [label="_disposed = true", span="84-84", cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobHelperFacts.cs"];
m16_37 [label="_fetchedJobsWatcher.Dispose()", span="86-86", cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobHelperFacts.cs"];
m16_38 [label="_schedulePoller.Dispose()", span="87-87", cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobHelperFacts.cs"];
m16_39 [label="_logger.Info(''Stopping manager thread...'')", span="89-89", cluster="HangFire.Server.JobServer.Dispose()", color=green, community=0, file="JobHelperFacts.cs"];
m16_40 [label="_cts.Cancel()", span="90-90", cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs"];
m16_41 [label="_managerThread.Join()", span="91-91", cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs"];
m16_42 [label="_pool.Dispose()", span="93-93", cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs"];
m16_43 [label="_cts.Dispose()", span="94-94", cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs"];
m16_44 [label="Exit HangFire.Server.JobServer.Dispose()", span="79-79", cluster="HangFire.Server.JobServer.Dispose()", file="JobHelperFacts.cs"];
m16_49 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="JobHelperFacts.cs"];
m16_103 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="JobHelperFacts.cs"];
m16_62 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobHelperFacts.cs"];
m16_22 [label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobHelperFacts.cs"];
m16_46 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="JobHelperFacts.cs"];
m16_48 [label="Entry HangFire.Server.WorkerPool.Dispose()", span="59-59", cluster="HangFire.Server.WorkerPool.Dispose()", file="JobHelperFacts.cs"];
m16_29 [label="Entry Unk.Info", span="", cluster="Unk.Info", file="JobHelperFacts.cs"];
m16_109 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="JobHelperFacts.cs"];
m16_67 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="JobHelperFacts.cs"];
m16_18 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="JobHelperFacts.cs"];
m16_108 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="JobHelperFacts.cs"];
m16_20 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="JobHelperFacts.cs"];
m16_30 [label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10", cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="JobHelperFacts.cs"];
m16_0 [label="Entry HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="29-29", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs"];
m16_1 [label="queues == null", span="36-36", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_2 [label="throw new ArgumentNullException(''queues'');", span="38-38", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_3 [label="concurrency <= 0", span="41-41", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_4 [label="throw new ArgumentOutOfRangeException(''concurrency'', ''Concurrency value can not be negative or zero.'');", span="43-43", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_5 [label="pollInterval != pollInterval.Duration()", span="46-46", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_6 [label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="48-48", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_7 [label="var serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", span="51-51", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_14 [label="_schedulePoller = new ThreadWrapper(new SchedulePoller(pollInterval))", span="72-72", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_8 [label="_context = new ServerContext(\r\n                serverName,\r\n                queues.ToList(),\r\n                concurrency,\r\n                jobActivator ?? new JobActivator(),\r\n                JobPerformer.Current)", span="53-58", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_9 [label="_pool = new WorkerPool(_context)", span="60-60", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_13 [label="_logger.Info(''Manager thread has been started.'')", span="70-70", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_15 [label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher())", span="73-73", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_10 [label="_fetcher = new JobFetcher(_redis, _context.Queues)", span="61-61", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_11 [label="_managerThread = new Thread(Work)\r\n                {\r\n                    Name = ''HangFire.Manager'',\r\n                    IsBackground = true\r\n                }", span="63-67", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_12 [label="_managerThread.Start()", span="68-68", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", color=green, community=0, file="JobHelperFacts.cs"];
m16_16 [label="Exit HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="29-29", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="JobHelperFacts.cs"];
m16_25 [label="Entry HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext)", span="18-18", cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext)", file="JobHelperFacts.cs"];
m16_31 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17", cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="JobHelperFacts.cs"];
m16_86 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JobHelperFacts.cs"];
m16_107 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobHelperFacts.cs"];
m16_68 [label="Entry HangFire.Server.JobServer.Work()", span="116-116", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_69 [label="AnnounceServer()", span="120-120", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_70 [label="_cts.Token.ThrowIfCancellationRequested()", span="122-122", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_72 [label="var worker = _pool.TakeFree(_cts.Token)", span="126-126", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_74 [label="jobId = _fetcher.DequeueJob()", span="132-132", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_76 [label="_cts.Token.ThrowIfCancellationRequested()", span="135-135", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_80 [label="_logger.Info(''Shutdown has been requested. Exiting...'')", span="144-144", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_81 [label="HideServer()", span="145-145", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_83 [label="_logger.Fatal(''Unexpected exception caught in the manager thread. Jobs will not be processed.'', ex)", span="149-149", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_71 [label=true, span="124-124", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_73 [label="JobPayload jobId", span="128-128", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_78 [label="worker.Process(jobId)", span="139-139", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_75 [label="jobId == null", span="133-133", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_77 [label="jobId == null", span="137-137", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_79 [label=OperationCanceledException, span="142-142", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_82 [label=Exception, span="147-147", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_84 [label="Exit HangFire.Server.JobServer.Work()", span="116-116", cluster="HangFire.Server.JobServer.Work()", file="JobHelperFacts.cs"];
m16_45 [label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23", cluster="HangFire.Server.ThreadWrapper.Dispose()", file="JobHelperFacts.cs"];
m16_85 [label="Entry HangFire.Server.JobServer.AnnounceServer()", span="153-153", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m16_92 [label="var transaction = _redis.CreateTransaction()", span="155-155", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m16_93 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName))", span="157-158", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m16_94 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        }))", span="160-166", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m16_95 [label="_context.Queues", span="168-168", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m16_97 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName))", span="171-173", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m16_98 [label="transaction.Commit()", span="176-176", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m16_96 [label="var queueName = queue", span="170-170", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m16_99 [label="Exit HangFire.Server.JobServer.AnnounceServer()", span="153-153", cluster="HangFire.Server.JobServer.AnnounceServer()", file="JobHelperFacts.cs"];
m16_122 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="JobHelperFacts.cs"];
m16_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="JobHelperFacts.cs"];
m16_91 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="JobHelperFacts.cs"];
m16_19 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="JobHelperFacts.cs"];
m16_26 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", span="17-17", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="JobHelperFacts.cs"];
m16_64 [label="Entry lambda expression", span="107-109", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_101 [label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _context.ServerName)", span="157-158", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_105 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _context.WorkersCount.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="160-166", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_112 [label="x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _context.ServerName),\r\n                        queueName)", span="171-173", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_120 [label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName)", span="184-186", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_124 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName))", span="188-190", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_100 [label="Entry lambda expression", span="157-158", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_102 [label="Exit lambda expression", span="157-158", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_104 [label="Entry lambda expression", span="160-166", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_106 [label="Exit lambda expression", span="160-166", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_111 [label="Entry lambda expression", span="171-173", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_113 [label="Exit lambda expression", span="171-173", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_119 [label="Entry lambda expression", span="184-186", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_121 [label="Exit lambda expression", span="184-186", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_123 [label="Entry lambda expression", span="188-190", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_125 [label="Exit lambda expression", span="188-190", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_60 [label="x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="102-105", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_65 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId))", span="107-109", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_59 [label="Entry lambda expression", span="102-105", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_61 [label="Exit lambda expression", span="102-105", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_66 [label="Exit lambda expression", span="107-109", cluster="lambda expression", file="JobHelperFacts.cs"];
m16_90 [label="Entry HangFire.Server.JobServer.HideServer()", span="180-180", cluster="HangFire.Server.JobServer.HideServer()", file="JobHelperFacts.cs"];
m16_114 [label="var transaction = _redis.CreateTransaction()", span="182-182", cluster="HangFire.Server.JobServer.HideServer()", file="JobHelperFacts.cs"];
m16_115 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _context.ServerName))", span="184-186", cluster="HangFire.Server.JobServer.HideServer()", file="JobHelperFacts.cs"];
m16_116 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _context.ServerName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _context.ServerName)))", span="188-190", cluster="HangFire.Server.JobServer.HideServer()", file="JobHelperFacts.cs"];
m16_117 [label="transaction.Commit()", span="192-192", cluster="HangFire.Server.JobServer.HideServer()", file="JobHelperFacts.cs"];
m16_118 [label="Exit HangFire.Server.JobServer.HideServer()", span="180-180", cluster="HangFire.Server.JobServer.HideServer()", file="JobHelperFacts.cs"];
m16_63 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="JobHelperFacts.cs"];
m16_88 [label="Entry HangFire.Server.JobFetcher.DequeueJob()", span="26-26", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="JobHelperFacts.cs"];
m16_32 [label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="9-9", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="JobHelperFacts.cs"];
m16_58 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="JobHelperFacts.cs"];
m16_57 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="JobHelperFacts.cs"];
m16_87 [label="Entry HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", span="34-34", cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="JobHelperFacts.cs"];
m16_50 [label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="97-97", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobHelperFacts.cs"];
m16_51 [label="var transaction = redis.CreateTransaction()", span="100-100", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobHelperFacts.cs"];
m16_52 [label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="102-105", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobHelperFacts.cs"];
m16_53 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId)))", span="107-109", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobHelperFacts.cs"];
m16_54 [label="transaction.Commit()", span="111-111", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobHelperFacts.cs"];
m16_55 [label="Exit HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="97-97", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="JobHelperFacts.cs"];
m16_56 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="JobHelperFacts.cs"];
m16_27 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="JobHelperFacts.cs"];
m16_89 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="70-70", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="JobHelperFacts.cs"];
m16_126 [label="HangFire.Server.JobServer", span="", file="JobHelperFacts.cs"];
m16_129 [label=queueName, span="", file="JobHelperFacts.cs"];
m16_127 [label=string, span="", file="JobHelperFacts.cs"];
m16_128 [label=string, span="", file="JobHelperFacts.cs"];
m17_4 [label="Entry HangFire.JobStorage.GetComponents()", span="57-57", cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs"];
m17_5 [label="return Enumerable.Empty<IServerComponent>();", span="59-59", cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs"];
m17_6 [label="Exit HangFire.JobStorage.GetComponents()", span="57-57", cluster="HangFire.JobStorage.GetComponents()", file="JobStorage.cs"];
m17_0 [label="Entry HangFire.JobStorage.GetMonitoringApi()", span="53-53", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobStorage.cs"];
m17_1 [label="Exit HangFire.JobStorage.GetMonitoringApi()", span="53-53", cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobStorage.cs"];
m17_8 [label="Entry HangFire.JobStorage.GetStateHandlers()", span="62-62", cluster="HangFire.JobStorage.GetStateHandlers()", file="JobStorage.cs"];
m17_9 [label="return Enumerable.Empty<StateHandler>();", span="64-64", cluster="HangFire.JobStorage.GetStateHandlers()", color=red, community=0, file="JobStorage.cs"];
m17_10 [label="Exit HangFire.JobStorage.GetStateHandlers()", span="62-62", cluster="HangFire.JobStorage.GetStateHandlers()", file="JobStorage.cs"];
m17_7 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="JobStorage.cs"];
m17_2 [label="Entry HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="JobStorage.cs"];
m17_3 [label="Exit HangFire.JobStorage.GetConnection()", span="55-55", cluster="HangFire.JobStorage.GetConnection()", file="JobStorage.cs"];
m18_6 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="LambdaExpressionFingerprint.cs"];
m18_2 [label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="23-23", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs"];
m18_3 [label="LambdaExpressionFingerprint other = obj as LambdaExpressionFingerprint", span="25-25", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs"];
m18_4 [label="return (other != null)\r\n                   && this.Equals(other);", span="26-27", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs"];
m18_5 [label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", span="23-23", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.Equals(object)", file="LambdaExpressionFingerprint.cs"];
m18_0 [label="Entry HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="LambdaExpressionFingerprint.cs"];
m18_1 [label="Exit HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", span="16-16", cluster="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint.LambdaExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type)", file="LambdaExpressionFingerprint.cs"];
m18_7 [label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint", span="", file="LambdaExpressionFingerprint.cs"];
m19_13 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="MemberExpressionFingerprint.cs"];
m19_9 [label="Entry HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="34-34", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MemberExpressionFingerprint.cs"];
m19_10 [label="combiner.AddObject(Member)", span="36-36", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MemberExpressionFingerprint.cs"];
m19_11 [label="base.AddToHashCodeCombiner(combiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MemberExpressionFingerprint.cs"];
m19_12 [label="Exit HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="34-34", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MemberExpressionFingerprint.cs"];
m19_8 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="MemberExpressionFingerprint.cs"];
m19_7 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="MemberExpressionFingerprint.cs"];
m19_14 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="MemberExpressionFingerprint.cs"];
m19_3 [label="Entry HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", span="26-26", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", file="MemberExpressionFingerprint.cs"];
m19_4 [label="MemberExpressionFingerprint other = obj as MemberExpressionFingerprint", span="28-28", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", file="MemberExpressionFingerprint.cs"];
m19_5 [label="return (other != null)\r\n                   && Equals(this.Member, other.Member)\r\n                   && this.Equals(other);", span="29-31", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", file="MemberExpressionFingerprint.cs"];
m19_6 [label="Exit HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", span="26-26", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.Equals(object)", file="MemberExpressionFingerprint.cs"];
m19_0 [label="Entry HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.MemberExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MemberInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.MemberExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MemberInfo)", file="MemberExpressionFingerprint.cs"];
m19_1 [label="Member = member", span="20-20", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.MemberExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MemberInfo)", file="MemberExpressionFingerprint.cs"];
m19_2 [label="Exit HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.MemberExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MemberInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint.MemberExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MemberInfo)", file="MemberExpressionFingerprint.cs"];
m19_15 [label="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint", span="", file="MemberExpressionFingerprint.cs"];
m20_0 [label="Entry HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="MethodCallExpressionFingerprint.cs"];
m20_1 [label="Exit HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="MethodCallExpressionFingerprint.cs"];
m20_2 [label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="MethodCallExpressionFingerprint.cs"];
m20_3 [label="ServerName = serverName", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="MethodCallExpressionFingerprint.cs"];
m20_4 [label="Queues = queues", span="19-19", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="MethodCallExpressionFingerprint.cs"];
m20_5 [label="WorkersCount = workersCount", span="20-20", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="MethodCallExpressionFingerprint.cs"];
m20_6 [label="Activator = activator", span="21-21", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="MethodCallExpressionFingerprint.cs"];
m20_7 [label="Performer = performer", span="22-22", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="MethodCallExpressionFingerprint.cs"];
m20_8 [label="Exit HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="MethodCallExpressionFingerprint.cs"];
m20_9 [label="HangFire.Server.ServerContext", span="", file="MethodCallExpressionFingerprint.cs"];
m21_12 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", span="46-46", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddInt32(int)", file="ParameterExpressionFingerprint.cs"];
m21_3 [label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", span="25-25", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs"];
m21_4 [label="ParameterExpressionFingerprint other = obj as ParameterExpressionFingerprint", span="27-27", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs"];
m21_5 [label="return (other != null)\r\n                   && (this.ParameterIndex == other.ParameterIndex)\r\n                   && this.Equals(other);", span="28-30", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs"];
m21_6 [label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", span="25-25", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.Equals(object)", file="ParameterExpressionFingerprint.cs"];
m21_7 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="ParameterExpressionFingerprint.cs"];
m21_8 [label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="33-33", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs"];
m21_9 [label="combiner.AddInt32(ParameterIndex)", span="35-35", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs"];
m21_10 [label="base.AddToHashCodeCombiner(combiner)", span="36-36", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs"];
m21_11 [label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="33-33", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs"];
m21_13 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="ParameterExpressionFingerprint.cs"];
m21_0 [label="Entry HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", span="16-16", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="ParameterExpressionFingerprint.cs"];
m21_1 [label="ParameterIndex = parameterIndex", span="19-19", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="ParameterExpressionFingerprint.cs"];
m21_2 [label="Exit HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", span="16-16", cluster="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint.ParameterExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, int)", file="ParameterExpressionFingerprint.cs"];
m21_14 [label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint", span="", file="ParameterExpressionFingerprint.cs"];
m22_0 [label="Entry HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="ProcessingStateHandler.cs"];
m22_1 [label="Exit HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="ProcessingStateHandler.cs"];
m22_2 [label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ProcessingStateHandler.cs"];
m22_3 [label="ServerName = serverName", span="18-18", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ProcessingStateHandler.cs"];
m22_4 [label="Queues = queues", span="19-19", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ProcessingStateHandler.cs"];
m22_5 [label="WorkersCount = workersCount", span="20-20", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ProcessingStateHandler.cs"];
m22_6 [label="Activator = activator", span="21-21", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ProcessingStateHandler.cs"];
m22_7 [label="Performer = performer", span="22-22", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ProcessingStateHandler.cs"];
m22_8 [label="Exit HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="ProcessingStateHandler.cs"];
m22_9 [label="HangFire.Server.ServerContext", span="", file="ProcessingStateHandler.cs"];
m23_27 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="65-65", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_28 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId }))", span="67-69", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_29 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", span="65-65", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Expire(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_3 [label="Entry HangFire.SqlServer.SqlWriteTransaction.Dispose()", span="24-24", cluster="HangFire.SqlServer.SqlWriteTransaction.Dispose()", file="RedisStorage.cs"];
m23_4 [label="Exit HangFire.SqlServer.SqlWriteTransaction.Dispose()", span="24-24", cluster="HangFire.SqlServer.SqlWriteTransaction.Dispose()", file="RedisStorage.cs"];
m23_34 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="72-72", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="RedisStorage.cs"];
m23_35 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId }))", span="74-76", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="RedisStorage.cs"];
m23_36 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", span="72-72", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.Persist(string)", file="RedisStorage.cs"];
m23_53 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="94-94", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="RedisStorage.cs"];
m23_54 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value }))", span="96-98", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="RedisStorage.cs"];
m23_55 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", span="94-94", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.AddToLeft(string, string)", file="RedisStorage.cs"];
m23_22 [label="Entry System.Collections.Generic.Queue<T>.Enqueue(T)", span="0-0", cluster="System.Collections.Generic.Queue<T>.Enqueue(T)", file="RedisStorage.cs"];
m23_117 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string)", span="189-189", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string)", file="RedisStorage.cs"];
m23_118 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 }))", span="191-193", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string)", file="RedisStorage.cs"];
m23_119 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string)", span="189-189", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string)", file="RedisStorage.cs"];
m23_0 [label="Entry HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", span="19-19", cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="RedisStorage.cs"];
m23_1 [label="_connection = connection", span="21-21", cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="RedisStorage.cs"];
m23_2 [label="Exit HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", span="19-19", cluster="HangFire.SqlServer.SqlWriteTransaction.SqlWriteTransaction(SqlConnection)", file="RedisStorage.cs"];
m23_62 [label="Entry HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="5-5", cluster="HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="RedisStorage.cs"];
m23_105 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string)", span="175-175", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string)", file="RedisStorage.cs"];
m23_106 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 }))", span="177-179", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string)", file="RedisStorage.cs"];
m23_107 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string)", span="175-175", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string)", file="RedisStorage.cs"];
m23_18 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="54-54", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="RedisStorage.cs"];
m23_19 [label="string enqueueJobSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="56-58", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="RedisStorage.cs"];
m23_20 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue }))", span="60-62", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="RedisStorage.cs"];
m23_21 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", span="54-54", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableJobQueue.Enqueue(string, string)", file="RedisStorage.cs"];
m23_82 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="134-134", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="RedisStorage.cs"];
m23_83 [label="string trimSql = @''\r\nwith cte as (\r\nselect row_number() over (order by Id desc) as row_num from HangFire.List)\r\ndelete from cte where row_num not between @start and @end''", span="136-139", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="RedisStorage.cs"];
m23_84 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                trimSql, \r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 }))", span="141-143", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="RedisStorage.cs"];
m23_85 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", span="134-134", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Trim(string, int, int)", file="RedisStorage.cs"];
m23_5 [label="Entry HangFire.SqlServer.SqlWriteTransaction.Commit()", span="35-35", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="RedisStorage.cs"];
m23_6 [label="var transaction = new TransactionScope(\r\n                TransactionScopeOption.RequiresNew,\r\n                new TransactionOptions { IsolationLevel = IsolationLevel.ReadCommitted })", span="37-39", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="RedisStorage.cs"];
m23_7 [label="_connection.EnlistTransaction(Transaction.Current)", span="41-41", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="RedisStorage.cs"];
m23_10 [label="transaction.Complete()", span="48-48", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="RedisStorage.cs"];
m23_8 [label=_commandQueue, span="43-43", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="RedisStorage.cs"];
m23_9 [label="command(_connection)", span="45-45", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="RedisStorage.cs"];
m23_11 [label="return true;", span="51-51", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="RedisStorage.cs"];
m23_12 [label="Exit HangFire.SqlServer.SqlWriteTransaction.Commit()", span="35-35", cluster="HangFire.SqlServer.SqlWriteTransaction.Commit()", file="RedisStorage.cs"];
m23_15 [label="Entry Unk.EnlistTransaction", span="", cluster="Unk.EnlistTransaction", file="RedisStorage.cs"];
m23_16 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="RedisStorage.cs"];
m23_13 [label="Entry TransactionScope.cstr", span="", cluster="TransactionScope.cstr", file="RedisStorage.cs"];
m23_70 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="120-120", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="RedisStorage.cs"];
m23_71 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="122-124", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="RedisStorage.cs"];
m23_72 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", span="120-120", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Remove(string, string)", file="RedisStorage.cs"];
m23_76 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="127-127", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="RedisStorage.cs"];
m23_77 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value }))", span="129-131", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="RedisStorage.cs"];
m23_78 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", span="127-127", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredLists.Remove(string, string)", file="RedisStorage.cs"];
m23_59 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="101-101", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="RedisStorage.cs"];
m23_60 [label="((IWriteableStoredSets)this).Add(key, value, 0.0)", span="103-103", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="RedisStorage.cs"];
m23_61 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", span="101-101", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string)", file="RedisStorage.cs"];
m23_17 [label="Entry Unk.Complete", span="", cluster="Unk.Complete", file="RedisStorage.cs"];
m23_33 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="RedisStorage.cs"];
m23_133 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="218-218", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_134 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Value with (xlock) set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key }))", span="220-222", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_135 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", span="218-218", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.ExpireIn(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_47 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="86-86", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="RedisStorage.cs"];
m23_48 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) }))", span="88-91", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="RedisStorage.cs"];
m23_49 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", span="86-86", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.AppendHistory(string, System.Collections.Generic.Dictionary<string, string>)", file="RedisStorage.cs"];
m23_99 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", span="168-168", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_100 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="170-172", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_101 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", span="168-168", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Increment(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_14 [label="Entry TransactionOptions.cstr", span="", cluster="TransactionOptions.cstr", file="RedisStorage.cs"];
m23_136 [label="Entry lambda expression", span="220-222", cluster="lambda expression", file="RedisStorage.cs"];
m23_24 [label="x.Execute(\r\n                enqueueJobSql,\r\n                new { jobId = jobId, queue = queue })", span="60-62", cluster="lambda expression", file="RedisStorage.cs"];
m23_23 [label="Entry lambda expression", span="60-62", cluster="lambda expression", file="RedisStorage.cs"];
m23_25 [label="Exit lambda expression", span="60-62", cluster="lambda expression", file="RedisStorage.cs"];
m23_31 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = @expireAt where Id = @id'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), id = jobId })", span="67-69", cluster="lambda expression", file="RedisStorage.cs"];
m23_30 [label="Entry lambda expression", span="67-69", cluster="lambda expression", file="RedisStorage.cs"];
m23_32 [label="Exit lambda expression", span="67-69", cluster="lambda expression", file="RedisStorage.cs"];
m23_38 [label="x.Execute(\r\n                @''update HangFire.Job set ExpireAt = NULL where Id = @id'',\r\n                new { id = jobId })", span="74-76", cluster="lambda expression", file="RedisStorage.cs"];
m23_37 [label="Entry lambda expression", span="74-76", cluster="lambda expression", file="RedisStorage.cs"];
m23_39 [label="Exit lambda expression", span="74-76", cluster="lambda expression", file="RedisStorage.cs"];
m23_44 [label="x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId })", span="81-83", cluster="lambda expression", file="RedisStorage.cs"];
m23_43 [label="Entry lambda expression", span="81-83", cluster="lambda expression", file="RedisStorage.cs"];
m23_45 [label="Exit lambda expression", span="81-83", cluster="lambda expression", file="RedisStorage.cs"];
m23_51 [label="x.Execute(\r\n                @''insert into HangFire.JobHistory (JobId, CreatedAt, Data) ''\r\n                + @''values (@jobId, @createdAt, @data)'',\r\n                new { jobId = jobId, createdAt = DateTime.UtcNow, data = JobHelper.ToJson(properties) })", span="88-91", cluster="lambda expression", file="RedisStorage.cs"];
m23_50 [label="Entry lambda expression", span="88-91", cluster="lambda expression", file="RedisStorage.cs"];
m23_52 [label="Exit lambda expression", span="88-91", cluster="lambda expression", file="RedisStorage.cs"];
m23_57 [label="x.Execute(\r\n                @''insert into HangFire.List ([Key], Value) values (@key, @value)'',\r\n                new { key, value })", span="96-98", cluster="lambda expression", file="RedisStorage.cs"];
m23_56 [label="Entry lambda expression", span="96-98", cluster="lambda expression", file="RedisStorage.cs"];
m23_58 [label="Exit lambda expression", span="96-98", cluster="lambda expression", file="RedisStorage.cs"];
m23_68 [label="x.Execute(\r\n                addSql, \r\n                new { key, value, score })", span="115-117", cluster="lambda expression", file="RedisStorage.cs"];
m23_67 [label="Entry lambda expression", span="115-117", cluster="lambda expression", file="RedisStorage.cs"];
m23_69 [label="Exit lambda expression", span="115-117", cluster="lambda expression", file="RedisStorage.cs"];
m23_74 [label="x.Execute(\r\n                @''delete from HangFire.[Set] where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="122-124", cluster="lambda expression", file="RedisStorage.cs"];
m23_73 [label="Entry lambda expression", span="122-124", cluster="lambda expression", file="RedisStorage.cs"];
m23_75 [label="Exit lambda expression", span="122-124", cluster="lambda expression", file="RedisStorage.cs"];
m23_80 [label="x.Execute(\r\n                @''delete from HangFire.List where [Key] = @key and Value = @value'',\r\n                new { key, value })", span="129-131", cluster="lambda expression", file="RedisStorage.cs"];
m23_79 [label="Entry lambda expression", span="129-131", cluster="lambda expression", file="RedisStorage.cs"];
m23_81 [label="Exit lambda expression", span="129-131", cluster="lambda expression", file="RedisStorage.cs"];
m23_87 [label="x.Execute(\r\n                trimSql, \r\n                new { start = keepStartingFrom + 1, end = keepEndingAt + 1 })", span="141-143", cluster="lambda expression", file="RedisStorage.cs"];
m23_86 [label="Entry lambda expression", span="141-143", cluster="lambda expression", file="RedisStorage.cs"];
m23_88 [label="Exit lambda expression", span="141-143", cluster="lambda expression", file="RedisStorage.cs"];
m23_95 [label="var affectedRows = x.Execute(updateSql, new { key })", span="159-159", cluster="lambda expression", file="RedisStorage.cs"];
m23_97 [label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="163-163", cluster="lambda expression", file="RedisStorage.cs"];
m23_94 [label="Entry lambda expression", span="157-165", cluster="lambda expression", file="RedisStorage.cs"];
m23_96 [label="affectedRows == 0", span="161-161", cluster="lambda expression", file="RedisStorage.cs"];
m23_98 [label="Exit lambda expression", span="157-165", cluster="lambda expression", file="RedisStorage.cs"];
m23_103 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = +1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="170-172", cluster="lambda expression", file="RedisStorage.cs"];
m23_102 [label="Entry lambda expression", span="170-172", cluster="lambda expression", file="RedisStorage.cs"];
m23_104 [label="Exit lambda expression", span="170-172", cluster="lambda expression", file="RedisStorage.cs"];
m23_109 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = -1 })", span="177-179", cluster="lambda expression", file="RedisStorage.cs"];
m23_108 [label="Entry lambda expression", span="177-179", cluster="lambda expression", file="RedisStorage.cs"];
m23_110 [label="Exit lambda expression", span="177-179", cluster="lambda expression", file="RedisStorage.cs"];
m23_115 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) })", span="184-186", cluster="lambda expression", file="RedisStorage.cs"];
m23_114 [label="Entry lambda expression", span="184-186", cluster="lambda expression", file="RedisStorage.cs"];
m23_116 [label="Exit lambda expression", span="184-186", cluster="lambda expression", file="RedisStorage.cs"];
m23_121 [label="x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value]) values (@key, @value)'',\r\n                new { key, value = +1 })", span="191-193", cluster="lambda expression", file="RedisStorage.cs"];
m23_120 [label="Entry lambda expression", span="191-193", cluster="lambda expression", file="RedisStorage.cs"];
m23_122 [label="Exit lambda expression", span="191-193", cluster="lambda expression", file="RedisStorage.cs"];
m23_129 [label="var affectedRows = x.Execute(updateSql, new { key })", span="209-209", cluster="lambda expression", file="RedisStorage.cs"];
m23_131 [label="x.Execute(insertSql + ''\n'' + updateSql, new { key })", span="213-213", cluster="lambda expression", file="RedisStorage.cs"];
m23_128 [label="Entry lambda expression", span="207-215", cluster="lambda expression", file="RedisStorage.cs"];
m23_130 [label="affectedRows == 0", span="211-211", cluster="lambda expression", file="RedisStorage.cs"];
m23_132 [label="Exit lambda expression", span="207-215", cluster="lambda expression", file="RedisStorage.cs"];
m23_137 [label="x.Execute(\r\n                @''update HangFire.Value with (xlock) set ExpireAt = @expireAt where [Key] = @key'',\r\n                new { expireAt = DateTime.UtcNow.Add(expireIn), key = key })", span="220-222", cluster="lambda expression", file="RedisStorage.cs"];
m23_138 [label="Exit lambda expression", span="220-222", cluster="lambda expression", file="RedisStorage.cs"];
m23_40 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="79-79", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="RedisStorage.cs"];
m23_41 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''update HangFire.Job set State = @name, StateData = @data where Id = @id'',\r\n                new { name = state, data = JobHelper.ToJson(stateProperties), id = jobId }))", span="81-83", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="RedisStorage.cs"];
m23_42 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", span="79-79", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredJobs.SetState(string, string, System.Collections.Generic.Dictionary<string, string>)", file="RedisStorage.cs"];
m23_123 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="196-196", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="RedisStorage.cs"];
m23_124 [label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="198-203", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="RedisStorage.cs"];
m23_126 [label="_commandQueue.Enqueue(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="207-215", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="RedisStorage.cs"];
m23_125 [label="string updateSql = @''\r\nupdate HangFire.Value with (xlock) set IntValue = IntValue - 1 where [Key] = @key''", span="204-205", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="RedisStorage.cs"];
m23_127 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", span="196-196", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Decrement(string)", file="RedisStorage.cs"];
m23_46 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="RedisStorage.cs"];
m23_63 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="106-106", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="RedisStorage.cs"];
m23_64 [label="string addSql = @''\r\nmerge HangFire.[Set] as Target\r\nusing (VALUES (@key, @value, @score)) as Source ([Key], Value, Score)\r\non Target.[Key] = Source.[Key] and Target.Value = Source.Value\r\nwhen matched then update set Score = Source.Score\r\nwhen not matched then insert ([Key], Value, Score) values (Source.[Key], Source.Value, Source.Score);''", span="108-113", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="RedisStorage.cs"];
m23_65 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                addSql, \r\n                new { key, value, score }))", span="115-117", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="RedisStorage.cs"];
m23_66 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", span="106-106", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredSets.Add(string, string, double)", file="RedisStorage.cs"];
m23_89 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", span="146-146", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="RedisStorage.cs"];
m23_90 [label="string insertSql = @''\r\nbegin try \r\n    insert into HangFire.Value ([Key], IntValue) values (@key, 0)\r\nend try\r\nbegin catch\r\nend catch''", span="148-153", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="RedisStorage.cs"];
m23_92 [label="_commandQueue.Enqueue(x =>\r\n            {\r\n                var affectedRows = x.Execute(updateSql, new { key });\r\n\r\n                if (affectedRows == 0)\r\n                {\r\n                    x.Execute(insertSql + ''\n'' + updateSql, new { key });\r\n                }\r\n            })", span="157-165", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="RedisStorage.cs"];
m23_91 [label="string updateSql = @''\r\nupdate HangFire.Value with (xlock) set IntValue = IntValue + 1 where [Key] = @key''", span="154-155", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="RedisStorage.cs"];
m23_93 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", span="146-146", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredValues.Increment(string)", file="RedisStorage.cs"];
m23_26 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="RedisStorage.cs"];
m23_111 [label="Entry HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", span="182-182", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_112 [label="_commandQueue.Enqueue(x => x.Execute(\r\n                @''insert into HangFire.Counter ([Key], [Value], [ExpireAt]) values (@key, @value, @expireAt)'',\r\n                new { key, value = -1, expireAt = DateTime.UtcNow.Add(expireIn) }))", span="184-186", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_113 [label="Exit HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", span="182-182", cluster="HangFire.SqlServer.SqlWriteTransaction.HangFire.Storage.IWriteableStoredCounters.Decrement(string, System.TimeSpan)", file="RedisStorage.cs"];
m23_139 [label="HangFire.SqlServer.SqlWriteTransaction", span="", file="RedisStorage.cs"];
m23_140 [label=string, span="", file="RedisStorage.cs"];
m23_141 [label=string, span="", file="RedisStorage.cs"];
m23_142 [label=enqueueJobSql, span="", file="RedisStorage.cs"];
m23_143 [label=string, span="", file="RedisStorage.cs"];
m23_144 [label="System.TimeSpan", span="", file="RedisStorage.cs"];
m23_145 [label=string, span="", file="RedisStorage.cs"];
m23_146 [label=string, span="", file="RedisStorage.cs"];
m23_147 [label=string, span="", file="RedisStorage.cs"];
m23_148 [label="System.Collections.Generic.Dictionary<string, string>", span="", file="RedisStorage.cs"];
m23_149 [label=string, span="", file="RedisStorage.cs"];
m23_150 [label="System.Collections.Generic.Dictionary<string, string>", span="", file="RedisStorage.cs"];
m23_151 [label=string, span="", file="RedisStorage.cs"];
m23_152 [label=string, span="", file="RedisStorage.cs"];
m23_153 [label=string, span="", file="RedisStorage.cs"];
m23_154 [label=string, span="", file="RedisStorage.cs"];
m23_155 [label=double, span="", file="RedisStorage.cs"];
m23_156 [label=addSql, span="", file="RedisStorage.cs"];
m23_157 [label=string, span="", file="RedisStorage.cs"];
m23_158 [label=string, span="", file="RedisStorage.cs"];
m23_159 [label=string, span="", file="RedisStorage.cs"];
m23_160 [label=string, span="", file="RedisStorage.cs"];
m23_161 [label=int, span="", file="RedisStorage.cs"];
m23_162 [label=int, span="", file="RedisStorage.cs"];
m23_163 [label=trimSql, span="", file="RedisStorage.cs"];
m23_164 [label=string, span="", file="RedisStorage.cs"];
m23_165 [label=updateSql, span="", file="RedisStorage.cs"];
m23_166 [label=insertSql, span="", file="RedisStorage.cs"];
m23_167 [label=string, span="", file="RedisStorage.cs"];
m23_168 [label="System.TimeSpan", span="", file="RedisStorage.cs"];
m23_169 [label=string, span="", file="RedisStorage.cs"];
m23_170 [label=string, span="", file="RedisStorage.cs"];
m23_171 [label="System.TimeSpan", span="", file="RedisStorage.cs"];
m23_172 [label=string, span="", file="RedisStorage.cs"];
m23_173 [label=string, span="", file="RedisStorage.cs"];
m23_174 [label=updateSql, span="", file="RedisStorage.cs"];
m23_175 [label=insertSql, span="", file="RedisStorage.cs"];
m23_176 [label=string, span="", file="RedisStorage.cs"];
m23_177 [label="System.TimeSpan", span="", file="RedisStorage.cs"];
m24_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ScheduledState.cs"];
m24_2 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m24_3 [label="EnqueueAt = enqueueAt", span="34-34", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m24_4 [label="ScheduledAt = DateTime.UtcNow", span="35-35", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m24_5 [label="Exit HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="32-32", cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="ScheduledState.cs"];
m24_25 [label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="41-41", cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="ScheduledState.cs"];
m24_11 [label="Entry HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m24_12 [label="var scheduledState = context.NewState as ScheduledState", span="57-57", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m24_16 [label="transaction.AddToSet(''schedule'', context.JobId, timestamp)", span="66-66", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m24_13 [label="scheduledState == null", span="58-58", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m24_15 [label="var timestamp = JobHelper.ToTimestamp(scheduledState.EnqueueAt)", span="65-65", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m24_14 [label="throw new InvalidOperationException(String.Format(\r\n                        ''`{0}` state handler can be registered only for the Scheduled state.'',\r\n                        typeof(Handler).FullName));", span="60-62", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m24_17 [label="Exit HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54", cluster="HangFire.States.ScheduledState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m24_20 [label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39", cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ScheduledState.cs"];
m24_0 [label="Entry HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ScheduledState.cs"];
m24_1 [label="Exit HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", span="27-27", cluster="HangFire.States.ScheduledState.ScheduledState(System.TimeSpan)", file="ScheduledState.cs"];
m24_6 [label="Entry HangFire.States.ScheduledState.SerializeData()", span="43-43", cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs"];
m24_7 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''EnqueueAt'', JobHelper.ToStringTimestamp(EnqueueAt) },\r\n                { ''ScheduledAt'', JobHelper.ToStringTimestamp(ScheduledAt) }\r\n            };", span="45-49", cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs"];
m24_8 [label="Exit HangFire.States.ScheduledState.SerializeData()", span="43-43", cluster="HangFire.States.ScheduledState.SerializeData()", file="ScheduledState.cs"];
m24_22 [label="Entry HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="69-69", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m24_23 [label="transaction.RemoveFromSet(''schedule'', context.JobId)", span="72-72", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m24_24 [label="Exit HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="69-69", cluster="HangFire.States.ScheduledState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="ScheduledState.cs"];
m24_21 [label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="40-40", cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="ScheduledState.cs"];
m24_19 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ScheduledState.cs"];
m24_10 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ScheduledState.cs"];
m24_18 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="ScheduledState.cs"];
m24_26 [label="HangFire.States.ScheduledState", span="", file="ScheduledState.cs"];
m25_0 [label="Entry HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22", cluster="HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs"];
m25_1 [label="Exit HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="22-22", cluster="HangFire.States.StateHandler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs"];
m25_2 [label="Entry HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27", cluster="HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs"];
m25_3 [label="Exit HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="27-27", cluster="HangFire.States.StateHandler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="StateHandler.cs"];
m26_11 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateHandlerCollection.cs"];
m26_163 [label="Entry Metric.cstr", span="", cluster="Metric.cstr", file="StateHandlerCollection.cs"];
m26_94 [label="Entry Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="232-232", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateHandlerCollection.cs"];
m26_117 [label="var connection = _existingConnection ?? new SqlConnection(_connectionString)", span="234-234", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateHandlerCollection.cs"];
m26_118 [label="connection.State == ConnectionState.Closed", span="236-236", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateHandlerCollection.cs"];
m26_119 [label="connection.Open()", span="238-238", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateHandlerCollection.cs"];
m26_120 [label="return connection;", span="241-241", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateHandlerCollection.cs"];
m26_121 [label="Exit Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", span="232-232", cluster="Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()", file="StateHandlerCollection.cs"];
m26_14 [label="Entry Hangfire.SqlServer.SqlServerStorage.Initialize()", span="257-257", cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="StateHandlerCollection.cs"];
m26_133 [label="_options.PrepareSchemaIfNecessary", span="259-259", cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="StateHandlerCollection.cs"];
m26_134 [label="UseConnection(connection =>\r\n                {\r\n                    SqlServerObjectsInstaller.Install(connection, _options.SchemaName);\r\n                })", span="261-264", cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="StateHandlerCollection.cs"];
m26_135 [label="InitializeQueueProviders()", span="267-267", cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="StateHandlerCollection.cs"];
m26_136 [label="Exit Hangfire.SqlServer.SqlServerStorage.Initialize()", span="257-257", cluster="Hangfire.SqlServer.SqlServerStorage.Initialize()", file="StateHandlerCollection.cs"];
m26_124 [label="Entry Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="244-244", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="StateHandlerCollection.cs"];
m26_125 [label="return connection != null && ReferenceEquals(connection, _existingConnection);", span="246-246", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="StateHandlerCollection.cs"];
m26_126 [label="Exit Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", span="244-244", cluster="Hangfire.SqlServer.SqlServerStorage.IsExistingConnection(IDbConnection)", file="StateHandlerCollection.cs"];
m26_107 [label="Entry Unk.UseConnection", span="", cluster="Unk.UseConnection", file="StateHandlerCollection.cs"];
m26_128 [label="Entry Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="249-249", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="StateHandlerCollection.cs"];
m26_129 [label="connection != null && !IsExistingConnection(connection)", span="251-251", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="StateHandlerCollection.cs"];
m26_130 [label="connection.Dispose()", span="253-253", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="StateHandlerCollection.cs"];
m26_131 [label="Exit Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", span="249-249", cluster="Hangfire.SqlServer.SqlServerStorage.ReleaseConnection(IDbConnection)", file="StateHandlerCollection.cs"];
m26_146 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", span="31-31", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.PersistentJobQueueProviderCollection(Hangfire.SqlServer.IPersistentJobQueueProvider)", file="StateHandlerCollection.cs"];
m26_67 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="StateHandlerCollection.cs"];
m26_63 [label="Entry Unk.ToDictionary", span="", cluster="Unk.ToDictionary", file="StateHandlerCollection.cs"];
m26_17 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", span="86-86", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_18 [label="existingConnection == null", span="88-88", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_19 [label="throw new ArgumentNullException(nameof(existingConnection));", span="88-88", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_20 [label="options == null", span="89-89", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_21 [label="throw new ArgumentNullException(nameof(options));", span="89-89", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_22 [label="_existingConnection = existingConnection", span="91-91", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_23 [label="_options = options", span="92-92", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_24 [label="Initialize()", span="94-94", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_25 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", span="86-86", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_34 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetComponents()", span="114-114", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="StateHandlerCollection.cs"];
m26_35 [label="yield return new ExpirationManager(this, _options.JobExpirationCheckInterval);", span="117-117", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="StateHandlerCollection.cs"];
m26_36 [label="yield return new CountersAggregator(this, _options.CountersAggregateInterval);", span="118-118", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="StateHandlerCollection.cs"];
m26_37 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetComponents()", span="114-114", cluster="Hangfire.SqlServer.SqlServerStorage.GetComponents()", file="StateHandlerCollection.cs"];
m26_141 [label="Entry Hangfire.SqlServer.SqlServerObjectsInstaller.Install(DbConnection, string)", span="38-38", cluster="Hangfire.SqlServer.SqlServerObjectsInstaller.Install(DbConnection, string)", file="StateHandlerCollection.cs"];
m26_155 [label="Entry Hangfire.Dashboard.Metric.Metric(string)", span="20-20", cluster="Hangfire.Dashboard.Metric.Metric(string)", file="StateHandlerCollection.cs"];
m26_66 [label="Entry Unk.Append", span="", cluster="Unk.Append", file="StateHandlerCollection.cs"];
m26_161 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateHandlerCollection.cs"];
m26_64 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="StateHandlerCollection.cs"];
m26_95 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="StateHandlerCollection.cs"];
m26_30 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="108-108", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="StateHandlerCollection.cs"];
m26_31 [label="return new SqlServerConnection(this);", span="110-110", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="StateHandlerCollection.cs"];
m26_32 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetConnection()", span="108-108", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnection()", file="StateHandlerCollection.cs"];
m26_96 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<DbConnection, DbTransaction>)", span="194-194", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<DbConnection, DbTransaction>)", file="StateHandlerCollection.cs"];
m26_97 [label="UseTransaction((connection, transaction) =>\r\n            {\r\n                action(connection, transaction);\r\n                return true;\r\n            }, null)", span="196-200", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<DbConnection, DbTransaction>)", file="StateHandlerCollection.cs"];
m26_98 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<DbConnection, DbTransaction>)", span="194-194", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction(System.Action<DbConnection, DbTransaction>)", file="StateHandlerCollection.cs"];
m26_104 [label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0", cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="StateHandlerCollection.cs"];
m26_40 [label="Entry Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="121-121", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="StateHandlerCollection.cs"];
m26_41 [label="logger.Info(''Using the following options for SQL Server job storage:'')", span="123-123", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="StateHandlerCollection.cs"];
m26_42 [label="logger.Info($''    Queue poll interval: {_options.QueuePollInterval}.'')", span="124-124", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="StateHandlerCollection.cs"];
m26_43 [label="Exit Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", span="121-121", cluster="Hangfire.SqlServer.SqlServerStorage.WriteOptionsToLog(Hangfire.Logging.ILog)", file="StateHandlerCollection.cs"];
m26_123 [label="Entry Unk.Open", span="", cluster="Unk.Open", file="StateHandlerCollection.cs"];
m26_74 [label="Entry Unk.Trim", span="", cluster="Unk.Trim", file="StateHandlerCollection.cs"];
m26_127 [label="Entry Unk.ReferenceEquals", span="", cluster="Unk.ReferenceEquals", file="StateHandlerCollection.cs"];
m26_115 [label="Entry Unk.func", span="", cluster="Unk.func", file="StateHandlerCollection.cs"];
m26_122 [label="Entry SqlConnection.cstr", span="", cluster="SqlConnection.cstr", file="StateHandlerCollection.cs"];
m26_12 [label="Entry Unk.nameof", span="", cluster="Unk.nameof", file="StateHandlerCollection.cs"];
m26_89 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="StateHandlerCollection.cs"];
m26_0 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="43-43", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="StateHandlerCollection.cs"];
m26_1 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="43-43", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="StateHandlerCollection.cs"];
m26_164 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="StateHandlerCollection.cs"];
m26_145 [label="Entry Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", span="26-26", cluster="Hangfire.SqlServer.SqlServerJobQueueProvider.SqlServerJobQueueProvider(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_132 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="StateHandlerCollection.cs"];
m26_29 [label="Entry Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", span="37-37", cluster="Hangfire.SqlServer.SqlServerMonitoringApi.SqlServerMonitoringApi(Hangfire.SqlServer.SqlServerStorage, int?)", file="StateHandlerCollection.cs"];
m26_99 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<DbConnection, DbTransaction, T>, IsolationLevel?)", span="203-203", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<DbConnection, DbTransaction, T>, IsolationLevel?)", file="StateHandlerCollection.cs"];
m26_105 [label="return UseConnection(connection =>\r\n            {\r\n                using (var transaction = connection.BeginTransaction(isolationLevel ?? IsolationLevel.ReadCommitted))\r\n                {\r\n                    var result = func(connection, transaction);\r\n                    transaction.Commit();\r\n\r\n                    return result;\r\n                }\r\n            });", span="219-228", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<DbConnection, DbTransaction, T>, IsolationLevel?)", file="StateHandlerCollection.cs"];
m26_106 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<DbConnection, DbTransaction, T>, IsolationLevel?)", span="203-203", cluster="Hangfire.SqlServer.SqlServerStorage.UseTransaction<T>(System.Func<DbConnection, DbTransaction, T>, IsolationLevel?)", file="StateHandlerCollection.cs"];
m26_61 [label="Entry string.Split(char[], System.StringSplitOptions)", span="0-0", cluster="string.Split(char[], System.StringSplitOptions)", file="StateHandlerCollection.cs"];
m26_38 [label="Entry Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="54-54", cluster="Hangfire.SqlServer.ExpirationManager.ExpirationManager(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="StateHandlerCollection.cs"];
m26_171 [label="Entry lambda expression", span="348-359", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_68 [label="Entry lambda expression", span="134-134", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_71 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_75 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_78 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_69 [label="x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries)", span="134-134", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_70 [label="Exit lambda expression", span="134-134", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_72 [label="new { Key = x[0].Trim(), Value = x[1].Trim() }", span="135-135", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_73 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_76 [label="x.Key", span="136-136", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_77 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_79 [label="x.Value", span="136-136", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_80 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_86 [label="action(connection)", span="174-174", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_85 [label="Entry lambda expression", span="172-176", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_87 [label="return true;", span="175-175", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_88 [label="Exit lambda expression", span="172-176", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_101 [label="action(connection, transaction)", span="198-198", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_100 [label="Entry lambda expression", span="196-200", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_102 [label="return true;", span="199-199", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_103 [label="Exit lambda expression", span="196-200", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_109 [label="var transaction = connection.BeginTransaction(isolationLevel ?? IsolationLevel.ReadCommitted)", span="221-221", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_110 [label="var result = func(connection, transaction)", span="223-223", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_108 [label="Entry lambda expression", span="219-228", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_111 [label="transaction.Commit()", span="224-224", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_112 [label="return result;", span="226-226", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_113 [label="Exit lambda expression", span="219-228", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_138 [label="Entry lambda expression", span="261-264", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_139 [label="SqlServerObjectsInstaller.Install(connection, _options.SchemaName)", span="263-263", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_140 [label="Exit lambda expression", span="261-264", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_149 [label="Entry lambda expression", span="321-338", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_150 [label="var sqlStorage = page.Storage as SqlServerStorage", span="323-323", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_151 [label="sqlStorage == null", span="324-324", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_153 [label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="326-337", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_152 [label="return new Metric(''???'');", span="324-324", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_154 [label="Exit lambda expression", span="321-338", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_156 [label="Entry lambda expression", span="326-337", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_157 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background' and status != 'sleeping'''", span="328-330", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_158 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="332-334", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_159 [label="return new Metric(value.ToString(''N0''));", span="336-336", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_160 [label="Exit lambda expression", span="326-337", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_165 [label="Entry lambda expression", span="343-360", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_166 [label="var sqlStorage = page.Storage as SqlServerStorage", span="345-345", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_167 [label="sqlStorage == null", span="346-346", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_169 [label="return sqlStorage.UseConnection(connection =>\r\n                {\r\n                    var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background''';\r\n\r\n                    var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single();\r\n\r\n                    return new Metric(value.ToString(''N0''));\r\n                });", span="348-359", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_168 [label="return new Metric(''???'');", span="346-346", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_170 [label="Exit lambda expression", span="343-360", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_172 [label="var sqlQuery = @''\r\nselect count(*) from sys.sysprocesses\r\nwhere dbid = db_id(@name) and status != 'background'''", span="350-352", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_173 [label="var value = connection\r\n                        .Query<int>(sqlQuery, new { name = connection.Database })\r\n                        .Single()", span="354-356", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_174 [label="return new Metric(value.ToString(''N0''));", span="358-358", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_175 [label="Exit lambda expression", span="348-359", cluster="lambda expression", file="StateHandlerCollection.cs"];
m26_114 [label="Entry Unk.BeginTransaction", span="", cluster="Unk.BeginTransaction", file="StateHandlerCollection.cs"];
m26_26 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="103-103", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="StateHandlerCollection.cs"];
m26_27 [label="return new SqlServerMonitoringApi(this, _options.DashboardJobListLimit);", span="105-105", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="StateHandlerCollection.cs"];
m26_28 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", span="103-103", cluster="Hangfire.SqlServer.SqlServerStorage.GetMonitoringApi()", file="StateHandlerCollection.cs"];
m26_137 [label="Entry Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="270-270", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="StateHandlerCollection.cs"];
m26_142 [label="var defaultQueueProvider = new SqlServerJobQueueProvider(this, _options)", span="272-272", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="StateHandlerCollection.cs"];
m26_143 [label="QueueProviders = new PersistentJobQueueProviderCollection(defaultQueueProvider)", span="273-273", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="StateHandlerCollection.cs"];
m26_144 [label="Exit Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", span="270-270", cluster="Hangfire.SqlServer.SqlServerStorage.InitializeQueueProviders()", file="StateHandlerCollection.cs"];
m26_62 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StateHandlerCollection.cs"];
m26_44 [label="Entry Hangfire.Logging.ILog.Info(string)", span="204-204", cluster="Hangfire.Logging.ILog.Info(string)", file="StateHandlerCollection.cs"];
m26_45 [label="Entry Hangfire.SqlServer.SqlServerStorage.ToString()", span="127-127", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_46 [label="string canNotParseMessage = ''<Connection string can not be parsed>''", span="129-129", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_47 [label="var parts = _connectionString.Split(new[] { ';' }, StringSplitOptions.RemoveEmptyEntries)\r\n                    .Select(x => x.Split(new[] { '=' }, StringSplitOptions.RemoveEmptyEntries))\r\n                    .Select(x => new { Key = x[0].Trim(), Value = x[1].Trim() })\r\n                    .ToDictionary(x => x.Key, x => x.Value, StringComparer.OrdinalIgnoreCase)", span="133-136", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_57 [label="return builder.Length != 0\r\n                    ? $''SQL Server: {builder}''\r\n                    : canNotParseMessage;", span="160-162", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_59 [label="return canNotParseMessage;", span="166-166", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_48 [label="var builder = new StringBuilder()", span="138-138", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_50 [label="parts.ContainsKey(alias)", span="142-142", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_51 [label="builder.Append(parts[alias])", span="144-144", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_55 [label="parts.ContainsKey(alias)", span="153-153", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_56 [label="builder.Append(parts[alias])", span="155-155", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_49 [label="new[] { ''Data Source'', ''Server'', ''Address'', ''Addr'', ''Network Address'' }", span="140-140", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_52 [label="builder.Length != 0", span="149-149", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_53 [label="builder.Append(''@'')", span="149-149", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_54 [label="new[] { ''Database'', ''Initial Catalog'' }", span="151-151", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_58 [label=Exception, span="164-164", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_60 [label="Exit Hangfire.SqlServer.SqlServerStorage.ToString()", span="127-127", cluster="Hangfire.SqlServer.SqlServerStorage.ToString()", file="StateHandlerCollection.cs"];
m26_39 [label="Entry Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", span="39-39", cluster="Hangfire.SqlServer.CountersAggregator.CountersAggregator(Hangfire.SqlServer.SqlServerStorage, System.TimeSpan)", file="StateHandlerCollection.cs"];
m26_2 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="60-60", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_3 [label="nameOrConnectionString == null", span="62-62", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_4 [label="throw new ArgumentNullException(nameof(nameOrConnectionString));", span="62-62", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_5 [label="options == null", span="63-63", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_6 [label="throw new ArgumentNullException(nameof(options));", span="63-63", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_7 [label="_connectionString = GetConnectionString(nameOrConnectionString)", span="65-65", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_8 [label="_options = options", span="66-66", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_9 [label="Initialize()", span="68-68", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_10 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", span="60-60", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(string, Hangfire.SqlServer.SqlServerStorageOptions)", file="StateHandlerCollection.cs"];
m26_33 [label="Entry Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", span="35-35", cluster="Hangfire.SqlServer.SqlServerConnection.SqlServerConnection(Hangfire.SqlServer.SqlServerStorage)", file="StateHandlerCollection.cs"];
m26_116 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StateHandlerCollection.cs"];
m26_81 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", span="170-170", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", file="StateHandlerCollection.cs"];
m26_82 [label="UseConnection(connection =>\r\n            {\r\n                action(connection);\r\n                return true;\r\n            })", span="172-176", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", file="StateHandlerCollection.cs"];
m26_83 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", span="170-170", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection(System.Action<DbConnection>)", file="StateHandlerCollection.cs"];
m26_162 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="StateHandlerCollection.cs"];
m26_84 [label="Entry Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", span="179-179", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", file="StateHandlerCollection.cs"];
m26_90 [label="DbConnection connection = null", span="181-181", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", file="StateHandlerCollection.cs"];
m26_92 [label="return func(connection);", span="186-186", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", file="StateHandlerCollection.cs"];
m26_91 [label="connection = CreateAndOpenConnection()", span="185-185", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", file="StateHandlerCollection.cs"];
m26_93 [label="Exit Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", span="179-179", cluster="Hangfire.SqlServer.SqlServerStorage.UseConnection<T>(System.Func<DbConnection, T>)", file="StateHandlerCollection.cs"];
m26_13 [label="Entry Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", span="276-276", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="StateHandlerCollection.cs"];
m26_147 [label="return nameOrConnectionString;", span="292-292", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="StateHandlerCollection.cs"];
m26_148 [label="Exit Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", span="276-276", cluster="Hangfire.SqlServer.SqlServerStorage.GetConnectionString(string)", file="StateHandlerCollection.cs"];
m26_65 [label="Entry Unk.ContainsKey", span="", cluster="Unk.ContainsKey", file="StateHandlerCollection.cs"];
m26_15 [label="Entry Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection)", span="76-76", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection)", file="StateHandlerCollection.cs"];
m26_16 [label="Exit Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection)", span="76-76", cluster="Hangfire.SqlServer.SqlServerStorage.SqlServerStorage(DbConnection)", file="StateHandlerCollection.cs"];
m26_176 [label="Hangfire.SqlServer.SqlServerStorage", span="", file="StateHandlerCollection.cs"];
m26_177 [label="System.Action<DbConnection>", span="", file="StateHandlerCollection.cs"];
m26_178 [label="System.Action<DbConnection, DbTransaction>", span="", file="StateHandlerCollection.cs"];
m26_179 [label="IsolationLevel?", span="", file="StateHandlerCollection.cs"];
m26_180 [label="System.Func<DbConnection, DbTransaction, T>", span="", file="StateHandlerCollection.cs"];
m27_2 [label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="StateHandlerCollectionFacts.cs"];
m27_3 [label="ServerName = serverName", span="13-13", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="StateHandlerCollectionFacts.cs"];
m27_4 [label="Queues = queues", span="14-14", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="StateHandlerCollectionFacts.cs"];
m27_5 [label="WorkersCount = workersCount", span="15-15", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="StateHandlerCollectionFacts.cs"];
m27_6 [label="Exit HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="StateHandlerCollectionFacts.cs"];
m27_0 [label="Entry HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="StateHandlerCollectionFacts.cs"];
m27_1 [label="Exit HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", span="6-6", cluster="HangFire.Server.ServerContext.ServerContext(HangFire.Server.ServerContext)", file="StateHandlerCollectionFacts.cs"];
m27_7 [label="HangFire.Server.ServerContext", span="", file="StateHandlerCollectionFacts.cs"];
m28_44 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="StateHandlerProviders.cs"];
m28_19 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="29-29", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="StateHandlerProviders.cs"];
m28_20 [label="var options = CreateOptions()", span="31-31", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="StateHandlerProviders.cs"];
m28_21 [label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = -1)", span="33-34", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="StateHandlerProviders.cs"];
m28_22 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", span="29-29", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsNegative()", file="StateHandlerProviders.cs"];
m28_15 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateHandlerProviders.cs"];
m28_11 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="20-20", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="StateHandlerProviders.cs"];
m28_12 [label="var options = CreateOptions()", span="22-22", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", color=red, community=0, file="StateHandlerProviders.cs"];
m28_13 [label="Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => options.WorkerCount = 0)", span="24-25", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", color=red, community=0, file="StateHandlerProviders.cs"];
m28_14 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", span="20-20", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.WorkerCount_ThrowsAnException_WhenValueIsEqualToZero()", file="StateHandlerProviders.cs"];
m28_33 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="47-47", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="StateHandlerProviders.cs"];
m28_34 [label="var options = CreateOptions()", span="49-49", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="StateHandlerProviders.cs"];
m28_35 [label="Assert.Throws<ArgumentException>(\r\n                () => options.Queues = new string[0])", span="51-52", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="StateHandlerProviders.cs"];
m28_36 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", span="47-47", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenGivenArrayIsEmpty()", file="StateHandlerProviders.cs"];
m28_40 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", span="56-56", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="StateHandlerProviders.cs"];
m28_41 [label="var options = CreateOptions()", span="58-58", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="StateHandlerProviders.cs"];
m28_42 [label="Assert.NotNull(options.ServerWatchdogOptions)", span="60-60", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="StateHandlerProviders.cs"];
m28_43 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", span="56-56", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.ServerWatchDogOptions_IsNonNullByDefault()", file="StateHandlerProviders.cs"];
m28_0 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="StateHandlerProviders.cs"];
m28_1 [label="var options = CreateOptions()", span="11-11", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=green, community=0, file="StateHandlerProviders.cs"];
m28_2 [label="Assert.Equal(Math.Min(Environment.ProcessorCount * 5, 40), options.WorkerCount)", span="13-13", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="StateHandlerProviders.cs"];
m28_8 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="StateHandlerProviders.cs"];
m28_10 [label="Entry Unk.True", span="", cluster="Unk.True", file="StateHandlerProviders.cs"];
m28_9 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StateHandlerProviders.cs"];
m28_3 [label="Assert.Equal(EnqueuedState.DefaultQueue, options.Queues[0])", span="14-14", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="StateHandlerProviders.cs"];
m28_4 [label="Assert.True(options.ShutdownTimeout > TimeSpan.Zero)", span="15-15", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="StateHandlerProviders.cs"];
m28_5 [label="Assert.True(options.SchedulePollingInterval > TimeSpan.Zero)", span="16-16", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", color=red, community=0, file="StateHandlerProviders.cs"];
m28_6 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", span="9-9", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Ctor_InitializeProperties_WithCorrectValues()", file="StateHandlerProviders.cs"];
m28_26 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="38-38", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="StateHandlerProviders.cs"];
m28_27 [label="var options = CreateOptions()", span="40-40", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="StateHandlerProviders.cs"];
m28_28 [label="Assert.Throws<ArgumentNullException>(\r\n                () => options.Queues = null)", span="42-43", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="StateHandlerProviders.cs"];
m28_29 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", span="38-38", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.Queues_ThrowsAnException_WhenValueIsNull()", file="StateHandlerProviders.cs"];
m28_47 [label="Entry Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="34-34", cluster="Hangfire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="StateHandlerProviders.cs"];
m28_37 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_17 [label="options.WorkerCount = 0", span="25-25", cluster="lambda expression", color=red, community=0, file="StateHandlerProviders.cs"];
m28_16 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_18 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_24 [label="options.WorkerCount = -1", span="34-34", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_23 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_25 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_31 [label="options.Queues = null", span="43-43", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_30 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_32 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_38 [label="options.Queues = new string[0]", span="52-52", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_39 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="StateHandlerProviders.cs"];
m28_7 [label="Entry Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="63-63", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="StateHandlerProviders.cs"];
m28_45 [label="return new BackgroundJobServerOptions();", span="65-65", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="StateHandlerProviders.cs"];
m28_46 [label="Exit Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", span="63-63", cluster="Hangfire.Core.Tests.Server.BackgroundJobServerOptionsFacts.CreateOptions()", file="StateHandlerProviders.cs"];
m28_48 [label=options, span="", file="StateHandlerProviders.cs"];
m28_49 [label=options, span="", file="StateHandlerProviders.cs"];
m28_50 [label=options, span="", file="StateHandlerProviders.cs"];
m28_51 [label=options, span="", file="StateHandlerProviders.cs"];
m29_0 [label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StateMachine.cs"];
m29_1 [label="Exit HangFire.Storage.IWriteOnlyTransaction.Commit()", span="13-13", cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="StateMachine.cs"];
m30_26 [label="Entry HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", span="11-11", cluster="HangFire.Server.ServerContext.ServerContext(string, System.Collections.Generic.IList<string>, int)", file="StateMachineFactory.cs"];
m30_19 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachineFactory.cs"];
m30_27 [label="Entry HangFire.JobActivator.JobActivator()", span="4-4", cluster="HangFire.JobActivator.JobActivator()", file="StateMachineFactory.cs"];
m30_49 [label="Entry System.Threading.Thread.Join()", span="0-0", cluster="System.Threading.Thread.Join()", file="StateMachineFactory.cs"];
m30_113 [label="Entry Unk.SetRangeInHash", span="", cluster="Unk.SetRangeInHash", file="StateMachineFactory.cs"];
m30_24 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="StateMachineFactory.cs"];
m30_30 [label="Entry System.Threading.Thread.Start()", span="0-0", cluster="System.Threading.Thread.Start()", file="StateMachineFactory.cs"];
m30_35 [label="Entry HangFire.Server.JobServer.Dispose()", span="82-82", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_36 [label=_disposed, span="84-84", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_37 [label="return;", span="85-85", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_38 [label="_disposed = true", span="87-87", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_39 [label="_fetchedJobsWatcher.Dispose()", span="89-89", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_40 [label="_schedulePoller.Dispose()", span="90-90", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_41 [label="_logger.Info(''Stopping manager thread...'')", span="92-92", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_42 [label="_cts.Cancel()", span="93-93", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_43 [label="_managerThread.Join()", span="94-94", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_44 [label="_pool.Dispose()", span="96-96", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_45 [label="_cts.Dispose()", span="97-97", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_46 [label="Exit HangFire.Server.JobServer.Dispose()", span="82-82", cluster="HangFire.Server.JobServer.Dispose()", file="StateMachineFactory.cs"];
m30_51 [label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0", cluster="System.Threading.CancellationTokenSource.Dispose()", file="StateMachineFactory.cs"];
m30_25 [label="Entry HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", span="18-18", cluster="HangFire.Server.WorkerPool.WorkerPool(HangFire.Server.ServerContext, HangFire.Server.JobPerformer, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_106 [label="Entry Unk.AddItemToSet", span="", cluster="Unk.AddItemToSet", file="StateMachineFactory.cs"];
m30_64 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="StateMachineFactory.cs"];
m30_48 [label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0", cluster="System.Threading.CancellationTokenSource.Cancel()", file="StateMachineFactory.cs"];
m30_50 [label="Entry HangFire.Server.WorkerPool.Dispose()", span="57-57", cluster="HangFire.Server.WorkerPool.Dispose()", file="StateMachineFactory.cs"];
m30_31 [label="Entry Unk.Info", span="", cluster="Unk.Info", file="StateMachineFactory.cs"];
m30_69 [label="Entry Unk.RemoveEntry", span="", cluster="Unk.RemoveEntry", file="StateMachineFactory.cs"];
m30_112 [label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="55-55", cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="StateMachineFactory.cs"];
m30_20 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string, string)", file="StateMachineFactory.cs"];
m30_111 [label="Entry int.ToString()", span="0-0", cluster="int.ToString()", file="StateMachineFactory.cs"];
m30_23 [label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0", cluster="System.Diagnostics.Process.GetCurrentProcess()", file="StateMachineFactory.cs"];
m30_32 [label="Entry HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", span="10-10", cluster="HangFire.Server.ThreadWrapper.ThreadWrapper(HangFire.Server.IThreadWrappable)", file="StateMachineFactory.cs"];
m30_0 [label="Entry HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="31-31", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_1 [label="queues == null", span="38-38", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_3 [label="concurrency <= 0", span="43-43", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_5 [label="pollInterval != pollInterval.Duration()", span="48-48", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_7 [label="_concurrency = concurrency", span="53-53", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_8 [label="_queues = queues.ToList()", span="54-54", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_9 [label="_serverName = String.Format(''{0}:{1}'', machineName, Process.GetCurrentProcess().Id)", span="56-56", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_11 [label="_pool = new WorkerPool(\r\n                new ServerContext(_serverName, _queues, concurrency),\r\n                jobInvoker, jobActivator ?? new JobActivator())", span="60-62", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_2 [label="throw new ArgumentNullException(''queues'');", span="40-40", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_4 [label="throw new ArgumentOutOfRangeException(''concurrency'', ''Concurrency value can not be negative or zero.'');", span="45-45", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_6 [label="throw new ArgumentOutOfRangeException(''pollInterval'', ''Poll interval value must be positive.'');", span="50-50", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_16 [label="_schedulePoller = new ThreadWrapper(new SchedulePoller(pollInterval))", span="75-75", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_10 [label="var jobInvoker = JobPerformer.Current", span="58-58", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_12 [label="_fetcher = new JobFetcher(_redis, _queues)", span="64-64", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_13 [label="_managerThread = new Thread(Work)\r\n                {\r\n                    Name = ''HangFire.Manager'',\r\n                    IsBackground = true\r\n                }", span="66-70", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_14 [label="_managerThread.Start()", span="71-71", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_15 [label="_logger.Info(''Manager thread has been started.'')", span="73-73", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_17 [label="_fetchedJobsWatcher = new ThreadWrapper(new DequeuedJobsWatcher())", span="76-76", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_18 [label="Exit HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", span="31-31", cluster="HangFire.Server.JobServer.JobServer(string, System.Collections.Generic.IEnumerable<string>, int, System.TimeSpan, HangFire.JobActivator)", file="StateMachineFactory.cs"];
m30_33 [label="Entry HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", span="17-17", cluster="HangFire.Server.SchedulePoller.SchedulePoller(System.TimeSpan)", file="StateMachineFactory.cs"];
m30_110 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachineFactory.cs"];
m30_70 [label="Entry HangFire.Server.JobServer.Work()", span="119-119", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_71 [label="AnnounceServer()", span="123-123", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_72 [label="_cts.IsCancellationRequested", span="125-125", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_73 [label="throw new OperationCanceledException();", span="127-127", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_74 [label=true, span="130-130", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_75 [label="var worker = _pool.TakeFree(_cts.Token)", span="132-132", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_82 [label=OperationCanceledException, span="148-148", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_85 [label=Exception, span="153-153", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_87 [label="Exit HangFire.Server.JobServer.Work()", span="119-119", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_76 [label="JobPayload jobId", span="134-134", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_81 [label="worker.Process(jobId)", span="145-145", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_77 [label="jobId = _fetcher.DequeueJob()", span="138-138", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_78 [label="jobId == null && _cts.IsCancellationRequested", span="139-139", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_80 [label="jobId == null", span="143-143", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_79 [label="throw new OperationCanceledException();", span="141-141", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_84 [label="HideServer()", span="151-151", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_86 [label="_logger.Fatal(''Unexpected exception caught in the manager thread. Jobs will not be processed.'', ex)", span="155-155", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_83 [label="_logger.Info(''Shutdown has been requested. Exiting...'')", span="150-150", cluster="HangFire.Server.JobServer.Work()", file="StateMachineFactory.cs"];
m30_47 [label="Entry HangFire.Server.ThreadWrapper.Dispose()", span="23-23", cluster="HangFire.Server.ThreadWrapper.Dispose()", file="StateMachineFactory.cs"];
m30_88 [label="Entry HangFire.Server.JobServer.AnnounceServer()", span="159-159", cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateMachineFactory.cs"];
m30_95 [label="var transaction = _redis.CreateTransaction()", span="161-161", cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateMachineFactory.cs"];
m30_96 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                    ''hangfire:servers'', _serverName))", span="163-164", cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateMachineFactory.cs"];
m30_97 [label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _serverName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _concurrency.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        }))", span="166-172", cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateMachineFactory.cs"];
m30_100 [label="transaction.QueueCommand(x => x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _serverName),\r\n                        queueName))", span="177-179", cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateMachineFactory.cs"];
m30_101 [label="transaction.Commit()", span="182-182", cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateMachineFactory.cs"];
m30_98 [label=_queues, span="174-174", cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateMachineFactory.cs"];
m30_99 [label="var queueName = queue", span="176-176", cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateMachineFactory.cs"];
m30_102 [label="Exit HangFire.Server.JobServer.AnnounceServer()", span="159-159", cluster="HangFire.Server.JobServer.AnnounceServer()", file="StateMachineFactory.cs"];
m30_125 [label="Entry Unk.RemoveItemFromSet", span="", cluster="Unk.RemoveItemFromSet", file="StateMachineFactory.cs"];
m30_22 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="StateMachineFactory.cs"];
m30_94 [label="Entry Unk.Fatal", span="", cluster="Unk.Fatal", file="StateMachineFactory.cs"];
m30_21 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="StateMachineFactory.cs"];
m30_28 [label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", span="17-17", cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClient, System.Collections.Generic.IList<string>, System.TimeSpan?)", file="StateMachineFactory.cs"];
m30_127 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _serverName))", span="194-196", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_62 [label="x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1)", span="105-108", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_67 [label="x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId))", span="110-112", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_61 [label="Entry lambda expression", span="105-108", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_66 [label="Entry lambda expression", span="110-112", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_63 [label="Exit lambda expression", span="105-108", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_68 [label="Exit lambda expression", span="110-112", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_103 [label="Entry lambda expression", span="163-164", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_107 [label="Entry lambda expression", span="166-172", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_115 [label="x.AddItemToSet(\r\n                        String.Format(''hangfire:server:{0}:queues'', _serverName),\r\n                        queueName)", span="177-179", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_114 [label="Entry lambda expression", span="177-179", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_104 [label="x.AddItemToSet(\r\n                    ''hangfire:servers'', _serverName)", span="163-164", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_105 [label="Exit lambda expression", span="163-164", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_108 [label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:server:{0}'', _serverName),\r\n                    new Dictionary<string, string>\r\n                        {\r\n                            { ''Workers'', _concurrency.ToString() },\r\n                            { ''StartedAt'', JobHelper.ToStringTimestamp(DateTime.UtcNow) }\r\n                        })", span="166-172", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_109 [label="Exit lambda expression", span="166-172", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_116 [label="Exit lambda expression", span="177-179", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_122 [label="Entry lambda expression", span="190-192", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_126 [label="Entry lambda expression", span="194-196", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_123 [label="x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _serverName)", span="190-192", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_124 [label="Exit lambda expression", span="190-192", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_128 [label="Exit lambda expression", span="194-196", cluster="lambda expression", file="StateMachineFactory.cs"];
m30_65 [label="Entry Unk.RemoveItemFromList", span="", cluster="Unk.RemoveItemFromList", file="StateMachineFactory.cs"];
m30_119 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:server:{0}'', _serverName),\r\n                    String.Format(''hangfire:server:{0}:queues'', _serverName)))", span="194-196", cluster="HangFire.Server.JobServer.HideServer()", file="StateMachineFactory.cs"];
m30_93 [label="Entry HangFire.Server.JobServer.HideServer()", span="186-186", cluster="HangFire.Server.JobServer.HideServer()", file="StateMachineFactory.cs"];
m30_117 [label="var transaction = _redis.CreateTransaction()", span="188-188", cluster="HangFire.Server.JobServer.HideServer()", file="StateMachineFactory.cs"];
m30_118 [label="transaction.QueueCommand(x => x.RemoveItemFromSet(\r\n                    ''hangfire:servers'',\r\n                    _serverName))", span="190-192", cluster="HangFire.Server.JobServer.HideServer()", file="StateMachineFactory.cs"];
m30_120 [label="transaction.Commit()", span="198-198", cluster="HangFire.Server.JobServer.HideServer()", file="StateMachineFactory.cs"];
m30_121 [label="Exit HangFire.Server.JobServer.HideServer()", span="186-186", cluster="HangFire.Server.JobServer.HideServer()", file="StateMachineFactory.cs"];
m30_60 [label="Entry Unk.Commit", span="", cluster="Unk.Commit", file="StateMachineFactory.cs"];
m30_34 [label="Entry HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", span="9-9", cluster="HangFire.Server.DequeuedJobsWatcher.DequeuedJobsWatcher()", file="StateMachineFactory.cs"];
m30_91 [label="Entry HangFire.Server.JobFetcher.DequeueJob()", span="26-26", cluster="HangFire.Server.JobFetcher.DequeueJob()", file="StateMachineFactory.cs"];
m30_89 [label="Entry System.OperationCanceledException.OperationCanceledException()", span="0-0", cluster="System.OperationCanceledException.OperationCanceledException()", file="StateMachineFactory.cs"];
m30_59 [label="Entry Unk.QueueCommand", span="", cluster="Unk.QueueCommand", file="StateMachineFactory.cs"];
m30_90 [label="Entry HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", span="43-43", cluster="HangFire.Server.WorkerPool.TakeFree(System.Threading.CancellationToken)", file="StateMachineFactory.cs"];
m30_55 [label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:fetched'', jobId),\r\n                    String.Format(''hangfire:job:{0}:checked'', jobId)))", span="110-112", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="StateMachineFactory.cs"];
m30_52 [label="Entry HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="100-100", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="StateMachineFactory.cs"];
m30_53 [label="var transaction = redis.CreateTransaction()", span="103-103", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="StateMachineFactory.cs"];
m30_54 [label="transaction.QueueCommand(x => x.RemoveItemFromList(\r\n                    String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                    jobId,\r\n                    -1))", span="105-108", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="StateMachineFactory.cs"];
m30_56 [label="transaction.Commit()", span="114-114", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="StateMachineFactory.cs"];
m30_57 [label="Exit HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", span="100-100", cluster="HangFire.Server.JobServer.RemoveFromFetchedQueue(IRedisClient, string, string)", file="StateMachineFactory.cs"];
m30_58 [label="Entry Unk.CreateTransaction", span="", cluster="Unk.CreateTransaction", file="StateMachineFactory.cs"];
m30_29 [label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0", cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="StateMachineFactory.cs"];
m30_92 [label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="96-96", cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="StateMachineFactory.cs"];
m30_129 [label="HangFire.Server.JobServer", span="", file="StateMachineFactory.cs"];
m30_130 [label=string, span="", file="StateMachineFactory.cs"];
m30_131 [label=string, span="", file="StateMachineFactory.cs"];
m30_132 [label=queueName, span="", file="StateMachineFactory.cs"];
m31_80 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachineFacts.cs"];
m31_350 [label="Entry Mock<StateMachine>.cstr", span="", cluster="Mock<StateMachine>.cstr", file="StateMachineFacts.cs"];
m31_314 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="StateMachineFacts.cs"];
m31_342 [label="Entry Unk.Apply", span="", cluster="Unk.Apply", file="StateMachineFacts.cs"];
m31_33 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="StateMachineFacts.cs"];
m31_153 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m31_154 [label="_connection.Setup(x => x.GetJobData(It.IsAny<string>()))\r\n                .Returns((JobData)null)", span="180-181", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m31_155 [label="var stateMachine = CreateStateMachineMock()", span="183-183", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m31_156 [label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new [] { ''Old'' })", span="186-186", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m31_159 [label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()),\r\n                Times.Never)", span="192-194", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m31_157 [label="Assert.False(result)", span="189-189", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m31_158 [label="_connection.Verify(x => x.GetJobData(''1''))", span="190-190", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m31_160 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", span="177-177", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenJobIsNotFound()", file="StateMachineFacts.cs"];
m31_270 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs"];
m31_271 [label="var stateMachine = CreateStateMachineMock()", span="317-317", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs"];
m31_272 [label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="318-318", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs"];
m31_274 [label="stateMachine\r\n                .Setup(x => x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>()))\r\n                .Returns(electedState.Object)", span="321-324", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs"];
m31_275 [label="stateMachine.Object.ChangeState(context, _state.Object, OldStateName)", span="326-326", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs"];
m31_276 [label="stateMachine.Verify(x => x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))", span="328-329", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs"];
m31_273 [label="var electedState = new Mock<State>()", span="319-319", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs"];
m31_277 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", span="315-315", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesOnlyElectedState()", file="StateMachineFacts.cs"];
m31_284 [label="Entry Unk.ElectState", span="", cluster="Unk.ElectState", file="StateMachineFacts.cs"];
m31_99 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="StateMachineFacts.cs"];
m31_348 [label="return new Mock<StateMachine>(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters)\r\n            {\r\n                CallBase = true\r\n            };", span="394-400", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="StateMachineFacts.cs"];
m31_349 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", span="392-392", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachineMock()", file="StateMachineFacts.cs"];
m31_242 [label="Entry HangFire.Common.JobLoadException.JobLoadException()", span="33-33", cluster="HangFire.Common.JobLoadException.JobLoadException()", file="StateMachineFacts.cs"];
m31_27 [label="Entry Unk.>", span="", cluster="Unk.>", file="StateMachineFacts.cs"];
m31_210 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs"];
m31_211 [label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="249-254", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs"];
m31_212 [label="var stateMachine = CreateStateMachineMock()", span="256-256", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs"];
m31_213 [label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()))\r\n                .Returns(true)", span="258-259", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs"];
m31_214 [label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="262-263", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs"];
m31_215 [label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old''))", span="266-269", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs"];
m31_216 [label="Assert.True(result)", span="271-271", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs"];
m31_217 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", span="246-246", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheSpecifiedState_WhenMethodDataCouldBeFound()", file="StateMachineFacts.cs"];
m31_28 [label="Entry Unk.CreateExpiredJob", span="", cluster="Unk.CreateExpiredJob", file="StateMachineFacts.cs"];
m31_262 [label="Entry HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", span="23-23", cluster="HangFire.States.StateContext.StateContext(string, HangFire.Common.Job)", file="StateMachineFacts.cs"];
m31_38 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="StateMachineFacts.cs"];
m31_39 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(_connection.Object, null, _filters))", span="55-56", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="StateMachineFacts.cs"];
m31_40 [label="Assert.Equal(''handlers'', exception.ParamName)", span="58-58", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="StateMachineFacts.cs"];
m31_41 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", span="53-53", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenHandlersValueIsNull()", file="StateMachineFacts.cs"];
m31_45 [label="Entry StateMachine.cstr", span="", cluster="StateMachine.cstr", file="StateMachineFacts.cs"];
m31_129 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m31_130 [label="var stateMachine = CreateStateMachine()", span="155-155", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m31_131 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', _state.Object, null))", span="157-158", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m31_132 [label="Assert.Equal(''fromStates'', exception.ParamName)", span="160-160", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m31_133 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", span="153-153", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenFromStatesIsNull()", file="StateMachineFacts.cs"];
m31_72 [label="Entry HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", span="52-52", cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, HangFire.States.State)", file="StateMachineFacts.cs"];
m31_161 [label="Entry Unk.False", span="", cluster="Unk.False", file="StateMachineFacts.cs"];
m31_111 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m31_112 [label="var stateMachine = CreateStateMachine()", span="133-133", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m31_113 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' }))", span="135-136", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m31_114 [label="Assert.Equal(''jobId'', exception.ParamName)", span="138-138", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m31_115 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", span="131-131", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenJobIdIsNull()", file="StateMachineFacts.cs"];
m31_288 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs"];
m31_289 [label="var stateMachine = CreateStateMachineMock()", span="335-335", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs"];
m31_290 [label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="336-336", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs"];
m31_292 [label="stateMachine.Setup(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>()))\r\n                .Throws(exception)", span="339-341", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs"];
m31_293 [label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="343-344", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs"];
m31_294 [label="stateMachine.Verify(x => x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any())))", span="346-350", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs"];
m31_291 [label="var exception = new NotSupportedException()", span="337-337", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs"];
m31_295 [label="Assert.False(result)", span="351-351", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs"];
m31_296 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", span="333-333", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesFailedState_WhenThereIsAnException()", file="StateMachineFacts.cs"];
m31_255 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m31_256 [label="var stateMachine = CreateStateMachineMock()", span="303-303", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m31_257 [label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="304-304", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m31_258 [label="var result = stateMachine.Object.ChangeState(\r\n                context, _state.Object, OldStateName)", span="306-307", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m31_259 [label="stateMachine.Verify(x => x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>()))", span="309-310", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m31_260 [label="Assert.True(result)", span="311-311", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m31_261 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", span="301-301", cluster="HangFire.Core.Tests.States.StateMachineFacts.ChangeState_AppliesState_AndReturnsTrue()", file="StateMachineFacts.cs"];
m31_315 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs"];
m31_316 [label="var handler1 = new Mock<StateHandler>()", span="358-358", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", color=red, community=0, file="StateMachineFacts.cs"];
m31_317 [label="handler1.Setup(x => x.StateName).Returns(StateName)", span="359-359", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs"];
m31_320 [label="_handlers.Add(handler1.Object)", span="364-364", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs"];
m31_325 [label="handler1.Verify(x => x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>()))", span="375-381", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs"];
m31_318 [label="var handler2 = new Mock<StateHandler>()", span="361-361", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", color=red, community=0, file="StateMachineFacts.cs"];
m31_319 [label="handler2.Setup(x => x.StateName).Returns(StateName)", span="362-362", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs"];
m31_321 [label="_handlers.Add(handler2.Object)", span="365-365", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs"];
m31_322 [label="var stateMachine = CreateStateMachine()", span="367-367", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs"];
m31_323 [label="var context = new StateContext(''1'', Job.FromExpression(() => Console.WriteLine()))", span="368-368", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs"];
m31_324 [label="stateMachine.ApplyState(\r\n                context, _state.Object, OldStateName, Enumerable.Empty<IApplyStateFilter>())", span="371-372", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs"];
m31_326 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", span="355-355", cluster="HangFire.Core.Tests.States.StateMachineFacts.ApplyState_RunsAllHandlers()", file="StateMachineFacts.cs"];
m31_128 [label="Entry HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", span="72-72", cluster="HangFire.States.StateMachine.TryToChangeState(string, HangFire.States.State, string[])", file="StateMachineFacts.cs"];
m31_186 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="StateMachineFacts.cs"];
m31_235 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m31_236 [label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = null,\r\n                    LoadException = new JobLoadException()\r\n                })", span="278-284", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m31_237 [label="var stateMachine = CreateStateMachineMock()", span="286-286", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m31_238 [label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="289-289", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m31_239 [label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old''))", span="292-295", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m31_240 [label="Assert.False(result)", span="297-297", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m31_241 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", span="275-275", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_MoveJobToTheFailedState_IfMethodDataCouldNotBeResolved()", file="StateMachineFacts.cs"];
m31_103 [label="Entry Unk.ChangeState", span="", cluster="Unk.ChangeState", file="StateMachineFacts.cs"];
m31_297 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="StateMachineFacts.cs"];
m31_94 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m31_95 [label="var stateMachine = CreateStateMachineMock()", span="113-113", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m31_96 [label="stateMachine.Object.CreateInState(_job, _parameters, _state.Object)", span="115-115", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m31_97 [label="stateMachine.Verify(x => x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null))", span="117-120", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m31_98 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", span="111-111", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ChangesTheStateOfACreatedJob()", file="StateMachineFacts.cs"];
m31_329 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="StateMachineFacts.cs"];
m31_328 [label="Entry Unk.Add", span="", cluster="Unk.Add", file="StateMachineFacts.cs"];
m31_327 [label="Entry Mock<StateHandler>.cstr", span="", cluster="Mock<StateHandler>.cstr", file="StateMachineFacts.cs"];
m31_269 [label="Entry Unk.ApplyState", span="", cluster="Unk.ApplyState", file="StateMachineFacts.cs"];
m31_9 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateMachineFacts.cs"];
m31_137 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m31_138 [label="var disposableMock = new Mock<IDisposable>()", span="166-166", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m31_139 [label="_connection.Setup(x => x.AcquireJobLock(''1'')).Returns(disposableMock.Object)", span="167-167", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m31_142 [label="disposableMock.Verify(x => x.Dispose())", span="173-173", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m31_140 [label="var stateMachine = CreateStateMachine()", span="169-169", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m31_141 [label="stateMachine.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="171-171", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m31_143 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", span="164-164", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_WorksWithinAJobLock()", file="StateMachineFacts.cs"];
m31_120 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m31_121 [label="var stateMachine = CreateStateMachine()", span="144-144", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m31_122 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' }))", span="146-147", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m31_123 [label="Assert.Equal(''toState'', exception.ParamName)", span="149-149", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m31_124 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", span="142-142", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ThrowsAnException_WhenToStateIsNull()", file="StateMachineFacts.cs"];
m31_10 [label="Entry Mock<State>.cstr", span="", cluster="Mock<State>.cstr", file="StateMachineFacts.cs"];
m31_190 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m31_191 [label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="225-230", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m31_192 [label="var stateMachine = CreateStateMachineMock()", span="232-232", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m31_193 [label="stateMachine.Setup(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()))\r\n                .Returns(false)", span="233-234", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m31_194 [label="var result = stateMachine.Object.TryToChangeState(''1'', _state.Object, new[] { ''Old'' })", span="237-237", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m31_195 [label="stateMachine.Verify(x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()))", span="240-240", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m31_196 [label="Assert.False(result)", span="241-241", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m31_197 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", span="222-222", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenStateChangeReturnsFalse()", file="StateMachineFacts.cs"];
m31_11 [label="Entry Unk.Setup", span="", cluster="Unk.Setup", file="StateMachineFacts.cs"];
m31_51 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs"];
m31_346 [label="return new StateMachine(\r\n                _connection.Object,\r\n                _handlers,\r\n                _filters);", span="386-389", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs"];
m31_347 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", span="384-384", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateStateMachine()", file="StateMachineFacts.cs"];
m31_0 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m31_1 [label="_job = Job.FromExpression(() => Console.WriteLine(''Hello''))", span="30-30", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m31_2 [label="_parameters = new Dictionary<string, string>()", span="31-31", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m31_3 [label="_state = new Mock<State>()", span="32-32", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m31_4 [label="_state.Setup(x => x.Name).Returns(StateName)", span="33-33", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m31_5 [label="_connection.Setup(x => x.CreateWriteTransaction())\r\n                .Returns(_transaction.Object)", span="35-36", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m31_6 [label="_connection.Setup(x => x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())).Returns(JobId)", span="37-40", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m31_7 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", span="28-28", cluster="HangFire.Core.Tests.States.StateMachineFacts.StateMachineFacts()", file="StateMachineFacts.cs"];
m31_152 [label="Entry Unk.Dispose", span="", cluster="Unk.Dispose", file="StateMachineFacts.cs"];
m31_37 [label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41", cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.States.StateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StateMachineFacts.cs"];
m31_298 [label="Entry Unk.Throws", span="", cluster="Unk.Throws", file="StateMachineFacts.cs"];
m31_107 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m31_108 [label="var stateMachine = CreateStateMachine()", span="126-126", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m31_109 [label="Assert.Equal(JobId, stateMachine.CreateInState(_job, _parameters, _state.Object))", span="127-127", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m31_110 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", span="124-124", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ReturnsNewJobId()", file="StateMachineFacts.cs"];
m31_73 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m31_74 [label="var job = Job.FromExpression(() => Console.WriteLine(''SomeString''))", span="97-97", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m31_75 [label="_parameters.Add(''Name'', ''Value'')", span="98-98", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m31_77 [label="stateMachine.CreateInState(job, _parameters, _state.Object)", span="102-102", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m31_76 [label="var stateMachine = CreateStateMachine()", span="100-100", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m31_78 [label="_connection.Verify(x => x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>()))", span="104-107", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m31_79 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", span="95-95", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_CreatesExpiredJob()", file="StateMachineFacts.cs"];
m31_148 [label="Entry Unk.AcquireJobLock", span="", cluster="Unk.AcquireJobLock", file="StateMachineFacts.cs"];
m31_119 [label="Entry Unk.TryToChangeState", span="", cluster="Unk.TryToChangeState", file="StateMachineFacts.cs"];
m31_55 [label="Entry Unk.CreateInState", span="", cluster="Unk.CreateInState", file="StateMachineFacts.cs"];
m31_144 [label="Entry Mock<IDisposable>.cstr", span="", cluster="Mock<IDisposable>.cstr", file="StateMachineFacts.cs"];
m31_343 [label="Entry lambda expression", span="376-380", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_13 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_17 [label="Entry lambda expression", span="33-33", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_20 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_24 [label="Entry lambda expression", span="37-40", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_14 [label="Console.WriteLine(''Hello'')", span="30-30", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_15 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_18 [label="x.Name", span="33-33", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_19 [label="Exit lambda expression", span="33-33", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_21 [label="x.CreateWriteTransaction()", span="35-35", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_22 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_25 [label="x.CreateExpiredJob(\r\n                It.IsAny<Job>(),\r\n                It.IsAny<IDictionary<string, string>>(),\r\n                It.IsAny<TimeSpan>())", span="37-40", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_26 [label="Exit lambda expression", span="37-40", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_34 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_35 [label="new StateMachine(null, _handlers, _filters)", span="47-47", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_36 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_42 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_43 [label="new StateMachine(_connection.Object, null, _filters)", span="56-56", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_44 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_53 [label="stateMachine.CreateInState(null, _parameters, _state.Object)", span="67-67", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_52 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_54 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_62 [label="stateMachine.CreateInState(_job, null, _state.Object)", span="78-78", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_61 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_63 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_70 [label="stateMachine.CreateInState(_job, _parameters, null)", span="89-89", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_69 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_71 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_82 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_85 [label="Entry lambda expression", span="104-107", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_83 [label="Console.WriteLine(''SomeString'')", span="97-97", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_84 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_86 [label="x.CreateExpiredJob(\r\n                It.Is<Job>(j => j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''),\r\n                It.Is<Dictionary<string, string>>(d => d[''Name''] == ''Value''),\r\n                It.IsAny<TimeSpan>())", span="104-107", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_87 [label="Exit lambda expression", span="104-107", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_88 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_91 [label="Entry lambda expression", span="106-106", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_89 [label="j.Type == typeof(Console) && j.Arguments[0] == ''SomeString''", span="105-105", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_90 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_92 [label="d[''Name''] == ''Value''", span="106-106", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_93 [label="Exit lambda expression", span="106-106", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_100 [label="Entry lambda expression", span="117-120", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_101 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == JobId && sc.Job == _job),\r\n                _state.Object,\r\n                null)", span="117-120", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_102 [label="Exit lambda expression", span="117-120", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_104 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_105 [label="sc.JobId == JobId && sc.Job == _job", span="118-118", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_106 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_117 [label="stateMachine.TryToChangeState(null, _state.Object, new[] { ''Old'' })", span="136-136", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_116 [label="Entry lambda expression", span="136-136", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_118 [label="Exit lambda expression", span="136-136", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_126 [label="stateMachine.TryToChangeState(''1'', null, new[] { ''Old'' })", span="147-147", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_125 [label="Entry lambda expression", span="147-147", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_127 [label="Exit lambda expression", span="147-147", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_135 [label="stateMachine.TryToChangeState(''1'', _state.Object, null)", span="158-158", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_134 [label="Entry lambda expression", span="158-158", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_136 [label="Exit lambda expression", span="158-158", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_145 [label="Entry lambda expression", span="167-167", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_149 [label="Entry lambda expression", span="173-173", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_146 [label="x.AcquireJobLock(''1'')", span="167-167", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_147 [label="Exit lambda expression", span="167-167", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_150 [label="x.Dispose()", span="173-173", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_151 [label="Exit lambda expression", span="173-173", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_162 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_166 [label="Entry lambda expression", span="190-190", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_169 [label="Entry lambda expression", span="193-193", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_163 [label="x.GetJobData(It.IsAny<string>())", span="180-180", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_164 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_167 [label="x.GetJobData(''1'')", span="190-190", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_168 [label="Exit lambda expression", span="190-190", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_170 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="193-193", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_171 [label="Exit lambda expression", span="193-193", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_180 [label="Entry lambda expression", span="201-201", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_183 [label="Entry lambda expression", span="205-205", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_187 [label="Entry lambda expression", span="217-217", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_181 [label="x.GetJobData(''1'')", span="201-201", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_182 [label="Exit lambda expression", span="201-201", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_184 [label="Console.WriteLine()", span="205-205", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_185 [label="Exit lambda expression", span="205-205", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_188 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="217-217", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_189 [label="Exit lambda expression", span="217-217", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_198 [label="Entry lambda expression", span="225-225", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_201 [label="Entry lambda expression", span="229-229", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_204 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_207 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_199 [label="x.GetJobData(''1'')", span="225-225", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_200 [label="Exit lambda expression", span="225-225", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_202 [label="Console.WriteLine()", span="229-229", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_203 [label="Exit lambda expression", span="229-229", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_205 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="233-233", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_206 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_208 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="240-240", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_209 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_219 [label="Entry lambda expression", span="249-249", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_222 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_225 [label="Entry lambda expression", span="258-258", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_228 [label="Entry lambda expression", span="266-269", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_220 [label="x.GetJobData(''1'')", span="249-249", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_221 [label="Exit lambda expression", span="249-249", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_223 [label="Console.WriteLine()", span="253-253", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_224 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_226 [label="x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>())", span="258-258", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_227 [label="Exit lambda expression", span="258-258", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_229 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')),\r\n                _state.Object,\r\n                ''Old'')", span="266-269", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_230 [label="Exit lambda expression", span="266-269", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_231 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_232 [label="sc.JobId == ''1'' && sc.Job.Type.Name.Equals(''Console'')", span="267-267", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_233 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_243 [label="Entry lambda expression", span="278-278", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_246 [label="Entry lambda expression", span="292-295", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_244 [label="x.GetJobData(''1'')", span="278-278", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_245 [label="Exit lambda expression", span="278-278", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_247 [label="x.ChangeState(\r\n                It.Is<StateContext>(sc => sc.JobId == ''1'' && sc.Job == null),\r\n                It.Is<FailedState>(s => s.Exception != null),\r\n                ''Old'')", span="292-295", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_248 [label="Exit lambda expression", span="292-295", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_249 [label="Entry lambda expression", span="293-293", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_252 [label="Entry lambda expression", span="294-294", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_250 [label="sc.JobId == ''1'' && sc.Job == null", span="293-293", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_251 [label="Exit lambda expression", span="293-293", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_253 [label="s.Exception != null", span="294-294", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_254 [label="Exit lambda expression", span="294-294", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_263 [label="Entry lambda expression", span="304-304", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_267 [label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IApplyStateFilter>>())", span="309-310", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_266 [label="Entry lambda expression", span="309-310", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_264 [label="Console.WriteLine()", span="304-304", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_265 [label="Exit lambda expression", span="304-304", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_268 [label="Exit lambda expression", span="309-310", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_278 [label="Entry lambda expression", span="318-318", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_282 [label="x.ElectState(\r\n                    context, _state.Object, OldStateName, It.IsNotNull<IEnumerable<IElectStateFilter>>())", span="322-323", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_286 [label="x.ApplyState(\r\n                context, electedState.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="328-329", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_281 [label="Entry lambda expression", span="322-323", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_285 [label="Entry lambda expression", span="328-329", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_279 [label="Console.WriteLine()", span="318-318", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_280 [label="Exit lambda expression", span="318-318", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_283 [label="Exit lambda expression", span="322-323", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_287 [label="Exit lambda expression", span="328-329", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_299 [label="Entry lambda expression", span="336-336", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_303 [label="x.ApplyState(\r\n                context, _state.Object, OldStateName, It.IsAny<IEnumerable<IApplyStateFilter>>())", span="339-340", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_306 [label="x.ApplyState(\r\n                context, \r\n                It.Is<FailedState>(s => s.Exception == exception), \r\n                OldStateName,\r\n                It.Is<IEnumerable<IApplyStateFilter>>(f => !f.Any()))", span="346-350", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_309 [label="s.Exception == exception", span="348-348", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_302 [label="Entry lambda expression", span="339-340", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_305 [label="Entry lambda expression", span="346-350", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_300 [label="Console.WriteLine()", span="336-336", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_301 [label="Exit lambda expression", span="336-336", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_304 [label="Exit lambda expression", span="339-340", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_307 [label="Exit lambda expression", span="346-350", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_308 [label="Entry lambda expression", span="348-348", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_311 [label="Entry lambda expression", span="350-350", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_310 [label="Exit lambda expression", span="348-348", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_312 [label="!f.Any()", span="350-350", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_313 [label="Exit lambda expression", span="350-350", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_330 [label="Entry lambda expression", span="359-359", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_333 [label="Entry lambda expression", span="362-362", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_336 [label="Entry lambda expression", span="368-368", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_340 [label="x.Apply(\r\n                It.Is<ApplyStateContext>(c => \r\n                    c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName),\r\n                It.IsAny<IWriteOnlyTransaction>())", span="375-381", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_344 [label="c.JobId == context.JobId \r\n                    && c.Job == context.Job \r\n                    && c.NewState == _state.Object \r\n                    && c.OldStateName == OldStateName", span="377-380", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_339 [label="Entry lambda expression", span="375-381", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_331 [label="x.StateName", span="359-359", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_332 [label="Exit lambda expression", span="359-359", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_334 [label="x.StateName", span="362-362", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_335 [label="Exit lambda expression", span="362-362", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_337 [label="Console.WriteLine()", span="368-368", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_338 [label="Exit lambda expression", span="368-368", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_341 [label="Exit lambda expression", span="375-381", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_345 [label="Exit lambda expression", span="376-380", cluster="lambda expression", file="StateMachineFacts.cs"];
m31_56 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m31_57 [label="var stateMachine = CreateStateMachine()", span="75-75", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m31_58 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(_job, null, _state.Object))", span="77-78", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m31_59 [label="Assert.Equal(''parameters'', exception.ParamName)", span="80-80", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m31_60 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", span="73-73", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenParametersIsNull()", file="StateMachineFacts.cs"];
m31_46 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m31_47 [label="var stateMachine = CreateStateMachine()", span="64-64", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m31_48 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => stateMachine.CreateInState(null, _parameters, _state.Object))", span="66-67", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m31_49 [label="Assert.Equal(''job'', exception.ParamName)", span="69-69", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m31_50 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", span="62-62", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenJobIsNull()", file="StateMachineFacts.cs"];
m31_23 [label="Entry Unk.CreateWriteTransaction", span="", cluster="Unk.CreateWriteTransaction", file="StateMachineFacts.cs"];
m31_172 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m31_173 [label="_connection.Setup(x => x.GetJobData(''1''))\r\n                .Returns(new JobData\r\n                {\r\n                    State = ''Old'',\r\n                    Job = Job.FromExpression(() => Console.WriteLine())\r\n                })", span="201-206", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m31_174 [label="var stateMachine = CreateStateMachineMock()", span="208-208", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m31_175 [label="var result = stateMachine.Object\r\n                .TryToChangeState(''1'', _state.Object, new [] { ''AnotherState'' })", span="211-212", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m31_177 [label="stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<StateContext>(), It.IsAny<State>(), It.IsAny<string>()),\r\n                Times.Never)", span="216-218", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m31_176 [label="Assert.False(result)", span="215-215", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m31_178 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", span="198-198", cluster="HangFire.Core.Tests.States.StateMachineFacts.TryToChangeState_ReturnsFalse_WhenFromStatesArgumentDoesNotContainCurrentState()", file="StateMachineFacts.cs"];
m31_179 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="StateMachineFacts.cs"];
m31_218 [label="Entry Unk.True", span="", cluster="Unk.True", file="StateMachineFacts.cs"];
m31_8 [label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="125-125", cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachineFacts.cs"];
m31_12 [label="Entry Unk.Returns", span="", cluster="Unk.Returns", file="StateMachineFacts.cs"];
m31_29 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m31_30 [label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new StateMachine(null, _handlers, _filters))", span="46-47", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m31_31 [label="Assert.Equal(''connection'', exception.ParamName)", span="49-49", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m31_32 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="44-44", cluster="HangFire.Core.Tests.States.StateMachineFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="StateMachineFacts.cs"];
m31_16 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="StateMachineFacts.cs"];
m31_81 [label="Entry Unk.Verify", span="", cluster="Unk.Verify", file="StateMachineFacts.cs"];
m31_165 [label="Entry Unk.GetJobData", span="", cluster="Unk.GetJobData", file="StateMachineFacts.cs"];
m31_234 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="StateMachineFacts.cs"];
m31_64 [label="Entry HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m31_65 [label="var stateMachine = CreateStateMachine()", span="86-86", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m31_66 [label="var exception = Assert.Throws<ArgumentNullException> (\r\n                () => stateMachine.CreateInState(_job, _parameters, null))", span="88-89", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m31_67 [label="Assert.Equal(''state'', exception.ParamName)", span="91-91", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m31_68 [label="Exit HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", span="84-84", cluster="HangFire.Core.Tests.States.StateMachineFacts.CreateInState_ThrowsAnException_WhenStateIsNull()", file="StateMachineFacts.cs"];
m31_351 [label="HangFire.Core.Tests.States.StateMachineFacts", span="", file="StateMachineFacts.cs"];
m31_352 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m31_353 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m31_354 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m31_355 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m31_356 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m31_357 [label=stateMachine, span="", file="StateMachineFacts.cs"];
m31_358 [label=context, span="", file="StateMachineFacts.cs"];
m31_359 [label=context, span="", file="StateMachineFacts.cs"];
m31_360 [label=electedState, span="", file="StateMachineFacts.cs"];
m31_361 [label=context, span="", file="StateMachineFacts.cs"];
m31_362 [label=exception, span="", file="StateMachineFacts.cs"];
m31_363 [label=context, span="", file="StateMachineFacts.cs"];
m32_6 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="SucceededState.cs"];
m32_8 [label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m32_9 [label="transaction.IncrementCounter(''stats:succeeded'')", span="57-57", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m32_10 [label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="54-54", cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m32_11 [label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="33-33", cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="SucceededState.cs"];
m32_3 [label="Entry HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m32_4 [label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="46-49", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m32_5 [label="Exit HangFire.States.SucceededState.SerializeData()", span="44-44", cluster="HangFire.States.SucceededState.SerializeData()", file="SucceededState.cs"];
m32_15 [label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="35-35", cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="SucceededState.cs"];
m32_0 [label="Entry HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m32_1 [label="SucceededAt = DateTime.UtcNow", span="29-29", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m32_2 [label="Exit HangFire.States.SucceededState.SucceededState()", span="27-27", cluster="HangFire.States.SucceededState.SucceededState()", file="SucceededState.cs"];
m32_7 [label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50", cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="SucceededState.cs"];
m32_12 [label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="60-60", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m32_13 [label="transaction.DecrementCounter(''stats:succeeded'')", span="63-63", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m32_14 [label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", span="60-60", cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.States.ApplyStateContext, HangFire.Storage.IWriteOnlyTransaction)", file="SucceededState.cs"];
m32_16 [label="HangFire.States.SucceededState", span="", file="SucceededState.cs"];
m35_13 [label="Entry HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", span="51-51", cluster="HangFire.Common.ExpressionUtil.HashCodeCombiner.AddObject(object)", file="UnaryExpressionFingerprint.cs"];
m35_9 [label="Entry HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="UnaryExpressionFingerprint.cs"];
m35_10 [label="combiner.AddObject(Method)", span="39-39", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="UnaryExpressionFingerprint.cs"];
m35_11 [label="base.AddToHashCodeCombiner(combiner)", span="40-40", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="UnaryExpressionFingerprint.cs"];
m35_12 [label="Exit HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="37-37", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="UnaryExpressionFingerprint.cs"];
m35_8 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", span="30-30", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.Equals(HangFire.Common.ExpressionUtil.ExpressionFingerprint)", file="UnaryExpressionFingerprint.cs"];
m35_7 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="UnaryExpressionFingerprint.cs"];
m35_14 [label="Entry HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", span="24-24", cluster="HangFire.Common.ExpressionUtil.ExpressionFingerprint.AddToHashCodeCombiner(HangFire.Common.ExpressionUtil.HashCodeCombiner)", file="UnaryExpressionFingerprint.cs"];
m35_0 [label="Entry HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.UnaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.UnaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="UnaryExpressionFingerprint.cs"];
m35_1 [label="Method = method", span="23-23", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.UnaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="UnaryExpressionFingerprint.cs"];
m35_2 [label="Exit HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.UnaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", span="17-17", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.UnaryExpressionFingerprint(System.Linq.Expressions.ExpressionType, System.Type, System.Reflection.MethodInfo)", file="UnaryExpressionFingerprint.cs"];
m35_3 [label="Entry HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", span="29-29", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", file="UnaryExpressionFingerprint.cs"];
m35_4 [label="UnaryExpressionFingerprint other = obj as UnaryExpressionFingerprint", span="31-31", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", file="UnaryExpressionFingerprint.cs"];
m35_5 [label="return (other != null)\r\n                   && Equals(this.Method, other.Method)\r\n                   && this.Equals(other);", span="32-34", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", file="UnaryExpressionFingerprint.cs"];
m35_6 [label="Exit HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", span="29-29", cluster="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint.Equals(object)", file="UnaryExpressionFingerprint.cs"];
m35_15 [label="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint", span="", file="UnaryExpressionFingerprint.cs"];
m0_3 -> m0_4  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=2, style=dotted];
m0_5 -> m0_8  [key=2, style=dotted];
m0_6 -> m0_3  [key=0, style=bold, color=blue];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HashCodeCombiner"];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=2, style=dotted];
m0_12 -> m0_9  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_15 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint"];
m0_15 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint"];
m0_15 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint"];
m0_15 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.BinaryExpressionFingerprint"];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_5  [key=0, style=solid];
m1_2 -> m1_6  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_8  [key=2, style=dotted];
m1_5 -> m1_0  [key=0, style=bold, color=blue];
m1_7 -> m1_9  [key=0, style=solid];
m1_7 -> m1_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Linq.Expressions.Expression arg"];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_12  [key=2, style=dotted];
m1_9 -> m1_13  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_14  [key=2, style=dotted];
m1_11 -> m1_7  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=2, style=dotted];
m2_5 -> m2_2  [key=0, style=bold, color=blue];
m2_7 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ConstantExpressionFingerprint"];
m3_5 -> m3_2  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=1, style=dashed, color=green, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyTransaction"];
m3_1 -> m3_0  [key=0, style=bold, color=blue];
m3_1 -> m3_3  [key=0, style=solid, color=green];
m3_1 -> m3_2  [key=0, style=solid];
m3_6 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_6 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_11  [key=2, style=dotted];
m3_29 -> m3_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_30 -> m3_28  [key=0, style=bold, color=blue];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_4  [key=0, style=solid];
m3_2 -> m3_5  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid, color=green];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_6  [key=2, style=dotted];
m3_4 -> m3_0  [key=0, style=bold, color=blue];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=2, style=dotted];
m3_9 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_7 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m3_7 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.DefaultExpressionFingerprint"];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m3_8 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m3_10 -> m3_6  [key=0, style=bold, color=blue];
m3_31 -> m3_32  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_17  [key=2, style=dotted];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [key=2, style=dotted];
m3_16 -> m3_12  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_17  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_17  [key=2, style=dotted];
m3_27 -> m3_23  [key=0, style=bold, color=blue];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_34  [key=2, style=dotted];
m3_32 -> m3_17  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_16  [key=0, style=solid];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=0, style=solid];
m3_33 -> m3_31  [key=0, style=bold, color=blue];
m3_18 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_18 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_11  [key=2, style=dotted];
m3_21 -> m3_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_19 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m3_20 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m3_22 -> m3_18  [key=0, style=bold, color=blue];
m3_35 -> m3_3  [key=1, style=dashed, color=green, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue"];
m3_35 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue"];
m3_35 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue"];
m3_35 -> m3_29  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.DataTypes.SqlServerWriteOnlyValue"];
m3_36 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_36 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_37 -> m3_13  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m3_37 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m3_38 -> m3_15  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m3_39 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_39 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_40 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m3_40 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m3_41 -> m3_26  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m3_42 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_43 -> m3_32  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_4  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_21  [key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_22  [key=2, style=dotted];
m5_20 -> m5_17  [key=0, style=bold, color=blue];
m5_34 -> m5_35  [key=0, style=solid];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_21  [key=2, style=dotted];
m5_35 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label=handler];
m5_35 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label=handler];
m5_36 -> m5_37  [key=0, style=solid];
m5_36 -> m5_11  [key=2, style=dotted];
m5_36 -> m5_39  [key=2, style=dotted];
m5_36 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label=context];
m5_37 -> m5_38  [key=0, style=solid];
m5_37 -> m5_40  [key=2, style=dotted];
m5_37 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_38 -> m5_34  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_7  [key=2, style=dotted];
m5_1 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_1 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=job];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_8  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_10  [key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_9  [key=2, style=dotted];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_11  [key=2, style=dotted];
m5_5 -> m5_12  [key=2, style=dotted];
m5_6 -> m5_0  [key=0, style=bold, color=blue];
m5_23 -> m5_24  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_21  [key=2, style=dotted];
m5_25 -> m5_26  [key=0, style=solid];
m5_25 -> m5_28  [key=2, style=dotted];
m5_26 -> m5_27  [key=0, style=solid];
m5_26 -> m5_29  [key=2, style=dotted];
m5_26 -> m5_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_27 -> m5_23  [key=0, style=bold, color=blue];
m5_41 -> m5_42  [key=0, style=solid];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=2, style=dotted];
m5_15 -> m5_13  [key=0, style=bold, color=blue];
m5_30 -> m5_31  [key=0, style=solid];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_33  [key=2, style=dotted];
m5_32 -> m5_30  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_28  [key=2, style=dotted];
m5_43 -> m5_41  [key=0, style=bold, color=blue];
m5_44 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m5_44 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m5_44 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m5_44 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m5_44 -> m5_25  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m5_44 -> m5_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m5_44 -> m5_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m5_44 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m5_44 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.EnqueuedStateHandlerFacts"];
m5_45 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label=handler];
m5_46 -> m5_42  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_22 -> m6_23  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_18  [key=2, style=dotted];
m6_23 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_7  [key=2, style=dotted];
m6_24 -> m6_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_21  [key=2, style=dotted];
m6_26 -> m6_22  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=2, style=dotted];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m6_4 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_7  [key=2, style=dotted];
m6_5 -> m6_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_6 -> m6_4  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_18  [key=2, style=dotted];
m6_13 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_13 -> m6_16  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_19  [key=2, style=dotted];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_20  [key=2, style=dotted];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_21  [key=2, style=dotted];
m6_17 -> m6_12  [key=0, style=bold, color=blue];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_38  [key=0, style=bold, color=blue];
m6_52 -> m6_53  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_11  [key=2, style=dotted];
m6_10 -> m6_8  [key=0, style=bold, color=blue];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=2, style=dotted];
m6_27 -> m6_28  [key=0, style=solid];
m6_29 -> m6_27  [key=0, style=bold, color=blue];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_30  [key=2, style=dotted];
m6_35 -> m6_36  [key=0, style=solid];
m6_37 -> m6_35  [key=0, style=bold, color=blue];
m6_53 -> m6_54  [key=0, style=solid];
m6_53 -> m6_38  [key=2, style=dotted];
m6_54 -> m6_52  [key=0, style=bold, color=blue];
m6_31 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_18  [key=2, style=dotted];
m6_32 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_7  [key=2, style=dotted];
m6_33 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_34 -> m6_31  [key=0, style=bold, color=blue];
m6_18 -> m6_40  [key=0, style=solid];
m6_40 -> m6_41  [key=0, style=solid];
m6_40 -> m6_47  [key=2, style=dotted];
m6_40 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=storage];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_48  [key=2, style=dotted];
m6_41 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=connection];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_51  [key=2, style=dotted];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_49  [key=2, style=dotted];
m6_42 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_42 -> m6_44  [key=1, style=dashed, color=darkseagreen4, label=job];
m6_43 -> m6_44  [key=0, style=solid];
m6_43 -> m6_50  [key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_11  [key=2, style=dotted];
m6_46 -> m6_18  [key=0, style=bold, color=blue];
m6_55 -> m6_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreatedContextFacts"];
m6_55 -> m6_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreatedContextFacts"];
m6_55 -> m6_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreatedContextFacts"];
m6_55 -> m6_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreatedContextFacts"];
m6_55 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreatedContextFacts"];
m6_55 -> m6_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Core.Tests.Client.CreatedContextFacts"];
m6_56 -> m6_28  [key=1, style=dashed, color=darkseagreen4, label=context];
m6_57 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label=context];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain"];
m7_0 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain"];
m7_0 -> m7_2  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m7_0 -> m7_10  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_5  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_9  [key=0, style=solid];
m7_7 -> m7_12  [key=2, style=dotted];
m7_2 -> m7_11  [key=0, style=solid];
m7_4 -> m7_11  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_5 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_5 -> m7_5  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_10  [key=0, style=solid];
m7_9 -> m7_6  [key=0, style=solid];
m7_9 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label=i];
m7_10 -> m7_11  [key=0, style=solid];
m7_8 -> m7_11  [key=0, style=solid];
m7_11 -> m7_0  [key=0, style=bold, color=blue];
m7_16 -> m7_17  [key=0, style=solid];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_21  [key=2, style=dotted];
m7_17 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=combiner];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_22  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_16  [key=0, style=bold, color=blue];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_0  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_0  [key=2, style=dotted];
m7_15 -> m7_13  [key=0, style=bold, color=blue];
m7_23 -> m7_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain"];
m7_23 -> m7_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain"];
m7_23 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain"];
m7_23 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain"];
m7_23 -> m7_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ExpressionFingerprintChain"];
m8_0 -> m8_1  [key=0, style=solid, color=red];
m8_0 -> m8_2  [key=1, style=dashed, color=red, label="HangFire.Server.WorkerContext"];
m8_1 -> m8_2  [key=0, style=solid, color=red];
m8_2 -> m8_3  [key=0, style=solid, color=red];
m8_3 -> m8_4  [key=0, style=solid, color=red];
m8_3 -> m8_7  [key=2, style=dotted];
m8_3 -> m8_8  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid, color=red];
m8_4 -> m8_9  [key=2, style=dotted, color=red];
m8_4 -> m8_7  [key=2, style=dotted, color=red];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_10  [key=2, style=dotted];
m8_6 -> m8_0  [key=0, style=bold, color=blue];
m8_29 -> m8_30  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_30 -> m8_36  [key=0, style=solid];
m8_30 -> m8_37  [key=0, style=solid];
m8_30 -> m8_40  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_31 -> m8_41  [key=2, style=dotted];
m8_36 -> m8_40  [key=0, style=solid];
m8_37 -> m8_38  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_42  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_43  [key=2, style=dotted];
m8_35 -> m8_30  [key=0, style=solid];
m8_35 -> m8_44  [key=2, style=dotted];
m8_38 -> m8_39  [key=0, style=solid];
m8_39 -> m8_40  [key=0, style=solid];
m8_39 -> m8_45  [key=2, style=dotted];
m8_39 -> m8_46  [key=2, style=dotted];
m8_40 -> m8_29  [key=0, style=bold, color=blue];
m8_67 -> m8_67  [key=3, color=darkorchid, style=bold, label="Field variable string StateName"];
m8_70 -> m8_70  [key=3, color=darkorchid, style=bold, label="Field variable string OldStateName"];
m8_11 -> m8_12  [key=0, style=solid];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=2, style=dotted];
m8_13 -> m8_11  [key=0, style=bold, color=blue];
m8_43 -> m8_47  [key=0, style=solid];
m8_43 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m8_43 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m8_43 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m8_43 -> m8_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m8_43 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m8_43 -> m8_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m8_47 -> m8_48  [key=0, style=solid];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_50  [key=0, style=solid];
m8_48 -> m8_64  [key=2, style=dotted];
m8_48 -> m8_65  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_52 -> m8_66  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_7  [key=2, style=dotted];
m8_57 -> m8_69  [key=2, style=dotted];
m8_60 -> m8_62  [key=0, style=solid];
m8_60 -> m8_70  [key=2, style=dotted];
m8_60 -> m8_65  [key=2, style=dotted];
m8_61 -> m8_62  [key=0, style=solid];
m8_61 -> m8_71  [key=2, style=dotted];
m8_61 -> m8_65  [key=2, style=dotted];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_72  [key=2, style=dotted];
m8_49 -> m8_63  [key=0, style=solid];
m8_50 -> m8_51  [key=0, style=solid];
m8_51 -> m8_52  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_67  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_58  [key=0, style=solid];
m8_54 -> m8_68  [key=2, style=dotted];
m8_55 -> m8_56  [key=0, style=solid];
m8_58 -> m8_59  [key=0, style=solid];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_59  [key=1, style=dashed, color=darkseagreen4, label=exception];
m8_56 -> m8_61  [key=1, style=dashed, color=darkseagreen4, label=exception];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_61  [key=0, style=solid];
m8_63 -> m8_43  [key=0, style=bold, color=blue];
m8_21 -> m8_22  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_22 -> m8_26  [key=2, style=dotted];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_27  [key=2, style=dotted];
m8_24 -> m8_25  [key=0, style=solid];
m8_24 -> m8_28  [key=2, style=dotted];
m8_25 -> m8_21  [key=0, style=bold, color=blue];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPayload"];
m8_16 -> m8_17  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_18 -> m8_20  [key=2, style=dotted];
m8_19 -> m8_15  [key=0, style=bold, color=blue];
m8_73 -> m8_1  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m8_73 -> m8_2  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m8_73 -> m8_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_4  [key=1, style=dashed, color=red, label="HangFire.Server.Worker"];
m8_73 -> m8_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_34  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m8_73 -> m8_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.Worker"];
m9_12 -> m9_13  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=2, style=dotted];
m9_13 -> m9_16  [key=2, style=dotted];
m9_14 -> m9_12  [key=0, style=bold, color=blue];
m9_37 -> m9_38  [key=0, style=solid];
m9_37 -> m9_46  [key=2, style=dotted];
m9_37 -> m9_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m9_28 -> m9_31  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m9_28 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Storage.InvocationData"];
m9_28 -> m9_33  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m9_28 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m9_28 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m9_28 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m9_28 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_28 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_41  [key=2, style=dotted];
m9_29 -> m9_42  [key=2, style=dotted];
m9_29 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_29 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_29 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_29 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_29 -> m9_39  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_43  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_43  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_43  [key=2, style=dotted];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_44  [key=2, style=dotted];
m9_33 -> m9_43  [key=2, style=dotted];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_45  [key=2, style=dotted];
m9_34 -> m9_43  [key=2, style=dotted];
m9_34 -> m9_34  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Linq.Expressions.Expression VisitBinary"];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_46  [key=2, style=dotted];
m9_36 -> m9_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_39 -> m9_40  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_16  [key=2, style=dotted];
m9_35 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_35 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_47  [key=2, style=dotted];
m9_40 -> m9_28  [key=0, style=bold, color=blue];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_25  [key=2, style=dotted];
m9_96 -> m9_45  [key=2, style=dotted];
m9_96 -> m9_98  [key=2, style=dotted];
m9_95 -> m9_96  [key=0, style=solid];
m9_97 -> m9_95  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m9_0 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label=IRedisClient];
m9_0 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorage"];
m9_1 -> m9_2  [key=0, style=solid];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_6  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_7  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_0  [key=0, style=bold, color=blue];
m9_138 -> m9_139  [key=0, style=solid];
m9_138 -> m9_46  [key=2, style=dotted];
m9_138 -> m9_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_134 -> m9_135  [key=0, style=solid];
m9_134 -> m9_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_134 -> m9_142  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_134 -> m9_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_134 -> m9_146  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_134 -> m9_138  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_134 -> m9_150  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_135 -> m9_136  [key=0, style=solid];
m9_135 -> m9_16  [key=2, style=dotted];
m9_135 -> m9_137  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_135 -> m9_138  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_135 -> m9_139  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_136 -> m9_137  [key=0, style=solid];
m9_136 -> m9_46  [key=2, style=dotted];
m9_136 -> m9_141  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_137 -> m9_138  [key=0, style=solid];
m9_137 -> m9_46  [key=2, style=dotted];
m9_137 -> m9_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_139 -> m9_140  [key=0, style=solid];
m9_139 -> m9_47  [key=2, style=dotted];
m9_140 -> m9_134  [key=0, style=bold, color=blue];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_58  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_56 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_56 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_56 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_56 -> m9_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m9_56 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_56 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_16  [key=2, style=dotted];
m9_57 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_57 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_57 -> m9_63  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_46  [key=2, style=dotted];
m9_58 -> m9_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_46  [key=2, style=dotted];
m9_59 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_59 -> m9_59  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Linq.Expressions.Expression VisitConstant"];
m9_60 -> m9_61  [key=0, style=solid];
m9_60 -> m9_63  [key=0, style=solid];
m9_62 -> m9_60  [key=0, style=solid];
m9_62 -> m9_46  [key=2, style=dotted];
m9_62 -> m9_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_47  [key=2, style=dotted];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m9_64 -> m9_56  [key=0, style=bold, color=blue];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_111  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_100 -> m9_101  [key=0, style=solid];
m9_100 -> m9_116  [key=2, style=dotted];
m9_100 -> m9_104  [key=1, style=dashed, color=darkseagreen4, label=serverNames];
m9_100 -> m9_100  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Linq.Expressions.Expression VisitIndex"];
m9_111 -> m9_112  [key=0, style=solid];
m9_111 -> m9_109  [key=0, style=solid];
m9_111 -> m9_121  [key=2, style=dotted];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_72  [key=2, style=dotted];
m9_101 -> m9_106  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m9_101 -> m9_128  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m9_101 -> m9_109  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m9_104 -> m9_105  [key=0, style=solid];
m9_104 -> m9_107  [key=0, style=solid];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_111  [key=1, style=dashed, color=darkseagreen4, label=utcNow];
m9_106 -> m9_104  [key=0, style=solid];
m9_106 -> m9_46  [key=2, style=dotted];
m9_106 -> m9_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_106 -> m9_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_114  [key=0, style=solid];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_117  [key=2, style=dotted];
m9_103 -> m9_106  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_103 -> m9_107  [key=1, style=dashed, color=darkseagreen4, label=pipeline];
m9_107 -> m9_108  [key=0, style=solid];
m9_107 -> m9_118  [key=2, style=dotted];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_105 -> m9_128  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_108 -> m9_109  [key=0, style=solid];
m9_108 -> m9_113  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m9_108 -> m9_114  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m9_108 -> m9_108  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Linq.Expressions.Expression VisitLambda"];
m9_113 -> m9_109  [key=0, style=solid];
m9_113 -> m9_113  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m9_113 -> m9_114  [key=1, style=dashed, color=darkseagreen4, label=removedServerCount];
m9_114 -> m9_115  [key=0, style=solid];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_119  [key=2, style=dotted];
m9_110 -> m9_120  [key=2, style=dotted];
m9_110 -> m9_110  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m9_110 -> m9_112  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_81  [key=2, style=dotted];
m9_112 -> m9_112  [key=1, style=dashed, color=darkseagreen4, label=heartbeat];
m9_115 -> m9_99  [key=0, style=bold, color=blue];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [key=2, style=dotted];
m9_10 -> m9_8  [key=0, style=bold, color=blue];
m9_149 -> m9_150  [key=0, style=solid];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_25  [key=2, style=dotted];
m9_49 -> m9_51  [key=2, style=dotted];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_25  [key=2, style=dotted];
m9_53 -> m9_55  [key=2, style=dotted];
m9_48 -> m9_49  [key=0, style=solid];
m9_52 -> m9_53  [key=0, style=solid];
m9_50 -> m9_48  [key=0, style=bold, color=blue];
m9_54 -> m9_52  [key=0, style=bold, color=blue];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_68  [key=2, style=dotted];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_25  [key=2, style=dotted];
m9_70 -> m9_72  [key=2, style=dotted];
m9_70 -> m9_73  [key=2, style=dotted];
m9_70 -> m9_45  [key=2, style=dotted];
m9_70 -> m9_51  [key=2, style=dotted];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_25  [key=2, style=dotted];
m9_75 -> m9_77  [key=2, style=dotted];
m9_65 -> m9_66  [key=0, style=solid];
m9_69 -> m9_70  [key=0, style=solid];
m9_74 -> m9_75  [key=0, style=solid];
m9_67 -> m9_65  [key=0, style=bold, color=blue];
m9_71 -> m9_69  [key=0, style=bold, color=blue];
m9_76 -> m9_74  [key=0, style=bold, color=blue];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_90  [key=2, style=dotted];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_25  [key=2, style=dotted];
m9_92 -> m9_94  [key=2, style=dotted];
m9_87 -> m9_88  [key=0, style=solid];
m9_91 -> m9_92  [key=0, style=solid];
m9_89 -> m9_87  [key=0, style=bold, color=blue];
m9_93 -> m9_91  [key=0, style=bold, color=blue];
m9_128 -> m9_129  [key=0, style=solid];
m9_128 -> m9_130  [key=2, style=dotted];
m9_128 -> m9_131  [key=2, style=dotted];
m9_128 -> m9_132  [key=2, style=dotted];
m9_128 -> m9_133  [key=2, style=dotted];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_125  [key=2, style=dotted];
m9_123 -> m9_126  [key=2, style=dotted];
m9_122 -> m9_123  [key=0, style=solid];
m9_127 -> m9_128  [key=0, style=solid];
m9_124 -> m9_122  [key=0, style=bold, color=blue];
m9_129 -> m9_127  [key=0, style=bold, color=blue];
m9_142 -> m9_143  [key=0, style=solid];
m9_142 -> m9_25  [key=2, style=dotted];
m9_142 -> m9_144  [key=2, style=dotted];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_25  [key=2, style=dotted];
m9_146 -> m9_148  [key=2, style=dotted];
m9_150 -> m9_151  [key=0, style=solid];
m9_150 -> m9_25  [key=2, style=dotted];
m9_150 -> m9_148  [key=2, style=dotted];
m9_141 -> m9_142  [key=0, style=solid];
m9_145 -> m9_146  [key=0, style=solid];
m9_143 -> m9_141  [key=0, style=bold, color=blue];
m9_147 -> m9_145  [key=0, style=bold, color=blue];
m9_151 -> m9_149  [key=0, style=bold, color=blue];
m9_78 -> m9_79  [key=0, style=solid];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_81  [key=2, style=dotted];
m9_80 -> m9_78  [key=0, style=bold, color=blue];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_46  [key=2, style=dotted];
m9_84 -> m9_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_81 -> m9_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_81 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_81 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_16  [key=2, style=dotted];
m9_82 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_82 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m9_83 -> m9_84  [key=0, style=solid];
m9_83 -> m9_46  [key=2, style=dotted];
m9_83 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_47  [key=2, style=dotted];
m9_86 -> m9_81  [key=0, style=bold, color=blue];
m9_17 -> m9_18  [key=0, style=solid];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_20  [key=2, style=dotted];
m9_18 -> m9_21  [key=2, style=dotted];
m9_19 -> m9_17  [key=0, style=bold, color=blue];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=2, style=dotted];
m9_23 -> m9_26  [key=2, style=dotted];
m9_23 -> m9_27  [key=2, style=dotted];
m9_24 -> m9_22  [key=0, style=bold, color=blue];
m9_152 -> m9_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_23  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_103  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_152 -> m9_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Redis.RedisStorageConnection"];
m9_153 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m9_154 -> m9_49  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_154 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m9_155 -> m9_53  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m9_156 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_156 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_156 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_157 -> m9_70  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_158 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label=queue1];
m9_159 -> m9_88  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_159 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_160 -> m9_123  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_160 -> m9_128  [key=1, style=dashed, color=darkseagreen4, label=name];
m9_161 -> m9_128  [key=1, style=dashed, color=darkseagreen4, label=heartbeats];
m9_162 -> m9_142  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_163 -> m9_142  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_163 -> m9_146  [key=1, style=dashed, color=darkseagreen4, label=string];
m9_163 -> m9_150  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_1  [key=0, style=solid, color=red];
m10_1 -> m10_2  [key=0, style=solid, color=red];
m10_1 -> m10_6  [key=2, style=dotted, color=red];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_7  [key=2, style=dotted];
m10_2 -> m10_8  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_9  [key=2, style=dotted];
m10_3 -> m10_8  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_10  [key=2, style=dotted];
m10_4 -> m10_8  [key=2, style=dotted];
m10_5 -> m10_0  [key=0, style=bold, color=blue];
m11_101 -> m11_256  [key=0, style=solid];
m11_256 -> m11_257  [key=0, style=solid];
m11_256 -> m11_254  [key=2, style=dotted];
m11_256 -> m11_255  [key=2, style=dotted];
m11_257 -> m11_101  [key=0, style=bold, color=blue];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_105 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_108  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_106 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_106 -> m11_106  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_31  [key=2, style=dotted];
m11_108 -> m11_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_101  [key=2, style=dotted];
m11_109 -> m11_105  [key=0, style=bold, color=blue];
m11_10 -> m11_11  [key=0, style=solid];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_19  [key=2, style=dotted];
m11_11 -> m11_17  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_20  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_24  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_15  [key=0, style=solid];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_21  [key=2, style=dotted];
m11_14 -> m11_22  [key=2, style=dotted];
m11_14 -> m11_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_15 -> m11_16  [key=0, style=solid];
m11_15 -> m11_17  [key=0, style=solid];
m11_16 -> m11_15  [key=0, style=solid];
m11_16 -> m11_23  [key=2, style=dotted];
m11_18 -> m11_10  [key=0, style=bold, color=blue];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_31  [key=2, style=dotted];
m11_70 -> m11_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_71 -> m11_69  [key=0, style=bold, color=blue];
m11_229 -> m11_230  [key=0, style=solid];
m11_229 -> m11_234  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_229 -> m11_237  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_230 -> m11_231  [key=0, style=solid];
m11_230 -> m11_232  [key=0, style=solid];
m11_234 -> m11_235  [key=0, style=solid];
m11_234 -> m11_31  [key=2, style=dotted];
m11_234 -> m11_236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_231 -> m11_235  [key=0, style=solid];
m11_231 -> m11_9  [key=2, style=dotted];
m11_232 -> m11_233  [key=0, style=solid];
m11_232 -> m11_234  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_232 -> m11_237  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_232 -> m11_232  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m11_233 -> m11_234  [key=0, style=solid];
m11_233 -> m11_101  [key=2, style=dotted];
m11_235 -> m11_229  [key=0, style=bold, color=blue];
m11_239 -> m11_240  [key=0, style=solid];
m11_239 -> m11_244  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_239 -> m11_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_240 -> m11_241  [key=0, style=solid];
m11_240 -> m11_242  [key=0, style=solid];
m11_244 -> m11_245  [key=0, style=solid];
m11_244 -> m11_31  [key=2, style=dotted];
m11_244 -> m11_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_241 -> m11_245  [key=0, style=solid];
m11_241 -> m11_9  [key=2, style=dotted];
m11_242 -> m11_243  [key=0, style=solid];
m11_242 -> m11_244  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_242 -> m11_247  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_242 -> m11_242  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m11_243 -> m11_244  [key=0, style=solid];
m11_243 -> m11_117  [key=2, style=dotted];
m11_245 -> m11_239  [key=0, style=bold, color=blue];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_31  [key=2, style=dotted];
m11_82 -> m11_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_83 -> m11_81  [key=0, style=bold, color=blue];
m11_255 -> m11_260  [key=0, style=solid];
m11_260 -> m11_261  [key=0, style=solid];
m11_260 -> m11_262  [key=2, style=dotted];
m11_261 -> m11_255  [key=0, style=bold, color=blue];
m11_199 -> m11_200  [key=0, style=solid];
m11_199 -> m11_204  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_199 -> m11_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_200 -> m11_201  [key=0, style=solid];
m11_200 -> m11_202  [key=0, style=solid];
m11_204 -> m11_205  [key=0, style=solid];
m11_204 -> m11_31  [key=2, style=dotted];
m11_204 -> m11_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_201 -> m11_205  [key=0, style=solid];
m11_201 -> m11_9  [key=2, style=dotted];
m11_202 -> m11_203  [key=0, style=solid];
m11_202 -> m11_204  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_202 -> m11_207  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_202 -> m11_202  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m11_203 -> m11_204  [key=0, style=solid];
m11_203 -> m11_101  [key=2, style=dotted];
m11_205 -> m11_199  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
m11_0 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m11_0 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="IsolationLevel?"];
m11_0 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_5  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_2 -> m11_8  [key=0, style=solid];
m11_2 -> m11_9  [key=2, style=dotted];
m11_4 -> m11_8  [key=0, style=solid];
m11_4 -> m11_9  [key=2, style=dotted];
m11_8 -> m11_0  [key=0, style=bold, color=blue];
m11_145 -> m11_258  [key=0, style=solid];
m11_258 -> m11_259  [key=0, style=solid];
m11_258 -> m11_254  [key=2, style=dotted];
m11_258 -> m11_255  [key=2, style=dotted];
m11_259 -> m11_145  [key=0, style=bold, color=blue];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_42 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m11_43 -> m11_43  [key=3, color=darkorchid, style=bold, label="Local variable string addAndSetStateSql"];
m11_44 -> m11_45  [key=0, style=solid];
m11_44 -> m11_31  [key=2, style=dotted];
m11_44 -> m11_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_45 -> m11_42  [key=0, style=bold, color=blue];
m11_209 -> m11_210  [key=0, style=solid];
m11_209 -> m11_214  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_209 -> m11_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_210 -> m11_211  [key=0, style=solid];
m11_210 -> m11_212  [key=0, style=solid];
m11_214 -> m11_215  [key=0, style=solid];
m11_214 -> m11_31  [key=2, style=dotted];
m11_214 -> m11_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_211 -> m11_215  [key=0, style=solid];
m11_211 -> m11_9  [key=2, style=dotted];
m11_212 -> m11_213  [key=0, style=solid];
m11_212 -> m11_214  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_212 -> m11_217  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_212 -> m11_212  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m11_213 -> m11_214  [key=0, style=solid];
m11_213 -> m11_117  [key=2, style=dotted];
m11_215 -> m11_209  [key=0, style=bold, color=blue];
m11_51 -> m11_52  [key=0, style=solid];
m11_51 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_51 -> m11_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_52 -> m11_53  [key=0, style=solid];
m11_52 -> m11_56  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m11_52 -> m11_52  [key=3, color=darkorchid, style=bold, label="Local variable string addStateSql"];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_31  [key=2, style=dotted];
m11_53 -> m11_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_54 -> m11_51  [key=0, style=bold, color=blue];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_88 -> m11_89  [key=0, style=solid];
m11_88 -> m11_31  [key=2, style=dotted];
m11_88 -> m11_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_89 -> m11_87  [key=0, style=bold, color=blue];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_179 -> m11_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_180 -> m11_181  [key=0, style=solid];
m11_180 -> m11_182  [key=0, style=solid];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_31  [key=2, style=dotted];
m11_184 -> m11_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_181 -> m11_185  [key=0, style=solid];
m11_181 -> m11_9  [key=2, style=dotted];
m11_182 -> m11_183  [key=0, style=solid];
m11_182 -> m11_184  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_182 -> m11_187  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_182 -> m11_182  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_101  [key=2, style=dotted];
m11_185 -> m11_179  [key=0, style=bold, color=blue];
m11_93 -> m11_94  [key=0, style=solid];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_96  [key=2, style=dotted];
m11_95 -> m11_93  [key=0, style=bold, color=blue];
m11_31 -> m11_249  [key=0, style=solid];
m11_31 -> m11_29  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_37  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_44  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_53  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_61  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_70  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_76  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_82  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_88  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_99  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_108  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_115  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_123  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_131  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_158  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_184  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_194  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_204  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_214  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_224  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_234  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_31 -> m11_244  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<SqlConnection> action"];
m11_249 -> m11_250  [key=0, style=solid];
m11_249 -> m11_251  [key=2, style=dotted];
m11_250 -> m11_31  [key=0, style=bold, color=blue];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_58 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_59 -> m11_60  [key=0, style=solid];
m11_59 -> m11_63  [key=2, style=dotted];
m11_61 -> m11_62  [key=0, style=solid];
m11_61 -> m11_31  [key=2, style=dotted];
m11_61 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_60 -> m11_61  [key=0, style=solid];
m11_60 -> m11_64  [key=2, style=dotted];
m11_60 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m11_62 -> m11_58  [key=0, style=bold, color=blue];
m11_75 -> m11_76  [key=0, style=solid];
m11_75 -> m11_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_76 -> m11_77  [key=0, style=solid];
m11_76 -> m11_31  [key=2, style=dotted];
m11_76 -> m11_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_77 -> m11_75  [key=0, style=bold, color=blue];
m11_136 -> m11_137  [key=0, style=solid];
m11_136 -> m11_139  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m11_136 -> m11_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_136 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_136 -> m11_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_137 -> m11_138  [key=0, style=solid];
m11_137 -> m11_139  [key=0, style=solid];
m11_139 -> m11_140  [key=0, style=solid];
m11_139 -> m11_141  [key=0, style=solid];
m11_143 -> m11_144  [key=0, style=solid];
m11_143 -> m11_146  [key=2, style=dotted];
m11_143 -> m11_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_138 -> m11_144  [key=0, style=solid];
m11_138 -> m11_9  [key=2, style=dotted];
m11_140 -> m11_144  [key=0, style=solid];
m11_140 -> m11_9  [key=2, style=dotted];
m11_141 -> m11_142  [key=0, style=solid];
m11_141 -> m11_143  [key=1, style=dashed, color=darkseagreen4, label=sql];
m11_141 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label=sql];
m11_141 -> m11_141  [key=3, color=darkorchid, style=bold, label="Local variable string sql"];
m11_142 -> m11_143  [key=0, style=solid];
m11_142 -> m11_145  [key=2, style=dotted];
m11_144 -> m11_136  [key=0, style=bold, color=blue];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_96 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_96 -> m11_93  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m11_96 -> m11_94  [key=3, color=darkorchid, style=bold, label="Parameter variable double score"];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m11_97 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m11_97 -> m11_97  [key=3, color=darkorchid, style=bold, label="Local variable string addSql"];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_31  [key=2, style=dotted];
m11_99 -> m11_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_101  [key=2, style=dotted];
m11_100 -> m11_96  [key=0, style=bold, color=blue];
m11_153 -> m11_154  [key=0, style=solid];
m11_153 -> m11_158  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_153 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_156  [key=0, style=solid];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_31  [key=2, style=dotted];
m11_158 -> m11_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_155 -> m11_159  [key=0, style=solid];
m11_155 -> m11_9  [key=2, style=dotted];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_158  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_156 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_156 -> m11_156  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_145  [key=2, style=dotted];
m11_159 -> m11_153  [key=0, style=bold, color=blue];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_31  [key=2, style=dotted];
m11_37 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_38 -> m11_36  [key=0, style=bold, color=blue];
m11_19 -> m11_263  [key=0, style=solid];
m11_263 -> m11_264  [key=0, style=solid];
m11_263 -> m11_265  [key=2, style=dotted];
m11_263 -> m11_266  [key=2, style=dotted];
m11_264 -> m11_19  [key=0, style=bold, color=blue];
m11_189 -> m11_190  [key=0, style=solid];
m11_189 -> m11_194  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_189 -> m11_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_190 -> m11_191  [key=0, style=solid];
m11_190 -> m11_192  [key=0, style=solid];
m11_194 -> m11_195  [key=0, style=solid];
m11_194 -> m11_31  [key=2, style=dotted];
m11_194 -> m11_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_191 -> m11_195  [key=0, style=solid];
m11_191 -> m11_9  [key=2, style=dotted];
m11_192 -> m11_193  [key=0, style=solid];
m11_192 -> m11_194  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_192 -> m11_197  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_192 -> m11_192  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m11_193 -> m11_194  [key=0, style=solid];
m11_193 -> m11_145  [key=2, style=dotted];
m11_195 -> m11_189  [key=0, style=bold, color=blue];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_31  [key=2, style=dotted];
m11_29 -> m11_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_30 -> m11_28  [key=0, style=bold, color=blue];
m11_246 -> m11_247  [key=0, style=solid];
m11_25 -> m11_26  [key=0, style=solid];
m11_26 -> m11_27  [key=0, style=solid];
m11_27 -> m11_25  [key=0, style=bold, color=blue];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_35  [key=2, style=dotted];
m11_33 -> m11_22  [key=2, style=dotted];
m11_32 -> m11_33  [key=0, style=solid];
m11_34 -> m11_32  [key=0, style=bold, color=blue];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_22  [key=2, style=dotted];
m11_39 -> m11_40  [key=0, style=solid];
m11_41 -> m11_39  [key=0, style=bold, color=blue];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_49  [key=2, style=dotted];
m11_47 -> m11_50  [key=2, style=dotted];
m11_47 -> m11_22  [key=2, style=dotted];
m11_46 -> m11_47  [key=0, style=solid];
m11_48 -> m11_46  [key=0, style=bold, color=blue];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_49  [key=2, style=dotted];
m11_56 -> m11_50  [key=2, style=dotted];
m11_56 -> m11_22  [key=2, style=dotted];
m11_55 -> m11_56  [key=0, style=solid];
m11_57 -> m11_55  [key=0, style=bold, color=blue];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_68  [key=2, style=dotted];
m11_65 -> m11_66  [key=0, style=solid];
m11_67 -> m11_65  [key=0, style=bold, color=blue];
m11_73 -> m11_74  [key=0, style=solid];
m11_73 -> m11_22  [key=2, style=dotted];
m11_72 -> m11_73  [key=0, style=solid];
m11_74 -> m11_72  [key=0, style=bold, color=blue];
m11_79 -> m11_80  [key=0, style=solid];
m11_79 -> m11_35  [key=2, style=dotted];
m11_79 -> m11_22  [key=2, style=dotted];
m11_78 -> m11_79  [key=0, style=solid];
m11_80 -> m11_78  [key=0, style=bold, color=blue];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_22  [key=2, style=dotted];
m11_84 -> m11_85  [key=0, style=solid];
m11_86 -> m11_84  [key=0, style=bold, color=blue];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_35  [key=2, style=dotted];
m11_91 -> m11_22  [key=2, style=dotted];
m11_90 -> m11_91  [key=0, style=solid];
m11_92 -> m11_90  [key=0, style=bold, color=blue];
m11_103 -> m11_104  [key=0, style=solid];
m11_103 -> m11_22  [key=2, style=dotted];
m11_102 -> m11_103  [key=0, style=solid];
m11_104 -> m11_102  [key=0, style=bold, color=blue];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_22  [key=2, style=dotted];
m11_110 -> m11_111  [key=0, style=solid];
m11_112 -> m11_110  [key=0, style=bold, color=blue];
m11_119 -> m11_120  [key=0, style=solid];
m11_119 -> m11_22  [key=2, style=dotted];
m11_118 -> m11_119  [key=0, style=solid];
m11_120 -> m11_118  [key=0, style=bold, color=blue];
m11_126 -> m11_127  [key=0, style=solid];
m11_126 -> m11_22  [key=2, style=dotted];
m11_125 -> m11_126  [key=0, style=solid];
m11_127 -> m11_125  [key=0, style=bold, color=blue];
m11_134 -> m11_135  [key=0, style=solid];
m11_134 -> m11_22  [key=2, style=dotted];
m11_133 -> m11_134  [key=0, style=solid];
m11_135 -> m11_133  [key=0, style=bold, color=blue];
m11_148 -> m11_149  [key=0, style=solid];
m11_148 -> m11_21  [key=2, style=dotted];
m11_148 -> m11_22  [key=2, style=dotted];
m11_148 -> m11_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_151 -> m11_152  [key=0, style=solid];
m11_151 -> m11_151  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m11_147 -> m11_148  [key=0, style=solid];
m11_149 -> m11_147  [key=0, style=bold, color=blue];
m11_150 -> m11_151  [key=0, style=solid];
m11_152 -> m11_150  [key=0, style=bold, color=blue];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_22  [key=2, style=dotted];
m11_160 -> m11_161  [key=0, style=solid];
m11_162 -> m11_160  [key=0, style=bold, color=blue];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_21  [key=2, style=dotted];
m11_173 -> m11_175  [key=2, style=dotted];
m11_173 -> m11_22  [key=2, style=dotted];
m11_173 -> m11_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_177 -> m11_178  [key=0, style=solid];
m11_172 -> m11_173  [key=0, style=solid];
m11_174 -> m11_172  [key=0, style=bold, color=blue];
m11_176 -> m11_177  [key=0, style=solid];
m11_178 -> m11_176  [key=0, style=bold, color=blue];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_22  [key=2, style=dotted];
m11_186 -> m11_187  [key=0, style=solid];
m11_188 -> m11_186  [key=0, style=bold, color=blue];
m11_197 -> m11_198  [key=0, style=solid];
m11_197 -> m11_35  [key=2, style=dotted];
m11_197 -> m11_22  [key=2, style=dotted];
m11_196 -> m11_197  [key=0, style=solid];
m11_198 -> m11_196  [key=0, style=bold, color=blue];
m11_207 -> m11_208  [key=0, style=solid];
m11_207 -> m11_35  [key=2, style=dotted];
m11_207 -> m11_22  [key=2, style=dotted];
m11_206 -> m11_207  [key=0, style=solid];
m11_208 -> m11_206  [key=0, style=bold, color=blue];
m11_217 -> m11_218  [key=0, style=solid];
m11_217 -> m11_35  [key=2, style=dotted];
m11_217 -> m11_22  [key=2, style=dotted];
m11_216 -> m11_217  [key=0, style=solid];
m11_218 -> m11_216  [key=0, style=bold, color=blue];
m11_227 -> m11_228  [key=0, style=solid];
m11_227 -> m11_22  [key=2, style=dotted];
m11_226 -> m11_227  [key=0, style=solid];
m11_228 -> m11_226  [key=0, style=bold, color=blue];
m11_237 -> m11_238  [key=0, style=solid];
m11_237 -> m11_22  [key=2, style=dotted];
m11_236 -> m11_237  [key=0, style=solid];
m11_238 -> m11_236  [key=0, style=bold, color=blue];
m11_247 -> m11_248  [key=0, style=solid];
m11_247 -> m11_22  [key=2, style=dotted];
m11_248 -> m11_246  [key=0, style=bold, color=blue];
m11_163 -> m11_164  [key=0, style=solid];
m11_163 -> m11_166  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m11_163 -> m11_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_163 -> m11_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_163 -> m11_177  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_164 -> m11_165  [key=0, style=solid];
m11_164 -> m11_166  [key=0, style=solid];
m11_166 -> m11_167  [key=0, style=solid];
m11_166 -> m11_168  [key=0, style=solid];
m11_170 -> m11_171  [key=0, style=solid];
m11_170 -> m11_146  [key=2, style=dotted];
m11_170 -> m11_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_165 -> m11_171  [key=0, style=solid];
m11_165 -> m11_9  [key=2, style=dotted];
m11_167 -> m11_171  [key=0, style=solid];
m11_167 -> m11_9  [key=2, style=dotted];
m11_168 -> m11_169  [key=0, style=solid];
m11_168 -> m11_170  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_168 -> m11_173  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_168 -> m11_168  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m11_169 -> m11_170  [key=0, style=solid];
m11_169 -> m11_101  [key=2, style=dotted];
m11_171 -> m11_163  [key=0, style=bold, color=blue];
m11_121 -> m11_122  [key=0, style=solid];
m11_121 -> m11_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_121 -> m11_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_122 -> m11_123  [key=0, style=solid];
m11_122 -> m11_117  [key=2, style=dotted];
m11_123 -> m11_124  [key=0, style=solid];
m11_123 -> m11_31  [key=2, style=dotted];
m11_123 -> m11_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_124 -> m11_121  [key=0, style=bold, color=blue];
m11_117 -> m11_252  [key=0, style=solid];
m11_252 -> m11_253  [key=0, style=solid];
m11_252 -> m11_254  [key=2, style=dotted];
m11_252 -> m11_255  [key=2, style=dotted];
m11_253 -> m11_117  [key=0, style=bold, color=blue];
m11_219 -> m11_220  [key=0, style=solid];
m11_219 -> m11_224  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_219 -> m11_227  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_220 -> m11_221  [key=0, style=solid];
m11_220 -> m11_222  [key=0, style=solid];
m11_224 -> m11_225  [key=0, style=solid];
m11_224 -> m11_31  [key=2, style=dotted];
m11_224 -> m11_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_221 -> m11_225  [key=0, style=solid];
m11_221 -> m11_9  [key=2, style=dotted];
m11_222 -> m11_223  [key=0, style=solid];
m11_222 -> m11_224  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_222 -> m11_227  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_222 -> m11_222  [key=3, color=darkorchid, style=bold, label="Local variable string query"];
m11_223 -> m11_224  [key=0, style=solid];
m11_223 -> m11_145  [key=2, style=dotted];
m11_225 -> m11_219  [key=0, style=bold, color=blue];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_113 -> m11_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_114 -> m11_115  [key=0, style=solid];
m11_114 -> m11_117  [key=2, style=dotted];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_31  [key=2, style=dotted];
m11_115 -> m11_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_116 -> m11_113  [key=0, style=bold, color=blue];
m11_128 -> m11_129  [key=0, style=solid];
m11_128 -> m11_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_128 -> m11_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_129 -> m11_130  [key=0, style=solid];
m11_129 -> m11_131  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m11_129 -> m11_134  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m11_129 -> m11_129  [key=3, color=darkorchid, style=bold, label="Local variable string trimSql"];
m11_131 -> m11_132  [key=0, style=solid];
m11_131 -> m11_31  [key=2, style=dotted];
m11_131 -> m11_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m11_130 -> m11_131  [key=0, style=solid];
m11_130 -> m11_117  [key=2, style=dotted];
m11_132 -> m11_128  [key=0, style=bold, color=blue];
m11_267 -> m11_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_44  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_122  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_130  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_142  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_158  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_214  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_223  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_243  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_244  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_267 -> m11_260  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m11_268 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_269 -> m11_33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_270 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_271 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_272 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m11_273 -> m11_47  [key=1, style=dashed, color=darkseagreen4, label=addAndSetStateSql];
m11_274 -> m11_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_275 -> m11_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m11_276 -> m11_56  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m11_277 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_278 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_279 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m11_280 -> m11_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_281 -> m11_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_282 -> m11_79  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_283 -> m11_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_284 -> m11_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_285 -> m11_91  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_286 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_287 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_288 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label=double];
m11_289 -> m11_103  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m11_290 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_291 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_292 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_293 -> m11_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_294 -> m11_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_295 -> m11_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_296 -> m11_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_297 -> m11_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_298 -> m11_134  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_299 -> m11_134  [key=1, style=dashed, color=darkseagreen4, label=int];
m11_300 -> m11_134  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m11_301 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_301 -> m11_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_302 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m11_303 -> m11_148  [key=1, style=dashed, color=darkseagreen4, label=sql];
m11_304 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_305 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_306 -> m11_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_306 -> m11_177  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_307 -> m11_173  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m11_308 -> m11_173  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_309 -> m11_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_310 -> m11_187  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_311 -> m11_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_312 -> m11_197  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_313 -> m11_197  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_314 -> m11_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_315 -> m11_207  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_316 -> m11_207  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_317 -> m11_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_318 -> m11_217  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m11_319 -> m11_217  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_320 -> m11_227  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_321 -> m11_227  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_322 -> m11_237  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_323 -> m11_237  [key=1, style=dashed, color=darkseagreen4, label=query];
m11_324 -> m11_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m11_325 -> m11_247  [key=1, style=dashed, color=darkseagreen4, label=query];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_4  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Func<TIn, TOut>>"];
m13_2 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label="System.Linq.Expressions.Expression<System.Func<TIn, TOut>>"];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_0  [key=2, style=dotted];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_8  [key=2, style=dotted];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_9  [key=2, style=dotted];
m13_6 -> m13_7  [key=0, style=solid];
m13_7 -> m13_2  [key=0, style=bold, color=blue];
m13_10 -> m13_11  [key=0, style=solid];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_13  [key=2, style=dotted];
m13_11 -> m13_14  [key=2, style=dotted];
m13_11 -> m13_15  [key=2, style=dotted];
m13_12 -> m13_10  [key=0, style=bold, color=blue];
m13_16 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HoistingExpressionVisitor<TIn, TOut>"];
m14_3 -> m14_4  [key=0, style=solid];
m14_4 -> m14_5  [key=0, style=solid];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_7  [key=2, style=dotted];
m14_5 -> m14_8  [key=2, style=dotted];
m14_6 -> m14_3  [key=0, style=bold, color=blue];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HashCodeCombiner"];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_13  [key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_14  [key=2, style=dotted];
m14_12 -> m14_9  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_2 -> m14_0  [key=0, style=bold, color=blue];
m14_15 -> m14_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint"];
m14_15 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint"];
m14_15 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint"];
m14_15 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.IndexExpressionFingerprint"];
m15_101 -> m15_256  [key=0, style=solid];
m15_256 -> m15_257  [key=0, style=solid];
m15_256 -> m15_254  [key=2, style=dotted];
m15_256 -> m15_255  [key=2, style=dotted];
m15_257 -> m15_101  [key=0, style=bold, color=blue];
m15_105 -> m15_106  [key=0, style=solid];
m15_105 -> m15_108  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_105 -> m15_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_106 -> m15_107  [key=0, style=solid];
m15_106 -> m15_108  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_106 -> m15_111  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_108 -> m15_109  [key=0, style=solid];
m15_108 -> m15_31  [key=2, style=dotted];
m15_108 -> m15_110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_107 -> m15_108  [key=0, style=solid];
m15_107 -> m15_101  [key=2, style=dotted];
m15_109 -> m15_105  [key=0, style=bold, color=blue];
m15_10 -> m15_11  [key=0, style=solid];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_19  [key=2, style=dotted];
m15_11 -> m15_17  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_20  [key=2, style=dotted];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_24  [key=2, style=dotted];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_15  [key=0, style=solid];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_21  [key=2, style=dotted];
m15_14 -> m15_22  [key=2, style=dotted];
m15_14 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_17  [key=0, style=solid];
m15_16 -> m15_15  [key=0, style=solid];
m15_16 -> m15_23  [key=2, style=dotted];
m15_18 -> m15_10  [key=0, style=bold, color=blue];
m15_69 -> m15_70  [key=0, style=solid];
m15_69 -> m15_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_70 -> m15_71  [key=0, style=solid];
m15_70 -> m15_31  [key=2, style=dotted];
m15_70 -> m15_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_71 -> m15_69  [key=0, style=bold, color=blue];
m15_229 -> m15_230  [key=0, style=solid];
m15_229 -> m15_234  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_229 -> m15_237  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_230 -> m15_231  [key=0, style=solid];
m15_230 -> m15_232  [key=0, style=solid];
m15_234 -> m15_235  [key=0, style=solid];
m15_234 -> m15_31  [key=2, style=dotted];
m15_234 -> m15_236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_231 -> m15_235  [key=0, style=solid];
m15_231 -> m15_9  [key=2, style=dotted];
m15_232 -> m15_233  [key=0, style=solid];
m15_232 -> m15_234  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_232 -> m15_237  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_233 -> m15_234  [key=0, style=solid];
m15_233 -> m15_101  [key=2, style=dotted];
m15_235 -> m15_229  [key=0, style=bold, color=blue];
m15_239 -> m15_240  [key=0, style=solid];
m15_239 -> m15_244  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_239 -> m15_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_240 -> m15_241  [key=0, style=solid];
m15_240 -> m15_242  [key=0, style=solid];
m15_244 -> m15_245  [key=0, style=solid];
m15_244 -> m15_31  [key=2, style=dotted];
m15_244 -> m15_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_241 -> m15_245  [key=0, style=solid];
m15_241 -> m15_9  [key=2, style=dotted];
m15_242 -> m15_243  [key=0, style=solid];
m15_242 -> m15_244  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_242 -> m15_247  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_243 -> m15_244  [key=0, style=solid];
m15_243 -> m15_117  [key=2, style=dotted];
m15_245 -> m15_239  [key=0, style=bold, color=blue];
m15_81 -> m15_82  [key=0, style=solid];
m15_81 -> m15_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_82 -> m15_83  [key=0, style=solid];
m15_82 -> m15_31  [key=2, style=dotted];
m15_82 -> m15_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_83 -> m15_81  [key=0, style=bold, color=blue];
m15_255 -> m15_260  [key=0, style=solid];
m15_260 -> m15_261  [key=0, style=solid];
m15_260 -> m15_262  [key=2, style=dotted];
m15_261 -> m15_255  [key=0, style=bold, color=blue];
m15_199 -> m15_200  [key=0, style=solid];
m15_199 -> m15_204  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_199 -> m15_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_200 -> m15_201  [key=0, style=solid];
m15_200 -> m15_202  [key=0, style=solid];
m15_204 -> m15_205  [key=0, style=solid];
m15_204 -> m15_31  [key=2, style=dotted];
m15_204 -> m15_206  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_201 -> m15_205  [key=0, style=solid];
m15_201 -> m15_9  [key=2, style=dotted];
m15_202 -> m15_203  [key=0, style=solid];
m15_202 -> m15_204  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_202 -> m15_207  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_203 -> m15_204  [key=0, style=solid];
m15_203 -> m15_101  [key=2, style=dotted];
m15_205 -> m15_199  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_3  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
m15_0 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m15_0 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="IsolationLevel?"];
m15_0 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.PersistentJobQueueProviderCollection"];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_5  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_6 -> m15_7  [key=0, style=solid];
m15_7 -> m15_8  [key=0, style=solid];
m15_2 -> m15_8  [key=0, style=solid];
m15_2 -> m15_9  [key=2, style=dotted];
m15_4 -> m15_8  [key=0, style=solid];
m15_4 -> m15_9  [key=2, style=dotted];
m15_8 -> m15_0  [key=0, style=bold, color=blue];
m15_145 -> m15_258  [key=0, style=solid];
m15_258 -> m15_259  [key=0, style=solid];
m15_258 -> m15_254  [key=2, style=dotted];
m15_258 -> m15_255  [key=2, style=dotted];
m15_259 -> m15_145  [key=0, style=bold, color=blue];
m15_42 -> m15_43  [key=0, style=solid];
m15_42 -> m15_44  [key=1, style=dashed, color=red, label=string];
m15_42 -> m15_47  [key=1, style=dashed, color=red, label=string];
m15_43 -> m15_44  [key=0, style=solid, color=red];
m15_43 -> m15_47  [key=1, style=dashed, color=red, label=addAndSetStateSql];
m15_44 -> m15_45  [key=0, style=solid, color=red];
m15_44 -> m15_31  [key=2, style=dotted, color=red];
m15_44 -> m15_46  [key=1, style=dashed, color=red, label="lambda expression"];
m15_45 -> m15_42  [key=0, style=bold, color=blue];
m15_209 -> m15_210  [key=0, style=solid];
m15_209 -> m15_214  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_209 -> m15_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_210 -> m15_211  [key=0, style=solid];
m15_210 -> m15_212  [key=0, style=solid];
m15_214 -> m15_215  [key=0, style=solid];
m15_214 -> m15_31  [key=2, style=dotted];
m15_214 -> m15_216  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_211 -> m15_215  [key=0, style=solid];
m15_211 -> m15_9  [key=2, style=dotted];
m15_212 -> m15_213  [key=0, style=solid];
m15_212 -> m15_214  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_212 -> m15_217  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_213 -> m15_214  [key=0, style=solid];
m15_213 -> m15_117  [key=2, style=dotted];
m15_215 -> m15_209  [key=0, style=bold, color=blue];
m15_51 -> m15_52  [key=0, style=solid];
m15_51 -> m15_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_51 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m15_53 -> m15_54  [key=0, style=solid];
m15_53 -> m15_31  [key=2, style=dotted];
m15_53 -> m15_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_54 -> m15_51  [key=0, style=bold, color=blue];
m15_87 -> m15_88  [key=0, style=solid];
m15_87 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_88 -> m15_89  [key=0, style=solid];
m15_88 -> m15_31  [key=2, style=dotted];
m15_88 -> m15_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_89 -> m15_87  [key=0, style=bold, color=blue];
m15_179 -> m15_180  [key=0, style=solid];
m15_179 -> m15_184  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_179 -> m15_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_180 -> m15_181  [key=0, style=solid];
m15_180 -> m15_182  [key=0, style=solid];
m15_184 -> m15_185  [key=0, style=solid];
m15_184 -> m15_31  [key=2, style=dotted];
m15_184 -> m15_186  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_181 -> m15_185  [key=0, style=solid];
m15_181 -> m15_9  [key=2, style=dotted];
m15_182 -> m15_183  [key=0, style=solid];
m15_182 -> m15_184  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_182 -> m15_187  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_183 -> m15_184  [key=0, style=solid];
m15_183 -> m15_101  [key=2, style=dotted];
m15_185 -> m15_179  [key=0, style=bold, color=blue];
m15_93 -> m15_94  [key=0, style=solid];
m15_94 -> m15_95  [key=0, style=solid];
m15_94 -> m15_96  [key=2, style=dotted];
m15_95 -> m15_93  [key=0, style=bold, color=blue];
m15_31 -> m15_249  [key=0, style=solid];
m15_249 -> m15_250  [key=0, style=solid];
m15_249 -> m15_251  [key=2, style=dotted];
m15_250 -> m15_31  [key=0, style=bold, color=blue];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_58 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_59 -> m15_60  [key=0, style=solid];
m15_59 -> m15_63  [key=2, style=dotted];
m15_61 -> m15_62  [key=0, style=solid];
m15_61 -> m15_31  [key=2, style=dotted];
m15_61 -> m15_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_60 -> m15_61  [key=0, style=solid];
m15_60 -> m15_64  [key=2, style=dotted];
m15_60 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m15_62 -> m15_58  [key=0, style=bold, color=blue];
m15_75 -> m15_76  [key=0, style=solid];
m15_75 -> m15_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_76 -> m15_77  [key=0, style=solid];
m15_76 -> m15_31  [key=2, style=dotted];
m15_76 -> m15_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_77 -> m15_75  [key=0, style=bold, color=blue];
m15_136 -> m15_137  [key=0, style=solid];
m15_136 -> m15_139  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m15_136 -> m15_143  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_136 -> m15_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_136 -> m15_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_137 -> m15_138  [key=0, style=solid];
m15_137 -> m15_139  [key=0, style=solid];
m15_139 -> m15_140  [key=0, style=solid];
m15_139 -> m15_141  [key=0, style=solid];
m15_143 -> m15_144  [key=0, style=solid];
m15_143 -> m15_146  [key=2, style=dotted];
m15_143 -> m15_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_138 -> m15_144  [key=0, style=solid];
m15_138 -> m15_9  [key=2, style=dotted];
m15_140 -> m15_144  [key=0, style=solid];
m15_140 -> m15_9  [key=2, style=dotted];
m15_141 -> m15_142  [key=0, style=solid];
m15_141 -> m15_143  [key=1, style=dashed, color=darkseagreen4, label=sql];
m15_141 -> m15_148  [key=1, style=dashed, color=darkseagreen4, label=sql];
m15_142 -> m15_143  [key=0, style=solid];
m15_142 -> m15_145  [key=2, style=dotted];
m15_144 -> m15_136  [key=0, style=bold, color=blue];
m15_96 -> m15_97  [key=0, style=solid];
m15_96 -> m15_99  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_96 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_97 -> m15_98  [key=0, style=solid];
m15_97 -> m15_99  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m15_97 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m15_99 -> m15_100  [key=0, style=solid];
m15_99 -> m15_31  [key=2, style=dotted];
m15_99 -> m15_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_101  [key=2, style=dotted];
m15_100 -> m15_96  [key=0, style=bold, color=blue];
m15_153 -> m15_154  [key=0, style=solid];
m15_153 -> m15_158  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_153 -> m15_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_154 -> m15_155  [key=0, style=solid];
m15_154 -> m15_156  [key=0, style=solid];
m15_158 -> m15_159  [key=0, style=solid];
m15_158 -> m15_31  [key=2, style=dotted];
m15_158 -> m15_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_155 -> m15_159  [key=0, style=solid];
m15_155 -> m15_9  [key=2, style=dotted];
m15_156 -> m15_157  [key=0, style=solid];
m15_156 -> m15_158  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_156 -> m15_161  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_157 -> m15_158  [key=0, style=solid];
m15_157 -> m15_145  [key=2, style=dotted];
m15_159 -> m15_153  [key=0, style=bold, color=blue];
m15_36 -> m15_37  [key=0, style=solid];
m15_36 -> m15_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_37 -> m15_38  [key=0, style=solid];
m15_37 -> m15_31  [key=2, style=dotted];
m15_37 -> m15_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_38 -> m15_36  [key=0, style=bold, color=blue];
m15_19 -> m15_263  [key=0, style=solid];
m15_263 -> m15_264  [key=0, style=solid];
m15_263 -> m15_265  [key=2, style=dotted];
m15_263 -> m15_266  [key=2, style=dotted];
m15_264 -> m15_19  [key=0, style=bold, color=blue];
m15_189 -> m15_190  [key=0, style=solid];
m15_189 -> m15_194  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_189 -> m15_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_190 -> m15_191  [key=0, style=solid];
m15_190 -> m15_192  [key=0, style=solid];
m15_194 -> m15_195  [key=0, style=solid];
m15_194 -> m15_31  [key=2, style=dotted];
m15_194 -> m15_196  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_191 -> m15_195  [key=0, style=solid];
m15_191 -> m15_9  [key=2, style=dotted];
m15_192 -> m15_193  [key=0, style=solid];
m15_192 -> m15_194  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_192 -> m15_197  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_193 -> m15_194  [key=0, style=solid];
m15_193 -> m15_145  [key=2, style=dotted];
m15_195 -> m15_189  [key=0, style=bold, color=blue];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_31  [key=2, style=dotted];
m15_29 -> m15_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_30 -> m15_28  [key=0, style=bold, color=blue];
m15_246 -> m15_247  [key=0, style=solid];
m15_25 -> m15_26  [key=0, style=solid];
m15_26 -> m15_27  [key=0, style=solid];
m15_27 -> m15_25  [key=0, style=bold, color=blue];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_35  [key=2, style=dotted];
m15_33 -> m15_22  [key=2, style=dotted];
m15_32 -> m15_33  [key=0, style=solid];
m15_34 -> m15_32  [key=0, style=bold, color=blue];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_22  [key=2, style=dotted];
m15_39 -> m15_40  [key=0, style=solid];
m15_41 -> m15_39  [key=0, style=bold, color=blue];
m15_47 -> m15_48  [key=0, style=solid, color=red];
m15_47 -> m15_49  [key=2, style=dotted, color=red];
m15_47 -> m15_50  [key=2, style=dotted, color=red];
m15_47 -> m15_22  [key=2, style=dotted, color=red];
m15_46 -> m15_47  [key=0, style=solid, color=red];
m15_48 -> m15_46  [key=0, style=bold, color=blue];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_49  [key=2, style=dotted];
m15_56 -> m15_50  [key=2, style=dotted];
m15_56 -> m15_22  [key=2, style=dotted];
m15_55 -> m15_56  [key=0, style=solid];
m15_57 -> m15_55  [key=0, style=bold, color=blue];
m15_66 -> m15_67  [key=0, style=solid];
m15_66 -> m15_68  [key=2, style=dotted];
m15_65 -> m15_66  [key=0, style=solid];
m15_67 -> m15_65  [key=0, style=bold, color=blue];
m15_73 -> m15_74  [key=0, style=solid];
m15_73 -> m15_22  [key=2, style=dotted];
m15_72 -> m15_73  [key=0, style=solid];
m15_74 -> m15_72  [key=0, style=bold, color=blue];
m15_79 -> m15_80  [key=0, style=solid];
m15_79 -> m15_35  [key=2, style=dotted];
m15_79 -> m15_22  [key=2, style=dotted];
m15_78 -> m15_79  [key=0, style=solid];
m15_80 -> m15_78  [key=0, style=bold, color=blue];
m15_85 -> m15_86  [key=0, style=solid];
m15_85 -> m15_22  [key=2, style=dotted];
m15_84 -> m15_85  [key=0, style=solid];
m15_86 -> m15_84  [key=0, style=bold, color=blue];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_35  [key=2, style=dotted];
m15_91 -> m15_22  [key=2, style=dotted];
m15_90 -> m15_91  [key=0, style=solid];
m15_92 -> m15_90  [key=0, style=bold, color=blue];
m15_103 -> m15_104  [key=0, style=solid];
m15_103 -> m15_22  [key=2, style=dotted];
m15_102 -> m15_103  [key=0, style=solid];
m15_104 -> m15_102  [key=0, style=bold, color=blue];
m15_111 -> m15_112  [key=0, style=solid];
m15_111 -> m15_22  [key=2, style=dotted];
m15_110 -> m15_111  [key=0, style=solid];
m15_112 -> m15_110  [key=0, style=bold, color=blue];
m15_119 -> m15_120  [key=0, style=solid];
m15_119 -> m15_22  [key=2, style=dotted];
m15_118 -> m15_119  [key=0, style=solid];
m15_120 -> m15_118  [key=0, style=bold, color=blue];
m15_126 -> m15_127  [key=0, style=solid];
m15_126 -> m15_22  [key=2, style=dotted];
m15_125 -> m15_126  [key=0, style=solid];
m15_127 -> m15_125  [key=0, style=bold, color=blue];
m15_134 -> m15_135  [key=0, style=solid];
m15_134 -> m15_22  [key=2, style=dotted];
m15_133 -> m15_134  [key=0, style=solid];
m15_135 -> m15_133  [key=0, style=bold, color=blue];
m15_148 -> m15_149  [key=0, style=solid];
m15_148 -> m15_21  [key=2, style=dotted];
m15_148 -> m15_22  [key=2, style=dotted];
m15_148 -> m15_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_151 -> m15_152  [key=0, style=solid];
m15_151 -> m15_151  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, string>"];
m15_147 -> m15_148  [key=0, style=solid];
m15_149 -> m15_147  [key=0, style=bold, color=blue];
m15_150 -> m15_151  [key=0, style=solid];
m15_152 -> m15_150  [key=0, style=bold, color=blue];
m15_161 -> m15_162  [key=0, style=solid];
m15_161 -> m15_22  [key=2, style=dotted];
m15_160 -> m15_161  [key=0, style=solid];
m15_162 -> m15_160  [key=0, style=bold, color=blue];
m15_173 -> m15_174  [key=0, style=solid];
m15_173 -> m15_21  [key=2, style=dotted];
m15_173 -> m15_175  [key=2, style=dotted];
m15_173 -> m15_22  [key=2, style=dotted];
m15_173 -> m15_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_177 -> m15_178  [key=0, style=solid];
m15_172 -> m15_173  [key=0, style=solid];
m15_174 -> m15_172  [key=0, style=bold, color=blue];
m15_176 -> m15_177  [key=0, style=solid];
m15_178 -> m15_176  [key=0, style=bold, color=blue];
m15_187 -> m15_188  [key=0, style=solid];
m15_187 -> m15_22  [key=2, style=dotted];
m15_186 -> m15_187  [key=0, style=solid];
m15_188 -> m15_186  [key=0, style=bold, color=blue];
m15_197 -> m15_198  [key=0, style=solid];
m15_197 -> m15_35  [key=2, style=dotted];
m15_197 -> m15_22  [key=2, style=dotted];
m15_196 -> m15_197  [key=0, style=solid];
m15_198 -> m15_196  [key=0, style=bold, color=blue];
m15_207 -> m15_208  [key=0, style=solid];
m15_207 -> m15_35  [key=2, style=dotted];
m15_207 -> m15_22  [key=2, style=dotted];
m15_206 -> m15_207  [key=0, style=solid];
m15_208 -> m15_206  [key=0, style=bold, color=blue];
m15_217 -> m15_218  [key=0, style=solid];
m15_217 -> m15_35  [key=2, style=dotted];
m15_217 -> m15_22  [key=2, style=dotted];
m15_216 -> m15_217  [key=0, style=solid];
m15_218 -> m15_216  [key=0, style=bold, color=blue];
m15_227 -> m15_228  [key=0, style=solid];
m15_227 -> m15_22  [key=2, style=dotted];
m15_226 -> m15_227  [key=0, style=solid];
m15_228 -> m15_226  [key=0, style=bold, color=blue];
m15_237 -> m15_238  [key=0, style=solid];
m15_237 -> m15_22  [key=2, style=dotted];
m15_236 -> m15_237  [key=0, style=solid];
m15_238 -> m15_236  [key=0, style=bold, color=blue];
m15_247 -> m15_248  [key=0, style=solid];
m15_247 -> m15_22  [key=2, style=dotted];
m15_248 -> m15_246  [key=0, style=bold, color=blue];
m15_163 -> m15_164  [key=0, style=solid];
m15_163 -> m15_166  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m15_163 -> m15_170  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_163 -> m15_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_163 -> m15_177  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_164 -> m15_165  [key=0, style=solid];
m15_164 -> m15_166  [key=0, style=solid];
m15_166 -> m15_167  [key=0, style=solid];
m15_166 -> m15_168  [key=0, style=solid];
m15_170 -> m15_171  [key=0, style=solid];
m15_170 -> m15_146  [key=2, style=dotted];
m15_170 -> m15_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_165 -> m15_171  [key=0, style=solid];
m15_165 -> m15_9  [key=2, style=dotted];
m15_167 -> m15_171  [key=0, style=solid];
m15_167 -> m15_9  [key=2, style=dotted];
m15_168 -> m15_169  [key=0, style=solid];
m15_168 -> m15_170  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_168 -> m15_173  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_169 -> m15_170  [key=0, style=solid];
m15_169 -> m15_101  [key=2, style=dotted];
m15_171 -> m15_163  [key=0, style=bold, color=blue];
m15_121 -> m15_122  [key=0, style=solid];
m15_121 -> m15_123  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_121 -> m15_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_122 -> m15_123  [key=0, style=solid];
m15_122 -> m15_117  [key=2, style=dotted];
m15_123 -> m15_124  [key=0, style=solid];
m15_123 -> m15_31  [key=2, style=dotted];
m15_123 -> m15_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_124 -> m15_121  [key=0, style=bold, color=blue];
m15_117 -> m15_252  [key=0, style=solid];
m15_252 -> m15_253  [key=0, style=solid];
m15_252 -> m15_254  [key=2, style=dotted];
m15_252 -> m15_255  [key=2, style=dotted];
m15_253 -> m15_117  [key=0, style=bold, color=blue];
m15_219 -> m15_220  [key=0, style=solid];
m15_219 -> m15_224  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_219 -> m15_227  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_220 -> m15_221  [key=0, style=solid];
m15_220 -> m15_222  [key=0, style=solid];
m15_224 -> m15_225  [key=0, style=solid];
m15_224 -> m15_31  [key=2, style=dotted];
m15_224 -> m15_226  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_221 -> m15_225  [key=0, style=solid];
m15_221 -> m15_9  [key=2, style=dotted];
m15_222 -> m15_223  [key=0, style=solid];
m15_222 -> m15_224  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_222 -> m15_227  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_223 -> m15_224  [key=0, style=solid];
m15_223 -> m15_145  [key=2, style=dotted];
m15_225 -> m15_219  [key=0, style=bold, color=blue];
m15_113 -> m15_114  [key=0, style=solid];
m15_113 -> m15_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_113 -> m15_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_114 -> m15_115  [key=0, style=solid];
m15_114 -> m15_117  [key=2, style=dotted];
m15_115 -> m15_116  [key=0, style=solid];
m15_115 -> m15_31  [key=2, style=dotted];
m15_115 -> m15_118  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_116 -> m15_113  [key=0, style=bold, color=blue];
m15_128 -> m15_129  [key=0, style=solid];
m15_128 -> m15_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_128 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_129 -> m15_130  [key=0, style=solid];
m15_129 -> m15_131  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m15_129 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m15_131 -> m15_132  [key=0, style=solid];
m15_131 -> m15_31  [key=2, style=dotted];
m15_131 -> m15_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_130 -> m15_131  [key=0, style=solid];
m15_130 -> m15_117  [key=2, style=dotted];
m15_132 -> m15_128  [key=0, style=bold, color=blue];
m15_267 -> m15_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_37  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_44  [key=1, style=dashed, color=red, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_60  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_70  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_76  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_94  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_98  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_99  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_107  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_108  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_114  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_115  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_122  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_123  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_130  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_131  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_142  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_157  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_158  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_169  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_170  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_183  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_184  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_193  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_194  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_203  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_204  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_213  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_214  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_223  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_224  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_233  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_234  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_243  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_244  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_249  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_252  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_256  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_258  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_267 -> m15_260  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerWriteOnlyTransaction"];
m15_268 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_269 -> m15_33  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_270 -> m15_40  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_271 -> m15_47  [key=1, style=dashed, color=red, label=string];
m15_272 -> m15_47  [key=1, style=dashed, color=red, label="Hangfire.States.IState"];
m15_273 -> m15_47  [key=1, style=dashed, color=red, label=addAndSetStateSql];
m15_274 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_275 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.States.IState"];
m15_276 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label=addStateSql];
m15_277 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_278 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_279 -> m15_66  [key=1, style=dashed, color=darkseagreen4, label=persistentQueue];
m15_280 -> m15_73  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_281 -> m15_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_282 -> m15_79  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_283 -> m15_85  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_284 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_285 -> m15_91  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_286 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_287 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_288 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label=double];
m15_289 -> m15_103  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m15_290 -> m15_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_291 -> m15_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_292 -> m15_111  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_293 -> m15_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_294 -> m15_119  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_295 -> m15_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_296 -> m15_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_297 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_298 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label=int];
m15_299 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label=int];
m15_300 -> m15_134  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m15_301 -> m15_148  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_301 -> m15_151  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_302 -> m15_148  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>"];
m15_303 -> m15_148  [key=1, style=dashed, color=darkseagreen4, label=sql];
m15_304 -> m15_161  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_305 -> m15_161  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_306 -> m15_173  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_306 -> m15_177  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_307 -> m15_173  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m15_308 -> m15_173  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_309 -> m15_187  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_310 -> m15_187  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_311 -> m15_197  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_312 -> m15_197  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_313 -> m15_197  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_314 -> m15_207  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_315 -> m15_207  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_316 -> m15_207  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_317 -> m15_217  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_318 -> m15_217  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m15_319 -> m15_217  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_320 -> m15_227  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_321 -> m15_227  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_322 -> m15_237  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_323 -> m15_237  [key=1, style=dashed, color=darkseagreen4, label=query];
m15_324 -> m15_247  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_325 -> m15_247  [key=1, style=dashed, color=darkseagreen4, label=query];
m16_33 -> m16_34  [key=0, style=solid, color=green];
m16_34 -> m16_35  [key=0, style=solid, color=green];
m16_34 -> m16_36  [key=0, style=solid, color=green];
m16_35 -> m16_44  [key=0, style=solid, color=green];
m16_36 -> m16_37  [key=0, style=solid, color=green];
m16_37 -> m16_38  [key=0, style=solid, color=green];
m16_37 -> m16_45  [key=2, style=dotted, color=green];
m16_38 -> m16_39  [key=0, style=solid, color=green];
m16_38 -> m16_45  [key=2, style=dotted, color=green];
m16_39 -> m16_40  [key=0, style=solid, color=green];
m16_39 -> m16_29  [key=2, style=dotted, color=green];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_46  [key=2, style=dotted];
m16_41 -> m16_42  [key=0, style=solid];
m16_41 -> m16_47  [key=2, style=dotted];
m16_42 -> m16_43  [key=0, style=solid];
m16_42 -> m16_48  [key=2, style=dotted];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_49  [key=2, style=dotted];
m16_44 -> m16_33  [key=0, style=bold, color=blue];
m16_0 -> m16_1  [key=0, style=solid, color=green];
m16_0 -> m16_3  [key=1, style=dashed, color=green, label=int];
m16_0 -> m16_5  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m16_0 -> m16_7  [key=1, style=dashed, color=green, label=string];
m16_0 -> m16_8  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m16_1 -> m16_2  [key=0, style=solid, color=green];
m16_1 -> m16_3  [key=0, style=solid, color=green];
m16_2 -> m16_16  [key=0, style=solid, color=green];
m16_2 -> m16_17  [key=2, style=dotted, color=green];
m16_3 -> m16_4  [key=0, style=solid, color=green];
m16_3 -> m16_5  [key=0, style=solid, color=green];
m16_4 -> m16_16  [key=0, style=solid, color=green];
m16_4 -> m16_18  [key=2, style=dotted, color=green];
m16_5 -> m16_5  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m16_5 -> m16_6  [key=0, style=solid, color=green];
m16_5 -> m16_7  [key=0, style=solid, color=green];
m16_5 -> m16_19  [key=2, style=dotted, color=green];
m16_5 -> m16_14  [key=1, style=dashed, color=green, label="System.TimeSpan"];
m16_6 -> m16_16  [key=0, style=solid, color=green];
m16_6 -> m16_18  [key=2, style=dotted, color=green];
m16_7 -> m16_8  [key=0, style=solid, color=green];
m16_7 -> m16_20  [key=2, style=dotted, color=green];
m16_7 -> m16_21  [key=2, style=dotted, color=green];
m16_14 -> m16_15  [key=0, style=solid, color=green];
m16_14 -> m16_30  [key=2, style=dotted, color=green];
m16_14 -> m16_31  [key=2, style=dotted, color=green];
m16_8 -> m16_9  [key=0, style=solid, color=green];
m16_8 -> m16_22  [key=2, style=dotted, color=green];
m16_8 -> m16_23  [key=2, style=dotted, color=green];
m16_8 -> m16_24  [key=2, style=dotted, color=green];
m16_9 -> m16_10  [key=0, style=solid, color=green];
m16_9 -> m16_25  [key=2, style=dotted, color=green];
m16_13 -> m16_14  [key=0, style=solid, color=green];
m16_13 -> m16_29  [key=2, style=dotted, color=green];
m16_15 -> m16_16  [key=0, style=solid, color=green];
m16_15 -> m16_30  [key=2, style=dotted, color=green];
m16_15 -> m16_32  [key=2, style=dotted, color=green];
m16_10 -> m16_11  [key=0, style=solid, color=green];
m16_10 -> m16_26  [key=2, style=dotted, color=green];
m16_11 -> m16_12  [key=0, style=solid, color=green];
m16_11 -> m16_27  [key=2, style=dotted, color=green];
m16_12 -> m16_13  [key=0, style=solid, color=green];
m16_12 -> m16_28  [key=2, style=dotted, color=green];
m16_16 -> m16_0  [key=0, style=bold, color=blue];
m16_68 -> m16_69  [key=0, style=solid];
m16_69 -> m16_70  [key=0, style=solid];
m16_69 -> m16_85  [key=2, style=dotted];
m16_70 -> m16_71  [key=0, style=solid];
m16_70 -> m16_86  [key=2, style=dotted];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_87  [key=2, style=dotted];
m16_72 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label=worker];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_88  [key=2, style=dotted];
m16_74 -> m16_77  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m16_74 -> m16_78  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m16_76 -> m16_77  [key=0, style=solid];
m16_76 -> m16_86  [key=2, style=dotted];
m16_80 -> m16_29  [key=2, style=dotted];
m16_80 -> m16_81  [key=0, style=solid];
m16_81 -> m16_84  [key=0, style=solid];
m16_81 -> m16_90  [key=2, style=dotted];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_91  [key=2, style=dotted];
m16_71 -> m16_72  [key=0, style=solid];
m16_71 -> m16_79  [key=0, style=solid];
m16_71 -> m16_82  [key=0, style=solid];
m16_71 -> m16_84  [key=0, style=solid];
m16_73 -> m16_74  [key=0, style=solid];
m16_78 -> m16_71  [key=0, style=solid];
m16_78 -> m16_89  [key=2, style=dotted];
m16_75 -> m16_76  [key=0, style=solid];
m16_75 -> m16_77  [key=0, style=solid];
m16_77 -> m16_73  [key=0, style=solid];
m16_77 -> m16_78  [key=0, style=solid];
m16_79 -> m16_80  [key=0, style=solid];
m16_82 -> m16_83  [key=0, style=solid];
m16_84 -> m16_68  [key=0, style=bold, color=blue];
m16_85 -> m16_92  [key=0, style=solid];
m16_92 -> m16_93  [key=0, style=solid];
m16_92 -> m16_56  [key=2, style=dotted];
m16_92 -> m16_94  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_92 -> m16_97  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_92 -> m16_98  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_57  [key=2, style=dotted];
m16_93 -> m16_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_94 -> m16_95  [key=0, style=solid];
m16_94 -> m16_57  [key=2, style=dotted];
m16_94 -> m16_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_95 -> m16_96  [key=0, style=solid];
m16_95 -> m16_98  [key=0, style=solid];
m16_97 -> m16_95  [key=0, style=solid];
m16_97 -> m16_57  [key=2, style=dotted];
m16_97 -> m16_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_98 -> m16_99  [key=0, style=solid];
m16_98 -> m16_58  [key=2, style=dotted];
m16_96 -> m16_95  [key=3, color=darkorchid, style=bold, label="Local variable string queueName"];
m16_96 -> m16_97  [key=0, style=solid];
m16_96 -> m16_112  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m16_99 -> m16_85  [key=0, style=bold, color=blue];
m16_64 -> m16_65  [key=0, style=solid];
m16_101 -> m16_102  [key=0, style=solid];
m16_101 -> m16_103  [key=2, style=dotted];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_62  [key=2, style=dotted];
m16_105 -> m16_107  [key=2, style=dotted];
m16_105 -> m16_108  [key=2, style=dotted];
m16_105 -> m16_109  [key=2, style=dotted];
m16_105 -> m16_110  [key=2, style=dotted];
m16_112 -> m16_113  [key=0, style=solid];
m16_112 -> m16_62  [key=2, style=dotted];
m16_112 -> m16_103  [key=2, style=dotted];
m16_120 -> m16_121  [key=0, style=solid];
m16_120 -> m16_122  [key=2, style=dotted];
m16_124 -> m16_125  [key=0, style=solid];
m16_124 -> m16_62  [key=2, style=dotted];
m16_124 -> m16_67  [key=2, style=dotted];
m16_100 -> m16_101  [key=0, style=solid];
m16_102 -> m16_100  [key=0, style=bold, color=blue];
m16_104 -> m16_105  [key=0, style=solid];
m16_106 -> m16_104  [key=0, style=bold, color=blue];
m16_111 -> m16_112  [key=0, style=solid];
m16_113 -> m16_111  [key=0, style=bold, color=blue];
m16_119 -> m16_120  [key=0, style=solid];
m16_121 -> m16_119  [key=0, style=bold, color=blue];
m16_123 -> m16_124  [key=0, style=solid];
m16_125 -> m16_123  [key=0, style=bold, color=blue];
m16_60 -> m16_62  [key=2, style=dotted];
m16_60 -> m16_61  [key=0, style=solid];
m16_60 -> m16_63  [key=2, style=dotted];
m16_65 -> m16_62  [key=2, style=dotted];
m16_65 -> m16_67  [key=2, style=dotted];
m16_65 -> m16_66  [key=0, style=solid];
m16_59 -> m16_60  [key=0, style=solid];
m16_61 -> m16_59  [key=0, style=bold, color=blue];
m16_66 -> m16_64  [key=0, style=bold, color=blue];
m16_90 -> m16_114  [key=0, style=solid];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_56  [key=2, style=dotted];
m16_114 -> m16_116  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_114 -> m16_117  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_115 -> m16_116  [key=0, style=solid];
m16_115 -> m16_57  [key=2, style=dotted];
m16_115 -> m16_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_116 -> m16_117  [key=0, style=solid];
m16_116 -> m16_57  [key=2, style=dotted];
m16_116 -> m16_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_117 -> m16_118  [key=0, style=solid];
m16_117 -> m16_58  [key=2, style=dotted];
m16_118 -> m16_90  [key=0, style=bold, color=blue];
m16_32 -> m16_32  [key=3, color=darkorchid, style=bold, label="Field variable int _wellKnownTimestamp"];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_52  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_50 -> m16_53  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_50 -> m16_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_50 -> m16_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_51 -> m16_56  [key=2, style=dotted];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_53  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_51 -> m16_54  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m16_52 -> m16_57  [key=2, style=dotted];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_53 -> m16_57  [key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_54 -> m16_58  [key=2, style=dotted];
m16_54 -> m16_55  [key=0, style=solid];
m16_55 -> m16_50  [key=0, style=bold, color=blue];
m16_126 -> m16_8  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_14  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_9  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_10  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_11  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_12  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_13  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_15  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_34  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_36  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_37  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_38  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_39  [key=1, style=dashed, color=green, label="HangFire.Server.JobServer"];
m16_126 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_69  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_80  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_93  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_94  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_114  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_120  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_126 -> m16_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m16_129 -> m16_112  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m16_127 -> m16_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_127 -> m16_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m16_128 -> m16_60  [key=1, style=dashed, color=darkseagreen4, label=string];
m17_4 -> m17_5  [key=0, style=solid];
m17_5 -> m17_6  [key=0, style=solid];
m17_5 -> m17_7  [key=2, style=dotted];
m17_6 -> m17_4  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_0  [key=0, style=bold, color=blue];
m17_8 -> m17_9  [key=0, style=solid, color=red];
m17_9 -> m17_10  [key=0, style=solid, color=red];
m17_9 -> m17_7  [key=2, style=dotted, color=red];
m17_10 -> m17_8  [key=0, style=bold, color=blue];
m17_2 -> m17_3  [key=0, style=solid];
m17_3 -> m17_2  [key=0, style=bold, color=blue];
m18_2 -> m18_3  [key=0, style=solid];
m18_3 -> m18_4  [key=0, style=solid];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_6  [key=2, style=dotted];
m18_5 -> m18_2  [key=0, style=bold, color=blue];
m18_0 -> m18_1  [key=0, style=solid];
m18_1 -> m18_0  [key=0, style=bold, color=blue];
m18_7 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.LambdaExpressionFingerprint"];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HashCodeCombiner"];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_13  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_14  [key=2, style=dotted];
m19_12 -> m19_9  [key=0, style=bold, color=blue];
m19_14 -> m19_0  [key=3, color=darkorchid, style=bold, label="Property variable System.Reflection.MemberInfo Member"];
m19_3 -> m19_4  [key=0, style=solid];
m19_4 -> m19_5  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_7  [key=2, style=dotted];
m19_5 -> m19_8  [key=2, style=dotted];
m19_6 -> m19_3  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_2 -> m19_0  [key=0, style=bold, color=blue];
m19_15 -> m19_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint"];
m19_15 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint"];
m19_15 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint"];
m19_15 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.MemberExpressionFingerprint"];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [key=0, style=bold, color=blue];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m20_2 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m20_2 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobActivator"];
m20_2 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPerformer"];
m20_3 -> m20_4  [key=0, style=solid];
m20_4 -> m20_5  [key=0, style=solid];
m20_5 -> m20_6  [key=0, style=solid];
m20_6 -> m20_7  [key=0, style=solid];
m20_7 -> m20_8  [key=0, style=solid];
m20_8 -> m20_2  [key=0, style=bold, color=blue];
m20_9 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m20_9 -> m20_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m20_9 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m20_9 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m20_9 -> m20_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m21_3 -> m21_4  [key=0, style=solid];
m21_4 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_7  [key=2, style=dotted];
m21_6 -> m21_3  [key=0, style=bold, color=blue];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HashCodeCombiner"];
m21_9 -> m21_10  [key=0, style=solid];
m21_9 -> m21_12  [key=2, style=dotted];
m21_10 -> m21_11  [key=0, style=solid];
m21_10 -> m21_13  [key=2, style=dotted];
m21_11 -> m21_8  [key=0, style=bold, color=blue];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_2 -> m21_0  [key=0, style=bold, color=blue];
m21_14 -> m21_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint"];
m21_14 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint"];
m21_14 -> m21_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint"];
m21_14 -> m21_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.ParameterExpressionFingerprint"];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_0  [key=0, style=bold, color=blue];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m22_2 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m22_2 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.JobActivator"];
m22_2 -> m22_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobPerformer"];
m22_3 -> m22_4  [key=0, style=solid];
m22_4 -> m22_5  [key=0, style=solid];
m22_5 -> m22_6  [key=0, style=solid];
m22_6 -> m22_7  [key=0, style=solid];
m22_7 -> m22_8  [key=0, style=solid];
m22_8 -> m22_2  [key=0, style=bold, color=blue];
m22_9 -> m22_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m22_9 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m22_9 -> m22_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m22_9 -> m22_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m22_9 -> m22_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m23_27 -> m23_28  [key=0, style=solid];
m23_27 -> m23_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_28 -> m23_29  [key=0, style=solid];
m23_28 -> m23_22  [key=2, style=dotted];
m23_28 -> m23_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_29 -> m23_27  [key=0, style=bold, color=blue];
m23_3 -> m23_4  [key=0, style=solid];
m23_4 -> m23_3  [key=0, style=bold, color=blue];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_35 -> m23_36  [key=0, style=solid];
m23_35 -> m23_22  [key=2, style=dotted];
m23_35 -> m23_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_36 -> m23_34  [key=0, style=bold, color=blue];
m23_53 -> m23_54  [key=0, style=solid];
m23_53 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_54 -> m23_55  [key=0, style=solid];
m23_54 -> m23_22  [key=2, style=dotted];
m23_54 -> m23_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_55 -> m23_53  [key=0, style=bold, color=blue];
m23_117 -> m23_118  [key=0, style=solid];
m23_117 -> m23_121  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_118 -> m23_119  [key=0, style=solid];
m23_118 -> m23_22  [key=2, style=dotted];
m23_118 -> m23_120  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_119 -> m23_117  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_2 -> m23_0  [key=0, style=bold, color=blue];
m23_105 -> m23_106  [key=0, style=solid];
m23_105 -> m23_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_106 -> m23_107  [key=0, style=solid];
m23_106 -> m23_22  [key=2, style=dotted];
m23_106 -> m23_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_107 -> m23_105  [key=0, style=bold, color=blue];
m23_18 -> m23_19  [key=0, style=solid];
m23_18 -> m23_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_18 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_19 -> m23_20  [key=0, style=solid];
m23_19 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_22  [key=2, style=dotted];
m23_20 -> m23_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_21 -> m23_18  [key=0, style=bold, color=blue];
m23_82 -> m23_83  [key=0, style=solid];
m23_82 -> m23_84  [key=1, style=dashed, color=darkseagreen4, label=int];
m23_82 -> m23_87  [key=1, style=dashed, color=darkseagreen4, label=int];
m23_83 -> m23_84  [key=0, style=solid];
m23_83 -> m23_87  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m23_84 -> m23_85  [key=0, style=solid];
m23_84 -> m23_22  [key=2, style=dotted];
m23_84 -> m23_86  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_85 -> m23_82  [key=0, style=bold, color=blue];
m23_5 -> m23_6  [key=0, style=solid];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_13  [key=2, style=dotted];
m23_6 -> m23_14  [key=2, style=dotted];
m23_6 -> m23_10  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_15  [key=2, style=dotted];
m23_10 -> m23_11  [key=0, style=solid];
m23_10 -> m23_17  [key=2, style=dotted];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_10  [key=0, style=solid];
m23_9 -> m23_8  [key=0, style=solid];
m23_9 -> m23_16  [key=2, style=dotted];
m23_11 -> m23_12  [key=0, style=solid];
m23_12 -> m23_5  [key=0, style=bold, color=blue];
m23_70 -> m23_71  [key=0, style=solid];
m23_70 -> m23_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_71 -> m23_72  [key=0, style=solid];
m23_71 -> m23_22  [key=2, style=dotted];
m23_71 -> m23_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_72 -> m23_70  [key=0, style=bold, color=blue];
m23_76 -> m23_77  [key=0, style=solid];
m23_76 -> m23_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_77 -> m23_78  [key=0, style=solid];
m23_77 -> m23_22  [key=2, style=dotted];
m23_77 -> m23_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_78 -> m23_76  [key=0, style=bold, color=blue];
m23_59 -> m23_60  [key=0, style=solid];
m23_60 -> m23_61  [key=0, style=solid];
m23_60 -> m23_62  [key=2, style=dotted];
m23_61 -> m23_59  [key=0, style=bold, color=blue];
m23_133 -> m23_134  [key=0, style=solid];
m23_133 -> m23_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_134 -> m23_135  [key=0, style=solid];
m23_134 -> m23_22  [key=2, style=dotted];
m23_134 -> m23_136  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_135 -> m23_133  [key=0, style=bold, color=blue];
m23_47 -> m23_48  [key=0, style=solid];
m23_47 -> m23_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_48 -> m23_49  [key=0, style=solid];
m23_48 -> m23_22  [key=2, style=dotted];
m23_48 -> m23_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_49 -> m23_47  [key=0, style=bold, color=blue];
m23_99 -> m23_100  [key=0, style=solid];
m23_99 -> m23_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_100 -> m23_101  [key=0, style=solid];
m23_100 -> m23_22  [key=2, style=dotted];
m23_100 -> m23_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_101 -> m23_99  [key=0, style=bold, color=blue];
m23_136 -> m23_137  [key=0, style=solid];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_26  [key=2, style=dotted];
m23_23 -> m23_24  [key=0, style=solid];
m23_25 -> m23_23  [key=0, style=bold, color=blue];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_33  [key=2, style=dotted];
m23_31 -> m23_26  [key=2, style=dotted];
m23_30 -> m23_31  [key=0, style=solid];
m23_32 -> m23_30  [key=0, style=bold, color=blue];
m23_38 -> m23_39  [key=0, style=solid];
m23_38 -> m23_26  [key=2, style=dotted];
m23_37 -> m23_38  [key=0, style=solid];
m23_39 -> m23_37  [key=0, style=bold, color=blue];
m23_44 -> m23_45  [key=0, style=solid];
m23_44 -> m23_46  [key=2, style=dotted];
m23_44 -> m23_26  [key=2, style=dotted];
m23_43 -> m23_44  [key=0, style=solid];
m23_45 -> m23_43  [key=0, style=bold, color=blue];
m23_51 -> m23_52  [key=0, style=solid];
m23_51 -> m23_46  [key=2, style=dotted];
m23_51 -> m23_26  [key=2, style=dotted];
m23_50 -> m23_51  [key=0, style=solid];
m23_52 -> m23_50  [key=0, style=bold, color=blue];
m23_57 -> m23_58  [key=0, style=solid];
m23_57 -> m23_26  [key=2, style=dotted];
m23_56 -> m23_57  [key=0, style=solid];
m23_58 -> m23_56  [key=0, style=bold, color=blue];
m23_68 -> m23_69  [key=0, style=solid];
m23_68 -> m23_26  [key=2, style=dotted];
m23_67 -> m23_68  [key=0, style=solid];
m23_69 -> m23_67  [key=0, style=bold, color=blue];
m23_74 -> m23_75  [key=0, style=solid];
m23_74 -> m23_26  [key=2, style=dotted];
m23_73 -> m23_74  [key=0, style=solid];
m23_75 -> m23_73  [key=0, style=bold, color=blue];
m23_80 -> m23_81  [key=0, style=solid];
m23_80 -> m23_26  [key=2, style=dotted];
m23_79 -> m23_80  [key=0, style=solid];
m23_81 -> m23_79  [key=0, style=bold, color=blue];
m23_87 -> m23_88  [key=0, style=solid];
m23_87 -> m23_26  [key=2, style=dotted];
m23_86 -> m23_87  [key=0, style=solid];
m23_88 -> m23_86  [key=0, style=bold, color=blue];
m23_95 -> m23_96  [key=0, style=solid];
m23_95 -> m23_26  [key=2, style=dotted];
m23_97 -> m23_98  [key=0, style=solid];
m23_97 -> m23_26  [key=2, style=dotted];
m23_94 -> m23_95  [key=0, style=solid];
m23_94 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_96 -> m23_97  [key=0, style=solid];
m23_96 -> m23_98  [key=0, style=solid];
m23_98 -> m23_94  [key=0, style=bold, color=blue];
m23_103 -> m23_104  [key=0, style=solid];
m23_103 -> m23_33  [key=2, style=dotted];
m23_103 -> m23_26  [key=2, style=dotted];
m23_102 -> m23_103  [key=0, style=solid];
m23_104 -> m23_102  [key=0, style=bold, color=blue];
m23_109 -> m23_110  [key=0, style=solid];
m23_109 -> m23_26  [key=2, style=dotted];
m23_108 -> m23_109  [key=0, style=solid];
m23_110 -> m23_108  [key=0, style=bold, color=blue];
m23_115 -> m23_116  [key=0, style=solid];
m23_115 -> m23_33  [key=2, style=dotted];
m23_115 -> m23_26  [key=2, style=dotted];
m23_114 -> m23_115  [key=0, style=solid];
m23_116 -> m23_114  [key=0, style=bold, color=blue];
m23_121 -> m23_122  [key=0, style=solid];
m23_121 -> m23_26  [key=2, style=dotted];
m23_120 -> m23_121  [key=0, style=solid];
m23_122 -> m23_120  [key=0, style=bold, color=blue];
m23_129 -> m23_130  [key=0, style=solid];
m23_129 -> m23_26  [key=2, style=dotted];
m23_131 -> m23_132  [key=0, style=solid];
m23_131 -> m23_26  [key=2, style=dotted];
m23_128 -> m23_129  [key=0, style=solid];
m23_128 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m23_130 -> m23_131  [key=0, style=solid];
m23_130 -> m23_132  [key=0, style=solid];
m23_132 -> m23_128  [key=0, style=bold, color=blue];
m23_137 -> m23_138  [key=0, style=solid];
m23_137 -> m23_33  [key=2, style=dotted];
m23_137 -> m23_26  [key=2, style=dotted];
m23_138 -> m23_136  [key=0, style=bold, color=blue];
m23_40 -> m23_41  [key=0, style=solid];
m23_40 -> m23_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_41 -> m23_42  [key=0, style=solid];
m23_41 -> m23_22  [key=2, style=dotted];
m23_41 -> m23_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_42 -> m23_40  [key=0, style=bold, color=blue];
m23_123 -> m23_124  [key=0, style=solid];
m23_123 -> m23_126  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_123 -> m23_129  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_123 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_124 -> m23_125  [key=0, style=solid];
m23_124 -> m23_126  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m23_124 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m23_126 -> m23_127  [key=0, style=solid];
m23_126 -> m23_22  [key=2, style=dotted];
m23_126 -> m23_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_125 -> m23_126  [key=0, style=solid];
m23_125 -> m23_129  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m23_125 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m23_127 -> m23_123  [key=0, style=bold, color=blue];
m23_63 -> m23_64  [key=0, style=solid];
m23_63 -> m23_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_63 -> m23_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_64 -> m23_65  [key=0, style=solid];
m23_64 -> m23_68  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m23_65 -> m23_66  [key=0, style=solid];
m23_65 -> m23_22  [key=2, style=dotted];
m23_65 -> m23_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_66 -> m23_63  [key=0, style=bold, color=blue];
m23_89 -> m23_90  [key=0, style=solid];
m23_89 -> m23_92  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_89 -> m23_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_89 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_90 -> m23_91  [key=0, style=solid];
m23_90 -> m23_92  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m23_90 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m23_92 -> m23_93  [key=0, style=solid];
m23_92 -> m23_22  [key=2, style=dotted];
m23_92 -> m23_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_91 -> m23_92  [key=0, style=solid];
m23_91 -> m23_95  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m23_91 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m23_93 -> m23_89  [key=0, style=bold, color=blue];
m23_111 -> m23_112  [key=0, style=solid];
m23_111 -> m23_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_112 -> m23_113  [key=0, style=solid];
m23_112 -> m23_22  [key=2, style=dotted];
m23_112 -> m23_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m23_113 -> m23_111  [key=0, style=bold, color=blue];
m23_139 -> m23_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_60  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_106  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_126  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_139 -> m23_134  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlWriteTransaction"];
m23_140 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_141 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_142 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label=enqueueJobSql];
m23_143 -> m23_31  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_144 -> m23_31  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m23_145 -> m23_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_146 -> m23_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_147 -> m23_44  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_148 -> m23_44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m23_149 -> m23_51  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_150 -> m23_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.Dictionary<string, string>"];
m23_151 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_152 -> m23_57  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_153 -> m23_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_154 -> m23_68  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_155 -> m23_68  [key=1, style=dashed, color=darkseagreen4, label=double];
m23_156 -> m23_68  [key=1, style=dashed, color=darkseagreen4, label=addSql];
m23_157 -> m23_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_158 -> m23_74  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_159 -> m23_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_160 -> m23_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_161 -> m23_87  [key=1, style=dashed, color=darkseagreen4, label=int];
m23_162 -> m23_87  [key=1, style=dashed, color=darkseagreen4, label=int];
m23_163 -> m23_87  [key=1, style=dashed, color=darkseagreen4, label=trimSql];
m23_164 -> m23_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_164 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_165 -> m23_95  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m23_165 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m23_166 -> m23_97  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m23_167 -> m23_103  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_168 -> m23_103  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m23_169 -> m23_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_170 -> m23_115  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_171 -> m23_115  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m23_172 -> m23_121  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_173 -> m23_129  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_173 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_174 -> m23_129  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m23_174 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label=updateSql];
m23_175 -> m23_131  [key=1, style=dashed, color=darkseagreen4, label=insertSql];
m23_176 -> m23_137  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_177 -> m23_137  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m24_2 -> m24_3  [key=0, style=solid];
m24_3 -> m24_4  [key=0, style=solid];
m24_4 -> m24_5  [key=0, style=solid];
m24_5 -> m24_2  [key=0, style=bold, color=blue];
m24_11 -> m24_12  [key=0, style=solid];
m24_11 -> m24_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ApplyStateContext"];
m24_12 -> m24_13  [key=0, style=solid];
m24_12 -> m24_15  [key=1, style=dashed, color=darkseagreen4, label=scheduledState];
m24_16 -> m24_17  [key=0, style=solid];
m24_16 -> m24_21  [key=2, style=dotted];
m24_13 -> m24_14  [key=0, style=solid];
m24_13 -> m24_15  [key=0, style=solid];
m24_15 -> m24_16  [key=0, style=solid];
m24_15 -> m24_20  [key=2, style=dotted];
m24_14 -> m24_17  [key=0, style=solid];
m24_14 -> m24_18  [key=2, style=dotted];
m24_14 -> m24_19  [key=2, style=dotted];
m24_17 -> m24_11  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_0  [key=0, style=bold, color=blue];
m24_6 -> m24_7  [key=0, style=solid];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_9  [key=2, style=dotted];
m24_7 -> m24_10  [key=2, style=dotted];
m24_8 -> m24_6  [key=0, style=bold, color=blue];
m24_22 -> m24_23  [key=0, style=solid];
m24_23 -> m24_24  [key=0, style=solid];
m24_23 -> m24_25  [key=2, style=dotted];
m24_24 -> m24_22  [key=0, style=bold, color=blue];
m24_26 -> m24_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m24_26 -> m24_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m24_26 -> m24_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.ScheduledState"];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_0  [key=0, style=bold, color=blue];
m25_2 -> m25_3  [key=0, style=solid];
m25_3 -> m25_2  [key=0, style=bold, color=blue];
m26_94 -> m26_117  [key=0, style=solid];
m26_117 -> m26_118  [key=0, style=solid];
m26_117 -> m26_122  [key=2, style=dotted];
m26_117 -> m26_119  [key=1, style=dashed, color=darkseagreen4, label=connection];
m26_117 -> m26_120  [key=1, style=dashed, color=darkseagreen4, label=connection];
m26_118 -> m26_119  [key=0, style=solid];
m26_118 -> m26_120  [key=0, style=solid];
m26_119 -> m26_120  [key=0, style=solid];
m26_119 -> m26_123  [key=2, style=dotted];
m26_120 -> m26_121  [key=0, style=solid];
m26_121 -> m26_94  [key=0, style=bold, color=blue];
m26_14 -> m26_133  [key=0, style=solid];
m26_133 -> m26_134  [key=0, style=solid];
m26_133 -> m26_135  [key=0, style=solid];
m26_134 -> m26_135  [key=0, style=solid];
m26_134 -> m26_81  [key=2, style=dotted];
m26_134 -> m26_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_135 -> m26_136  [key=0, style=solid];
m26_135 -> m26_137  [key=2, style=dotted];
m26_136 -> m26_14  [key=0, style=bold, color=blue];
m26_124 -> m26_125  [key=0, style=solid];
m26_124 -> m26_128  [key=3, color=darkorchid, style=bold, label="Parameter variable IDbConnection connection"];
m26_125 -> m26_126  [key=0, style=solid];
m26_125 -> m26_127  [key=2, style=dotted];
m26_126 -> m26_124  [key=0, style=bold, color=blue];
m26_128 -> m26_129  [key=0, style=solid];
m26_128 -> m26_130  [key=1, style=dashed, color=darkseagreen4, label=IDbConnection];
m26_129 -> m26_130  [key=0, style=solid];
m26_129 -> m26_131  [key=0, style=solid];
m26_129 -> m26_124  [key=2, style=dotted];
m26_130 -> m26_131  [key=0, style=solid];
m26_130 -> m26_132  [key=2, style=dotted];
m26_131 -> m26_128  [key=0, style=bold, color=blue];
m26_17 -> m26_18  [key=0, style=solid];
m26_17 -> m26_19  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m26_17 -> m26_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m26_17 -> m26_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m26_17 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m26_17 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m26_18 -> m26_19  [key=0, style=solid];
m26_18 -> m26_20  [key=0, style=solid];
m26_19 -> m26_25  [key=0, style=solid];
m26_19 -> m26_11  [key=2, style=dotted];
m26_19 -> m26_12  [key=2, style=dotted];
m26_20 -> m26_21  [key=0, style=solid];
m26_20 -> m26_22  [key=0, style=solid];
m26_21 -> m26_25  [key=0, style=solid];
m26_21 -> m26_11  [key=2, style=dotted];
m26_21 -> m26_12  [key=2, style=dotted];
m26_22 -> m26_23  [key=0, style=solid];
m26_23 -> m26_24  [key=0, style=solid];
m26_24 -> m26_25  [key=0, style=solid];
m26_24 -> m26_14  [key=2, style=dotted];
m26_25 -> m26_17  [key=0, style=bold, color=blue];
m26_34 -> m26_35  [key=0, style=solid];
m26_34 -> m26_36  [key=0, style=bold, color=crimson];
m26_35 -> m26_36  [key=0, style=solid];
m26_35 -> m26_38  [key=2, style=dotted];
m26_36 -> m26_37  [key=0, style=solid];
m26_36 -> m26_39  [key=2, style=dotted];
m26_37 -> m26_34  [key=0, style=bold, color=blue];
m26_30 -> m26_31  [key=0, style=solid];
m26_31 -> m26_32  [key=0, style=solid];
m26_31 -> m26_33  [key=2, style=dotted];
m26_32 -> m26_30  [key=0, style=bold, color=blue];
m26_96 -> m26_97  [key=0, style=solid];
m26_96 -> m26_101  [key=1, style=dashed, color=darkseagreen4, label="System.Action<DbConnection, DbTransaction>"];
m26_97 -> m26_98  [key=0, style=solid];
m26_97 -> m26_99  [key=2, style=dotted];
m26_97 -> m26_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_97 -> m26_82  [key=3, color=darkorchid, style=bold, label="method methodReturn bool "];
m26_98 -> m26_96  [key=0, style=bold, color=blue];
m26_40 -> m26_41  [key=0, style=solid];
m26_40 -> m26_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Logging.ILog"];
m26_41 -> m26_42  [key=0, style=solid];
m26_41 -> m26_44  [key=2, style=dotted];
m26_42 -> m26_43  [key=0, style=solid];
m26_42 -> m26_44  [key=2, style=dotted];
m26_43 -> m26_40  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_0  [key=0, style=bold, color=blue];
m26_99 -> m26_105  [key=0, style=solid];
m26_99 -> m26_109  [key=1, style=dashed, color=darkseagreen4, label="IsolationLevel?"];
m26_99 -> m26_110  [key=1, style=dashed, color=darkseagreen4, label="System.Func<DbConnection, DbTransaction, T>"];
m26_99 -> m26_97  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<DbConnection, DbTransaction, T> func"];
m26_99 -> m26_90  [key=3, color=darkorchid, style=bold, label="Parameter variable IsolationLevel? isolationLevel"];
m26_105 -> m26_106  [key=0, style=solid];
m26_105 -> m26_107  [key=2, style=dotted];
m26_105 -> m26_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_105 -> m26_105  [key=3, color=darkorchid, style=bold, label="method methodReturn T "];
m26_106 -> m26_99  [key=0, style=bold, color=blue];
m26_171 -> m26_172  [key=0, style=solid];
m26_171 -> m26_173  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m26_68 -> m26_69  [key=0, style=solid];
m26_71 -> m26_72  [key=0, style=solid];
m26_75 -> m26_76  [key=0, style=solid];
m26_78 -> m26_79  [key=0, style=solid];
m26_69 -> m26_70  [key=0, style=solid];
m26_69 -> m26_61  [key=2, style=dotted];
m26_70 -> m26_68  [key=0, style=bold, color=blue];
m26_72 -> m26_73  [key=0, style=solid];
m26_72 -> m26_74  [key=2, style=dotted];
m26_73 -> m26_71  [key=0, style=bold, color=blue];
m26_76 -> m26_77  [key=0, style=solid];
m26_77 -> m26_75  [key=0, style=bold, color=blue];
m26_79 -> m26_80  [key=0, style=solid];
m26_80 -> m26_78  [key=0, style=bold, color=blue];
m26_86 -> m26_87  [key=0, style=solid];
m26_86 -> m26_89  [key=2, style=dotted];
m26_85 -> m26_86  [key=0, style=solid];
m26_87 -> m26_88  [key=0, style=solid];
m26_88 -> m26_85  [key=0, style=bold, color=blue];
m26_101 -> m26_102  [key=0, style=solid];
m26_101 -> m26_104  [key=2, style=dotted];
m26_100 -> m26_101  [key=0, style=solid];
m26_102 -> m26_103  [key=0, style=solid];
m26_103 -> m26_100  [key=0, style=bold, color=blue];
m26_109 -> m26_110  [key=0, style=solid];
m26_109 -> m26_114  [key=2, style=dotted];
m26_109 -> m26_111  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m26_110 -> m26_111  [key=0, style=solid];
m26_110 -> m26_115  [key=2, style=dotted];
m26_110 -> m26_112  [key=1, style=dashed, color=darkseagreen4, label=result];
m26_108 -> m26_109  [key=0, style=solid];
m26_108 -> m26_110  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m26_111 -> m26_112  [key=0, style=solid];
m26_111 -> m26_116  [key=2, style=dotted];
m26_112 -> m26_113  [key=0, style=solid];
m26_113 -> m26_108  [key=0, style=bold, color=blue];
m26_138 -> m26_139  [key=0, style=solid];
m26_139 -> m26_140  [key=0, style=solid];
m26_139 -> m26_141  [key=2, style=dotted];
m26_140 -> m26_138  [key=0, style=bold, color=blue];
m26_149 -> m26_150  [key=0, style=solid];
m26_149 -> m26_84  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.Metric "];
m26_149 -> m26_149  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m26_150 -> m26_151  [key=0, style=solid];
m26_150 -> m26_153  [key=1, style=dashed, color=darkseagreen4, label=sqlStorage];
m26_151 -> m26_152  [key=0, style=solid];
m26_151 -> m26_153  [key=0, style=solid];
m26_153 -> m26_154  [key=0, style=solid];
m26_153 -> m26_84  [key=2, style=dotted];
m26_153 -> m26_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_152 -> m26_154  [key=0, style=solid];
m26_152 -> m26_155  [key=2, style=dotted];
m26_154 -> m26_149  [key=0, style=bold, color=blue];
m26_156 -> m26_157  [key=0, style=solid];
m26_156 -> m26_158  [key=1, style=dashed, color=darkseagreen4, label=DbConnection];
m26_157 -> m26_158  [key=0, style=solid];
m26_158 -> m26_159  [key=0, style=solid];
m26_158 -> m26_161  [key=2, style=dotted];
m26_158 -> m26_162  [key=2, style=dotted];
m26_159 -> m26_160  [key=0, style=solid];
m26_159 -> m26_163  [key=2, style=dotted];
m26_159 -> m26_164  [key=2, style=dotted];
m26_160 -> m26_156  [key=0, style=bold, color=blue];
m26_165 -> m26_166  [key=0, style=solid];
m26_165 -> m26_84  [key=3, color=darkorchid, style=bold, label="method methodReturn Hangfire.Dashboard.Metric "];
m26_165 -> m26_165  [key=3, color=darkorchid, style=bold, label="Local variable string sqlQuery"];
m26_166 -> m26_167  [key=0, style=solid];
m26_166 -> m26_169  [key=1, style=dashed, color=darkseagreen4, label=sqlStorage];
m26_167 -> m26_168  [key=0, style=solid];
m26_167 -> m26_169  [key=0, style=solid];
m26_169 -> m26_170  [key=0, style=solid];
m26_169 -> m26_84  [key=2, style=dotted];
m26_169 -> m26_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_168 -> m26_170  [key=0, style=solid];
m26_168 -> m26_155  [key=2, style=dotted];
m26_170 -> m26_165  [key=0, style=bold, color=blue];
m26_172 -> m26_173  [key=0, style=solid];
m26_173 -> m26_174  [key=0, style=solid];
m26_173 -> m26_161  [key=2, style=dotted];
m26_173 -> m26_162  [key=2, style=dotted];
m26_174 -> m26_175  [key=0, style=solid];
m26_174 -> m26_163  [key=2, style=dotted];
m26_174 -> m26_164  [key=2, style=dotted];
m26_175 -> m26_171  [key=0, style=bold, color=blue];
m26_26 -> m26_27  [key=0, style=solid];
m26_27 -> m26_28  [key=0, style=solid];
m26_27 -> m26_29  [key=2, style=dotted];
m26_28 -> m26_26  [key=0, style=bold, color=blue];
m26_137 -> m26_142  [key=0, style=solid];
m26_142 -> m26_143  [key=0, style=solid];
m26_142 -> m26_145  [key=2, style=dotted];
m26_143 -> m26_144  [key=0, style=solid];
m26_143 -> m26_146  [key=2, style=dotted];
m26_144 -> m26_137  [key=0, style=bold, color=blue];
m26_45 -> m26_46  [key=0, style=solid];
m26_46 -> m26_47  [key=0, style=solid];
m26_46 -> m26_57  [key=1, style=dashed, color=darkseagreen4, label=canNotParseMessage];
m26_46 -> m26_59  [key=1, style=dashed, color=darkseagreen4, label=canNotParseMessage];
m26_46 -> m26_46  [key=3, color=darkorchid, style=bold, label="Local variable string canNotParseMessage"];
m26_47 -> m26_48  [key=0, style=solid];
m26_47 -> m26_61  [key=2, style=dotted];
m26_47 -> m26_62  [key=2, style=dotted];
m26_47 -> m26_63  [key=2, style=dotted];
m26_47 -> m26_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_47 -> m26_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_47 -> m26_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_47 -> m26_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_47 -> m26_50  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_47 -> m26_51  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_47 -> m26_55  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_47 -> m26_56  [key=1, style=dashed, color=darkseagreen4, label=parts];
m26_57 -> m26_60  [key=0, style=solid];
m26_59 -> m26_60  [key=0, style=solid];
m26_48 -> m26_49  [key=0, style=solid];
m26_48 -> m26_64  [key=2, style=dotted];
m26_48 -> m26_51  [key=1, style=dashed, color=darkseagreen4, label=builder];
m26_48 -> m26_52  [key=1, style=dashed, color=darkseagreen4, label=builder];
m26_48 -> m26_53  [key=1, style=dashed, color=darkseagreen4, label=builder];
m26_48 -> m26_56  [key=1, style=dashed, color=darkseagreen4, label=builder];
m26_48 -> m26_57  [key=1, style=dashed, color=darkseagreen4, label=builder];
m26_50 -> m26_51  [key=0, style=solid];
m26_50 -> m26_49  [key=0, style=solid];
m26_50 -> m26_65  [key=2, style=dotted];
m26_51 -> m26_52  [key=0, style=solid];
m26_51 -> m26_66  [key=2, style=dotted];
m26_55 -> m26_56  [key=0, style=solid];
m26_55 -> m26_54  [key=0, style=solid];
m26_55 -> m26_65  [key=2, style=dotted];
m26_56 -> m26_57  [key=0, style=solid];
m26_56 -> m26_66  [key=2, style=dotted];
m26_49 -> m26_50  [key=0, style=solid];
m26_49 -> m26_52  [key=0, style=solid];
m26_49 -> m26_51  [key=1, style=dashed, color=darkseagreen4, label=alias];
m26_52 -> m26_53  [key=0, style=solid];
m26_52 -> m26_54  [key=0, style=solid];
m26_53 -> m26_54  [key=0, style=solid];
m26_53 -> m26_67  [key=2, style=dotted];
m26_54 -> m26_55  [key=0, style=solid];
m26_54 -> m26_57  [key=0, style=solid];
m26_54 -> m26_56  [key=1, style=dashed, color=darkseagreen4, label=alias];
m26_58 -> m26_59  [key=0, style=solid];
m26_60 -> m26_45  [key=0, style=bold, color=blue];
m26_39 -> m26_17  [key=3, color=darkorchid, style=bold, label="Field variable DbConnection _existingConnection"];
m26_2 -> m26_3  [key=0, style=solid];
m26_2 -> m26_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_2 -> m26_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m26_2 -> m26_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m26_2 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m26_2 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorageOptions"];
m26_3 -> m26_4  [key=0, style=solid];
m26_3 -> m26_5  [key=0, style=solid];
m26_4 -> m26_10  [key=0, style=solid];
m26_4 -> m26_11  [key=2, style=dotted];
m26_4 -> m26_12  [key=2, style=dotted];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_7  [key=0, style=solid];
m26_6 -> m26_10  [key=0, style=solid];
m26_6 -> m26_11  [key=2, style=dotted];
m26_6 -> m26_12  [key=2, style=dotted];
m26_7 -> m26_8  [key=0, style=solid];
m26_7 -> m26_13  [key=2, style=dotted];
m26_8 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_14  [key=2, style=dotted];
m26_10 -> m26_2  [key=0, style=bold, color=blue];
m26_81 -> m26_82  [key=0, style=solid];
m26_81 -> m26_86  [key=1, style=dashed, color=darkseagreen4, label="System.Action<DbConnection>"];
m26_81 -> m26_134  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<DbConnection> action"];
m26_82 -> m26_83  [key=0, style=solid];
m26_82 -> m26_84  [key=2, style=dotted];
m26_82 -> m26_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m26_82 -> m26_82  [key=3, color=darkorchid, style=bold, label="method methodReturn bool "];
m26_83 -> m26_81  [key=0, style=bold, color=blue];
m26_84 -> m26_90  [key=0, style=solid];
m26_84 -> m26_92  [key=1, style=dashed, color=darkseagreen4, label="System.Func<DbConnection, T>"];
m26_84 -> m26_82  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<DbConnection, T> func"];
m26_84 -> m26_149  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<DbConnection, T> func"];
m26_84 -> m26_165  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<DbConnection, T> func"];
m26_90 -> m26_91  [key=0, style=solid];
m26_90 -> m26_90  [key=3, color=darkorchid, style=bold, label="Local variable DbConnection connection"];
m26_90 -> m26_94  [key=3, color=darkorchid, style=bold, label="Local variable DbConnection connection"];
m26_92 -> m26_93  [key=0, style=solid];
m26_92 -> m26_95  [key=2, style=dotted];
m26_91 -> m26_92  [key=0, style=solid];
m26_91 -> m26_94  [key=2, style=dotted];
m26_93 -> m26_84  [key=0, style=bold, color=blue];
m26_13 -> m26_147  [key=0, style=solid];
m26_13 -> m26_2  [key=3, color=darkorchid, style=bold, label="Parameter variable string nameOrConnectionString"];
m26_13 -> m26_13  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetConnectionString"];
m26_147 -> m26_148  [key=0, style=solid];
m26_148 -> m26_13  [key=0, style=bold, color=blue];
m26_15 -> m26_16  [key=0, style=solid];
m26_16 -> m26_15  [key=0, style=bold, color=blue];
m26_176 -> m26_7  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_8  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_22  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_23  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_24  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_31  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_35  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_36  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_42  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_47  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_82  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_91  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_97  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_105  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_117  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_125  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_129  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_133  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_134  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_139  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_135  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_142  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_176 -> m26_143  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
m26_177 -> m26_86  [key=1, style=dashed, color=darkseagreen4, label="System.Action<DbConnection>"];
m26_178 -> m26_101  [key=1, style=dashed, color=darkseagreen4, label="System.Action<DbConnection, DbTransaction>"];
m26_179 -> m26_109  [key=1, style=dashed, color=darkseagreen4, label="IsolationLevel?"];
m26_180 -> m26_110  [key=1, style=dashed, color=darkseagreen4, label="System.Func<DbConnection, DbTransaction, T>"];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<string>"];
m27_2 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m27_3 -> m27_4  [key=0, style=solid];
m27_4 -> m27_5  [key=0, style=solid];
m27_5 -> m27_6  [key=0, style=solid];
m27_6 -> m27_2  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_0  [key=0, style=bold, color=blue];
m27_7 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m27_7 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m27_7 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m28_19 -> m28_20  [key=0, style=solid];
m28_20 -> m28_21  [key=0, style=solid];
m28_20 -> m28_7  [key=2, style=dotted];
m28_20 -> m28_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_15  [key=2, style=dotted];
m28_21 -> m28_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_22 -> m28_19  [key=0, style=bold, color=blue];
m28_11 -> m28_12  [key=0, style=solid, color=red];
m28_12 -> m28_13  [key=0, style=solid, color=red];
m28_12 -> m28_7  [key=2, style=dotted, color=red];
m28_12 -> m28_17  [key=1, style=dashed, color=red, label=options];
m28_13 -> m28_14  [key=0, style=solid, color=red];
m28_13 -> m28_15  [key=2, style=dotted, color=red];
m28_13 -> m28_16  [key=1, style=dashed, color=red, label="lambda expression"];
m28_14 -> m28_11  [key=0, style=bold, color=blue];
m28_33 -> m28_34  [key=0, style=solid];
m28_34 -> m28_35  [key=0, style=solid];
m28_34 -> m28_7  [key=2, style=dotted];
m28_34 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label=options];
m28_35 -> m28_36  [key=0, style=solid];
m28_35 -> m28_15  [key=2, style=dotted];
m28_35 -> m28_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_36 -> m28_33  [key=0, style=bold, color=blue];
m28_40 -> m28_41  [key=0, style=solid];
m28_41 -> m28_42  [key=0, style=solid];
m28_41 -> m28_7  [key=2, style=dotted];
m28_42 -> m28_43  [key=0, style=solid];
m28_42 -> m28_44  [key=2, style=dotted];
m28_43 -> m28_40  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid, color=green];
m28_1 -> m28_2  [key=0, style=solid, color=green];
m28_1 -> m28_7  [key=2, style=dotted];
m28_1 -> m28_3  [key=1, style=dashed, color=darkseagreen4, label=options];
m28_1 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label=options];
m28_1 -> m28_5  [key=1, style=dashed, color=red, label=options];
m28_2 -> m28_0  [key=0, style=bold, color=blue];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_8  [key=2, style=dotted];
m28_2 -> m28_9  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_9  [key=2, style=dotted];
m28_4 -> m28_5  [key=0, style=solid, color=red];
m28_4 -> m28_10  [key=2, style=dotted];
m28_5 -> m28_6  [key=0, style=solid, color=red];
m28_5 -> m28_10  [key=2, style=dotted, color=red];
m28_6 -> m28_0  [key=0, style=bold, color=blue];
m28_26 -> m28_27  [key=0, style=solid];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_7  [key=2, style=dotted];
m28_27 -> m28_31  [key=1, style=dashed, color=darkseagreen4, label=options];
m28_28 -> m28_29  [key=0, style=solid];
m28_28 -> m28_15  [key=2, style=dotted];
m28_28 -> m28_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_29 -> m28_26  [key=0, style=bold, color=blue];
m28_37 -> m28_38  [key=0, style=solid];
m28_17 -> m28_18  [key=0, style=solid, color=red];
m28_16 -> m28_17  [key=0, style=solid, color=red];
m28_18 -> m28_16  [key=0, style=bold, color=blue];
m28_24 -> m28_25  [key=0, style=solid];
m28_23 -> m28_24  [key=0, style=solid];
m28_25 -> m28_23  [key=0, style=bold, color=blue];
m28_31 -> m28_32  [key=0, style=solid];
m28_30 -> m28_31  [key=0, style=solid];
m28_32 -> m28_30  [key=0, style=bold, color=blue];
m28_38 -> m28_39  [key=0, style=solid];
m28_39 -> m28_37  [key=0, style=bold, color=blue];
m28_7 -> m28_45  [key=0, style=solid];
m28_45 -> m28_46  [key=0, style=solid];
m28_45 -> m28_47  [key=2, style=dotted];
m28_46 -> m28_7  [key=0, style=bold, color=blue];
m28_48 -> m28_17  [key=1, style=dashed, color=red, label=options];
m28_49 -> m28_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m28_50 -> m28_31  [key=1, style=dashed, color=darkseagreen4, label=options];
m28_51 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label=options];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_0  [key=0, style=bold, color=blue];
m30_35 -> m30_36  [key=0, style=solid];
m30_36 -> m30_37  [key=0, style=solid];
m30_36 -> m30_38  [key=0, style=solid];
m30_37 -> m30_46  [key=0, style=solid];
m30_38 -> m30_39  [key=0, style=solid];
m30_39 -> m30_40  [key=0, style=solid];
m30_39 -> m30_47  [key=2, style=dotted];
m30_40 -> m30_41  [key=0, style=solid];
m30_40 -> m30_47  [key=2, style=dotted];
m30_41 -> m30_42  [key=0, style=solid];
m30_41 -> m30_31  [key=2, style=dotted];
m30_42 -> m30_43  [key=0, style=solid];
m30_42 -> m30_48  [key=2, style=dotted];
m30_43 -> m30_44  [key=0, style=solid];
m30_43 -> m30_49  [key=2, style=dotted];
m30_44 -> m30_45  [key=0, style=solid];
m30_44 -> m30_50  [key=2, style=dotted];
m30_45 -> m30_46  [key=0, style=solid];
m30_45 -> m30_51  [key=2, style=dotted];
m30_46 -> m30_35  [key=0, style=bold, color=blue];
m30_0 -> m30_1  [key=0, style=solid];
m30_0 -> m30_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m30_0 -> m30_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m30_0 -> m30_7  [key=1, style=dashed, color=darkseagreen4, label=int];
m30_0 -> m30_8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m30_0 -> m30_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_0 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m30_1 -> m30_2  [key=0, style=solid];
m30_1 -> m30_3  [key=0, style=solid];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_5  [key=0, style=solid];
m30_5 -> m30_6  [key=0, style=solid];
m30_5 -> m30_7  [key=0, style=solid];
m30_5 -> m30_21  [key=2, style=dotted];
m30_5 -> m30_5  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m30_5 -> m30_16  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m30_7 -> m30_8  [key=0, style=solid];
m30_8 -> m30_9  [key=0, style=solid];
m30_8 -> m30_22  [key=2, style=dotted];
m30_9 -> m30_10  [key=0, style=solid];
m30_9 -> m30_23  [key=2, style=dotted];
m30_9 -> m30_24  [key=2, style=dotted];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_25  [key=2, style=dotted];
m30_11 -> m30_26  [key=2, style=dotted];
m30_11 -> m30_27  [key=2, style=dotted];
m30_2 -> m30_18  [key=0, style=solid];
m30_2 -> m30_19  [key=2, style=dotted];
m30_4 -> m30_18  [key=0, style=solid];
m30_4 -> m30_20  [key=2, style=dotted];
m30_6 -> m30_18  [key=0, style=solid];
m30_6 -> m30_20  [key=2, style=dotted];
m30_16 -> m30_17  [key=0, style=solid];
m30_16 -> m30_32  [key=2, style=dotted];
m30_16 -> m30_33  [key=2, style=dotted];
m30_10 -> m30_11  [key=0, style=solid];
m30_12 -> m30_13  [key=0, style=solid];
m30_12 -> m30_28  [key=2, style=dotted];
m30_13 -> m30_14  [key=0, style=solid];
m30_13 -> m30_29  [key=2, style=dotted];
m30_14 -> m30_15  [key=0, style=solid];
m30_14 -> m30_30  [key=2, style=dotted];
m30_15 -> m30_16  [key=0, style=solid];
m30_15 -> m30_31  [key=2, style=dotted];
m30_17 -> m30_18  [key=0, style=solid];
m30_17 -> m30_32  [key=2, style=dotted];
m30_17 -> m30_34  [key=2, style=dotted];
m30_18 -> m30_0  [key=0, style=bold, color=blue];
m30_70 -> m30_71  [key=0, style=solid];
m30_71 -> m30_72  [key=0, style=solid];
m30_71 -> m30_88  [key=2, style=dotted];
m30_72 -> m30_73  [key=0, style=solid];
m30_72 -> m30_74  [key=0, style=solid];
m30_73 -> m30_85  [key=0, style=solid];
m30_73 -> m30_87  [key=0, style=solid];
m30_73 -> m30_89  [key=2, style=dotted];
m30_74 -> m30_75  [key=0, style=solid];
m30_74 -> m30_82  [key=0, style=solid];
m30_74 -> m30_85  [key=0, style=solid];
m30_74 -> m30_87  [key=0, style=solid];
m30_75 -> m30_76  [key=0, style=solid];
m30_75 -> m30_90  [key=2, style=dotted];
m30_75 -> m30_81  [key=1, style=dashed, color=darkseagreen4, label=worker];
m30_82 -> m30_83  [key=0, style=solid];
m30_85 -> m30_86  [key=0, style=solid];
m30_87 -> m30_70  [key=0, style=bold, color=blue];
m30_76 -> m30_77  [key=0, style=solid];
m30_81 -> m30_73  [key=0, style=solid];
m30_81 -> m30_92  [key=2, style=dotted];
m30_77 -> m30_78  [key=0, style=solid];
m30_77 -> m30_91  [key=2, style=dotted];
m30_77 -> m30_80  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m30_77 -> m30_81  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m30_78 -> m30_79  [key=0, style=solid];
m30_78 -> m30_80  [key=0, style=solid];
m30_80 -> m30_76  [key=0, style=solid];
m30_80 -> m30_81  [key=0, style=solid];
m30_79 -> m30_85  [key=0, style=solid];
m30_79 -> m30_87  [key=0, style=solid];
m30_79 -> m30_89  [key=2, style=dotted];
m30_84 -> m30_87  [key=0, style=solid];
m30_84 -> m30_93  [key=2, style=dotted];
m30_86 -> m30_87  [key=0, style=solid];
m30_86 -> m30_94  [key=2, style=dotted];
m30_83 -> m30_84  [key=0, style=solid];
m30_83 -> m30_31  [key=2, style=dotted];
m30_88 -> m30_95  [key=0, style=solid];
m30_95 -> m30_96  [key=0, style=solid];
m30_95 -> m30_58  [key=2, style=dotted];
m30_95 -> m30_97  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m30_95 -> m30_100  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m30_95 -> m30_101  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m30_96 -> m30_97  [key=0, style=solid];
m30_96 -> m30_59  [key=2, style=dotted];
m30_96 -> m30_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_97 -> m30_98  [key=0, style=solid];
m30_97 -> m30_59  [key=2, style=dotted];
m30_97 -> m30_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_100 -> m30_98  [key=0, style=solid];
m30_100 -> m30_59  [key=2, style=dotted];
m30_100 -> m30_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_101 -> m30_102  [key=0, style=solid];
m30_101 -> m30_60  [key=2, style=dotted];
m30_98 -> m30_99  [key=0, style=solid];
m30_98 -> m30_101  [key=0, style=solid];
m30_99 -> m30_100  [key=0, style=solid];
m30_99 -> m30_115  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m30_102 -> m30_88  [key=0, style=bold, color=blue];
m30_127 -> m30_128  [key=0, style=solid];
m30_127 -> m30_64  [key=2, style=dotted];
m30_127 -> m30_69  [key=2, style=dotted];
m30_62 -> m30_63  [key=0, style=solid];
m30_62 -> m30_64  [key=2, style=dotted];
m30_62 -> m30_65  [key=2, style=dotted];
m30_67 -> m30_68  [key=0, style=solid];
m30_67 -> m30_64  [key=2, style=dotted];
m30_67 -> m30_69  [key=2, style=dotted];
m30_61 -> m30_62  [key=0, style=solid];
m30_66 -> m30_67  [key=0, style=solid];
m30_63 -> m30_61  [key=0, style=bold, color=blue];
m30_68 -> m30_66  [key=0, style=bold, color=blue];
m30_103 -> m30_104  [key=0, style=solid];
m30_107 -> m30_108  [key=0, style=solid];
m30_115 -> m30_116  [key=0, style=solid];
m30_115 -> m30_64  [key=2, style=dotted];
m30_115 -> m30_106  [key=2, style=dotted];
m30_114 -> m30_115  [key=0, style=solid];
m30_104 -> m30_105  [key=0, style=solid];
m30_104 -> m30_106  [key=2, style=dotted];
m30_105 -> m30_103  [key=0, style=bold, color=blue];
m30_108 -> m30_109  [key=0, style=solid];
m30_108 -> m30_64  [key=2, style=dotted];
m30_108 -> m30_110  [key=2, style=dotted];
m30_108 -> m30_111  [key=2, style=dotted];
m30_108 -> m30_112  [key=2, style=dotted];
m30_108 -> m30_113  [key=2, style=dotted];
m30_109 -> m30_107  [key=0, style=bold, color=blue];
m30_116 -> m30_114  [key=0, style=bold, color=blue];
m30_122 -> m30_123  [key=0, style=solid];
m30_126 -> m30_127  [key=0, style=solid];
m30_123 -> m30_124  [key=0, style=solid];
m30_123 -> m30_125  [key=2, style=dotted];
m30_124 -> m30_122  [key=0, style=bold, color=blue];
m30_128 -> m30_126  [key=0, style=bold, color=blue];
m30_119 -> m30_120  [key=0, style=solid];
m30_119 -> m30_59  [key=2, style=dotted];
m30_119 -> m30_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_93 -> m30_117  [key=0, style=solid];
m30_117 -> m30_118  [key=0, style=solid];
m30_117 -> m30_58  [key=2, style=dotted];
m30_117 -> m30_119  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m30_117 -> m30_120  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m30_118 -> m30_119  [key=0, style=solid];
m30_118 -> m30_59  [key=2, style=dotted];
m30_118 -> m30_122  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_120 -> m30_121  [key=0, style=solid];
m30_120 -> m30_60  [key=2, style=dotted];
m30_121 -> m30_93  [key=0, style=bold, color=blue];
m30_55 -> m30_56  [key=0, style=solid];
m30_55 -> m30_59  [key=2, style=dotted];
m30_55 -> m30_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_52 -> m30_53  [key=0, style=solid];
m30_52 -> m30_54  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_52 -> m30_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_52 -> m30_55  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_52 -> m30_67  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_53 -> m30_54  [key=0, style=solid];
m30_53 -> m30_58  [key=2, style=dotted];
m30_53 -> m30_55  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m30_53 -> m30_56  [key=1, style=dashed, color=darkseagreen4, label=transaction];
m30_54 -> m30_55  [key=0, style=solid];
m30_54 -> m30_59  [key=2, style=dotted];
m30_54 -> m30_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m30_56 -> m30_57  [key=0, style=solid];
m30_56 -> m30_60  [key=2, style=dotted];
m30_57 -> m30_52  [key=0, style=bold, color=blue];
m30_129 -> m30_7  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_9  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_15  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_17  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_38  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_40  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_41  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_42  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_45  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_72  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_84  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_86  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_98  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_115  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_118  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_123  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_119  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_129 -> m30_127  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.JobServer"];
m30_130 -> m30_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_130 -> m30_67  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_131 -> m30_62  [key=1, style=dashed, color=darkseagreen4, label=string];
m30_132 -> m30_115  [key=1, style=dashed, color=darkseagreen4, label=queueName];
m31_153 -> m31_154  [key=0, style=solid];
m31_154 -> m31_155  [key=0, style=solid];
m31_154 -> m31_11  [key=2, style=dotted];
m31_154 -> m31_12  [key=2, style=dotted];
m31_154 -> m31_162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_155 -> m31_156  [key=0, style=solid];
m31_155 -> m31_99  [key=2, style=dotted];
m31_155 -> m31_159  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_156 -> m31_157  [key=0, style=solid];
m31_156 -> m31_119  [key=2, style=dotted];
m31_159 -> m31_160  [key=0, style=solid];
m31_159 -> m31_81  [key=2, style=dotted];
m31_159 -> m31_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_157 -> m31_158  [key=0, style=solid];
m31_157 -> m31_161  [key=2, style=dotted];
m31_158 -> m31_159  [key=0, style=solid];
m31_158 -> m31_81  [key=2, style=dotted];
m31_158 -> m31_166  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_160 -> m31_153  [key=0, style=bold, color=blue];
m31_270 -> m31_271  [key=0, style=solid];
m31_271 -> m31_272  [key=0, style=solid];
m31_271 -> m31_99  [key=2, style=dotted];
m31_271 -> m31_274  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_271 -> m31_275  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_271 -> m31_276  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_272 -> m31_273  [key=0, style=solid];
m31_272 -> m31_262  [key=2, style=dotted];
m31_272 -> m31_8  [key=2, style=dotted];
m31_272 -> m31_278  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_272 -> m31_274  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_272 -> m31_282  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_272 -> m31_275  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_272 -> m31_276  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_272 -> m31_286  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_274 -> m31_275  [key=0, style=solid];
m31_274 -> m31_11  [key=2, style=dotted];
m31_274 -> m31_12  [key=2, style=dotted];
m31_274 -> m31_281  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_275 -> m31_276  [key=0, style=solid];
m31_275 -> m31_103  [key=2, style=dotted];
m31_276 -> m31_277  [key=0, style=solid];
m31_276 -> m31_81  [key=2, style=dotted];
m31_276 -> m31_285  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_273 -> m31_274  [key=0, style=solid];
m31_273 -> m31_10  [key=2, style=dotted];
m31_273 -> m31_276  [key=1, style=dashed, color=darkseagreen4, label=electedState];
m31_273 -> m31_286  [key=1, style=dashed, color=darkseagreen4, label=electedState];
m31_277 -> m31_270  [key=0, style=bold, color=blue];
m31_99 -> m31_348  [key=0, style=solid];
m31_348 -> m31_349  [key=0, style=solid];
m31_348 -> m31_350  [key=2, style=dotted];
m31_349 -> m31_99  [key=0, style=bold, color=blue];
m31_210 -> m31_211  [key=0, style=solid];
m31_211 -> m31_212  [key=0, style=solid];
m31_211 -> m31_11  [key=2, style=dotted];
m31_211 -> m31_179  [key=2, style=dotted];
m31_211 -> m31_8  [key=2, style=dotted];
m31_211 -> m31_12  [key=2, style=dotted];
m31_211 -> m31_219  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_211 -> m31_222  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_212 -> m31_213  [key=0, style=solid];
m31_212 -> m31_99  [key=2, style=dotted];
m31_212 -> m31_214  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_212 -> m31_215  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_213 -> m31_214  [key=0, style=solid];
m31_213 -> m31_11  [key=2, style=dotted];
m31_213 -> m31_12  [key=2, style=dotted];
m31_213 -> m31_225  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_214 -> m31_215  [key=0, style=solid];
m31_214 -> m31_119  [key=2, style=dotted];
m31_214 -> m31_216  [key=1, style=dashed, color=darkseagreen4, label=result];
m31_215 -> m31_216  [key=0, style=solid];
m31_215 -> m31_81  [key=2, style=dotted];
m31_215 -> m31_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_216 -> m31_217  [key=0, style=solid];
m31_216 -> m31_218  [key=2, style=dotted];
m31_217 -> m31_210  [key=0, style=bold, color=blue];
m31_262 -> m31_262  [key=3, color=darkorchid, style=bold, label="Field variable string StateName"];
m31_38 -> m31_39  [key=0, style=solid];
m31_39 -> m31_40  [key=0, style=solid];
m31_39 -> m31_27  [key=2, style=dotted];
m31_39 -> m31_42  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_40 -> m31_41  [key=0, style=solid];
m31_40 -> m31_33  [key=2, style=dotted];
m31_41 -> m31_38  [key=0, style=bold, color=blue];
m31_129 -> m31_130  [key=0, style=solid];
m31_130 -> m31_131  [key=0, style=solid];
m31_130 -> m31_51  [key=2, style=dotted];
m31_130 -> m31_135  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_131 -> m31_132  [key=0, style=solid];
m31_131 -> m31_27  [key=2, style=dotted];
m31_131 -> m31_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_132 -> m31_133  [key=0, style=solid];
m31_132 -> m31_33  [key=2, style=dotted];
m31_133 -> m31_129  [key=0, style=bold, color=blue];
m31_111 -> m31_112  [key=0, style=solid];
m31_112 -> m31_113  [key=0, style=solid];
m31_112 -> m31_51  [key=2, style=dotted];
m31_112 -> m31_117  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_113 -> m31_114  [key=0, style=solid];
m31_113 -> m31_27  [key=2, style=dotted];
m31_113 -> m31_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_114 -> m31_115  [key=0, style=solid];
m31_114 -> m31_33  [key=2, style=dotted];
m31_115 -> m31_111  [key=0, style=bold, color=blue];
m31_288 -> m31_289  [key=0, style=solid];
m31_289 -> m31_290  [key=0, style=solid];
m31_289 -> m31_99  [key=2, style=dotted];
m31_289 -> m31_292  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_289 -> m31_293  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_289 -> m31_294  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_290 -> m31_291  [key=0, style=solid];
m31_290 -> m31_262  [key=2, style=dotted];
m31_290 -> m31_8  [key=2, style=dotted];
m31_290 -> m31_299  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_290 -> m31_292  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_290 -> m31_303  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_290 -> m31_293  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_290 -> m31_294  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_290 -> m31_306  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_292 -> m31_293  [key=0, style=solid];
m31_292 -> m31_11  [key=2, style=dotted];
m31_292 -> m31_298  [key=2, style=dotted];
m31_292 -> m31_302  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_293 -> m31_294  [key=0, style=solid];
m31_293 -> m31_103  [key=2, style=dotted];
m31_293 -> m31_295  [key=1, style=dashed, color=darkseagreen4, label=result];
m31_294 -> m31_295  [key=0, style=solid];
m31_294 -> m31_81  [key=2, style=dotted];
m31_294 -> m31_305  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_291 -> m31_292  [key=0, style=solid];
m31_291 -> m31_297  [key=2, style=dotted];
m31_291 -> m31_294  [key=1, style=dashed, color=darkseagreen4, label=exception];
m31_291 -> m31_306  [key=1, style=dashed, color=darkseagreen4, label=exception];
m31_291 -> m31_309  [key=1, style=dashed, color=darkseagreen4, label=exception];
m31_295 -> m31_296  [key=0, style=solid];
m31_295 -> m31_161  [key=2, style=dotted];
m31_296 -> m31_288  [key=0, style=bold, color=blue];
m31_255 -> m31_256  [key=0, style=solid];
m31_256 -> m31_257  [key=0, style=solid];
m31_256 -> m31_99  [key=2, style=dotted];
m31_256 -> m31_258  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_256 -> m31_259  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_257 -> m31_258  [key=0, style=solid];
m31_257 -> m31_262  [key=2, style=dotted];
m31_257 -> m31_8  [key=2, style=dotted];
m31_257 -> m31_263  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_257 -> m31_259  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_257 -> m31_267  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_258 -> m31_259  [key=0, style=solid];
m31_258 -> m31_103  [key=2, style=dotted];
m31_258 -> m31_260  [key=1, style=dashed, color=darkseagreen4, label=result];
m31_259 -> m31_260  [key=0, style=solid];
m31_259 -> m31_81  [key=2, style=dotted];
m31_259 -> m31_266  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_260 -> m31_261  [key=0, style=solid];
m31_260 -> m31_218  [key=2, style=dotted];
m31_261 -> m31_255  [key=0, style=bold, color=blue];
m31_315 -> m31_316  [key=0, style=solid, color=red];
m31_316 -> m31_317  [key=0, style=solid, color=red];
m31_316 -> m31_327  [key=2, style=dotted, color=red];
m31_316 -> m31_320  [key=1, style=dashed, color=red, label=handler1];
m31_316 -> m31_325  [key=1, style=dashed, color=red, label=handler1];
m31_317 -> m31_318  [key=0, style=solid, color=red];
m31_317 -> m31_11  [key=2, style=dotted];
m31_317 -> m31_12  [key=2, style=dotted];
m31_317 -> m31_330  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_320 -> m31_321  [key=0, style=solid];
m31_320 -> m31_328  [key=2, style=dotted];
m31_325 -> m31_326  [key=0, style=solid];
m31_325 -> m31_81  [key=2, style=dotted];
m31_325 -> m31_339  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_318 -> m31_319  [key=0, style=solid, color=red];
m31_318 -> m31_327  [key=2, style=dotted, color=red];
m31_318 -> m31_321  [key=1, style=dashed, color=red, label=handler2];
m31_319 -> m31_320  [key=0, style=solid];
m31_319 -> m31_11  [key=2, style=dotted];
m31_319 -> m31_12  [key=2, style=dotted];
m31_319 -> m31_333  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_321 -> m31_322  [key=0, style=solid];
m31_321 -> m31_328  [key=2, style=dotted];
m31_322 -> m31_323  [key=0, style=solid];
m31_322 -> m31_51  [key=2, style=dotted];
m31_322 -> m31_324  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_323 -> m31_324  [key=0, style=solid];
m31_323 -> m31_262  [key=2, style=dotted];
m31_323 -> m31_8  [key=2, style=dotted];
m31_323 -> m31_336  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_323 -> m31_325  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_323 -> m31_340  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_323 -> m31_344  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_324 -> m31_325  [key=0, style=solid];
m31_324 -> m31_329  [key=2, style=dotted];
m31_324 -> m31_269  [key=2, style=dotted];
m31_326 -> m31_315  [key=0, style=bold, color=blue];
m31_235 -> m31_236  [key=0, style=solid];
m31_236 -> m31_237  [key=0, style=solid];
m31_236 -> m31_11  [key=2, style=dotted];
m31_236 -> m31_179  [key=2, style=dotted];
m31_236 -> m31_242  [key=2, style=dotted];
m31_236 -> m31_12  [key=2, style=dotted];
m31_236 -> m31_243  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_237 -> m31_238  [key=0, style=solid];
m31_237 -> m31_99  [key=2, style=dotted];
m31_237 -> m31_239  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_238 -> m31_239  [key=0, style=solid];
m31_238 -> m31_119  [key=2, style=dotted];
m31_238 -> m31_240  [key=1, style=dashed, color=darkseagreen4, label=result];
m31_239 -> m31_240  [key=0, style=solid];
m31_239 -> m31_81  [key=2, style=dotted];
m31_239 -> m31_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_240 -> m31_241  [key=0, style=solid];
m31_240 -> m31_161  [key=2, style=dotted];
m31_241 -> m31_235  [key=0, style=bold, color=blue];
m31_94 -> m31_95  [key=0, style=solid];
m31_95 -> m31_96  [key=0, style=solid];
m31_95 -> m31_99  [key=2, style=dotted];
m31_95 -> m31_97  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_96 -> m31_97  [key=0, style=solid];
m31_96 -> m31_55  [key=2, style=dotted];
m31_97 -> m31_98  [key=0, style=solid];
m31_97 -> m31_81  [key=2, style=dotted];
m31_97 -> m31_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_98 -> m31_94  [key=0, style=bold, color=blue];
m31_137 -> m31_138  [key=0, style=solid];
m31_138 -> m31_139  [key=0, style=solid];
m31_138 -> m31_144  [key=2, style=dotted];
m31_138 -> m31_142  [key=1, style=dashed, color=darkseagreen4, label=disposableMock];
m31_139 -> m31_140  [key=0, style=solid];
m31_139 -> m31_11  [key=2, style=dotted];
m31_139 -> m31_12  [key=2, style=dotted];
m31_139 -> m31_145  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_142 -> m31_143  [key=0, style=solid];
m31_142 -> m31_81  [key=2, style=dotted];
m31_142 -> m31_149  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_140 -> m31_141  [key=0, style=solid];
m31_140 -> m31_51  [key=2, style=dotted];
m31_141 -> m31_142  [key=0, style=solid];
m31_141 -> m31_119  [key=2, style=dotted];
m31_143 -> m31_137  [key=0, style=bold, color=blue];
m31_120 -> m31_121  [key=0, style=solid];
m31_121 -> m31_122  [key=0, style=solid];
m31_121 -> m31_51  [key=2, style=dotted];
m31_121 -> m31_126  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_122 -> m31_123  [key=0, style=solid];
m31_122 -> m31_27  [key=2, style=dotted];
m31_122 -> m31_125  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_123 -> m31_124  [key=0, style=solid];
m31_123 -> m31_33  [key=2, style=dotted];
m31_124 -> m31_120  [key=0, style=bold, color=blue];
m31_190 -> m31_191  [key=0, style=solid];
m31_191 -> m31_192  [key=0, style=solid];
m31_191 -> m31_11  [key=2, style=dotted];
m31_191 -> m31_179  [key=2, style=dotted];
m31_191 -> m31_8  [key=2, style=dotted];
m31_191 -> m31_12  [key=2, style=dotted];
m31_191 -> m31_198  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_191 -> m31_201  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_192 -> m31_193  [key=0, style=solid];
m31_192 -> m31_99  [key=2, style=dotted];
m31_192 -> m31_194  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_192 -> m31_195  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_193 -> m31_194  [key=0, style=solid];
m31_193 -> m31_11  [key=2, style=dotted];
m31_193 -> m31_12  [key=2, style=dotted];
m31_193 -> m31_204  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_194 -> m31_195  [key=0, style=solid];
m31_194 -> m31_119  [key=2, style=dotted];
m31_194 -> m31_196  [key=1, style=dashed, color=darkseagreen4, label=result];
m31_195 -> m31_196  [key=0, style=solid];
m31_195 -> m31_81  [key=2, style=dotted];
m31_195 -> m31_207  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_196 -> m31_197  [key=0, style=solid];
m31_196 -> m31_161  [key=2, style=dotted];
m31_197 -> m31_190  [key=0, style=bold, color=blue];
m31_51 -> m31_346  [key=0, style=solid];
m31_346 -> m31_347  [key=0, style=solid];
m31_346 -> m31_45  [key=2, style=dotted];
m31_347 -> m31_51  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_2  [key=0, style=solid];
m31_1 -> m31_8  [key=2, style=dotted];
m31_1 -> m31_13  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_2 -> m31_3  [key=0, style=solid];
m31_2 -> m31_9  [key=2, style=dotted];
m31_3 -> m31_4  [key=0, style=solid];
m31_3 -> m31_10  [key=2, style=dotted];
m31_4 -> m31_5  [key=0, style=solid];
m31_4 -> m31_11  [key=2, style=dotted];
m31_4 -> m31_12  [key=2, style=dotted];
m31_4 -> m31_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_5 -> m31_6  [key=0, style=solid];
m31_5 -> m31_11  [key=2, style=dotted];
m31_5 -> m31_12  [key=2, style=dotted];
m31_5 -> m31_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_6 -> m31_7  [key=0, style=solid];
m31_6 -> m31_11  [key=2, style=dotted];
m31_6 -> m31_12  [key=2, style=dotted];
m31_6 -> m31_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_7 -> m31_0  [key=0, style=bold, color=blue];
m31_107 -> m31_108  [key=0, style=solid];
m31_108 -> m31_109  [key=0, style=solid];
m31_108 -> m31_51  [key=2, style=dotted];
m31_109 -> m31_110  [key=0, style=solid];
m31_109 -> m31_55  [key=2, style=dotted];
m31_109 -> m31_33  [key=2, style=dotted];
m31_110 -> m31_107  [key=0, style=bold, color=blue];
m31_73 -> m31_74  [key=0, style=solid];
m31_74 -> m31_75  [key=0, style=solid];
m31_74 -> m31_8  [key=2, style=dotted];
m31_74 -> m31_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_74 -> m31_77  [key=1, style=dashed, color=darkseagreen4, label=job];
m31_75 -> m31_76  [key=0, style=solid];
m31_75 -> m31_80  [key=2, style=dotted];
m31_77 -> m31_78  [key=0, style=solid];
m31_77 -> m31_55  [key=2, style=dotted];
m31_76 -> m31_77  [key=0, style=solid];
m31_76 -> m31_51  [key=2, style=dotted];
m31_78 -> m31_79  [key=0, style=solid];
m31_78 -> m31_81  [key=2, style=dotted];
m31_78 -> m31_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_79 -> m31_73  [key=0, style=bold, color=blue];
m31_343 -> m31_344  [key=0, style=solid];
m31_13 -> m31_14  [key=0, style=solid];
m31_17 -> m31_18  [key=0, style=solid];
m31_20 -> m31_21  [key=0, style=solid];
m31_24 -> m31_25  [key=0, style=solid];
m31_14 -> m31_15  [key=0, style=solid];
m31_14 -> m31_16  [key=2, style=dotted];
m31_15 -> m31_13  [key=0, style=bold, color=blue];
m31_18 -> m31_19  [key=0, style=solid];
m31_19 -> m31_17  [key=0, style=bold, color=blue];
m31_21 -> m31_22  [key=0, style=solid];
m31_21 -> m31_23  [key=2, style=dotted];
m31_22 -> m31_20  [key=0, style=bold, color=blue];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_27  [key=2, style=dotted];
m31_25 -> m31_28  [key=2, style=dotted];
m31_26 -> m31_24  [key=0, style=bold, color=blue];
m31_34 -> m31_35  [key=0, style=solid];
m31_35 -> m31_36  [key=0, style=solid];
m31_35 -> m31_37  [key=2, style=dotted];
m31_36 -> m31_34  [key=0, style=bold, color=blue];
m31_42 -> m31_43  [key=0, style=solid];
m31_43 -> m31_44  [key=0, style=solid];
m31_43 -> m31_45  [key=2, style=dotted];
m31_44 -> m31_42  [key=0, style=bold, color=blue];
m31_53 -> m31_54  [key=0, style=solid];
m31_53 -> m31_55  [key=2, style=dotted];
m31_52 -> m31_53  [key=0, style=solid];
m31_54 -> m31_52  [key=0, style=bold, color=blue];
m31_62 -> m31_63  [key=0, style=solid];
m31_62 -> m31_55  [key=2, style=dotted];
m31_61 -> m31_62  [key=0, style=solid];
m31_63 -> m31_61  [key=0, style=bold, color=blue];
m31_70 -> m31_71  [key=0, style=solid];
m31_70 -> m31_72  [key=2, style=dotted];
m31_69 -> m31_70  [key=0, style=solid];
m31_71 -> m31_69  [key=0, style=bold, color=blue];
m31_82 -> m31_83  [key=0, style=solid];
m31_85 -> m31_86  [key=0, style=solid];
m31_83 -> m31_84  [key=0, style=solid];
m31_83 -> m31_16  [key=2, style=dotted];
m31_84 -> m31_82  [key=0, style=bold, color=blue];
m31_86 -> m31_87  [key=0, style=solid];
m31_86 -> m31_27  [key=2, style=dotted];
m31_86 -> m31_28  [key=2, style=dotted];
m31_86 -> m31_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_86 -> m31_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_87 -> m31_85  [key=0, style=bold, color=blue];
m31_88 -> m31_89  [key=0, style=solid];
m31_91 -> m31_92  [key=0, style=solid];
m31_89 -> m31_90  [key=0, style=solid];
m31_90 -> m31_88  [key=0, style=bold, color=blue];
m31_92 -> m31_93  [key=0, style=solid];
m31_93 -> m31_91  [key=0, style=bold, color=blue];
m31_100 -> m31_101  [key=0, style=solid];
m31_101 -> m31_102  [key=0, style=solid];
m31_101 -> m31_27  [key=2, style=dotted];
m31_101 -> m31_103  [key=2, style=dotted];
m31_101 -> m31_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_102 -> m31_100  [key=0, style=bold, color=blue];
m31_104 -> m31_105  [key=0, style=solid];
m31_105 -> m31_106  [key=0, style=solid];
m31_106 -> m31_104  [key=0, style=bold, color=blue];
m31_117 -> m31_118  [key=0, style=solid];
m31_117 -> m31_119  [key=2, style=dotted];
m31_116 -> m31_117  [key=0, style=solid];
m31_118 -> m31_116  [key=0, style=bold, color=blue];
m31_126 -> m31_127  [key=0, style=solid];
m31_126 -> m31_128  [key=2, style=dotted];
m31_125 -> m31_126  [key=0, style=solid];
m31_127 -> m31_125  [key=0, style=bold, color=blue];
m31_135 -> m31_136  [key=0, style=solid];
m31_135 -> m31_119  [key=2, style=dotted];
m31_134 -> m31_135  [key=0, style=solid];
m31_136 -> m31_134  [key=0, style=bold, color=blue];
m31_145 -> m31_146  [key=0, style=solid];
m31_149 -> m31_150  [key=0, style=solid];
m31_146 -> m31_147  [key=0, style=solid];
m31_146 -> m31_148  [key=2, style=dotted];
m31_147 -> m31_145  [key=0, style=bold, color=blue];
m31_150 -> m31_151  [key=0, style=solid];
m31_150 -> m31_152  [key=2, style=dotted];
m31_151 -> m31_149  [key=0, style=bold, color=blue];
m31_162 -> m31_163  [key=0, style=solid];
m31_166 -> m31_167  [key=0, style=solid];
m31_169 -> m31_170  [key=0, style=solid];
m31_163 -> m31_164  [key=0, style=solid];
m31_163 -> m31_27  [key=2, style=dotted];
m31_163 -> m31_165  [key=2, style=dotted];
m31_164 -> m31_162  [key=0, style=bold, color=blue];
m31_167 -> m31_168  [key=0, style=solid];
m31_167 -> m31_165  [key=2, style=dotted];
m31_168 -> m31_166  [key=0, style=bold, color=blue];
m31_170 -> m31_171  [key=0, style=solid];
m31_170 -> m31_27  [key=2, style=dotted];
m31_170 -> m31_103  [key=2, style=dotted];
m31_171 -> m31_169  [key=0, style=bold, color=blue];
m31_180 -> m31_181  [key=0, style=solid];
m31_183 -> m31_184  [key=0, style=solid];
m31_187 -> m31_188  [key=0, style=solid];
m31_181 -> m31_182  [key=0, style=solid];
m31_181 -> m31_165  [key=2, style=dotted];
m31_182 -> m31_180  [key=0, style=bold, color=blue];
m31_184 -> m31_185  [key=0, style=solid];
m31_184 -> m31_186  [key=2, style=dotted];
m31_185 -> m31_183  [key=0, style=bold, color=blue];
m31_188 -> m31_189  [key=0, style=solid];
m31_188 -> m31_27  [key=2, style=dotted];
m31_188 -> m31_103  [key=2, style=dotted];
m31_189 -> m31_187  [key=0, style=bold, color=blue];
m31_198 -> m31_199  [key=0, style=solid];
m31_201 -> m31_202  [key=0, style=solid];
m31_204 -> m31_205  [key=0, style=solid];
m31_207 -> m31_208  [key=0, style=solid];
m31_199 -> m31_200  [key=0, style=solid];
m31_199 -> m31_165  [key=2, style=dotted];
m31_200 -> m31_198  [key=0, style=bold, color=blue];
m31_202 -> m31_203  [key=0, style=solid];
m31_202 -> m31_186  [key=2, style=dotted];
m31_203 -> m31_201  [key=0, style=bold, color=blue];
m31_205 -> m31_206  [key=0, style=solid];
m31_205 -> m31_27  [key=2, style=dotted];
m31_205 -> m31_103  [key=2, style=dotted];
m31_206 -> m31_204  [key=0, style=bold, color=blue];
m31_208 -> m31_209  [key=0, style=solid];
m31_208 -> m31_27  [key=2, style=dotted];
m31_208 -> m31_103  [key=2, style=dotted];
m31_209 -> m31_207  [key=0, style=bold, color=blue];
m31_219 -> m31_220  [key=0, style=solid];
m31_222 -> m31_223  [key=0, style=solid];
m31_225 -> m31_226  [key=0, style=solid];
m31_228 -> m31_229  [key=0, style=solid];
m31_220 -> m31_221  [key=0, style=solid];
m31_220 -> m31_165  [key=2, style=dotted];
m31_221 -> m31_219  [key=0, style=bold, color=blue];
m31_223 -> m31_224  [key=0, style=solid];
m31_223 -> m31_186  [key=2, style=dotted];
m31_224 -> m31_222  [key=0, style=bold, color=blue];
m31_226 -> m31_227  [key=0, style=solid];
m31_226 -> m31_27  [key=2, style=dotted];
m31_226 -> m31_103  [key=2, style=dotted];
m31_227 -> m31_225  [key=0, style=bold, color=blue];
m31_229 -> m31_230  [key=0, style=solid];
m31_229 -> m31_27  [key=2, style=dotted];
m31_229 -> m31_103  [key=2, style=dotted];
m31_229 -> m31_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_230 -> m31_228  [key=0, style=bold, color=blue];
m31_231 -> m31_232  [key=0, style=solid];
m31_232 -> m31_233  [key=0, style=solid];
m31_232 -> m31_234  [key=2, style=dotted];
m31_233 -> m31_231  [key=0, style=bold, color=blue];
m31_243 -> m31_244  [key=0, style=solid];
m31_246 -> m31_247  [key=0, style=solid];
m31_244 -> m31_245  [key=0, style=solid];
m31_244 -> m31_165  [key=2, style=dotted];
m31_245 -> m31_243  [key=0, style=bold, color=blue];
m31_247 -> m31_248  [key=0, style=solid];
m31_247 -> m31_27  [key=2, style=dotted];
m31_247 -> m31_103  [key=2, style=dotted];
m31_247 -> m31_249  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_247 -> m31_252  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_248 -> m31_246  [key=0, style=bold, color=blue];
m31_249 -> m31_250  [key=0, style=solid];
m31_252 -> m31_253  [key=0, style=solid];
m31_250 -> m31_251  [key=0, style=solid];
m31_251 -> m31_249  [key=0, style=bold, color=blue];
m31_253 -> m31_254  [key=0, style=solid];
m31_254 -> m31_252  [key=0, style=bold, color=blue];
m31_263 -> m31_264  [key=0, style=solid];
m31_267 -> m31_268  [key=0, style=solid];
m31_267 -> m31_27  [key=2, style=dotted];
m31_267 -> m31_269  [key=2, style=dotted];
m31_266 -> m31_267  [key=0, style=solid];
m31_264 -> m31_265  [key=0, style=solid];
m31_264 -> m31_186  [key=2, style=dotted];
m31_265 -> m31_263  [key=0, style=bold, color=blue];
m31_268 -> m31_266  [key=0, style=bold, color=blue];
m31_278 -> m31_279  [key=0, style=solid];
m31_282 -> m31_283  [key=0, style=solid];
m31_282 -> m31_27  [key=2, style=dotted];
m31_282 -> m31_284  [key=2, style=dotted];
m31_286 -> m31_287  [key=0, style=solid];
m31_286 -> m31_27  [key=2, style=dotted];
m31_286 -> m31_269  [key=2, style=dotted];
m31_281 -> m31_282  [key=0, style=solid];
m31_285 -> m31_286  [key=0, style=solid];
m31_279 -> m31_280  [key=0, style=solid];
m31_279 -> m31_186  [key=2, style=dotted];
m31_280 -> m31_278  [key=0, style=bold, color=blue];
m31_283 -> m31_281  [key=0, style=bold, color=blue];
m31_287 -> m31_285  [key=0, style=bold, color=blue];
m31_299 -> m31_300  [key=0, style=solid];
m31_303 -> m31_304  [key=0, style=solid];
m31_303 -> m31_27  [key=2, style=dotted];
m31_303 -> m31_269  [key=2, style=dotted];
m31_306 -> m31_307  [key=0, style=solid];
m31_306 -> m31_27  [key=2, style=dotted];
m31_306 -> m31_269  [key=2, style=dotted];
m31_306 -> m31_308  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_306 -> m31_311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_309 -> m31_310  [key=0, style=solid];
m31_302 -> m31_303  [key=0, style=solid];
m31_305 -> m31_306  [key=0, style=solid];
m31_300 -> m31_301  [key=0, style=solid];
m31_300 -> m31_186  [key=2, style=dotted];
m31_301 -> m31_299  [key=0, style=bold, color=blue];
m31_304 -> m31_302  [key=0, style=bold, color=blue];
m31_307 -> m31_305  [key=0, style=bold, color=blue];
m31_308 -> m31_309  [key=0, style=solid];
m31_311 -> m31_312  [key=0, style=solid];
m31_310 -> m31_308  [key=0, style=bold, color=blue];
m31_312 -> m31_313  [key=0, style=solid];
m31_312 -> m31_314  [key=2, style=dotted];
m31_313 -> m31_311  [key=0, style=bold, color=blue];
m31_330 -> m31_331  [key=0, style=solid];
m31_333 -> m31_334  [key=0, style=solid];
m31_336 -> m31_337  [key=0, style=solid];
m31_340 -> m31_341  [key=0, style=solid];
m31_340 -> m31_27  [key=2, style=dotted];
m31_340 -> m31_342  [key=2, style=dotted];
m31_340 -> m31_343  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_344 -> m31_345  [key=0, style=solid];
m31_339 -> m31_340  [key=0, style=solid];
m31_331 -> m31_332  [key=0, style=solid];
m31_332 -> m31_330  [key=0, style=bold, color=blue];
m31_334 -> m31_335  [key=0, style=solid];
m31_335 -> m31_333  [key=0, style=bold, color=blue];
m31_337 -> m31_338  [key=0, style=solid];
m31_337 -> m31_186  [key=2, style=dotted];
m31_338 -> m31_336  [key=0, style=bold, color=blue];
m31_341 -> m31_339  [key=0, style=bold, color=blue];
m31_345 -> m31_343  [key=0, style=bold, color=blue];
m31_56 -> m31_57  [key=0, style=solid];
m31_57 -> m31_58  [key=0, style=solid];
m31_57 -> m31_51  [key=2, style=dotted];
m31_57 -> m31_62  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_58 -> m31_59  [key=0, style=solid];
m31_58 -> m31_27  [key=2, style=dotted];
m31_58 -> m31_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_59 -> m31_60  [key=0, style=solid];
m31_59 -> m31_33  [key=2, style=dotted];
m31_60 -> m31_56  [key=0, style=bold, color=blue];
m31_46 -> m31_47  [key=0, style=solid];
m31_47 -> m31_48  [key=0, style=solid];
m31_47 -> m31_51  [key=2, style=dotted];
m31_47 -> m31_53  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_48 -> m31_49  [key=0, style=solid];
m31_48 -> m31_27  [key=2, style=dotted];
m31_48 -> m31_52  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_49 -> m31_50  [key=0, style=solid];
m31_49 -> m31_33  [key=2, style=dotted];
m31_50 -> m31_46  [key=0, style=bold, color=blue];
m31_172 -> m31_173  [key=0, style=solid];
m31_173 -> m31_174  [key=0, style=solid];
m31_173 -> m31_11  [key=2, style=dotted];
m31_173 -> m31_179  [key=2, style=dotted];
m31_173 -> m31_8  [key=2, style=dotted];
m31_173 -> m31_12  [key=2, style=dotted];
m31_173 -> m31_180  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_173 -> m31_183  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_174 -> m31_175  [key=0, style=solid];
m31_174 -> m31_99  [key=2, style=dotted];
m31_174 -> m31_177  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_175 -> m31_176  [key=0, style=solid];
m31_175 -> m31_119  [key=2, style=dotted];
m31_177 -> m31_178  [key=0, style=solid];
m31_177 -> m31_81  [key=2, style=dotted];
m31_177 -> m31_187  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_176 -> m31_177  [key=0, style=solid];
m31_176 -> m31_161  [key=2, style=dotted];
m31_178 -> m31_172  [key=0, style=bold, color=blue];
m31_29 -> m31_30  [key=0, style=solid];
m31_30 -> m31_31  [key=0, style=solid];
m31_30 -> m31_27  [key=2, style=dotted];
m31_30 -> m31_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_31 -> m31_32  [key=0, style=solid];
m31_31 -> m31_33  [key=2, style=dotted];
m31_32 -> m31_29  [key=0, style=bold, color=blue];
m31_64 -> m31_65  [key=0, style=solid];
m31_65 -> m31_66  [key=0, style=solid];
m31_65 -> m31_51  [key=2, style=dotted];
m31_65 -> m31_70  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_66 -> m31_67  [key=0, style=solid];
m31_66 -> m31_27  [key=2, style=dotted];
m31_66 -> m31_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_67 -> m31_68  [key=0, style=solid];
m31_67 -> m31_33  [key=2, style=dotted];
m31_68 -> m31_64  [key=0, style=bold, color=blue];
m31_351 -> m31_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_30  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_39  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_43  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_48  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_53  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_58  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_65  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_75  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_77  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_95  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_117  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_121  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_130  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_135  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_139  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_140  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_154  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_155  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_156  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_158  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_173  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_174  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_175  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_191  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_192  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_194  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_211  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_212  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_214  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_215  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_229  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_236  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_237  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_238  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_256  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_258  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_259  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_267  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_271  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_274  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_282  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_275  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_289  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_292  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_303  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_293  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_320  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_321  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_322  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_324  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_325  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_340  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_344  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_346  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_351 -> m31_348  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Core.Tests.States.StateMachineFacts"];
m31_352 -> m31_53  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_353 -> m31_62  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_354 -> m31_70  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_355 -> m31_117  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_356 -> m31_126  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_357 -> m31_135  [key=1, style=dashed, color=darkseagreen4, label=stateMachine];
m31_358 -> m31_267  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_359 -> m31_282  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_359 -> m31_286  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_360 -> m31_286  [key=1, style=dashed, color=darkseagreen4, label=electedState];
m31_361 -> m31_303  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_361 -> m31_306  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_362 -> m31_306  [key=1, style=dashed, color=darkseagreen4, label=exception];
m31_362 -> m31_309  [key=1, style=dashed, color=darkseagreen4, label=exception];
m31_363 -> m31_340  [key=1, style=dashed, color=darkseagreen4, label=context];
m31_363 -> m31_344  [key=1, style=dashed, color=darkseagreen4, label=context];
m32_8 -> m32_9  [key=0, style=solid];
m32_9 -> m32_10  [key=0, style=solid];
m32_9 -> m32_11  [key=2, style=dotted];
m32_10 -> m32_8  [key=0, style=bold, color=blue];
m32_3 -> m32_4  [key=0, style=solid];
m32_4 -> m32_5  [key=0, style=solid];
m32_4 -> m32_6  [key=2, style=dotted];
m32_4 -> m32_7  [key=2, style=dotted];
m32_5 -> m32_3  [key=0, style=bold, color=blue];
m32_0 -> m32_1  [key=0, style=solid];
m32_1 -> m32_2  [key=0, style=solid];
m32_2 -> m32_0  [key=0, style=bold, color=blue];
m32_12 -> m32_13  [key=0, style=solid];
m32_13 -> m32_14  [key=0, style=solid];
m32_13 -> m32_15  [key=2, style=dotted];
m32_14 -> m32_12  [key=0, style=bold, color=blue];
m32_16 -> m32_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m32_16 -> m32_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.States.SucceededState"];
m35_9 -> m35_10  [key=0, style=solid];
m35_9 -> m35_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.HashCodeCombiner"];
m35_10 -> m35_11  [key=0, style=solid];
m35_10 -> m35_13  [key=2, style=dotted];
m35_11 -> m35_12  [key=0, style=solid];
m35_11 -> m35_14  [key=2, style=dotted];
m35_12 -> m35_9  [key=0, style=bold, color=blue];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_2  [key=0, style=solid];
m35_2 -> m35_0  [key=0, style=bold, color=blue];
m35_3 -> m35_4  [key=0, style=solid];
m35_4 -> m35_5  [key=0, style=solid];
m35_5 -> m35_6  [key=0, style=solid];
m35_5 -> m35_7  [key=2, style=dotted];
m35_5 -> m35_8  [key=2, style=dotted];
m35_6 -> m35_3  [key=0, style=bold, color=blue];
m35_15 -> m35_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint"];
m35_15 -> m35_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint"];
m35_15 -> m35_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint"];
m35_15 -> m35_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.ExpressionUtil.UnaryExpressionFingerprint"];
}
