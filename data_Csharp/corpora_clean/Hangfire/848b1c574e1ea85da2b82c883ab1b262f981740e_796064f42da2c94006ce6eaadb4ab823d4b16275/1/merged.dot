digraph  {
n0 [label="Entry Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", span="24-24", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)"];
n1 [label="return UseMsmqQueues(storage, pathPattern, EnqueuedState.DefaultQueue);", span="28-28", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)"];
n2 [label="Exit Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)", span="24-24", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string)"];
n3 [label="Entry Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", span="31-31", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])"];
n4 [label="return UseMsmqQueues(storage, MsmqTransactionType.Internal, pathPattern, queues);", span="36-36", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])"];
n5 [label="Exit Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])", span="31-31", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, string, params string[])"];
n6 [label="Entry Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", span="39-39", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])"];
n7 [label="storage == null", span="45-45", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])"];
n9 [label="queues.Length == 0", span="47-47", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])"];
n11 [label="var provider = new MsmqJobQueueProvider(pathPattern, queues, transactionType)", span="52-52", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])"];
n12 [label="storage.QueueProviders.Add(provider, queues)", span="53-53", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])"];
n13 [label="return storage;", span="55-55", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])"];
n8 [label="throw new ArgumentNullException(''storage'');", span="45-45", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])"];
n10 [label="queues = new[] { EnqueuedState.DefaultQueue }", span="49-49", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])"];
n16 [label="Entry Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)", span="26-26", cluster="Hangfire.SqlServer.Msmq.MsmqJobQueueProvider.MsmqJobQueueProvider(string, System.Collections.Generic.IEnumerable<string>, Hangfire.SqlServer.Msmq.MsmqTransactionType)"];
n17 [label="Entry Hangfire.SqlServer.PersistentJobQueueProviderCollection.Add(Hangfire.SqlServer.IPersistentJobQueueProvider, System.Collections.Generic.IEnumerable<string>)", span="40-40", cluster="Hangfire.SqlServer.PersistentJobQueueProviderCollection.Add(Hangfire.SqlServer.IPersistentJobQueueProvider, System.Collections.Generic.IEnumerable<string>)"];
n14 [label="Exit Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])", span="39-39", cluster="Hangfire.SqlServer.Msmq.MsmqSqlServerStorageExtensions.UseMsmqQueues(Hangfire.SqlServer.SqlServerStorage, Hangfire.SqlServer.Msmq.MsmqTransactionType, string, params string[])"];
n15 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
m0_92 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="ClientFilters.feature.cs"];
m0_0 [label="Entry ConsoleSample.Program.Main()", span="12-12", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_1 [label="LogManager.Adapter = new ConsoleOutLoggerFactoryAdapter(\r\n                LogLevel.Info, false, false, true, '''')", span="14-15", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_2 [label="var sqlServerStorage = new SqlServerStorage(\r\n                @''Server=.\sqlexpress;Database=HangFire.Sample;Trusted_Connection=True;'')", span="17-18", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_3 [label="sqlServerStorage.UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')", span="19-19", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_4 [label="JobStorage.Current =\r\n                sqlServerStorage", span="21-22", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_5 [label="var options = new BackgroundJobServerOptions\r\n            {\r\n                Queues = new[] { ''critical'', ''default'' }\r\n            }", span="25-28", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_6 [label="var server = new BackgroundJobServer(options)", span="30-30", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_7 [label="var count = 1", span="32-32", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_12 [label="server.Start()", span="45-45", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_8 [label=true, span="34-34", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs", color=green, community=0];
m0_46 [label="var number = count++", span="104-104", cluster="ConsoleSample.Program.Main()", color=green, community=0, file="ClientFilters.feature.cs"];
m0_9 [label="var command = Console.ReadLine()", span="36-36", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_64 [label="Console.WriteLine(''Press Enter to exit...'')", span="150-150", cluster="ConsoleSample.Program.Main()", color=green, community=0, file="ClientFilters.feature.cs"];
m0_10 [label="command == null || command.Equals(''stop'', StringComparison.OrdinalIgnoreCase)", span="38-38", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_11 [label="command.Equals(''start'', StringComparison.OrdinalIgnoreCase)", span="43-43", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_13 [label="command.StartsWith(''add'', StringComparison.OrdinalIgnoreCase)", span="48-48", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_14 [label="var workCount = int.Parse(command.Substring(4))", span="52-52", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_23 [label="command.StartsWith(''static'', StringComparison.OrdinalIgnoreCase)", span="66-66", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_24 [label="var workCount = int.Parse(command.Substring(7))", span="70-70", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_32 [label="command.StartsWith(''error'', StringComparison.OrdinalIgnoreCase)", span="83-83", cluster="ConsoleSample.Program.Main()", color=red, community=0, file="ClientFilters.feature.cs"];
m0_33 [label="var workCount = int.Parse(command.Substring(6))", span="85-85", cluster="ConsoleSample.Program.Main()", color=red, community=0, file="ClientFilters.feature.cs"];
m0_38 [label="command.StartsWith(''args'', StringComparison.OrdinalIgnoreCase)", span="92-92", cluster="ConsoleSample.Program.Main()", color=red, community=0, file="ClientFilters.feature.cs"];
m0_39 [label="var workCount = int.Parse(command.Substring(5))", span="94-94", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_44 [label="command.StartsWith(''in'', StringComparison.OrdinalIgnoreCase)", span="101-101", cluster="ConsoleSample.Program.Main()", color=red, community=0, file="ClientFilters.feature.cs"];
m0_45 [label="var seconds = int.Parse(command.Substring(2))", span="103-103", cluster="ConsoleSample.Program.Main()", color=green, community=0, file="ClientFilters.feature.cs"];
m0_48 [label="command.StartsWith(''cancelable'', StringComparison.OrdinalIgnoreCase)", span="108-108", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_49 [label="var iterations = int.Parse(command.Substring(11))", span="110-110", cluster="ConsoleSample.Program.Main()", color=red, community=0, file="ClientFilters.feature.cs"];
m0_51 [label="command.StartsWith(''delete'', StringComparison.OrdinalIgnoreCase)", span="114-114", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs", color=green, community=0];
m0_52 [label="var workCount = int.Parse(command.Substring(7))", span="116-116", cluster="ConsoleSample.Program.Main()", color=green, community=0, file="ClientFilters.feature.cs"];
m0_58 [label="command.StartsWith(''fast'', StringComparison.OrdinalIgnoreCase)", span="124-124", cluster="ConsoleSample.Program.Main()", color=red, community=0, file="ClientFilters.feature.cs"];
m0_59 [label="var workCount = int.Parse(command.Substring(5))", span="128-128", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_15 [label="var i = 0", span="53-53", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_16 [label="i < workCount", span="53-53", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_17 [label="var number = i", span="55-55", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_19 [label="i++", span="53-53", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_20 [label="Console.WriteLine(''Jobs enqueued.'')", span="58-58", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_18 [label="BackgroundJob.Enqueue<Services>(x => x.Random(number))", span="56-56", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_21 [label=Exception, span="60-60", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_22 [label="Console.WriteLine(ex.Message)", span="62-62", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_25 [label="var i = 0", span="71-71", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_26 [label="i < workCount", span="71-71", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_28 [label="i++", span="71-71", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_27 [label="BackgroundJob.Enqueue(() => Console.WriteLine(''Hello, {0}!'', ''world''))", span="73-73", cluster="ConsoleSample.Program.Main()", color=red, community=0, file="ClientFilters.feature.cs"];
m0_29 [label="Console.WriteLine(''Jobs enqueued.'')", span="75-75", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs", color=green, community=0];
m0_30 [label=Exception, span="77-77", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_31 [label="Console.WriteLine(ex.Message)", span="79-79", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_34 [label="var i = 0", span="86-86", cluster="ConsoleSample.Program.Main()", color=green, community=0, file="ClientFilters.feature.cs"];
m0_35 [label="i < workCount", span="86-86", cluster="ConsoleSample.Program.Main()", color=green, community=0, file="ClientFilters.feature.cs"];
m0_37 [label="i++", span="86-86", cluster="ConsoleSample.Program.Main()", color=green, community=0, file="ClientFilters.feature.cs"];
m0_36 [label="BackgroundJob.Enqueue<Services>(x => x.Error())", span="88-88", cluster="ConsoleSample.Program.Main()", color=red, community=0, file="ClientFilters.feature.cs"];
m0_40 [label="var i = 0", span="95-95", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_41 [label="i < workCount", span="95-95", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_43 [label="i++", span="95-95", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_42 [label="BackgroundJob.Enqueue<Services>(x => x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow))", span="97-97", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_47 [label="BackgroundJob.Schedule<Services>(x => x.Random(number), TimeSpan.FromSeconds(seconds))", span="105-105", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs", color=green, community=0];
m0_50 [label="BackgroundJob.Enqueue<Services>(x => x.Cancelable(iterations, JobCancellationToken.Null))", span="111-111", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs", color=green, community=0];
m0_53 [label="var i = 0", span="117-117", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs", color=green, community=0];
m0_54 [label="i < workCount", span="117-117", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs", color=green, community=0];
m0_57 [label="i++", span="117-117", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs", color=green, community=0];
m0_55 [label="var jobId = BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="119-119", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs", color=green, community=0];
m0_56 [label="BackgroundJob.Delete(jobId)", span="120-120", cluster="ConsoleSample.Program.Main()", color=red, community=0, file="ClientFilters.feature.cs"];
m0_60 [label="Parallel.For(0, workCount, i =>\r\n                            {\r\n                                if (i % 2 == 0)\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyCritical());\r\n                                }\r\n                                else\r\n                                {\r\n                                    BackgroundJob.Enqueue<Services>(x => x.EmptyDefault());\r\n                                }\r\n                            })", span="129-139", cluster="ConsoleSample.Program.Main()", color=green, community=0, file="ClientFilters.feature.cs"];
m0_61 [label="Console.WriteLine(''Jobs enqueued.'')", span="140-140", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_62 [label=Exception, span="142-142", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_63 [label="Console.WriteLine(ex.Message)", span="144-144", cluster="ConsoleSample.Program.Main()", color=red, community=0, file="ClientFilters.feature.cs"];
m0_65 [label="Console.ReadLine()", span="151-151", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs", color=green, community=0];
m0_66 [label="Exit ConsoleSample.Program.Main()", span="12-12", cluster="ConsoleSample.Program.Main()", file="ClientFilters.feature.cs"];
m0_67 [label="Entry ConsoleOutLoggerFactoryAdapter.cstr", span="", cluster="ConsoleOutLoggerFactoryAdapter.cstr", file="ClientFilters.feature.cs"];
m0_82 [label="Entry HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="148-148", cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="ClientFilters.feature.cs"];
m0_122 [label="Entry ConsoleSample.Services.EmptyCritical()", span="16-16", cluster="ConsoleSample.Services.EmptyCritical()", file="ClientFilters.feature.cs"];
m0_96 [label="Entry ConsoleSample.Services.Error()", span="21-21", cluster="ConsoleSample.Services.Error()", file="ClientFilters.feature.cs"];
m0_69 [label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", span="28-28", cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", file="ClientFilters.feature.cs"];
m0_77 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="ClientFilters.feature.cs"];
m0_81 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="ClientFilters.feature.cs"];
m0_88 [label="Entry ConsoleSample.Services.Random(int)", span="28-28", cluster="ConsoleSample.Services.Random(int)", file="ClientFilters.feature.cs"];
m0_83 [label="Entry HangFire.BackgroundJob.Delete(string)", span="164-164", cluster="HangFire.BackgroundJob.Delete(string)", file="ClientFilters.feature.cs"];
m0_101 [label="Entry System.Guid.ToString()", span="0-0", cluster="System.Guid.ToString()", file="ClientFilters.feature.cs"];
m0_75 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="ClientFilters.feature.cs"];
m0_71 [label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", span="41-41", cluster="HangFire.BackgroundJobServer.BackgroundJobServer(HangFire.BackgroundJobServerOptions)", file="ClientFilters.feature.cs"];
m0_102 [label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="64-64", cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="ClientFilters.feature.cs"];
m0_72 [label="Entry System.Console.ReadLine()", span="0-0", cluster="System.Console.ReadLine()", file="ClientFilters.feature.cs"];
m0_78 [label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="78-78", cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="ClientFilters.feature.cs"];
m0_119 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_86 [label="x.Random(number)", span="56-56", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_85 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_89 [label="Entry lambda expression", span="73-73", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_93 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_97 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_104 [label="x.Random(number)", span="105-105", cluster="lambda expression", file="ClientFilters.feature.cs", color=green, community=0];
m0_103 [label="Entry lambda expression", span="105-105", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_107 [label="x.Cancelable(iterations, JobCancellationToken.Null)", span="111-111", cluster="lambda expression", file="ClientFilters.feature.cs", color=green, community=0];
m0_106 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_110 [label="Entry lambda expression", span="119-119", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_114 [label="Entry lambda expression", span="129-139", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_87 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_90 [label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="73-73", cluster="lambda expression", color=red, community=0, file="ClientFilters.feature.cs"];
m0_91 [label="Exit lambda expression", span="73-73", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_94 [label="x.Error()", span="88-88", cluster="lambda expression", color=red, community=0, file="ClientFilters.feature.cs"];
m0_95 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_98 [label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="97-97", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_99 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_105 [label="Exit lambda expression", span="105-105", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_108 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_111 [label="x.EmptyDefault()", span="119-119", cluster="lambda expression", file="ClientFilters.feature.cs", color=green, community=0];
m0_112 [label="Exit lambda expression", span="119-119", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_115 [label="i % 2 == 0", span="131-131", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_116 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="133-133", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_117 [label="BackgroundJob.Enqueue<Services>(x => x.EmptyDefault())", span="137-137", cluster="lambda expression", color=red, community=0, file="ClientFilters.feature.cs"];
m0_118 [label="Exit lambda expression", span="129-139", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_123 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_120 [label="x.EmptyCritical()", span="133-133", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_121 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_124 [label="x.EmptyDefault()", span="137-137", cluster="lambda expression", color=red, community=0, file="ClientFilters.feature.cs"];
m0_125 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="ClientFilters.feature.cs"];
m0_73 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="ClientFilters.feature.cs"];
m0_84 [label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0", cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="ClientFilters.feature.cs"];
m0_100 [label="Entry System.Guid.NewGuid()", span="0-0", cluster="System.Guid.NewGuid()", file="ClientFilters.feature.cs"];
m0_74 [label="Entry HangFire.BackgroundJobServer.Start()", span="60-60", cluster="HangFire.BackgroundJobServer.Start()", file="ClientFilters.feature.cs"];
m0_68 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="32-32", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="ClientFilters.feature.cs"];
m0_70 [label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ClientFilters.feature.cs"];
m0_80 [label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="60-60", cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="ClientFilters.feature.cs"];
m0_79 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="ClientFilters.feature.cs"];
m0_109 [label="Entry ConsoleSample.Services.Cancelable(int, HangFire.IJobCancellationToken)", span="45-45", cluster="ConsoleSample.Services.Cancelable(int, HangFire.IJobCancellationToken)", file="ClientFilters.feature.cs"];
m0_113 [label="Entry ConsoleSample.Services.EmptyDefault()", span="11-11", cluster="ConsoleSample.Services.EmptyDefault()", file="ClientFilters.feature.cs"];
m0_76 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="ClientFilters.feature.cs"];
m0_126 [label=number, span="", file="ClientFilters.feature.cs"];
m0_127 [label=number, span="", file="ClientFilters.feature.cs"];
m0_128 [label=iterations, span="", file="ClientFilters.feature.cs"];
m1_111 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="ClientSteps.cs"];
m1_112 [label="ThenTheArgumentlessJobShouldBeCreated(type)", span="177-177", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="ClientSteps.cs"];
m1_113 [label="ThenItShouldBeEnqueuedToTheQueue(queue)", span="178-178", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="ClientSteps.cs"];
m1_114 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", span="175-175", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheQueue(string, string)", file="ClientSteps.cs"];
m1_42 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="125-125", cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="ClientSteps.cs"];
m1_78 [label="Entry HangFire.JobHelper.FromTimestamp(long)", span="57-57", cluster="HangFire.JobHelper.FromTimestamp(long)", file="ClientSteps.cs"];
m1_103 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="ClientSteps.cs"];
m1_104 [label="ThenTheArgumentlessJobShouldBeCreated(type)", span="163-163", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="ClientSteps.cs"];
m1_105 [label="ThenItShouldBeScheduledForTomorrow()", span="164-164", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="ClientSteps.cs"];
m1_106 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", span="161-161", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeScheduledForTomorrow(string)", file="ClientSteps.cs"];
m1_76 [label="Entry Unk.SortedSetContainsItem", span="", cluster="Unk.SortedSetContainsItem", file="ClientSteps.cs"];
m1_39 [label="Entry HangFire.Perform.Async(System.Type, object)", span="79-79", cluster="HangFire.Perform.Async(System.Type, object)", file="ClientSteps.cs"];
m1_54 [label="Entry Unk.GetAllEntriesFromHash", span="", cluster="Unk.GetAllEntriesFromHash", file="ClientSteps.cs"];
m1_57 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="ClientSteps.cs"];
m1_36 [label="Entry HangFire.Perform.Async<TJob>()", span="26-26", cluster="HangFire.Perform.Async<TJob>()", file="ClientSteps.cs"];
m1_17 [label="code.Equals(''Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })'')", span="51-51", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_53 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="ClientSteps.cs"];
m1_35 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="ClientSteps.cs"];
m1_80 [label="Entry HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="ClientSteps.cs"];
m1_81 [label="Assert.IsNotNull(_exception)", span="131-131", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="ClientSteps.cs"];
m1_82 [label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="132-132", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="ClientSteps.cs"];
m1_83 [label="Exit HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="129-129", cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="ClientSteps.cs"];
m1_58 [label="Entry Unk.>", span="", cluster="Unk.>", file="ClientSteps.cs"];
m1_77 [label="Entry Unk.GetItemScoreInSortedSet", span="", cluster="Unk.GetItemScoreInSortedSet", file="ClientSteps.cs"];
m1_37 [label="Entry HangFire.Perform.Async<TJob>(object)", span="44-44", cluster="HangFire.Perform.Async<TJob>(object)", file="ClientSteps.cs"];
m1_55 [label="Entry Unk.AreNotEqual", span="", cluster="Unk.AreNotEqual", file="ClientSteps.cs"];
m1_15 [label="code.Equals(''Perform.In<TestJob>(TimeSpan.FromDays(1))'')", span="47-47", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_43 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="142-142", cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="ClientSteps.cs"];
m1_7 [label="code.Equals(''Perform.Async(typeof(TestJob))'')", span="31-31", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_59 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="ClientSteps.cs"];
m1_45 [label="Entry Unk.Pending", span="", cluster="Unk.Pending", file="ClientSteps.cs"];
m1_44 [label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="160-160", cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="ClientSteps.cs"];
m1_87 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs"];
m1_88 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="138-138", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs"];
m1_90 [label="Assert.IsTrue(job[''Type''].Contains(type))", span="140-140", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs"];
m1_92 [label="DictionaryAssert.ContainsFollowingItems(table, args)", span="143-143", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs"];
m1_89 [label="Assert.AreNotEqual(0, job.Count)", span="139-139", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs"];
m1_91 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="142-142", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs"];
m1_93 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="136-136", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="ClientSteps.cs"];
m1_40 [label="Entry System.TimeSpan.FromDays(double)", span="0-0", cluster="System.TimeSpan.FromDays(double)", file="ClientSteps.cs"];
m1_94 [label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9", cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="ClientSteps.cs"];
m1_95 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="ClientSteps.cs"];
m1_96 [label="ThenTheArgumentlessJobShouldBeCreated(type)", span="149-149", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="ClientSteps.cs"];
m1_97 [label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="150-150", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="ClientSteps.cs"];
m1_98 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="147-147", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="ClientSteps.cs"];
m1_79 [label="Entry System.DateTime.AddDays(double)", span="0-0", cluster="System.DateTime.AddDays(double)", file="ClientSteps.cs"];
m1_41 [label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="106-106", cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="ClientSteps.cs"];
m1_46 [label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs"];
m1_47 [label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="93-93", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs"];
m1_49 [label="Assert.IsTrue(job[''Type''].Contains(type))", span="95-95", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs"];
m1_48 [label="Assert.AreNotEqual(0, job.Count)", span="94-94", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs"];
m1_50 [label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="97-97", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs"];
m1_51 [label="Assert.AreEqual(0, args.Count)", span="98-98", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs"];
m1_52 [label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", span="91-91", cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeCreated(string)", file="ClientSteps.cs"];
m1_0 [label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ClientSteps.cs"];
m1_1 [label="WorkerCount = Environment.ProcessorCount * 5", span="15-15", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ClientSteps.cs"];
m1_60 [label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="ClientSteps.cs"];
m1_61 [label="ThenItShouldBeEnqueuedToTheQueue(QueueSteps.DefaultQueue)", span="104-104", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="ClientSteps.cs"];
m1_62 [label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", span="102-102", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheDefaultQueue()", file="ClientSteps.cs"];
m1_2 [label="ServerName = Environment.MachineName", span="16-16", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ClientSteps.cs"];
m1_3 [label="Queues = new[] { EnqueuedState.DefaultQueue }", span="17-17", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ClientSteps.cs"];
m1_5 [label="SchedulePollingInterval = TimeSpan.FromSeconds(15)", span="19-19", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ClientSteps.cs", color=green, community=0];
m1_9 [label="logger.InfoFormat(''Using the following options for HangFire Server:'')", span="61-61", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="ClientSteps.cs"];
m1_11 [label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="63-63", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="ClientSteps.cs"];
m1_13 [label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="65-65", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="ClientSteps.cs"];
m1_19 [label="''''' + x + '''''", span="63-63", cluster="lambda expression", file="ClientSteps.cs"];
m1_21 [label="HangFire.BackgroundJobServerOptions", span="", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_23 [label="code.Equals(''Perform.Async<CriticalQueueJob>()'')", span="63-63", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_25 [label="code.Equals(''Perform.Async<InvalidQueueJob>()'')", span="67-67", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_27 [label="code.Equals(''Perform.Async<EmptyQueueJob>()'')", span="71-71", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_4 [label="ShutdownTimeout = TimeSpan.FromSeconds(15)", span="18-18", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ClientSteps.cs", color=green, community=0];
m1_6 [label="Exit HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13", cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="ClientSteps.cs"];
m1_8 [label="Entry HangFire.BackgroundJobServerOptions.Log(ILog)", span="59-59", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="ClientSteps.cs"];
m1_10 [label="logger.InfoFormat(''    Worker count: {0}.'', WorkerCount)", span="62-62", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="ClientSteps.cs"];
m1_12 [label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="64-64", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="ClientSteps.cs"];
m1_14 [label="Exit HangFire.BackgroundJobServerOptions.Log(ILog)", span="59-59", cluster="HangFire.BackgroundJobServerOptions.Log(ILog)", file="ClientSteps.cs"];
m1_16 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ClientSteps.cs"];
m1_18 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="ClientSteps.cs"];
m1_20 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="ClientSteps.cs"];
m1_22 [label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { ArticleId = 3 })", span="61-61", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_24 [label="_jobId = Perform.Async<CriticalQueueJob>()", span="65-65", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_26 [label="_jobId = Perform.Async<InvalidQueueJob>()", span="69-69", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_28 [label="_jobId = Perform.Async<EmptyQueueJob>()", span="73-73", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_29 [label="ScenarioContext.Current.Pending()", span="77-77", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_30 [label=PendingStepException, span="80-80", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_32 [label=Exception, span="84-84", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_31 [label="throw;", span="82-82", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_33 [label="_exception = ex", span="86-86", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_34 [label="Exit HangFire.Tests.ClientSteps.WhenICallThe(string)", span="19-19", cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="ClientSteps.cs"];
m1_86 [label="Entry Unk.IsInstanceOfType", span="", cluster="Unk.IsInstanceOfType", file="ClientSteps.cs"];
m1_38 [label="Entry HangFire.Perform.Async(System.Type)", span="61-61", cluster="HangFire.Perform.Async(System.Type)", file="ClientSteps.cs"];
m1_68 [label="Entry Unk.GetAllItemsFromList", span="", cluster="Unk.GetAllItemsFromList", file="ClientSteps.cs"];
m1_84 [label="Entry Unk.IsNotNull", span="", cluster="Unk.IsNotNull", file="ClientSteps.cs"];
m1_56 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="ClientSteps.cs"];
m1_69 [label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs"];
m1_70 [label="Assert.IsTrue(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', _jobId))", span="120-120", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs"];
m1_71 [label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', _jobId)", span="121-121", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs"];
m1_72 [label="var timestamp = JobHelper.FromTimestamp((long) score)", span="122-122", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs"];
m1_73 [label="Assert.IsTrue(DateTime.UtcNow.Date.AddDays(1) <= timestamp)", span="124-124", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs"];
m1_74 [label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="125-125", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs"];
m1_75 [label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="118-118", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="ClientSteps.cs"];
m1_99 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="ClientSteps.cs"];
m1_100 [label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="156-156", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="ClientSteps.cs"];
m1_101 [label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="157-157", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="ClientSteps.cs"];
m1_102 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="154-154", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="ClientSteps.cs"];
m1_107 [label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="ClientSteps.cs"];
m1_108 [label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="170-170", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="ClientSteps.cs"];
m1_109 [label="ThenItShouldBeScheduledForTomorrow()", span="171-171", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="ClientSteps.cs"];
m1_110 [label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="168-168", cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="ClientSteps.cs"];
m1_63 [label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="ClientSteps.cs"];
m1_64 [label="var jobIds = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:queue:{0}'', name))", span="110-111", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="ClientSteps.cs"];
m1_65 [label="Assert.AreEqual(1, jobIds.Count)", span="113-113", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="ClientSteps.cs"];
m1_66 [label="Assert.AreEqual(_jobId, jobIds[0])", span="114-114", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="ClientSteps.cs"];
m1_67 [label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="108-108", cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="ClientSteps.cs"];
m1_85 [label="Entry System.Type.GetType(string, bool)", span="0-0", cluster="System.Type.GetType(string, bool)", file="ClientSteps.cs"];
m1_115 [label="HangFire.Tests.ClientSteps", span="", file="ClientSteps.cs"];
m3_3 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()", file="CustomTypeConverter.cs"];
m3_0 [label="Entry HangFire.Tests.CustomTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="8-8", cluster="HangFire.Tests.CustomTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="CustomTypeConverter.cs"];
m3_1 [label="throw new NotSupportedException();", span="10-10", cluster="HangFire.Tests.CustomTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", color=green, community=0, file="CustomTypeConverter.cs"];
m3_2 [label="Exit HangFire.Tests.CustomTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", span="8-8", cluster="HangFire.Tests.CustomTypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)", file="CustomTypeConverter.cs"];
m4_28 [label="Entry HangFire.Redis.RedisStorage.GetStateHandlers()", span="83-83", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DequeuedJobsWatcher.feature.cs"];
m4_29 [label="yield return new FailedStateHandler();", span="85-85", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs"];
m4_30 [label="yield return new ProcessingStateHandler();", span="86-86", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DequeuedJobsWatcher.feature.cs"];
m4_31 [label="yield return new SucceededStateHandler();", span="87-87", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", color=green, community=0, file="DequeuedJobsWatcher.feature.cs"];
m4_32 [label="Exit HangFire.Redis.RedisStorage.GetStateHandlers()", span="83-83", cluster="HangFire.Redis.RedisStorage.GetStateHandlers()", file="DequeuedJobsWatcher.feature.cs"];
m4_34 [label="Entry HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", span="23-23", cluster="HangFire.Redis.ProcessingStateHandler.ProcessingStateHandler()", file="DequeuedJobsWatcher.feature.cs"];
m4_6 [label="Entry System.TimeSpan.FromMinutes(double)", span="0-0", cluster="System.TimeSpan.FromMinutes(double)", file="DequeuedJobsWatcher.feature.cs"];
m4_0 [label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="DequeuedJobsWatcher.feature.cs"];
m4_1 [label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="DequeuedJobsWatcher.feature.cs"];
m4_2 [label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="27-27", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="DequeuedJobsWatcher.feature.cs"];
m4_3 [label="PrepareSchemaIfNecessary = true", span="29-29", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="DequeuedJobsWatcher.feature.cs"];
m4_4 [label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24", cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="DequeuedJobsWatcher.feature.cs"];
m4_5 [label="Entry System.TimeSpan.FromSeconds(double)", span="0-0", cluster="System.TimeSpan.FromSeconds(double)", file="DequeuedJobsWatcher.feature.cs"];
m4_33 [label="Entry HangFire.Redis.FailedStateHandler.FailedStateHandler()", span="23-23", cluster="HangFire.Redis.FailedStateHandler.FailedStateHandler()", file="DequeuedJobsWatcher.feature.cs"];
m4_35 [label="Entry HangFire.Redis.SucceededStateHandler.SucceededStateHandler()", span="21-21", cluster="HangFire.Redis.SucceededStateHandler.SucceededStateHandler()", file="DequeuedJobsWatcher.feature.cs"];
m4_7 [label="HangFire.SqlServer.SqlServerStorageOptions", span="", file="DequeuedJobsWatcher.feature.cs"];
m5_0 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="JobClient.feature.cs"];
m5_1 [label="transaction == null", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="JobClient.feature.cs"];
m5_3 [label="jobId == null", span="30-30", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="JobClient.feature.cs"];
m5_5 [label="_transaction = transaction", span="32-32", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="JobClient.feature.cs"];
m5_6 [label="JobId = jobId", span="34-34", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="JobClient.feature.cs"];
m5_2 [label="throw new ArgumentNullException(''transaction'');", span="29-29", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="JobClient.feature.cs"];
m5_4 [label="throw new ArgumentNullException(''jobId'');", span="30-30", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="JobClient.feature.cs"];
m5_7 [label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", span="27-27", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.MsmqFetchedJob(Hangfire.SqlServer.Msmq.IMsmqTransaction, string)", file="JobClient.feature.cs"];
m5_17 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", span="49-49", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="JobClient.feature.cs"];
m5_18 [label="_transaction.Dispose()", span="51-51", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="JobClient.feature.cs"];
m5_19 [label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", span="49-49", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Dispose()", file="JobClient.feature.cs"];
m5_9 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", span="39-39", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", file="JobClient.feature.cs"];
m5_10 [label="_transaction.Commit()", span="41-41", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", file="JobClient.feature.cs"];
m5_11 [label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", span="39-39", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.RemoveFromQueue()", file="JobClient.feature.cs"];
m5_12 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", span="25-25", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Commit()", file="JobClient.feature.cs"];
m5_13 [label="Entry Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", span="44-44", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="JobClient.feature.cs"];
m5_14 [label="_transaction.Abort()", span="46-46", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="JobClient.feature.cs"];
m5_15 [label="Exit Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", span="44-44", cluster="Hangfire.SqlServer.Msmq.MsmqFetchedJob.Requeue()", file="JobClient.feature.cs"];
m5_16 [label="Entry Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", span="26-26", cluster="Hangfire.SqlServer.Msmq.IMsmqTransaction.Abort()", file="JobClient.feature.cs"];
m5_20 [label="Entry System.IDisposable.Dispose()", span="0-0", cluster="System.IDisposable.Dispose()", file="JobClient.feature.cs"];
m5_21 [label="Hangfire.SqlServer.Msmq.MsmqFetchedJob", span="", file="JobClient.feature.cs"];
m6_119 [label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="JobClientSteps.cs"];
m6_125 [label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="250-256", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="JobClientSteps.cs"];
m6_121 [label="throw new ArgumentNullException(''serverId'');", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="JobClientSteps.cs"];
m6_123 [label="throw new ArgumentNullException(''context'');", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="JobClientSteps.cs"];
m6_124 [label="var data = new ServerData\r\n            {\r\n                WorkerCount = context.WorkerCount,\r\n                Queues = context.Queues,\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="241-246", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="JobClientSteps.cs"];
m6_120 [label="serverId == null", span="238-238", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="JobClientSteps.cs"];
m6_122 [label="context == null", span="239-239", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="JobClientSteps.cs"];
m6_126 [label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", span="236-236", cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, HangFire.Server.ServerContext)", file="JobClientSteps.cs"];
m6_97 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobClientSteps.cs"];
m6_100 [label="name == null", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", color=green, community=0, file="JobClientSteps.cs"];
m6_98 [label="id == null", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobClientSteps.cs"];
m6_101 [label="throw new ArgumentNullException(''name'');", span="208-208", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", color=green, community=0, file="JobClientSteps.cs"];
m6_102 [label="return _connection.Query<string>(\r\n                @''select Value from HangFire.JobParameter where JobId = @id and Name = @name'',\r\n                new { id = id, name = name })\r\n                .SingleOrDefault();", span="210-213", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobClientSteps.cs"];
m6_99 [label="throw new ArgumentNullException(''id'');", span="207-207", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobClientSteps.cs"];
m6_103 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", span="205-205", cluster="HangFire.SqlServer.SqlServerConnection.GetJobParameter(string, string)", file="JobClientSteps.cs"];
m6_9 [label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="44-44", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="JobClientSteps.cs"];
m6_15 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="49-49", cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", file="JobClientSteps.cs"];
m6_16 [label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="34-34", cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", file="JobClientSteps.cs"];
m6_17 [label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="JobClientSteps.cs"];
m6_127 [label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="20-20", cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", file="JobClientSteps.cs"];
m6_49 [label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_56 [label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = invocationData.Arguments,\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="121-129", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_63 [label="_connection.Execute(insertParameterSql, parameterArray)", span="149-149", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_51 [label="throw new ArgumentNullException(''job'');", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_53 [label="throw new ArgumentNullException(''parameters'');", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_55 [label="var invocationData = InvocationData.Serialize(job)", span="119-119", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_54 [label="string createJobSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="114-117", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_57 [label="parameters.Count > 0", span="131-131", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_61 [label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="137-142", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_64 [label="return jobId;", span="152-152", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_58 [label="var parameterArray = new object[parameters.Count]", span="133-133", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_62 [label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="145-147", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_50 [label="job == null", span="111-111", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_52 [label="parameters == null", span="112-112", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_60 [label=parameters, span="135-135", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_59 [label="int parameterIndex = 0", span="134-134", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_65 [label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="106-106", cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Common.Job, System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", file="JobClientSteps.cs"];
m6_21 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="JobClientSteps.cs"];
m6_8 [label="Entry HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", span="12-12", cluster="HangFire.Dashboard.CombinedResourceDispatcher.CombinedResourceDispatcher(string, System.Reflection.Assembly, string, params string[])", file="JobClientSteps.cs"];
m6_0 [label="Entry HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", span="25-25", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="JobClientSteps.cs"];
m6_5 [label="Exit HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", span="25-25", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="JobClientSteps.cs"];
m6_6 [label="Entry HangFire.Dashboard.DashboardRouteCollection.DashboardRouteCollection()", span="7-7", cluster="HangFire.Dashboard.DashboardRouteCollection.DashboardRouteCollection()", file="JobClientSteps.cs"];
m6_2 [label="Routes.AddRazorPage(''/'', x => new DashboardPage())", span="28-28", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="JobClientSteps.cs"];
m6_4 [label="Routes.Add(''/css'', new CombinedResourceDispatcher(\r\n                ''text/css'',\r\n                typeof(GlobalDashboardRoutes).Assembly,\r\n                GetContentFolderNamespace(''css''),\r\n                Stylesheets))", span="36-40", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="JobClientSteps.cs"];
m6_3 [label="Routes.Add(''/js'', new CombinedResourceDispatcher(\r\n                ''application/javascript'', \r\n                typeof(GlobalDashboardRoutes).Assembly,\r\n                GetContentFolderNamespace(''js''),\r\n                Javascripts))", span="30-34", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="JobClientSteps.cs"];
m6_1 [label="Routes = new DashboardRouteCollection()", span="27-27", cluster="HangFire.Dashboard.GlobalDashboardRoutes.GlobalDashboardRoutes()", file="JobClientSteps.cs"];
m6_7 [label="Entry Unk.AddRazorPage", span="", cluster="Unk.AddRazorPage", file="JobClientSteps.cs"];
m6_43 [label="Entry System.TimeSpan.Negate()", span="0-0", cluster="System.TimeSpan.Negate()", file="JobClientSteps.cs"];
m6_69 [label="Entry Unk.>", span="", cluster="Unk.>", file="JobClientSteps.cs"];
m6_47 [label="Entry HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", span="22-22", cluster="HangFire.Storage.ProcessingJob.ProcessingJob(string, string)", file="JobClientSteps.cs"];
m6_72 [label="Entry HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_76 [label="var jobData = _connection.Query<SqlJob>(sql, new { id = id })\r\n                .SingleOrDefault()", span="162-163", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_74 [label="throw new ArgumentNullException(''id'');", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_75 [label="string sql = \r\n                @''select InvocationData, StateName, Arguments from HangFire.Job where id = @id''", span="159-160", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_77 [label="jobData == null", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_79 [label="var invocationData = JobHelper.FromJson<InvocationData>(jobData.InvocationData)", span="168-168", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_80 [label="invocationData.Arguments = jobData.Arguments", span="169-169", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_86 [label="return new JobData\r\n            {\r\n                Job = job,\r\n                State = jobData.StateName,\r\n                LoadException = loadException\r\n            };", span="183-188", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_73 [label="id == null", span="157-157", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_78 [label="return null;", span="165-165", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_83 [label="job = invocationData.Deserialize()", span="176-176", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_81 [label="Job job = null", span="171-171", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_85 [label="loadException = ex", span="180-180", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_82 [label="JobLoadException loadException = null", span="172-172", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_84 [label=JobLoadException, span="178-178", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_87 [label="Exit HangFire.SqlServer.SqlServerConnection.GetJobData(string)", span="155-155", cluster="HangFire.SqlServer.SqlServerConnection.GetJobData(string)", file="JobClientSteps.cs"];
m6_118 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="JobClientSteps.cs"];
m6_13 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="JobClientSteps.cs"];
m6_14 [label="Entry DashboardPage.cstr", span="", cluster="DashboardPage.cstr", file="JobClientSteps.cs"];
m6_44 [label="Entry Unk.Query", span="", cluster="Unk.Query", file="JobClientSteps.cs"];
m6_48 [label="Entry Unk.ToString", span="", cluster="Unk.ToString", file="JobClientSteps.cs"];
m6_20 [label="Entry SqlServerDistributedLock.cstr", span="", cluster="SqlServerDistributedLock.cstr", file="JobClientSteps.cs"];
m6_42 [label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0", cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="JobClientSteps.cs"];
m6_10 [label="_connection.Dispose()", span="46-46", cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", file="JobClientSteps.cs"];
m6_68 [label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0", cluster="System.DateTime.Add(System.TimeSpan)", file="JobClientSteps.cs"];
m6_22 [label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_32 [label="idAndQueue = _connection.Query(\r\n                    String.Format(fetchJobSqlTemplate, fetchConditions[currentQueryIndex]),\r\n                    new { queues = queues, timeout = _options.JobInvisibilityTimeOut.Negate().TotalSeconds })\r\n                    .SingleOrDefault()", span="84-87", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_35 [label="cancellationToken.WaitHandle.WaitOne(_options.QueuePollInterval)", span="93-93", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_24 [label="throw new ArgumentNullException(''queues'');", span="63-63", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_31 [label="cancellationToken.ThrowIfCancellationRequested()", span="82-82", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_28 [label="string fetchJobSqlTemplate = @''\r\nset transaction isolation level read committed\r\nupdate top (1) HangFire.JobQueue set FetchedAt = GETUTCDATE()\r\noutput INSERTED.JobId, INSERTED.Queue\r\nwhere FetchedAt {0}\r\nand Queue in @queues''", span="68-73", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_29 [label="var fetchConditions = new[] { ''is null'', ''< DATEADD(second, @timeout, GETUTCDATE())'' }", span="77-77", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_30 [label="var currentQueryIndex = 0", span="78-78", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_33 [label="idAndQueue == null", span="89-89", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_38 [label="idAndQueue == null", span="99-99", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_39 [label="return new ProcessingJob(\r\n                idAndQueue.JobId.ToString(CultureInfo.InvariantCulture),\r\n                idAndQueue.Queue);", span="101-103", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_34 [label="currentQueryIndex == fetchConditions.Length - 1", span="91-91", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_36 [label="cancellationToken.ThrowIfCancellationRequested()", span="94-94", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_23 [label="queues == null", span="63-63", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_25 [label="queues.Length == 0", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_27 [label="dynamic idAndQueue", span="66-66", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_37 [label="currentQueryIndex = (currentQueryIndex + 1) % fetchConditions.Length", span="98-98", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_26 [label="throw new ArgumentException(''Queue array must be non-empty.'', ''queues'');", span="64-64", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_40 [label="Exit HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61", cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="JobClientSteps.cs"];
m6_138 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobClientSteps.cs"];
m6_141 [label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="284-286", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobClientSteps.cs"];
m6_139 [label="timeOut.Duration() != timeOut", span="279-279", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobClientSteps.cs"];
m6_140 [label="throw new ArgumentException(''The `timeOut` value must be positive.'', ''timeOut'');", span="281-281", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobClientSteps.cs"];
m6_142 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="277-277", cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", file="JobClientSteps.cs"];
m6_12 [label="new DashboardPage()", span="28-28", cluster="lambda expression", file="JobClientSteps.cs"];
m6_143 [label="Entry System.TimeSpan.Duration()", span="0-0", cluster="System.TimeSpan.Duration()", file="JobClientSteps.cs"];
m6_11 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="JobClientSteps.cs"];
m6_104 [label="Entry HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="JobClientSteps.cs"];
m6_109 [label="_connection.Execute(''delete from HangFire.JobQueue where JobId = @id and Queue = @queueName'',\r\n                new { id = id, queueName = queue })", span="221-222", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="JobClientSteps.cs"];
m6_106 [label="throw new ArgumentNullException(''id'');", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="JobClientSteps.cs"];
m6_108 [label="throw new ArgumentNullException(''queue'');", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="JobClientSteps.cs"];
m6_107 [label="queue == null", span="219-219", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="JobClientSteps.cs"];
m6_105 [label="id == null", span="218-218", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="JobClientSteps.cs"];
m6_110 [label="Exit HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", span="216-216", cluster="HangFire.SqlServer.SqlServerConnection.DeleteJobFromQueue(string, string)", file="JobClientSteps.cs"];
m6_90 [label="Entry HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobClientSteps.cs"];
m6_91 [label="id == null", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", color=green, community=0, file="JobClientSteps.cs"];
m6_92 [label="throw new ArgumentNullException(''id'');", span="193-193", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", color=green, community=0, file="JobClientSteps.cs"];
m6_93 [label="name == null", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobClientSteps.cs"];
m6_95 [label="_connection.Execute(\r\n                @''merge HangFire.JobParameter as Target ''\r\n                + @''using (VALUES (@jobId, @name, @value)) as Source (JobId, Name, Value) ''\r\n                + @''on Target.JobId = Source.JobId AND Target.Name = Source.Name ''\r\n                + @''when matched then update set Value = Source.Value ''\r\n                + @''when not matched then insert (JobId, Name, Value) values (Source.JobId, Source.Name, Source.Value);'',\r\n                new { jobId = id, name, value })", span="196-202", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", color=green, community=0, file="JobClientSteps.cs"];
m6_94 [label="throw new ArgumentNullException(''name'');", span="194-194", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobClientSteps.cs"];
m6_96 [label="Exit HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", span="191-191", cluster="HangFire.SqlServer.SqlServerConnection.SetJobParameter(string, string, string)", file="JobClientSteps.cs"];
m6_111 [label="Entry HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobClientSteps.cs"];
m6_114 [label="toScore < fromScore", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", color=green, community=0, file="JobClientSteps.cs"];
m6_112 [label="key == null", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobClientSteps.cs"];
m6_115 [label="throw new ArgumentException(''The `toScore` value must be higher or equal to the `fromScore` value.'');", span="228-228", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", color=green, community=0, file="JobClientSteps.cs"];
m6_116 [label="return _connection.Query<string>(\r\n                @''select top 1 Value from HangFire.[Set] where [Key] = @key and Score between @from and @to order by Score'',\r\n                new { key, from = fromScore, to = toScore })\r\n                .SingleOrDefault();", span="230-233", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobClientSteps.cs"];
m6_113 [label="throw new ArgumentNullException(''key'');", span="227-227", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobClientSteps.cs"];
m6_117 [label="Exit HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", span="225-225", cluster="HangFire.SqlServer.SqlServerConnection.GetFirstByLowestScoreFromSet(string, double, double)", file="JobClientSteps.cs"];
m6_67 [label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23", cluster="HangFire.Common.JobHelper.ToJson(object)", file="JobClientSteps.cs"];
m6_18 [label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="56-58", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="JobClientSteps.cs"];
m6_19 [label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="54-54", cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", file="JobClientSteps.cs"];
m6_70 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="JobClientSteps.cs"];
m6_41 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="JobClientSteps.cs"];
m6_46 [label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0", cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", file="JobClientSteps.cs"];
m6_128 [label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobClientSteps.cs"];
m6_131 [label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="263-265", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobClientSteps.cs"];
m6_130 [label="throw new ArgumentNullException(''serverId'');", span="261-261", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobClientSteps.cs"];
m6_129 [label="serverId == null", span="261-261", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobClientSteps.cs"];
m6_132 [label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="259-259", cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", file="JobClientSteps.cs"];
m6_71 [label="Entry Unk.Execute", span="", cluster="Unk.Execute", file="JobClientSteps.cs"];
m6_89 [label="Entry HangFire.Storage.JobData.JobData()", span="20-20", cluster="HangFire.Storage.JobData.JobData()", file="JobClientSteps.cs"];
m6_88 [label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38", cluster="HangFire.Storage.InvocationData.Deserialize()", file="JobClientSteps.cs"];
m6_133 [label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobClientSteps.cs"];
m6_136 [label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="272-274", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobClientSteps.cs"];
m6_135 [label="throw new ArgumentNullException(''serverId'');", span="270-270", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobClientSteps.cs"];
m6_134 [label="serverId == null", span="270-270", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobClientSteps.cs"];
m6_137 [label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="268-268", cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", file="JobClientSteps.cs"];
m6_45 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="JobClientSteps.cs"];
m6_66 [label="Entry HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", span="65-65", cluster="HangFire.Storage.InvocationData.Serialize(HangFire.Common.Job)", file="JobClientSteps.cs"];
m6_144 [label="HangFire.SqlServer.SqlServerConnection", span="", file="JobClientSteps.cs"];
m7_25 [label="Entry Unk.OnScenarioStart", span="", cluster="Unk.OnScenarioStart", file="JobFetcher.feature.cs"];
m7_29 [label="Entry Unk.CollectScenarioErrors", span="", cluster="Unk.CollectScenarioErrors", file="JobFetcher.feature.cs"];
m7_21 [label="Entry Unk.OnScenarioEnd", span="", cluster="Unk.OnScenarioEnd", file="JobFetcher.feature.cs"];
m7_55 [label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m7_56 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns null when it tries to dequeue a job from an empty queue'', ((string[])(null)))", span="121-121", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m7_57 [label="this.ScenarioSetup(scenarioInfo)", span="123-123", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m7_58 [label="testRunner.Given(''an empty queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="125-125", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m7_59 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="127-127", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m7_60 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="129-129", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m7_61 [label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="131-131", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m7_62 [label="this.ScenarioCleanup()", span="133-133", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m7_63 [label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", span="119-119", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsNullWhenItTriesToDequeueAJobFromAnEmptyQueue()", file="JobFetcher.feature.cs"];
m7_0 [label="Entry HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs"];
m7_1 [label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32", cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs"];
m7_2 [label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''JobFetcher'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34", cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="JobFetcher.feature.cs"];
m7_3 [label="testRunner.OnFeatureStart(featureInfo)", span="35-35", cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs"];
m7_4 [label="Exit HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobFetcher.feature.cs"];
m7_76 [label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m7_77 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher listens only specified queue'', ((string[])(null)))", span="169-169", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m7_78 [label="this.ScenarioSetup(scenarioInfo)", span="171-171", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m7_79 [label="testRunner.Given(''a job in the \'another\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="173-173", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m7_80 [label="testRunner.And(''the fetcher listening the \'default\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="175-175", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m7_81 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m7_82 [label="testRunner.Then(''the fetcher does not return any job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m7_83 [label="this.ScenarioCleanup()", span="181-181", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m7_84 [label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", span="167-167", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherListensOnlySpecifiedQueue()", file="JobFetcher.feature.cs"];
m7_41 [label="Entry Unk.And", span="", cluster="Unk.And", file="JobFetcher.feature.cs"];
m7_54 [label="Entry Unk.But", span="", cluster="Unk.But", file="JobFetcher.feature.cs"];
m7_5 [label="Entry Unk.GetTestRunner", span="", cluster="Unk.GetTestRunner", file="JobFetcher.feature.cs"];
m7_9 [label="Entry HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs"];
m7_10 [label="testRunner.OnFeatureEnd()", span="41-41", cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs"];
m7_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs"];
m7_12 [label="Exit HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Server.JobFetcherFeature.FeatureTearDown()", file="JobFetcher.feature.cs"];
m7_22 [label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs"];
m7_23 [label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63", cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs"];
m7_24 [label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61", cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="JobFetcher.feature.cs"];
m7_85 [label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_86 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher sets the \'fetched\' flag when it dequeues a job'', ((string[])(null)))", span="190-190", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_87 [label="this.ScenarioSetup(scenarioInfo)", span="192-192", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_88 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="194-194", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_89 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="196-196", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_90 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_91 [label="testRunner.Then(''the job has the \'fetched\' flag set'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_92 [label="this.ScenarioCleanup()", span="202-202", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_93 [label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", span="188-188", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherSetsTheFetchedFlagWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="JobFetcher.feature.cs"];
m7_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobFetcher.feature.cs"];
m7_64 [label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_65 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher dequeues jobs in the FIFO order'', ((string[])(null)))", span="142-142", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_66 [label="this.ScenarioSetup(scenarioInfo)", span="144-144", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_67 [label="testRunner.Given(''the \'first\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="146-146", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_68 [label="testRunner.And(''the \'second\' job in the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="148-148", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_69 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="150-150", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_70 [label="testRunner.When(''it dequeues a job for the first time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="152-152", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_71 [label="testRunner.Then(''the fetcher returns the \'first\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="154-154", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_72 [label="testRunner.When(''it dequeues a job for the second time'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="156-156", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_73 [label="testRunner.Then(''the fetcher returns the \'second\' job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="158-158", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_74 [label="this.ScenarioCleanup()", span="160-160", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_75 [label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", span="140-140", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherDequeuesJobsInTheFIFOOrder()", file="JobFetcher.feature.cs"];
m7_42 [label="Entry Unk.When", span="", cluster="Unk.When", file="JobFetcher.feature.cs"];
m7_14 [label="Entry HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs"];
m7_15 [label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''JobFetcher''))", span="48-49", cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs"];
m7_16 [label="HangFire.Tests.Server.JobFetcherFeature.FeatureSetup(null)", span="51-51", cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs"];
m7_17 [label="Exit HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", span="46-46", cluster="HangFire.Tests.Server.JobFetcherFeature.TestInitialize()", file="JobFetcher.feature.cs"];
m7_39 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobFetcher.feature.cs"];
m7_43 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="JobFetcher.feature.cs"];
m7_40 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="JobFetcher.feature.cs"];
m7_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobFetcher.feature.cs"];
m7_26 [label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs"];
m7_27 [label="testRunner.CollectScenarioErrors()", span="68-68", cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs"];
m7_28 [label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", span="66-66", cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioCleanup()", file="JobFetcher.feature.cs"];
m7_44 [label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m7_45 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher removes the dequeued job from the queue and adds it to the dequeued list'', ((string[])(null)))", span="98-98", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m7_46 [label="this.ScenarioSetup(scenarioInfo)", span="100-100", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m7_47 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="102-102", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m7_48 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m7_49 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="106-106", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m7_50 [label="testRunner.Then(''the queue does not contain the job anymore'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="108-108", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m7_51 [label="testRunner.But(''the dequeued jobs list contains it'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="110-110", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m7_52 [label="this.ScenarioCleanup()", span="112-112", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m7_53 [label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", span="96-96", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherRemovesTheDequeuedJobFromTheQueueAndAddsItToTheDequeuedList()", file="JobFetcher.feature.cs"];
m7_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="JobFetcher.feature.cs"];
m7_30 [label="Entry HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_31 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Fetcher returns the job payload when it dequeues a job'', ((string[])(null)))", span="77-77", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_32 [label="this.ScenarioSetup(scenarioInfo)", span="79-79", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_33 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="81-81", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_34 [label="testRunner.And(''the fetcher listening the queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="83-83", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_35 [label="testRunner.When(''it dequeues a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="85-85", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_36 [label="testRunner.Then(''the fetcher returns the payload'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="87-87", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_37 [label="this.ScenarioCleanup()", span="89-89", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_38 [label="Exit HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", span="75-75", cluster="HangFire.Tests.Server.JobFetcherFeature.FetcherReturnsTheJobPayloadWhenItDequeuesAJob()", file="JobFetcher.feature.cs"];
m7_18 [label="Entry HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs"];
m7_19 [label="testRunner.OnScenarioEnd()", span="58-58", cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs"];
m7_20 [label="Exit HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", span="56-56", cluster="HangFire.Tests.Server.JobFetcherFeature.ScenarioTearDown()", file="JobFetcher.feature.cs"];
m7_94 [label="HangFire.Tests.Server.JobFetcherFeature", span="", file="JobFetcher.feature.cs"];
m8_11 [label="testRunner = null", span="42-42", cluster="HangFire.Tests.Server.JobManagerFeature.FeatureTearDown()", file="JobManager.feature.cs"];
m8_12 [label="Exit HangFire.Tests.Server.JobManagerFeature.FeatureTearDown()", span="39-39", cluster="HangFire.Tests.Server.JobManagerFeature.FeatureTearDown()", file="JobManager.feature.cs"];
m8_13 [label="Entry Unk.OnFeatureEnd", span="", cluster="Unk.OnFeatureEnd", file="JobManager.feature.cs"];
m8_4 [label="Exit HangFire.Tests.Server.JobManagerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30", cluster="HangFire.Tests.Server.JobManagerFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="JobManager.feature.cs"];
m8_25 [label="var owinContext = new OwinContext(context.OwinEnvironment)", span="89-89", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="JobManager.feature.cs"];
m8_29 [label="AppPath = context.AppPath", span="94-94", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="JobManager.feature.cs"];
m8_61 [label="Entry HangFire.Tests.Server.JobManagerFeature.AnUnexistingJobShouldNotBeProcessedButItShouldBeRemovedFromTheDequeuedList()", span="137-137", cluster="HangFire.Tests.Server.JobManagerFeature.AnUnexistingJobShouldNotBeProcessedButItShouldBeRemovedFromTheDequeuedList()", file="JobManager.feature.cs"];
m8_62 [label="_body = body", span="126-126", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="JobManager.feature.cs", color=green, community=0];
m8_63 [label="Execute()", span="128-128", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="JobManager.feature.cs"];
m8_64 [label="Layout != null", span="130-130", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="JobManager.feature.cs"];
m8_65 [label="Layout.Assign(this)", span="132-132", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="JobManager.feature.cs"];
m8_66 [label="return Layout.TransformText(_content.ToString());", span="133-133", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="JobManager.feature.cs"];
m8_67 [label="return _content.ToString();", span="136-136", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="JobManager.feature.cs"];
m8_68 [label="this.ScenarioCleanup()", span="152-152", cluster="HangFire.Tests.Server.JobManagerFeature.AnUnexistingJobShouldNotBeProcessedButItShouldBeRemovedFromTheDequeuedList()", file="JobManager.feature.cs"];
m8_69 [label="Exit HangFire.Tests.Server.JobManagerFeature.AnUnexistingJobShouldNotBeProcessedButItShouldBeRemovedFromTheDequeuedList()", span="137-137", cluster="HangFire.Tests.Server.JobManagerFeature.AnUnexistingJobShouldNotBeProcessedButItShouldBeRemovedFromTheDequeuedList()", file="JobManager.feature.cs"];
m8_21 [label="GenerationTime = parentPage.GenerationTime", span="83-83", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobManager.feature.cs"];
m8_48 [label="testRunner.And(''the job should be removed from the dequeued list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="106-106", cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", file="JobManager.feature.cs"];
m8_56 [label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="123-123", cluster="HangFire.Tests.Server.JobManagerFeature.AfterPerformingTheBrokenJobItShouldHaveTheFailedState()", file="JobManager.feature.cs"];
m8_41 [label="Entry Unk.Then", span="", cluster="Unk.Then", file="JobManager.feature.cs"];
m8_40 [label="Entry Unk.When", span="", cluster="Unk.When", file="JobManager.feature.cs"];
m8_51 [label="return;", span="114-114", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="JobManager.feature.cs"];
m8_70 [label="return string.IsNullOrEmpty(text)\r\n                       ? string.Empty\r\n                       : WebUtility.HtmlEncode(text);", span="141-143", cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="JobManager.feature.cs", color=green, community=0];
m8_9 [label="return Request.Query[key];", span="67-67", cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="JobManager.feature.cs"];
m8_10 [label="Exit Hangfire.Dashboard.RazorPage.Query(string)", span="65-65", cluster="Hangfire.Dashboard.RazorPage.Query(string)", file="JobManager.feature.cs"];
m8_5 [label="Entry Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", span="35-35", cluster="Hangfire.Dashboard.HtmlHelper.HtmlHelper(Hangfire.Dashboard.RazorPage)", file="JobManager.feature.cs"];
m8_81 [label="Entry HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", span="184-184", cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="JobManager.feature.cs"];
m8_82 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Disposable job should be disposed after processing'', ((string[])(null)))", span="186-186", cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="JobManager.feature.cs"];
m8_83 [label="this.ScenarioSetup(scenarioInfo)", span="188-188", cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="JobManager.feature.cs"];
m8_84 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="190-190", cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="JobManager.feature.cs"];
m8_85 [label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="192-192", cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="JobManager.feature.cs"];
m8_86 [label="testRunner.Then(''the job should be disposed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="194-194", cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="JobManager.feature.cs"];
m8_87 [label="this.ScenarioCleanup()", span="196-196", cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="JobManager.feature.cs"];
m8_88 [label="Exit HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", span="184-184", cluster="HangFire.Tests.Server.JobManagerFeature.DisposableJobShouldBeDisposedAfterProcessing()", file="JobManager.feature.cs"];
m8_34 [label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="83-83", cluster="HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", file="JobManager.feature.cs"];
m8_35 [label="testRunner.Then(''the job should be performed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="85-85", cluster="HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", file="JobManager.feature.cs"];
m8_42 [label="Entry HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", span="94-94", cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", file="JobManager.feature.cs"];
m8_45 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="100-100", cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", file="JobManager.feature.cs"];
m8_43 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Successfully performed job should have the Succeeded state'', ((string[])(null)))", span="96-96", cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", file="JobManager.feature.cs"];
m8_44 [label="this.ScenarioSetup(scenarioInfo)", span="98-98", cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", file="JobManager.feature.cs"];
m8_46 [label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="102-102", cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", file="JobManager.feature.cs"];
m8_52 [label="var html = value as NonEscapedString", span="115-115", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="JobManager.feature.cs"];
m8_53 [label="WriteLiteral(html != null ? html.ToString() : Encode(value.ToString()))", span="116-116", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="JobManager.feature.cs"];
m8_54 [label="Exit Hangfire.Dashboard.RazorPage.Write(object)", span="111-111", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="JobManager.feature.cs"];
m8_55 [label="Entry Hangfire.Dashboard.NonEscapedString.ToString()", span="27-27", cluster="Hangfire.Dashboard.NonEscapedString.ToString()", file="JobManager.feature.cs"];
m8_57 [label="Entry Hangfire.Dashboard.RazorPage.Encode(string)", span="139-139", cluster="Hangfire.Dashboard.RazorPage.Encode(string)", file="JobManager.feature.cs"];
m8_58 [label="Entry Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119", cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="JobManager.feature.cs"];
m8_59 [label="return new NonEscapedString(_body);", span="121-121", cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="JobManager.feature.cs"];
m8_60 [label="Exit Hangfire.Dashboard.RazorPage.RenderBody()", span="119-119", cluster="Hangfire.Dashboard.RazorPage.RenderBody()", file="JobManager.feature.cs"];
m8_8 [label="Entry Unk.OnFeatureStart", span="", cluster="Unk.OnFeatureStart", file="JobManager.feature.cs"];
m8_0 [label="Entry Hangfire.Dashboard.RazorPage.RazorPage()", span="32-32", cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="JobManager.feature.cs"];
m8_1 [label="GenerationTime = Stopwatch.StartNew()", span="34-34", cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="JobManager.feature.cs"];
m8_2 [label="Html = new HtmlHelper(this)", span="35-35", cluster="Hangfire.Dashboard.RazorPage.RazorPage()", color=red, community=0, file="JobManager.feature.cs"];
m8_3 [label="Exit Hangfire.Dashboard.RazorPage.RazorPage()", span="32-32", cluster="Hangfire.Dashboard.RazorPage.RazorPage()", file="JobManager.feature.cs"];
m8_7 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="JobManager.feature.cs"];
m8_47 [label="testRunner.Then(''its state should be Succeeded'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="104-104", cluster="HangFire.Tests.Server.JobManagerFeature.SuccessfullyPerformedJobShouldHaveTheSucceededState()", file="JobManager.feature.cs"];
m8_36 [label="this.ScenarioCleanup()", span="87-87", cluster="HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", file="JobManager.feature.cs"];
m8_37 [label="Exit HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", span="75-75", cluster="HangFire.Tests.Server.JobManagerFeature.ManagerShouldPerformAJob()", color=green, community=0, file="JobManager.feature.cs"];
m8_38 [label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span="", cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="JobManager.feature.cs"];
m8_39 [label="Entry Unk.Given", span="", cluster="Unk.Given", file="JobManager.feature.cs"];
m8_18 [label="Storage = parentPage.Storage", span="79-79", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobManager.feature.cs"];
m8_19 [label="AppPath = parentPage.AppPath", span="80-80", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobManager.feature.cs", color=green, community=0];
m8_20 [label="Url = parentPage.Url", span="81-81", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobManager.feature.cs"];
m8_22 [label="_statisticsLazy = parentPage._statisticsLazy", span="84-84", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobManager.feature.cs", color=green, community=0];
m8_23 [label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="75-75", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobManager.feature.cs"];
m8_24 [label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", span="87-87", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="JobManager.feature.cs"];
m8_30 [label="Url = new UrlHelper(context.OwinEnvironment)", span="95-95", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="JobManager.feature.cs"];
m8_31 [label="_statisticsLazy = new Lazy<StatisticsDto>(() =>\r\n            {\r\n                var monitoring = Storage.GetMonitoringApi();\r\n                return monitoring.GetStatistics();\r\n            })", span="97-101", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="JobManager.feature.cs", color=green, community=0];
m8_32 [label="Exit Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", span="87-87", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="JobManager.feature.cs"];
m8_33 [label="Entry OwinContext.cstr", span="", cluster="OwinContext.cstr", file="JobManager.feature.cs"];
m8_14 [label="Entry Hangfire.Dashboard.RazorPage.TransformText(string)", span="124-124", cluster="Hangfire.Dashboard.RazorPage.TransformText(string)", file="JobManager.feature.cs"];
m8_15 [label="Entry Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", span="75-75", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobManager.feature.cs"];
m8_16 [label="Request = parentPage.Request", span="77-77", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobManager.feature.cs"];
m8_17 [label="Response = parentPage.Response", span="78-78", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RazorPage)", file="JobManager.feature.cs", color=green, community=0];
m8_49 [label="Entry Hangfire.Dashboard.RazorPage.Write(object)", span="111-111", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="JobManager.feature.cs"];
m8_50 [label="value == null", span="113-113", cluster="Hangfire.Dashboard.RazorPage.Write(object)", file="JobManager.feature.cs"];
m8_6 [label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span="", cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="JobManager.feature.cs"];
m8_26 [label="Request = owinContext.Request", span="91-91", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="JobManager.feature.cs"];
m8_27 [label="Response = owinContext.Response", span="92-92", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="JobManager.feature.cs"];
m8_28 [label="Storage = context.JobStorage", span="93-93", cluster="Hangfire.Dashboard.RazorPage.Assign(Hangfire.Dashboard.RequestDispatcherContext)", file="JobManager.feature.cs"];
m8_71 [label="Entry HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", span="160-160", cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="JobManager.feature.cs"];
m8_72 [label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Worker should processes only jobs in the Enqueued state, but it should remove the'' +\r\n                    '' job from the dequeued list anyway'', ((string[])(null)))", span="162-163", cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="JobManager.feature.cs"];
m8_73 [label="Hangfire.Dashboard.RazorPage", span="", cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="JobManager.feature.cs"];
m8_74 [label="testRunner.Given(''an enqueued job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="167-167", cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="JobManager.feature.cs"];
m8_75 [label="testRunner.And(''its state is Processing'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="169-169", cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="JobManager.feature.cs"];
m8_76 [label="testRunner.When(''the manager processes the next job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="171-171", cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="JobManager.feature.cs"];
m8_77 [label="testRunner.Then(''the job should not be performed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="173-173", cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="JobManager.feature.cs"];
m8_78 [label="testRunner.But(''it should be removed from the dequeued list'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''But '')", span="175-175", cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="JobManager.feature.cs"];
m8_79 [label="this.ScenarioCleanup()", span="177-177", cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="JobManager.feature.cs"];
m8_80 [label="Exit HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", span="160-160", cluster="HangFire.Tests.Server.JobManagerFeature.WorkerShouldProcessesOnlyJobsInTheEnqueuedStateButItShouldRemoveTheJobFromTheDequeuedListAnyway()", file="JobManager.feature.cs"];
m8_89 [label="HangFire.Tests.Server.JobManagerFeature", span="", file="JobManager.feature.cs"];
m9_6 [label="Entry HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", span="33-33", cluster="HangFire.SqlServer.SqlServerStorage.SqlServerStorage(string)", file="SchedulePoller.feature.cs"];
m9_7 [label="Entry HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", span="28-28", cluster="HangFire.SqlServer.SqlServerStorage.UseMsmqQueues(string, params string[])", file="SchedulePoller.feature.cs"];
m9_8 [label="Entry HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()", span="31-31", cluster="HangFire.Web.AspNetBackgroundJobServer.AspNetBackgroundJobServer()", file="SchedulePoller.feature.cs"];
m9_0 [label="Entry MvcSample.HangFireConfig.Start()", span="17-17", cluster="MvcSample.HangFireConfig.Start()", file="SchedulePoller.feature.cs"];
m9_1 [label="var storage = new SqlServerStorage(\r\n                @''Server=.\sqlexpress;Database=HangFire.Sample;Trusted_Connection=True;'')", span="27-28", cluster="MvcSample.HangFireConfig.Start()", file="SchedulePoller.feature.cs"];
m9_2 [label="storage.UseMsmqQueues(@''.\Private$\hangfire{0}'', ''default'', ''critical'')", span="29-29", cluster="MvcSample.HangFireConfig.Start()", file="SchedulePoller.feature.cs"];
m9_3 [label="JobStorage.Current = storage", span="31-31", cluster="MvcSample.HangFireConfig.Start()", file="SchedulePoller.feature.cs"];
m9_4 [label="_server = new AspNetBackgroundJobServer()", span="46-46", cluster="MvcSample.HangFireConfig.Start()", file="SchedulePoller.feature.cs"];
m9_5 [label="Exit MvcSample.HangFireConfig.Start()", span="17-17", cluster="MvcSample.HangFireConfig.Start()", file="SchedulePoller.feature.cs"];
m9_9 [label="Entry MvcSample.HangFireConfig.Stop()", span="50-50", cluster="MvcSample.HangFireConfig.Stop()", file="SchedulePoller.feature.cs"];
m9_10 [label="_server.Stop()", span="52-52", cluster="MvcSample.HangFireConfig.Stop()", file="SchedulePoller.feature.cs"];
m9_11 [label="Exit MvcSample.HangFireConfig.Stop()", span="50-50", cluster="MvcSample.HangFireConfig.Stop()", file="SchedulePoller.feature.cs"];
m9_12 [label="Entry HangFire.BackgroundJobServer.Stop()", span="71-71", cluster="HangFire.BackgroundJobServer.Stop()", file="SchedulePoller.feature.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n16  [key=3, color=darkorchid, style=bold, label="Property variable string StateName"];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=2, style=dotted];
n5 -> n3  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n6 -> n9  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
n6 -> n11  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqTransactionType"];
n6 -> n12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
n6 -> n13  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.SqlServerStorage"];
n7 -> n8  [key=0, style=solid];
n7 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n16  [key=2, style=dotted];
n12 -> n13  [key=0, style=solid];
n12 -> n17  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n8 -> n14  [key=0, style=solid];
n8 -> n15  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n10 -> n12  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
n16 -> n16  [key=3, color=darkorchid, style=bold, label="Field variable string Name"];
n14 -> n6  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_67  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_68  [key=2, style=dotted];
m0_2 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=sqlServerStorage];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_69  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_70  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_71  [key=2, style=dotted];
m0_6 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label=server];
m0_7 -> m0_8  [key=0, style=solid, color=green];
m0_7 -> m0_46  [key=1, style=dashed, color=green, label=count];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_74  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_64  [key=0, style=solid, color=green];
m0_46 -> m0_47  [key=0, style=solid, color=green];
m0_46 -> m0_46  [key=1, style=dashed, color=green, label=count];
m0_46 -> m0_104  [key=1, style=dashed, color=green, label=number];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_72  [key=2, style=dotted];
m0_9 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_39  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_45  [key=1, style=dashed, color=green, label=command];
m0_9 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_51  [key=1, style=dashed, color=green, label=command];
m0_9 -> m0_52  [key=1, style=dashed, color=green, label=command];
m0_9 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_9 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=command];
m0_64 -> m0_65  [key=0, style=solid, color=green];
m0_64 -> m0_79  [key=2, style=dotted, color=green];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_64  [key=0, style=solid, color=green];
m0_10 -> m0_73  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=0, style=solid];
m0_11 -> m0_73  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_23  [key=0, style=solid];
m0_13 -> m0_75  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_76  [key=2, style=dotted];
m0_14 -> m0_77  [key=2, style=dotted];
m0_14 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_32  [key=0, style=solid, color=red];
m0_23 -> m0_75  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_76  [key=2, style=dotted];
m0_24 -> m0_77  [key=2, style=dotted];
m0_24 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m0_32 -> m0_33  [key=0, style=solid, color=red];
m0_32 -> m0_38  [key=0, style=solid, color=red];
m0_32 -> m0_75  [key=2, style=dotted, color=red];
m0_33 -> m0_34  [key=0, style=solid, color=green];
m0_33 -> m0_76  [key=2, style=dotted, color=red];
m0_33 -> m0_77  [key=2, style=dotted, color=red];
m0_33 -> m0_35  [key=1, style=dashed, color=green, label=workCount];
m0_38 -> m0_39  [key=0, style=solid, color=red];
m0_38 -> m0_44  [key=0, style=solid, color=red];
m0_38 -> m0_75  [key=2, style=dotted, color=red];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_76  [key=2, style=dotted];
m0_39 -> m0_77  [key=2, style=dotted];
m0_39 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=workCount];
m0_44 -> m0_45  [key=0, style=solid, color=green];
m0_44 -> m0_48  [key=0, style=solid, color=red];
m0_44 -> m0_75  [key=2, style=dotted, color=red];
m0_45 -> m0_46  [key=0, style=solid, color=green];
m0_45 -> m0_76  [key=2, style=dotted, color=green];
m0_45 -> m0_77  [key=2, style=dotted, color=green];
m0_45 -> m0_47  [key=1, style=dashed, color=green, label=seconds];
m0_48 -> m0_49  [key=0, style=solid, color=red];
m0_48 -> m0_51  [key=0, style=solid, color=green];
m0_48 -> m0_75  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid, color=green];
m0_49 -> m0_76  [key=2, style=dotted, color=red];
m0_49 -> m0_77  [key=2, style=dotted, color=red];
m0_49 -> m0_107  [key=1, style=dashed, color=green, label=iterations];
m0_51 -> m0_52  [key=0, style=solid, color=green];
m0_51 -> m0_58  [key=0, style=solid, color=green];
m0_51 -> m0_75  [key=2, style=dotted, color=green];
m0_52 -> m0_53  [key=0, style=solid, color=green];
m0_52 -> m0_76  [key=2, style=dotted, color=green];
m0_52 -> m0_77  [key=2, style=dotted, color=green];
m0_52 -> m0_54  [key=1, style=dashed, color=green, label=workCount];
m0_58 -> m0_59  [key=0, style=solid, color=red];
m0_58 -> m0_8  [key=0, style=solid, color=green];
m0_58 -> m0_75  [key=2, style=dotted, color=red];
m0_59 -> m0_60  [key=0, style=solid, color=green];
m0_59 -> m0_76  [key=2, style=dotted];
m0_59 -> m0_77  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_15 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_20  [key=0, style=solid];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label=number];
m0_19 -> m0_16  [key=0, style=solid];
m0_19 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_23  [key=0, style=solid];
m0_20 -> m0_79  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_78  [key=2, style=dotted];
m0_18 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_79  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_26 -> m0_27  [key=0, style=solid, color=red];
m0_26 -> m0_29  [key=0, style=solid, color=green];
m0_28 -> m0_26  [key=0, style=solid];
m0_28 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_27 -> m0_28  [key=0, style=solid, color=red];
m0_27 -> m0_80  [key=2, style=dotted, color=red];
m0_27 -> m0_89  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_29 -> m0_30  [key=0, style=solid, color=green];
m0_29 -> m0_32  [key=0, style=solid, color=green];
m0_29 -> m0_79  [key=2, style=dotted, color=green];
m0_29 -> m0_8  [key=0, style=solid, color=green];
m0_29 -> m0_62  [key=0, style=solid, color=green];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid, color=red];
m0_31 -> m0_79  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid, color=green];
m0_34 -> m0_37  [key=1, style=dashed, color=green, label=i];
m0_35 -> m0_36  [key=0, style=solid, color=green];
m0_35 -> m0_38  [key=0, style=solid, color=green];
m0_37 -> m0_35  [key=0, style=solid, color=green];
m0_37 -> m0_37  [key=1, style=dashed, color=green, label=i];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_36 -> m0_78  [key=2, style=dotted, color=red];
m0_36 -> m0_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_44  [key=0, style=solid, color=red];
m0_43 -> m0_41  [key=0, style=solid];
m0_43 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_78  [key=2, style=dotted];
m0_42 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_47 -> m0_48  [key=0, style=solid, color=green];
m0_47 -> m0_81  [key=2, style=dotted, color=green];
m0_47 -> m0_82  [key=2, style=dotted, color=green];
m0_47 -> m0_103  [key=1, style=dashed, color=green, label="lambda expression"];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_50 -> m0_78  [key=2, style=dotted, color=green];
m0_50 -> m0_106  [key=1, style=dashed, color=green, label="lambda expression"];
m0_53 -> m0_54  [key=0, style=solid, color=green];
m0_53 -> m0_57  [key=1, style=dashed, color=green, label=i];
m0_54 -> m0_55  [key=0, style=solid, color=green];
m0_54 -> m0_58  [key=0, style=solid, color=green];
m0_57 -> m0_54  [key=0, style=solid, color=green];
m0_57 -> m0_57  [key=1, style=dashed, color=green, label=i];
m0_55 -> m0_56  [key=0, style=solid, color=green];
m0_55 -> m0_78  [key=2, style=dotted, color=green];
m0_55 -> m0_110  [key=1, style=dashed, color=green, label="lambda expression"];
m0_56 -> m0_57  [key=0, style=solid, color=green];
m0_56 -> m0_83  [key=2, style=dotted, color=red];
m0_60 -> m0_61  [key=0, style=solid, color=red];
m0_60 -> m0_84  [key=2, style=dotted, color=green];
m0_60 -> m0_114  [key=1, style=dashed, color=green, label="lambda expression"];
m0_60 -> m0_29  [key=0, style=solid, color=green];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_8  [key=0, style=solid];
m0_61 -> m0_79  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid, color=red];
m0_63 -> m0_8  [key=0, style=solid, color=green];
m0_63 -> m0_79  [key=2, style=dotted, color=red];
m0_65 -> m0_66  [key=0, style=solid, color=green];
m0_65 -> m0_72  [key=2, style=dotted, color=green];
m0_66 -> m0_0  [key=0, style=bold, color=blue];
m0_119 -> m0_120  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_88  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid, color=red];
m0_93 -> m0_94  [key=0, style=solid, color=red];
m0_97 -> m0_98  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid, color=green];
m0_104 -> m0_88  [key=2, style=dotted, color=green];
m0_103 -> m0_104  [key=0, style=solid, color=green];
m0_107 -> m0_108  [key=0, style=solid, color=green];
m0_107 -> m0_109  [key=2, style=dotted, color=green];
m0_106 -> m0_107  [key=0, style=solid, color=green];
m0_110 -> m0_111  [key=0, style=solid, color=green];
m0_114 -> m0_115  [key=0, style=solid];
m0_87 -> m0_85  [key=0, style=bold, color=blue];
m0_90 -> m0_91  [key=0, style=solid, color=red];
m0_90 -> m0_92  [key=2, style=dotted, color=red];
m0_91 -> m0_89  [key=0, style=bold, color=blue];
m0_94 -> m0_95  [key=0, style=solid, color=red];
m0_94 -> m0_96  [key=2, style=dotted, color=red];
m0_95 -> m0_93  [key=0, style=bold, color=blue];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_100  [key=2, style=dotted];
m0_98 -> m0_101  [key=2, style=dotted];
m0_98 -> m0_102  [key=2, style=dotted];
m0_99 -> m0_97  [key=0, style=bold, color=blue];
m0_105 -> m0_103  [key=0, style=bold, color=blue];
m0_108 -> m0_106  [key=0, style=bold, color=blue];
m0_111 -> m0_112  [key=0, style=solid, color=green];
m0_111 -> m0_113  [key=2, style=dotted, color=green];
m0_111 -> m0_125  [key=0, style=solid, color=green];
m0_112 -> m0_110  [key=0, style=bold, color=blue];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_117  [key=0, style=solid, color=red];
m0_116 -> m0_118  [key=0, style=solid];
m0_116 -> m0_78  [key=2, style=dotted];
m0_116 -> m0_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_117 -> m0_118  [key=0, style=solid, color=red];
m0_117 -> m0_78  [key=2, style=dotted, color=red];
m0_117 -> m0_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_118 -> m0_114  [key=0, style=bold, color=blue];
m0_123 -> m0_124  [key=0, style=solid, color=red];
m0_123 -> m0_111  [key=0, style=solid, color=green];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_122  [key=2, style=dotted];
m0_121 -> m0_119  [key=0, style=bold, color=blue];
m0_124 -> m0_125  [key=0, style=solid, color=red];
m0_124 -> m0_113  [key=2, style=dotted, color=red];
m0_125 -> m0_123  [key=0, style=bold, color=blue];
m0_126 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label=number];
m0_127 -> m0_104  [key=1, style=dashed, color=green, label=number];
m0_128 -> m0_107  [key=1, style=dashed, color=green, label=iterations];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_46  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_63  [key=2, style=dotted];
m1_114 -> m1_111  [key=0, style=bold, color=blue];
m1_103 -> m1_104  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_46  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_69  [key=2, style=dotted];
m1_106 -> m1_103  [key=0, style=bold, color=blue];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=0, style=solid];
m1_17 -> m1_35  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_84  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_85  [key=2, style=dotted];
m1_82 -> m1_86  [key=2, style=dotted];
m1_83 -> m1_80  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_15 -> m1_35  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_7 -> m1_35  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_87 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=Table];
m1_87 -> m1_99  [key=3, color=darkorchid, style=bold, label="Parameter variable Table table"];
m1_87 -> m1_107  [key=3, color=darkorchid, style=bold, label="Parameter variable Table table"];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_53  [key=2, style=dotted];
m1_88 -> m1_54  [key=2, style=dotted];
m1_88 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_88 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_56  [key=2, style=dotted];
m1_90 -> m1_57  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_94  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_55  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_58  [key=2, style=dotted];
m1_93 -> m1_87  [key=0, style=bold, color=blue];
m1_95 -> m1_96  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_46  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_60  [key=2, style=dotted];
m1_98 -> m1_95  [key=0, style=bold, color=blue];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_46 -> m1_95  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m1_46 -> m1_103  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m1_46 -> m1_111  [key=3, color=darkorchid, style=bold, label="Parameter variable string type"];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_53  [key=2, style=dotted];
m1_47 -> m1_54  [key=2, style=dotted];
m1_47 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_47 -> m1_50  [key=1, style=dashed, color=darkseagreen4, label=job];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_56  [key=2, style=dotted];
m1_49 -> m1_57  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_55  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_58  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_59  [key=2, style=dotted];
m1_52 -> m1_46  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_1 -> m1_2  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=2, style=dotted];
m1_62 -> m1_60  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_2 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_3 -> m1_4  [key=0, style=solid, color=green];
m1_3 -> m1_5  [key=0, style=solid];
m1_3 -> m1_35  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid, color=green];
m1_5 -> m1_7  [key=0, style=solid];
m1_5 -> m1_35  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_9 -> m1_35  [key=2, style=dotted];
m1_9 -> m1_15  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_11 -> m1_35  [key=2, style=dotted];
m1_11 -> m1_16  [key=2, style=dotted];
m1_11 -> m1_17  [key=2, style=dotted];
m1_11 -> m1_15  [key=2, style=dotted];
m1_11 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_13 -> m1_35  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=0, style=solid];
m1_19 -> m1_35  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_21 -> m1_35  [key=2, style=dotted];
m1_21 -> m1_4  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m1_21 -> m1_5  [key=1, style=dashed, color=green, label="HangFire.BackgroundJobServerOptions"];
m1_21 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m1_21 -> m1_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m1_21 -> m1_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m1_21 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m1_21 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m1_21 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m1_21 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="HangFire.BackgroundJobServerOptions"];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_25  [key=0, style=solid];
m1_23 -> m1_35  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [key=0, style=solid];
m1_25 -> m1_35  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=0, style=solid];
m1_27 -> m1_35  [key=2, style=dotted];
m1_4 -> m1_30  [key=0, style=solid];
m1_4 -> m1_32  [key=0, style=solid];
m1_4 -> m1_34  [key=0, style=solid];
m1_4 -> m1_36  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid, color=green];
m1_4 -> m1_7  [key=2, style=dotted, color=green];
m1_6 -> m1_30  [key=0, style=solid];
m1_6 -> m1_32  [key=0, style=solid];
m1_6 -> m1_34  [key=0, style=solid];
m1_6 -> m1_37  [key=2, style=dotted];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m1_8 -> m1_30  [key=0, style=solid];
m1_8 -> m1_32  [key=0, style=solid];
m1_8 -> m1_34  [key=0, style=solid];
m1_8 -> m1_38  [key=2, style=dotted];
m1_8 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=ILog];
m1_8 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=ILog];
m1_8 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label=ILog];
m1_8 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=ILog];
m1_8 -> m1_9  [key=0, style=solid];
m1_10 -> m1_30  [key=0, style=solid];
m1_10 -> m1_32  [key=0, style=solid];
m1_10 -> m1_34  [key=0, style=solid];
m1_10 -> m1_38  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_15  [key=2, style=dotted];
m1_12 -> m1_30  [key=0, style=solid];
m1_12 -> m1_32  [key=0, style=solid];
m1_12 -> m1_34  [key=0, style=solid];
m1_12 -> m1_39  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_15  [key=2, style=dotted];
m1_14 -> m1_30  [key=0, style=solid];
m1_14 -> m1_32  [key=0, style=solid];
m1_14 -> m1_34  [key=0, style=solid];
m1_14 -> m1_39  [key=2, style=dotted];
m1_14 -> m1_8  [key=0, style=bold, color=blue];
m1_16 -> m1_30  [key=0, style=solid];
m1_16 -> m1_32  [key=0, style=solid];
m1_16 -> m1_34  [key=0, style=solid];
m1_16 -> m1_40  [key=2, style=dotted];
m1_16 -> m1_41  [key=2, style=dotted];
m1_18 -> m1_30  [key=0, style=solid];
m1_18 -> m1_32  [key=0, style=solid];
m1_18 -> m1_34  [key=0, style=solid];
m1_18 -> m1_40  [key=2, style=dotted];
m1_18 -> m1_42  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_20 -> m1_30  [key=0, style=solid];
m1_20 -> m1_32  [key=0, style=solid];
m1_20 -> m1_34  [key=0, style=solid];
m1_20 -> m1_40  [key=2, style=dotted];
m1_20 -> m1_43  [key=2, style=dotted];
m1_20 -> m1_18  [key=0, style=bold, color=blue];
m1_22 -> m1_30  [key=0, style=solid];
m1_22 -> m1_32  [key=0, style=solid];
m1_22 -> m1_34  [key=0, style=solid];
m1_22 -> m1_40  [key=2, style=dotted];
m1_22 -> m1_44  [key=2, style=dotted];
m1_24 -> m1_30  [key=0, style=solid];
m1_24 -> m1_32  [key=0, style=solid];
m1_24 -> m1_34  [key=0, style=solid];
m1_24 -> m1_36  [key=2, style=dotted];
m1_26 -> m1_30  [key=0, style=solid];
m1_26 -> m1_32  [key=0, style=solid];
m1_26 -> m1_34  [key=0, style=solid];
m1_26 -> m1_36  [key=2, style=dotted];
m1_28 -> m1_30  [key=0, style=solid];
m1_28 -> m1_32  [key=0, style=solid];
m1_28 -> m1_34  [key=0, style=solid];
m1_28 -> m1_36  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_32  [key=0, style=solid];
m1_29 -> m1_34  [key=0, style=solid];
m1_29 -> m1_45  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_31 -> m1_34  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_2  [key=0, style=bold, color=blue];
m1_69 -> m1_70  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_76  [key=2, style=dotted];
m1_70 -> m1_57  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_77  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_78  [key=2, style=dotted];
m1_72 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label=timestamp];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_79  [key=2, style=dotted];
m1_73 -> m1_57  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_79  [key=2, style=dotted];
m1_74 -> m1_57  [key=2, style=dotted];
m1_75 -> m1_69  [key=0, style=bold, color=blue];
m1_99 -> m1_100  [key=0, style=solid];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_87  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_60  [key=2, style=dotted];
m1_102 -> m1_99  [key=0, style=bold, color=blue];
m1_107 -> m1_108  [key=0, style=solid];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_87  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_69  [key=2, style=dotted];
m1_110 -> m1_107  [key=0, style=bold, color=blue];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_61  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m1_63 -> m1_111  [key=3, color=darkorchid, style=bold, label="Parameter variable string name"];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_53  [key=2, style=dotted];
m1_64 -> m1_68  [key=2, style=dotted];
m1_64 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label=jobIds];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_59  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_59  [key=2, style=dotted];
m1_67 -> m1_63  [key=0, style=bold, color=blue];
m1_115 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m1_115 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.ClientSteps"];
m3_0 -> m3_1  [key=0, style=solid, color=green];
m3_1 -> m3_2  [key=0, style=solid, color=green];
m3_1 -> m3_3  [key=2, style=dotted, color=green];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m4_28 -> m4_29  [key=0, style=solid, color=green];
m4_28 -> m4_31  [key=0, style=bold, color=green];
m4_28 -> m4_30  [key=0, style=bold, color=crimson];
m4_29 -> m4_30  [key=0, style=solid, color=green];
m4_29 -> m4_33  [key=2, style=dotted, color=green];
m4_30 -> m4_31  [key=0, style=solid, color=green];
m4_30 -> m4_34  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid, color=green];
m4_31 -> m4_35  [key=2, style=dotted, color=green];
m4_32 -> m4_28  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_0  [key=0, style=bold, color=blue];
m4_7 -> m4_1  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m4_7 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m4_7 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.IMsmqTransaction"];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_2 -> m5_7  [key=0, style=solid];
m5_2 -> n15  [key=2, style=dotted];
m5_4 -> m5_7  [key=0, style=solid];
m5_4 -> n15  [key=2, style=dotted];
m5_7 -> m5_0  [key=0, style=bold, color=blue];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_20  [key=2, style=dotted];
m5_19 -> m5_17  [key=0, style=bold, color=blue];
m5_9 -> m5_10  [key=0, style=solid];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_12  [key=2, style=dotted];
m5_11 -> m5_9  [key=0, style=bold, color=blue];
m5_13 -> m5_14  [key=0, style=solid];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_16  [key=2, style=dotted];
m5_15 -> m5_13  [key=0, style=bold, color=blue];
m5_21 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m5_21 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m5_21 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m5_21 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m5_21 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.SqlServer.Msmq.MsmqFetchedJob"];
m6_119 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_119 -> m6_120  [key=0, style=solid];
m6_119 -> m6_122  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m6_119 -> m6_124  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Server.ServerContext"];
m6_125 -> m6_71  [key=2, style=dotted];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_67  [key=2, style=dotted];
m6_121 -> n15  [key=2, style=dotted];
m6_121 -> m6_126  [key=0, style=solid];
m6_123 -> n15  [key=2, style=dotted];
m6_123 -> m6_126  [key=0, style=solid];
m6_124 -> m6_125  [key=0, style=solid];
m6_124 -> m6_127  [key=2, style=dotted];
m6_120 -> m6_121  [key=0, style=solid];
m6_120 -> m6_122  [key=0, style=solid];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_124  [key=0, style=solid];
m6_126 -> m6_119  [key=0, style=bold, color=blue];
m6_97 -> m6_100  [key=1, style=dashed, color=green, label=string];
m6_97 -> m6_98  [key=0, style=solid];
m6_97 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_100 -> m6_101  [key=0, style=solid, color=green];
m6_100 -> m6_102  [key=0, style=solid, color=green];
m6_98 -> m6_100  [key=0, style=solid, color=green];
m6_98 -> m6_99  [key=0, style=solid];
m6_101 -> m6_103  [key=0, style=solid, color=green];
m6_101 -> n15  [key=2, style=dotted, color=green];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_69  [key=2, style=dotted];
m6_102 -> m6_45  [key=2, style=dotted];
m6_99 -> n15  [key=2, style=dotted];
m6_99 -> m6_103  [key=0, style=solid];
m6_103 -> m6_97  [key=0, style=bold, color=blue];
m6_9 -> m6_15  [key=0, style=solid];
m6_9 -> m6_3  [key=3, color=darkorchid, style=bold, label="Parameter variable string contentFolder"];
m6_9 -> m6_4  [key=3, color=darkorchid, style=bold, label="Parameter variable string contentFolder"];
m6_9 -> m6_10  [key=0, style=solid];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [key=2, style=dotted];
m6_15 -> m6_13  [key=0, style=bold, color=blue];
m6_16 -> m6_9  [key=0, style=bold, color=blue];
m6_17 -> m6_18  [key=0, style=solid];
m6_49 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_49 -> m6_50  [key=0, style=solid];
m6_49 -> m6_52  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_49 -> m6_55  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Common.Job"];
m6_49 -> m6_57  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_49 -> m6_58  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_49 -> m6_60  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IDictionary<string, string>"];
m6_56 -> m6_57  [key=0, style=solid];
m6_56 -> m6_67  [key=2, style=dotted];
m6_56 -> m6_68  [key=2, style=dotted];
m6_56 -> m6_69  [key=2, style=dotted];
m6_56 -> m6_70  [key=2, style=dotted];
m6_56 -> m6_48  [key=2, style=dotted];
m6_56 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_56 -> m6_64  [key=1, style=dashed, color=darkseagreen4, label=jobId];
m6_63 -> m6_71  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_51 -> n15  [key=2, style=dotted];
m6_51 -> m6_65  [key=0, style=solid];
m6_53 -> n15  [key=2, style=dotted];
m6_53 -> m6_65  [key=0, style=solid];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_66  [key=2, style=dotted];
m6_54 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label=createJobSql];
m6_54 -> m6_55  [key=0, style=solid];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_64  [key=0, style=solid];
m6_61 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m6_61 -> m6_60  [key=0, style=solid];
m6_64 -> m6_65  [key=0, style=solid];
m6_58 -> m6_63  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m6_58 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=parameterArray];
m6_58 -> m6_59  [key=0, style=solid];
m6_62 -> m6_63  [key=0, style=solid];
m6_50 -> m6_51  [key=0, style=solid];
m6_50 -> m6_52  [key=0, style=solid];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_54  [key=0, style=solid];
m6_60 -> m6_61  [key=0, style=solid];
m6_60 -> m6_62  [key=0, style=solid];
m6_59 -> m6_61  [key=1, style=dashed, color=darkseagreen4, label=parameterIndex];
m6_59 -> m6_60  [key=0, style=solid];
m6_65 -> m6_49  [key=0, style=bold, color=blue];
m6_0 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label=SqlConnection];
m6_0 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerStorageOptions"];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_0  [key=0, style=bold, color=blue];
m6_6 -> m6_7  [key=0, style=solid];
m6_2 -> n15  [key=2, style=dotted];
m6_2 -> m6_7  [key=0, style=solid];
m6_2 -> m6_3  [key=0, style=solid];
m6_2 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m6_4 -> n15  [key=2, style=dotted];
m6_4 -> m6_7  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_8  [key=2, style=dotted];
m6_4 -> m6_9  [key=2, style=dotted];
m6_4 -> m6_10  [key=2, style=dotted];
m6_3 -> m6_5  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_8  [key=2, style=dotted];
m6_3 -> m6_9  [key=2, style=dotted];
m6_3 -> m6_10  [key=2, style=dotted];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_1 -> m6_6  [key=2, style=dotted];
m6_7 -> m6_0  [key=0, style=bold, color=blue];
m6_72 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_72 -> m6_73  [key=0, style=solid];
m6_76 -> m6_77  [key=0, style=solid];
m6_76 -> m6_69  [key=2, style=dotted];
m6_76 -> m6_45  [key=2, style=dotted];
m6_76 -> m6_79  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m6_76 -> m6_80  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m6_76 -> m6_86  [key=1, style=dashed, color=darkseagreen4, label=jobData];
m6_74 -> n15  [key=2, style=dotted];
m6_74 -> m6_87  [key=0, style=solid];
m6_75 -> m6_76  [key=0, style=solid];
m6_77 -> m6_78  [key=0, style=solid];
m6_77 -> m6_79  [key=0, style=solid];
m6_79 -> m6_69  [key=2, style=dotted];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_83  [key=1, style=dashed, color=darkseagreen4, label=invocationData];
m6_80 -> m6_81  [key=0, style=solid];
m6_86 -> m6_87  [key=0, style=solid];
m6_86 -> m6_89  [key=2, style=dotted];
m6_73 -> m6_74  [key=0, style=solid];
m6_73 -> m6_75  [key=0, style=solid];
m6_78 -> m6_87  [key=0, style=solid];
m6_83 -> m6_86  [key=0, style=solid];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_88  [key=2, style=dotted];
m6_81 -> m6_82  [key=0, style=solid];
m6_85 -> m6_86  [key=0, style=solid];
m6_82 -> m6_83  [key=0, style=solid];
m6_84 -> m6_85  [key=0, style=solid];
m6_87 -> m6_72  [key=0, style=bold, color=blue];
m6_13 -> m6_14  [key=0, style=solid];
m6_13 -> m6_11  [key=0, style=bold, color=blue];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_16  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_12  [key=2, style=dotted];
m6_22 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_25  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m6_22 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_21  [key=2, style=dotted];
m6_32 -> m6_43  [key=2, style=dotted];
m6_32 -> m6_44  [key=2, style=dotted];
m6_32 -> m6_45  [key=2, style=dotted];
m6_32 -> m6_38  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
m6_32 -> m6_39  [key=1, style=dashed, color=darkseagreen4, label=idAndQueue];
m6_35 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_46  [key=2, style=dotted];
m6_24 -> n15  [key=2, style=dotted];
m6_24 -> m6_40  [key=0, style=solid];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m6_31 -> m6_31  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m6_31 -> m6_42  [key=2, style=dotted];
m6_28 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label=fetchJobSqlTemplate];
m6_28 -> m6_29  [key=0, style=solid];
m6_29 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m6_29 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label=fetchConditions];
m6_30 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_34  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m6_30 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m6_33 -> m6_34  [key=0, style=solid];
m6_33 -> m6_37  [key=0, style=solid];
m6_38 -> m6_30  [key=0, style=solid];
m6_38 -> m6_39  [key=0, style=solid];
m6_39 -> m6_40  [key=0, style=solid];
m6_39 -> m6_47  [key=2, style=dotted];
m6_39 -> m6_48  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_37  [key=0, style=solid];
m6_36 -> m6_36  [key=1, style=dashed, color=darkseagreen4, label="System.Threading.CancellationToken"];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_42  [key=2, style=dotted];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_25  [key=0, style=solid];
m6_25 -> m6_26  [key=0, style=solid];
m6_25 -> m6_27  [key=0, style=solid];
m6_27 -> m6_28  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_37  [key=1, style=dashed, color=darkseagreen4, label=currentQueryIndex];
m6_26 -> m6_40  [key=0, style=solid];
m6_26 -> m6_41  [key=2, style=dotted];
m6_40 -> m6_22  [key=0, style=bold, color=blue];
m6_138 -> m6_139  [key=0, style=solid];
m6_141 -> m6_71  [key=2, style=dotted];
m6_141 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_141 -> m6_142  [key=0, style=solid];
m6_141 -> m6_43  [key=2, style=dotted];
m6_141 -> m6_68  [key=2, style=dotted];
m6_139 -> m6_141  [key=0, style=solid];
m6_139 -> m6_139  [key=1, style=dashed, color=darkseagreen4, label="System.TimeSpan"];
m6_139 -> m6_140  [key=0, style=solid];
m6_139 -> m6_143  [key=2, style=dotted];
m6_140 -> m6_142  [key=0, style=solid];
m6_140 -> m6_41  [key=2, style=dotted];
m6_142 -> m6_138  [key=0, style=bold, color=blue];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [key=2, style=dotted];
m6_11 -> m6_9  [key=0, style=bold, color=blue];
m6_11 -> m6_12  [key=0, style=solid];
m6_104 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_104 -> m6_105  [key=0, style=solid];
m6_104 -> m6_107  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_109 -> m6_71  [key=2, style=dotted];
m6_109 -> m6_109  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m6_109 -> m6_110  [key=0, style=solid];
m6_106 -> n15  [key=2, style=dotted];
m6_106 -> m6_110  [key=0, style=solid];
m6_108 -> n15  [key=2, style=dotted];
m6_108 -> m6_110  [key=0, style=solid];
m6_107 -> m6_109  [key=0, style=solid];
m6_107 -> m6_108  [key=0, style=solid];
m6_105 -> m6_106  [key=0, style=solid];
m6_105 -> m6_107  [key=0, style=solid];
m6_110 -> m6_104  [key=0, style=bold, color=blue];
m6_90 -> m6_91  [key=0, style=solid, color=green];
m6_90 -> m6_95  [key=1, style=dashed, color=green, label=string];
m6_90 -> m6_93  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_91 -> m6_92  [key=0, style=solid, color=green];
m6_91 -> m6_93  [key=0, style=solid, color=green];
m6_92 -> m6_96  [key=0, style=solid, color=green];
m6_92 -> n15  [key=2, style=dotted, color=green];
m6_93 -> m6_95  [key=0, style=solid, color=green];
m6_93 -> m6_94  [key=0, style=solid];
m6_95 -> m6_96  [key=0, style=solid, color=green];
m6_95 -> m6_71  [key=2, style=dotted, color=green];
m6_94 -> m6_96  [key=0, style=solid];
m6_94 -> n15  [key=2, style=dotted];
m6_96 -> m6_90  [key=0, style=bold, color=blue];
m6_111 -> m6_114  [key=1, style=dashed, color=green, label=double];
m6_111 -> m6_112  [key=0, style=solid];
m6_111 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_114 -> m6_115  [key=0, style=solid, color=green];
m6_114 -> m6_116  [key=0, style=solid, color=green];
m6_112 -> m6_114  [key=0, style=solid, color=green];
m6_112 -> m6_113  [key=0, style=solid];
m6_115 -> m6_117  [key=0, style=solid, color=green];
m6_115 -> m6_118  [key=2, style=dotted, color=green];
m6_116 -> m6_117  [key=0, style=solid];
m6_116 -> m6_69  [key=2, style=dotted];
m6_116 -> m6_45  [key=2, style=dotted];
m6_113 -> n15  [key=2, style=dotted];
m6_113 -> m6_117  [key=0, style=solid];
m6_117 -> m6_111  [key=0, style=bold, color=blue];
m6_18 -> m6_19  [key=0, style=solid];
m6_18 -> m6_20  [key=2, style=dotted];
m6_18 -> m6_21  [key=2, style=dotted];
m6_19 -> m6_17  [key=0, style=bold, color=blue];
m6_128 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_128 -> m6_129  [key=0, style=solid];
m6_131 -> m6_71  [key=2, style=dotted];
m6_131 -> m6_132  [key=0, style=solid];
m6_130 -> n15  [key=2, style=dotted];
m6_130 -> m6_132  [key=0, style=solid];
m6_129 -> m6_131  [key=0, style=solid];
m6_129 -> m6_130  [key=0, style=solid];
m6_132 -> m6_128  [key=0, style=bold, color=blue];
m6_133 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label=string];
m6_133 -> m6_134  [key=0, style=solid];
m6_136 -> m6_71  [key=2, style=dotted];
m6_136 -> m6_137  [key=0, style=solid];
m6_135 -> n15  [key=2, style=dotted];
m6_135 -> m6_137  [key=0, style=solid];
m6_134 -> m6_136  [key=0, style=solid];
m6_134 -> m6_135  [key=0, style=solid];
m6_137 -> m6_133  [key=0, style=bold, color=blue];
m6_144 -> m6_95  [key=1, style=dashed, color=green, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_5  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_6  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_10  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_14  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_18  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_35  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_56  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_76  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_102  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_109  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_116  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_125  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_131  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_136  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m6_144 -> m6_141  [key=1, style=dashed, color=darkseagreen4, label="HangFire.SqlServer.SqlServerConnection"];
m7_55 -> m7_56  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_39  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_22  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_40  [key=2, style=dotted];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_41  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_42  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_43  [key=2, style=dotted];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_26  [key=2, style=dotted];
m7_63 -> m7_55  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m7_1 -> m7_2  [key=0, style=solid, color=red];
m7_1 -> m7_5  [key=2, style=dotted];
m7_2 -> m7_3  [key=0, style=solid, color=red];
m7_2 -> m7_6  [key=2, style=dotted, color=red];
m7_2 -> m7_7  [key=2, style=dotted, color=red];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_8  [key=2, style=dotted];
m7_4 -> m7_0  [key=0, style=bold, color=blue];
m7_76 -> m7_77  [key=0, style=solid];
m7_77 -> m7_78  [key=0, style=solid];
m7_77 -> m7_39  [key=2, style=dotted];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_22  [key=2, style=dotted];
m7_79 -> m7_80  [key=0, style=solid];
m7_79 -> m7_40  [key=2, style=dotted];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_41  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_81 -> m7_42  [key=2, style=dotted];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_43  [key=2, style=dotted];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_26  [key=2, style=dotted];
m7_84 -> m7_76  [key=0, style=bold, color=blue];
m7_9 -> m7_10  [key=0, style=solid];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_13  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_12 -> m7_9  [key=0, style=bold, color=blue];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_31  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m7_22 -> m7_45  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m7_22 -> m7_56  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m7_22 -> m7_65  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m7_22 -> m7_77  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m7_22 -> m7_86  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_25  [key=2, style=dotted];
m7_24 -> m7_22  [key=0, style=bold, color=blue];
m7_85 -> m7_86  [key=0, style=solid];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_39  [key=2, style=dotted];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_22  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_40  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_41  [key=2, style=dotted];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_42  [key=2, style=dotted];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_43  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_26  [key=2, style=dotted];
m7_93 -> m7_85  [key=0, style=bold, color=blue];
m7_64 -> m7_65  [key=0, style=solid];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_39  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_22  [key=2, style=dotted];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_40  [key=2, style=dotted];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_41  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_41  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_42  [key=2, style=dotted];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_43  [key=2, style=dotted];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_42  [key=2, style=dotted];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_43  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_26  [key=2, style=dotted];
m7_75 -> m7_64  [key=0, style=bold, color=blue];
m7_14 -> m7_15  [key=0, style=solid];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_17  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_0  [key=2, style=dotted];
m7_17 -> m7_14  [key=0, style=bold, color=blue];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_29  [key=2, style=dotted];
m7_28 -> m7_26  [key=0, style=bold, color=blue];
m7_44 -> m7_45  [key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_39  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_22  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_40  [key=2, style=dotted];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_41  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_42  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_43  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_54  [key=2, style=dotted];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_26  [key=2, style=dotted];
m7_53 -> m7_44  [key=0, style=bold, color=blue];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_39  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_22  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_40  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_41  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_42  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_43  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_26  [key=2, style=dotted];
m7_38 -> m7_30  [key=0, style=bold, color=blue];
m7_18 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_19 -> m7_21  [key=2, style=dotted];
m7_20 -> m7_18  [key=0, style=bold, color=blue];
m7_94 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_52  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_57  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_62  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_66  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_78  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m7_94 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobFetcherFeature"];
m8_11 -> m8_14  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToString"];
m8_11 -> m8_12  [key=0, style=solid];
m8_12 -> m8_14  [key=2, style=dotted];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_9  [key=0, style=bold, color=blue];
m8_13 -> m8_11  [key=0, style=bold, color=blue];
m8_4 -> m8_0  [key=0, style=bold, color=blue];
m8_25 -> m8_26  [key=0, style=solid];
m8_25 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label=owinContext];
m8_25 -> m8_33  [key=2, style=dotted];
m8_29 -> m8_30  [key=0, style=solid];
m8_61 -> m8_62  [key=0, style=solid];
m8_62 -> m8_63  [key=0, style=solid];
m8_62 -> m8_38  [key=2, style=dotted];
m8_63 -> m8_64  [key=0, style=solid];
m8_63 -> m8_22  [key=2, style=dotted];
m8_64 -> m8_65  [key=0, style=solid];
m8_64 -> m8_39  [key=2, style=dotted];
m8_65 -> m8_66  [key=0, style=solid];
m8_65 -> m8_40  [key=2, style=dotted];
m8_66 -> m8_67  [key=0, style=solid];
m8_66 -> m8_41  [key=2, style=dotted];
m8_67 -> m8_68  [key=0, style=solid];
m8_67 -> m8_70  [key=2, style=dotted];
m8_68 -> m8_69  [key=0, style=solid];
m8_68 -> m8_26  [key=2, style=dotted];
m8_69 -> m8_61  [key=0, style=bold, color=blue];
m8_21 -> m8_22  [key=0, style=solid, color=green];
m8_48 -> m8_49  [key=0, style=solid];
m8_48 -> m8_51  [key=2, style=dotted];
m8_56 -> m8_57  [key=0, style=solid];
m8_56 -> m8_40  [key=2, style=dotted];
m8_51 -> m8_54  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_10 -> m8_11  [key=0, style=solid];
m8_10 -> m8_13  [key=2, style=dotted];
m8_10 -> m8_8  [key=0, style=bold, color=blue];
m8_81 -> m8_82  [key=0, style=solid];
m8_82 -> m8_83  [key=0, style=solid];
m8_82 -> m8_38  [key=2, style=dotted];
m8_83 -> m8_84  [key=0, style=solid];
m8_83 -> m8_22  [key=2, style=dotted];
m8_84 -> m8_85  [key=0, style=solid];
m8_84 -> m8_39  [key=2, style=dotted];
m8_85 -> m8_86  [key=0, style=solid];
m8_85 -> m8_40  [key=2, style=dotted];
m8_86 -> m8_87  [key=0, style=solid];
m8_86 -> m8_41  [key=2, style=dotted];
m8_87 -> m8_88  [key=0, style=solid];
m8_87 -> m8_26  [key=2, style=dotted];
m8_88 -> m8_81  [key=0, style=bold, color=blue];
m8_34 -> m8_34  [key=3, color=darkorchid, style=bold, label="Field variable System.Lazy<Hangfire.Storage.Monitoring.StatisticsDto> _statisticsLazy"];
m8_34 -> m8_35  [key=0, style=solid];
m8_34 -> m8_40  [key=2, style=dotted];
m8_35 -> m8_36  [key=0, style=solid];
m8_35 -> m8_41  [key=2, style=dotted];
m8_42 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m8_42 -> m8_43  [key=0, style=solid];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_48  [key=2, style=dotted];
m8_45 -> m8_39  [key=2, style=dotted];
m8_43 -> m8_49  [key=3, color=darkorchid, style=bold, label="method methodReturn long GetPrivateQueueCount"];
m8_43 -> m8_45  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_47  [key=2, style=dotted];
m8_43 -> m8_38  [key=2, style=dotted];
m8_44 -> m8_46  [key=0, style=solid];
m8_44 -> m8_45  [key=0, style=solid];
m8_44 -> m8_22  [key=2, style=dotted];
m8_46 -> m8_42  [key=0, style=bold, color=blue];
m8_46 -> m8_47  [key=0, style=solid];
m8_46 -> m8_40  [key=2, style=dotted];
m8_52 -> m8_53  [key=0, style=solid];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_38  [key=2, style=dotted];
m8_53 -> m8_57  [key=2, style=dotted];
m8_53 -> m8_55  [key=2, style=dotted];
m8_53 -> m8_56  [key=2, style=dotted];
m8_53 -> m8_42  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_22  [key=2, style=dotted];
m8_54 -> m8_49  [key=0, style=bold, color=blue];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_39  [key=2, style=dotted];
m8_57 -> m8_58  [key=0, style=solid];
m8_57 -> m8_41  [key=2, style=dotted];
m8_57 -> m8_70  [key=0, style=solid, color=green];
m8_58 -> m8_59  [key=0, style=solid];
m8_58 -> m8_51  [key=2, style=dotted];
m8_59 -> m8_60  [key=0, style=solid];
m8_59 -> m8_26  [key=2, style=dotted];
m8_60 -> m8_52  [key=0, style=bold, color=blue];
m8_8 -> m8_9  [key=0, style=solid];
m8_0 -> m8_1  [key=0, style=solid];
m8_0 -> m8_16  [key=3, color=darkorchid, style=bold, label="Parameter variable Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext"];
m8_1 -> m8_2  [key=0, style=solid, color=red];
m8_1 -> m8_5  [key=2, style=dotted];
m8_1 -> m8_4  [key=2, style=dotted];
m8_2 -> m8_3  [key=0, style=solid, color=red];
m8_2 -> m8_6  [key=2, style=dotted, color=red];
m8_2 -> m8_7  [key=2, style=dotted, color=red];
m8_2 -> m8_5  [key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_8  [key=2, style=dotted];
m8_3 -> m8_0  [key=0, style=bold, color=blue];
m8_47 -> m8_48  [key=0, style=solid];
m8_47 -> m8_41  [key=2, style=dotted];
m8_36 -> m8_37  [key=0, style=solid, color=green];
m8_36 -> m8_26  [key=2, style=dotted];
m8_37 -> m8_38  [key=0, style=solid, color=green];
m8_37 -> m8_40  [key=2, style=dotted, color=green];
m8_37 -> m8_30  [key=0, style=bold, color=blue];
m8_38 -> m8_39  [key=0, style=solid];
m8_38 -> m8_41  [key=2, style=dotted];
m8_39 -> m8_36  [key=0, style=bold, color=blue];
m8_18 -> m8_19  [key=0, style=solid, color=green];
m8_18 -> m8_18  [key=3, color=darkorchid, style=bold, label="Field variable int MQ_ERROR_ILLEGAL_PROPERTY_VT"];
m8_19 -> m8_20  [key=0, style=solid, color=green];
m8_19 -> m8_21  [key=2, style=dotted];
m8_19 -> m8_19  [key=3, color=green, style=bold, label="Field variable int MQ_ERROR_QUEUE_NOT_ACTIVE"];
m8_20 -> m8_18  [key=0, style=bold, color=blue];
m8_20 -> m8_20  [key=3, color=darkorchid, style=bold, label="Field variable int MQ_ERROR_SERVICE_NOT_AVAILABLE"];
m8_20 -> m8_21  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid, color=green];
m8_22 -> m8_31  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_43  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_53  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_62  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_72  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_82  [key=3, color=darkorchid, style=bold, label="Parameter variable TechTalk.SpecFlow.ScenarioInfo scenarioInfo"];
m8_22 -> m8_22  [key=3, color=green, style=bold, label="Field variable string QueueRegex"];
m8_23 -> m8_24  [key=0, style=solid];
m8_23 -> m8_25  [key=2, style=dotted];
m8_23 -> m8_15  [key=0, style=bold, color=blue];
m8_24 -> m8_22  [key=0, style=bold, color=blue];
m8_24 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RequestDispatcherContext"];
m8_24 -> m8_49  [key=3, color=darkorchid, style=bold, label="method methodReturn long GetCount"];
m8_24 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RequestDispatcherContext"];
m8_24 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RequestDispatcherContext"];
m8_24 -> m8_25  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid, color=green];
m8_30 -> m8_34  [key=2, style=dotted];
m8_31 -> m8_32  [key=0, style=solid, color=green];
m8_31 -> m8_38  [key=2, style=dotted];
m8_31 -> m8_35  [key=2, style=dotted, color=green];
m8_31 -> m8_49  [key=3, color=green, style=bold, label="method methodReturn long GetPrivateQueueCount"];
m8_32 -> m8_33  [key=0, style=solid];
m8_32 -> m8_22  [key=2, style=dotted];
m8_32 -> m8_24  [key=0, style=bold, color=blue];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_39  [key=2, style=dotted];
m8_14 -> m8_15  [key=0, style=solid];
m8_14 -> m8_62  [key=0, style=solid, color=green];
m8_14 -> m8_14  [key=3, color=darkorchid, style=bold, label="method methodReturn string TransformText"];
m8_14 -> m8_12  [key=3, color=darkorchid, style=bold, label="Parameter variable string body"];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_17  [key=0, style=solid];
m8_15 -> m8_19  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.RazorPage"];
m8_15 -> m8_22  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.RazorPage"];
m8_15 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_15 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_15 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_16 -> m8_17  [key=0, style=solid, color=green];
m8_16 -> m8_0  [key=2, style=dotted];
m8_16 -> m8_16  [key=3, color=darkorchid, style=bold, label="Field variable int MQ_ERROR_ACCESS_DENIED"];
m8_17 -> m8_14  [key=0, style=bold, color=blue];
m8_17 -> m8_17  [key=3, color=green, style=bold, label="Field variable int MQ_ERROR_ILLEGAL_FORMATNAME"];
m8_17 -> m8_18  [key=0, style=solid, color=green];
m8_49 -> m8_50  [key=0, style=solid];
m8_49 -> m8_26  [key=2, style=dotted];
m8_49 -> m8_31  [key=3, color=green, style=bold, label="Parameter variable string queue"];
m8_49 -> m8_30  [key=3, color=darkorchid, style=bold, label="Parameter variable string queueType"];
m8_49 -> m8_52  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_49 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label=object];
m8_49 -> m8_29  [key=3, color=darkorchid, style=bold, label="Parameter variable string computerName"];
m8_49 -> m8_43  [key=3, color=darkorchid, style=bold, label="Parameter variable string queue"];
m8_50 -> m8_42  [key=0, style=bold, color=blue];
m8_50 -> m8_51  [key=0, style=solid];
m8_50 -> m8_52  [key=0, style=solid];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_29  [key=2, style=dotted];
m8_28 -> m8_26  [key=0, style=bold, color=blue];
m8_28 -> m8_29  [key=0, style=solid];
m8_71 -> m8_72  [key=0, style=solid];
m8_72 -> m8_73  [key=0, style=solid];
m8_72 -> m8_38  [key=2, style=dotted];
m8_73 -> m8_74  [key=0, style=solid];
m8_73 -> m8_22  [key=2, style=dotted];
m8_73 -> m8_17  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_19  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_31  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_37  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_62  [key=1, style=dashed, color=green, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_1  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_2  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_9  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_16  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_18  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_20  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_21  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_27  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_28  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_29  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_30  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_45  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_53  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_59  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_64  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_65  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_66  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_73 -> m8_67  [key=1, style=dashed, color=darkseagreen4, label="Hangfire.Dashboard.RazorPage"];
m8_74 -> m8_75  [key=0, style=solid];
m8_74 -> m8_39  [key=2, style=dotted];
m8_75 -> m8_76  [key=0, style=solid];
m8_75 -> m8_51  [key=2, style=dotted];
m8_76 -> m8_77  [key=0, style=solid];
m8_76 -> m8_40  [key=2, style=dotted];
m8_77 -> m8_78  [key=0, style=solid];
m8_77 -> m8_41  [key=2, style=dotted];
m8_78 -> m8_79  [key=0, style=solid];
m8_78 -> m8_70  [key=2, style=dotted];
m8_79 -> m8_80  [key=0, style=solid];
m8_79 -> m8_26  [key=2, style=dotted];
m8_80 -> m8_71  [key=0, style=bold, color=blue];
m8_89 -> m8_32  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_36  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_44  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_49  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_54  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_59  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_63  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_68  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_73  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_79  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_83  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m8_89 -> m8_87  [key=1, style=dashed, color=darkseagreen4, label="HangFire.Tests.Server.JobManagerFeature"];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_6  [key=2, style=dotted];
m9_1 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label=storage];
m9_2 -> m9_3  [key=0, style=solid];
m9_2 -> m9_7  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_8  [key=2, style=dotted];
m9_5 -> m9_0  [key=0, style=bold, color=blue];
m9_9 -> m9_10  [key=0, style=solid];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_12  [key=2, style=dotted];
m9_11 -> m9_9  [key=0, style=bold, color=blue];
}
