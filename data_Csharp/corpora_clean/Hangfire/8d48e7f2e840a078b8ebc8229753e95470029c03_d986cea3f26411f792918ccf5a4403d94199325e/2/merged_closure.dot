digraph  {
n216 [label="HangFire.Tests.ClientFiltersFeature", span=""];
n0 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
n1 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
n2 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client filters'', ''\r\n  As a user, I expect that all defined client filters are executing\r\n  using th'' +\r\n                    ''e following rules, when I create a job.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-35"];
n5 [cluster="Unk.GetTestRunner", label="Entry Unk.GetTestRunner", span=""];
n3 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", label="testRunner.OnFeatureStart(featureInfo)", span="36-36"];
n6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
n7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
n4 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
n8 [cluster="Unk.OnFeatureStart", label="Entry Unk.OnFeatureStart", span=""];
n9 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", span="40-40"];
n10 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", label="testRunner.OnFeatureEnd()", span="42-42"];
n11 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", label="testRunner = null", span="43-43"];
n13 [cluster="Unk.OnFeatureEnd", label="Entry Unk.OnFeatureEnd", span=""];
n12 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", span="40-40"];
n14 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", label="Entry HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47"];
n15 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client filters''))", span="49-50"];
n16 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", label="HangFire.Tests.ClientFiltersFeature.FeatureSetup(null)", span="52-52"];
n17 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", label="Exit HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="47-47"];
n18 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", span="57-57"];
n19 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", label="testRunner.OnScenarioEnd()", span="59-59"];
n20 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", span="57-57"];
n21 [cluster="Unk.OnScenarioEnd", label="Entry Unk.OnScenarioEnd", span=""];
n22 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
n23 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", label="testRunner.OnScenarioStart(scenarioInfo)", span="64-64"];
n24 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="62-62"];
n25 [cluster="Unk.OnScenarioStart", label="Entry Unk.OnScenarioStart", span=""];
n26 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67"];
n27 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", label="testRunner.CollectScenarioErrors()", span="69-69"];
n28 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioCleanup()", span="67-67"];
n29 [cluster="Unk.CollectScenarioErrors", label="Entry Unk.CollectScenarioErrors", span=""];
n30 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72"];
n31 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="76-76"];
n32 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="72-72"];
n33 [cluster="Unk.Given", label="Entry Unk.Given", span=""];
n34 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84"];
n35 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filters should be executed when I create a job'', ((string[])(null)))", span="86-86"];
n36 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="this.ScenarioSetup(scenarioInfo)", span="88-88"];
n47 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
n37 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="this.FeatureBackground()", span="90-90"];
n38 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="testRunner.Given(''the client filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="92-92"];
n39 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="94-94"];
n40 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="96-97"];
n48 [cluster="Unk.When", label="Entry Unk.When", span=""];
n41 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="table1.AddRow(new string[] {\r\n                        ''test::OnCreating''})", span="98-99"];
n49 [cluster="TechTalk.SpecFlow.Table.cstr", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
n42 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="table1.AddRow(new string[] {\r\n                        ''test::OnCreated''})", span="100-101"];
n43 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table1, ''Then '')", span="103-103"];
n50 [cluster="Unk.AddRow", label="Entry Unk.AddRow", span=""];
n44 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="testRunner.And(''the storage should contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="105-105"];
n51 [cluster="Unk.Then", label="Entry Unk.Then", span=""];
n45 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="this.ScenarioCleanup()", span="107-107"];
n52 [cluster="Unk.And", label="Entry Unk.And", span=""];
n46 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFiltersShouldBeExecutedWhenICreateAJob()", span="84-84"];
n53 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="Entry HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114"];
n54 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple client filters should be executed depending on their order'', ((string[])(null)))", span="116-116"];
n55 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.ScenarioSetup(scenarioInfo)", span="118-118"];
n56 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.FeatureBackground()", span="120-120"];
n57 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="122-122"];
n58 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.And(''the client filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="124-124"];
n59 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="126-126"];
n60 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="128-129"];
n61 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="table2.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="130-131"];
n62 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="table2.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="132-133"];
n63 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="table2.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="134-135"];
n64 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="table2.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="136-137"];
n65 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table2, ''Then '')", span="139-139"];
n66 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.ScenarioCleanup()", span="141-141"];
n67 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", label="Exit HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersShouldBeExecutedDependingOnTheirOrder()", span="114-114"];
n68 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="Entry HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148"];
n69 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should be able to set a job parameter in the client filter'', ((string[])(null)))", span="150-150"];
n70 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="this.ScenarioSetup(scenarioInfo)", span="152-152"];
n71 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="this.FeatureBackground()", span="154-154"];
n72 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="156-158"];
n73 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="table3.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="159-161"];
n74 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="table3.AddRow(new string[] {\r\n                        ''UICulture'',\r\n                        ''ru-RU''})", span="162-164"];
n75 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table3, ''Given '')", span="166-167"];
n76 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="169-169"];
n77 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="testRunner.Then(''it should have all of the above parameters encoded as JSON string'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="171-171"];
n78 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="this.ScenarioCleanup()", span="173-173"];
n79 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", label="Exit HangFire.Tests.ClientFiltersFeature.IShouldBeAbleToSetAJobParameterInTheClientFilter()", span="148-148"];
n80 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180"];
n81 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name, an exception should be thrown'', ((string[])(null)))", span="182-182"];
n82 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="this.ScenarioSetup(scenarioInfo)", span="184-184"];
n83 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="this.FeatureBackground()", span="186-186"];
n84 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="188-190"];
n85 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="table4.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-US''})", span="191-193"];
n86 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table4, ''Given '')", span="195-196"];
n87 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
n88 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
n89 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="this.ScenarioCleanup()", span="202-202"];
n90 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameAnExceptionShouldBeThrown()", span="180-180"];
n91 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210"];
n92 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter should be able to read the parameters that were set by one of the p'' +\r\n                    ''revious filters'', ((string[])(null)))", span="212-213"];
n93 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="this.ScenarioSetup(scenarioInfo)", span="215-215"];
n94 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="this.FeatureBackground()", span="217-217"];
n95 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="219-221"];
n96 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="table5.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-GB''})", span="222-224"];
n97 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table5, ''Given '')", span="226-227"];
n98 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="testRunner.And(''the client filter \'second\' that reads all of the above parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="229-229"];
n99 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="231-231"];
n100 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="testRunner.Then(''the \'second\' client filter got the actual values of the parameters'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="233-233"];
n101 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="this.ScenarioCleanup()", span="235-235"];
n102 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterShouldBeAbleToReadTheParametersThatWereSetByOneOfThePreviousFilters()", span="210-210"];
n103 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="Entry HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243"];
n104 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When I specify an empty or null parameter name in the GetParameter method call, a'' +\r\n                    ''n exception should be thrown'', ((string[])(null)))", span="245-246"];
n105 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="this.ScenarioSetup(scenarioInfo)", span="248-248"];
n106 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="this.FeatureBackground()", span="250-250"];
n107 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="252-254"];
n108 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="table6.AddRow(new string[] {\r\n                        '''',\r\n                        ''en-GB''})", span="255-257"];
n109 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="testRunner.Given(''the client filter \'first\' that gets the following parameters in the OnCreating me'' +\r\n                    ''thod:'', ((string)(null)), table6, ''Given '')", span="259-260"];
n110 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="262-262"];
n111 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="264-264"];
n112 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="this.ScenarioCleanup()", span="266-266"];
n113 [cluster="HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", label="Exit HangFire.Tests.ClientFiltersFeature.WhenISpecifyAnEmptyOrNullParameterNameInTheGetParameterMethodCallAnExceptionShouldBeThrown()", span="243-243"];
n114 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="Entry HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273"];
n115 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''I should not be able to set parameters after the job was created'', ((string[])(null)))", span="275-275"];
n116 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="this.ScenarioSetup(scenarioInfo)", span="277-277"];
n117 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="this.FeatureBackground()", span="279-279"];
n118 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="281-283"];
n119 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="table7.AddRow(new string[] {\r\n                        ''Culture'',\r\n                        ''en-US''})", span="284-286"];
n120 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="testRunner.Given(''the client filter \'first\' that sets the following parameters in the OnCreated met'' +\r\n                    ''hod:'', ((string)(null)), table7, ''Given '')", span="288-289"];
n121 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="291-291"];
n122 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="testRunner.Then(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="293-293"];
n123 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="this.ScenarioCleanup()", span="295-295"];
n124 [cluster="HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", label="Exit HangFire.Tests.ClientFiltersFeature.IShouldNotBeAbleToSetParametersAfterTheJobWasCreated()", span="273-273"];
n125 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="Entry HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302"];
n126 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When client filter cancels the creation of the job, it should not be created'', ((string[])(null)))", span="304-304"];
n127 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="this.ScenarioSetup(scenarioInfo)", span="306-306"];
n128 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="this.FeatureBackground()", span="308-308"];
n129 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="310-310"];
n130 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.And(''the client filter \'second\' that cancels the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="312-312"];
n131 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.And(''the client filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="314-314"];
n132 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="316-316"];
n133 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.Then(''the storage should not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="318-318"];
n134 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="320-321"];
n135 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="table8.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="322-323"];
n136 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="table8.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="324-325"];
n137 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="table8.AddRow(new string[] {\r\n                        ''first::OnCreated (with the canceled flag set)''})", span="326-327"];
n138 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="testRunner.And(''only the following client filter methods should be executed:'', ((string)(null)), table8, ''And '')", span="329-329"];
n139 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="this.ScenarioCleanup()", span="331-331"];
n140 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", label="Exit HangFire.Tests.ClientFiltersFeature.WhenClientFilterCancelsTheCreationOfTheJobItShouldNotBeCreated()", span="302-302"];
n141 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338"];
n142 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter\'s OnCreated could be skipped if there was an exception'', ((string[])(null)))", span="340-340"];
n143 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="this.ScenarioSetup(scenarioInfo)", span="342-342"];
n144 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="this.FeatureBackground()", span="344-344"];
n145 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="346-346"];
n146 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="testRunner.And(''the client filter \'second\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="348-348"];
n147 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="350-350"];
n148 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="352-353"];
n149 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="table9.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="354-355"];
n150 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="table9.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="356-357"];
n151 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="table9.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="358-359"];
n152 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="testRunner.Then(''only the following client filter methods should be executed:'', ((string)(null)), table9, ''Then '')", span="361-361"];
n153 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="this.ScenarioCleanup()", span="363-363"];
n154 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="338-338"];
n155 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370"];
n156 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client filter handles an exception, it should not be thrown outside'', ((string[])(null)))", span="372-372"];
n157 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.ScenarioSetup(scenarioInfo)", span="374-374"];
n158 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.FeatureBackground()", span="376-376"];
n159 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="378-378"];
n160 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''the client filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="380-380"];
n161 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''the client filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="382-382"];
n162 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="384-384"];
n163 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="386-387"];
n164 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="table10.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="388-389"];
n165 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="table10.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="390-391"];
n166 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="table10.AddRow(new string[] {\r\n                        ''third::OnCreating''})", span="392-393"];
n167 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="table10.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="394-395"];
n168 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="table10.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="396-397"];
n169 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.Then(''the client filter methods should be executed in the following order:'', ((string)(null)), table10, ''Then '')", span="399-399"];
n170 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="401-401"];
n171 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.ScenarioCleanup()", span="403-403"];
n172 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="370-370"];
n173 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="Entry HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411"];
n174 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client exception filters should be executed when there was an exception while cre'' +\r\n                    ''ating a job'', ((string[])(null)))", span="413-414"];
n175 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="this.ScenarioSetup(scenarioInfo)", span="416-416"];
n176 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="this.FeatureBackground()", span="418-418"];
n177 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="testRunner.Given(''the exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="420-420"];
n180 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="testRunner.Then(''the client exception filter should be executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="426-426"];
n181 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="428-428"];
n182 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="this.ScenarioCleanup()", span="430-430"];
n183 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", label="Exit HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersShouldBeExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="411-411"];
n184 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="Entry HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437"];
n186 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.ScenarioSetup(scenarioInfo)", span="441-441"];
n187 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.FeatureBackground()", span="443-443"];
n188 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="445-445"];
n189 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.And(''the exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="447-447"];
n192 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="453-454"];
n194 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="table11.AddRow(new string[] {\r\n                        ''second''})", span="457-458"];
n195 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.Then(''the client exception filters should be executed in the following order:'', ((string)(null)), table11, ''Then '')", span="460-460"];
n196 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="testRunner.And(''the CreateJobFailedException should be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="462-462"];
n197 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="this.ScenarioCleanup()", span="464-464"];
n198 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", label="Exit HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersShouldBeExecutedDependingOnTheirOrder()", span="437-437"];
n199 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="Entry HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472"];
n200 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When a client exception filter handles an exception, it should not be thrown outs'' +\r\n                    ''ide'', ((string[])(null)))", span="474-475"];
n201 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.ScenarioSetup(scenarioInfo)", span="477-477"];
n202 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.FeatureBackground()", span="479-479"];
n203 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="481-481"];
n204 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''the exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="483-483"];
n205 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''the exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="485-485"];
n208 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="491-492"];
n210 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="table12.AddRow(new string[] {\r\n                        ''second''})", span="495-496"];
n212 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.Then(''the following client exception filters should be executed:'', ((string)(null)), table12, ''Then '')", span="500-500"];
n213 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="testRunner.And(''an exception should not be thrown by the client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="502-502"];
n214 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="this.ScenarioCleanup()", span="504-504"];
n215 [cluster="HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", label="Exit HangFire.Tests.ClientFiltersFeature.WhenAClientExceptionFilterHandlesAnExceptionItShouldNotBeThrownOutside()", span="472-472"];
m0_0 [cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="ClientJobDescriptor.cs", label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m0_2 [cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="ClientJobDescriptor.cs", label="Exit Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m0_3 [cluster="System.Activator.CreateInstance(System.Type)", file="ClientJobDescriptor.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m1_0 [cluster="HangFire.Tests.CustomJob.Perform()", file="CustomJob.cs", label="Entry HangFire.Tests.CustomJob.Perform()", span="10-10"];
m1_1 [cluster="HangFire.Tests.CustomJob.Perform()", color=green, community=0, file="CustomJob.cs", label="LastArticleId = ArticleId", prediction=0, span="12-12"];
m1_2 [cluster="HangFire.Tests.CustomJob.Perform()", color=green, community=0, file="CustomJob.cs", label="LastAuthor = Author", prediction=1, span="13-13"];
m1_3 [cluster="HangFire.Tests.CustomJob.Perform()", file="CustomJob.cs", label="Exit HangFire.Tests.CustomJob.Perform()", span="10-10"];
m1_4 [file="CustomJob.cs", label="HangFire.Tests.CustomJob", span=""];
m5_16 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnqueuedJobsPage.generated.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m5_18 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.Validate()", span="207-207"];
m5_78 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="!Method.DeclaringType.IsAssignableFrom(Type)", span="214-214"];
m5_79 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="216-219"];
m5_80 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="!Method.IsPublic", span="222-222"];
m5_82 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="typeof (Task).IsAssignableFrom(Method.ReturnType)", span="227-227"];
m5_83 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="throw new NotSupportedException(''Async methods are not supported. Please make them synchronous before using them in background.'');", span="229-229"];
m5_84 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="var parameters = Method.GetParameters()", span="232-232"];
m5_87 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label=parameters, span="239-239"];
m5_86 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentException(''Argument count must be equal to method parameter count.'');", span="236-236"];
m5_88 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="parameter.IsOut", span="245-245"];
m5_90 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="parameter.ParameterType.IsByRef", span="251-251"];
m5_89 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="247-248"];
m5_92 [cluster="Hangfire.Common.Job.Validate()", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.Validate()", span="207-207"];
m5_95 [cluster="string.Format(string, object, object)", file="EnqueuedJobsPage.generated.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m5_165 [cluster="System.DateTime.ToString(string, System.IFormatProvider)", file="EnqueuedJobsPage.generated.cs", label="Entry System.DateTime.ToString(string, System.IFormatProvider)", span="0-0"];
m5_33 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="281-281"];
m5_107 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="var parameters = Method.GetParameters()", span="285-285"];
m5_115 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="value = cancellationToken", span="297-297"];
m5_108 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="var result = new List<object>(Arguments.Length)", span="286-286"];
m5_110 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="i < parameters.Length", span="288-288"];
m5_111 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="var parameter = parameters[i]", span="290-290"];
m5_109 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="var i = 0", span="288-288"];
m5_122 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="result.Add(value)", span="323-323"];
m5_124 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="return result.ToArray();", span="326-326"];
m5_112 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="var argument = Arguments[i]", span="291-291"];
m5_123 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="i++", span="288-288"];
m5_114 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="typeof (IJobCancellationToken).IsAssignableFrom(parameter.ParameterType)", span="295-295"];
m5_116 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="value = argument != null\r\n								? JobHelper.FromJson(argument, parameter.ParameterType)\r\n								: null", span="303-305"];
m5_118 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="parameter.ParameterType == typeof (object)", span="309-309"];
m5_120 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="317-317"];
m5_113 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="object value", span="293-293"];
m5_119 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="value = argument", span="313-313"];
m5_121 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="value = converter.ConvertFromInvariantString(argument)", span="318-318"];
m5_117 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label=Exception, span="307-307"];
m5_125 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label=Exception, span="328-328"];
m5_126 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during arguments deserialization.'',\r\n                    ex);", span="330-332"];
m5_127 [cluster="Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.DeserializeArguments(Hangfire.IJobCancellationToken)", span="281-281"];
m5_47 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m5_93 [cluster="System.Type.IsAssignableFrom(System.Type)", file="EnqueuedJobsPage.generated.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m5_173 [cluster="Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25"];
m5_66 [cluster="object.GetType()", file="EnqueuedJobsPage.generated.cs", label="Entry object.GetType()", span="0-0"];
m5_105 [cluster="string.Format(string, object)", file="EnqueuedJobsPage.generated.cs", label="Entry string.Format(string, object)", span="0-0"];
m5_35 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="121-121"];
m5_37 [cluster="Hangfire.Common.Job.GetTypeFilterAttributes(bool)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.GetTypeFilterAttributes(bool)", span="121-121"];
m5_32 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="259-259"];
m5_97 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs", label="var instance = activator.ActivateJob(Type)", span="263-263"];
m5_98 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs", label="instance == null", span="265-265"];
m5_99 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs", label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="267-268"];
m5_101 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs", label=Exception, span="273-273"];
m5_102 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during job activation.'',\r\n                    ex);", span="275-277"];
m5_103 [cluster="Hangfire.Common.Job.Activate(Hangfire.JobActivator)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.Activate(Hangfire.JobActivator)", span="259-259"];
m5_2 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="69-69"];
m5_3 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="type == null", span="71-71"];
m5_5 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="method == null", span="72-72"];
m5_7 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="arguments == null", span="73-73"];
m5_9 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="method.ContainsGenericParameters", span="75-75"];
m5_11 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="Type = type", span="80-80"];
m5_12 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="Method = method", span="81-81"];
m5_13 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="Arguments = arguments", span="82-82"];
m5_4 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''type'');", span="71-71"];
m5_6 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''method'');", span="72-72"];
m5_8 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''arguments'');", span="73-73"];
m5_10 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentException(''Job method can not contain unassigned generic type parameters.'', ''method'');", span="77-77"];
m5_14 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="Validate()", span="84-84"];
m5_15 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="69-69"];
m5_46 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="EnqueuedJobsPage.generated.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m5_94 [cluster="System.ArgumentException.ArgumentException(string)", file="EnqueuedJobsPage.generated.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m5_19 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="95-95"];
m5_20 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="activator == null", span="97-97"];
m5_22 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="cancellationToken == null", span="98-98"];
m5_27 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="instance = Activate(activator)", span="107-107"];
m5_28 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="var deserializedArguments = DeserializeArguments(cancellationToken)", span="110-110"];
m5_21 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''activator'');", span="97-97"];
m5_23 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="throw new ArgumentNullException(''cancellationToken'');", span="98-98"];
m5_24 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="object instance = null", span="100-100"];
m5_25 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="object result = null", span="102-102"];
m5_29 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="result = InvokeMethod(instance, deserializedArguments)", span="111-111"];
m5_26 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="!Method.IsStatic", span="105-105"];
m5_30 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="return result;", span="118-118"];
m5_31 [cluster="Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.Perform(Hangfire.JobActivator, Hangfire.IJobCancellationToken)", span="95-95"];
m5_38 [cluster="Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33"];
m5_64 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="409-409"];
m5_167 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs", label="Debug.Assert(expression != null)", span="411-411"];
m5_168 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs", label="var constantExpression = expression as ConstantExpression", span="413-413"];
m5_171 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs", label="return CachedExpressionCompiler.Evaluate(expression);", span="420-420"];
m5_169 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs", label="constantExpression != null", span="415-415"];
m5_170 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs", label="return constantExpression.Value;", span="417-417"];
m5_172 [cluster="Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.GetExpressionValue(System.Linq.Expressions.Expression)", span="409-409"];
m5_161 [cluster="System.Diagnostics.Debug.Assert(bool)", file="EnqueuedJobsPage.generated.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m5_163 [cluster="Unk.ToArray", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.ToArray", span=""];
m5_65 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="EnqueuedJobsPage.generated.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m5_34 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.InvokeMethod(object, object[])", span="336-336"];
m5_134 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs", label="return Method.Invoke(instance, deserializedArguments);", span="340-340"];
m5_135 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs", label=TargetInvocationException, span="342-342"];
m5_136 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs", label="ex.InnerException is OperationCanceledException", span="344-344"];
m5_137 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs", label="throw ex.InnerException;", span="349-349"];
m5_138 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="352-354"];
m5_139 [cluster="Hangfire.Common.Job.InvokeMethod(object, object[])", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.InvokeMethod(object, object[])", span="336-336"];
m5_130 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="EnqueuedJobsPage.generated.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m5_140 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="EnqueuedJobsPage.generated.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m5_67 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="376-376"];
m5_149 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="Debug.Assert(callExpression != null)", span="378-378"];
m5_150 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="var arguments = callExpression.Arguments.Select(GetExpressionValue).ToArray()", span="380-380"];
m5_151 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="var serializedArguments = new List<string>(arguments.Length)", span="382-382"];
m5_152 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label=arguments, span="383-383"];
m5_158 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="serializedArguments.Add(value)", span="403-403"];
m5_159 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="return serializedArguments.ToArray();", span="406-406"];
m5_153 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="string value = null", span="385-385"];
m5_154 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="argument != null", span="387-387"];
m5_155 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="argument is DateTime", span="389-389"];
m5_156 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="value = ((DateTime) argument).ToString(''o'', CultureInfo.InvariantCulture)", span="391-391"];
m5_157 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="value = JobHelper.ToJson(argument)", span="395-395"];
m5_160 [cluster="Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="376-376"];
m5_133 [cluster="System.Collections.Generic.List<T>.ToArray()", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m5_104 [cluster="Hangfire.JobActivator.ActivateJob(System.Type)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m5_63 [cluster="System.NotSupportedException.NotSupportedException(string)", file="EnqueuedJobsPage.generated.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m5_68 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="191-191"];
m5_71 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="EnqueuedJobsPage.generated.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="195-195"];
m5_72 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="EnqueuedJobsPage.generated.cs", label="callExpression == null", span="196-196"];
m5_73 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="EnqueuedJobsPage.generated.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="198-198"];
m5_75 [cluster="Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="191-191"];
m5_39 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="135-135"];
m5_44 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="EnqueuedJobsPage.generated.cs", label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="137-139"];
m5_45 [cluster="Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="135-135"];
m5_166 [cluster="Unk.ToJson", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.ToJson", span=""];
m5_43 [cluster="Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38"];
m5_162 [cluster="Unk.Select", file="EnqueuedJobsPage.generated.cs", label="Entry Unk.Select", span=""];
m5_128 [cluster="System.Collections.Generic.List<T>.List(int)", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m5_17 [cluster="System.ArgumentException.ArgumentException(string, string)", file="EnqueuedJobsPage.generated.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m5_164 [cluster="List<string>.cstr", file="EnqueuedJobsPage.generated.cs", label="Entry List<string>.cstr", span=""];
m5_129 [cluster="Hangfire.Common.JobHelper.FromJson(string, System.Type)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.JobHelper.FromJson(string, System.Type)", span="46-46"];
m5_132 [cluster="System.Collections.Generic.List<T>.Add(T)", file="EnqueuedJobsPage.generated.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m5_106 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m5_40 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="128-128"];
m5_42 [cluster="Hangfire.Common.Job.GetMethodFilterAttributes(bool)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.GetMethodFilterAttributes(bool)", span="128-128"];
m5_141 [cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.Dispose(object)", span="358-358"];
m5_142 [cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs", label="var disposable = instance as IDisposable", span="362-362"];
m5_143 [cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs", label="disposable != null", span="363-363"];
m5_144 [cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs", label="disposable.Dispose()", span="365-365"];
m5_145 [cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs", label=Exception, span="368-368"];
m5_146 [cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs", label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occurred during disposal.'',\r\n                    ex);", span="370-372"];
m5_147 [cluster="Hangfire.Common.Job.Dispose(object)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.Dispose(object)", span="358-358"];
m5_131 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="EnqueuedJobsPage.generated.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m5_174 [cluster="Hangfire.Common.Job.ToString()", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.ToString()", span="423-423"];
m5_175 [cluster="Hangfire.Common.Job.ToString()", file="EnqueuedJobsPage.generated.cs", label="return String.Format(''{0}.{1}'', Type.ToGenericTypeString(), Method.Name);", span="425-425"];
m5_176 [cluster="Hangfire.Common.Job.ToString()", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.ToString()", span="423-423"];
m5_96 [cluster="System.Reflection.MethodBase.GetParameters()", file="EnqueuedJobsPage.generated.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m5_0 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="49-49"];
m5_1 [cluster="Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.Job(System.Type, System.Reflection.MethodInfo)", span="49-49"];
m5_148 [cluster="System.IDisposable.Dispose()", file="EnqueuedJobsPage.generated.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m5_177 [cluster="System.Type.ToGenericTypeString()", file="EnqueuedJobsPage.generated.cs", label="Entry System.Type.ToGenericTypeString()", span="8-8"];
m5_48 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m5_51 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="153-153"];
m5_52 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="callExpression == null", span="154-154"];
m5_56 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="var objectValue = GetExpressionValue(callExpression.Object)", span="163-163"];
m5_60 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="type = callExpression.Method.DeclaringType", span="173-173"];
m5_61 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="return new Job(\r\n                type, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="178-181"];
m5_53 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="156-156"];
m5_54 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="Type type", span="159-159"];
m5_57 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="objectValue == null", span="164-164"];
m5_59 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="type = objectValue.GetType()", span="169-169"];
m5_58 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="throw new InvalidOperationException(''Expression object should not be null.'');", span="166-166"];
m5_62 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="EnqueuedJobsPage.generated.cs", label="Exit Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m5_178 [file="EnqueuedJobsPage.generated.cs", label="Hangfire.Common.Job", span=""];
m6_6 [cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", file="GlobalJobFilterCollection.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Clear()", span="43-43"];
m6_7 [cluster="System.Collections.Generic.List<T>.Clear()", file="GlobalJobFilterCollection.cs", label="Entry System.Collections.Generic.List<T>.Clear()", span="0-0"];
m6_8 [cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", span="53-53"];
m6_9 [cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", color=green, community=0, file="GlobalJobFilterCollection.cs", label="return _filters.Contains(filter);", prediction=2, span="55-55"];
m6_10 [cluster="HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Contains(HangFire.Filters.IJobFilter)", span="53-53"];
m6_12 [cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", span="62-62"];
m6_13 [cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs", label="_filters.RemoveAll(x => x == filter)", span="64-64"];
m6_4 [cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", file="GlobalJobFilterCollection.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Clear()", span="43-43"];
m6_22 [cluster="System.Collections.Generic.List<T>.GetEnumerator()", file="GlobalJobFilterCollection.cs", label="Entry System.Collections.Generic.List<T>.GetEnumerator()", span="0-0"];
m6_14 [cluster="HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Remove(HangFire.Filters.IJobFilter)", span="62-62"];
m6_0 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="35-35"];
m6_1 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", color=green, community=0, file="GlobalJobFilterCollection.cs", label="_filters.Add(filter)", prediction=2, span="37-37"];
m6_2 [cluster="HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", file="GlobalJobFilterCollection.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.Add(HangFire.Filters.IJobFilter)", span="35-35"];
m6_3 [cluster="System.Collections.Generic.List<T>.Add(T)", file="GlobalJobFilterCollection.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_19 [cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="GlobalJobFilterCollection.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", span="67-67"];
m6_20 [cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="GlobalJobFilterCollection.cs", label="return _filters.GetEnumerator();", span="69-69"];
m6_21 [cluster="HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", file="GlobalJobFilterCollection.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.GetEnumerator()", span="67-67"];
m6_11 [cluster="System.DateTime.AddDays(double)", file="GlobalJobFilterCollection.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m6_5 [cluster="HangFire.Filters.GlobalJobFilterCollection.Clear()", color=green, community=0, file="GlobalJobFilterCollection.cs", label="_filters.Clear()", prediction=2, span="45-45"];
m6_15 [cluster="System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", file="GlobalJobFilterCollection.cs", label="Entry System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)", span="0-0"];
m6_16 [cluster="lambda expression", file="GlobalJobFilterCollection.cs", label="Entry lambda expression", span="64-64"];
m6_17 [cluster="lambda expression", file="GlobalJobFilterCollection.cs", label="x == filter", span="64-64"];
m6_18 [cluster="lambda expression", file="GlobalJobFilterCollection.cs", label="Exit lambda expression", span="64-64"];
m6_23 [cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", file="GlobalJobFilterCollection.cs", label="Entry HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", span="72-72"];
m6_24 [cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", color=green, community=0, file="GlobalJobFilterCollection.cs", label="return GetEnumerator();", prediction=2, span="74-74"];
m6_25 [cluster="HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", file="GlobalJobFilterCollection.cs", label="Exit HangFire.Filters.GlobalJobFilterCollection.System.Collections.IEnumerable.GetEnumerator()", span="72-72"];
m6_26 [file="GlobalJobFilterCollection.cs", label="HangFire.Filters.GlobalJobFilterCollection", span=""];
m6_27 [file="GlobalJobFilterCollection.cs", label="HangFire.Filters.IJobFilter", span=""];
m7_6 [cluster="HangFire.PreserveCultureFilter.PreserveCultureFilter()", file="HangFireConfig.cs", label="Entry HangFire.PreserveCultureFilter.PreserveCultureFilter()", span="8-8"];
m7_8 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs", label="Entry HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="55-55"];
m7_9 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs", label="transaction.IncrementCounter(''stats:succeeded'')", span="58-58"];
m7_10 [cluster="HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs", label="Exit HangFire.States.SucceededState.Handler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="55-55"];
m7_12 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs", label="Entry HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="61-61"];
m7_13 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs", label="transaction.DecrementCounter(''stats:succeeded'')", span="64-64"];
m7_14 [cluster="HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="HangFireConfig.cs", label="Exit HangFire.States.SucceededState.Handler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="61-61"];
m7_5 [cluster="HangFire.States.SucceededState.Serialize()", file="HangFireConfig.cs", label="Exit HangFire.States.SucceededState.Serialize()", span="45-45"];
m7_0 [cluster="HangFire.States.SucceededState.SucceededState()", file="HangFireConfig.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="28-28"];
m7_3 [cluster="HangFire.States.SucceededState.Serialize()", color=green, community=0, file="HangFireConfig.cs", label="Entry HangFire.States.SucceededState.Serialize()", prediction=6, span="45-45"];
m7_2 [cluster="HangFire.States.SucceededState.SucceededState()", file="HangFireConfig.cs", label="Exit HangFire.States.SucceededState.SucceededState()", span="28-28"];
m7_1 [cluster="HangFire.States.SucceededState.SucceededState()", file="HangFireConfig.cs", label="SucceededAt = DateTime.UtcNow", span="30-30"];
m7_4 [cluster="HangFire.States.SucceededState.Serialize()", file="HangFireConfig.cs", label="return new Dictionary<string, string>\r\n            {\r\n                { ''SucceededAt'',  JobHelper.ToStringTimestamp(SucceededAt)}\r\n            };", span="47-50"];
m7_7 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="HangFireConfig.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m7_11 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string)", span="19-19"];
m7_15 [cluster="HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", file="HangFireConfig.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.DecrementCounter(string)", span="21-21"];
m7_16 [file="HangFireConfig.cs", label="HangFire.States.SucceededState", span=""];
m8_75 [cluster="System.DateTime.AddMinutes(double)", file="HistoryStatisticsFilter.cs", label="Entry System.DateTime.AddMinutes(double)", span="0-0"];
m8_110 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", span="214-214"];
m8_111 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", file="HistoryStatisticsFilter.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="216-220"];
m8_112 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", file="HistoryStatisticsFilter.cs", label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''critical'', invocationData = '''', arguments = '''' }\r\n                    });\r\n\r\n                var critical = storageConnection.FetchNextJob(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                Assert.NotNull(critical.JobId);\r\n                Assert.Equal(''critical'', critical.Queue);\r\n\r\n                var @default = storageConnection.FetchNextJob(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                Assert.NotNull(@default.JobId);\r\n                Assert.Equal(''default'', @default.Queue);\r\n            })", span="222-245"];
m8_113 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_FromMultipleQueues()", span="214-214"];
m8_128 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Sample(string, string)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.Sample(string, string)", span="254-254"];
m8_129 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.Sample(string, string)", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.Sample(string, string)", span="254-254"];
m8_3 [cluster="Unk.UseConnection", file="HistoryStatisticsFilter.cs", label="Entry Unk.UseConnection", span=""];
m8_9 [cluster="Unk.Equal", file="HistoryStatisticsFilter.cs", label="Entry Unk.Equal", span=""];
m8_0 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsNull()", span="16-16"];
m8_1 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="HistoryStatisticsFilter.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.FetchNextJob(null, CreateTimingOutCancellationToken()));\r\n\r\n                Assert.Equal(''queues'', exception.ParamName);\r\n            })", span="18-24"];
m8_2 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsNull()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsNull()", span="16-16"];
m8_34 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="HistoryStatisticsFilter.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m8_45 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(int)", file="HistoryStatisticsFilter.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(int)", span="0-0"];
m8_126 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", file="HistoryStatisticsFilter.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource(System.TimeSpan)", span="0-0"];
m8_8 [cluster="Unk.>", file="HistoryStatisticsFilter.cs", label="Entry Unk.>", span=""];
m8_15 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", span="28-28"];
m8_16 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="HistoryStatisticsFilter.cs", label="UseConnection(connection =>\r\n            {\r\n                var exception = Assert.Throws<ArgumentException>(\r\n                    () => connection.FetchNextJob(new string[0], CreateTimingOutCancellationToken()));\r\n\r\n                Assert.Equal(''queues'', exception.ParamName);\r\n            })", span="30-36"];
m8_17 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldThrowAnException_WhenQueuesCollectionIsEmpty()", span="28-28"];
m8_25 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", span="40-40"];
m8_26 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="HistoryStatisticsFilter.cs", label="UseConnection(connection =>\r\n            {\r\n                var cts = new CancellationTokenSource();\r\n                cts.Cancel();\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => connection.FetchNextJob(DefaultQueues, cts.Token));\r\n            })", span="42-49"];
m8_27 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ThrowsOperationCanceled_WhenCancellationTokenIsSetAtTheBeginning()", span="40-40"];
m8_127 [cluster="System.TimeSpan.FromSeconds(double)", file="HistoryStatisticsFilter.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m8_38 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldWaitIndefinitely_WhenThereAreNoJobs()", span="53-53"];
m8_39 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="HistoryStatisticsFilter.cs", label="UseConnection(connection =>\r\n            {\r\n                var cts = new CancellationTokenSource(200);\r\n\r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => connection.FetchNextJob(DefaultQueues, cts.Token));\r\n            })", span="55-61"];
m8_40 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldWaitIndefinitely_WhenThereAreNoJobs()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldWaitIndefinitely_WhenThereAreNoJobs()", span="53-53"];
m8_86 [cluster="System.DateTime.AddDays(double)", file="HistoryStatisticsFilter.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m8_49 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", span="65-65"];
m8_50 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs", label="string arrangeSql = @''\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (@jobId, @queue)''", span="67-69"];
m8_51 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs", label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        jobId = 1,\r\n                        queue = ''default''\r\n                    });\r\n\r\n                // Act\r\n                var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.Equal(''1'', payload.JobId);\r\n                Assert.Equal(''default'', payload.Queue);\r\n            })", span="72-90"];
m8_52 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchAJob_FromTheSpecifiedQueue()", span="65-65"];
m8_73 [cluster="Unk.NotNull", file="HistoryStatisticsFilter.cs", label="Entry Unk.NotNull", span=""];
m8_88 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", span="159-159"];
m8_89 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="HistoryStatisticsFilter.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="161-165"];
m8_90 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="HistoryStatisticsFilter.cs", label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' }\r\n                    });\r\n                // Act\r\n                var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                var otherJobFetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId != @id'',\r\n                    new { id = payload.JobId }).Single();\r\n\r\n                Assert.Null(otherJobFetchedAt);\r\n            })", span="168-188"];
m8_91 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldSetFetchedAt_OnlyForTheFetchedJob()", span="159-159"];
m8_14 [cluster="HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.SqlServerConnection.FetchNextJob(string[], System.Threading.CancellationToken)", span="61-61"];
m8_77 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", span="127-127"];
m8_78 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue, FetchedAt)\r\nvalues (scope_identity(), @queue, @fetchedAt)''", span="129-133"];
m8_79 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs", label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        queue = ''default'',\r\n                        fetchedAt = DateTime.UtcNow.AddDays(-1),\r\n                        invocationData = '''',\r\n                        arguments = ''''\r\n                    });\r\n\r\n                // Act\r\n                var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.NotEmpty(payload.JobId);\r\n            })", span="136-155"];
m8_80 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchATimedOutJobs_FromTheSpecifiedQueue()", span="127-127"];
m8_98 [cluster="Unk.Null", file="HistoryStatisticsFilter.cs", label="Entry Unk.Null", span=""];
m8_33 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="HistoryStatisticsFilter.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m8_53 [cluster="Unk.UseConnections", file="HistoryStatisticsFilter.cs", label="Entry Unk.UseConnections", span=""];
m8_114 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="222-245"];
m8_4 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="18-24"];
m8_5 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                    () => connection.FetchNextJob(null, CreateTimingOutCancellationToken()))", span="20-21"];
m8_11 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="connection.FetchNextJob(null, CreateTimingOutCancellationToken())", span="21-21"];
m8_6 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.Equal(''queues'', exception.ParamName)", span="23-23"];
m8_10 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="21-21"];
m8_7 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="18-24"];
m8_12 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="21-21"];
m8_18 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="30-36"];
m8_19 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var exception = Assert.Throws<ArgumentException>(\r\n                    () => connection.FetchNextJob(new string[0], CreateTimingOutCancellationToken()))", span="32-33"];
m8_23 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="connection.FetchNextJob(new string[0], CreateTimingOutCancellationToken())", span="33-33"];
m8_20 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.Equal(''queues'', exception.ParamName)", span="35-35"];
m8_22 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="33-33"];
m8_21 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="30-36"];
m8_24 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="33-33"];
m8_28 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="42-49"];
m8_29 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var cts = new CancellationTokenSource()", span="44-44"];
m8_31 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => connection.FetchNextJob(DefaultQueues, cts.Token))", span="47-48"];
m8_36 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="connection.FetchNextJob(DefaultQueues, cts.Token)", span="48-48"];
m8_30 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="cts.Cancel()", span="45-45"];
m8_32 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="42-49"];
m8_35 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="48-48"];
m8_37 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="48-48"];
m8_41 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="55-61"];
m8_42 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var cts = new CancellationTokenSource(200)", span="57-57"];
m8_43 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => connection.FetchNextJob(DefaultQueues, cts.Token))", span="59-60"];
m8_47 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="connection.FetchNextJob(DefaultQueues, cts.Token)", span="60-60"];
m8_44 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="55-61"];
m8_46 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="60-60"];
m8_48 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="60-60"];
m8_55 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        jobId = 1,\r\n                        queue = ''default''\r\n                    })", span="74-80"];
m8_54 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="72-90"];
m8_56 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="83-85"];
m8_57 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.Equal(''1'', payload.JobId)", span="88-88"];
m8_58 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.Equal(''default'', payload.Queue)", span="89-89"];
m8_59 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="72-90"];
m8_66 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new { invocationData = '''', arguments = '''', queue = ''default'' })", span="105-107"];
m8_65 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="103-123"];
m8_67 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="110-112"];
m8_69 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var fetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId = @id'',\r\n                    new { id = payload.JobId }).Single()", span="117-119"];
m8_68 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.NotNull(payload)", span="115-115"];
m8_70 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.NotNull(fetchedAt)", span="121-121"];
m8_71 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.True(fetchedAt > DateTime.UtcNow.AddMinutes(-1))", span="122-122"];
m8_72 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="103-123"];
m8_82 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new\r\n                    {\r\n                        queue = ''default'',\r\n                        fetchedAt = DateTime.UtcNow.AddDays(-1),\r\n                        invocationData = '''',\r\n                        arguments = ''''\r\n                    })", span="138-146"];
m8_81 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="136-155"];
m8_83 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="149-151"];
m8_84 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.NotEmpty(payload.JobId)", span="154-154"];
m8_85 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="136-155"];
m8_93 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' }\r\n                    })", span="170-176"];
m8_92 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="168-188"];
m8_94 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken())", span="178-180"];
m8_95 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var otherJobFetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId != @id'',\r\n                    new { id = payload.JobId }).Single()", span="183-185"];
m8_96 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.Null(otherJobFetchedAt)", span="187-187"];
m8_97 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="168-188"];
m8_104 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new { queue = ''critical'', invocationData = '''', arguments = '''' })", span="202-204"];
m8_103 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="200-210"];
m8_105 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.Throws<OperationCanceledException>(\r\n                    () => storageConnection.FetchNextJob(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken()))", span="206-209"];
m8_108 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="storageConnection.FetchNextJob(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken())", span="207-209"];
m8_106 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="200-210"];
m8_107 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Entry lambda expression", span="207-209"];
m8_109 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="207-209"];
m8_115 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="connection.Execute(\r\n                    arrangeSql,\r\n                    new[]\r\n                    {\r\n                        new { queue = ''default'', invocationData = '''', arguments = '''' },\r\n                        new { queue = ''critical'', invocationData = '''', arguments = '''' }\r\n                    })", span="224-230"];
m8_116 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var critical = storageConnection.FetchNextJob(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken())", span="232-234"];
m8_119 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="var @default = storageConnection.FetchNextJob(\r\n                    new[] { ''critical'', ''default'' },\r\n                    CreateTimingOutCancellationToken())", span="239-241"];
m8_117 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.NotNull(critical.JobId)", span="236-236"];
m8_118 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.Equal(''critical'', critical.Queue)", span="237-237"];
m8_120 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.NotNull(@default.JobId)", span="243-243"];
m8_121 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Assert.Equal(''default'', @default.Queue)", span="244-244"];
m8_122 [cluster="lambda expression", file="HistoryStatisticsFilter.cs", label="Exit lambda expression", span="222-245"];
m8_87 [cluster="Unk.NotEmpty", file="HistoryStatisticsFilter.cs", label="Entry Unk.NotEmpty", span=""];
m8_74 [cluster="Unk.Single", file="HistoryStatisticsFilter.cs", label="Entry Unk.Single", span=""];
m8_13 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", span="248-248"];
m8_123 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", file="HistoryStatisticsFilter.cs", label="var source = new CancellationTokenSource(TimeSpan.FromSeconds(10))", span="250-250"];
m8_124 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", file="HistoryStatisticsFilter.cs", label="return source.Token;", span="251-251"];
m8_125 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.CreateTimingOutCancellationToken()", span="248-248"];
m8_99 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", span="192-192"];
m8_100 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="HistoryStatisticsFilter.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="194-198"];
m8_101 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="HistoryStatisticsFilter.cs", label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new { queue = ''critical'', invocationData = '''', arguments = '''' });\r\n                \r\n                Assert.Throws<OperationCanceledException>(\r\n                    () => storageConnection.FetchNextJob(\r\n                        DefaultQueues,\r\n                        CreateTimingOutCancellationToken()));\r\n            })", span="200-210"];
m8_102 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldFetchJobs_OnlyFromSpecifiedQueues()", span="192-192"];
m8_76 [cluster="Unk.True", file="HistoryStatisticsFilter.cs", label="Entry Unk.True", span=""];
m8_60 [cluster="Unk.Execute", file="HistoryStatisticsFilter.cs", label="Entry Unk.Execute", span=""];
m8_61 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="HistoryStatisticsFilter.cs", label="Entry HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", span="94-94"];
m8_62 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="HistoryStatisticsFilter.cs", label="string arrangeSql = @''\r\ninsert into HangFire.Job (InvocationData, Arguments, CreatedAt)\r\nvalues (@invocationData, @arguments, getutcdate())\r\ninsert into HangFire.JobQueue (JobId, Queue)\r\nvalues (scope_identity(), @queue)''", span="96-100"];
m8_63 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="HistoryStatisticsFilter.cs", label="UseConnections((connection, storageConnection) =>\r\n            {\r\n                connection.Execute(\r\n                    arrangeSql,\r\n                    new { invocationData = '''', arguments = '''', queue = ''default'' });\r\n\r\n                // Act\r\n                var payload = storageConnection.FetchNextJob(\r\n                    DefaultQueues,\r\n                    CreateTimingOutCancellationToken());\r\n\r\n                // Assert\r\n                Assert.NotNull(payload);\r\n\r\n                var fetchedAt = connection.Query<DateTime?>(\r\n                    ''select FetchedAt from HangFire.JobQueue where JobId = @id'',\r\n                    new { id = payload.JobId }).Single();\r\n\r\n                Assert.NotNull(fetchedAt);\r\n                Assert.True(fetchedAt > DateTime.UtcNow.AddMinutes(-1));\r\n            })", span="103-123"];
m8_64 [cluster="HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", file="HistoryStatisticsFilter.cs", label="Exit HangFire.SqlServer.Tests.ConnectionFacts.FetchNextJob_ShouldLeaveJobInTheQueue_ButSetItsFetchedAtValue()", span="94-94"];
m8_130 [file="HistoryStatisticsFilter.cs", label="HangFire.SqlServer.Tests.ConnectionFacts", span=""];
m8_131 [file="HistoryStatisticsFilter.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m8_132 [file="HistoryStatisticsFilter.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m8_133 [file="HistoryStatisticsFilter.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m8_134 [file="HistoryStatisticsFilter.cs", label=cts, span=""];
m8_135 [file="HistoryStatisticsFilter.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m8_136 [file="HistoryStatisticsFilter.cs", label=cts, span=""];
m8_137 [file="HistoryStatisticsFilter.cs", label=arrangeSql, span=""];
m8_138 [file="HistoryStatisticsFilter.cs", label=arrangeSql, span=""];
m8_139 [file="HistoryStatisticsFilter.cs", label=arrangeSql, span=""];
m8_140 [file="HistoryStatisticsFilter.cs", label=arrangeSql, span=""];
m8_141 [file="HistoryStatisticsFilter.cs", label=arrangeSql, span=""];
m8_142 [file="HistoryStatisticsFilter.cs", label="HangFire.SqlServer.SqlServerConnection", span=""];
m8_143 [file="HistoryStatisticsFilter.cs", label=arrangeSql, span=""];
m9_0 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="IClientExceptionFilter.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="11-11"];
m9_1 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="IClientExceptionFilter.cs", label="Exit HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="11-11"];
m10_2 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="IClientFilter.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="17-17"];
m10_3 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="IClientFilter.cs", label="Exit HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="17-17"];
m10_0 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="IClientFilter.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="11-11"];
m10_1 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="IClientFilter.cs", label="Exit HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="11-11"];
m13_0 [cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="IServerExceptionFilter.cs", label="Entry HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="11-11"];
m13_1 [cluster="HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", file="IServerExceptionFilter.cs", label="Exit HangFire.Filters.IServerExceptionFilter.OnServerException(HangFire.Filters.ServerExceptionContext)", span="11-11"];
m14_0 [cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="IServerFilter.cs", label="Entry HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="11-11"];
m14_1 [cluster="HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", file="IServerFilter.cs", label="Exit HangFire.Filters.IServerFilter.OnPerforming(HangFire.Filters.PerformingContext)", span="11-11"];
m14_2 [cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="IServerFilter.cs", label="Entry HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="17-17"];
m14_3 [cluster="HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", file="IServerFilter.cs", label="Exit HangFire.Filters.IServerFilter.OnPerformed(HangFire.Filters.PerformedContext)", span="17-17"];
m15_2 [cluster="HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="IStateChangedFilter.cs", label="Entry HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="26-26"];
m15_3 [cluster="HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="IStateChangedFilter.cs", label="Exit HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="26-26"];
m15_0 [cluster="HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="IStateChangedFilter.cs", label="Entry HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="17-17"];
m15_1 [cluster="HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="IStateChangedFilter.cs", label="Exit HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="17-17"];
m16_0 [cluster="HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", file="IStateChangingFilter.cs", label="Entry HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", span="21-21"];
m16_1 [cluster="HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", file="IStateChangingFilter.cs", label="Exit HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", span="21-21"];
m17_60 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJob()", span="108-108"];
m17_61 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="_stateMock = new Mock<JobState>(''SomeReason'')", span="110-110"];
m17_62 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="_stateMock.Setup(x => x.StateName).Returns(''Test'')", span="111-111"];
m17_63 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="_stateMock.Setup(x => x.GetProperties()).Returns(new Dictionary<string, string>())", span="112-112"];
m17_64 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="_client.CreateJob(\r\n                    JobSteps.DefaultJobId,\r\n                    typeof(TestJob),\r\n                    _stateMock.Object,\r\n                    _arguments)", span="116-120"];
m17_65 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label=Exception, span="122-122"];
m17_66 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="_exception = ex", span="124-124"];
m17_67 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJob()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJob()", span="108-108"];
m17_0 [cluster="HangFire.Tests.JobClientSteps.GivenAClient()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenAClient()", span="30-30"];
m17_2 [cluster="HangFire.Tests.JobClientSteps.GivenAClient()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenAClient()", span="30-30"];
m17_9 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JobClientSteps.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m17_53 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="95-95"];
m17_55 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilter(string)", span="95-95"];
m17_154 [cluster="Unk.Apply", file="JobClientSteps.cs", label="Entry Unk.Apply", span=""];
m17_133 [cluster="Unk.GetAllEntriesFromHash", file="JobClientSteps.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m17_23 [cluster="Unk.ToDictionary", file="JobClientSteps.cs", label="Entry Unk.ToDictionary", span=""];
m17_124 [cluster="Unk.IsTrue", file="JobClientSteps.cs", label="Entry Unk.IsTrue", span=""];
m17_56 [cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="JobClientSteps.cs", label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="12-12"];
m17_19 [cluster="HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", span="62-62"];
m17_20 [cluster="HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs", label="_parameters = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="64-64"];
m17_22 [cluster="HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheFilterThetSetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", span="62-62"];
m17_115 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", span="194-194"];
m17_116 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", file="JobClientSteps.cs", label="_client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), new Mock<JobState>(''1'').Object, null)", span="198-198"];
m17_117 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", file="JobClientSteps.cs", label=Exception, span="200-200"];
m17_118 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", file="JobClientSteps.cs", label="_exception = ex", span="202-202"];
m17_119 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithANullDictionaryAsArguments()", span="194-194"];
m17_68 [cluster="Mock<JobState>.cstr", file="JobClientSteps.cs", label="Entry Mock<JobState>.cstr", span=""];
m17_196 [cluster="string.Format(string, object)", file="JobClientSteps.cs", label="Entry string.Format(string, object)", span="0-0"];
m17_99 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="155-155"];
m17_100 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs", label="_client.CreateJob(JobSteps.DefaultJobId, null, new Mock<JobState>(''1'').Object, new {})", span="159-159"];
m17_101 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs", label=Exception, span="161-161"];
m17_102 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs", label="_exception = ex", span="163-163"];
m17_103 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithNullType()", span="155-155"];
m17_174 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", span="277-277"];
m17_175 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs", label="Assert.AreNotEqual(0, _exceptionFilterResults.Count)", span="279-279"];
m17_176 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterWasExecuted()", span="277-277"];
m17_146 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="JobClientSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m17_166 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="265-265"];
m17_167 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="Assert.AreEqual(table.RowCount, _clientFilterResults.Count)", span="267-267"];
m17_169 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="i < table.RowCount", span="269-269"];
m17_170 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="var method = table.Rows[i][''Method'']", span="271-271"];
m17_168 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="var i = 0", span="269-269"];
m17_171 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="Assert.AreEqual(method, _clientFilterResults[i])", span="272-272"];
m17_172 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="i++", span="269-269"];
m17_173 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterMethodsWereExecuted(Table)", span="265-265"];
m17_144 [cluster="Unk.>", file="JobClientSteps.cs", label="Entry Unk.>", span=""];
m17_13 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="50-50"];
m17_15 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatHandlesAnException(string)", span="50-50"];
m17_80 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="129-129"];
m17_81 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs", label="_arguments = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="131-131"];
m17_82 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs", label="When(''I create a job'')", span="132-132"];
m17_83 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheFollowingArguments(Table)", span="129-129"];
m17_177 [cluster="Unk.AreNotEqual", file="JobClientSteps.cs", label="Entry Unk.AreNotEqual", span=""];
m17_10 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="44-44"];
m17_12 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatCancelsTheJob(string)", span="44-44"];
m17_197 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterGotTheActualValuesOfTheParameters(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheClientFilterGotTheActualValuesOfTheParameters(string)", span="313-313"];
m17_198 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientFilterGotTheActualValuesOfTheParameters(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheClientFilterGotTheActualValuesOfTheParameters(string)", span="313-313"];
m17_5 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", span="38-38"];
m17_7 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilter(string)", span="38-38"];
m17_30 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatReadsAllOfTheAboveParameters(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatReadsAllOfTheAboveParameters(string)", span="73-73"];
m17_32 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatReadsAllOfTheAboveParameters(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatReadsAllOfTheAboveParameters(string)", span="73-73"];
m17_128 [cluster="Unk.IsFalse", file="JobClientSteps.cs", label="Entry Unk.IsFalse", span=""];
m17_91 [cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="136-136"];
m17_93 [cluster="HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenThereWasAnExceptionWhileCreatingAJob()", span="136-136"];
m17_104 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", span="168-168"];
m17_105 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs", label="_client.CreateJob(JobSteps.DefaultJobId, typeof(TestJob), null, new {})", span="172-172"];
m17_106 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs", label=Exception, span="174-174"];
m17_107 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs", label="_exception = ex", span="176-176"];
m17_108 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyState()", span="168-168"];
m17_145 [cluster="Unk.AreEqual", file="JobClientSteps.cs", label="Entry Unk.AreEqual", span=""];
m17_129 [cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", span="219-219"];
m17_130 [cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs", label="var job = Redis.Client.GetAllEntriesFromHash(''hangfire:job:'' + JobSteps.DefaultJobId)", span="221-221"];
m17_131 [cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs", label="DictionaryAssert.ContainsFollowingItems(table, job)", span="222-222"];
m17_132 [cluster="HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenItHasTheFollowingParameters(Table)", span="219-219"];
m17_43 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", span="87-87"];
m17_44 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", file="JobClientSteps.cs", label="_parameters = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="89-89"];
m17_46 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatSetsTheFollowingParametersInTheOnCreatedMethod(string, Table)", span="87-87"];
m17_189 [cluster="Unk.IsNull", file="JobClientSteps.cs", label="Entry Unk.IsNull", span=""];
m17_110 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", span="181-181"];
m17_111 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs", label="_client.CreateJob(JobSteps.DefaultJobId, typeof(JobClientSteps), new Mock<JobState>(''1'').Object, new {})", span="185-185"];
m17_112 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs", label=Exception, span="187-187"];
m17_113 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs", label="_exception = ex", span="189-189"];
m17_114 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithTheIncorrectType()", span="181-181"];
m17_3 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", file="JobClientSteps.cs", label="Entry HangFire.Client.JobClient.JobClient(IRedisClientsManager, HangFire.Client.JobCreator)", span="31-31"];
m17_147 [cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="242-242"];
m17_148 [cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs", label="_stateMock.Verify(\r\n                x => x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId),\r\n                Times.Once)", span="244-246"];
m17_149 [cluster="HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheGivenStateWasAppliedToIt()", span="242-242"];
m17_79 [cluster="Unk.GetProperties", file="JobClientSteps.cs", label="Entry Unk.GetProperties", span=""];
m17_135 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="226-226"];
m17_136 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="var argsJson = Redis.Client.GetValueFromHash(\r\n                ''hangfire:job:'' + JobSteps.DefaultJobId,\r\n                ''Args'')", span="228-230"];
m17_137 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(argsJson)", span="231-231"];
m17_138 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="Assert.AreEqual(_arguments.Count, args.Count)", span="233-233"];
m17_140 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="Assert.IsTrue(args.ContainsKey(pair.Key))", span="236-236"];
m17_139 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label=_arguments, span="234-234"];
m17_141 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="Assert.AreEqual(_arguments[pair.Key], pair.Value)", span="237-237"];
m17_142 [cluster="HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheJobContainsAllOfTheAboveArguments()", span="226-226"];
m17_16 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="56-56"];
m17_18 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatThrowsAnException(string)", span="56-56"];
m17_71 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="JobClientSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m17_162 [cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", span="257-257"];
m17_163 [cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs", label="Assert.IsNotNull(_exception)", span="259-259"];
m17_164 [cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs", label="Assert.IsInstanceOfType(_exception, typeof(CreateJobFailedException))", span="260-260"];
m17_165 [cluster="HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheCreateJobFailedExceptionWasThrown()", span="257-257"];
m17_69 [cluster="Unk.Setup", file="JobClientSteps.cs", label="Entry Unk.Setup", span=""];
m17_161 [cluster="Unk.IsInstanceOfType", file="JobClientSteps.cs", label="Entry Unk.IsInstanceOfType", span=""];
m17_125 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", span="213-213"];
m17_126 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs", label="Assert.IsFalse(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="215-215"];
m17_127 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageDoesNotContainTheJob()", span="213-213"];
m17_160 [cluster="System.Type.GetType(string, bool)", file="JobClientSteps.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m17_57 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="101-101"];
m17_59 [cluster="HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheExceptionFilterThatHandlesAnException(string)", span="101-101"];
m17_120 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="207-207"];
m17_121 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs", label="Assert.IsTrue(Redis.Client.ContainsKey(''hangfire:job:'' + JobSteps.DefaultJobId))", span="209-209"];
m17_122 [cluster="HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheStorageContainsIt()", span="207-207"];
m17_151 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="245-245"];
m17_24 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="64-64"];
m17_27 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="64-64"];
m17_25 [cluster="lambda expression", file="JobClientSteps.cs", label="x[''Name'']", span="64-64"];
m17_26 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="64-64"];
m17_28 [cluster="lambda expression", file="JobClientSteps.cs", label="x[''Value'']", span="64-64"];
m17_29 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="64-64"];
m17_37 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="82-82"];
m17_40 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="82-82"];
m17_38 [cluster="lambda expression", file="JobClientSteps.cs", label="x[''Name'']", span="82-82"];
m17_39 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="82-82"];
m17_41 [cluster="lambda expression", file="JobClientSteps.cs", label="x[''Value'']", span="82-82"];
m17_42 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="82-82"];
m17_47 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="89-89"];
m17_50 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="89-89"];
m17_48 [cluster="lambda expression", file="JobClientSteps.cs", label="x[''Name'']", span="89-89"];
m17_49 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="89-89"];
m17_51 [cluster="lambda expression", file="JobClientSteps.cs", label="x[''Value'']", span="89-89"];
m17_52 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="89-89"];
m17_73 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="111-111"];
m17_76 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="112-112"];
m17_74 [cluster="lambda expression", file="JobClientSteps.cs", label="x.StateName", span="111-111"];
m17_75 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="111-111"];
m17_77 [cluster="lambda expression", file="JobClientSteps.cs", label="x.GetProperties()", span="112-112"];
m17_78 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="112-112"];
m17_85 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="131-131"];
m17_88 [cluster="lambda expression", file="JobClientSteps.cs", label="Entry lambda expression", span="131-131"];
m17_86 [cluster="lambda expression", file="JobClientSteps.cs", label="x[''Name'']", span="131-131"];
m17_87 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="131-131"];
m17_89 [cluster="lambda expression", file="JobClientSteps.cs", label="x[''Value'']", span="131-131"];
m17_90 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="131-131"];
m17_152 [cluster="lambda expression", file="JobClientSteps.cs", label="x.Apply(It.IsAny<IRedisTransaction>(), JobSteps.DefaultJobId)", span="245-245"];
m17_153 [cluster="lambda expression", file="JobClientSteps.cs", label="Exit lambda expression", span="245-245"];
m17_159 [cluster="Unk.IsNotNull", file="JobClientSteps.cs", label="Entry Unk.IsNotNull", span=""];
m17_155 [cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", span="250-250"];
m17_156 [cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs", label="Assert.IsNotNull(_exception)", span="252-252"];
m17_157 [cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs", label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="253-253"];
m17_158 [cluster="HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenAnExceptionIsThrown(string)", span="250-250"];
m17_178 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="284-284"];
m17_179 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="Assert.AreEqual(table.RowCount, _exceptionFilterResults.Count)", span="286-286"];
m17_181 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="i < table.RowCount", span="288-288"];
m17_182 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="var filter = table.Rows[i][''Filter'']", span="290-290"];
m17_180 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="var i = 0", span="288-288"];
m17_183 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="Assert.AreEqual(filter, _exceptionFilterResults[i])", span="291-291"];
m17_184 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="i++", span="288-288"];
m17_185 [cluster="HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="284-284"];
m17_150 [cluster="Unk.Verify", file="JobClientSteps.cs", label="Entry Unk.Verify", span=""];
m17_143 [cluster="Unk.GetValueFromHash", file="JobClientSteps.cs", label="Entry Unk.GetValueFromHash", span=""];
m17_186 [cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="296-296"];
m17_187 [cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs", label="Assert.IsNull(_exception)", span="298-298"];
m17_188 [cluster="HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenNoExceptionWereThrown()", span="296-296"];
m17_134 [cluster="Unk.ContainsFollowingItems", file="JobClientSteps.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m17_70 [cluster="Unk.Returns", file="JobClientSteps.cs", label="Entry Unk.Returns", span=""];
m17_8 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="JobClientSteps.cs", label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="18-18"];
m17_33 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", span="80-80"];
m17_34 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs", label="_parameters = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="82-82"];
m17_35 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs", label="GivenTheClientFilterThatReadsAllOfTheAboveParameters(name)", span="83-83"];
m17_36 [cluster="HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.GivenTheClientFilterThatGetsTheFollowingParametersInTheOnCreatingMethod(string, Table)", span="80-80"];
m17_72 [cluster="Unk.CreateJob", file="JobClientSteps.cs", label="Entry Unk.CreateJob", span=""];
m17_94 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="142-142"];
m17_95 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs", label="_client.CreateJob(null, typeof(TestJob), new Mock<JobState>(''1'').Object, new {})", span="146-146"];
m17_96 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs", label=Exception, span="148-148"];
m17_97 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs", label="_exception = ex", span="150-150"];
m17_98 [cluster="HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.WhenICreateAJobWithAnEmptyId()", span="142-142"];
m17_4 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobClientSteps.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m17_109 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="JobClientSteps.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="65-65"];
m17_123 [cluster="Unk.ContainsKey", file="JobClientSteps.cs", label="Entry Unk.ContainsKey", span=""];
m17_190 [cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs", label="Entry HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", span="302-302"];
m17_191 [cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="304-304"];
m17_192 [cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs", label=_parameters, span="305-305"];
m17_193 [cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs", label="Assert.IsTrue(job.ContainsKey(parameter.Key))", span="307-307"];
m17_194 [cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs", label="Assert.AreEqual(parameter.Value, JobHelper.FromJson<string>(job[parameter.Key]))", span="308-308"];
m17_195 [cluster="HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", file="JobClientSteps.cs", label="Exit HangFire.Tests.JobClientSteps.ThenItShouldHaveAllOfTheAboveParametersEncodedAsJsonString()", span="302-302"];
m17_199 [file="JobClientSteps.cs", label="HangFire.Tests.JobClientSteps", span=""];
m18_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="JobCreator.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m18_24 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114"];
m18_66 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="JobCreator.cs", label="filter.OnClientException(context)", prediction=7, span="119-119"];
m18_67 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="114-114"];
m18_64 [cluster="HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreated(HangFire.Filters.CreatedContext)", span="17-17"];
m18_23 [cluster="HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.ClientExceptionContext.ClientExceptionContext(HangFire.Client.CreateContext, System.Exception)", span="12-12"];
m18_3 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="20-20"];
m18_0 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m18_1 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Current = new JobCreator()", span="14-14"];
m18_2 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="12-12"];
m18_4 [cluster="HangFire.Client.JobCreator.JobCreator()", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="20-20"];
m18_45 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m18_46 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreating(preContext)", span="79-79"];
m18_47 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="preContext.Canceled", span="80-80"];
m18_48 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return new CreatedContext(\r\n                    preContext, true, null);", span="82-83"];
m18_51 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = continuation()", span="90-90"];
m18_54 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", span="95-96"];
m18_55 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="98-98"];
m18_59 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="filter.OnCreated(postContext)", span="108-108"];
m18_49 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="var wasError = false", span="86-86"];
m18_50 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="CreatedContext postContext", span="87-87"];
m18_52 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label=Exception, span="92-92"];
m18_58 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!wasError", span="106-106"];
m18_53 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="wasError = true", span="94-94"];
m18_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="!postContext.ExceptionHandled", span="100-100"];
m18_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="return postContext;", span="111-111"];
m18_57 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="throw;", span="102-102"];
m18_61 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Filters.IClientFilter, HangFire.Filters.CreatingContext, System.Func<HangFire.Filters.CreatedContext>)", span="74-74"];
m18_14 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m18_17 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="var exceptionContext = new ClientExceptionContext(context, ex)", span="46-46"];
m18_16 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", color=green, community=0, file="JobCreator.cs", label=Exception, prediction=8, span="44-44"];
m18_19 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="!exceptionContext.ExceptionHandled", span="49-49"];
m18_20 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="throw;", span="51-51"];
m18_21 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="38-38"];
m18_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", file="JobCreator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
m18_33 [cluster="Unk.thunk", file="JobCreator.cs", label="Entry Unk.thunk", span=""];
m18_30 [cluster="HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="JobCreator.cs", label="Entry HangFire.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="10-10"];
m18_38 [cluster="HangFire.Client.ClientJobDescriptor.Create()", file="JobCreator.cs", label="Entry HangFire.Client.ClientJobDescriptor.Create()", span="105-105"];
m18_68 [cluster="HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientExceptionFilter.OnClientException(HangFire.Filters.ClientExceptionContext)", span="11-11"];
m18_39 [cluster="HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", file="JobCreator.cs", label="Entry HangFire.Filters.CreatedContext.CreatedContext(HangFire.Client.CreateContext, bool, System.Exception)", span="12-12"];
m18_62 [cluster="HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="JobCreator.cs", label="Entry HangFire.Filters.IClientFilter.OnCreating(HangFire.Filters.CreatingContext)", span="11-11"];
m18_5 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m18_6 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="JobCreator.cs", label="clientFilters == null", prediction=9, span="31-31"];
m18_10 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="JobCreator.cs", label="_clientFilters = clientFilters", prediction=10, span="34-34"];
m18_11 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="JobCreator.cs", label="_clientExceptionFilters = clientExceptionFilters", prediction=11, span="35-35"];
m18_7 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", color=green, community=0, file="JobCreator.cs", label="throw new ArgumentNullException(''clientFilters'');", prediction=12, span="31-31"];
m18_12 [cluster="HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.JobCreator(System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientExceptionFilter>)", span="27-27"];
m18_63 [cluster="System.Func<TResult>.Invoke()", file="JobCreator.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m18_42 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="69-69"];
m18_35 [cluster="lambda expression", file="JobCreator.cs", label="jobDescriptor.Create()", span="64-64"];
m18_36 [cluster="lambda expression", file="JobCreator.cs", label="return new CreatedContext(createContext, false, null);", span="65-65"];
m18_43 [cluster="lambda expression", file="JobCreator.cs", label="InvokeClientFilter(filter, preContext, next)", span="69-69"];
m18_40 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="69-69"];
m18_34 [cluster="lambda expression", file="JobCreator.cs", label="Entry lambda expression", span="62-66"];
m18_37 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="62-66"];
m18_41 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="69-69"];
m18_44 [cluster="lambda expression", file="JobCreator.cs", label="Exit lambda expression", span="69-69"];
m18_32 [cluster="Unk.Aggregate", file="JobCreator.cs", label="Entry Unk.Aggregate", span=""];
m18_22 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="56-56"];
m18_25 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var preContext = new CreatingContext(createContext)", span="61-61"];
m18_26 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                jobDescriptor.Create();\r\n                return new CreatedContext(createContext, false, null);\r\n            }", span="62-66"];
m18_27 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="68-69"];
m18_28 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="thunk()", span="71-71"];
m18_29 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", file="JobCreator.cs", label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, HangFire.Client.ClientJobDescriptor, System.Collections.Generic.IEnumerable<HangFire.Filters.IClientFilter>)", span="56-56"];
m18_69 [file="JobCreator.cs", label="HangFire.Client.JobCreator", span=""];
m18_70 [file="JobCreator.cs", label="HangFire.Client.ClientJobDescriptor", span=""];
m18_71 [file="JobCreator.cs", label="HangFire.Client.CreateContext", span=""];
m18_72 [file="JobCreator.cs", label=preContext, span=""];
m18_73 [file="JobCreator.cs", label="System.Func<HangFire.Filters.CreatedContext>", span=""];
m18_74 [file="JobCreator.cs", label="HangFire.Filters.IClientFilter", span=""];
m27_35 [cluster="HangFire.Web.RazorPage.Write(object)", file="JobManager.feature.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m27_30 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="JobManager.feature.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m27_0 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="Entry HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m27_28 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs", label="WriteLiteral(''        </tbody>\n    </table>\n'')", prediction=13, span="230-230"];
m27_9 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label=servers, span="123-123"];
m27_23 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs", label="Write(JobHelper.ToTimestamp(server.Heartbeat.Value))", prediction=13, span="195-195"];
m27_22 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="190-190"];
m27_24 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs", label="WriteLiteral(''\''>\n                                '')", prediction=13, span="200-200"];
m27_25 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs", label="Write(server.Heartbeat)", prediction=13, span="205-205"];
m27_26 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs", label="WriteLiteral(''\n                            </span>\n'')", prediction=13, span="210-210"];
m27_27 [cluster="HangFire.Web.Pages.ServersPage.Execute()", color=green, community=0, file="JobManager.feature.cs", label="WriteLiteral(''                    </td>\n                </tr>\n'')", prediction=13, span="220-220"];
m27_21 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="server.Heartbeat.HasValue", span="184-184"];
m27_1 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(''\n'')", span="61-61"];
m27_2 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="Layout = new LayoutPage { Title = ''Servers'' }", span="74-74"];
m27_5 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(''\n'')", span="83-83"];
m27_7 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\n        There are no active servers. Backgr'' +\r\n''ound tasks will not be processed.\n    </div>\n'')", span="94-95"];
m27_8 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(@''    <table class=''''table''''>\n        <thead>\n            <tr>\n                <th>Name</th>\n                <th>Workers</th>\n                <th>Queues</th>\n                <th>Started</th>\n                <th>Heartbeat</th>\n            </tr>\n        </thead>\n        <tbody>\n'')", span="107-118"];
m27_10 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(''                <tr>\n                    <td>'')", span="129-129"];
m27_11 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="Write(server.Name.ToUpperInvariant())", span="134-134"];
m27_12 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(''</td>\n                    <td>'')", span="139-139"];
m27_13 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="Write(server.WorkersCount)", span="144-144"];
m27_14 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(''</td>\n                    <td>'')", span="149-149"];
m27_15 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="Write(HtmlHelper.Raw(String.Join('' '', server.Queues.Select(HtmlHelper.QueueLabel))))", span="154-154"];
m27_16 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(''</td>\n                    <td data-moment=\'''')", span="159-159"];
m27_17 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="Write(JobHelper.ToTimestamp(server.StartedAt))", span="164-164"];
m27_18 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(''\''>'')", span="169-169"];
m27_19 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="Write(server.StartedAt)", span="174-174"];
m27_20 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="WriteLiteral(''</td>\n                    <td>\n'')", span="179-179"];
m27_4 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="IList<ServerDto> servers = monitor.Servers()", span="77-77"];
m27_3 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="76-76"];
m27_6 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="servers.Count == 0", span="88-88"];
m27_29 [cluster="HangFire.Web.Pages.ServersPage.Execute()", file="JobManager.feature.cs", label="Exit HangFire.Web.Pages.ServersPage.Execute()", span="57-57"];
m27_38 [cluster="HangFire.Web.HtmlHelper.Raw(string)", file="JobManager.feature.cs", label="Entry HangFire.Web.HtmlHelper.Raw(string)", span="40-40"];
m27_33 [cluster="HangFire.Storage.IMonitoringApi.Servers()", file="JobManager.feature.cs", label="Entry HangFire.Storage.IMonitoringApi.Servers()", span="25-25"];
m27_32 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="JobManager.feature.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m27_40 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="JobManager.feature.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="40-40"];
m27_34 [cluster="string.ToUpperInvariant()", file="JobManager.feature.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m27_31 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="JobManager.feature.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m27_37 [cluster="Unk.Join", file="JobManager.feature.cs", label="Entry Unk.Join", span=""];
m27_39 [cluster="Unk.Write", file="JobManager.feature.cs", label="Entry Unk.Write", span=""];
m27_36 [cluster="Unk.Select", file="JobManager.feature.cs", label="Entry Unk.Select", span=""];
m27_41 [file="JobManager.feature.cs", label="HangFire.Web.Pages.ServersPage", span=""];
m28_33 [cluster="HangFire.JobActivator.JobActivator()", file="JobManagerSteps.cs", label="Entry HangFire.JobActivator.JobActivator()", span="4-4"];
m28_10 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="JobManagerSteps.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m28_4 [cluster="HangFire.Tests.JobManagerSteps.GivenAManager()", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.GivenAManager()", span="26-26"];
m28_5 [cluster="HangFire.Tests.JobManagerSteps.GivenAManager()", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.GivenAManager()", span="26-26"];
m28_43 [cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldNotBePerformed()", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.ThenTheJobShouldNotBePerformed()", span="92-92"];
m28_44 [cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldNotBePerformed()", file="JobManagerSteps.cs", label="Assert.IsFalse(TestJob.Performed)", span="94-94"];
m28_45 [cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldNotBePerformed()", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.ThenTheJobShouldNotBePerformed()", span="92-92"];
m28_42 [cluster="Unk.IsTrue", file="JobManagerSteps.cs", label="Entry Unk.IsTrue", span=""];
m28_23 [cluster="HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", file="JobManagerSteps.cs", label="Entry HangFire.Tests.TestExceptionFilter.TestExceptionFilter(string, System.Collections.Generic.IList<string>, bool)", span="12-12"];
m28_61 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientFilterWasExecuted()", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.ThenTheClientFilterWasExecuted()", span="123-123"];
m28_62 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientFilterWasExecuted()", file="JobManagerSteps.cs", label="Assert.AreNotEqual(0, _exceptionResults.Count)", span="125-125"];
m28_63 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientFilterWasExecuted()", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.ThenTheClientFilterWasExecuted()", span="123-123"];
m28_47 [cluster="HangFire.Tests.JobManagerSteps.ThenThereShouldBeNoPerformingActions()", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.ThenThereShouldBeNoPerformingActions()", span="98-98"];
m28_48 [cluster="HangFire.Tests.JobManagerSteps.ThenThereShouldBeNoPerformingActions()", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.ThenThereShouldBeNoPerformingActions()", span="98-98"];
m28_20 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilter(string)", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilter(string)", span="56-56"];
m28_22 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilter(string)", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilter(string)", span="56-56"];
m28_64 [cluster="Unk.AreNotEqual", file="JobManagerSteps.cs", label="Entry Unk.AreNotEqual", span=""];
m28_0 [cluster="HangFire.Tests.JobManagerSteps.BeforeScenario()", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.BeforeScenario()", span="19-19"];
m28_1 [cluster="HangFire.Tests.JobManagerSteps.BeforeScenario()", file="JobManagerSteps.cs", label="TestJob.Performed = false", span="21-21"];
m28_2 [cluster="HangFire.Tests.JobManagerSteps.BeforeScenario()", file="JobManagerSteps.cs", label="TestJob.Disposed = false", span="22-22"];
m28_3 [cluster="HangFire.Tests.JobManagerSteps.BeforeScenario()", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.BeforeScenario()", span="19-19"];
m28_46 [cluster="Unk.IsFalse", file="JobManagerSteps.cs", label="Entry Unk.IsFalse", span=""];
m28_60 [cluster="Unk.AreEqual", file="JobManagerSteps.cs", label="Entry Unk.AreEqual", span=""];
m28_65 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="130-130"];
m28_66 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs", label="Assert.AreEqual(table.RowCount, _exceptionResults.Count)", span="132-132"];
m28_68 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs", label="i < table.RowCount", span="134-134"];
m28_69 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs", label="var filter = table.Rows[i][''Filter'']", span="136-136"];
m28_67 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs", label="var i = 0", span="134-134"];
m28_70 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs", label="Assert.AreEqual(filter, _exceptionResults[i])", span="137-137"];
m28_71 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs", label="i++", span="134-134"];
m28_72 [cluster="HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.ThenTheClientExceptionFiltersWereExecuted(Table)", span="130-130"];
m28_24 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", span="62-62"];
m28_26 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.GivenAServerExceptionFilterThatHandlesAnException(string)", span="62-62"];
m28_14 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatThrowsAnException(string)", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.GivenAServerFilterThatThrowsAnException(string)", span="44-44"];
m28_16 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatThrowsAnException(string)", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.GivenAServerFilterThatThrowsAnException(string)", span="44-44"];
m28_34 [cluster="HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", file="JobManagerSteps.cs", label="Entry HangFire.Server.JobPerformer.JobPerformer(System.Collections.Generic.IEnumerable<HangFire.Filters.IServerFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IServerExceptionFilter>)", span="20-20"];
m28_49 [cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBeDisposed()", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.ThenTheJobShouldBeDisposed()", span="104-104"];
m28_50 [cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBeDisposed()", file="JobManagerSteps.cs", label="Assert.IsTrue(TestJob.Disposed)", span="106-106"];
m28_51 [cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBeDisposed()", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.ThenTheJobShouldBeDisposed()", span="104-104"];
m28_17 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatHandlesAnException(string)", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.GivenAServerFilterThatHandlesAnException(string)", span="50-50"];
m28_19 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatHandlesAnException(string)", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.GivenAServerFilterThatHandlesAnException(string)", span="50-50"];
m28_39 [cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBePerformed()", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.ThenTheJobShouldBePerformed()", span="86-86"];
m28_40 [cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBePerformed()", file="JobManagerSteps.cs", label="Assert.IsTrue(TestJob.Performed)", span="88-88"];
m28_41 [cluster="HangFire.Tests.JobManagerSteps.ThenTheJobShouldBePerformed()", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.ThenTheJobShouldBePerformed()", span="86-86"];
m28_37 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="JobManagerSteps.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m28_27 [cluster="HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", span="68-68"];
m28_29 [cluster="HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", file="JobManagerSteps.cs", label="var manager = new JobManager(\r\n                new JobFetcher(RedisFactory.BasicManager, QueueSteps.DefaultQueue),\r\n                RedisFactory.BasicManager,\r\n                context,\r\n                1)", span="75-79"];
m28_30 [cluster="HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", file="JobManagerSteps.cs", label="manager.ProcessNextJob(new CancellationTokenSource().Token)", span="81-81"];
m28_31 [cluster="HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.WhenTheWorkerPerformsTheJob()", span="68-68"];
m28_11 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", span="38-38"];
m28_13 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.GivenAServerFilterThatCancelsThePerforming(string)", span="38-38"];
m28_38 [cluster="HangFire.Server.JobManager.ProcessNextJob(System.Threading.CancellationToken)", file="JobManagerSteps.cs", label="Entry HangFire.Server.JobManager.ProcessNextJob(System.Threading.CancellationToken)", span="57-57"];
m28_6 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilter(string)", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.GivenAServerFilter(string)", span="32-32"];
m28_8 [cluster="HangFire.Tests.JobManagerSteps.GivenAServerFilter(string)", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.GivenAServerFilter(string)", span="32-32"];
m28_32 [cluster="HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", file="JobManagerSteps.cs", label="Entry HangFire.Server.ServerContext.ServerContext(string, HangFire.JobActivator, HangFire.Server.JobPerformer)", span="9-9"];
m28_9 [cluster="HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="JobManagerSteps.cs", label="Entry HangFire.Tests.TestFilter.TestFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="18-18"];
m28_35 [cluster="HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", file="JobManagerSteps.cs", label="Entry HangFire.Server.JobManager.JobManager(HangFire.Server.IJobFetcher, IRedisClientsManager, HangFire.Server.ServerContext, int)", span="18-18"];
m28_52 [cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs", label="Entry HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", span="111-111"];
m28_53 [cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs", label="Assert.AreEqual(table.RowCount, _serverResults.Count)", span="113-113"];
m28_55 [cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs", label="i < table.RowCount", span="115-115"];
m28_56 [cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs", label="var method = table.Rows[i][''Method'']", span="117-117"];
m28_54 [cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs", label="var i = 0", span="115-115"];
m28_57 [cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs", label="Assert.AreEqual(method, _serverResults[i])", span="118-118"];
m28_58 [cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs", label="i++", span="115-115"];
m28_59 [cluster="HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", file="JobManagerSteps.cs", label="Exit HangFire.Tests.JobManagerSteps.ThenTheServerFilterMethodsShouldBeExecutedInTheFollowingOrder(Table)", span="111-111"];
m28_36 [cluster="HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", file="JobManagerSteps.cs", label="Entry HangFire.Server.JobFetcher.JobFetcher(IRedisClientsManager, string, System.TimeSpan?)", span="12-12"];
m28_73 [file="JobManagerSteps.cs", label="HangFire.Tests.JobManagerSteps", span=""];
m29_7 [cluster="Mock<IState>.cstr", file="JobPerformer.cs", label="Entry Mock<IState>.cstr", span=""];
m29_8 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="JobPerformer.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m29_6 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12"];
m29_0 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="JobPerformer.cs", label="Entry Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="11-11"];
m29_1 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="JobPerformer.cs", label="StateContextValue = new StateContextMock()", span="13-13"];
m29_2 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="JobPerformer.cs", label="NewStateValue = new Mock<IState>().Object", span="14-14"];
m29_4 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", color=green, community=0, file="JobPerformer.cs", label="_context = new Lazy<ApplyStateContext>(\r\n                () => new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue))", prediction=19, span="17-21"];
m29_3 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="JobPerformer.cs", label="HangFire.Storage.Monitoring.ScheduleDto", span=""];
m29_5 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="JobPerformer.cs", label="Exit Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="11-11"];
m29_9 [cluster="lambda expression", file="JobPerformer.cs", label="Entry lambda expression", span="18-21"];
m29_10 [cluster="lambda expression", color=green, community=0, file="JobPerformer.cs", label="new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue)", prediction=20, span="18-21"];
m29_11 [cluster="lambda expression", file="JobPerformer.cs", label="Exit lambda expression", span="18-21"];
m29_12 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="JobPerformer.cs", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="23-23"];
m29_13 [file="JobPerformer.cs", label="Hangfire.Core.Tests.ApplyStateContextMock", span=""];
m31_4 [cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="JobStorage.cs", label="Entry HangFire.Web.SingleResourceHandler.WriteResponse()", span="31-31"];
m31_5 [cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="JobStorage.cs", label="WriteResource(_assembly, _resourceName)", span="33-33"];
m31_6 [cluster="HangFire.Web.SingleResourceHandler.WriteResponse()", file="JobStorage.cs", label="Exit HangFire.Web.SingleResourceHandler.WriteResponse()", span="31-31"];
m31_7 [cluster="HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", file="JobStorage.cs", label="Entry HangFire.Web.EmbeddedResourceHandler.WriteResource(System.Reflection.Assembly, string)", span="50-50"];
m31_0 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="JobStorage.cs", label="Entry HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="25-25"];
m31_1 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="JobStorage.cs", label="_assembly = assembly", span="27-27"];
m31_2 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="JobStorage.cs", label="_resourceName = resourceName", span="28-28"];
m31_3 [cluster="HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", file="JobStorage.cs", label="Exit HangFire.Web.SingleResourceHandler.SingleResourceHandler(System.Reflection.Assembly, string)", span="25-25"];
m31_8 [file="JobStorage.cs", label="HangFire.Web.SingleResourceHandler", span=""];
m32_11 [cluster="Unk.CreateLogger", file="PreserveCultureFilter.cs", label="Entry Unk.CreateLogger", span=""];
m32_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="PreserveCultureFilter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m32_10 [cluster="AspNetCoreLog.cstr", file="PreserveCultureFilter.cs", label="Entry AspNetCoreLog.cstr", span=""];
m32_7 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="PreserveCultureFilter.cs", label="Entry Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", span="33-33"];
m32_8 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="PreserveCultureFilter.cs", label="return new AspNetCoreLog(_loggerFactory.CreateLogger(name));", span="35-35"];
m32_9 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", file="PreserveCultureFilter.cs", label="Exit Hangfire.AspNetCore.AspNetCoreLogProvider.GetLogger(string)", span="33-33"];
m32_6 [cluster="Unk.nameof", file="PreserveCultureFilter.cs", label="Entry Unk.nameof", span=""];
m32_0 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="PreserveCultureFilter.cs", label="Entry Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", span="27-27"];
m32_1 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="PreserveCultureFilter.cs", label="loggerFactory == null", span="29-29"];
m32_2 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="PreserveCultureFilter.cs", label="throw new ArgumentNullException(nameof(loggerFactory));", span="29-29"];
m32_3 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="PreserveCultureFilter.cs", label="_loggerFactory = loggerFactory", span="30-30"];
m32_4 [cluster="Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", file="PreserveCultureFilter.cs", label="Exit Hangfire.AspNetCore.AspNetCoreLogProvider.AspNetCoreLogProvider(ILoggerFactory)", span="27-27"];
m32_12 [file="PreserveCultureFilter.cs", label="Hangfire.AspNetCore.AspNetCoreLogProvider", span=""];
m34_52 [cluster="HangFire.Web.RazorPage.Write(object)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="60-60"];
m34_44 [cluster="Unk.TryParse", file="ProcessingJobsPage.generated.cs", label="Entry Unk.TryParse", span=""];
m34_42 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="53-53"];
m34_0 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="29-29"];
m34_1 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="33-33"];
m34_2 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Layout = new LayoutPage { Title = ''Processing Jobs'' }", span="41-41"];
m34_3 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="int from, perPage", span="43-43"];
m34_4 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="45-45"];
m34_5 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="46-46"];
m34_6 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="var pager = new Pager(from, perPage, JobStorage.ProcessingCount())\r\n    {\r\n        BasePageUrl = Request.LinkTo(''/processing'')\r\n    }", span="48-51"];
m34_7 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="var processingJobs = JobStorage.ProcessingJobs(pager.FromRecord, pager.RecordsPerPage)", span="53-53"];
m34_9 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="pager.TotalPageCount == 0", span="64-64"];
m34_11 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="85-85"];
m34_40 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="277-277"];
m34_8 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\r\n'')", span="59-59"];
m34_13 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label=processingJobs, span="114-114"];
m34_10 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No jobs are being processed right now'' +\r\n''.\r\n    </div>\r\n'')", span="70-71"];
m34_14 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                <tr class=\'''')", span="120-120"];
m34_39 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="265-265"];
m34_15 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(!job.Value.InProcessingState ? ''obsolete-data'' : null)", span="125-125"];
m34_16 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                    <td>\r\n                        <a href=\'''')", span="130-130"];
m34_17 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="135-135"];
m34_18 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                            '')", span="140-140"];
m34_19 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="145-145"];
m34_20 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n'')", span="150-150"];
m34_21 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="!job.Value.InProcessingState", span="155-155"];
m34_22 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="161-162"];
m34_23 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                    <td>\r\n                        '')", span="172-172"];
m34_24 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(HtmlHelper.QueueLabel(job.Value.Queue))", span="177-177"];
m34_25 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''&nbsp;'')", span="182-182"];
m34_26 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(HtmlHelper.JobType(job.Value.Type))", span="187-187"];
m34_30 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(job.Value.ServerName)", span="209-209"];
m34_31 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\r\n                    </td>\r\n                    <td>\r\n'')", span="214-214"];
m34_32 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="job.Value.StartedAt.HasValue", span="219-219"];
m34_33 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                            <span data-moment=\'''')", span="225-225"];
m34_38 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''                    </td>\r\n                </tr>\r\n'')", span="255-255"];
m34_34 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.StartedAt.Value))", span="230-230"];
m34_35 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\''>\r\n                                '')", span="235-235"];
m34_36 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Write(job.Value.StartedAt)", span="240-240"];
m34_37 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="WriteLiteral(''\r\n                            </span>\r\n'')", span="245-245"];
m34_41 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ProcessingJobsPage.generated.cs", label="Exit HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="29-29"];
m34_54 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="39-39"];
m34_56 [cluster="HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.FormatProperties(System.Collections.Generic.IDictionary<string, string>)", span="34-34"];
m34_43 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m34_49 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m34_48 [cluster="HangFire.Web.JobStorage.ProcessingJobs(int, int)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.JobStorage.ProcessingJobs(int, int)", span="63-63"];
m34_51 [cluster="Unk.Write", file="ProcessingJobsPage.generated.cs", label="Entry Unk.Write", span=""];
m34_47 [cluster="HttpRequestBase.LinkTo(string)", file="ProcessingJobsPage.generated.cs", label="Entry HttpRequestBase.LinkTo(string)", span="8-8"];
m34_53 [cluster="HangFire.Web.HtmlHelper.JobId(string)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string)", span="17-17"];
m34_46 [cluster="HangFire.Web.JobStorage.ProcessingCount()", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.JobStorage.ProcessingCount()", span="55-55"];
m34_55 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="22-22"];
m34_58 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m34_50 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="73-73"];
m34_57 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="51-51"];
m34_45 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ProcessingJobsPage.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="13-13"];
m34_59 [file="ProcessingJobsPage.generated.cs", label="HangFire.Web.Pages.ProcessingJobsPage", span=""];
m35_162 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="178-178"];
m35_163 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="Program.cs", label="var worker = CreateWorker()", span="180-180"];
m35_164 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="Program.cs", label="worker.Execute(_context.Object)", span="182-182"];
m35_165 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="Program.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>()))", span="184-190"];
m35_166 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="178-178"];
m35_70 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs", label="Exit HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", span="92-92"];
m35_72 [cluster="System.Func<TResult>.Invoke()", file="Program.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m35_71 [cluster="HangFire.Client.Filters.IClientFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", file="Program.cs", label="Entry HangFire.Client.Filters.IClientFilter.OnCreating(HangFire.Client.Filters.CreatingContext)", span="27-27"];
m35_73 [cluster="HangFire.Client.Filters.IClientFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", file="Program.cs", label="Entry HangFire.Client.Filters.IClientFilter.OnCreated(HangFire.Client.Filters.CreatedContext)", span="33-33"];
m35_17 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="Program.cs", label="Entry HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", span="50-50"];
m35_77 [cluster="HangFire.Client.Filters.IClientExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", file="Program.cs", label="Entry HangFire.Client.Filters.IClientExceptionFilter.OnClientException(HangFire.Client.Filters.ClientExceptionContext)", span="27-27"];
m35_79 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="Program.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m35_78 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="Program.cs", label="HangFire.Client.JobCreator", span=""];
m35_80 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="Program.cs", label="HangFire.Client.CreateContext", span=""];
m35_20 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="Program.cs", label=Exception, span="58-58"];
m35_18 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="Program.cs", label="var filterInfo = GetFilters(context.JobMethod)", span="52-52"];
m35_40 [cluster="Unk.FetchNextJob", file="Program.cs", label="Entry Unk.FetchNextJob", span=""];
m35_65 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs", label="!postContext.ExceptionHandled", span="118-118"];
m35_286 [cluster="System.Exception.Exception()", file="Program.cs", label="Entry System.Exception.Exception()", span="0-0"];
m35_243 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="278-278"];
m35_245 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="282-284"];
m35_246 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs", label="var worker = CreateWorker()", span="286-286"];
m35_247 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs", label="worker.Execute(_context.Object)", span="289-289"];
m35_248 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="292-296"];
m35_244 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs", label="var exception = new InvalidOperationException()", span="281-281"];
m35_249 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="278-278"];
m35_232 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="264-264"];
m35_233 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="Program.cs", label="var worker = CreateWorker()", span="266-266"];
m35_234 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="Program.cs", label="worker.Execute(_context.Object)", span="268-268"];
m35_235 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="Program.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>()))", span="270-274"];
m35_236 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="264-264"];
m35_173 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="194-194"];
m35_174 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<CancellationToken>()))\r\n                .Returns(false)", span="197-203"];
m35_175 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs", label="var worker = CreateWorker()", span="205-205"];
m35_176 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs", label="worker.Execute(_context.Object)", span="208-208"];
m35_177 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs", label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="211-213"];
m35_178 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="194-194"];
m35_28 [cluster="Mock<IStateMachineFactoryFactory>.cstr", file="Program.cs", label="Entry Mock<IStateMachineFactoryFactory>.cstr", span=""];
m35_185 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="217-217"];
m35_186 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="Program.cs", label="var worker = CreateWorker()", span="219-219"];
m35_187 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="Program.cs", label="worker.Execute(_context.Object)", span="221-221"];
m35_188 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="Program.cs", label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="223-225"];
m35_189 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="217-217"];
m35_219 [cluster="Unk.DoesNotThrow", file="Program.cs", label="Entry Unk.DoesNotThrow", span=""];
m35_147 [cluster="Unk.Run", file="Program.cs", label="Entry Unk.Run", span=""];
m35_132 [cluster="Unk.Requeue", file="Program.cs", label="Entry Unk.Requeue", span=""];
m35_250 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Program.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m35_39 [cluster="HangFire.Client.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", file="Program.cs", label="Entry HangFire.Client.Filters.CreatingContext.CreatingContext(HangFire.Client.CreateContext)", span="24-24"];
m35_113 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="121-121"];
m35_114 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="123-125"];
m35_115 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs", label="var worker = CreateWorker()", span="127-127"];
m35_116 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs", label="Assert.Throws<InvalidOperationException>(\r\n                () => worker.Execute(_context.Object))", span="129-130"];
m35_117 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue(), Times.Never)", span="132-132"];
m35_118 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="133-133"];
m35_119 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="121-121"];
m35_212 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="248-248"];
m35_213 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<JobAbortedException>()", span="251-252"];
m35_214 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs", label="var worker = CreateWorker()", span="254-254"];
m35_215 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs", label="Assert.DoesNotThrow(() => worker.Execute(_context.Object))", span="257-257"];
m35_216 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="259-259"];
m35_217 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs", label="_fetchedJob.Verify(x => x.Requeue(), Times.Never)", span="260-260"];
m35_218 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="248-248"];
m35_33 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="38-38"];
m35_90 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="341-341"];
m35_293 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="Program.cs", label="return new Worker(_workerContext.Object, _process.Object, _stateMachineFactoryFactory.Object);", span="343-343"];
m35_294 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="341-341"];
m35_61 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs", label=Exception, span="110-110"];
m35_63 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", color=green, community=0, file="Program.cs", label="postContext = new CreatedContext(\r\n                    preContext, false, ex)", prediction=21, span="113-114"];
m35_62 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs", label="wasError = true", span="112-112"];
m35_64 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs", label="filter.OnCreated(postContext)", span="116-116"];
m35_60 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs", label="postContext = continuation()", span="108-108"];
m35_262 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="300-300"];
m35_264 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="304-306"];
m35_265 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs", label="var worker = CreateWorker()", span="308-308"];
m35_266 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs", label="worker.Execute(_context.Object)", span="311-311"];
m35_267 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="314-318"];
m35_263 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs", label="var exception = new InvalidOperationException()", span="303-303"];
m35_268 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="300-300"];
m35_42 [cluster="lambda expression", file="Program.cs", label="x.GetJobData(JobId)", span="44-44"];
m35_24 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="Program.cs", label="throw;", span="65-65"];
m35_16 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="27-27"];
m35_47 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="47-47"];
m35_5 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="Program.cs", label="_connection = new Mock<IStorageConnection>()", span="34-34"];
m35_6 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="Program.cs", label="_context.Storage.Setup(x => x.GetConnection()).Returns(_connection.Object)", span="35-35"];
m35_7 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="Program.cs", label="_fetchedJob = new Mock<IFetchedJob>()", span="37-37"];
m35_8 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="Program.cs", label="_fetchedJob.Setup(x => x.JobId).Returns(JobId)", span="38-38"];
m35_32 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="Program.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m35_41 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="44-44"];
m35_0 [cluster="HangFire.Client.JobCreator.JobCreator()", file="Program.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="29-29"];
m35_1 [cluster="HangFire.Client.JobCreator.JobCreator()", file="Program.cs", label="Instance = new JobCreator()", span="31-31"];
m35_2 [cluster="HangFire.Client.JobCreator.JobCreator()", file="Program.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="29-29"];
m35_3 [cluster="HangFire.Client.JobCreator.JobCreator()", file="Program.cs", label="Entry HangFire.Client.JobCreator.JobCreator()", span="37-37"];
m35_4 [cluster="HangFire.Client.JobCreator.JobCreator()", file="Program.cs", label="Exit HangFire.Client.JobCreator.JobCreator()", span="37-37"];
m35_9 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="46-46"];
m35_10 [cluster="lambda expression", file="Program.cs", label="filters.Select(f => new JobFilter(f, JobFilterScope.Type, null))", span="46-46"];
m35_11 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="46-46"];
m35_12 [cluster="Unk.Select", file="Program.cs", label="Entry Unk.Select", span=""];
m35_13 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="46-46"];
m35_14 [cluster="lambda expression", file="Program.cs", label="new JobFilter(f, JobFilterScope.Type, null)", span="46-46"];
m35_15 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="46-46"];
m35_56 [cluster="HangFire.Client.JobCreator.InvokeClientFilter(HangFire.Client.Filters.IClientFilter, HangFire.Client.Filters.CreatingContext, System.Func<HangFire.Client.Filters.CreatedContext>)", file="Program.cs", label="preContext.Canceled", span="98-98"];
m35_140 [cluster="Unk.InSequence", file="Program.cs", label="Entry Unk.InSequence", span=""];
m35_54 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="56-60"];
m35_55 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="56-60"];
m35_57 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="64-64"];
m35_68 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="72-72"];
m35_58 [cluster="lambda expression", file="Program.cs", label="x.CreateFactory(It.IsNotNull<JobStorage>())", span="64-64"];
m35_59 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="64-64"];
m35_67 [cluster="lambda expression", file="Program.cs", label="new Worker(null, _process.Object, _stateMachineFactoryFactory.Object)", span="72-72"];
m35_69 [cluster="Worker.cstr", file="Program.cs", label="Entry Worker.cstr", span=""];
m35_66 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="72-72"];
m35_22 [cluster="HangFire.Client.JobCreator.CreateJob(HangFire.Client.CreateContext)", file="Program.cs", label="InvokeExceptionFilters(exceptionContext, filterInfo.ClientExceptionFilters)", span="62-62"];
m35_19 [cluster="Mock<IJobPerformanceProcess>.cstr", file="Program.cs", label="Entry Mock<IJobPerformanceProcess>.cstr", span=""];
m35_21 [cluster="Mock<IStorageConnection>.cstr", file="Program.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m35_23 [cluster="Unk.Returns", file="Program.cs", label="Entry Unk.Returns", span=""];
m35_25 [cluster="Hangfire.Storage.JobData.JobData()", file="Program.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m35_251 [cluster="Unk.Throws", file="Program.cs", label="Entry Unk.Throws", span=""];
m35_99 [cluster="Unk.Dispose", file="Program.cs", label="Entry Unk.Dispose", span=""];
m35_279 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="322-322"];
m35_280 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException(''asd'', new Exception()) })", span="325-326"];
m35_281 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs", label="var worker = CreateWorker()", span="328-328"];
m35_282 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs", label="worker.Execute(_context.Object)", span="331-331"];
m35_283 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="334-338"];
m35_284 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="322-322"];
m35_112 [cluster="Unk.RemoveFromQueue", file="Program.cs", label="Entry Unk.RemoveFromQueue", span=""];
m35_276 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="316-316"];
m35_44 [cluster="Unk.GetJobData", file="Program.cs", label="Entry Unk.GetJobData", span=""];
m35_45 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="47-47"];
m35_52 [cluster="Unk.Create", file="Program.cs", label="Entry Unk.Create", span=""];
m35_49 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="53-53"];
m35_43 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="44-44"];
m35_46 [cluster="lambda expression", file="Program.cs", label="Method()", span="47-47"];
m35_50 [cluster="lambda expression", file="Program.cs", label="x.Create(_connection.Object)", span="53-53"];
m35_51 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="53-53"];
m35_53 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="56-60"];
m35_37 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs", label="thunk()", span="89-89"];
m35_75 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="Program.cs", label="filter.OnClientException(context)", span="137-137"];
m35_82 [cluster="lambda expression", file="Program.cs", label="System.Func<HangFire.Client.Filters.CreatedContext>", span=""];
m35_107 [cluster="lambda expression", file="Program.cs", label="x.FetchNextJob(_workerContext.Queues, _context.CancellationTokenSource.Token)", span="114-114"];
m35_124 [cluster="lambda expression", file="Program.cs", label="worker.Execute(_context.Object)", span="130-130"];
m35_157 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.ServerId),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="170-174"];
m35_160 [cluster="lambda expression", file="Program.cs", label="state.ServerId == _context.ServerId", span="172-172"];
m35_204 [cluster="lambda expression", file="Program.cs", label="worker.Execute(_context.Object)", span="238-238"];
m35_224 [cluster="lambda expression", file="Program.cs", label="worker.Execute(_context.Object)", span="257-257"];
m35_121 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="124-124"];
m35_142 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="141-142"];
m35_145 [cluster="lambda expression", file="Program.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="146-146"];
m35_149 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="150-151"];
m35_168 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>())", span="184-190"];
m35_180 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<CancellationToken>())", span="198-202"];
m35_183 [cluster="lambda expression", file="Program.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="212-212"];
m35_191 [cluster="lambda expression", file="Program.cs", label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="223-225"];
m35_201 [cluster="lambda expression", file="Program.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="232-232"];
m35_207 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="242-242"];
m35_221 [cluster="lambda expression", file="Program.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="251-251"];
m35_238 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>())", span="270-274"];
m35_256 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="292-296"];
m35_253 [cluster="lambda expression", file="Program.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="283-283"];
m35_274 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="314-318"];
m35_271 [cluster="lambda expression", file="Program.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="305-305"];
m35_291 [cluster="lambda expression", file="Program.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="334-338"];
m35_29 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="Program.cs", label="Entry HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", span="132-132"];
m35_36 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs", label="var thunk = filters.Reverse().Aggregate(continuation,\r\n                (next, filter) => () => InvokeClientFilter(filter, preContext, next))", span="86-87"];
m35_38 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs", label="Exit HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", span="75-75"];
m35_74 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="Program.cs", label="filters.Reverse()", span="135-135"];
m35_76 [cluster="HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", file="Program.cs", label="Exit HangFire.Client.JobCreator.InvokeExceptionFilters(HangFire.Client.Filters.ClientExceptionContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientExceptionFilter>)", span="132-132"];
m35_81 [cluster="lambda expression", file="Program.cs", label=preContext, span=""];
m35_83 [cluster="lambda expression", file="Program.cs", label="HangFire.Client.Filters.IClientFilter", span=""];
m35_93 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="102-102"];
m35_96 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="103-103"];
m35_106 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="114-114"];
m35_108 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="114-114"];
m35_109 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="117-117"];
m35_120 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="124-124"];
m35_123 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="130-130"];
m35_125 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="130-130"];
m35_126 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="132-132"];
m35_129 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="133-133"];
m35_141 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="141-142"];
m35_144 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="146-146"];
m35_148 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="150-151"];
m35_156 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="170-174"];
m35_158 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="170-174"];
m35_159 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="172-172"];
m35_161 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="172-172"];
m35_167 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="184-190"];
m35_179 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="198-202"];
m35_182 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="212-212"];
m35_190 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="223-225"];
m35_200 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="232-232"];
m35_203 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="238-238"];
m35_205 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="238-238"];
m35_206 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="242-242"];
m35_209 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="244-244"];
m35_220 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="251-251"];
m35_223 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="257-257"];
m35_225 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="257-257"];
m35_226 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="259-259"];
m35_229 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="260-260"];
m35_237 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="270-274"];
m35_252 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="283-283"];
m35_255 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="292-296"];
m35_270 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="305-305"];
m35_273 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="314-318"];
m35_287 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="325-325"];
m35_290 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="334-338"];
m35_122 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="124-124"];
m35_143 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="141-142"];
m35_146 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="146-146"];
m35_150 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="150-151"];
m35_169 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="184-190"];
m35_170 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="188-189"];
m35_181 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="198-202"];
m35_184 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="212-212"];
m35_192 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="223-225"];
m35_202 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="232-232"];
m35_208 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="242-242"];
m35_222 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="251-251"];
m35_239 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="270-274"];
m35_240 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="273-273"];
m35_257 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="292-296"];
m35_258 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="294-294"];
m35_254 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="283-283"];
m35_275 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="314-318"];
m35_272 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="305-305"];
m35_292 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="334-338"];
m35_30 [cluster="HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", file="Program.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", span="72-72"];
m35_35 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs", label="Func<CreatedContext> continuation = () =>\r\n            {\r\n                context.CreateJob();\r\n                return new CreatedContext(context, false, null);\r\n            }", span="80-84"];
m35_95 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="102-102"];
m35_94 [cluster="lambda expression", file="Program.cs", label="x.GetConnection()", span="102-102"];
m35_98 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="103-103"];
m35_97 [cluster="lambda expression", file="Program.cs", label="x.Dispose()", span="103-103"];
m35_111 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="117-117"];
m35_110 [cluster="lambda expression", file="Program.cs", label="x.RemoveFromQueue()", span="117-117"];
m35_128 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="132-132"];
m35_127 [cluster="lambda expression", file="Program.cs", label="x.RemoveFromQueue()", span="132-132"];
m35_131 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="133-133"];
m35_130 [cluster="lambda expression", file="Program.cs", label="x.Requeue()", span="133-133"];
m35_211 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="244-244"];
m35_210 [cluster="lambda expression", file="Program.cs", label="x.Requeue()", span="244-244"];
m35_228 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="259-259"];
m35_227 [cluster="lambda expression", file="Program.cs", label="x.RemoveFromQueue()", span="259-259"];
m35_231 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="260-260"];
m35_230 [cluster="lambda expression", file="Program.cs", label="x.Requeue()", span="260-260"];
m35_259 [cluster="lambda expression", file="Program.cs", label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="294-294"];
m35_277 [cluster="lambda expression", file="Program.cs", label="state.Exception == exception && state.Reason == ''hello''", span="316-316"];
m35_289 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="325-325"];
m35_288 [cluster="lambda expression", file="Program.cs", label="x.GetJobData(JobId)", span="325-325"];
m35_172 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="188-189"];
m35_171 [cluster="lambda expression", file="Program.cs", label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="188-189"];
m35_242 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="273-273"];
m35_241 [cluster="lambda expression", file="Program.cs", label="states.Length == 1 && states[0] == ProcessingState.StateName", span="273-273"];
m35_260 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="294-294"];
m35_278 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="316-316"];
m35_151 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="164-164"];
m35_152 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="Program.cs", label="var worker = CreateWorker()", span="166-166"];
m35_153 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="Program.cs", label="worker.Execute(_context.Object)", span="168-168"];
m35_154 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="Program.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.Is<ProcessingState>(state => state.ServerId == _context.ServerId),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="170-174"];
m35_155 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="164-164"];
m35_26 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="Program.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m35_31 [cluster="HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", file="Program.cs", label="Exit HangFire.Client.JobCreator.GetFilters(HangFire.Common.JobMethod)", span="70-70"];
m35_261 [cluster="Unk.Contains", file="Program.cs", label="Entry Unk.Contains", span=""];
m35_92 [cluster="Unk.Verify", file="Program.cs", label="Entry Unk.Verify", span=""];
m35_133 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="137-137"];
m35_134 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .InSequence()\r\n                .Returns(true)", span="140-144"];
m35_135 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="146-147"];
m35_136 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .InSequence()\r\n                .Returns(true)", span="149-153"];
m35_137 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs", label="var worker = CreateWorker()", span="155-155"];
m35_138 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs", label="worker.Execute(_context.Object)", span="158-158"];
m35_139 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="137-137"];
m35_100 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="107-107"];
m35_101 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs", label="var worker = CreateWorker()", span="109-109"];
m35_102 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs", label="worker.Execute(_context.Object)", span="111-111"];
m35_103 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs", label="_connection.Verify(\r\n                x => x.FetchNextJob(_workerContext.Queues, _context.CancellationTokenSource.Token),\r\n                Times.Once)", span="113-115"];
m35_104 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="117-117"];
m35_105 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="107-107"];
m35_48 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="346-346"];
m35_269 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="Program.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m35_27 [cluster="HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", file="Program.cs", label="Entry HangFire.Client.JobCreator.CreateWithFilters(HangFire.Client.CreateContext, System.Collections.Generic.IEnumerable<HangFire.Client.Filters.IClientFilter>)", span="75-75"];
m35_285 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="Program.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32"];
m35_193 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="229-229"];
m35_194 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<OperationCanceledException>()", span="232-233"];
m35_195 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs", label="var worker = CreateWorker()", span="235-235"];
m35_196 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs", label="Assert.Throws<OperationCanceledException>(() => worker.Execute(_context.Object))", span="238-238"];
m35_197 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs", label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()),\r\n                Times.Never)", span="241-243"];
m35_198 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="244-244"];
m35_199 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="229-229"];
m35_91 [cluster="Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", file="Program.cs", label="Entry Hangfire.Server.Worker.Execute(Hangfire.Server.BackgroundProcessContext)", span="59-59"];
m35_295 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="346-346"];
m35_84 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="96-96"];
m35_85 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs", label="var worker = CreateWorker()", span="98-98"];
m35_86 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs", label="worker.Execute(_context.Object)", span="100-100"];
m35_87 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs", label="_context.Storage.Verify(x => x.GetConnection(), Times.Once)", span="102-102"];
m35_88 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="103-103"];
m35_89 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="Program.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", span="96-96"];
m35_296 [file="Program.cs", label="Hangfire.Core.Tests.Server.WorkerFacts", span=""];
m35_297 [file="Program.cs", label=worker, span=""];
m35_298 [file="Program.cs", label=worker, span=""];
m35_299 [file="Program.cs", label=worker, span=""];
m35_300 [file="Program.cs", label=exception, span=""];
m35_301 [file="Program.cs", label=exception, span=""];
m37_0 [cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs", label="Entry HangFire.RedisFactory.RedisFactory()", span="10-10"];
m37_1 [cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs", label="Host = String.Format(''{0}:{1}'', RedisNativeClient.DefaultHost, RedisNativeClient.DefaultPort)", span="12-12"];
m37_2 [cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs", label="Db = (int) RedisNativeClient.DefaultDb", span="13-13"];
m37_3 [cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs", label="_pooledManager = new Lazy<IRedisClientsManager>(\r\n                () => new PooledRedisClientManager(Db, Host))", span="15-16"];
m37_4 [cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs", label="_basicManager = new Lazy<IRedisClientsManager>(() => \r\n                new BasicRedisClientManager(Db, Host))", span="18-19"];
m37_5 [cluster="HangFire.RedisFactory.RedisFactory()", file="RedisFactory.cs", label="Exit HangFire.RedisFactory.RedisFactory()", span="10-10"];
m37_15 [cluster="BasicRedisClientManager.cstr", file="RedisFactory.cs", label="Entry BasicRedisClientManager.cstr", span=""];
m37_11 [cluster="PooledRedisClientManager.cstr", file="RedisFactory.cs", label="Entry PooledRedisClientManager.cstr", span=""];
m37_6 [cluster="Unk.Format", file="RedisFactory.cs", label="Entry Unk.Format", span=""];
m37_7 [cluster="Lazy<IRedisClientsManager>.cstr", file="RedisFactory.cs", label="Entry Lazy<IRedisClientsManager>.cstr", span=""];
m37_12 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="18-19"];
m37_8 [cluster="lambda expression", file="RedisFactory.cs", label="Entry lambda expression", span="16-16"];
m37_9 [cluster="lambda expression", file="RedisFactory.cs", label="new PooledRedisClientManager(Db, Host)", span="16-16"];
m37_10 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="16-16"];
m37_13 [cluster="lambda expression", file="RedisFactory.cs", label="new BasicRedisClientManager(Db, Host)", span="19-19"];
m37_14 [cluster="lambda expression", file="RedisFactory.cs", label="Exit lambda expression", span="18-19"];
m39_7 [cluster="Hangfire.Common.GlobalJobFilterCollection.GlobalJobFilterCollection()", file="RetryJobsFilter.cs", label="Entry Hangfire.Common.GlobalJobFilterCollection.GlobalJobFilterCollection()", span="37-37"];
m39_9 [cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object)", file="RetryJobsFilter.cs", label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object)", span="56-56"];
m39_12 [cluster="Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", file="RetryJobsFilter.cs", label="Entry Hangfire.ContinuationsSupportAttribute.ContinuationsSupportAttribute()", span="36-36"];
m39_11 [cluster="Hangfire.StatisticsHistoryAttribute.StatisticsHistoryAttribute()", file="RetryJobsFilter.cs", label="Entry Hangfire.StatisticsHistoryAttribute.StatisticsHistoryAttribute()", span="25-25"];
m39_8 [cluster="Hangfire.CaptureCultureAttribute.CaptureCultureAttribute()", file="RetryJobsFilter.cs", label="Entry Hangfire.CaptureCultureAttribute.CaptureCultureAttribute()", span="25-25"];
m39_10 [cluster="Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", file="RetryJobsFilter.cs", label="Entry Hangfire.AutomaticRetryAttribute.AutomaticRetryAttribute()", span="21-21"];
m39_0 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs", label="Entry Hangfire.GlobalJobFilters.GlobalJobFilters()", span="25-25"];
m39_1 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs", label="Filters = new GlobalJobFilterCollection()", span="27-27"];
m39_2 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs", label="Filters.Add(new CaptureCultureAttribute())", span="28-28"];
m39_3 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs", label="Filters.Add(new AutomaticRetryAttribute())", span="29-29"];
m39_4 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs", label="Filters.Add(new StatisticsHistoryAttribute())", span="30-30"];
m39_5 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs", label="Filters.Add(new ContinuationsSupportAttribute())", span="31-31"];
m39_6 [cluster="Hangfire.GlobalJobFilters.GlobalJobFilters()", file="RetryJobsFilter.cs", label="Exit Hangfire.GlobalJobFilters.GlobalJobFilters()", span="25-25"];
m40_15 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="25-25"];
m40_16 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ScheduledJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisFetchedJob(null, JobId, Queue))", span="27-28"];
m40_17 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ScheduledJobsPage.generated.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="30-30"];
m40_18 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="25-25"];
m40_45 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", span="61-61"];
m40_46 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", file="ScheduledJobsPage.generated.cs", label="var processingJob = CreateProcessingJob()", span="63-63"];
m40_47 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", file="ScheduledJobsPage.generated.cs", label="processingJob.Dispose()", span="65-65"];
m40_48 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", file="ScheduledJobsPage.generated.cs", label="_transaction.Verify(x => x.Commit())", span="67-67"];
m40_49 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.Dispose_CommitsTransaction()", span="61-61"];
m40_20 [cluster="Unk.Equal", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Equal", span=""];
m40_6 [cluster="Mock<IRedisClient>.cstr", file="ScheduledJobsPage.generated.cs", label="Entry Mock<IRedisClient>.cstr", span=""];
m40_50 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.CreateProcessingJob()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.CreateProcessingJob()", span="70-70"];
m40_57 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.CreateProcessingJob()", file="ScheduledJobsPage.generated.cs", label="return new RedisFetchedJob(_redisConnection, JobId, Queue);", span="72-72"];
m40_58 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.CreateProcessingJob()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.CreateProcessingJob()", span="70-70"];
m40_39 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="52-52"];
m40_40 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ScheduledJobsPage.generated.cs", label="var processingJob = new RedisProcessingJob(JobId, Queue)", span="54-54"];
m40_41 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ScheduledJobsPage.generated.cs", label="Assert.Equal(JobId, processingJob.JobId)", span="56-56"];
m40_42 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ScheduledJobsPage.generated.cs", label="Assert.Equal(Queue, processingJob.Queue)", span="57-57"];
m40_43 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_CorrectlySets_AllInstanceProperties()", span="52-52"];
m40_19 [cluster="Unk.>", file="ScheduledJobsPage.generated.cs", label="Entry Unk.>", span=""];
m40_44 [cluster="RedisProcessingJob.cstr", file="ScheduledJobsPage.generated.cs", label="Entry RedisProcessingJob.cstr", span=""];
m40_0 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", span="14-14"];
m40_1 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs", label="_redis = new Mock<IRedisClient>()", span="16-16"];
m40_2 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs", label="_transaction = new Mock<IRedisTransaction>()", span="17-17"];
m40_3 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs", label="_redis.Setup(x => x.CreateTransaction()).Returns(_transaction.Object)", span="19-19"];
m40_4 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs", label="_redisConnection = new RedisConnection(_redis.Object)", span="21-21"];
m40_5 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.RedisFetchedJobFacts()", span="14-14"];
m40_10 [cluster="RedisConnection.cstr", file="ScheduledJobsPage.generated.cs", label="Entry RedisConnection.cstr", span=""];
m40_7 [cluster="Mock<IRedisTransaction>.cstr", file="ScheduledJobsPage.generated.cs", label="Entry Mock<IRedisTransaction>.cstr", span=""];
m40_8 [cluster="Unk.Setup", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Setup", span=""];
m40_51 [cluster="Unk.Dispose", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Dispose", span=""];
m40_32 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="43-43"];
m40_33 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ScheduledJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisFetchedJob(_redisConnection, JobId, null))", span="45-46"];
m40_34 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ScheduledJobsPage.generated.cs", label="Assert.Equal(''queue'', exception.ParamName)", span="48-48"];
m40_35 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenQueueIsNull()", span="43-43"];
m40_53 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Entry lambda expression", span="67-67"];
m40_11 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Entry lambda expression", span="19-19"];
m40_12 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="x.CreateTransaction()", span="19-19"];
m40_13 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Exit lambda expression", span="19-19"];
m40_21 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Entry lambda expression", span="28-28"];
m40_22 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="new RedisFetchedJob(null, JobId, Queue)", span="28-28"];
m40_23 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Exit lambda expression", span="28-28"];
m40_29 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Entry lambda expression", span="37-37"];
m40_30 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="new RedisFetchedJob(_redisConnection, null, Queue)", span="37-37"];
m40_31 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Exit lambda expression", span="37-37"];
m40_36 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Entry lambda expression", span="46-46"];
m40_37 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="new RedisFetchedJob(_redisConnection, JobId, null)", span="46-46"];
m40_38 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Exit lambda expression", span="46-46"];
m40_54 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="x.Commit()", span="67-67"];
m40_55 [cluster="lambda expression", file="ScheduledJobsPage.generated.cs", label="Exit lambda expression", span="67-67"];
m40_56 [cluster="Unk.Commit", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Commit", span=""];
m40_24 [cluster="HangFire.Redis.RedisFetchedJob.RedisFetchedJob(HangFire.Redis.RedisConnection, string, string)", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Redis.RedisFetchedJob.RedisFetchedJob(HangFire.Redis.RedisConnection, string, string)", span="25-25"];
m40_9 [cluster="Unk.Returns", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Returns", span=""];
m40_52 [cluster="Unk.Verify", file="ScheduledJobsPage.generated.cs", label="Entry Unk.Verify", span=""];
m40_14 [cluster="Unk.CreateTransaction", file="ScheduledJobsPage.generated.cs", label="Entry Unk.CreateTransaction", span=""];
m40_25 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ScheduledJobsPage.generated.cs", label="Entry HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="34-34"];
m40_26 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ScheduledJobsPage.generated.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new RedisFetchedJob(_redisConnection, null, Queue))", span="36-37"];
m40_27 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ScheduledJobsPage.generated.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="39-39"];
m40_28 [cluster="HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", file="ScheduledJobsPage.generated.cs", label="Exit HangFire.Redis.Tests.RedisFetchedJobFacts.Ctor_ThrowsAnException_WhenJobIdIsNull()", span="34-34"];
m40_59 [file="ScheduledJobsPage.generated.cs", label="HangFire.Redis.Tests.RedisFetchedJobFacts", span=""];
m42_0 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="ServerFilters.feature.cs", label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m42_1 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="ServerFilters.feature.cs", label="Queue = queue", span="6-6"];
m42_2 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="ServerFilters.feature.cs", label="Exit HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m42_3 [file="ServerFilters.feature.cs", label="HangFire.Web.Pages.FetchedJobsPage", span=""];
m44_30 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateMachine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m44_144 [cluster="Unk.EnqueueItemOnList", file="StateMachine.cs", label="Entry Unk.EnqueueItemOnList", span=""];
m44_131 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m44_56 [cluster="Unk.SetRangeInHash", file="StateMachine.cs", label="Entry Unk.SetRangeInHash", span=""];
m44_50 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="175-175"];
m44_114 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="var transaction = _redis.CreateTransaction()", span="178-178"];
m44_115 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="AppendHistory(transaction, jobId, state, appendToJob)", span="180-180"];
m44_116 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="transaction.Commit()", span="181-181"];
m44_117 [cluster="HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.AppendHistory(string, HangFire.States.JobState, bool)", span="175-175"];
m44_16 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", span="41-41"];
m44_17 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs", label="redis == null", span="47-47"];
m44_19 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs", label="stateDescriptors == null", span="48-48"];
m44_25 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs", label="_redis = redis", span="52-52"];
m44_26 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs", label="_stateDescriptors = stateDescriptors", span="53-53"];
m44_18 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs", label="throw new ArgumentNullException(''redis'');", span="47-47"];
m44_20 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs", label="throw new ArgumentNullException(''stateDescriptors'');", span="48-48"];
m44_29 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(IRedisClient, System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangingFilter>, System.Collections.Generic.IEnumerable<HangFire.Filters.IStateChangedFilter>)", span="41-41"];
m44_82 [cluster="System.TimeSpan.FromMinutes(double)", file="StateMachine.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m44_7 [cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", span="21-21"];
m44_11 [cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="StateMachine.cs", label="Descriptors.Add(stateName, descriptor)", span="24-24"];
m44_12 [cluster="HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.RegisterStateDescriptor(string, HangFire.States.JobStateDescriptor)", span="21-21"];
m44_105 [cluster="HangFire.States.JobStateDescriptor.Unapply(IRedisTransaction, string)", file="StateMachine.cs", label="Entry HangFire.States.JobStateDescriptor.Unapply(IRedisTransaction, string)", span="6-6"];
m44_60 [cluster="System.TimeSpan.FromHours(double)", file="StateMachine.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m44_66 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="98-98"];
m44_67 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="state == null", span="101-101"];
m44_69 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="_redis.AcquireLock(\r\n                String.Format(''hangfire:job:{0}:state-lock'', jobId), TimeSpan.FromMinutes(1))", span="103-104"];
m44_70 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="var currentState = _redis.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', jobId), ''State'')", span="106-107"];
m44_73 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="allowedCurrentStates.Length > 0 && !allowedCurrentStates.Contains(currentState)", span="114-114"];
m44_76 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="var oldState = state", span="121-121"];
m44_77 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="state = filter.OnStateChanging(_redis, jobId, oldState)", span="122-122"];
m44_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="AppendHistory(jobId, oldState, false)", span="126-126"];
m44_68 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''state'');", span="101-101"];
m44_71 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="currentState == null", span="109-109"];
m44_72 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="return false;", span="111-111"];
m44_74 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="return false;", span="116-116"];
m44_78 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="oldState != state", span="124-124"];
m44_81 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="98-98"];
m44_136 [cluster="Unk.SetEntryInHash", file="StateMachine.cs", label="Entry Unk.SetEntryInHash", span=""];
m44_55 [cluster="string.Format(string, object)", file="StateMachine.cs", label="Entry string.Format(string, object)", span="0-0"];
m44_143 [cluster="HangFire.JobHelper.ToJson(object)", file="StateMachine.cs", label="Entry HangFire.JobHelper.ToJson(object)", span="28-28"];
m44_132 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="StateMachine.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="51-51"];
m44_14 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32"];
m44_15 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine(IRedisClient)", span="32-32"];
m44_113 [cluster="Unk.RemoveEntry", file="StateMachine.cs", label="Entry Unk.RemoveEntry", span=""];
m44_86 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", span="134-134"];
m44_87 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="StateMachine.cs", label="var transaction = _redis.CreateTransaction()", span="139-139"];
m44_89 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="StateMachine.cs", label="return transaction.Commit();", span="143-143"];
m44_90 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState)", span="134-134"];
m44_106 [cluster="HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", file="StateMachine.cs", label="Entry HangFire.Filters.IStateChangedFilter.OnStateUnapplied(IRedisTransaction, string, string)", span="26-26"];
m44_8 [cluster="HangFire.States.ProcessingState.Descriptor.Descriptor()", file="StateMachine.cs", label="Entry HangFire.States.ProcessingState.Descriptor.Descriptor()", span="35-35"];
m44_9 [cluster="HangFire.States.ScheduledState.Descriptor.Descriptor()", file="StateMachine.cs", label="Entry HangFire.States.ScheduledState.Descriptor.Descriptor()", span="37-37"];
m44_34 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="transaction.QueueCommand(x => x.ExpireEntryIn(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    TimeSpan.FromHours(1)))", span="69-71"];
m44_31 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58"];
m44_32 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="var transaction = _redis.CreateTransaction()", span="63-63"];
m44_33 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    parameters))", span="65-67"];
m44_37 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="var oldState = state", span="78-78"];
m44_38 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="state = filter.OnStateChanging(_redis, jobId, oldState)", span="79-79"];
m44_40 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="AppendHistory(jobId, oldState, false)", span="83-83"];
m44_43 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="transaction.QueueCommand(x =>\r\n                    ((IRedisNativeClient)x).Persist(String.Format(''hangfire:job:{0}'', jobId)))", span="91-92"];
m44_35 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="transaction.Commit()", span="73-73"];
m44_41 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="var transaction = _redis.CreateTransaction()", span="87-87"];
m44_39 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="oldState != state", span="81-81"];
m44_44 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="return transaction.Commit();", span="94-94"];
m44_45 [cluster="HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.CreateInState(string, System.Collections.Generic.IDictionary<string, string>, HangFire.States.JobState)", span="58-58"];
m44_61 [cluster="Unk.ExpireEntryIn", file="StateMachine.cs", label="Entry Unk.ExpireEntryIn", span=""];
m44_95 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs", label="transaction.QueueCommand(x => x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId)))", span="156-157"];
m44_91 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", span="147-147"];
m44_92 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs", label="!String.IsNullOrEmpty(currentState)", span="149-149"];
m44_93 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs", label="_stateDescriptors.ContainsKey(currentState)", span="151-151"];
m44_94 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs", label="_stateDescriptors[currentState].Unapply(transaction, jobId)", span="153-153"];
m44_97 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs", label="filter.OnStateUnapplied(transaction, jobId, currentState)", span="161-161"];
m44_98 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs", label="AppendHistory(transaction, jobId, newState, true)", span="165-165"];
m44_99 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs", label="newState.Apply(transaction, jobId)", span="167-167"];
m44_101 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs", label="filter.OnStateApplied(transaction, jobId, newState)", span="171-171"];
m44_102 [cluster="HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.ApplyState(string, string, HangFire.States.JobState, IRedisTransaction)", span="147-147"];
m44_123 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="transaction.QueueCommand(x => x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName))", span="195-198"];
m44_107 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="185-185"];
m44_119 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="var properties = new Dictionary<string, string>(state.GetProperties())", span="188-188"];
m44_121 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="properties.Add(''State'', state.StateName)", span="191-191"];
m44_122 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label=appendToJob, span="193-193"];
m44_124 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="transaction.QueueCommand(x => x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties))", span="200-202"];
m44_125 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="properties.Add(''Reason'', state.Reason)", span="205-205"];
m44_127 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="transaction.QueueCommand(x => x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties)))", span="208-210"];
m44_120 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="var now = DateTime.UtcNow", span="189-189"];
m44_126 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="properties.Add(''CreatedAt'', JobHelper.ToStringTimestamp(now))", span="206-206"];
m44_128 [cluster="HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.AppendHistory(IRedisTransaction, string, HangFire.States.JobState, bool)", span="185-185"];
m44_6 [cluster="HangFire.States.FailedState.Descriptor.Descriptor()", file="StateMachine.cs", label="Entry HangFire.States.FailedState.Descriptor.Descriptor()", span="39-39"];
m44_129 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="StateMachine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m44_103 [cluster="string.IsNullOrEmpty(string)", file="StateMachine.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m44_104 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="StateMachine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m44_140 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="208-210"];
m44_53 [cluster="lambda expression", file="StateMachine.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    parameters)", span="65-67"];
m44_58 [cluster="lambda expression", file="StateMachine.cs", label="x.ExpireEntryIn(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    TimeSpan.FromHours(1))", span="69-71"];
m44_63 [cluster="lambda expression", file="StateMachine.cs", label="((IRedisNativeClient)x).Persist(String.Format(''hangfire:job:{0}'', jobId))", span="92-92"];
m44_52 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="65-67"];
m44_57 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="69-71"];
m44_62 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="91-92"];
m44_54 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="65-67"];
m44_59 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="69-71"];
m44_64 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="91-92"];
m44_111 [cluster="lambda expression", file="StateMachine.cs", label="x.RemoveEntry(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId))", span="156-157"];
m44_110 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="156-157"];
m44_112 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="156-157"];
m44_134 [cluster="lambda expression", file="StateMachine.cs", label="x.SetEntryInHash(\r\n                    String.Format(''hangfire:job:{0}'', jobId),\r\n                    ''State'',\r\n                    state.StateName)", span="195-198"];
m44_138 [cluster="lambda expression", file="StateMachine.cs", label="x.SetRangeInHash(\r\n                    String.Format(''hangfire:job:{0}:state'', jobId),\r\n                    properties)", span="200-202"];
m44_141 [cluster="lambda expression", file="StateMachine.cs", label="x.EnqueueItemOnList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId),\r\n                JobHelper.ToJson(properties))", span="208-210"];
m44_133 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="195-198"];
m44_137 [cluster="lambda expression", file="StateMachine.cs", label="Entry lambda expression", span="200-202"];
m44_135 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="195-198"];
m44_139 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="200-202"];
m44_142 [cluster="lambda expression", file="StateMachine.cs", label="Exit lambda expression", span="208-210"];
m44_108 [cluster="HangFire.States.JobState.Apply(IRedisTransaction, string)", file="StateMachine.cs", label="Entry HangFire.States.JobState.Apply(IRedisTransaction, string)", span="16-16"];
m44_85 [cluster="Unk.Contains", file="StateMachine.cs", label="Entry Unk.Contains", span=""];
m44_49 [cluster="HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", file="StateMachine.cs", label="Entry HangFire.Filters.IStateChangingFilter.OnStateChanging(IRedisClient, string, HangFire.States.JobState)", span="21-21"];
m44_0 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="Entry HangFire.States.StateMachine.StateMachine()", span="13-13"];
m44_1 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="RegisterStateDescriptor(FailedState.Name, new FailedState.Descriptor())", span="15-15"];
m44_2 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="RegisterStateDescriptor(ProcessingState.Name, new ProcessingState.Descriptor())", span="16-16"];
m44_3 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="RegisterStateDescriptor(ScheduledState.Name, new ScheduledState.Descriptor())", span="17-17"];
m44_4 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="RegisterStateDescriptor(SucceededState.Name, new SucceededState.Descriptor())", span="18-18"];
m44_5 [cluster="HangFire.States.StateMachine.StateMachine()", file="StateMachine.cs", label="Exit HangFire.States.StateMachine.StateMachine()", span="13-13"];
m44_65 [cluster="Unk.Persist", file="StateMachine.cs", label="Entry Unk.Persist", span=""];
m44_48 [cluster="Unk.Commit", file="StateMachine.cs", label="Entry Unk.Commit", span=""];
m44_84 [cluster="Unk.GetValueFromHash", file="StateMachine.cs", label="Entry Unk.GetValueFromHash", span=""];
m44_109 [cluster="HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", file="StateMachine.cs", label="Entry HangFire.Filters.IStateChangedFilter.OnStateApplied(IRedisTransaction, string, HangFire.States.JobState)", span="17-17"];
m44_10 [cluster="HangFire.States.SucceededState.Descriptor.Descriptor()", file="StateMachine.cs", label="Entry HangFire.States.SucceededState.Descriptor.Descriptor()", span="47-47"];
m44_47 [cluster="Unk.QueueCommand", file="StateMachine.cs", label="Entry Unk.QueueCommand", span=""];
m44_13 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StateMachine.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m44_118 [cluster="Unk.AppendHistory", file="StateMachine.cs", label="Entry Unk.AppendHistory", span=""];
m44_51 [cluster="Unk.ApplyState", file="StateMachine.cs", label="Entry Unk.ApplyState", span=""];
m44_83 [cluster="Unk.AcquireLock", file="StateMachine.cs", label="Entry Unk.AcquireLock", span=""];
m44_46 [cluster="Unk.CreateTransaction", file="StateMachine.cs", label="Entry Unk.CreateTransaction", span=""];
m44_130 [cluster="HangFire.States.JobState.GetProperties()", file="StateMachine.cs", label="Entry HangFire.States.JobState.GetProperties()", span="18-18"];
m44_145 [file="StateMachine.cs", label="HangFire.States.StateMachine", span=""];
m44_146 [file="StateMachine.cs", label=string, span=""];
m44_147 [file="StateMachine.cs", label="System.Collections.Generic.IDictionary<string, string>", span=""];
m44_148 [file="StateMachine.cs", label=string, span=""];
m44_149 [file="StateMachine.cs", label=string, span=""];
m44_150 [file="StateMachine.cs", label="HangFire.States.JobState", span=""];
m44_151 [file="StateMachine.cs", label=properties, span=""];
m45_21 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StateSteps.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m45_3 [cluster="Unk.>", file="StateSteps.cs", label="Entry Unk.>", span=""];
m45_7 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="StateSteps.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m45_22 [cluster="HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", file="StateSteps.cs", label="Entry HangFire.Core.Tests.DictionaryAssert.ContainsFollowingItems(System.Collections.Generic.IDictionary<string, string>, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m45_13 [cluster="Unk.Equal", file="StateSteps.cs", label="Entry Unk.Equal", span=""];
m45_12 [cluster="System.Exception.Exception()", file="StateSteps.cs", label="Entry System.Exception.Exception()", span="0-0"];
m45_8 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="StateSteps.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m45_9 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="StateSteps.cs", label="var state = new FailedState(new Exception())", span="19-19"];
m45_10 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="StateSteps.cs", label="Assert.Equal(FailedState.Name, state.StateName)", span="20-20"];
m45_11 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="StateSteps.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m45_0 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="StateSteps.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m45_1 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="StateSteps.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", span="12-13"];
m45_2 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="StateSteps.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m45_4 [cluster="lambda expression", file="StateSteps.cs", label="Entry lambda expression", span="13-13"];
m45_5 [cluster="lambda expression", file="StateSteps.cs", label="new FailedState(null)", span="13-13"];
m45_6 [cluster="lambda expression", file="StateSteps.cs", label="Exit lambda expression", span="13-13"];
m45_19 [cluster="System.Exception.Exception(string)", file="StateSteps.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m45_20 [cluster="HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", file="StateSteps.cs", label="Entry HangFire.States.FailedState.GetData(HangFire.Common.JobMethod)", span="36-36"];
m45_14 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="StateSteps.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24"];
m45_18 [cluster="HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", file="StateSteps.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.GetStateData_ReturnsCorrectData()", span="24-24"];
m47_53 [cluster="ConsoleSample.Program.Main()", file="SucceededJobs.generated.cs", label="Console.ReadLine()", span="130-130"];
m47_78 [cluster="System.Console.WriteLine(string, object)", file="SucceededJobs.generated.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m47_0 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.Pages.SucceededJobs.Execute()", span="29-29"];
m47_1 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''\r\n\r\n'')", span="33-33"];
m47_2 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Layout = new LayoutPage { Title = ''Succeeded Jobs'' }", span="41-41"];
m47_3 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="int from, perPage", span="43-43"];
m47_4 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="45-45"];
m47_5 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="46-46"];
m47_10 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\r\n        No succeeded jobs found.\r\n    </div>\r'' +\r\n''\n'')", span="70-71"];
m47_6 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="var pager = new Pager(from, perPage, JobStorage.SucceededListCount())\r\n    {\r\n        BasePageUrl = Request.LinkTo(''/succeeded'')\r\n    }", span="48-51"];
m47_7 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="var succeededJobs = JobStorage.SucceededJobs(pager.FromRecord, pager.RecordsPerPage)", span="53-53"];
m47_52 [cluster="Unk.Write", file="SucceededJobs.generated.cs", label="Entry Unk.Write", span=""];
m47_8 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''\r\n'')", span="59-59"];
m47_9 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="pager.TotalPageCount == 0", span="64-64"];
m47_11 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="85-85"];
m47_12 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", color=green, community=0, file="SucceededJobs.generated.cs", label="WriteLiteral(''    <table class=\''table\''>\r\n        <thead>\r\n            <tr>\r\n                <th'' +\r\n''>Id</th>\r\n                <th>Job type</th>\r\n                <th>Succeeded</th>\r'' +\r\n''\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n'')", prediction=22, span="98-100"];
m47_21 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="job.Value != null && !job.Value.InSucceededState", span="146-146"];
m47_22 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''                            <span title=\''Job\'s state has been changed while fetch'' +\r\n''ing data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\r\n'')", span="152-153"];
m47_30 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''\r\n                        </td>\r\n'')", span="207-207"];
m47_31 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''                        <td>\r\n'')", span="211-211"];
m47_36 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Write(job.Value.SucceededAt)", span="237-237"];
m47_37 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''\r\n                                </span>\r\n'')", span="242-242"];
m47_42 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Exit HangFire.Web.Pages.SucceededJobs.Execute()", span="29-29"];
m47_43 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="53-53"];
m47_46 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="13-13"];
m47_47 [cluster="HangFire.Web.JobStorage.SucceededListCount()", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.JobStorage.SucceededListCount()", span="551-551"];
m47_13 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label=succeededJobs, span="105-105"];
m47_14 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''                <tr class=\'''')", span="111-111"];
m47_15 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Write(job.Value != null && !job.Value.InSucceededState ? ''obsolete-data'' : null)", span="116-116"];
m47_17 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="126-126"];
m47_18 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''\''>\r\n                            '')", span="131-131"];
m47_16 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''\''>\r\n                    <td>\r\n                        <a href=\'''')", span="121-121"];
m47_19 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Write(HtmlHelper.JobId(job.Key))", span="136-136"];
m47_20 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''\r\n                        </a>\r\n'')", span="141-141"];
m47_23 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''                    </td>\r\n\r\n'')", span="163-163"];
m47_24 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="job.Value == null", span="168-168"];
m47_26 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''                        <td>\r\n                            '')", span="187-187"];
m47_25 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''                        <td colspan=\''3\''><em>Job was expired.</em>\r\n              '' +\r\n''          </td>\r\n'')", span="174-175"];
m47_27 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Write(HtmlHelper.QueueLabel(job.Value.Queue))", span="192-192"];
m47_28 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''&nbsp;'')", span="197-197"];
m47_29 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Write(HtmlHelper.JobType(job.Value.Type))", span="202-202"];
m47_32 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="job.Value.SucceededAt.HasValue", span="216-216"];
m47_33 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''                                <span  data-moment=\'''')", span="222-222"];
m47_35 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''\''>\r\n                                    '')", span="232-232"];
m47_34 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.SucceededAt.Value))", span="227-227"];
m47_38 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''                        </td>\r\n'')", span="252-252"];
m47_39 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''                </tr>\r\n'')", span="262-262"];
m47_41 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="Write(RenderPartial(new Paginator(pager)))", span="284-284"];
m47_40 [cluster="HangFire.Web.Pages.SucceededJobs.Execute()", file="SucceededJobs.generated.cs", label="WriteLiteral(''        </tbody>\r\n    </table>\r\n'')", span="272-272"];
m47_49 [cluster="HangFire.Web.JobStorage.SucceededJobs(int, int)", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.JobStorage.SucceededJobs(int, int)", span="232-232"];
m47_50 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m47_51 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="73-73"];
m47_54 [cluster="HangFire.Web.HtmlHelper.JobId(string)", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string)", span="17-17"];
m47_55 [cluster="HangFire.Web.HtmlHelper.QueueLabel(string)", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.HtmlHelper.QueueLabel(string)", span="39-39"];
m47_69 [cluster="HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", file="SucceededJobs.generated.cs", label="Entry HangFire.BackgroundJob.Schedule<T>(System.Linq.Expressions.Expression<System.Action<T>>, System.TimeSpan)", span="147-147"];
m47_57 [cluster="HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", file="SucceededJobs.generated.cs", label="Entry HangFire.BackgroundJobServerOptions.BackgroundJobServerOptions()", span="13-13"];
m47_100 [cluster="ConsoleSample.Services.EmptyCritical()", file="SucceededJobs.generated.cs", label="Entry ConsoleSample.Services.EmptyCritical()", span="16-16"];
m47_82 [cluster="ConsoleSample.Services.Error()", file="SucceededJobs.generated.cs", label="Entry ConsoleSample.Services.Error()", span="21-21"];
m47_64 [cluster="int.Parse(string)", file="SucceededJobs.generated.cs", label="Entry int.Parse(string)", span="0-0"];
m47_68 [cluster="System.TimeSpan.FromSeconds(double)", file="SucceededJobs.generated.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m47_74 [cluster="ConsoleSample.Services.Random(int)", file="SucceededJobs.generated.cs", label="Entry ConsoleSample.Services.Random(int)", span="28-28"];
m47_87 [cluster="System.Guid.ToString()", file="SucceededJobs.generated.cs", label="Entry System.Guid.ToString()", span="0-0"];
m47_62 [cluster="string.StartsWith(string, System.StringComparison)", file="SucceededJobs.generated.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m47_58 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m47_88 [cluster="ConsoleSample.Services.Args(string, int, System.DateTime)", file="SucceededJobs.generated.cs", label="Entry ConsoleSample.Services.Args(string, int, System.DateTime)", span="45-45"];
m47_59 [cluster="System.Console.ReadLine()", file="SucceededJobs.generated.cs", label="HangFire.Web.Pages.SucceededJobs", span=""];
m47_65 [cluster="HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="SucceededJobs.generated.cs", label="Entry HangFire.BackgroundJob.Enqueue<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="77-77"];
m47_97 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Entry lambda expression", span="112-112"];
m47_72 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="x.Random(number)", span="51-51"];
m47_71 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Entry lambda expression", span="51-51"];
m47_75 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Entry lambda expression", span="68-68"];
m47_79 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Entry lambda expression", span="83-83"];
m47_83 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Entry lambda expression", span="92-92"];
m47_89 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Entry lambda expression", span="100-100"];
m47_92 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Entry lambda expression", span="108-118"];
m47_73 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Exit lambda expression", span="51-51"];
m47_76 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Console.WriteLine(''Hello, {0}!'', ''world'')", span="68-68"];
m47_77 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Exit lambda expression", span="68-68"];
m47_80 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="x.Error()", span="83-83"];
m47_81 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Exit lambda expression", span="83-83"];
m47_84 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="x.Args(Guid.NewGuid().ToString(), 14442, DateTime.UtcNow)", span="92-92"];
m47_85 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Exit lambda expression", span="92-92"];
m47_91 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Exit lambda expression", span="100-100"];
m47_93 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="i % 2 == 0", span="110-110"];
m47_94 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="BackgroundJob.Enqueue<Services>(x => x.EmptyCritical())", span="112-112"];
m47_96 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Exit lambda expression", span="108-118"];
m47_101 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Entry lambda expression", span="116-116"];
m47_98 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="x.EmptyCritical()", span="112-112"];
m47_99 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Exit lambda expression", span="112-112"];
m47_103 [cluster="lambda expression", file="SucceededJobs.generated.cs", label="Exit lambda expression", span="116-116"];
m47_60 [cluster="string.Equals(string, System.StringComparison)", file="SucceededJobs.generated.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m47_70 [cluster="System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", file="SucceededJobs.generated.cs", label="Entry System.Threading.Tasks.Parallel.For(int, int, System.Action<int>)", span="0-0"];
m47_86 [cluster="System.Guid.NewGuid()", file="SucceededJobs.generated.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m47_61 [cluster="HangFire.BackgroundJobServer.Start()", file="SucceededJobs.generated.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="60-60"];
m47_56 [cluster="HangFire.Web.HtmlHelper.JobType(string)", file="SucceededJobs.generated.cs", label="Entry HangFire.Web.HtmlHelper.JobType(string)", span="22-22"];
m47_67 [cluster="HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", file="SucceededJobs.generated.cs", label="Entry HangFire.BackgroundJob.Enqueue(System.Linq.Expressions.Expression<System.Action>)", span="59-59"];
m47_66 [cluster="System.Console.WriteLine(string)", file="SucceededJobs.generated.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m47_104 [cluster="ConsoleSample.Services.EmptyDefault()", file="SucceededJobs.generated.cs", label="Entry ConsoleSample.Services.EmptyDefault()", span="11-11"];
m47_63 [cluster="string.Substring(int)", file="SucceededJobs.generated.cs", label="Entry string.Substring(int)", span="0-0"];
m47_105 [file="SucceededJobs.generated.cs", label=number, span=""];
m47_106 [file="SucceededJobs.generated.cs", label=number, span=""];
m48_5 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="TestFilter.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19"];
m48_6 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="TestFilter.cs", label="transaction.RemoveFromSet(''failed'', context.JobId)", span="22-22"];
m48_7 [cluster="HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="TestFilter.cs", label="Exit HangFire.Redis.States.FailedStateHandler.Unapply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="19-19"];
m48_8 [cluster="HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", file="TestFilter.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.RemoveFromSet(string, string)", span="27-27"];
m48_3 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="TestFilter.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="35-35"];
m48_0 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="TestFilter.cs", label="Entry HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10"];
m48_2 [cluster="HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", file="TestFilter.cs", label="Exit HangFire.Redis.States.FailedStateHandler.Apply(HangFire.Common.States.StateApplyingContext, HangFire.Storage.IWriteOnlyTransaction)", span="10-10"];
m48_4 [cluster="HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", file="TestFilter.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AddToSet(string, string, double)", span="26-26"];
n216 -> n36  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n45  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n55  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n56  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n71  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n78  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n82  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n83  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n89  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n93  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n94  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n101  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n105  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n106  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n112  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n116  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n117  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n123  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n127  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n128  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n139  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n143  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n144  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n153  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n157  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n158  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n171  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n175  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n176  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n182  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n186  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n187  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n197  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n201  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n202  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n216 -> n214  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
n40 -> n42  [color=darkseagreen4, key=1, label=table1, style=dashed];
n40 -> n43  [color=darkseagreen4, key=1, label=table1, style=dashed];
n60 -> n62  [color=darkseagreen4, key=1, label=table2, style=dashed];
n60 -> n63  [color=darkseagreen4, key=1, label=table2, style=dashed];
n60 -> n64  [color=darkseagreen4, key=1, label=table2, style=dashed];
n60 -> n65  [color=darkseagreen4, key=1, label=table2, style=dashed];
n72 -> n74  [color=darkseagreen4, key=1, label=table3, style=dashed];
n72 -> n75  [color=darkseagreen4, key=1, label=table3, style=dashed];
n84 -> n86  [color=darkseagreen4, key=1, label=table4, style=dashed];
n95 -> n97  [color=darkseagreen4, key=1, label=table5, style=dashed];
n107 -> n109  [color=darkseagreen4, key=1, label=table6, style=dashed];
n118 -> n120  [color=darkseagreen4, key=1, label=table7, style=dashed];
n134 -> n136  [color=darkseagreen4, key=1, label=table8, style=dashed];
n134 -> n137  [color=darkseagreen4, key=1, label=table8, style=dashed];
n134 -> n138  [color=darkseagreen4, key=1, label=table8, style=dashed];
n148 -> n150  [color=darkseagreen4, key=1, label=table9, style=dashed];
n148 -> n151  [color=darkseagreen4, key=1, label=table9, style=dashed];
n148 -> n152  [color=darkseagreen4, key=1, label=table9, style=dashed];
n163 -> n165  [color=darkseagreen4, key=1, label=table10, style=dashed];
n163 -> n166  [color=darkseagreen4, key=1, label=table10, style=dashed];
n163 -> n167  [color=darkseagreen4, key=1, label=table10, style=dashed];
n163 -> n168  [color=darkseagreen4, key=1, label=table10, style=dashed];
n163 -> n169  [color=darkseagreen4, key=1, label=table10, style=dashed];
n192 -> n194  [color=darkseagreen4, key=1, label=table11, style=dashed];
n192 -> n195  [color=darkseagreen4, key=1, label=table11, style=dashed];
n208 -> n210  [color=darkseagreen4, key=1, label=table12, style=dashed];
n208 -> n212  [color=darkseagreen4, key=1, label=table12, style=dashed];
m5_84 -> m5_87  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_87 -> m5_90  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m5_107 -> m5_110  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m5_108 -> m5_122  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_108 -> m5_124  [color=darkseagreen4, key=1, label=result, style=dashed];
m5_111 -> m5_114  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m5_111 -> m5_118  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m5_109 -> m5_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_123 -> m5_123  [color=darkseagreen4, key=1, label=i, style=dashed];
m5_2 -> m5_5  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_2 -> m5_7  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m5_2 -> m5_9  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m5_19 -> m5_22  [color=darkseagreen4, key=1, label="Hangfire.IJobCancellationToken", style=dashed];
m5_64 -> m5_171  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m5_168 -> m5_170  [color=darkseagreen4, key=1, label=constantExpression, style=dashed];
m5_150 -> m5_152  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m5_151 -> m5_158  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m5_151 -> m5_159  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m5_152 -> m5_154  [color=darkseagreen4, key=1, label=argument, style=dashed];
m5_152 -> m5_155  [color=darkseagreen4, key=1, label=argument, style=dashed];
m5_153 -> m5_158  [color=darkseagreen4, key=1, label=value, style=dashed];
m5_142 -> m5_144  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m5_51 -> m5_61  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m5_178 -> m5_14  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_26  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_78  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_79  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_80  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_82  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_99  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_134  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m5_178 -> m5_175  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m6_12 -> m6_17  [color=darkseagreen4, key=1, label="HangFire.Filters.IJobFilter", style=dashed];
m6_13 -> m6_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_26 -> m6_1  [color=green, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m6_26 -> m6_5  [color=green, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m6_26 -> m6_9  [color=green, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m6_26 -> m6_24  [color=green, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m6_26 -> m6_13  [color=darkseagreen4, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m6_26 -> m6_20  [color=darkseagreen4, key=1, label="HangFire.Filters.GlobalJobFilterCollection", style=dashed];
m6_27 -> m6_17  [color=darkseagreen4, key=1, label="HangFire.Filters.IJobFilter", style=dashed];
m7_16 -> m7_4  [color=darkseagreen4, key=1, label="HangFire.States.SucceededState", style=dashed];
m8_112 -> m8_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_1 -> m8_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_16 -> m8_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_26 -> m8_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_39 -> m8_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_51 -> m8_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_90 -> m8_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_79 -> m8_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_4 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_5 -> m8_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_18 -> m8_23  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_19 -> m8_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_28 -> m8_31  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_28 -> m8_36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_29 -> m8_31  [color=darkseagreen4, key=1, label=cts, style=dashed];
m8_29 -> m8_36  [color=darkseagreen4, key=1, label=cts, style=dashed];
m8_31 -> m8_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_41 -> m8_43  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_41 -> m8_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_42 -> m8_47  [color=darkseagreen4, key=1, label=cts, style=dashed];
m8_43 -> m8_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_56 -> m8_58  [color=darkseagreen4, key=1, label=payload, style=dashed];
m8_69 -> m8_71  [color=darkseagreen4, key=1, label=fetchedAt, style=dashed];
m8_103 -> m8_105  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_103 -> m8_108  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_105 -> m8_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_116 -> m8_118  [color=darkseagreen4, key=1, label=critical, style=dashed];
m8_119 -> m8_121  [color=darkseagreen4, key=1, label="@default", style=dashed];
m8_101 -> m8_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_63 -> m8_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_131 -> m8_11  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_132 -> m8_23  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_133 -> m8_36  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_134 -> m8_36  [color=darkseagreen4, key=1, label=cts, style=dashed];
m8_135 -> m8_47  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m8_136 -> m8_47  [color=darkseagreen4, key=1, label=cts, style=dashed];
m8_142 -> m8_108  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
m17_62 -> m17_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_63 -> m17_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_20 -> m17_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_20 -> m17_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_166 -> m17_169  [color=darkseagreen4, key=1, label=Table, style=dashed];
m17_168 -> m17_171  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_168 -> m17_172  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_172 -> m17_172  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_81 -> m17_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_81 -> m17_88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_129 -> m17_131  [color=darkseagreen4, key=1, label=Table, style=dashed];
m17_44 -> m17_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_44 -> m17_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_148 -> m17_151  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_137 -> m17_140  [color=darkseagreen4, key=1, label=args, style=dashed];
m17_140 -> m17_140  [color=darkseagreen4, key=1, label=pair, style=dashed];
m17_141 -> m17_141  [color=darkseagreen4, key=1, label=pair, style=dashed];
m17_155 -> m17_157  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_178 -> m17_181  [color=darkseagreen4, key=1, label=Table, style=dashed];
m17_180 -> m17_183  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_180 -> m17_184  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_184 -> m17_184  [color=darkseagreen4, key=1, label=i, style=dashed];
m17_33 -> m17_35  [color=darkseagreen4, key=1, label=string, style=dashed];
m17_34 -> m17_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_34 -> m17_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_191 -> m17_193  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_191 -> m17_194  [color=darkseagreen4, key=1, label=job, style=dashed];
m17_193 -> m17_193  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m17_194 -> m17_194  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m17_199 -> m17_35  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_62  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_63  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_64  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_95  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_100  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_105  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_111  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_116  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_138  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_139  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_141  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_148  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_156  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_157  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_163  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_164  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_167  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_171  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_175  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_179  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_183  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_187  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m17_199 -> m17_192  [color=darkseagreen4, key=1, label="HangFire.Tests.JobClientSteps", style=dashed];
m18_24 -> m18_66  [color=darkseagreen4, key=1, label="HangFire.Filters.ClientExceptionContext", style=dashed];
m18_45 -> m18_47  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m18_45 -> m18_48  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m18_45 -> m18_55  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m18_45 -> m18_59  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m18_54 -> m18_56  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m18_54 -> m18_59  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m18_54 -> m18_60  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m18_53 -> m18_58  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m18_17 -> m18_19  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m18_40 -> m18_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m18_22 -> m18_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m18_22 -> m18_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m18_25 -> m18_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m18_27 -> m18_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_70 -> m18_35  [color=darkseagreen4, key=1, label="HangFire.Client.ClientJobDescriptor", style=dashed];
m18_71 -> m18_36  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m18_72 -> m18_43  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m18_73 -> m18_43  [color=darkseagreen4, key=1, label="System.Func<HangFire.Filters.CreatedContext>", style=dashed];
m18_74 -> m18_43  [color=darkseagreen4, key=1, label="HangFire.Filters.IClientFilter", style=dashed];
m27_9 -> m27_23  [color=green, key=1, label=server, style=dashed];
m27_9 -> m27_25  [color=green, key=1, label=server, style=dashed];
m27_9 -> m27_11  [color=darkseagreen4, key=1, label=server, style=dashed];
m27_9 -> m27_13  [color=darkseagreen4, key=1, label=server, style=dashed];
m27_9 -> m27_15  [color=darkseagreen4, key=1, label=server, style=dashed];
m27_9 -> m27_17  [color=darkseagreen4, key=1, label=server, style=dashed];
m27_9 -> m27_19  [color=darkseagreen4, key=1, label=server, style=dashed];
m27_9 -> m27_21  [color=darkseagreen4, key=1, label=server, style=dashed];
m27_4 -> m27_9  [color=darkseagreen4, key=1, label=servers, style=dashed];
m27_4 -> m27_6  [color=darkseagreen4, key=1, label=servers, style=dashed];
m27_41 -> m27_28  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_23  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_25  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_27  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_24  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_26  [color=green, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m27_41 -> m27_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ServersPage", style=dashed];
m28_65 -> m28_68  [color=darkseagreen4, key=1, label=Table, style=dashed];
m28_67 -> m28_70  [color=darkseagreen4, key=1, label=i, style=dashed];
m28_67 -> m28_71  [color=darkseagreen4, key=1, label=i, style=dashed];
m28_71 -> m28_71  [color=darkseagreen4, key=1, label=i, style=dashed];
m28_52 -> m28_55  [color=darkseagreen4, key=1, label=Table, style=dashed];
m28_54 -> m28_57  [color=darkseagreen4, key=1, label=i, style=dashed];
m28_54 -> m28_58  [color=darkseagreen4, key=1, label=i, style=dashed];
m28_58 -> m28_58  [color=darkseagreen4, key=1, label=i, style=dashed];
m28_73 -> m28_53  [color=darkseagreen4, key=1, label="HangFire.Tests.JobManagerSteps", style=dashed];
m28_73 -> m28_57  [color=darkseagreen4, key=1, label="HangFire.Tests.JobManagerSteps", style=dashed];
m28_73 -> m28_62  [color=darkseagreen4, key=1, label="HangFire.Tests.JobManagerSteps", style=dashed];
m28_73 -> m28_66  [color=darkseagreen4, key=1, label="HangFire.Tests.JobManagerSteps", style=dashed];
m28_73 -> m28_70  [color=darkseagreen4, key=1, label="HangFire.Tests.JobManagerSteps", style=dashed];
m29_13 -> m29_10  [color=green, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m29_13 -> m29_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m31_8 -> m31_5  [color=darkseagreen4, key=1, label="HangFire.Web.SingleResourceHandler", style=dashed];
m32_0 -> m32_2  [color=darkseagreen4, key=1, label=ILoggerFactory, style=dashed];
m32_12 -> m32_8  [color=darkseagreen4, key=1, label="Hangfire.AspNetCore.AspNetCoreLogProvider", style=dashed];
m34_6 -> m34_9  [color=darkseagreen4, key=1, label=pager, style=dashed];
m34_6 -> m34_11  [color=darkseagreen4, key=1, label=pager, style=dashed];
m34_6 -> m34_40  [color=darkseagreen4, key=1, label=pager, style=dashed];
m34_7 -> m34_13  [color=darkseagreen4, key=1, label=processingJobs, style=dashed];
m34_13 -> m34_15  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_15 -> m34_15  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_15 -> m34_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_17 -> m34_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_17 -> m34_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_19 -> m34_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_19 -> m34_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_21 -> m34_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_21 -> m34_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_24 -> m34_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_24 -> m34_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_26 -> m34_26  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_30 -> m34_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_30 -> m34_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_32 -> m34_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_32 -> m34_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_34 -> m34_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_34 -> m34_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_36 -> m34_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m34_59 -> m34_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m34_59 -> m34_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m35_165 -> m35_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_71 -> m35_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_17 -> m35_19  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m35_17 -> m35_21  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m35_79 -> m35_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m35_78 -> m35_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_78 -> m35_30  [color=darkseagreen4, key=1, label="HangFire.Client.JobCreator", style=dashed];
m35_80 -> m35_44  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m35_80 -> m35_45  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m35_18 -> m35_22  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m35_245 -> m35_252  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_248 -> m35_255  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_244 -> m35_248  [color=darkseagreen4, key=1, label=exception, style=dashed];
m35_244 -> m35_256  [color=darkseagreen4, key=1, label=exception, style=dashed];
m35_244 -> m35_259  [color=darkseagreen4, key=1, label=exception, style=dashed];
m35_235 -> m35_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_174 -> m35_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_177 -> m35_182  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_188 -> m35_190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_114 -> m35_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_115 -> m35_124  [color=darkseagreen4, key=1, label=worker, style=dashed];
m35_116 -> m35_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_117 -> m35_126  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_118 -> m35_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_213 -> m35_220  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_214 -> m35_224  [color=darkseagreen4, key=1, label=worker, style=dashed];
m35_215 -> m35_223  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_216 -> m35_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_217 -> m35_229  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_63 -> m35_68  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m35_63 -> m35_69  [color=darkseagreen4, key=1, label=postContext, style=dashed];
m35_62 -> m35_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_62 -> m35_67  [color=darkseagreen4, key=1, label=wasError, style=dashed];
m35_264 -> m35_270  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_267 -> m35_273  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_263 -> m35_267  [color=darkseagreen4, key=1, label=exception, style=dashed];
m35_263 -> m35_274  [color=darkseagreen4, key=1, label=exception, style=dashed];
m35_263 -> m35_277  [color=darkseagreen4, key=1, label=exception, style=dashed];
m35_5 -> m35_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m35_6 -> m35_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_8 -> m35_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_10 -> m35_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_10 -> m35_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_10 -> m35_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_12 -> m35_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_13 -> m35_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_15 -> m35_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_54 -> m35_56  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m35_54 -> m35_57  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.CreatingContext", style=dashed];
m35_54 -> m35_64  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.IClientFilter", style=dashed];
m35_54 -> m35_68  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.IClientFilter", style=dashed];
m35_21 -> m35_23  [color=darkseagreen4, key=1, label=exceptionContext, style=dashed];
m35_280 -> m35_287  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_283 -> m35_290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_49 -> m35_52  [color=darkseagreen4, key=1, label="System.Func<HangFire.Client.Filters.CreatedContext>", style=dashed];
m35_82 -> m35_52  [color=darkseagreen4, key=1, label="System.Func<HangFire.Client.Filters.CreatedContext>", style=dashed];
m35_157 -> m35_159  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_168 -> m35_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_238 -> m35_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_256 -> m35_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_274 -> m35_276  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_29 -> m35_75  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.ClientExceptionContext", style=dashed];
m35_36 -> m35_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_81 -> m35_52  [color=darkseagreen4, key=1, label=preContext, style=dashed];
m35_83 -> m35_52  [color=darkseagreen4, key=1, label="HangFire.Client.Filters.IClientFilter", style=dashed];
m35_154 -> m35_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_134 -> m35_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_135 -> m35_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_136 -> m35_148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_103 -> m35_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_104 -> m35_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_27 -> m35_44  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m35_27 -> m35_45  [color=darkseagreen4, key=1, label="HangFire.Client.CreateContext", style=dashed];
m35_194 -> m35_200  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_195 -> m35_204  [color=darkseagreen4, key=1, label=worker, style=dashed];
m35_196 -> m35_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_197 -> m35_206  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_198 -> m35_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_87 -> m35_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_88 -> m35_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m35_296 -> m35_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_9  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_37  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_10  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_50  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_15  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_67  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_71  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_75  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_82  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_86  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_88  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_102  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_103  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_107  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_104  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_114  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_124  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_117  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_118  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_134  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_138  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_153  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_154  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_157  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_160  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_164  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_174  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_176  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_187  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_188  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_194  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_196  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_204  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_197  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_198  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_213  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_215  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_224  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_216  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_217  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_234  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_235  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_245  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_247  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_248  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_264  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_266  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_267  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_282  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_283  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_296 -> m35_293  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m35_297 -> m35_124  [color=darkseagreen4, key=1, label=worker, style=dashed];
m35_298 -> m35_204  [color=darkseagreen4, key=1, label=worker, style=dashed];
m35_299 -> m35_224  [color=darkseagreen4, key=1, label=worker, style=dashed];
m35_300 -> m35_256  [color=darkseagreen4, key=1, label=exception, style=dashed];
m35_300 -> m35_259  [color=darkseagreen4, key=1, label=exception, style=dashed];
m35_301 -> m35_274  [color=darkseagreen4, key=1, label=exception, style=dashed];
m35_301 -> m35_277  [color=darkseagreen4, key=1, label=exception, style=dashed];
m40_16 -> m40_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_48 -> m40_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_40 -> m40_42  [color=darkseagreen4, key=1, label=processingJob, style=dashed];
m40_3 -> m40_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_33 -> m40_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_26 -> m40_29  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m40_59 -> m40_3  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisFetchedJobFacts", style=dashed];
m40_59 -> m40_30  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisFetchedJobFacts", style=dashed];
m40_59 -> m40_37  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisFetchedJobFacts", style=dashed];
m40_59 -> m40_48  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisFetchedJobFacts", style=dashed];
m40_59 -> m40_57  [color=darkseagreen4, key=1, label="HangFire.Redis.Tests.RedisFetchedJobFacts", style=dashed];
m44_50 -> m44_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_114 -> m44_116  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m44_16 -> m44_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, HangFire.States.JobStateDescriptor>", style=dashed];
m44_66 -> m44_69  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_66 -> m44_73  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m44_66 -> m44_79  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_70 -> m44_73  [color=darkseagreen4, key=1, label=currentState, style=dashed];
m44_76 -> m44_78  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m44_76 -> m44_79  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m44_87 -> m44_89  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m44_34 -> m44_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_31 -> m44_33  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_31 -> m44_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_31 -> m44_34  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_31 -> m44_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_31 -> m44_40  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_31 -> m44_43  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_31 -> m44_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_32 -> m44_34  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m44_32 -> m44_35  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m44_33 -> m44_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_37 -> m44_39  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m44_37 -> m44_40  [color=darkseagreen4, key=1, label=oldState, style=dashed];
m44_43 -> m44_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_41 -> m44_43  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m44_41 -> m44_44  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m44_95 -> m44_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_91 -> m44_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_91 -> m44_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_91 -> m44_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_91 -> m44_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_91 -> m44_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_91 -> m44_98  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_91 -> m44_99  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_91 -> m44_101  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_123 -> m44_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_107 -> m44_121  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m44_107 -> m44_122  [color=darkseagreen4, key=1, label=bool, style=dashed];
m44_107 -> m44_123  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m44_107 -> m44_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_107 -> m44_124  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m44_107 -> m44_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_107 -> m44_125  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m44_107 -> m44_127  [color=darkseagreen4, key=1, label=IRedisTransaction, style=dashed];
m44_107 -> m44_141  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_119 -> m44_121  [color=darkseagreen4, key=1, label=properties, style=dashed];
m44_119 -> m44_124  [color=darkseagreen4, key=1, label=properties, style=dashed];
m44_119 -> m44_138  [color=darkseagreen4, key=1, label=properties, style=dashed];
m44_119 -> m44_125  [color=darkseagreen4, key=1, label=properties, style=dashed];
m44_119 -> m44_126  [color=darkseagreen4, key=1, label=properties, style=dashed];
m44_119 -> m44_127  [color=darkseagreen4, key=1, label=properties, style=dashed];
m44_119 -> m44_141  [color=darkseagreen4, key=1, label=properties, style=dashed];
m44_124 -> m44_137  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_127 -> m44_140  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m44_120 -> m44_126  [color=darkseagreen4, key=1, label=now, style=dashed];
m44_145 -> m44_40  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_145 -> m44_69  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_145 -> m44_79  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_145 -> m44_93  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_145 -> m44_94  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_145 -> m44_98  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_145 -> m44_115  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m44_146 -> m44_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_146 -> m44_58  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_146 -> m44_63  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_147 -> m44_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m44_148 -> m44_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_149 -> m44_134  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_149 -> m44_138  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_149 -> m44_141  [color=darkseagreen4, key=1, label=string, style=dashed];
m44_150 -> m44_134  [color=darkseagreen4, key=1, label="HangFire.States.JobState", style=dashed];
m44_151 -> m44_138  [color=darkseagreen4, key=1, label=properties, style=dashed];
m44_151 -> m44_141  [color=darkseagreen4, key=1, label=properties, style=dashed];
m45_1 -> m45_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_4 -> m47_10  [color=darkseagreen4, key=1, label=server, style=dashed];
m47_6 -> m47_11  [color=darkseagreen4, key=1, label=pager, style=dashed];
m47_6 -> m47_9  [color=darkseagreen4, key=1, label=pager, style=dashed];
m47_6 -> m47_41  [color=darkseagreen4, key=1, label=pager, style=dashed];
m47_7 -> m47_9  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_11  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_12  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_21  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_22  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_30  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_31  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_36  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_37  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_42  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_43  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_46  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_47  [color=darkseagreen4, key=1, label=command, style=dashed];
m47_7 -> m47_13  [color=darkseagreen4, key=1, label=succeededJobs, style=dashed];
m47_12 -> m47_14  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m47_21 -> m47_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_21 -> m47_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_22 -> m47_24  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m47_31 -> m47_33  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m47_36 -> m47_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_37 -> m47_39  [color=darkseagreen4, key=1, label=workCount, style=dashed];
m47_13 -> m47_15  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_13 -> m47_17  [color=darkseagreen4, key=1, label=i, style=dashed];
m47_15 -> m47_72  [color=darkseagreen4, key=1, label=number, style=dashed];
m47_15 -> m47_15  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_15 -> m47_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_17 -> m47_17  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_17 -> m47_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_16 -> m47_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_19 -> m47_19  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_19 -> m47_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_23 -> m47_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m47_24 -> m47_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_26 -> m47_26  [color=darkseagreen4, key=1, label=i, style=dashed];
m47_25 -> m47_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_27 -> m47_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_27 -> m47_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_29 -> m47_29  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_29 -> m47_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_32 -> m47_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m47_32 -> m47_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_32 -> m47_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_35 -> m47_35  [color=darkseagreen4, key=1, label=i, style=dashed];
m47_34 -> m47_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_34 -> m47_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_34 -> m47_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m47_38 -> m47_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m47_41 -> m47_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m47_40 -> m47_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_59 -> m47_12  [color=green, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_59 -> m47_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.SucceededJobs", style=dashed];
m47_94 -> m47_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m47_105 -> m47_72  [color=darkseagreen4, key=1, label=number, style=dashed];
}
