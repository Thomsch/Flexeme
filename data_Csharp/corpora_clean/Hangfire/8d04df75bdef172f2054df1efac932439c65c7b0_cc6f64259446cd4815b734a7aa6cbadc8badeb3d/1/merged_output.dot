digraph  {
m0_5 [cluster="Unk.GetTestRunner", file="ApplyStateContextFacts.cs", label="Entry Unk.GetTestRunner", span=""];
m0_25 [cluster="Unk.OnScenarioStart", file="ApplyStateContextFacts.cs", label="Entry Unk.OnScenarioStart", span=""];
m0_29 [cluster="Unk.CollectScenarioErrors", file="ApplyStateContextFacts.cs", label="Entry Unk.CollectScenarioErrors", span=""];
m0_21 [cluster="Unk.OnScenarioEnd", file="ApplyStateContextFacts.cs", label="Entry Unk.OnScenarioEnd", span=""];
m0_136 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", span="351-351"];
m0_137 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.In<TestJob>(TimeSpan delay, object args)` method should schedule a j'' +\r\n                    ''ob of the given type'', ((string[])(null)))", span="353-354"];
m0_138 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="356-356"];
m0_139 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="358-358"];
m0_140 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.In<TestJob>(TimeSpan.FromDays(1), new { ArticleId = 3 })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="360-360"];
m0_141 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="362-364"];
m0_142 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="table3.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''3''})", span="365-367"];
m0_143 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''the \'TestJob\' should be scheduled for tomorrow with the following arguments:'', ((string)(null)), table3, ''Then '')", span="369-369"];
m0_144 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="371-371"];
m0_145 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayObjectArgsMethodShouldScheduleAJobOfTheGivenType()", span="351-351"];
m0_0 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m0_3 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ApplyStateContextFacts.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m0_1 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="ApplyStateContextFacts.cs", label="18: testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m0_2 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", color=red, community=0, file="ApplyStateContextFacts.cs", label="18: TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client'', ''\r\n  As a Developer, I want to define and create jobs.'', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m0_4 [cluster="HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m0_9 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.Resolve(System.Type)", file="ApplyStateContextFacts.cs", label="Exit Hangfire.AspNetCore.AspNetCoreJobActivatorScope.Resolve(System.Type)", span="32-32"];
m0_10 [cluster="Unk.GetRequiredService", color=red, community=0, file="ApplyStateContextFacts.cs", label="18: Entry Unk.GetRequiredService", span=""];
m0_11 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.DisposeScope()", color=red, community=0, file="ApplyStateContextFacts.cs", label="18: Entry Hangfire.AspNetCore.AspNetCoreJobActivatorScope.DisposeScope()", span="37-37"];
m0_12 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.DisposeScope()", file="ApplyStateContextFacts.cs", label="_serviceScope.Dispose()", span="39-39"];
m0_93 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", span="238-238"];
m0_94 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Passing the null type argument to the `Perform.Async(Type type, object args)` met'' +\r\n                    ''hod should cause exception'', ((string[])(null)))", span="240-241"];
m0_95 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="243-243"];
m0_96 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="245-245"];
m0_97 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.Async(null, new { ArticleId = 3 })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="247-247"];
m0_98 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="249-249"];
m0_99 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="251-251"];
m0_100 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeObjectArgsMethodShouldCauseException()", span="238-238"];
m0_101 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", span="258-258"];
m0_102 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.Async<TJob>()` method should enqueue a job to its actual queue'', ((string[])(null)))", span="260-260"];
m0_103 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="262-262"];
m0_104 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="264-264"];
m0_105 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="ApplyStateContextFacts.cs", label="testRunner.Given(''the following job type:'', ''[Queue(\''critical\'')]\r\npublic class CriticalQueueJob : BackgroundJob\r\n{\r\n    public'' +\r\n                    '' override void Perform()\r\n    {\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="267-268"];
m0_106 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.Async<CriticalQueueJob>()`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="270-270"];
m0_107 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''the argumentless \'CriticalQueueJob\' should be added to the \'critical\' queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="272-272"];
m0_108 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="274-274"];
m0_109 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobToItsActualQueue()", span="258-258"];
m0_58 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", span="137-137"];
m0_59 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When one or more of the job arguments can not be converted using the custom TypeC'' +\r\n                    ''onverter, an exception should be raised'', ((string[])(null)))", span="139-140"];
m0_60 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="142-142"];
m0_61 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="144-144"];
m0_62 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="ApplyStateContextFacts.cs", label="testRunner.Given(''the custom types:'', @''[TypeConverter(typeof(CustomTypeConverter))\r\npublic class CustomType {}\r\n\r\npublic class CustomTypeConverter : TypeConverter\r\n{\r\n    public override object ConvertTo(ITypeDescriptorContext context, CultureInfo culture, object value, Type destinationType)\r\n    {\r\n        throw new NotSupportedException();\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="147-156"];
m0_63 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.Async<TestJob>(new { Author = new CustomType() })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="158-158"];
m0_64 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''a \'System.InvalidOperationException\' should be thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="160-160"];
m0_65 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="162-162"];
m0_66 [cluster="HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.WhenOneOrMoreOfTheJobArgumentsCanNotBeConvertedUsingTheCustomTypeConverterAnExceptionShouldBeRaised()", span="137-137"];
m0_110 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", span="281-281"];
m0_111 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the queue name should contain only lowercase letters, digits and underscores'', ((string[])(null)))", span="283-283"];
m0_112 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="285-285"];
m0_113 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="287-287"];
m0_114 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="ApplyStateContextFacts.cs", label="testRunner.Given(''the following job type:'', ''[Queue(\'' $InvalidQueue\'')]\r\npublic class InvalidQueueJob : BackgroundJob\r\n{\r\n    p'' +\r\n                    ''ublic override void Perform()\r\n    {\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="290-291"];
m0_115 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.Async<InvalidQueueJob>()`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="293-293"];
m0_116 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''a \'System.InvalidOperationException\' should be thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="295-295"];
m0_117 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="297-297"];
m0_118 [cluster="HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.TheQueueNameShouldContainOnlyLowercaseLettersDigitsAndUnderscores()", span="281-281"];
m0_22 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m0_23 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ApplyStateContextFacts.cs", label="testRunner.OnScenarioStart(scenarioInfo)", span="63-63"];
m0_24 [cluster="HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo)", span="61-61"];
m0_75 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", span="189-189"];
m0_76 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Passing the null type argument to the `Perform.Async(Type type)` method should ca'' +\r\n                    ''use exception'', ((string[])(null)))", span="191-192"];
m0_77 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="194-194"];
m0_78 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="196-196"];
m0_79 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.Async(null)`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="198-198"];
m0_80 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''a \'System.ArgumentNullException\' should be thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="200-200"];
m0_81 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="202-202"];
m0_82 [cluster="HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.PassingTheNullTypeArgumentToThePerform_AsyncTypeTypeMethodShouldCauseException()", span="189-189"];
m0_26 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioCleanup()", span="66-66"];
m0_27 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="ApplyStateContextFacts.cs", label="testRunner.CollectScenarioErrors()", span="68-68"];
m0_28 [cluster="HangFire.Tests.ClientFeature.ScenarioCleanup()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioCleanup()", span="66-66"];
m0_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="ApplyStateContextFacts.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m0_83 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", span="210-210"];
m0_84 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.Async(Type type, object args)` method should enqueue job of the give'' +\r\n                    ''n type'', ((string[])(null)))", span="212-213"];
m0_85 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="215-215"];
m0_86 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="217-217"];
m0_87 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.Async(typeof(TestJob), new { ArticleId = 3 })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="219-219"];
m0_88 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="221-223"];
m0_89 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="table2.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''3''})", span="224-226"];
m0_90 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''the \'TestJob\' should be added to the default queue with the following arguments:'', ((string)(null)), table2, ''Then '')", span="228-228"];
m0_91 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="230-230"];
m0_92 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeObjectArgsMethodShouldEnqueueJobOfTheGivenType()", span="210-210"];
m0_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ApplyStateContextFacts.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m0_8 [cluster="Unk.OnFeatureStart", color=green, community=0, file="ApplyStateContextFacts.cs", label="18: Entry Unk.OnFeatureStart", span=""];
m0_13 [cluster="Hangfire.AspNetCore.AspNetCoreJobActivatorScope.DisposeScope()", file="ApplyStateContextFacts.cs", label="Exit Hangfire.AspNetCore.AspNetCoreJobActivatorScope.DisposeScope()", span="37-37"];
m0_14 [cluster="Unk.Dispose", file="ApplyStateContextFacts.cs", label="Entry Unk.Dispose", span=""];
m0_15 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="ApplyStateContextFacts.cs", label="Hangfire.AspNetCore.AspNetCoreJobActivatorScope", span=""];
m0_16 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="ApplyStateContextFacts.cs", label="HangFire.Tests.ClientFeature.FeatureSetup(null)", span="51-51"];
m0_17 [cluster="HangFire.Tests.ClientFeature.TestInitialize()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.TestInitialize()", span="46-46"];
m0_18 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ScenarioTearDown()", span="56-56"];
m0_19 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="ApplyStateContextFacts.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m0_20 [cluster="HangFire.Tests.ClientFeature.ScenarioTearDown()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ScenarioTearDown()", span="56-56"];
m0_43 [cluster="Unk.When", file="ApplyStateContextFacts.cs", label="Entry Unk.When", span=""];
m0_146 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", span="379-379"];
m0_147 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.In(TimeSpan delay, Type type)` method should schedule a job of the g'' +\r\n                    ''iven type'', ((string[])(null)))", span="381-382"];
m0_148 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="384-384"];
m0_149 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="386-386"];
m0_150 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.In(TimeSpan.FromDays(1), typeof(TestJob))`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="388-388"];
m0_151 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''the argumentless \'TestJob\' should be scheduled for tomorrow'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="390-390"];
m0_152 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="392-392"];
m0_153 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeMethodShouldScheduleAJobOfTheGivenType()", span="379-379"];
m0_45 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", span="106-106"];
m0_46 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.Async<TJob>(object args)` method should enqueue job with the given a'' +\r\n                    ''rguments'', ((string[])(null)))", span="108-109"];
m0_47 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="111-111"];
m0_48 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="113-113"];
m0_49 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.Async<TestJob>(new { ArticleId = 3, Author = \''odinserj\'' })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="115-115"];
m0_50 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="117-119"];
m0_51 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="table1.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''3''})", span="120-122"];
m0_52 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="table1.AddRow(new string[] {\r\n                        ''Author'',\r\n                        ''odinserj''})", span="123-125"];
m0_53 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''the \'TestJob\' should be added to the default queue with the following arguments:'', ((string)(null)), table1, ''Then '')", span="127-127"];
m0_54 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="129-129"];
m0_55 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_AsyncTJobObjectArgsMethodShouldEnqueueJobWithTheGivenArguments()", span="106-106"];
m0_57 [cluster="Unk.AddRow", file="ApplyStateContextFacts.cs", label="Entry Unk.AddRow", span=""];
m0_67 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", span="169-169"];
m0_68 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.Async(Type type)` method should enqueue a job of the given type'', ((string[])(null)))", span="171-171"];
m0_69 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="173-173"];
m0_70 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="175-175"];
m0_71 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.Async(typeof(TestJob))`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="177-177"];
m0_72 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''the argumentless \'TestJob\' should be added to the default queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="179-179"];
m0_73 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="181-181"];
m0_74 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_AsyncTypeTypeMethodShouldEnqueueAJobOfTheGivenType()", span="169-169"];
m0_42 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ApplyStateContextFacts.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m0_44 [cluster="Unk.Then", file="ApplyStateContextFacts.cs", label="Entry Unk.Then", span=""];
m0_30 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.FeatureBackground()", span="71-71"];
m0_31 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="ApplyStateContextFacts.cs", label="testRunner.Given(''the following job type:'', ''public class TestJob : BackgroundJob\r\n{\r\n    public int ArticleId { get; set; }\r\n'' +\r\n                    ''    public string Author { get; set; }\r\n\r\n    public override void Perform()\r\n  '' +\r\n                    ''  {\r\n    }\r\n}          '', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="76-78"];
m0_32 [cluster="HangFire.Tests.ClientFeature.FeatureBackground()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.FeatureBackground()", span="71-71"];
m0_33 [cluster="Unk.Given", file="ApplyStateContextFacts.cs", label="Entry Unk.Given", span=""];
m0_128 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", span="330-330"];
m0_129 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.In<TestJob>(TimeSpan delay)` method should schedule a job of the giv'' +\r\n                    ''en type'', ((string[])(null)))", span="332-333"];
m0_130 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="335-335"];
m0_131 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="337-337"];
m0_132 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.In<TestJob>(TimeSpan.FromDays(1))`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="339-339"];
m0_133 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''the argumentless \'TestJob\' should be scheduled for tomorrow'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="341-341"];
m0_134 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="343-343"];
m0_135 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_InTestJobTimeSpanDelayMethodShouldScheduleAJobOfTheGivenType()", span="330-330"];
m0_56 [cluster="TechTalk.SpecFlow.Table.cstr", file="ApplyStateContextFacts.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m0_154 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", span="400-400"];
m0_155 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''The `Perform.In(TimeSpan delay, Type type, object args)` method should schedule a'' +\r\n                    '' job of the given type'', ((string[])(null)))", span="402-403"];
m0_156 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="405-405"];
m0_157 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="407-407"];
m0_158 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.In(TimeSpan.FromDays(1), typeof(TestJob), new { ArticleId = 3'' +\r\n                    '' })`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="409-410"];
m0_159 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Name'',\r\n                        ''Value''})", span="412-414"];
m0_160 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="table4.AddRow(new string[] {\r\n                        ''ArticleId'',\r\n                        ''3''})", span="415-417"];
m0_161 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''the \'TestJob\' should be scheduled for tomorrow with the following arguments:'', ((string)(null)), table4, ''Then '')", span="419-419"];
m0_162 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="421-421"];
m0_163 [cluster="HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_InTimeSpanDelayTypeTypeObjectArgsMethodShouldScheduleAJobOfTheGivenType()", span="400-400"];
m0_119 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", span="305-305"];
m0_120 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''if the QueueAttribute contains an empty or null string, then the actual queue sho'' +\r\n                    ''uld be the default queue'', ((string[])(null)))", span="307-308"];
m0_121 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="310-310"];
m0_122 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="312-312"];
m0_123 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="ApplyStateContextFacts.cs", label="testRunner.Given(''the following job type:'', ''[Queue(\''\'')]\r\npublic class EmptyQueueJob : BackgroundJob\r\n{\r\n    public override v'' +\r\n                    ''oid Perform()\r\n    {\r\n    }\r\n}'', ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="315-316"];
m0_124 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.Async<EmptyQueueJob>()`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="318-318"];
m0_125 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''the argumentless \'EmptyQueueJob\' should be added to the default queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="320-320"];
m0_126 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="322-322"];
m0_127 [cluster="HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.IfTheQueueAttributeContainsAnEmptyOrNullStringThenTheActualQueueShouldBeTheDefaultQueue()", span="305-305"];
m0_34 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Entry HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", span="86-86"];
m0_35 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''the `Perform.Async<TJob>()` method should enqueue a job of the given type'', ((string[])(null)))", span="88-88"];
m0_36 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="90-90"];
m0_37 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.FeatureBackground()", span="92-92"];
m0_38 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.When(''I call the `Perform.Async<TestJob>()`'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="94-94"];
m0_39 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="testRunner.Then(''the argumentless \'TestJob\' should be added to the default queue'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="96-96"];
m0_40 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="this.ScenarioCleanup()", span="98-98"];
m0_41 [cluster="HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", file="ApplyStateContextFacts.cs", label="Exit HangFire.Tests.ClientFeature.ThePerform_AsyncTJobMethodShouldEnqueueAJobOfTheGivenType()", span="86-86"];
m0_164 [file="ApplyStateContextFacts.cs", label="HangFire.Tests.ClientFeature", span=""];
m1_7 [cluster="Mock<IState>.cstr", file="ApplyStateContextMock.cs", label="Entry Mock<IState>.cstr", span=""];
m1_8 [cluster="System.Lazy<T>.Lazy(System.Func<T>)", file="ApplyStateContextMock.cs", label="Entry System.Lazy<T>.Lazy(System.Func<T>)", span="0-0"];
m1_6 [cluster="Hangfire.Core.Tests.StateContextMock.StateContextMock()", file="ApplyStateContextMock.cs", label="Entry Hangfire.Core.Tests.StateContextMock.StateContextMock()", span="12-12"];
m1_0 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs", label="Entry Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="11-11"];
m1_1 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs", label="StateContextValue = new StateContextMock()", span="13-13"];
m1_2 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs", label="NewStateValue = new Mock<IState>().Object", span="14-14"];
m1_3 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs", label="OldStateValue = null", span="15-15"];
m1_4 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", color=red, community=0, file="ApplyStateContextMock.cs", label="27: _context = new Lazy<ApplyStateContext>(\r\n                () => new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue))", span="17-21"];
m1_5 [cluster="Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", file="ApplyStateContextMock.cs", label="Exit Hangfire.Core.Tests.ApplyStateContextMock.ApplyStateContextMock()", span="11-11"];
m1_9 [cluster="lambda expression", file="ApplyStateContextMock.cs", label="Entry lambda expression", span="18-21"];
m1_10 [cluster="lambda expression", color=red, community=0, file="ApplyStateContextMock.cs", label="50: new ApplyStateContext(\r\n                    StateContextValue.Object,\r\n                    NewStateValue,\r\n                    OldStateValue)", span="18-21"];
m1_11 [cluster="lambda expression", file="ApplyStateContextMock.cs", label="Exit lambda expression", span="18-21"];
m1_12 [cluster="Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", file="ApplyStateContextMock.cs", label="Entry Hangfire.States.ApplyStateContext.ApplyStateContext(Hangfire.States.StateContext, Hangfire.States.IState, string)", span="23-23"];
m1_13 [file="ApplyStateContextMock.cs", label="Hangfire.Core.Tests.ApplyStateContextMock", span=""];
m2_40 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="ElectStateContext.cs", label="var context = new WorkerContext(_sharedContext, 1)", span="62-62"];
m2_54 [cluster="Unk.Verify", file="ElectStateContext.cs", label="Entry Unk.Verify", span=""];
m2_26 [cluster="lambda expression", file="ElectStateContext.cs", label="Entry lambda expression", span="45-45"];
m2_10 [cluster="HangFire.Server.Worker.Start()", file="ElectStateContext.cs", label="Exit HangFire.Server.Worker.Start()", span="51-51"];
m2_89 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="ElectStateContext.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m2_83 [cluster="lambda expression", file="ElectStateContext.cs", label="Entry lambda expression", span="93-93"];
m2_41 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="ElectStateContext.cs", label="var worker = manager.CreateWorkerRunner(context)", span="64-64"];
m2_12 [cluster="Mock<WorkerManager>.cstr", file="ElectStateContext.cs", label="Entry Mock<WorkerManager>.cstr", span=""];
m2_34 [cluster="HangFire.Server.Worker.DoWork()", file="ElectStateContext.cs", label="_logger.DebugFormat(''Worker #{0} has been stopped.'', _context.WorkerNumber)", span="125-125"];
m2_82 [cluster="lambda expression", file="ElectStateContext.cs", label="Exit lambda expression", span="92-92"];
m2_47 [cluster="lambda expression", file="ElectStateContext.cs", label="payload == null", span="102-102"];
m2_48 [cluster="lambda expression", file="ElectStateContext.cs", label="_cts.Cancel()", span="104-104"];
m2_49 [cluster="lambda expression", file="ElectStateContext.cs", label="return;", span="105-105"];
m2_50 [cluster="lambda expression", file="ElectStateContext.cs", label="PerformJob(connection, payload)", span="108-108"];
m2_51 [cluster="lambda expression", file="ElectStateContext.cs", label="connection.CompleteJob(payload)", span="115-115"];
m2_70 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="var arguments = JobHelper.FromJson<string[]>(payload.Arguments)", span="174-174"];
m2_27 [cluster="lambda expression", file="ElectStateContext.cs", label="new WorkerManager(null, WorkerCount)", span="45-45"];
m2_0 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="ElectStateContext.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18"];
m2_1 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", color=green, community=0, file="ElectStateContext.cs", label="23: _sharedContext = new SharedWorkerContext(\r\n                ''server'',\r\n                new[] { ''default'' },\r\n                new Mock<JobStorage>().Object,\r\n                new Mock<IJobPerformanceProcess>().Object,\r\n                new Mock<JobActivator>().Object,\r\n                new Mock<IStateMachineFactory>().Object)", span="20-26"];
m2_2 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="ElectStateContext.cs", label="_workerRunners = new[]\r\n            {\r\n                new Mock<IServerComponentRunner>(), \r\n                new Mock<IServerComponentRunner>()\r\n            }", span="28-32"];
m2_3 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", color=green, community=0, file="ElectStateContext.cs", label="23: _manager = new Mock<WorkerManager>(\r\n                _sharedContext, WorkerCount)", span="34-35"];
m2_4 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="ElectStateContext.cs", label="_manager.Setup(x => x.CreateWorkerRunner(It.IsNotNull<WorkerContext>()))\r\n                .Returns((WorkerContext context) => _workerRunners[context.WorkerNumber - 1].Object)", span="37-38"];
m2_80 [cluster="lambda expression", file="ElectStateContext.cs", label="Entry lambda expression", span="92-92"];
m2_5 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", file="ElectStateContext.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.WorkerManagerFacts()", span="18-18"];
m2_79 [cluster="Unk.Dispose", file="ElectStateContext.cs", label="Entry Unk.Dispose", span=""];
m2_84 [cluster="lambda expression", file="ElectStateContext.cs", label="x.Dispose()", span="93-93"];
m2_17 [cluster="lambda expression", file="ElectStateContext.cs", label="Exit lambda expression", span="37-37"];
m2_13 [cluster="Unk.Setup", file="ElectStateContext.cs", label="Entry Unk.Setup", span=""];
m2_14 [cluster="Unk.Returns", file="ElectStateContext.cs", label="Entry Unk.Returns", span=""];
m2_15 [cluster="lambda expression", file="ElectStateContext.cs", label="Entry lambda expression", span="37-37"];
m2_16 [cluster="lambda expression", file="ElectStateContext.cs", label="x.CreateWorkerRunner(It.IsNotNull<WorkerContext>())", span="37-37"];
m2_74 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="state = new SucceededState()", span="183-183"];
m2_75 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label=Exception, span="185-185"];
m2_76 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="state = new FailedState(ex)\r\n                {\r\n                    Reason = ''An exception occured during performance of the job''\r\n                }", span="187-190"];
m2_77 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="stateMachine.ChangeState(payload.Id, state, ProcessingState.Name)", span="193-193"];
m2_78 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="Exit HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", span="135-135"];
m2_11 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="ElectStateContext.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m2_18 [cluster="HangFire.Server.Worker.Dispose()", file="ElectStateContext.cs", label="Entry HangFire.Server.Worker.Dispose()", span="67-67"];
m2_23 [cluster="HangFire.Server.Worker.Dispose()", file="ElectStateContext.cs", label="_thread = null", span="77-77"];
m2_24 [cluster="HangFire.Server.Worker.Dispose()", file="ElectStateContext.cs", label="_cts.Dispose()", span="80-80"];
m2_25 [cluster="HangFire.Server.Worker.Dispose()", file="ElectStateContext.cs", label="Exit HangFire.Server.Worker.Dispose()", span="67-67"];
m2_57 [cluster="lambda expression", file="ElectStateContext.cs", label="Exit lambda expression", span="74-74"];
m2_6 [cluster="SharedWorkerContext.cstr", file="ElectStateContext.cs", label="Entry SharedWorkerContext.cstr", span=""];
m2_86 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="ElectStateContext.cs", label="HangFire.Core.Tests.Server.WorkerManagerFacts", span=""];
m2_28 [cluster="lambda expression", file="ElectStateContext.cs", label="Exit lambda expression", span="45-45"];
m2_29 [cluster="HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", file="ElectStateContext.cs", label="Entry HangFire.Server.WorkerManager.WorkerManager(HangFire.Server.SharedWorkerContext, int)", span="30-30"];
m2_30 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="ElectStateContext.cs", label="Entry HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49"];
m2_31 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", color=green, community=0, file="ElectStateContext.cs", label="24: var exception = Assert.Throws<ArgumentOutOfRangeException>(\r\n                () => new WorkerManager(\r\n                    _sharedContext, 0))", span="51-53"];
m2_33 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="ElectStateContext.cs", label="Exit HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", span="49-49"];
m2_35 [cluster="lambda expression", file="ElectStateContext.cs", label="Entry lambda expression", span="52-53"];
m2_32 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.Ctor_ThrowsAnException_WhenWorkerCountLessOrEqualToZero()", file="ElectStateContext.cs", label="Assert.Equal(''workerCount'', exception.ParamName)", span="55-55"];
m2_36 [cluster="lambda expression", color=green, community=0, file="ElectStateContext.cs", label="24: new WorkerManager(\r\n                    _sharedContext, 0)", span="52-53"];
m2_37 [cluster="lambda expression", file="ElectStateContext.cs", label="Exit lambda expression", span="52-53"];
m2_87 [cluster="HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", file="ElectStateContext.cs", label="Entry HangFire.Server.Performing.JobPerformer.PerformJob(HangFire.Server.Performing.PerformContext, HangFire.Server.Performing.IJobPerformStrategy)", span="48-48"];
m2_55 [cluster="lambda expression", file="ElectStateContext.cs", label="Entry lambda expression", span="74-74"];
m2_88 [cluster="HangFire.States.SucceededState.SucceededState()", file="ElectStateContext.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="23-23"];
m2_7 [cluster="HangFire.Server.Worker.Start()", file="ElectStateContext.cs", label="Entry HangFire.Server.Worker.Start()", span="51-51"];
m2_39 [cluster="HangFire.Core.Tests.Server.WorkerManagerFacts.CreateWorkerRunner_CreatesAWorkerRunnerWithGivenParameters()", file="ElectStateContext.cs", label="var manager = new WorkerManager(_sharedContext, WorkerCount)", span="61-61"];
m2_8 [cluster="Mock<IJobPerformanceProcess>.cstr", file="ElectStateContext.cs", label="Entry Mock<IJobPerformanceProcess>.cstr", span=""];
m2_9 [cluster="Mock<JobActivator>.cstr", file="ElectStateContext.cs", label="Entry Mock<JobActivator>.cstr", span=""];
m2_53 [cluster="Unk.Execute", file="ElectStateContext.cs", label="Entry Unk.Execute", span=""];
m2_38 [cluster="Unk.DebugFormat", file="ElectStateContext.cs", label="Entry Unk.DebugFormat", span=""];
m2_42 [cluster="Unk.Fatal", file="ElectStateContext.cs", label="Entry Unk.Fatal", span=""];
m2_43 [cluster="lambda expression", file="ElectStateContext.cs", label="Entry lambda expression", span="95-120"];
m2_46 [cluster="lambda expression", file="ElectStateContext.cs", label="var payload = fetcher.DequeueJob(_cts.Token)", span="100-100"];
m2_44 [cluster="lambda expression", file="ElectStateContext.cs", label="var connection = _storage.GetConnection()", span="97-97"];
m2_85 [cluster="lambda expression", file="ElectStateContext.cs", label="Exit lambda expression", span="93-93"];
m2_45 [cluster="lambda expression", file="ElectStateContext.cs", label="var fetcher = connection.CreateFetcher(_context.QueueNames)", span="99-99"];
m2_52 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="ElectStateContext.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m2_21 [cluster="HangFire.Server.Worker.Dispose()", file="ElectStateContext.cs", label="_thread != null", span="74-74"];
m2_20 [cluster="HangFire.Server.Worker.Dispose()", file="ElectStateContext.cs", label="Stop()", span="71-71"];
m2_22 [cluster="HangFire.Server.Worker.Dispose()", file="ElectStateContext.cs", label="_thread.Join()", span="76-76"];
m2_59 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="return;", span="139-139"];
m2_67 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="jobMethod.OldFormat", span="162-162"];
m2_71 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="performStrategy = new JobAsMethodPerformStrategy(\r\n                        jobMethod, arguments)", span="176-177"];
m2_56 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", span="135-135"];
m2_61 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="var processingState = new ProcessingState(_context.ServerName)", span="144-144"];
m2_60 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="var stateMachine = new StateMachine(connection)", span="142-142"];
m2_69 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="performStrategy = new JobAsClassPerformStrategy(\r\n                        jobMethod, arguments)", span="169-170"];
m2_68 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="var arguments = JobHelper.FromJson<Dictionary<string, string>>(\r\n                        payload.Args)", span="166-167"];
m2_73 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="_context.Performer.PerformJob(performContext, performStrategy)", span="181-181"];
m2_72 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="var performContext = new PerformContext(_context, connection, payload.Id, jobMethod)", span="180-180"];
m2_81 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="ElectStateContext.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m2_58 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="payload == null", span="137-137"];
m2_19 [cluster="HangFire.Server.Worker.Dispose()", file="ElectStateContext.cs", label="!_stopSent", span="69-69"];
m2_62 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="!stateMachine.ChangeState(payload.Id, processingState, EnqueuedState.Name, ProcessingState.Name)", span="145-145"];
m2_63 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="return;", span="147-147"];
m2_64 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="JobState state", span="155-155"];
m2_65 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="IJobPerformStrategy performStrategy", span="159-159"];
m2_66 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Storage.IStorageConnection, HangFire.Server.JobPayload)", file="ElectStateContext.cs", label="var jobMethod = JobMethod.Deserialize(payload.InvocationData)", span="161-161"];
m2_90 [file="ElectStateContext.cs", label="HangFire.Server.Worker", span=""];
m3_25 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Equal(''State'', context.CurrentState)", span="48-48"];
m3_29 [cluster="Unk.Same", file="ElectStateContextFacts.cs", label="Entry Unk.Same", span=""];
m3_9 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", file="ElectStateContextFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureTearDown()", span="39-39"];
m3_26 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Same(_connection.Object, context.Connection)", span="49-49"];
m3_27 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", span="40-40"];
m3_28 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="117-117"];
m3_21 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="42-42"];
m3_15 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="ElectStateContextFacts.cs", label="((TechTalk.SpecFlow.FeatureContext.Current != null) \r\n                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != ''Client filters''))", span="48-49"];
m3_7 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ElectStateContextFacts.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m3_55 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="117-117"];
m3_56 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="this.FeatureBackground()", span="119-119"];
m3_58 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="testRunner.And(''the client filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="123-123"];
m3_57 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="121-121"];
m3_59 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleClientFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="125-125"];
m3_48 [cluster="Unk.When", file="ElectStateContextFacts.cs", label="Entry Unk.When", span=""];
m3_52 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="78-79"];
m3_5 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.ElectStateContextFacts()", file="ElectStateContextFacts.cs", label="_candidateState = new Mock<IState>()", span="24-24"];
m3_43 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", file="ElectStateContextFacts.cs", label="testRunner.Then(''the client filter methods were executed in the following order:'', ((string)(null)), table1, ''Then '')", span="102-102"];
m3_44 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", color=green, community=0, file="ElectStateContextFacts.cs", label="22: testRunner.And(''the storage contains the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="104-104"];
m3_45 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", color=green, community=0, file="ElectStateContextFacts.cs", label="28: this.ScenarioCleanup()", span="106-106"];
m3_46 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", color=green, community=0, file="ElectStateContextFacts.cs", label="22: Exit HangFire.Tests.ClientFiltersFeature.ClientFiltersAreExecutedWhenICreateAJob()", span="83-83"];
m3_47 [cluster="TechTalk.SpecFlow.ScenarioInfo.cstr", file="ElectStateContextFacts.cs", label="Entry TechTalk.SpecFlow.ScenarioInfo.cstr", span=""];
m3_14 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="ElectStateContextFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="46-46"];
m3_98 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", span="215-215"];
m3_99 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client filter can handle the exception'', ((string[])(null)))", span="217-217"];
m3_100 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="219-219"];
m3_101 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="this.FeatureBackground()", span="221-221"];
m3_102 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="223-223"];
m3_103 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.And(''the client filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="225-225"];
m3_104 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.And(''the client filter \'third\' that throws an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="227-227"];
m3_105 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="229-229"];
m3_106 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="231-232"];
m3_107 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="table5.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="233-234"];
m3_108 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="table5.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="235-236"];
m3_109 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="table5.AddRow(new string[] {\r\n                        ''third::OnCreating''})", span="237-238"];
m3_110 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="table5.AddRow(new string[] {\r\n                        ''second::OnCreated''})", span="239-240"];
m3_111 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="table5.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="241-242"];
m3_112 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.Then(''the client filter methods were executed in the following order:'', ((string)(null)), table5, ''Then '')", span="244-244"];
m3_113 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.And(''no exception were thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="246-246"];
m3_114 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="this.ScenarioCleanup()", span="248-248"];
m3_115 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterCanHandleTheException()", span="215-215"];
m3_76 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="testRunner.Then(''the storage does not contain the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="163-163"];
m3_77 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="165-166"];
m3_78 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="table3.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="167-168"];
m3_79 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="table3.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="169-170"];
m3_80 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="table3.AddRow(new string[] {\r\n                        ''first::OnCreated (with the canceled flag set)''})", span="171-172"];
m3_81 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="testRunner.And(''only the following client filter methods were executed:'', ((string)(null)), table3, ''And '')", span="174-174"];
m3_71 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="this.FeatureBackground()", span="153-153"];
m3_53 [cluster="Hangfire.Common.JobHelper.ToJson(object)", file="ElectStateContextFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", span="32-32"];
m3_54 [cluster="Unk.SetJobParameter", file="ElectStateContextFacts.cs", label="Entry Unk.SetJobParameter", span=""];
m3_60 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="89-90"];
m3_61 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="x.SetJobParameter(\r\n                JobId, ''Name'', JobHelper.ToJson(null))", span="89-90"];
m3_62 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="89-90"];
m3_63 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", span="94-94"];
m3_64 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="96-96"];
m3_65 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="_connection.Setup(x => x.GetJobParameter(''1'', ''Name''))\r\n                .Returns(JobHelper.ToJson(''Value''))", span="97-98"];
m3_66 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="var value = context.GetJobParameter<string>(''Name'')", span="100-100"];
m3_67 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.GetJobParameter_CallsTheCorrespondingMethod_WithJsonDecodedValue()", file="ElectStateContextFacts.cs", label="Assert.Equal(''Value'', value)", span="102-102"];
m3_30 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="ElectStateContextFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="71-71"];
m3_31 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="ElectStateContextFacts.cs", label="testRunner.Given(''a client'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="75-75"];
m3_32 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureBackground()", file="ElectStateContextFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureBackground()", span="71-71"];
m3_33 [cluster="Unk.Given", file="ElectStateContextFacts.cs", label="Entry Unk.Given", span=""];
m3_84 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="109-109"];
m3_85 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs", label="return new ElectStateContext(\r\n                _stateContext.Object,\r\n                _candidateState.Object,\r\n                ''State'');", span="119-122"];
m3_86 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.CreateContext()", span="117-117"];
m3_87 [cluster="ElectStateContext.cstr", file="ElectStateContextFacts.cs", label="Entry ElectStateContext.cstr", span=""];
m3_88 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ElectStateContextFacts.cs", label="Hangfire.Core.Tests.States.ElectStateContextFacts", span=""];
m3_89 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ElectStateContextFacts.cs", label=context, span=""];
m3_90 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ElectStateContextFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="195-195"];
m3_91 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Method''})", span="197-198"];
m3_92 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ElectStateContextFacts.cs", label="table4.AddRow(new string[] {\r\n                        ''first::OnCreating''})", span="199-200"];
m3_93 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ElectStateContextFacts.cs", label="table4.AddRow(new string[] {\r\n                        ''second::OnCreating''})", span="201-202"];
m3_94 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ElectStateContextFacts.cs", label="table4.AddRow(new string[] {\r\n                        ''first::OnCreated''})", span="203-204"];
m3_95 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ElectStateContextFacts.cs", label="testRunner.Then(''only the following client filter methods were executed:'', ((string)(null)), table4, ''Then '')", span="206-206"];
m3_96 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ElectStateContextFacts.cs", label="this.ScenarioCleanup()", span="208-208"];
m3_97 [cluster="HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", file="ElectStateContextFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientFilterSOnCreatedCouldBeSkippedIfThereWasAnException()", span="183-183"];
m3_22 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Equal(_stateContext.Object.JobId, context.JobId)", span="44-44"];
m3_23 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Equal(_stateContext.Object.Job, context.Job)", span="45-45"];
m3_24 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_CorrectlySetAllProperties()", file="ElectStateContextFacts.cs", label="Assert.Same(_candidateState.Object, context.CandidateState)", span="47-47"];
m3_0 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ElectStateContextFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m3_1 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ElectStateContextFacts.cs", label="testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner()", span="32-32"];
m3_2 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo(''en-US''), ''Client filters'', '''', ProgrammingLanguage.CSharp, new string[] {\r\n                        ''redis''})", span="33-34"];
m3_3 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ElectStateContextFacts.cs", label="testRunner.OnFeatureStart(featureInfo)", span="35-35"];
m3_4 [cluster="HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", file="ElectStateContextFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext)", span="30-30"];
m3_6 [cluster="TechTalk.SpecFlow.FeatureInfo.cstr", file="ElectStateContextFacts.cs", label="Entry TechTalk.SpecFlow.FeatureInfo.cstr", span=""];
m3_13 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="28-28"];
m3_142 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", span="316-316"];
m3_143 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Exception filter can handle the exception'', ((string[])(null)))", span="318-318"];
m3_144 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="320-320"];
m3_145 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="this.FeatureBackground()", span="322-322"];
m3_146 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="324-324"];
m3_147 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.And(''the exception filter \'second\' that handles an exception'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="326-326"];
m3_148 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.And(''the exception filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="328-328"];
m3_149 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="330-330"];
m3_150 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="332-332"];
m3_151 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="334-335"];
m3_152 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="table7.AddRow(new string[] {\r\n                        ''first''})", span="336-337"];
m3_153 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="table7.AddRow(new string[] {\r\n                        ''second''})", span="338-339"];
m3_154 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="table7.AddRow(new string[] {\r\n                        ''third''})", span="340-341"];
m3_155 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.Then(''the following exceptions filter were executed:'', ((string)(null)), table7, ''Then '')", span="343-343"];
m3_156 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="testRunner.And(''no exception were thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="345-345"];
m3_157 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="this.ScenarioCleanup()", span="347-347"];
m3_158 [cluster="HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", file="ElectStateContextFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ExceptionFilterCanHandleTheException()", span="316-316"];
m3_68 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", span="147-147"];
m3_75 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="testRunner.When(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="161-161"];
m3_34 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="57-57"];
m3_35 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="context.CandidateState = null", span="57-57"];
m3_36 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Exit lambda expression", span="57-57"];
m3_37 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="61-61"];
m3_38 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="var context = CreateContext()", span="63-63"];
m3_39 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="var newState = new Mock<IState>()", span="64-64"];
m3_40 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="context.CandidateState = newState.Object", span="66-66"];
m3_41 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="Assert.Same(newState.Object, context.CandidateState)", span="68-68"];
m3_42 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", file="ElectStateContextFacts.cs", label="Exit Hangfire.Core.Tests.States.ElectStateContextFacts.SetCandidateState_SetsTheGivenValue()", span="61-61"];
m3_69 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''When client filter can cancel the creation of the job'', ((string[])(null)))", span="149-149"];
m3_10 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs", label="Entry Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", span="28-28"];
m3_11 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ElectStateContext(\r\n                    _stateContext.Object,\r\n                    null,\r\n                    null))", span="30-34"];
m3_12 [cluster="Hangfire.Core.Tests.States.ElectStateContextFacts.Ctor_ThrowsAnException_WhenCandidateStateIsNull()", file="ElectStateContextFacts.cs", label="Assert.Equal(''candidateState'', exception.ParamName)", span="36-36"];
m3_50 [cluster="lambda expression", file="ElectStateContextFacts.cs", label="Entry lambda expression", span="78-79"];
m3_51 [cluster="Unk.Then", color=green, community=0, file="ElectStateContextFacts.cs", label="22: Entry Unk.Then", span=""];
m3_17 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="ElectStateContextFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.TestInitialize()", span="46-46"];
m3_16 [cluster="HangFire.Tests.ClientFiltersFeature.TestInitialize()", file="ElectStateContextFacts.cs", label="HangFire.Tests.ClientFiltersFeature.FeatureSetup(null)", span="51-51"];
m3_18 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", file="ElectStateContextFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", span="56-56"];
m3_72 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="testRunner.Given(''the client filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="155-155"];
m3_82 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="this.ScenarioCleanup()", span="176-176"];
m3_74 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="testRunner.And(''the client filter \'third\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="159-159"];
m3_73 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="testRunner.And(''the client filter \'second\' that cancels the job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="157-157"];
m3_83 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", span="147-147"];
m3_19 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", file="ElectStateContextFacts.cs", label="testRunner.OnScenarioEnd()", span="58-58"];
m3_49 [cluster="TechTalk.SpecFlow.Table.cstr", file="ElectStateContextFacts.cs", label="Entry TechTalk.SpecFlow.Table.cstr", span=""];
m3_20 [cluster="HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", file="ElectStateContextFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ScenarioTearDown()", span="56-56"];
m3_8 [cluster="Unk.OnFeatureStart", file="ElectStateContextFacts.cs", label="Entry Unk.OnFeatureStart", span=""];
m3_70 [cluster="HangFire.Tests.ClientFiltersFeature.WhenClientFilterCanCancelTheCreationOfTheJob()", file="ElectStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="151-151"];
m3_127 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", span="282-282"];
m3_128 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Multiple exception filters are executed depending on their order'', ((string[])(null)))", span="284-284"];
m3_129 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="286-286"];
m3_130 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="this.FeatureBackground()", span="288-288"];
m3_131 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="testRunner.Given(''the exception filter \'first\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="290-290"];
m3_132 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="testRunner.And(''the exception filter \'second\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="292-292"];
m3_133 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="294-294"];
m3_134 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="296-296"];
m3_135 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {\r\n                        ''Filter''})", span="298-299"];
m3_136 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="table6.AddRow(new string[] {\r\n                        ''first''})", span="300-301"];
m3_137 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="table6.AddRow(new string[] {\r\n                        ''second''})", span="302-303"];
m3_138 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="testRunner.Then(''the client exception filters were executed in the following order:'', ((string)(null)), table6, ''Then '')", span="305-305"];
m3_139 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="testRunner.And(''the CreateJobFailedException was thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="307-307"];
m3_140 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="this.ScenarioCleanup()", span="309-309"];
m3_141 [cluster="HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", file="ElectStateContextFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.MultipleExceptionFiltersAreExecutedDependingOnTheirOrder()", span="282-282"];
m3_116 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="Entry HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="256-256"];
m3_117 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(''Client exception filters are executed when there was an exception while creating '' +\r\n                    ''a job'', ((string[])(null)))", span="258-259"];
m3_118 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="this.ScenarioSetup(scenarioInfo)", span="261-261"];
m3_119 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="this.FeatureBackground()", span="263-263"];
m3_120 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="testRunner.Given(''the exception filter \'test\''', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Given '')", span="265-265"];
m3_121 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="testRunner.When(''there is a buggy filter (for example)'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''When '')", span="267-267"];
m3_122 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="testRunner.And(''I create a job'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="269-269"];
m3_123 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="testRunner.Then(''the client exception filter was executed'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''Then '')", span="271-271"];
m3_124 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="testRunner.And(''the CreateJobFailedException was thrown'', ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), ''And '')", span="273-273"];
m3_125 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="this.ScenarioCleanup()", span="275-275"];
m3_126 [cluster="HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", file="ElectStateContextFacts.cs", label="Exit HangFire.Tests.ClientFiltersFeature.ClientExceptionFiltersAreExecutedWhenThereWasAnExceptionWhileCreatingAJob()", span="256-256"];
m3_159 [file="ElectStateContextFacts.cs", label="HangFire.Tests.ClientFiltersFeature", span=""];
m4_5 [cluster="System.TimeSpan.FromSeconds(double)", file="ScheduledState.cs", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
m4_6 [cluster="System.TimeSpan.FromMinutes(double)", file="ScheduledState.cs", label="Entry System.TimeSpan.FromMinutes(double)", span="0-0"];
m4_0 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ScheduledState.cs", label="Entry HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m4_1 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ScheduledState.cs", label="QueuePollInterval = TimeSpan.FromSeconds(15)", span="26-26"];
m4_2 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ScheduledState.cs", label="InvisibilityTimeout = TimeSpan.FromMinutes(30)", span="27-27"];
m4_3 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ScheduledState.cs", label="PrepareSchemaIfNecessary = true", span="29-29"];
m4_4 [cluster="HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", file="ScheduledState.cs", label="Exit HangFire.SqlServer.SqlServerStorageOptions.SqlServerStorageOptions()", span="24-24"];
m4_7 [file="ScheduledState.cs", label="HangFire.SqlServer.SqlServerStorageOptions", span=""];
m6_10 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="StateContext.cs", label="Validate()", span="55-55"];
m6_12 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StateContext.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_85 [cluster="HangFire.JobActivator.ActivateJob(System.Type)", file="StateContext.cs", label="Entry HangFire.JobActivator.ActivateJob(System.Type)", span="42-42"];
m6_76 [cluster="string.Format(string, object, object)", file="StateContext.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_0 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="StateContext.cs", label="Entry Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", span="24-24"];
m6_1 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StateContext.cs", label="11: connection == null", span="26-26"];
m6_3 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="StateContext.cs", label="String.IsNullOrEmpty(jobId)", span="27-27"];
m6_5 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StateContext.cs", label="11: JobId = jobId", span="29-29"];
m6_7 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="StateContext.cs", label="CreatedAt = createdAt", span="31-31"];
m6_8 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="StateContext.cs", label="Connection = connection", span="33-33"];
m6_9 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="StateContext.cs", label="Exit Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", span="24-24"];
m6_2 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", color=green, community=0, file="StateContext.cs", label="11: throw new ArgumentNullException(''connection'');", span="26-26"];
m6_4 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="StateContext.cs", label="throw new ArgumentNullException(''jobId'');", span="27-27"];
m6_6 [cluster="Hangfire.States.StateContext.StateContext(string, Hangfire.Common.Job, System.DateTime, Hangfire.Storage.IStorageConnection)", file="StateContext.cs", label="Job = job", span="30-30"];
m6_11 [cluster="string.IsNullOrEmpty(string)", file="StateContext.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m6_40 [cluster="System.Collections.IEnumerable.Cast<TResult>()", file="StateContext.cs", label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0"];
m6_74 [cluster="System.Type.IsAssignableFrom(System.Type)", file="StateContext.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m6_145 [cluster="Unk.ConvertToInvariantString", file="StateContext.cs", label="Entry Unk.ConvertToInvariantString", span=""];
m6_87 [cluster="string.Format(string, object)", file="StateContext.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_39 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="StateContext.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m6_36 [cluster="HangFire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", file="StateContext.cs", label="Entry HangFire.Common.ReflectedAttributeCache.GetMethodFilterAttributes(System.Reflection.MethodInfo)", span="38-38"];
m6_88 [cluster="HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="StateContext.cs", label="Entry HangFire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m6_31 [cluster="HangFire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", file="StateContext.cs", label="Entry HangFire.Common.ReflectedAttributeCache.GetTypeFilterAttributes(System.Type)", span="33-33"];
m6_75 [cluster="System.ArgumentException.ArgumentException(string)", file="StateContext.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m6_26 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="Entry HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", span="229-229"];
m6_89 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="var parameters = Method.GetParameters()", span="233-233"];
m6_99 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="value = cancellationToken", span="251-251"];
m6_90 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="var result = new List<object>(Arguments.Length)", span="234-234"];
m6_92 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="i < parameters.Length", span="236-236"];
m6_93 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="var parameter = parameters[i]", span="238-238"];
m6_91 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="var i = 0", span="236-236"];
m6_102 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="result.Add(value)", span="259-259"];
m6_104 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="return result.ToArray();", span="262-262"];
m6_94 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="var argument = Arguments[i]", span="239-239"];
m6_103 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="i++", span="236-236"];
m6_96 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="parameter.ParameterType == typeof(object)", span="243-243"];
m6_98 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="typeof (IJobCancellationToken).IsAssignableFrom(parameter.ParameterType)", span="249-249"];
m6_100 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="var converter = TypeDescriptor.GetConverter(parameter.ParameterType)", span="255-255"];
m6_95 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="object value", span="241-241"];
m6_97 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="value = argument", span="247-247"];
m6_101 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="value = converter.ConvertFromInvariantString(argument)", span="256-256"];
m6_105 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label=Exception, span="264-264"];
m6_106 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during arguments deserialization.'',\r\n                    ex);", span="266-268"];
m6_107 [cluster="HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", file="StateContext.cs", label="Exit HangFire.Common.Job.DeserializeArguments(HangFire.IJobCancellationToken)", span="229-229"];
m6_146 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateContext.cs", label="Entry HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", span="339-339"];
m6_147 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateContext.cs", label="Debug.Assert(expression != null)", span="341-341"];
m6_148 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateContext.cs", label="var constantExpression = expression as ConstantExpression", span="343-343"];
m6_151 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateContext.cs", label="return CachedExpressionCompiler.Evaluate(expression);", span="350-350"];
m6_149 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateContext.cs", label="constantExpression != null", span="345-345"];
m6_150 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateContext.cs", label="return constantExpression.Value;", span="347-347"];
m6_152 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateContext.cs", label="Exit HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", span="339-339"];
m6_25 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateContext.cs", label="Entry HangFire.Common.Job.Activate(HangFire.JobActivator)", span="207-207"];
m6_78 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateContext.cs", label="var instance = activator.ActivateJob(Type)", span="211-211"];
m6_79 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateContext.cs", label="instance == null", span="213-213"];
m6_81 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateContext.cs", label="return instance;", span="219-219"];
m6_80 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateContext.cs", label="throw new InvalidOperationException(\r\n                        String.Format(''JobActivator returned NULL instance of the '{0}' type.'', Type));", span="215-216"];
m6_82 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateContext.cs", label=Exception, span="221-221"];
m6_83 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateContext.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during job activation.'',\r\n                    ex);", span="223-225"];
m6_84 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateContext.cs", label="Exit HangFire.Common.Job.Activate(HangFire.JobActivator)", span="207-207"];
m6_139 [cluster="System.Diagnostics.Debug.Assert(bool)", file="StateContext.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m6_141 [cluster="Unk.ToArray", file="StateContext.cs", label="Entry Unk.ToArray", span=""];
m6_86 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="StateContext.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m6_109 [cluster="System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", file="StateContext.cs", label="Entry System.ComponentModel.TypeDescriptor.GetConverter(System.Type)", span="0-0"];
m6_119 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="StateContext.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m6_120 [cluster="HangFire.Common.Job.Dispose(object)", file="StateContext.cs", label="Entry HangFire.Common.Job.Dispose(object)", span="294-294"];
m6_121 [cluster="HangFire.Common.Job.Dispose(object)", file="StateContext.cs", label="var disposable = instance as IDisposable", span="298-298"];
m6_122 [cluster="HangFire.Common.Job.Dispose(object)", file="StateContext.cs", label="disposable != null", span="299-299"];
m6_123 [cluster="HangFire.Common.Job.Dispose(object)", file="StateContext.cs", label="disposable.Dispose()", span="301-301"];
m6_124 [cluster="HangFire.Common.Job.Dispose(object)", file="StateContext.cs", label=Exception, span="304-304"];
m6_125 [cluster="HangFire.Common.Job.Dispose(object)", file="StateContext.cs", label="throw new JobPerformanceException(\r\n                    ''Job has been performed, but an exception occurred during disposal.'',\r\n                    ex);", span="306-308"];
m6_126 [cluster="HangFire.Common.Job.Dispose(object)", file="StateContext.cs", label="Exit HangFire.Common.Job.Dispose(object)", span="294-294"];
m6_112 [cluster="System.Collections.Generic.List<T>.ToArray()", file="StateContext.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m6_49 [cluster="System.NotSupportedException.NotSupportedException(string)", file="StateContext.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m6_27 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="StateContext.cs", label="Entry HangFire.Common.Job.InvokeMethod(object, object[])", span="272-272"];
m6_113 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="StateContext.cs", label="Method.Invoke(instance, deserializedArguments)", span="276-276"];
m6_114 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="StateContext.cs", label=TargetInvocationException, span="278-278"];
m6_115 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="StateContext.cs", label="ex.InnerException is OperationCanceledException", span="280-280"];
m6_116 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="StateContext.cs", label="throw ex.InnerException;", span="285-285"];
m6_117 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="StateContext.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occurred during performance of the job.'',\r\n                    ex.InnerException);", span="288-290"];
m6_118 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="StateContext.cs", label="Exit HangFire.Common.Job.InvokeMethod(object, object[])", span="272-272"];
m6_32 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="StateContext.cs", label="Entry HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="103-103"];
m6_37 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="StateContext.cs", label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="105-107"];
m6_38 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="StateContext.cs", label="Exit HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="103-103"];
m6_33 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="StateContext.cs", label="Entry HangFire.Common.Job.GetMethodFilterAttributes(bool)", span="96-96"];
m6_34 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="StateContext.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="98-100"];
m6_35 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="StateContext.cs", label="Exit HangFire.Common.Job.GetMethodFilterAttributes(bool)", span="96-96"];
m6_140 [cluster="Unk.Select", file="StateContext.cs", label="Entry Unk.Select", span=""];
m6_144 [cluster="Unk.GetConverter", file="StateContext.cs", label="Entry Unk.GetConverter", span=""];
m6_50 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="Entry HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="312-312"];
m6_128 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="Debug.Assert(callExpression != null)", span="314-314"];
m6_129 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="var arguments = callExpression.Arguments.Select(GetArgumentValue).ToArray()", span="316-316"];
m6_130 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="var serializedArguments = new List<string>(arguments.Length)", span="318-318"];
m6_131 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label=arguments, span="319-319"];
m6_136 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="serializedArguments.Add(value)", span="333-333"];
m6_137 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="return serializedArguments.ToArray();", span="336-336"];
m6_132 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="string value = null", span="321-321"];
m6_133 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="argument != null", span="323-323"];
m6_134 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="var converter = TypeDescriptor.GetConverter(argument.GetType())", span="325-325"];
m6_135 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="value = converter.ConvertToInvariantString(argument)", span="326-326"];
m6_138 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateContext.cs", label="Exit HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="312-312"];
m6_143 [cluster="Unk.GetType", file="StateContext.cs", label="Entry Unk.GetType", span=""];
m6_108 [cluster="System.Collections.Generic.List<T>.List(int)", file="StateContext.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m6_142 [cluster="List<string>.cstr", file="StateContext.cs", label="Entry List<string>.cstr", span=""];
m6_111 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateContext.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_41 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateContext.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117"];
m6_42 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateContext.cs", label="methodCall == null", span="119-119"];
m6_44 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateContext.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="121-121"];
m6_43 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateContext.cs", label="throw new ArgumentNullException(''methodCall'');", span="119-119"];
m6_45 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateContext.cs", label="callExpression == null", span="122-122"];
m6_47 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateContext.cs", label="return new Job(\r\n                callExpression.Method.DeclaringType, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="131-134"];
m6_46 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateContext.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="124-124"];
m6_48 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateContext.cs", label="Exit HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="117-117"];
m6_13 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="Entry HangFire.Common.Job.Validate()", span="160-160"];
m6_59 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="Method.DeclaringType == null", span="162-162"];
m6_60 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="164-164"];
m6_61 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="!Method.DeclaringType.IsAssignableFrom(Type)", span="167-167"];
m6_62 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="169-172"];
m6_63 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="!Method.IsPublic", span="175-175"];
m6_64 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="177-177"];
m6_65 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="var parameters = Method.GetParameters()", span="180-180"];
m6_66 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="parameters.Length != Arguments.Length", span="182-182"];
m6_68 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label=parameters, span="187-187"];
m6_67 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="throw new ArgumentException(''Argument count must be equal to method parameter count.'');", span="184-184"];
m6_69 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="parameter.IsOut", span="193-193"];
m6_71 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="parameter.ParameterType.IsByRef", span="199-199"];
m6_70 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="195-196"];
m6_72 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="201-202"];
m6_73 [cluster="HangFire.Common.Job.Validate()", file="StateContext.cs", label="Exit HangFire.Common.Job.Validate()", span="160-160"];
m6_110 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="StateContext.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m6_77 [cluster="System.Reflection.MethodBase.GetParameters()", file="StateContext.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m6_14 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="Hangfire.States.StateContext", span=""];
m6_15 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="activator == null", span="68-68"];
m6_17 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="cancellationToken == null", span="69-69"];
m6_21 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="instance = Activate(activator)", span="77-77"];
m6_22 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="var deserializedArguments = DeserializeArguments(cancellationToken)", span="80-80"];
m6_16 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="throw new ArgumentNullException(''activator'');", span="68-68"];
m6_18 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="throw new ArgumentNullException(''cancellationToken'');", span="69-69"];
m6_19 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="object instance = null", span="71-71"];
m6_20 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="!Method.IsStatic", span="75-75"];
m6_23 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="InvokeMethod(instance, deserializedArguments)", span="81-81"];
m6_24 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", file="StateContext.cs", label="Exit HangFire.Common.Job.Perform(HangFire.JobActivator, HangFire.IJobCancellationToken)", span="66-66"];
m6_127 [cluster="System.IDisposable.Dispose()", file="StateContext.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m6_153 [cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="StateContext.cs", label="Entry HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25"];
m6_28 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="StateContext.cs", label="Entry HangFire.Common.Job.GetTypeFilterAttributes(bool)", span="89-89"];
m6_29 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="StateContext.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="91-93"];
m6_30 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="StateContext.cs", label="Exit HangFire.Common.Job.GetTypeFilterAttributes(bool)", span="89-89"];
m6_51 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateContext.cs", label="Entry HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="144-144"];
m6_52 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateContext.cs", label="methodCall == null", span="146-146"];
m6_54 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateContext.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="148-148"];
m6_53 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateContext.cs", label="throw new ArgumentNullException(''methodCall'');", span="146-146"];
m6_55 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateContext.cs", label="callExpression == null", span="149-149"];
m6_57 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateContext.cs", label="return new Job(\r\n                typeof(T), \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="154-157"];
m6_56 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateContext.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="151-151"];
m6_58 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateContext.cs", label="Exit HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="144-144"];
m6_154 [file="StateContext.cs", label="HangFire.Common.Job", span=""];
m7_8 [cluster="HangFire.Perform.Async(System.Type)", file="StateContextFacts.cs", label="return Async(type, null);", span="63-63"];
m7_17 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", file="StateContextFacts.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", span="27-27"];
m7_26 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="StateContextFacts.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="125-125"];
m7_27 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="StateContextFacts.cs", label="return In(delay, typeof(TJob), args);", span="128-128"];
m7_28 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan, object)", file="StateContextFacts.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan, object)", span="125-125"];
m7_10 [cluster="HangFire.Perform.Async(System.Type, object)", file="StateContextFacts.cs", label="type == null", span="81-81"];
m7_6 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="StateContextFacts.cs", label="_monitoringApi = new RabbitMqMonitoringApi(configureAction, queues.ToArray())", span="19-19"];
m7_13 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", file="StateContextFacts.cs", label="return _jobQueue;", span="24-24"];
m7_15 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", file="StateContextFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", span="27-27"];
m7_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="StateContextFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m7_12 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", file="StateContextFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", span="22-22"];
m7_14 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", file="StateContextFacts.cs", label="Exit Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueue()", span="22-22"];
m7_16 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.GetJobQueueMonitoringApi()", file="StateContextFacts.cs", label="return _monitoringApi;", span="29-29"];
m7_0 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="StateContextFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="13-13"];
m7_1 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="StateContextFacts.cs", label="queues == null", span="15-15"];
m7_2 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider.RabbitMqJobQueueProvider(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="StateContextFacts.cs", label="throw new ArgumentNullException(''queues'');", span="15-15"];
m7_37 [cluster="HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", file="StateContextFacts.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(string, System.DateTime)", span="10-10"];
m7_3 [cluster="HangFire.Perform.Async<TJob>(object)", color=green, community=0, file="StateContextFacts.cs", label="32: Entry HangFire.Perform.Async<TJob>(object)", span="44-44"];
m7_4 [cluster="HangFire.Perform.Async<TJob>(object)", color=green, community=0, file="StateContextFacts.cs", label="32: return Async(typeof(TJob), args);", span="47-47"];
m7_5 [cluster="HangFire.Perform.Async<TJob>(object)", file="StateContextFacts.cs", label="Exit HangFire.Perform.Async<TJob>(object)", span="44-44"];
m7_7 [cluster="HangFire.Perform.Async(System.Type)", file="StateContextFacts.cs", label="Entry HangFire.Perform.Async(System.Type)", span="61-61"];
m7_19 [cluster="HangFire.JobHelper.GetQueue(System.Type)", file="StateContextFacts.cs", label="Entry HangFire.JobHelper.GetQueue(System.Type)", span="22-22"];
m7_21 [cluster="HangFire.Perform.GenerateId()", file="StateContextFacts.cs", label="Entry HangFire.Perform.GenerateId()", span="173-173"];
m7_39 [cluster="HangFire.Perform.GenerateId()", file="StateContextFacts.cs", label="return Guid.NewGuid().ToString();", span="175-175"];
m7_40 [cluster="HangFire.Perform.GenerateId()", file="StateContextFacts.cs", label="Exit HangFire.Perform.GenerateId()", span="173-173"];
m7_30 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="StateContextFacts.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type)", span="142-142"];
m7_31 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="StateContextFacts.cs", label="return In(delay, type, null);", span="144-144"];
m7_32 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type)", file="StateContextFacts.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type)", span="142-142"];
m7_29 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="StateContextFacts.cs", label="Entry HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="160-160"];
m7_33 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="StateContextFacts.cs", label="var client = new JobClient(RedisFactory.BasicManager)", span="162-162"];
m7_34 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="StateContextFacts.cs", label="var scheduledState = new ScheduledState(''Scheduled by the Client'', DateTime.UtcNow.Add(delay))", span="164-164"];
m7_35 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="StateContextFacts.cs", label="return client.CreateJob(GenerateId(), type, scheduledState, args);", span="165-165"];
m7_36 [cluster="HangFire.Perform.In(System.TimeSpan, System.Type, object)", file="StateContextFacts.cs", label="Exit HangFire.Perform.In(System.TimeSpan, System.Type, object)", span="160-160"];
m7_18 [cluster="HangFire.Client.JobClient.JobClient(IRedisClientsManager)", file="StateContextFacts.cs", label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", span=""];
m7_20 [cluster="HangFire.States.EnqueuedState.EnqueuedState(string, string)", file="StateContextFacts.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState(string, string)", span="10-10"];
m7_42 [cluster="System.Guid.ToString()", file="StateContextFacts.cs", label="Entry System.Guid.ToString()", span="0-0"];
m7_23 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="StateContextFacts.cs", label="Entry HangFire.Perform.In<TJob>(System.TimeSpan)", span="106-106"];
m7_24 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="StateContextFacts.cs", label="return In<TJob>(delay, null);", span="109-109"];
m7_25 [cluster="HangFire.Perform.In<TJob>(System.TimeSpan)", file="StateContextFacts.cs", label="Exit HangFire.Perform.In<TJob>(System.TimeSpan)", span="106-106"];
m7_38 [cluster="System.DateTime.Add(System.TimeSpan)", file="StateContextFacts.cs", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
m7_9 [cluster="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", file="StateContextFacts.cs", label="Entry Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueue.RabbitMqJobQueue(System.Collections.Generic.IEnumerable<string>, ConnectionFactory)", span="21-21"];
m7_41 [cluster="System.Guid.NewGuid()", file="StateContextFacts.cs", label="Entry System.Guid.NewGuid()", span="0-0"];
m7_22 [cluster="HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", file="StateContextFacts.cs", label="Entry HangFire.Client.JobClient.CreateJob(string, System.Type, HangFire.States.JobState, object)", span="27-27"];
m9_116 [cluster="HangFire.Common.Job.Dispose(object)", file="StateMachine.cs", label="var disposable = instance as IDisposable", span="285-285"];
m9_118 [cluster="HangFire.Common.Job.Dispose(object)", file="StateMachine.cs", label="disposable.Dispose()", span="288-288"];
m9_117 [cluster="HangFire.Common.Job.Dispose(object)", file="StateMachine.cs", label="disposable != null", span="286-286"];
m9_119 [cluster="HangFire.Common.Job.Dispose(object)", file="StateMachine.cs", label=Exception, span="291-291"];
m9_12 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="_jobId = Perform.Async(null)", span="42-42"];
m9_46 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachine.cs", label="Exit HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116"];
m9_24 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="_jobId = Perform.In(TimeSpan.FromDays(1), typeof (TestJob), new { ArticleId = 3 })", span="66-66"];
m9_88 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="StateMachine.cs", label="Exit HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", span="138-138"];
m9_89 [cluster="Unk.IsNotNull", file="StateMachine.cs", label="Entry Unk.IsNotNull", span=""];
m9_91 [cluster="Unk.IsInstanceOfType", file="StateMachine.cs", label="Entry Unk.IsInstanceOfType", span=""];
m9_92 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="StateMachine.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="145-145"];
m9_90 [cluster="System.Type.GetType(string, bool)", file="StateMachine.cs", label="Entry System.Type.GetType(string, bool)", span="0-0"];
m9_99 [cluster="HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="StateMachine.cs", label="Entry HangFire.Tests.DictionaryAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="9-9"];
m9_101 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="StateMachine.cs", label="ThenTheArgumentlessJobShouldBeCreated(type)", span="158-158"];
m9_93 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="StateMachine.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', _jobId))", span="147-147"];
m9_100 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="StateMachine.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="156-156"];
m9_95 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="StateMachine.cs", label="Assert.IsTrue(job[''Type''].Contains(type))", span="149-149"];
m9_97 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="StateMachine.cs", label="DictionaryAssert.ContainsFollowingItems(table, args)", span="152-152"];
m9_94 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="StateMachine.cs", label="Assert.AreNotEqual(0, job.Count)", span="148-148"];
m9_96 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="StateMachine.cs", label="var args = JobHelper.FromJson<Dictionary<string, string>>(job[''Args''])", span="151-151"];
m9_98 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", file="StateMachine.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeCreatedWithTheFollowingArguments(string, Table)", span="145-145"];
m9_102 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="StateMachine.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="159-159"];
m9_103 [cluster="HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", file="StateMachine.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheArgumentlessJobShouldBeAddedToTheDefaultQueue(string)", span="156-156"];
m9_104 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="StateMachine.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", span="163-163"];
m9_83 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateMachine.cs", label="Exit HangFire.Common.Job.Activate(HangFire.JobActivator)", span="206-206"];
m9_108 [cluster="System.Collections.Generic.List<T>.Add(T)", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m9_109 [cluster="System.Collections.Generic.List<T>.ToArray()", file="StateMachine.cs", label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0"];
m9_110 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="StateMachine.cs", label="Method.Invoke(instance, deserializedArguments)", span="271-271"];
m9_111 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="StateMachine.cs", label=TargetInvocationException, span="273-273"];
m9_81 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateMachine.cs", label=Exception, span="220-220"];
m9_84 [cluster="System.DateTime.AddDays(double)", file="StateMachine.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m9_74 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="StateMachine.cs", label="Entry HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="127-127"];
m9_43 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachine.cs", label="callExpression == null", span="121-121"];
m9_59 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="!Method.DeclaringType.IsAssignableFrom(Type)", span="166-166"];
m9_62 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="throw new NotSupportedException(''Only public methods can be invoked in the background.'');", span="176-176"];
m9_0 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="StateMachine.cs", label="Entry HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", span="45-45"];
m9_1 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="StateMachine.cs", label="type == null", span="47-47"];
m9_3 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="StateMachine.cs", label="method == null", span="48-48"];
m9_5 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="code.Equals(''Perform.Async<TestJob>()'')", span="28-28"];
m9_7 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="code.Equals(''Perform.Async<TestJob>(new { ArticleId = 3, Author = \''odinserj\'' })'')", span="32-32"];
m9_8 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="_jobId = Perform.Async<TestJob>(new { ArticleId = 3, Author = ''odinserj'' })", span="34-34"];
m9_9 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="code.Equals(''Perform.Async(typeof(TestJob))'')", span="36-36"];
m9_2 [cluster="HangFire.Common.Job.Job(System.Type, System.Reflection.MethodInfo, string[])", file="StateMachine.cs", label="throw new ArgumentNullException(''type'');", span="47-47"];
m9_4 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="Entry HangFire.Tests.ClientSteps.WhenICallThe(string)", span="24-24"];
m9_6 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="_jobId = Perform.Async<TestJob>()", span="30-30"];
m9_10 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="_jobId = Perform.Async(typeof (TestJob))", span="38-38"];
m9_11 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="code.Equals(''Perform.Async(null)'')", span="40-40"];
m9_40 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachine.cs", label="methodCall == null", span="118-118"];
m9_38 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="Exit HangFire.Tests.ClientSteps.WhenICallThe(string)", span="24-24"];
m9_72 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", file="StateMachine.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeEnqueuedToTheQueue(string)", span="117-117"];
m9_140 [cluster="Unk.ConvertToInvariantString", file="StateMachine.cs", label="Entry Unk.ConvertToInvariantString", span=""];
m9_58 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="throw new NotSupportedException(''Global methods are not supported. Use class methods instead.'');", span="163-163"];
m9_86 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="StateMachine.cs", label="Assert.IsNotNull(_exception)", span="140-140"];
m9_37 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="_exception = ex", span="95-95"];
m9_39 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachine.cs", label="Entry HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="116-116"];
m9_34 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label=PendingStepException, span="89-89"];
m9_87 [cluster="HangFire.Tests.ClientSteps.AnExceptionShouldBeThrown(string)", file="StateMachine.cs", label="Assert.IsInstanceOfType(_exception, Type.GetType(exceptionType, true))", span="141-141"];
m9_85 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="StateMachine.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m9_29 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="code.Equals(''Perform.Async<EmptyQueueJob>()'')", span="76-76"];
m9_63 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="var parameters = Method.GetParameters()", span="179-179"];
m9_82 [cluster="HangFire.Common.Job.Activate(HangFire.JobActivator)", file="StateMachine.cs", label="throw new JobPerformanceException(\r\n                    ''An exception occured during job activation.'',\r\n                    ex);", span="222-224"];
m9_41 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachine.cs", label="throw new ArgumentNullException(''methodCall'');", span="118-118"];
m9_49 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateMachine.cs", label="Entry HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="143-143"];
m9_73 [cluster="Unk.GetAllItemsFromList", file="StateMachine.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m9_60 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="throw new ArgumentException(String.Format(\r\n                    ''The type `{0}` must be derived from the `{1}` type.'',\r\n                    Method.DeclaringType,\r\n                    Type));", span="168-171"];
m9_47 [cluster="System.NotSupportedException.NotSupportedException(string)", file="StateMachine.cs", label="Entry System.NotSupportedException.NotSupportedException(string)", span="0-0"];
m9_141 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachine.cs", label="Entry HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", span="326-326"];
m9_142 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachine.cs", label="Debug.Assert(expression != null)", span="328-328"];
m9_143 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachine.cs", label="var constantExpression = expression as ConstantExpression", span="330-330"];
m9_146 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachine.cs", label="return CachedExpressionCompiler.Evaluate(expression);", span="337-337"];
m9_144 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachine.cs", label="constantExpression != null", span="332-332"];
m9_145 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachine.cs", label="return constantExpression.Value;", span="334-334"];
m9_147 [cluster="HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", file="StateMachine.cs", label="Exit HangFire.Common.Job.GetArgumentValue(System.Linq.Expressions.Expression)", span="326-326"];
m9_64 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="parameters.Length != Arguments.Length", span="181-181"];
m9_50 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateMachine.cs", label="methodCall == null", span="145-145"];
m9_48 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="Entry HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="299-299"];
m9_23 [cluster="HangFire.Tests.ClientSteps.WhenICallThe(string)", file="StateMachine.cs", label="code.Equals(''Perform.In(TimeSpan.FromDays(1), typeof(TestJob), new { ArticleId = 3 })'')", span="64-64"];
m9_77 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="StateMachine.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="131-131"];
m9_78 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="StateMachine.cs", label="Assert.IsTrue(DateTime.UtcNow.Date.AddDays(1) <= timestamp)", span="133-133"];
m9_80 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="StateMachine.cs", label="Exit HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", span="127-127"];
m9_79 [cluster="HangFire.Tests.ClientSteps.ThenItShouldBeScheduledForTomorrow()", file="StateMachine.cs", label="Assert.IsTrue(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="134-134"];
m9_68 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="throw new NotSupportedException(\r\n                        ''Output parameters are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="194-195"];
m9_69 [cluster="HangFire.Common.Job.Validate()", color=green, community=0, file="StateMachine.cs", label="29: parameter.ParameterType.IsByRef", span="198-198"];
m9_70 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="throw new NotSupportedException(\r\n                        ''Parameters, passed by reference, are not supported: there is no guarantee that specified method will be invoked inside the same process.'');", span="200-201"];
m9_71 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="Exit HangFire.Common.Job.Validate()", span="159-159"];
m9_134 [cluster="System.Diagnostics.Debug.Assert(bool)", file="StateMachine.cs", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
m9_136 [cluster="Unk.ToArray", file="StateMachine.cs", label="Entry Unk.ToArray", span=""];
m9_44 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachine.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="123-123"];
m9_45 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="StateMachine.cs", label="return new Job(\r\n                callExpression.Method.DeclaringType, \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="130-133"];
m9_106 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="StateMachine.cs", label="ThenItShouldBeEnqueuedToTheDefaultQueue()", span="166-166"];
m9_51 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateMachine.cs", label="throw new ArgumentNullException(''methodCall'');", span="145-145"];
m9_52 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateMachine.cs", label="var callExpression = methodCall.Body as MethodCallExpression", span="147-147"];
m9_56 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateMachine.cs", label="Exit HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", span="143-143"];
m9_53 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateMachine.cs", label="callExpression == null", span="148-148"];
m9_54 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateMachine.cs", label="throw new NotSupportedException(''Expression body should be of type `MethodCallExpression`'');", span="150-150"];
m9_55 [cluster="HangFire.Common.Job.FromExpression<T>(System.Linq.Expressions.Expression<System.Action<T>>)", file="StateMachine.cs", label="return new Job(\r\n                typeof(T), \r\n                callExpression.Method, \r\n                GetArguments(callExpression));", span="153-156"];
m9_57 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="Method.DeclaringType == null", span="161-161"];
m9_114 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="StateMachine.cs", label="ThenItShouldBeScheduledForTomorrow()", span="180-180"];
m9_65 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="throw new ArgumentException(''Argument count must be equal to method parameter count.'', ''arguments'');", span="183-183"];
m9_66 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label=parameters, span="186-186"];
m9_67 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="parameter.IsOut", span="192-192"];
m9_115 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="StateMachine.cs", label="Exit HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="177-177"];
m9_120 [cluster="HangFire.Common.Job.Dispose(object)", file="StateMachine.cs", label="HangFire.Tests.ClientSteps", span=""];
m9_121 [cluster="HangFire.Common.Job.Dispose(object)", file="StateMachine.cs", label="Exit HangFire.Common.Job.Dispose(object)", span="281-281"];
m9_19 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", color=green, community=0, file="StateMachine.cs", label="13: instance = Activate(activator)", span="76-76"];
m9_17 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="StateMachine.cs", label="object instance = null", span="70-70"];
m9_20 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="StateMachine.cs", label="var deserializedArguments = DeserializeArguments()", span="79-79"];
m9_21 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="StateMachine.cs", label="InvokeMethod(instance, deserializedArguments)", span="80-80"];
m9_13 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="Entry HangFire.Common.Job.Validate()", span="159-159"];
m9_15 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="StateMachine.cs", label="activator == null", span="68-68"];
m9_25 [cluster="HangFire.Common.Job.InvokeMethod(object, object[])", file="StateMachine.cs", label="Entry HangFire.Common.Job.InvokeMethod(object, object[])", span="267-267"];
m9_27 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="StateMachine.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetTypeFilterAttributes(Type)\r\n                : GetFilterAttributes(Type);", span="90-92"];
m9_31 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="StateMachine.cs", label="Entry HangFire.Common.Job.GetMethodFilterAttributes(bool)", span="95-95"];
m9_18 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="StateMachine.cs", label="!Method.IsStatic", span="74-74"];
m9_36 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="StateMachine.cs", label="Exit HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="102-102"];
m9_22 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="StateMachine.cs", label="Exit HangFire.Common.Job.Perform(HangFire.JobActivator)", span="66-66"];
m9_14 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="StateMachine.cs", label="Entry HangFire.Common.Job.Perform(HangFire.JobActivator)", span="66-66"];
m9_16 [cluster="HangFire.Common.Job.Perform(HangFire.JobActivator)", file="StateMachine.cs", label="throw new ArgumentNullException(''activator'');", span="68-68"];
m9_26 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="StateMachine.cs", label="Entry HangFire.Common.Job.GetTypeFilterAttributes(bool)", span="88-88"];
m9_28 [cluster="HangFire.Common.Job.GetTypeFilterAttributes(bool)", file="StateMachine.cs", label="Exit HangFire.Common.Job.GetTypeFilterAttributes(bool)", span="88-88"];
m9_30 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="StateMachine.cs", label="Entry HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", span="102-102"];
m9_32 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="StateMachine.cs", label="return useCache\r\n                ? ReflectedAttributeCache.GetMethodFilterAttributes(Method)\r\n                : GetFilterAttributes(Method);", span="97-99"];
m9_33 [cluster="HangFire.Common.Job.GetMethodFilterAttributes(bool)", file="StateMachine.cs", label="Exit HangFire.Common.Job.GetMethodFilterAttributes(bool)", span="95-95"];
m9_35 [cluster="HangFire.Common.Job.GetFilterAttributes(System.Reflection.MemberInfo)", file="StateMachine.cs", label="return memberInfo\r\n                .GetCustomAttributes(typeof(JobFilterAttribute), inherit: true)\r\n                .Cast<JobFilterAttribute>();", span="104-106"];
m9_112 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="StateMachine.cs", label="Entry HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", span="177-177"];
m9_113 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeScheduledForTomorrowWithArguments(string, Table)", file="StateMachine.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="179-179"];
m9_42 [cluster="HangFire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", color=red, community=0, file="StateMachine.cs", label="21: var callExpression = methodCall.Body as MethodCallExpression", span="120-120"];
m9_61 [cluster="HangFire.Common.Job.Validate()", file="StateMachine.cs", label="!Method.IsPublic", span="174-174"];
m9_135 [cluster="Unk.Select", file="StateMachine.cs", label="Entry Unk.Select", span=""];
m9_139 [cluster="Unk.GetConverter", file="StateMachine.cs", label="Entry Unk.GetConverter", span=""];
m9_75 [cluster="System.Reflection.MethodBase.GetParameters()", file="StateMachine.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m9_76 [cluster="System.ArgumentException.ArgumentException(string, string)", file="StateMachine.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m9_123 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="Debug.Assert(callExpression != null)", span="301-301"];
m9_124 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="var arguments = callExpression.Arguments.Select(GetArgumentValue).ToArray()", span="303-303"];
m9_125 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="var serializedArguments = new List<string>(arguments.Length)", span="305-305"];
m9_126 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label=arguments, span="306-306"];
m9_131 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="serializedArguments.Add(value)", span="320-320"];
m9_132 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="return serializedArguments.ToArray();", span="323-323"];
m9_127 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="string value = null", span="308-308"];
m9_128 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="argument != null", span="310-310"];
m9_129 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="var converter = TypeDescriptor.GetConverter(argument.GetType())", span="312-312"];
m9_130 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="value = converter.ConvertToInvariantString(argument)", span="313-313"];
m9_133 [cluster="HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", file="StateMachine.cs", label="Exit HangFire.Common.Job.GetArguments(System.Linq.Expressions.MethodCallExpression)", span="299-299"];
m9_138 [cluster="Unk.GetType", file="StateMachine.cs", label="Entry Unk.GetType", span=""];
m9_105 [cluster="HangFire.Tests.ClientSteps.ThenTheJobShouldBeAddedToTheDefaultQueueWithArguments(string, Table)", file="StateMachine.cs", label="ThenTheJobShouldBeCreatedWithTheFollowingArguments(type, table)", span="165-165"];
m9_137 [cluster="List<string>.cstr", file="StateMachine.cs", label="Entry List<string>.cstr", span=""];
m9_107 [cluster="System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", file="StateMachine.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)", span="0-0"];
m9_122 [cluster="System.IDisposable.Dispose()", file="StateMachine.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m9_148 [cluster="HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", file="StateMachine.cs", label="Entry HangFire.Common.CachedExpressionCompiler.Evaluate(System.Linq.Expressions.Expression)", span="25-25"];
m9_149 [file="StateMachine.cs", label="HangFire.Common.Job", span=""];
m0_136 -> m0_137  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_42  [key=2, style=dotted];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_22  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_30  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_43  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_56  [key=2, style=dotted];
m0_141 -> m0_143  [color=darkseagreen4, key=1, label=table3, style=dashed];
m0_142 -> m0_143  [key=0, style=solid];
m0_142 -> m0_57  [key=2, style=dotted];
m0_143 -> m0_144  [key=0, style=solid];
m0_143 -> m0_44  [key=2, style=dotted];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_26  [key=2, style=dotted];
m0_145 -> m0_136  [color=blue, key=0, style=bold];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label=IServiceScope, style=dashed];
m0_0 -> m0_1  [color=red, key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label=IServiceScope, style=dashed];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_1 -> m0_3  [key=0, style=solid];
m0_1 -> m0_2  [color=red, key=0, style=solid];
m0_1 -> m0_5  [color=red, key=2, style=dotted];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_6  [color=red, key=2, style=dotted];
m0_2 -> m0_3  [color=red, key=0, style=solid];
m0_2 -> m0_7  [color=red, key=2, style=dotted];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [color=red, key=0, style=solid];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [color=red, key=0, style=solid];
m0_10 -> m0_13  [color=red, key=2, style=dotted];
m0_11 -> m0_12  [color=red, key=0, style=solid];
m0_12 -> m0_9  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=2, style=dotted];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_42  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_22  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_30  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_43  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_44  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_26  [key=2, style=dotted];
m0_100 -> m0_93  [color=blue, key=0, style=bold];
m0_101 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_42  [key=2, style=dotted];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_22  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_30  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_33  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_43  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_44  [key=2, style=dotted];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_26  [key=2, style=dotted];
m0_109 -> m0_101  [color=blue, key=0, style=bold];
m0_58 -> m0_59  [key=0, style=solid];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_42  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_22  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_30  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_33  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_43  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_44  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_26  [key=2, style=dotted];
m0_66 -> m0_58  [color=blue, key=0, style=bold];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_42  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_22  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_30  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_33  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_43  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_44  [key=2, style=dotted];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_26  [key=2, style=dotted];
m0_118 -> m0_110  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=2, style=dotted];
m0_24 -> m0_22  [color=blue, key=0, style=bold];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_42  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_22  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_30  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_43  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_44  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_26  [key=2, style=dotted];
m0_82 -> m0_75  [color=blue, key=0, style=bold];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=2, style=dotted];
m0_28 -> m0_26  [color=blue, key=0, style=bold];
m0_83 -> m0_84  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_42  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_22  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_30  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_43  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_56  [key=2, style=dotted];
m0_88 -> m0_90  [color=darkseagreen4, key=1, label=table2, style=dashed];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_57  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_44  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_26  [key=2, style=dotted];
m0_92 -> m0_83  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> m0_10  [color=green, key=2, style=dotted];
m0_13 -> m0_11  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=0, style=solid];
m0_15 -> m0_8  [color=green, key=1, label="Hangfire.AspNetCore.AspNetCoreJobActivatorScope", style=dashed];
m0_15 -> m0_3  [color=darkseagreen4, key=1, label="Hangfire.AspNetCore.AspNetCoreJobActivatorScope", style=dashed];
m0_15 -> m0_12  [color=darkseagreen4, key=1, label="Hangfire.AspNetCore.AspNetCoreJobActivatorScope", style=dashed];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_0  [key=2, style=dotted];
m0_17 -> m0_14  [color=blue, key=0, style=bold];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_20 -> m0_18  [color=blue, key=0, style=bold];
m0_146 -> m0_147  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_42  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_22  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_30  [key=2, style=dotted];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_43  [key=2, style=dotted];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_44  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_26  [key=2, style=dotted];
m0_153 -> m0_146  [color=blue, key=0, style=bold];
m0_45 -> m0_46  [key=0, style=solid];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_42  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_22  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_30  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_43  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_56  [key=2, style=dotted];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label=table1, style=dashed];
m0_50 -> m0_53  [color=darkseagreen4, key=1, label=table1, style=dashed];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_57  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_57  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_44  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_26  [key=2, style=dotted];
m0_55 -> m0_45  [color=blue, key=0, style=bold];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_42  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_22  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_30  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_43  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_44  [key=2, style=dotted];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_26  [key=2, style=dotted];
m0_74 -> m0_67  [color=blue, key=0, style=bold];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [key=2, style=dotted];
m0_32 -> m0_30  [color=blue, key=0, style=bold];
m0_128 -> m0_129  [key=0, style=solid];
m0_129 -> m0_130  [key=0, style=solid];
m0_129 -> m0_42  [key=2, style=dotted];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_22  [key=2, style=dotted];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_30  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_43  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_44  [key=2, style=dotted];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_26  [key=2, style=dotted];
m0_135 -> m0_128  [color=blue, key=0, style=bold];
m0_154 -> m0_155  [key=0, style=solid];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_42  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_22  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_30  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_43  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_56  [key=2, style=dotted];
m0_159 -> m0_161  [color=darkseagreen4, key=1, label=table4, style=dashed];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_57  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_44  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_26  [key=2, style=dotted];
m0_163 -> m0_154  [color=blue, key=0, style=bold];
m0_119 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_42  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_22  [key=2, style=dotted];
m0_122 -> m0_123  [key=0, style=solid];
m0_122 -> m0_30  [key=2, style=dotted];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_33  [key=2, style=dotted];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_43  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_44  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_26  [key=2, style=dotted];
m0_127 -> m0_119  [color=blue, key=0, style=bold];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_42  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_22  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_30  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_43  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_44  [key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_26  [key=2, style=dotted];
m0_41 -> m0_34  [color=blue, key=0, style=bold];
m0_164 -> m0_36  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_40  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_47  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_48  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_54  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_60  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_61  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_65  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_69  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_73  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_77  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_78  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_81  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_85  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_86  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_91  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_95  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_96  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_99  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_103  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_104  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_108  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_112  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_113  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_117  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_121  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_122  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_126  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_130  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_131  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_134  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_138  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_139  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_144  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_148  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_149  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_152  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_156  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_157  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m0_164 -> m0_162  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFeature", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_4 -> m1_8  [color=red, key=2, style=dotted];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [color=red, key=0, style=solid];
m1_10 -> m1_11  [color=red, key=0, style=solid];
m1_10 -> m1_12  [color=red, key=2, style=dotted];
m1_11 -> m1_9  [color=blue, key=0, style=bold];
m1_13 -> m1_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m1_13 -> m1_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m1_13 -> m1_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m1_13 -> m1_4  [color=red, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m1_13 -> m1_10  [color=red, key=1, label="Hangfire.Core.Tests.ApplyStateContextMock", style=dashed];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_44  [key=2, style=dotted];
m2_26 -> m2_27  [key=0, style=solid];
m2_10 -> m2_7  [color=blue, key=0, style=bold];
m2_83 -> m2_84  [key=0, style=solid];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_45  [key=2, style=dotted];
m2_34 -> m2_37  [key=0, style=solid];
m2_34 -> m2_38  [key=2, style=dotted];
m2_82 -> m2_80  [color=blue, key=0, style=bold];
m2_47 -> m2_48  [key=0, style=solid];
m2_47 -> m2_50  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_52  [key=2, style=dotted];
m2_48 -> m2_53  [key=2, style=dotted];
m2_48 -> m2_17  [key=2, style=dotted];
m2_49 -> m2_50  [key=0, style=solid];
m2_49 -> m2_54  [key=2, style=dotted];
m2_49 -> m2_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_49 -> m2_52  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_54  [key=2, style=dotted];
m2_50 -> m2_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_50 -> m2_56  [key=2, style=dotted];
m2_51 -> m2_47  [color=blue, key=0, style=bold];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_57  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_83  [key=2, style=dotted];
m2_27 -> m2_29  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_0 -> m2_1  [color=green, key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m2_0 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.Server.WorkerContext", style=dashed];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_6  [color=green, key=2, style=dotted];
m2_1 -> m2_7  [color=green, key=2, style=dotted];
m2_1 -> m2_8  [color=green, key=2, style=dotted];
m2_1 -> m2_9  [color=green, key=2, style=dotted];
m2_1 -> m2_10  [color=green, key=2, style=dotted];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_11  [key=2, style=dotted];
m2_3 -> m2_4  [color=green, key=0, style=solid];
m2_3 -> m2_5  [key=2, style=dotted];
m2_3 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_1  [color=green, key=3, label="Property variable Hangfire.States.IState CandidateState", style=bold];
m2_3 -> m2_12  [color=green, key=2, style=dotted];
m2_4 -> m2_0  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_13  [key=2, style=dotted];
m2_4 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_4 -> m2_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_80 -> m2_81  [key=0, style=solid];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_84 -> m2_79  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=2, style=dotted];
m2_16 -> m2_13  [color=blue, key=0, style=bold];
m2_16 -> m2_18  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_19  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_77  [key=0, style=solid];
m2_74 -> m2_88  [key=2, style=dotted];
m2_75 -> m2_76  [key=0, style=solid];
m2_75 -> m2_79  [key=2, style=dotted];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_54  [key=2, style=dotted];
m2_76 -> m2_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_76 -> m2_89  [key=2, style=dotted];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_54  [key=2, style=dotted];
m2_77 -> m2_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_77 -> m2_81  [key=2, style=dotted];
m2_78 -> m2_74  [color=blue, key=0, style=bold];
m2_78 -> m2_56  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_18  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_24 -> m2_27  [key=2, style=dotted];
m2_25 -> m2_23  [color=blue, key=0, style=bold];
m2_25 -> m2_18  [color=blue, key=0, style=bold];
m2_57 -> m2_55  [color=blue, key=0, style=bold];
m2_86 -> m2_1  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_3  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_31  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_36  [color=green, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_2  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_4  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_21  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_39  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_40  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_48  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_49  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_50  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_63  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_64  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_65  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_75  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_76  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_86 -> m2_77  [color=darkseagreen4, key=1, label="HangFire.Core.Tests.Server.WorkerManagerFacts", style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_26  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_38  [key=2, style=dotted];
m2_30 -> m2_31  [color=green, key=0, style=solid];
m2_30 -> m2_33  [key=0, style=solid];
m2_30 -> m2_35  [key=0, style=solid];
m2_30 -> m2_37  [key=0, style=solid];
m2_31 -> m2_32  [color=green, key=0, style=solid];
m2_31 -> m2_39  [key=2, style=dotted];
m2_31 -> m2_18  [color=green, key=2, style=dotted];
m2_31 -> m2_35  [color=green, key=1, label="lambda expression", style=dashed];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_30  [color=blue, key=0, style=bold];
m2_35 -> m2_36  [color=green, key=0, style=solid];
m2_32 -> m2_30  [key=0, style=solid];
m2_32 -> m2_40  [key=2, style=dotted];
m2_32 -> m2_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_34  [key=2, style=dotted];
m2_36 -> m2_37  [color=green, key=0, style=solid];
m2_36 -> m2_41  [key=2, style=dotted];
m2_36 -> m2_42  [key=2, style=dotted];
m2_36 -> m2_29  [color=green, key=2, style=dotted];
m2_37 -> m2_28  [color=blue, key=0, style=bold];
m2_37 -> m2_35  [color=blue, key=0, style=bold];
m2_55 -> m2_56  [key=0, style=solid];
m2_7 -> m2_8  [key=0, style=solid];
m2_39 -> m2_29  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_41  [color=darkseagreen4, key=1, label=manager, style=dashed];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_11  [key=2, style=dotted];
m2_8 -> m2_5  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_12  [key=2, style=dotted];
m2_38 -> m2_39  [key=0, style=solid];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_46  [key=2, style=dotted];
m2_43 -> m2_38  [color=blue, key=0, style=bold];
m2_43 -> m2_44  [key=0, style=solid];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_55  [key=2, style=dotted];
m2_46 -> m2_50  [color=darkseagreen4, key=1, label=payload, style=dashed];
m2_46 -> m2_51  [color=darkseagreen4, key=1, label=payload, style=dashed];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_53  [key=2, style=dotted];
m2_44 -> m2_50  [color=darkseagreen4, key=1, label=connection, style=dashed];
m2_44 -> m2_51  [color=darkseagreen4, key=1, label=connection, style=dashed];
m2_85 -> m2_83  [color=blue, key=0, style=bold];
m2_45 -> m2_46  [key=0, style=solid];
m2_45 -> m2_54  [key=2, style=dotted];
m2_52 -> m2_43  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_24  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_13  [key=2, style=dotted];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_26  [key=2, style=dotted];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_78  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_70  [key=0, style=solid];
m2_71 -> m2_72  [key=0, style=solid];
m2_71 -> m2_85  [key=2, style=dotted];
m2_71 -> m2_73  [color=darkseagreen4, key=1, label=performStrategy, style=dashed];
m2_56 -> m2_57  [key=0, style=solid];
m2_56 -> m2_58  [key=2, style=dotted];
m2_56 -> m2_60  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m2_56 -> m2_62  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m2_56 -> m2_66  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m2_56 -> m2_68  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m2_56 -> m2_70  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m2_56 -> m2_72  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
m2_56 -> m2_77  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m2_61 -> m2_59  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_80  [key=2, style=dotted];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_58  [key=2, style=dotted];
m2_60 -> m2_79  [key=2, style=dotted];
m2_60 -> m2_62  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m2_60 -> m2_77  [color=darkseagreen4, key=1, label=stateMachine, style=dashed];
m2_69 -> m2_67  [color=blue, key=0, style=bold];
m2_69 -> m2_72  [key=0, style=solid];
m2_69 -> m2_84  [key=2, style=dotted];
m2_69 -> m2_73  [color=darkseagreen4, key=1, label=performStrategy, style=dashed];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_70  [key=2, style=dotted];
m2_68 -> m2_83  [key=2, style=dotted];
m2_73 -> m2_71  [color=blue, key=0, style=bold];
m2_73 -> m2_74  [key=0, style=solid];
m2_73 -> m2_87  [key=2, style=dotted];
m2_72 -> m2_73  [key=0, style=solid];
m2_72 -> m2_70  [key=2, style=dotted];
m2_72 -> m2_86  [key=2, style=dotted];
m2_81 -> m2_79  [key=2, style=dotted];
m2_81 -> m2_82  [key=0, style=solid];
m2_58 -> m2_59  [key=0, style=solid];
m2_58 -> m2_60  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_64  [key=0, style=solid];
m2_62 -> m2_81  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_52  [key=2, style=dotted];
m2_63 -> m2_53  [key=2, style=dotted];
m2_63 -> m2_78  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_54  [key=2, style=dotted];
m2_64 -> m2_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_54  [key=2, style=dotted];
m2_65 -> m2_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_66 -> m2_62  [color=blue, key=0, style=bold];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_82  [key=2, style=dotted];
m2_66 -> m2_69  [color=darkseagreen4, key=1, label=jobMethod, style=dashed];
m2_66 -> m2_71  [color=darkseagreen4, key=1, label=jobMethod, style=dashed];
m2_66 -> m2_72  [color=darkseagreen4, key=1, label=jobMethod, style=dashed];
m2_90 -> m2_1  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_2  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_3  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_8  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_9  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_14  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_15  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_19  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_20  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_21  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_22  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_24  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_29  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_31  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_32  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_44  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_45  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_46  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_48  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_50  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_34  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_36  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_61  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_72  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m2_90 -> m2_73  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_15  [key=2, style=dotted];
m3_9 -> m3_10  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_29  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_29  [key=2, style=dotted];
m3_27 -> m3_20  [color=blue, key=0, style=bold];
m3_28 -> m3_26  [color=blue, key=0, style=bold];
m3_28 -> m3_85  [key=0, style=solid];
m3_21 -> m3_28  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_21 -> m3_24  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_21 -> m3_25  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_21 -> m3_26  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_17  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_22  [key=2, style=dotted];
m3_56 -> m3_28  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_30  [key=2, style=dotted];
m3_58 -> m3_49  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_58 -> m3_52  [key=2, style=dotted];
m3_57 -> m3_48  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_33  [key=2, style=dotted];
m3_59 -> m3_55  [color=blue, key=0, style=bold];
m3_59 -> m3_60  [key=0, style=solid];
m3_59 -> m3_48  [key=2, style=dotted];
m3_52 -> m3_50  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_9  [key=2, style=dotted];
m3_43 -> m3_44  [color=green, key=0, style=solid];
m3_43 -> m3_51  [key=2, style=dotted];
m3_44 -> m3_45  [color=green, key=0, style=solid];
m3_44 -> m3_28  [color=green, key=2, style=dotted];
m3_44 -> m3_52  [key=2, style=dotted];
m3_45 -> m3_46  [color=green, key=0, style=solid];
m3_45 -> m3_48  [color=green, key=2, style=dotted];
m3_45 -> m3_26  [key=2, style=dotted];
m3_46 -> m3_47  [color=green, key=0, style=solid];
m3_46 -> m3_49  [color=green, key=2, style=dotted];
m3_46 -> m3_50  [color=green, key=1, label="lambda expression", style=dashed];
m3_46 -> m3_34  [color=blue, key=0, style=bold];
m3_47 -> m3_43  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_98 -> m3_99  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_47  [key=2, style=dotted];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_22  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_30  [key=2, style=dotted];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_33  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_52  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_52  [key=2, style=dotted];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_48  [key=2, style=dotted];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_49  [key=2, style=dotted];
m3_106 -> m3_108  [color=darkseagreen4, key=1, label=table5, style=dashed];
m3_106 -> m3_109  [color=darkseagreen4, key=1, label=table5, style=dashed];
m3_106 -> m3_110  [color=darkseagreen4, key=1, label=table5, style=dashed];
m3_106 -> m3_111  [color=darkseagreen4, key=1, label=table5, style=dashed];
m3_106 -> m3_112  [color=darkseagreen4, key=1, label=table5, style=dashed];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_50  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_50  [key=2, style=dotted];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_50  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_50  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_50  [key=2, style=dotted];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_51  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_52  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_26  [key=2, style=dotted];
m3_115 -> m3_98  [color=blue, key=0, style=bold];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_51  [key=2, style=dotted];
m3_77 -> m3_28  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_79  [color=darkseagreen4, key=1, label=table3, style=dashed];
m3_77 -> m3_49  [key=2, style=dotted];
m3_77 -> m3_80  [color=darkseagreen4, key=1, label=table3, style=dashed];
m3_77 -> m3_81  [color=darkseagreen4, key=1, label=table3, style=dashed];
m3_78 -> m3_53  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_69  [key=2, style=dotted];
m3_78 -> m3_70  [key=2, style=dotted];
m3_78 -> m3_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_78 -> m3_50  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_71  [key=2, style=dotted];
m3_79 -> m3_50  [key=2, style=dotted];
m3_80 -> m3_15  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_50  [key=2, style=dotted];
m3_81 -> m3_76  [color=blue, key=0, style=bold];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_52  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_30  [key=2, style=dotted];
m3_53 -> m3_54  [key=0, style=solid];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_47  [key=2, style=dotted];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_49  [key=2, style=dotted];
m3_60 -> m3_62  [color=darkseagreen4, key=1, label=table2, style=dashed];
m3_60 -> m3_63  [color=darkseagreen4, key=1, label=table2, style=dashed];
m3_60 -> m3_64  [color=darkseagreen4, key=1, label=table2, style=dashed];
m3_60 -> m3_65  [color=darkseagreen4, key=1, label=table2, style=dashed];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_50  [key=2, style=dotted];
m3_61 -> m3_53  [key=2, style=dotted];
m3_61 -> m3_54  [key=2, style=dotted];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_50  [key=2, style=dotted];
m3_62 -> m3_60  [color=blue, key=0, style=bold];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_50  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_50  [key=2, style=dotted];
m3_64 -> m3_28  [key=2, style=dotted];
m3_64 -> m3_66  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_51  [key=2, style=dotted];
m3_65 -> m3_53  [key=2, style=dotted];
m3_65 -> m3_69  [key=2, style=dotted];
m3_65 -> m3_70  [key=2, style=dotted];
m3_65 -> m3_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_26  [key=2, style=dotted];
m3_66 -> m3_71  [key=2, style=dotted];
m3_67 -> m3_53  [color=blue, key=0, style=bold];
m3_67 -> m3_15  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_30 -> m3_31  [key=0, style=solid];
m3_31 -> m3_28  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_35  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_31 -> m3_33  [key=2, style=dotted];
m3_32 -> m3_14  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_32 -> m3_30  [color=blue, key=0, style=bold];
m3_33 -> m3_30  [color=blue, key=0, style=bold];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_82  [color=blue, key=0, style=bold];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_47  [key=2, style=dotted];
m3_85 -> m3_87  [key=2, style=dotted];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_22  [key=2, style=dotted];
m3_86 -> m3_28  [color=blue, key=0, style=bold];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_30  [key=2, style=dotted];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_33  [key=2, style=dotted];
m3_88 -> m3_44  [color=green, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_46  [color=green, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_2  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_5  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_17  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_21  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_22  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_23  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_24  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_26  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_31  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_38  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_56  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_64  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_65  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_77  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_78  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_88 -> m3_85  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.States.ElectStateContextFacts", style=dashed];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_52  [key=2, style=dotted];
m3_89 -> m3_35  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_48  [key=2, style=dotted];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_49  [key=2, style=dotted];
m3_91 -> m3_93  [color=darkseagreen4, key=1, label=table4, style=dashed];
m3_91 -> m3_94  [color=darkseagreen4, key=1, label=table4, style=dashed];
m3_91 -> m3_95  [color=darkseagreen4, key=1, label=table4, style=dashed];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_50  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_50  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_50  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_51  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_26  [key=2, style=dotted];
m3_97 -> m3_84  [color=blue, key=0, style=bold];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_15  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_25  [key=2, style=dotted];
m3_23 -> m3_55  [color=darkorchid, key=3, label="Local variable Hangfire.States.ElectStateContext context", style=bold];
m3_23 -> m3_15  [key=2, style=dotted];
m3_24 -> m3_22  [color=blue, key=0, style=bold];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_29  [key=2, style=dotted];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_7  [key=2, style=dotted];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_8  [key=2, style=dotted];
m3_2 -> m3_6  [key=2, style=dotted];
m3_2 -> m3_7  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_8  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_0  [color=blue, key=0, style=bold];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m3_13 -> m3_10  [color=blue, key=0, style=bold];
m3_142 -> m3_143  [key=0, style=solid];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_47  [key=2, style=dotted];
m3_144 -> m3_145  [key=0, style=solid];
m3_144 -> m3_22  [key=2, style=dotted];
m3_145 -> m3_146  [key=0, style=solid];
m3_145 -> m3_30  [key=2, style=dotted];
m3_146 -> m3_147  [key=0, style=solid];
m3_146 -> m3_33  [key=2, style=dotted];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_52  [key=2, style=dotted];
m3_148 -> m3_149  [key=0, style=solid];
m3_148 -> m3_52  [key=2, style=dotted];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_48  [key=2, style=dotted];
m3_150 -> m3_151  [key=0, style=solid];
m3_150 -> m3_52  [key=2, style=dotted];
m3_151 -> m3_152  [key=0, style=solid];
m3_151 -> m3_49  [key=2, style=dotted];
m3_151 -> m3_153  [color=darkseagreen4, key=1, label=table7, style=dashed];
m3_151 -> m3_154  [color=darkseagreen4, key=1, label=table7, style=dashed];
m3_151 -> m3_155  [color=darkseagreen4, key=1, label=table7, style=dashed];
m3_152 -> m3_153  [key=0, style=solid];
m3_152 -> m3_50  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_50  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_50  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_51  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_156 -> m3_52  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_26  [key=2, style=dotted];
m3_158 -> m3_142  [color=blue, key=0, style=bold];
m3_68 -> m3_63  [color=blue, key=0, style=bold];
m3_68 -> m3_69  [key=0, style=solid];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_48  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_47  [key=2, style=dotted];
m3_35 -> m3_55  [color=darkorchid, key=3, label="Local variable Hangfire.States.ElectStateContext context", style=bold];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_22  [key=2, style=dotted];
m3_36 -> m3_34  [color=blue, key=0, style=bold];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_30  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_33  [key=2, style=dotted];
m3_38 -> m3_28  [key=2, style=dotted];
m3_38 -> m3_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_38 -> m3_41  [color=darkseagreen4, key=1, label=context, style=dashed];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_48  [key=2, style=dotted];
m3_39 -> m3_9  [key=2, style=dotted];
m3_39 -> m3_41  [color=darkseagreen4, key=1, label=newState, style=dashed];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_49  [key=2, style=dotted];
m3_40 -> m3_42  [color=darkseagreen4, key=1, label=table1, style=dashed];
m3_40 -> m3_43  [color=darkseagreen4, key=1, label=table1, style=dashed];
m3_40 -> m3_55  [color=darkorchid, key=3, label="Local variable Hangfire.States.ElectStateContext context", style=bold];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_50  [key=2, style=dotted];
m3_41 -> m3_29  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_50  [key=2, style=dotted];
m3_42 -> m3_37  [color=blue, key=0, style=bold];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_47  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_13  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_55  [color=darkorchid, key=3, label="Local variable Hangfire.States.ElectStateContext context", style=bold];
m3_11 -> m3_14  [key=2, style=dotted];
m3_11 -> m3_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_12 -> m3_9  [color=blue, key=0, style=bold];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_15  [key=2, style=dotted];
m3_50 -> m3_51  [color=green, key=0, style=solid];
m3_51 -> m3_52  [color=green, key=0, style=solid];
m3_51 -> m3_53  [color=green, key=2, style=dotted];
m3_51 -> m3_54  [color=green, key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_19  [key=2, style=dotted];
m3_17 -> m3_14  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_0  [key=2, style=dotted];
m3_18 -> m3_16  [color=blue, key=0, style=bold];
m3_18 -> m3_19  [key=0, style=solid];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_33  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_26  [key=2, style=dotted];
m3_74 -> m3_72  [color=blue, key=0, style=bold];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_52  [key=2, style=dotted];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_75  [key=2, style=dotted];
m3_73 -> m3_52  [key=2, style=dotted];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_75  [key=2, style=dotted];
m3_83 -> m3_68  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_18  [color=blue, key=0, style=bold];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_22  [key=2, style=dotted];
m3_127 -> m3_128  [key=0, style=solid];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_47  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_22  [key=2, style=dotted];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_30  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_33  [key=2, style=dotted];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_52  [key=2, style=dotted];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_48  [key=2, style=dotted];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_52  [key=2, style=dotted];
m3_135 -> m3_136  [key=0, style=solid];
m3_135 -> m3_49  [key=2, style=dotted];
m3_135 -> m3_137  [color=darkseagreen4, key=1, label=table6, style=dashed];
m3_135 -> m3_138  [color=darkseagreen4, key=1, label=table6, style=dashed];
m3_136 -> m3_137  [key=0, style=solid];
m3_136 -> m3_50  [key=2, style=dotted];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_50  [key=2, style=dotted];
m3_138 -> m3_139  [key=0, style=solid];
m3_138 -> m3_51  [key=2, style=dotted];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_52  [key=2, style=dotted];
m3_140 -> m3_141  [key=0, style=solid];
m3_140 -> m3_26  [key=2, style=dotted];
m3_141 -> m3_127  [color=blue, key=0, style=bold];
m3_116 -> m3_117  [key=0, style=solid];
m3_117 -> m3_118  [key=0, style=solid];
m3_117 -> m3_47  [key=2, style=dotted];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_22  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_30  [key=2, style=dotted];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_33  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_48  [key=2, style=dotted];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_52  [key=2, style=dotted];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_51  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_52  [key=2, style=dotted];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_26  [key=2, style=dotted];
m3_126 -> m3_116  [color=blue, key=0, style=bold];
m3_159 -> m3_36  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_45  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_55  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_56  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_70  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_71  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_82  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_86  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_87  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_96  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_100  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_101  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_114  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_118  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_119  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_125  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_129  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_130  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_140  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_144  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_145  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m3_159 -> m3_157  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientFiltersFeature", style=dashed];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_5  [key=2, style=dotted];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_6  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_0  [color=blue, key=0, style=bold];
m4_7 -> m4_1  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m4_7 -> m4_2  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m4_7 -> m4_3  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerStorageOptions", style=dashed];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_13  [key=2, style=dotted];
m6_0 -> m6_1  [color=green, key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_0 -> m6_5  [color=green, key=1, label=string, style=dashed];
m6_0 -> m6_7  [color=darkseagreen4, key=1, label="System.DateTime", style=dashed];
m6_0 -> m6_8  [color=darkseagreen4, key=1, label="Hangfire.Storage.IStorageConnection", style=dashed];
m6_0 -> m6_9  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_0 -> m6_6  [color=darkseagreen4, key=1, label="Hangfire.Common.Job", style=dashed];
m6_1 -> m6_2  [color=green, key=0, style=solid];
m6_1 -> m6_3  [color=green, key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [color=green, key=0, style=solid];
m6_3 -> m6_11  [key=2, style=dotted];
m6_5 -> m6_6  [color=green, key=0, style=solid];
m6_5 -> m6_7  [key=0, style=solid];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_9 -> m6_0  [color=blue, key=0, style=bold];
m6_2 -> m6_11  [key=0, style=solid];
m6_2 -> m6_12  [key=2, style=dotted];
m6_2 -> m6_9  [color=green, key=0, style=solid];
m6_2 -> m6_10  [color=green, key=2, style=dotted];
m6_4 -> m6_11  [key=0, style=solid];
m6_4 -> m6_12  [key=2, style=dotted];
m6_4 -> m6_9  [key=0, style=solid];
m6_4 -> m6_10  [key=2, style=dotted];
m6_6 -> m6_11  [key=0, style=solid];
m6_6 -> m6_12  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_11 -> m6_0  [color=blue, key=0, style=bold];
m6_26 -> m6_89  [key=0, style=solid];
m6_26 -> m6_99  [color=darkseagreen4, key=1, label="HangFire.IJobCancellationToken", style=dashed];
m6_89 -> m6_90  [key=0, style=solid];
m6_89 -> m6_77  [key=2, style=dotted];
m6_89 -> m6_92  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m6_89 -> m6_93  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m6_99 -> m6_102  [key=0, style=solid];
m6_90 -> m6_91  [key=0, style=solid];
m6_90 -> m6_108  [key=2, style=dotted];
m6_90 -> m6_102  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_90 -> m6_104  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_92 -> m6_93  [key=0, style=solid];
m6_92 -> m6_104  [key=0, style=solid];
m6_93 -> m6_94  [key=0, style=solid];
m6_93 -> m6_96  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m6_93 -> m6_98  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m6_93 -> m6_100  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m6_91 -> m6_92  [key=0, style=solid];
m6_91 -> m6_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_91 -> m6_94  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_91 -> m6_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_102 -> m6_103  [key=0, style=solid];
m6_102 -> m6_111  [key=2, style=dotted];
m6_104 -> m6_107  [key=0, style=solid];
m6_104 -> m6_112  [key=2, style=dotted];
m6_94 -> m6_95  [key=0, style=solid];
m6_94 -> m6_97  [color=darkseagreen4, key=1, label=argument, style=dashed];
m6_94 -> m6_101  [color=darkseagreen4, key=1, label=argument, style=dashed];
m6_103 -> m6_92  [key=0, style=solid];
m6_103 -> m6_103  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_96 -> m6_97  [key=0, style=solid];
m6_96 -> m6_98  [key=0, style=solid];
m6_98 -> m6_99  [key=0, style=solid];
m6_98 -> m6_100  [key=0, style=solid];
m6_98 -> m6_74  [key=2, style=dotted];
m6_100 -> m6_101  [key=0, style=solid];
m6_100 -> m6_109  [key=2, style=dotted];
m6_95 -> m6_96  [key=0, style=solid];
m6_97 -> m6_102  [key=0, style=solid];
m6_101 -> m6_102  [key=0, style=solid];
m6_101 -> m6_110  [key=2, style=dotted];
m6_105 -> m6_106  [key=0, style=solid];
m6_106 -> m6_107  [key=0, style=solid];
m6_106 -> m6_88  [key=2, style=dotted];
m6_107 -> m6_26  [color=blue, key=0, style=bold];
m6_146 -> m6_147  [key=0, style=solid];
m6_146 -> m6_148  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m6_146 -> m6_151  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m6_147 -> m6_148  [key=0, style=solid];
m6_147 -> m6_139  [key=2, style=dotted];
m6_148 -> m6_149  [key=0, style=solid];
m6_148 -> m6_150  [color=darkseagreen4, key=1, label=constantExpression, style=dashed];
m6_151 -> m6_152  [key=0, style=solid];
m6_151 -> m6_153  [key=2, style=dotted];
m6_149 -> m6_150  [key=0, style=solid];
m6_149 -> m6_151  [key=0, style=solid];
m6_150 -> m6_152  [key=0, style=solid];
m6_152 -> m6_146  [color=blue, key=0, style=bold];
m6_25 -> m6_78  [key=0, style=solid];
m6_78 -> m6_79  [key=0, style=solid];
m6_78 -> m6_85  [key=2, style=dotted];
m6_78 -> m6_81  [color=darkseagreen4, key=1, label=instance, style=dashed];
m6_79 -> m6_80  [key=0, style=solid];
m6_79 -> m6_81  [key=0, style=solid];
m6_81 -> m6_84  [key=0, style=solid];
m6_80 -> m6_84  [key=0, style=solid];
m6_80 -> m6_86  [key=2, style=dotted];
m6_80 -> m6_87  [key=2, style=dotted];
m6_82 -> m6_83  [key=0, style=solid];
m6_83 -> m6_84  [key=0, style=solid];
m6_83 -> m6_88  [key=2, style=dotted];
m6_84 -> m6_25  [color=blue, key=0, style=bold];
m6_120 -> m6_121  [key=0, style=solid];
m6_121 -> m6_122  [key=0, style=solid];
m6_121 -> m6_123  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m6_122 -> m6_123  [key=0, style=solid];
m6_122 -> m6_124  [key=0, style=solid];
m6_122 -> m6_126  [key=0, style=solid];
m6_123 -> m6_124  [key=0, style=solid];
m6_123 -> m6_126  [key=0, style=solid];
m6_123 -> m6_127  [key=2, style=dotted];
m6_124 -> m6_125  [key=0, style=solid];
m6_125 -> m6_126  [key=0, style=solid];
m6_125 -> m6_88  [key=2, style=dotted];
m6_126 -> m6_120  [color=blue, key=0, style=bold];
m6_27 -> m6_113  [key=0, style=solid];
m6_113 -> m6_114  [key=0, style=solid];
m6_113 -> m6_118  [key=0, style=solid];
m6_113 -> m6_119  [key=2, style=dotted];
m6_114 -> m6_115  [key=0, style=solid];
m6_115 -> m6_116  [key=0, style=solid];
m6_115 -> m6_117  [key=0, style=solid];
m6_116 -> m6_118  [key=0, style=solid];
m6_117 -> m6_118  [key=0, style=solid];
m6_117 -> m6_88  [key=2, style=dotted];
m6_118 -> m6_27  [color=blue, key=0, style=bold];
m6_32 -> m6_37  [key=0, style=solid];
m6_37 -> m6_38  [key=0, style=solid];
m6_37 -> m6_39  [key=2, style=dotted];
m6_37 -> m6_40  [key=2, style=dotted];
m6_38 -> m6_32  [color=blue, key=0, style=bold];
m6_33 -> m6_34  [key=0, style=solid];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_36  [key=2, style=dotted];
m6_34 -> m6_32  [key=2, style=dotted];
m6_35 -> m6_33  [color=blue, key=0, style=bold];
m6_50 -> m6_128  [key=0, style=solid];
m6_50 -> m6_129  [color=darkseagreen4, key=1, label="System.Linq.Expressions.MethodCallExpression", style=dashed];
m6_128 -> m6_129  [key=0, style=solid];
m6_128 -> m6_139  [key=2, style=dotted];
m6_129 -> m6_130  [key=0, style=solid];
m6_129 -> m6_140  [key=2, style=dotted];
m6_129 -> m6_141  [key=2, style=dotted];
m6_129 -> m6_131  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m6_130 -> m6_131  [key=0, style=solid];
m6_130 -> m6_142  [key=2, style=dotted];
m6_130 -> m6_136  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m6_130 -> m6_137  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m6_131 -> m6_132  [key=0, style=solid];
m6_131 -> m6_137  [key=0, style=solid];
m6_131 -> m6_133  [color=darkseagreen4, key=1, label=argument, style=dashed];
m6_131 -> m6_134  [color=darkseagreen4, key=1, label=argument, style=dashed];
m6_131 -> m6_135  [color=darkseagreen4, key=1, label=argument, style=dashed];
m6_136 -> m6_131  [key=0, style=solid];
m6_136 -> m6_111  [key=2, style=dotted];
m6_137 -> m6_138  [key=0, style=solid];
m6_137 -> m6_112  [key=2, style=dotted];
m6_132 -> m6_133  [key=0, style=solid];
m6_132 -> m6_136  [color=darkseagreen4, key=1, label=value, style=dashed];
m6_133 -> m6_134  [key=0, style=solid];
m6_133 -> m6_136  [key=0, style=solid];
m6_134 -> m6_135  [key=0, style=solid];
m6_134 -> m6_143  [key=2, style=dotted];
m6_134 -> m6_144  [key=2, style=dotted];
m6_135 -> m6_136  [key=0, style=solid];
m6_135 -> m6_145  [key=2, style=dotted];
m6_138 -> m6_50  [color=blue, key=0, style=bold];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> m6_44  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m6_42 -> m6_43  [key=0, style=solid];
m6_42 -> m6_44  [key=0, style=solid];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_47  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m6_43 -> m6_48  [key=0, style=solid];
m6_43 -> m6_12  [key=2, style=dotted];
m6_45 -> m6_46  [key=0, style=solid];
m6_45 -> m6_47  [key=0, style=solid];
m6_47 -> m6_48  [key=0, style=solid];
m6_47 -> m6_0  [key=2, style=dotted];
m6_47 -> m6_50  [key=2, style=dotted];
m6_46 -> m6_48  [key=0, style=solid];
m6_46 -> m6_49  [key=2, style=dotted];
m6_48 -> m6_41  [color=blue, key=0, style=bold];
m6_13 -> m6_59  [key=0, style=solid];
m6_59 -> m6_60  [key=0, style=solid];
m6_59 -> m6_61  [key=0, style=solid];
m6_60 -> m6_73  [key=0, style=solid];
m6_60 -> m6_49  [key=2, style=dotted];
m6_61 -> m6_62  [key=0, style=solid];
m6_61 -> m6_63  [key=0, style=solid];
m6_61 -> m6_74  [key=2, style=dotted];
m6_62 -> m6_73  [key=0, style=solid];
m6_62 -> m6_75  [key=2, style=dotted];
m6_62 -> m6_76  [key=2, style=dotted];
m6_63 -> m6_64  [key=0, style=solid];
m6_63 -> m6_65  [key=0, style=solid];
m6_64 -> m6_73  [key=0, style=solid];
m6_64 -> m6_49  [key=2, style=dotted];
m6_65 -> m6_66  [key=0, style=solid];
m6_65 -> m6_77  [key=2, style=dotted];
m6_65 -> m6_68  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m6_66 -> m6_67  [key=0, style=solid];
m6_66 -> m6_68  [key=0, style=solid];
m6_68 -> m6_69  [key=0, style=solid];
m6_68 -> m6_73  [key=0, style=solid];
m6_68 -> m6_71  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m6_67 -> m6_73  [key=0, style=solid];
m6_67 -> m6_75  [key=2, style=dotted];
m6_69 -> m6_70  [key=0, style=solid];
m6_69 -> m6_71  [key=0, style=solid];
m6_71 -> m6_72  [key=0, style=solid];
m6_71 -> m6_68  [key=0, style=solid];
m6_70 -> m6_73  [key=0, style=solid];
m6_70 -> m6_49  [key=2, style=dotted];
m6_72 -> m6_73  [key=0, style=solid];
m6_72 -> m6_49  [key=2, style=dotted];
m6_73 -> m6_13  [color=blue, key=0, style=bold];
m6_14 -> m6_15  [key=0, style=solid];
m6_14 -> m6_17  [color=darkseagreen4, key=1, label="HangFire.IJobCancellationToken", style=dashed];
m6_14 -> m6_21  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m6_14 -> m6_22  [color=darkseagreen4, key=1, label="HangFire.IJobCancellationToken", style=dashed];
m6_14 -> m6_5  [color=green, key=1, label="Hangfire.States.StateContext", style=dashed];
m6_14 -> m6_6  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m6_14 -> m6_7  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m6_14 -> m6_8  [color=darkseagreen4, key=1, label="Hangfire.States.StateContext", style=dashed];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [key=0, style=solid];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_19  [key=0, style=solid];
m6_21 -> m6_22  [key=0, style=solid];
m6_21 -> m6_25  [key=2, style=dotted];
m6_21 -> m6_23  [color=darkseagreen4, key=1, label=instance, style=dashed];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_26  [key=2, style=dotted];
m6_16 -> m6_24  [key=0, style=solid];
m6_16 -> m6_12  [key=2, style=dotted];
m6_18 -> m6_24  [key=0, style=solid];
m6_18 -> m6_12  [key=2, style=dotted];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_23  [color=darkseagreen4, key=1, label=instance, style=dashed];
m6_20 -> m6_21  [key=0, style=solid];
m6_20 -> m6_22  [key=0, style=solid];
m6_23 -> m6_24  [key=0, style=solid];
m6_23 -> m6_27  [key=2, style=dotted];
m6_24 -> m6_14  [color=blue, key=0, style=bold];
m6_28 -> m6_29  [key=0, style=solid];
m6_29 -> m6_30  [key=0, style=solid];
m6_29 -> m6_31  [key=2, style=dotted];
m6_29 -> m6_32  [key=2, style=dotted];
m6_30 -> m6_28  [color=blue, key=0, style=bold];
m6_51 -> m6_52  [key=0, style=solid];
m6_51 -> m6_54  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m6_52 -> m6_53  [key=0, style=solid];
m6_52 -> m6_54  [key=0, style=solid];
m6_54 -> m6_55  [key=0, style=solid];
m6_54 -> m6_57  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m6_53 -> m6_58  [key=0, style=solid];
m6_53 -> m6_12  [key=2, style=dotted];
m6_55 -> m6_56  [key=0, style=solid];
m6_55 -> m6_57  [key=0, style=solid];
m6_57 -> m6_58  [key=0, style=solid];
m6_57 -> m6_0  [key=2, style=dotted];
m6_57 -> m6_50  [key=2, style=dotted];
m6_56 -> m6_58  [key=0, style=solid];
m6_56 -> m6_49  [key=2, style=dotted];
m6_58 -> m6_51  [color=blue, key=0, style=bold];
m6_154 -> m6_7  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_8  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_9  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_10  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_20  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_21  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_22  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_23  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_29  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_34  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_59  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_61  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_62  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_63  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_65  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_66  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_78  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_80  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_89  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_90  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_94  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m6_154 -> m6_113  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_6  [key=2, style=dotted];
m7_17 -> m7_15  [color=blue, key=0, style=bold];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_29  [key=2, style=dotted];
m7_28 -> m7_26  [color=blue, key=0, style=bold];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_12  [key=0, style=solid];
m7_6 -> m7_10  [key=0, style=solid];
m7_6 -> m7_13  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_6 -> m7_15  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_11  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_19  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_21  [key=2, style=dotted];
m7_15 -> m7_22  [key=2, style=dotted];
m7_11 -> m7_16  [key=0, style=solid];
m7_11 -> m7_17  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_18  [key=2, style=dotted];
m7_12 -> m7_15  [color=darkseagreen4, key=1, label=client, style=dashed];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_20  [key=2, style=dotted];
m7_14 -> m7_12  [color=blue, key=0, style=bold];
m7_16 -> m7_6  [color=blue, key=0, style=bold];
m7_16 -> m7_17  [key=0, style=solid];
m7_0 -> m7_1  [key=0, style=solid];
m7_0 -> m7_3  [color=green, key=1, label=ConnectionFactory, style=dashed];
m7_0 -> m7_5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m7_0 -> m7_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_3  [key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_2 -> m7_7  [key=0, style=solid];
m7_2 -> m7_8  [key=2, style=dotted];
m7_3 -> m7_4  [color=green, key=0, style=solid];
m7_3 -> m7_5  [color=green, key=0, style=solid];
m7_4 -> m7_7  [color=green, key=0, style=solid];
m7_4 -> m7_8  [color=green, key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_6  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_9  [key=2, style=dotted];
m7_5 -> m7_3  [color=blue, key=0, style=bold];
m7_7 -> m7_0  [color=blue, key=0, style=bold];
m7_7 -> m7_8  [key=0, style=solid];
m7_21 -> m7_39  [key=0, style=solid];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_41  [key=2, style=dotted];
m7_39 -> m7_42  [key=2, style=dotted];
m7_40 -> m7_21  [color=blue, key=0, style=bold];
m7_30 -> m7_31  [key=0, style=solid];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_29  [key=2, style=dotted];
m7_32 -> m7_30  [color=blue, key=0, style=bold];
m7_29 -> m7_33  [key=0, style=solid];
m7_29 -> m7_34  [color=darkseagreen4, key=1, label="System.TimeSpan", style=dashed];
m7_29 -> m7_35  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_18  [key=2, style=dotted];
m7_33 -> m7_35  [color=darkseagreen4, key=1, label=client, style=dashed];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_37  [key=2, style=dotted];
m7_34 -> m7_38  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_21  [key=2, style=dotted];
m7_35 -> m7_22  [key=2, style=dotted];
m7_36 -> m7_29  [color=blue, key=0, style=bold];
m7_18 -> m7_5  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m7_18 -> m7_6  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m7_18 -> m7_13  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m7_18 -> m7_16  [color=darkseagreen4, key=1, label="Hangfire.SqlServer.RabbitMQ.RabbitMqJobQueueProvider", style=dashed];
m7_23 -> m7_24  [key=0, style=solid];
m7_24 -> m7_25  [key=0, style=solid];
m7_24 -> m7_26  [key=2, style=dotted];
m7_25 -> m7_23  [color=blue, key=0, style=bold];
m7_9 -> m7_7  [color=blue, key=0, style=bold];
m9_116 -> m9_118  [color=darkseagreen4, key=1, label=disposable, style=dashed];
m9_116 -> m9_117  [key=0, style=solid];
m9_118 -> m9_68  [key=2, style=dotted];
m9_118 -> m9_119  [key=0, style=solid];
m9_118 -> m9_121  [key=0, style=solid];
m9_118 -> m9_122  [key=2, style=dotted];
m9_117 -> m9_118  [key=0, style=solid];
m9_117 -> m9_51  [key=2, style=dotted];
m9_117 -> m9_119  [key=0, style=solid];
m9_117 -> m9_121  [key=0, style=solid];
m9_119 -> m9_116  [color=blue, key=0, style=bold];
m9_119 -> m9_120  [key=0, style=solid];
m9_12 -> m9_38  [key=0, style=solid];
m9_12 -> m9_34  [key=0, style=solid];
m9_12 -> m9_36  [key=0, style=solid];
m9_12 -> m9_42  [key=2, style=dotted];
m9_46 -> m9_39  [color=blue, key=0, style=bold];
m9_24 -> m9_88  [key=0, style=solid];
m9_24 -> m9_38  [key=0, style=solid];
m9_24 -> m9_34  [key=0, style=solid];
m9_24 -> m9_36  [key=0, style=solid];
m9_24 -> m9_44  [key=2, style=dotted];
m9_24 -> m9_48  [key=2, style=dotted];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_75  [key=2, style=dotted];
m9_88 -> m9_91  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m9_88 -> m9_92  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m9_88 -> m9_85  [color=blue, key=0, style=bold];
m9_89 -> m9_90  [key=0, style=solid];
m9_89 -> m9_105  [key=2, style=dotted];
m9_89 -> m9_99  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_89 -> m9_101  [color=darkseagreen4, key=1, label=result, style=dashed];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_101  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_92 -> m9_95  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_92 -> m9_97  [color=darkseagreen4, key=1, label=Table, style=dashed];
m9_92 -> m9_104  [color=darkorchid, key=3, label="Parameter variable Table table", style=bold];
m9_92 -> m9_112  [color=darkorchid, key=3, label="Parameter variable Table table", style=bold];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_92  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_90 -> m9_93  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_90 -> m9_100  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_99 -> m9_100  [key=0, style=solid];
m9_99 -> m9_108  [key=2, style=dotted];
m9_101 -> m9_104  [key=0, style=solid];
m9_101 -> m9_109  [key=2, style=dotted];
m9_101 -> m9_102  [key=0, style=solid];
m9_101 -> m9_51  [key=2, style=dotted];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_96  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_93 -> m9_98  [color=darkseagreen4, key=1, label=argument, style=dashed];
m9_93 -> m9_58  [key=2, style=dotted];
m9_93 -> m9_59  [key=2, style=dotted];
m9_93 -> m9_95  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_100 -> m9_91  [key=0, style=solid];
m9_100 -> m9_100  [color=darkseagreen4, key=1, label=i, style=dashed];
m9_100 -> m9_101  [key=0, style=solid];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_97  [key=0, style=solid];
m9_95 -> m9_61  [key=2, style=dotted];
m9_95 -> m9_62  [key=2, style=dotted];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_106  [key=2, style=dotted];
m9_97 -> m9_99  [key=2, style=dotted];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_60  [key=2, style=dotted];
m9_96 -> m9_99  [key=0, style=solid];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_63  [key=2, style=dotted];
m9_98 -> m9_99  [key=0, style=solid];
m9_98 -> m9_107  [key=2, style=dotted];
m9_98 -> m9_92  [color=blue, key=0, style=bold];
m9_102 -> m9_103  [key=0, style=solid];
m9_102 -> m9_65  [key=2, style=dotted];
m9_103 -> m9_104  [key=0, style=solid];
m9_103 -> m9_87  [key=2, style=dotted];
m9_103 -> m9_100  [color=blue, key=0, style=bold];
m9_104 -> m9_24  [color=blue, key=0, style=bold];
m9_104 -> m9_105  [key=0, style=solid];
m9_83 -> m9_23  [color=blue, key=0, style=bold];
m9_108 -> m9_109  [key=0, style=solid];
m9_109 -> m9_110  [key=0, style=solid];
m9_109 -> m9_51  [key=2, style=dotted];
m9_110 -> m9_111  [key=0, style=solid];
m9_110 -> m9_74  [key=2, style=dotted];
m9_110 -> m9_113  [key=0, style=solid];
m9_110 -> m9_114  [key=2, style=dotted];
m9_111 -> m9_108  [color=blue, key=0, style=bold];
m9_111 -> m9_112  [key=0, style=solid];
m9_81 -> m9_82  [key=0, style=solid];
m9_74 -> m9_75  [key=0, style=solid];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_45  [key=0, style=solid];
m9_59 -> m9_60  [key=0, style=solid];
m9_59 -> m9_61  [key=0, style=solid];
m9_59 -> m9_72  [key=2, style=dotted];
m9_62 -> m9_71  [key=0, style=solid];
m9_62 -> m9_47  [key=2, style=dotted];
m9_0 -> m9_1  [key=0, style=solid];
m9_0 -> m9_3  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m9_0 -> m9_5  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m9_0 -> m9_7  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m9_0 -> m9_8  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m9_0 -> m9_9  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_7  [key=0, style=solid];
m9_5 -> m9_39  [key=2, style=dotted];
m9_7 -> m9_8  [key=0, style=solid];
m9_7 -> m9_39  [key=2, style=dotted];
m9_7 -> m9_9  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_38  [key=0, style=solid];
m9_8 -> m9_34  [key=0, style=solid];
m9_8 -> m9_36  [key=0, style=solid];
m9_8 -> m9_41  [key=2, style=dotted];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_39  [key=2, style=dotted];
m9_9 -> m9_11  [key=0, style=solid];
m9_2 -> m9_11  [key=0, style=solid];
m9_2 -> m9_12  [key=2, style=dotted];
m9_4 -> m9_11  [key=0, style=solid];
m9_4 -> m9_12  [key=2, style=dotted];
m9_4 -> m9_19  [color=green, key=1, label=string, style=dashed];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_4 -> m9_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_4 -> m9_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_4 -> m9_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_4 -> m9_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_4 -> m9_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_4 -> m9_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_4 -> m9_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_4 -> m9_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_4 -> m9_29  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_4 -> m9_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_6 -> m9_11  [key=0, style=solid];
m9_6 -> m9_12  [key=2, style=dotted];
m9_6 -> m9_38  [key=0, style=solid];
m9_6 -> m9_34  [key=0, style=solid];
m9_6 -> m9_36  [key=0, style=solid];
m9_6 -> m9_40  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_13  [key=2, style=dotted];
m9_10 -> m9_38  [key=0, style=solid];
m9_10 -> m9_34  [key=0, style=solid];
m9_10 -> m9_36  [key=0, style=solid];
m9_10 -> m9_42  [key=2, style=dotted];
m9_11 -> m9_0  [color=blue, key=0, style=bold];
m9_11 -> m9_39  [key=2, style=dotted];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_13  [key=0, style=solid];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_42  [color=red, key=0, style=solid];
m9_38 -> m9_4  [color=blue, key=0, style=bold];
m9_72 -> m9_68  [color=blue, key=0, style=bold];
m9_58 -> m9_71  [key=0, style=solid];
m9_58 -> m9_47  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_89  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_42  [color=red, key=1, label="System.Linq.Expressions.Expression<System.Action>", style=dashed];
m9_34 -> m9_35  [key=0, style=solid];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_90  [key=2, style=dotted];
m9_87 -> m9_91  [key=2, style=dotted];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_29 -> m9_39  [key=2, style=dotted];
m9_29 -> m9_30  [key=0, style=solid];
m9_29 -> m9_31  [key=0, style=solid];
m9_63 -> m9_64  [key=0, style=solid];
m9_63 -> m9_75  [key=2, style=dotted];
m9_63 -> m9_66  [color=darkseagreen4, key=1, label=parameters, style=dashed];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_87  [key=2, style=dotted];
m9_41 -> m9_46  [key=0, style=solid];
m9_41 -> m9_12  [key=2, style=dotted];
m9_49 -> m9_50  [key=0, style=solid];
m9_49 -> m9_52  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression<System.Action<T>>", style=dashed];
m9_60 -> m9_71  [key=0, style=solid];
m9_60 -> m9_73  [key=2, style=dotted];
m9_60 -> m9_74  [key=2, style=dotted];
m9_141 -> m9_142  [key=0, style=solid];
m9_141 -> m9_143  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m9_141 -> m9_146  [color=darkseagreen4, key=1, label="System.Linq.Expressions.Expression", style=dashed];
m9_142 -> m9_143  [key=0, style=solid];
m9_142 -> m9_134  [key=2, style=dotted];
m9_143 -> m9_144  [key=0, style=solid];
m9_143 -> m9_145  [color=darkseagreen4, key=1, label=constantExpression, style=dashed];
m9_146 -> m9_147  [key=0, style=solid];
m9_146 -> m9_148  [key=2, style=dotted];
m9_144 -> m9_145  [key=0, style=solid];
m9_144 -> m9_146  [key=0, style=solid];
m9_145 -> m9_147  [key=0, style=solid];
m9_147 -> m9_141  [color=blue, key=0, style=bold];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_66  [key=0, style=solid];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_52  [key=0, style=solid];
m9_48 -> m9_123  [key=0, style=solid];
m9_48 -> m9_124  [color=darkseagreen4, key=1, label="System.Linq.Expressions.MethodCallExpression", style=dashed];
m9_23 -> m9_77  [key=0, style=solid];
m9_23 -> m9_39  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=0, style=solid];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_84  [key=2, style=dotted];
m9_77 -> m9_80  [color=darkseagreen4, key=1, label=instance, style=dashed];
m9_77 -> m9_83  [key=2, style=dotted];
m9_77 -> m9_79  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_80  [key=0, style=solid];
m9_78 -> m9_62  [key=2, style=dotted];
m9_78 -> m9_84  [key=2, style=dotted];
m9_80 -> m9_83  [key=0, style=solid];
m9_80 -> m9_74  [color=blue, key=0, style=bold];
m9_79 -> m9_83  [key=0, style=solid];
m9_79 -> m9_85  [key=2, style=dotted];
m9_79 -> m9_86  [key=2, style=dotted];
m9_79 -> m9_62  [key=2, style=dotted];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_84  [key=2, style=dotted];
m9_68 -> m9_69  [color=green, key=0, style=solid];
m9_68 -> m9_66  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m9_68 -> m9_116  [color=darkorchid, key=3, label="Parameter variable string name", style=bold];
m9_68 -> m9_71  [key=0, style=solid];
m9_68 -> m9_47  [key=2, style=dotted];
m9_69 -> m9_70  [color=green, key=0, style=solid];
m9_69 -> m9_58  [color=green, key=2, style=dotted];
m9_69 -> m9_73  [color=green, key=2, style=dotted];
m9_69 -> m9_71  [color=green, key=1, label=jobIds, style=dashed];
m9_69 -> m9_66  [key=0, style=solid];
m9_70 -> m9_71  [key=0, style=solid];
m9_70 -> m9_64  [key=2, style=dotted];
m9_70 -> m9_47  [key=2, style=dotted];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_64  [key=2, style=dotted];
m9_71 -> m9_13  [color=blue, key=0, style=bold];
m9_44 -> m9_46  [key=0, style=solid];
m9_44 -> m9_47  [key=2, style=dotted];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_0  [key=2, style=dotted];
m9_45 -> m9_48  [key=2, style=dotted];
m9_106 -> m9_107  [key=0, style=solid];
m9_106 -> m9_65  [key=2, style=dotted];
m9_51 -> m9_116  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_54  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_51 -> m9_100  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m9_51 -> m9_108  [color=darkorchid, key=3, label="Parameter variable string type", style=bold];
m9_51 -> m9_56  [key=0, style=solid];
m9_51 -> m9_12  [key=2, style=dotted];
m9_52 -> m9_58  [key=2, style=dotted];
m9_52 -> m9_53  [key=0, style=solid];
m9_52 -> m9_59  [key=2, style=dotted];
m9_52 -> m9_54  [color=darkseagreen4, key=1, label=job, style=dashed];
m9_52 -> m9_55  [color=darkseagreen4, key=1, label=callExpression, style=dashed];
m9_56 -> m9_64  [key=2, style=dotted];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_49  [color=blue, key=0, style=bold];
m9_53 -> m9_54  [key=0, style=solid];
m9_53 -> m9_60  [key=2, style=dotted];
m9_53 -> m9_55  [key=0, style=solid];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_61  [key=2, style=dotted];
m9_54 -> m9_62  [key=2, style=dotted];
m9_54 -> m9_56  [key=0, style=solid];
m9_54 -> m9_47  [key=2, style=dotted];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_63  [key=2, style=dotted];
m9_55 -> m9_0  [key=2, style=dotted];
m9_55 -> m9_48  [key=2, style=dotted];
m9_57 -> m9_51  [color=blue, key=0, style=bold];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_59  [key=0, style=solid];
m9_114 -> m9_115  [key=0, style=solid];
m9_114 -> m9_74  [key=2, style=dotted];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_71  [key=0, style=solid];
m9_65 -> m9_76  [key=2, style=dotted];
m9_66 -> m9_68  [key=2, style=dotted];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_71  [key=0, style=solid];
m9_66 -> m9_69  [color=darkseagreen4, key=1, label=parameter, style=dashed];
m9_67 -> m9_65  [color=blue, key=0, style=bold];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_69  [key=0, style=solid];
m9_115 -> m9_116  [key=0, style=solid];
m9_115 -> m9_112  [color=blue, key=0, style=bold];
m9_120 -> m9_121  [key=0, style=solid];
m9_120 -> m9_87  [key=2, style=dotted];
m9_120 -> m9_20  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_71  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_18  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_6  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_8  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_10  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_12  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_14  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_16  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_22  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_24  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_26  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_28  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_30  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_32  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_37  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_52  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_66  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_75  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_76  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_86  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_93  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_101  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_102  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_105  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_106  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_109  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_110  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_113  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_114  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_117  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_120 -> m9_118  [color=darkseagreen4, key=1, label="HangFire.Tests.ClientSteps", style=dashed];
m9_121 -> m9_115  [color=blue, key=0, style=bold];
m9_19 -> m9_20  [color=green, key=0, style=solid];
m9_19 -> m9_21  [color=green, key=0, style=solid];
m9_19 -> m9_39  [color=green, key=2, style=dotted];
m9_19 -> m9_23  [key=2, style=dotted];
m9_17 -> m9_19  [color=green, key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_39  [key=2, style=dotted];
m9_17 -> m9_21  [color=darkseagreen4, key=1, label=instance, style=dashed];
m9_20 -> m9_34  [key=0, style=solid];
m9_20 -> m9_36  [key=0, style=solid];
m9_20 -> m9_38  [key=0, style=solid];
m9_20 -> m9_44  [key=2, style=dotted];
m9_20 -> m9_46  [key=2, style=dotted];
m9_20 -> m9_21  [key=0, style=solid];
m9_20 -> m9_24  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_23  [key=0, style=solid];
m9_21 -> m9_39  [key=2, style=dotted];
m9_21 -> m9_25  [key=2, style=dotted];
m9_13 -> m9_39  [key=2, style=dotted];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=0, style=solid];
m9_13 -> m9_57  [key=0, style=solid];
m9_15 -> m9_17  [key=0, style=solid];
m9_15 -> m9_39  [key=2, style=dotted];
m9_15 -> m9_16  [key=0, style=solid];
m9_25 -> m9_39  [key=2, style=dotted];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_27  [key=0, style=solid];
m9_25 -> m9_110  [key=0, style=solid];
m9_27 -> m9_39  [key=2, style=dotted];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=0, style=solid];
m9_27 -> m9_30  [key=2, style=dotted];
m9_31 -> m9_39  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_33  [key=0, style=solid];
m9_18 -> m9_38  [key=0, style=solid];
m9_18 -> m9_34  [key=0, style=solid];
m9_18 -> m9_36  [key=0, style=solid];
m9_18 -> m9_44  [key=2, style=dotted];
m9_18 -> m9_45  [key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_20  [key=0, style=solid];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_30  [color=blue, key=0, style=bold];
m9_22 -> m9_38  [key=0, style=solid];
m9_22 -> m9_34  [key=0, style=solid];
m9_22 -> m9_36  [key=0, style=solid];
m9_22 -> m9_44  [key=2, style=dotted];
m9_22 -> m9_47  [key=2, style=dotted];
m9_22 -> m9_14  [color=blue, key=0, style=bold];
m9_14 -> m9_38  [key=0, style=solid];
m9_14 -> m9_34  [key=0, style=solid];
m9_14 -> m9_36  [key=0, style=solid];
m9_14 -> m9_43  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_19  [color=darkseagreen4, key=1, label="HangFire.JobActivator", style=dashed];
m9_16 -> m9_38  [key=0, style=solid];
m9_16 -> m9_34  [key=0, style=solid];
m9_16 -> m9_36  [key=0, style=solid];
m9_16 -> m9_43  [key=2, style=dotted];
m9_16 -> m9_22  [key=0, style=solid];
m9_16 -> m9_12  [key=2, style=dotted];
m9_26 -> m9_38  [key=0, style=solid];
m9_26 -> m9_34  [key=0, style=solid];
m9_26 -> m9_36  [key=0, style=solid];
m9_26 -> m9_40  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_28 -> m9_38  [key=0, style=solid];
m9_28 -> m9_34  [key=0, style=solid];
m9_28 -> m9_36  [key=0, style=solid];
m9_28 -> m9_40  [key=2, style=dotted];
m9_28 -> m9_26  [color=blue, key=0, style=bold];
m9_30 -> m9_38  [key=0, style=solid];
m9_30 -> m9_34  [key=0, style=solid];
m9_30 -> m9_36  [key=0, style=solid];
m9_30 -> m9_40  [key=2, style=dotted];
m9_30 -> m9_35  [key=0, style=solid];
m9_32 -> m9_38  [key=0, style=solid];
m9_32 -> m9_34  [key=0, style=solid];
m9_32 -> m9_36  [key=0, style=solid];
m9_32 -> m9_49  [key=2, style=dotted];
m9_32 -> m9_41  [key=2, style=dotted];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_30  [key=2, style=dotted];
m9_33 -> m9_38  [key=0, style=solid];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_36  [key=0, style=solid];
m9_33 -> m9_50  [key=2, style=dotted];
m9_33 -> m9_31  [color=blue, key=0, style=bold];
m9_35 -> m9_38  [key=0, style=solid];
m9_35 -> m9_36  [key=0, style=solid];
m9_35 -> m9_37  [key=2, style=dotted];
m9_112 -> m9_113  [key=0, style=solid];
m9_112 -> m9_87  [key=2, style=dotted];
m9_113 -> m9_25  [color=blue, key=0, style=bold];
m9_113 -> m9_114  [key=0, style=solid];
m9_113 -> m9_92  [key=2, style=dotted];
m9_42 -> m9_43  [color=red, key=0, style=solid];
m9_42 -> m9_45  [color=red, key=1, label=callExpression, style=dashed];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_63  [key=0, style=solid];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_81  [key=2, style=dotted];
m9_75 -> m9_62  [key=2, style=dotted];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_82  [key=2, style=dotted];
m9_123 -> m9_124  [key=0, style=solid];
m9_123 -> m9_134  [key=2, style=dotted];
m9_124 -> m9_125  [key=0, style=solid];
m9_124 -> m9_135  [key=2, style=dotted];
m9_124 -> m9_136  [key=2, style=dotted];
m9_124 -> m9_126  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m9_125 -> m9_126  [key=0, style=solid];
m9_125 -> m9_137  [key=2, style=dotted];
m9_125 -> m9_131  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m9_125 -> m9_132  [color=darkseagreen4, key=1, label=serializedArguments, style=dashed];
m9_126 -> m9_127  [key=0, style=solid];
m9_126 -> m9_132  [key=0, style=solid];
m9_126 -> m9_128  [color=darkseagreen4, key=1, label=argument, style=dashed];
m9_126 -> m9_129  [color=darkseagreen4, key=1, label=argument, style=dashed];
m9_126 -> m9_130  [color=darkseagreen4, key=1, label=argument, style=dashed];
m9_131 -> m9_126  [key=0, style=solid];
m9_131 -> m9_108  [key=2, style=dotted];
m9_132 -> m9_133  [key=0, style=solid];
m9_132 -> m9_109  [key=2, style=dotted];
m9_127 -> m9_128  [key=0, style=solid];
m9_127 -> m9_131  [color=darkseagreen4, key=1, label=value, style=dashed];
m9_128 -> m9_129  [key=0, style=solid];
m9_128 -> m9_131  [key=0, style=solid];
m9_129 -> m9_130  [key=0, style=solid];
m9_129 -> m9_138  [key=2, style=dotted];
m9_129 -> m9_139  [key=2, style=dotted];
m9_130 -> m9_131  [key=0, style=solid];
m9_130 -> m9_140  [key=2, style=dotted];
m9_133 -> m9_48  [color=blue, key=0, style=bold];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_92  [key=2, style=dotted];
m9_107 -> m9_104  [color=blue, key=0, style=bold];
m9_149 -> m9_7  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_8  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_9  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_10  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_18  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_19  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_20  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_21  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_27  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_32  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_57  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_59  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_60  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_61  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_63  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_64  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_77  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_79  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_88  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_89  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_93  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
m9_149 -> m9_110  [color=darkseagreen4, key=1, label="HangFire.Common.Job", style=dashed];
}
