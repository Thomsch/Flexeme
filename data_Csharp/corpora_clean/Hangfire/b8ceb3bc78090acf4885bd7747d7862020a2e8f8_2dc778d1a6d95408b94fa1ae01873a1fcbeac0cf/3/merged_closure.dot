digraph  {
n64 [label="HangFire.Server.RecurringJobScheduler", span=""];
n0 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", label="Entry HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37"];
n1 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", label="storage == null", span="42-42"];
n3 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", label="client == null", span="43-43"];
n5 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", label="dateTimeProvider == null", span="44-44"];
n8 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", label="_client = client", span="47-47"];
n9 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", label="_dateTimeProvider = dateTimeProvider", span="48-48"];
n2 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", label="throw new ArgumentNullException(''storage'');", span="42-42"];
n4 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", label="throw new ArgumentNullException(''client'');", span="43-43"];
n6 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", label="throw new ArgumentNullException(''dateTimeProvider'');", span="44-44"];
n10 [cluster="HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", label="Exit HangFire.Server.RecurringJobScheduler.RecurringJobScheduler(HangFire.JobStorage, HangFire.IBackgroundJobClient, HangFire.Server.IDateTimeProvider)", span="37-37"];
n11 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n12 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="Entry HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51"];
n13 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="_dateTimeProvider.CurrentDateTime.Second != 0", span="53-53"];
n14 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="cancellationToken.WaitHandle.WaitOne(TimeSpan.FromSeconds(1))", span="55-55"];
n16 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="var connection = _storage.GetConnection()", span="59-59"];
n15 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="cancellationToken.ThrowIfCancellationRequested()", span="56-56"];
n26 [cluster="System.TimeSpan.FromSeconds(double)", label="Entry System.TimeSpan.FromSeconds(double)", span="0-0"];
n27 [cluster="System.Threading.WaitHandle.WaitOne(System.TimeSpan)", label="Entry System.Threading.WaitHandle.WaitOne(System.TimeSpan)", span="0-0"];
n28 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
n17 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="connection.AcquireDistributedLock(''recurring-jobs:lock'', LockTimeout)", span="60-60"];
n29 [cluster="HangFire.JobStorage.GetConnection()", label="Entry HangFire.JobStorage.GetConnection()", span="56-56"];
n18 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="var recurringJobIds = connection.GetAllItemsFromSet(''recurring-jobs'')", span="62-62"];
n20 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="var recurringJob = connection.GetAllEntriesFromHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId))", span="66-67"];
n22 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="TryScheduleJob(connection, recurringJobId, recurringJob)", span="76-76"];
n30 [cluster="HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", label="Entry HangFire.Storage.IStorageConnection.AcquireDistributedLock(string, System.TimeSpan)", span="28-28"];
n19 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label=recurringJobIds, span="64-64"];
n31 [cluster="HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", label="Entry HangFire.Storage.IStorageConnection.GetAllItemsFromSet(string)", span="55-55"];
n25 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="Exit HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", span="51-51"];
n24 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="Logger.WarnFormat(''Recurring job '{0}' can not be scheduled due to job load exception.'', ex, recurringJobId)", span="80-80"];
n21 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label="recurringJob == null", span="69-69"];
n32 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
n33 [cluster="HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", label="Entry HangFire.Storage.IStorageConnection.GetAllEntriesFromHash(string)", span="64-64"];
n23 [cluster="HangFire.Server.RecurringJobScheduler.Execute(System.Threading.CancellationToken)", label=JobLoadException, span="78-78"];
n34 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="Entry HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="87-87"];
n35 [cluster="Unk.WarnFormat", label="Entry Unk.WarnFormat", span=""];
n36 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="var serializedJob = JobHelper.FromJson<InvocationData>(recurringJob[''Job''])", span="89-89"];
n38 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="var cron = recurringJob[''Cron'']", span="91-91"];
n41 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="recurringJob.ContainsKey(''NextExecution'')", span="96-96"];
n42 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="var nextExecution = JobHelper.DeserializeDateTime(recurringJob[''NextExecution''])", span="98-98"];
n46 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="connection.SetRangeInHash(\r\n                        String.Format(''recurring-job:{0}'', recurringJobId),\r\n                        new Dictionary<string, string>\r\n                        {\r\n                            { ''LastExecution'', JobHelper.SerializeDateTime(currentTime) },\r\n                            { ''LastJobId'', jobId },\r\n                            { ''NextExecution'', JobHelper.SerializeDateTime(_dateTimeProvider.GetNextOccurrence(cronSchedule)) }\r\n                        })", span="105-112"];
n48 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="connection.SetRangeInHash(\r\n                    String.Format(''recurring-job:{0}'', recurringJobId),\r\n                    new Dictionary<string, string>\r\n                    {\r\n                        { ''NextExecution'', JobHelper.SerializeDateTime(nextExecution) }\r\n                    })", span="119-124"];
n37 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="var job = serializedJob.Deserialize()", span="90-90"];
n50 [cluster="HangFire.Common.JobHelper.FromJson<T>(string)", label="Entry HangFire.Common.JobHelper.FromJson<T>(string)", span="30-30"];
n51 [cluster="HangFire.Storage.InvocationData.Deserialize()", label="Entry HangFire.Storage.InvocationData.Deserialize()", span="38-38"];
n45 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="var jobId = _client.Create(job, state)", span="103-103"];
n39 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="var cronSchedule = CrontabSchedule.Parse(cron)", span="92-92"];
n40 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="var currentTime = _dateTimeProvider.CurrentDateTime", span="94-94"];
n52 [cluster="Unk.Parse", label="Entry Unk.Parse", span=""];
n47 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="var nextExecution = _dateTimeProvider.GetNextOccurrence(cronSchedule)", span="117-117"];
n43 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="nextExecution <= currentTime", span="100-100"];
n53 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n54 [cluster="HangFire.Common.JobHelper.DeserializeDateTime(string)", label="Entry HangFire.Common.JobHelper.DeserializeDateTime(string)", span="55-55"];
n44 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="var state = new EnqueuedState { Reason = ''Triggered by recurring job scheduler'' }", span="102-102"];
n49 [cluster="HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", label="Exit HangFire.Server.RecurringJobScheduler.TryScheduleJob(HangFire.Storage.IStorageConnection, string, System.Collections.Generic.Dictionary<string, string>)", span="87-87"];
n55 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="31-31"];
n56 [cluster="HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", label="Entry HangFire.IBackgroundJobClient.Create(HangFire.Common.Job, HangFire.States.IState)", span="41-41"];
n59 [cluster="Unk.GetNextOccurrence", label="Entry Unk.GetNextOccurrence", span=""];
n57 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
n58 [cluster="HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", label="Entry HangFire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="50-50"];
n60 [cluster="HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", label="Entry HangFire.Storage.IStorageConnection.SetRangeInHash(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, string>>)", span="61-61"];
n61 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", label="Entry HangFire.Server.RecurringJobScheduler.ToString()", span="128-128"];
n62 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", label="return ''Recurring Job Scheduler'';", span="130-130"];
n63 [cluster="HangFire.Server.RecurringJobScheduler.ToString()", label="Exit HangFire.Server.RecurringJobScheduler.ToString()", span="128-128"];
d9 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", color=green, community=0, label="_connection.Dispose()", prediction=0, span="27-27"];
d59 [label="HangFire.SqlServer.SqlServerConnection", span=""];
d8 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", label="Entry HangFire.SqlServer.SqlServerConnection.Dispose()", span="25-25"];
d10 [cluster="HangFire.SqlServer.SqlServerConnection.Dispose()", label="Exit HangFire.SqlServer.SqlServerConnection.Dispose()", span="25-25"];
d11 [cluster="Unk.Dispose", label="Entry Unk.Dispose", span=""];
d1 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", label="_connection = connection", span="19-19"];
d2 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", label="Jobs = new SqlServerJob(_connection)", span="20-20"];
d3 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", label="Sets = new SqlServerSet(_connection)", span="21-21"];
d4 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", label="Storage = storage", span="22-22"];
d13 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", label="return new SqlServerWriteOnlyTransaction(_connection);", span="32-32"];
d17 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", label="return new SqlServerFetcher(_connection, queueNames);", span="37-37"];
d21 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", label="return new SqlServerDistributedLock(\r\n                String.Format(''HangFire:Job:{0}'', jobId), \r\n                _connection);", span="42-44"];
d27 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="var jobId = _connection.Query<int>(\r\n                createJobSql,\r\n                new\r\n                {\r\n                    state = ''Created'',\r\n                    invocationData = JobHelper.ToJson(invocationData),\r\n                    arguments = JobHelper.ToJson(arguments),\r\n                    createdAt = DateTime.UtcNow,\r\n                    expireAt = DateTime.UtcNow.Add(expireIn)\r\n                }).Single().ToString()", span="62-71"];
d34 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="_connection.Execute(insertParameterSql, parameterArray)", span="91-91"];
d45 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", label="_connection.Execute(\r\n                @''merge HangFire.Server as Target ''\r\n                + @''using (VALUES (@id, @data)) as Source (Id, Data) ''\r\n                + @''on Target.Id = Source.Id ''\r\n                + @''when matched then update set Data = Source.Data, LastHeartbeat = null ''\r\n                + @''when not matched then insert (Id, Data) values (Source.Id, Source.Data);'',\r\n                new { id = serverId, data = JobHelper.ToJson(data) })", span="106-112"];
d50 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", label="_connection.Execute(\r\n                @''delete from HangFire.Server where Id = @id'',\r\n                new { id = serverId })", span="117-119"];
d53 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", label="_connection.Execute(\r\n                @''update HangFire.Server set LastHeartbeat = @now where Id = @id'',\r\n                new { now = DateTime.UtcNow, id = serverId })", span="124-126"];
d56 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", label="return _connection.Execute(\r\n                @''delete from HangFire.Server where LastHeartbeat < @timeOutAt'',\r\n                new { timeOutAt = DateTime.UtcNow.Add(timeOut.Negate()) });", span="131-133"];
d0 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", label="Entry HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="17-17"];
d6 [cluster="HangFire.SqlServer.DataTypes.SqlServerJob.SqlServerJob(SqlConnection)", label="Entry HangFire.SqlServer.DataTypes.SqlServerJob.SqlServerJob(SqlConnection)", span="14-14"];
d7 [cluster="HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", label="Entry HangFire.SqlServer.DataTypes.SqlServerSet.SqlServerSet(SqlConnection)", span="11-11"];
d5 [cluster="HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", label="Exit HangFire.SqlServer.SqlServerConnection.SqlServerConnection(HangFire.SqlServer.SqlServerStorage, SqlConnection)", span="17-17"];
d12 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", label="Entry HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="30-30"];
d14 [cluster="HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", label="Exit HangFire.SqlServer.SqlServerConnection.CreateWriteTransaction()", span="30-30"];
d15 [cluster="HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", label="Entry HangFire.SqlServer.SqlServerWriteOnlyTransaction.SqlServerWriteOnlyTransaction(SqlConnection)", span="17-17"];
d16 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", label="Entry HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="35-35"];
d18 [cluster="HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", label="Exit HangFire.SqlServer.SqlServerConnection.CreateFetcher(System.Collections.Generic.IEnumerable<string>)", span="35-35"];
d19 [cluster="HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", label="Entry HangFire.SqlServer.SqlServerFetcher.SqlServerFetcher(SqlConnection, System.Collections.Generic.IEnumerable<string>)", span="21-21"];
d20 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", label="Entry HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="40-40"];
d22 [cluster="HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", label="Exit HangFire.SqlServer.SqlServerConnection.AcquireJobLock(string)", span="40-40"];
d23 [cluster="HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", label="Entry HangFire.SqlServer.SqlServerDistributedLock.SqlServerDistributedLock(string, SqlConnection)", span="28-28"];
d24 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d25 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="Entry HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="51-51"];
d26 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="string createJobSql = @''\r\ninsert into HangFire.Job (State, InvocationData, Arguments, CreatedAt, ExpireAt)\r\nvalues (@state, @invocationData, @arguments, @createdAt, @expireAt);\r\nSELECT CAST(SCOPE_IDENTITY() as int)''", span="57-60"];
d28 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="parameters.Count > 0", span="73-73"];
d37 [cluster="HangFire.Common.JobHelper.ToJson(object)", label="Entry HangFire.Common.JobHelper.ToJson(object)", span="23-23"];
d38 [cluster="System.DateTime.Add(System.TimeSpan)", label="Entry System.DateTime.Add(System.TimeSpan)", span="0-0"];
d39 [cluster="Unk.>", label="Entry Unk.>", span=""];
d40 [cluster="Unk.Single", label="Entry Unk.Single", span=""];
d41 [cluster="Unk.ToString", label="Entry Unk.ToString", span=""];
d32 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="parameterArray[parameterIndex++] = new\r\n                    {\r\n                        jobId = jobId,\r\n                        name = parameter.Key,\r\n                        value = parameter.Value\r\n                    }", span="79-84"];
d35 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="return jobId;", span="94-94"];
d29 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="var parameterArray = new object[parameters.Count]", span="75-75"];
d33 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="string insertParameterSql = @''\r\ninsert into HangFire.JobParameter (JobId, Name, Value)\r\nvalues (@jobId, @name, @value)''", span="87-89"];
d42 [cluster="Unk.Execute", label="Entry Unk.Execute", span=""];
d43 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", label="Entry HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="97-97"];
d44 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", label="var data = new ServerData\r\n            {\r\n                WorkerCount = workerCount,\r\n                Queues = queues.ToArray(),\r\n                StartedAt = DateTime.UtcNow,\r\n            }", span="99-104"];
d46 [cluster="HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", label="Exit HangFire.SqlServer.SqlServerConnection.AnnounceServer(string, int, System.Collections.Generic.IEnumerable<string>)", span="97-97"];
d49 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="115-115"];
d51 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveServer(string)", span="115-115"];
d52 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", label="Entry HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="122-122"];
d54 [cluster="HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", label="Exit HangFire.SqlServer.SqlServerConnection.Heartbeat(string)", span="122-122"];
d55 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", label="Entry HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="129-129"];
d57 [cluster="HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", label="Exit HangFire.SqlServer.SqlServerConnection.RemoveTimedOutServers(System.TimeSpan)", span="129-129"];
d58 [cluster="System.TimeSpan.Negate()", label="Entry System.TimeSpan.Negate()", span="0-0"];
d36 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="Exit HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", span="51-51"];
d31 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label=parameters, span="77-77"];
d30 [cluster="HangFire.SqlServer.SqlServerConnection.CreateExpiredJob(HangFire.Storage.InvocationData, string[], System.Collections.Generic.IDictionary<string, string>, System.TimeSpan)", label="int parameterIndex = 0", span="76-76"];
d47 [cluster="HangFire.SqlServer.Entities.ServerData.ServerData()", label="Entry HangFire.SqlServer.Entities.ServerData.ServerData()", span="4-4"];
d48 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m0_86 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90"];
m0_87 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<OperationCanceledException>()", prediction=1, span="92-92"];
m0_88 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", prediction=1, span="93-93"];
m0_89 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", prediction=1, span="95-95"];
m0_90 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", prediction=1, span="97-97"];
m0_91 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_DoesNotCauseAutomaticRetry_OnOperationCanceledException()", span="90-90"];
m0_16 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m0_25 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="wrapper.Execute(_cts.Token)", prediction=1, span="45-45"];
m0_17 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33"];
m0_19 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="Assert.Same(_component.Object, wrapper.InnerProcess)", prediction=1, span="37-37"];
m0_22 [cluster="HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry HangFire.Server.Performing.PerformContext.GetJobParameter<T>(string)", span="69-69"];
m0_26 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Verify(x => x.Execute(It.Is<CancellationToken>(y => y == _cts.Token)))", prediction=1, span="47-47"];
m0_7 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="throw new ArgumentNullException(''jobId'');", span="43-43"];
m0_9 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="throw new ArgumentNullException(''jobMethod'');", prediction=8, span="44-44"];
m0_8 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="jobMethod == null", span="44-44"];
m0_10 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Connection = connection", span="46-46"];
m0_12 [cluster="HangFire.Server.Performing.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Storage.IStorageConnection, string, HangFire.Common.JobMethod)", file="AutomaticRetryServerComponentWrapperFacts.cs", label="JobMethod = jobMethod", span="48-48"];
m0_0 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15"];
m0_1 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component = new Mock<IServerComponent>()", prediction=9, span="17-17"];
m0_2 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_maxRetryAttempts = 3", span="18-18"];
m0_21 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100"];
m0_23 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", span="41-41"];
m0_24 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", span="43-43"];
m0_76 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m0_3 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="_cts = new CancellationTokenSource()", prediction=10, span="19-19"];
m0_4 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.AutomaticRetryServerComponentWrapperFacts()", span="15-15"];
m0_6 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m0_5 [cluster="Mock<IServerComponent>.cstr", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m0_13 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="27-27"];
m0_14 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="new AutomaticRetryProcess(null)", span="27-27"];
m0_27 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_CallsComponents_ExecuteMethod()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="HangFire.Server.Performing.PerformContext", span=""];
m0_103 [cluster="AutomaticRetryProcess.cstr", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry AutomaticRetryProcess.cstr", span=""];
m0_53 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64"];
m0_55 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="_maxRetryAttempts = 0", prediction=11, span="67-67"];
m0_54 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", span="66-66"];
m0_56 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", span="68-68"];
m0_57 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", prediction=1, span="70-70"];
m0_58 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Once)", span="72-74"];
m0_59 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldNotRetry_ComponentInvocation_WhenMaxRetryAttemptsIsZero()", span="64-64"];
m0_42 [cluster="Unk.Setup", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Unk.Setup", span=""];
m0_83 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="86-86"];
m0_30 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="47-47"];
m0_31 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.Is<CancellationToken>(y => y == _cts.Token))", prediction=1, span="47-47"];
m0_32 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="47-47"];
m0_33 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="47-47"];
m0_34 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="y == _cts.Token", prediction=1, span="47-47"];
m0_35 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="47-47"];
m0_44 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="53-53"];
m0_48 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="wrapper.Execute(_cts.Token)", prediction=1, span="56-56"];
m0_47 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="56-56"];
m0_49 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="56-56"];
m0_50 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="58-59"];
m0_45 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", prediction=16, span="53-53"];
m0_46 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="53-53"];
m0_51 [cluster="lambda expression", color=green, community=1, file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", prediction=17, span="58-59"];
m0_52 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="58-59"];
m0_63 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="70-70"];
m0_64 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="wrapper.Execute(_cts.Token)", prediction=1, span="70-70"];
m0_65 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="70-70"];
m0_77 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="81-81"];
m0_80 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="84-84"];
m0_81 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="wrapper.Execute(_cts.Token)", prediction=1, span="84-84"];
m0_82 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="84-84"];
m0_78 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", prediction=20, span="81-81"];
m0_79 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="81-81"];
m0_92 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="92-92"];
m0_96 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="wrapper.Execute(_cts.Token)", prediction=1, span="95-95"];
m0_95 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="95-95"];
m0_97 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="95-95"];
m0_98 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="97-97"];
m0_93 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", prediction=22, span="92-92"];
m0_94 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="92-92"];
m0_99 [cluster="lambda expression", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", prediction=23, span="97-97"];
m0_100 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="97-97"];
m0_61 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="66-66"];
m0_67 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(\r\n                It.IsAny<CancellationToken>())", span="72-73"];
m0_84 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="x.Execute(It.IsAny<CancellationToken>())", span="86-86"];
m0_60 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="66-66"];
m0_66 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry lambda expression", span="72-73"];
m0_15 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="27-27"];
m0_62 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="66-66"];
m0_68 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="72-73"];
m0_85 [cluster="lambda expression", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit lambda expression", span="86-86"];
m0_43 [cluster="Unk.Exactly", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Unk.Exactly", span=""];
m0_36 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51"];
m0_37 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", prediction=1, span="53-53"];
m0_38 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", prediction=1, span="54-54"];
m0_39 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="Assert.Throws<InvalidOperationException>(() => wrapper.Execute(_cts.Token))", prediction=1, span="56-56"];
m0_40 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Verify(x => x.Execute(\r\n                It.IsAny<CancellationToken>()),\r\n                Times.Exactly(_maxRetryAttempts))", prediction=1, span="58-60"];
m0_41 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_AutomaticallyRetries_ComponentInvocation_OnException()", span="51-51"];
m0_69 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78"];
m0_71 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Setup(x => x.Execute(It.IsAny<CancellationToken>())).Throws<InvalidOperationException>()", prediction=1, span="81-81"];
m0_70 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="var wrapper = CreateWrapper()", span="80-80"];
m0_72 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_cts.Cancel()", span="82-82"];
m0_73 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="Assert.Throws<OperationCanceledException>(() => wrapper.Execute(_cts.Token))", prediction=1, span="84-84"];
m0_74 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="_component.Verify(x => x.Execute(It.IsAny<CancellationToken>()), Times.Once)", span="86-86"];
m0_75 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.Execute_ShouldBeInterrupted_ByCancellationToken()", span="78-78"];
m0_20 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.InnerComponent_ReturnsGivenComponent()", span="33-33"];
m0_28 [cluster="Unk.Execute", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Unk.Execute", span=""];
m0_29 [cluster="Unk.Verify", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Entry Unk.Verify", span=""];
m0_101 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", color=green, community=0, file="AutomaticRetryServerComponentWrapperFacts.cs", label="return new AutomaticRetryProcess(_component.Object)\r\n            {\r\n                MaxRetryAttempts = _maxRetryAttempts,\r\n                DelayCallback = x => TimeSpan.Zero\r\n            };", prediction=30, span="102-106"];
m0_102 [cluster="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", file="AutomaticRetryServerComponentWrapperFacts.cs", label="Exit Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts.CreateWrapper()", span="100-100"];
m0_113 [file="AutomaticRetryServerComponentWrapperFacts.cs", label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", span=""];
m0_114 [file="AutomaticRetryServerComponentWrapperFacts.cs", label=wrapper, span=""];
m0_115 [file="AutomaticRetryServerComponentWrapperFacts.cs", label=wrapper, span=""];
m0_116 [file="AutomaticRetryServerComponentWrapperFacts.cs", label=wrapper, span=""];
m0_117 [file="AutomaticRetryServerComponentWrapperFacts.cs", label=wrapper, span=""];
m1_33 [cluster="System.Threading.Thread.Join()", file="BackgroundJobServer.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m1_51 [cluster="System.Threading.ManualResetEventSlim.Reset()", file="BackgroundJobServer.cs", label="Entry System.Threading.ManualResetEventSlim.Reset()", span="0-0"];
m1_81 [cluster="HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.JobPerformer.PerformJob(HangFire.Filters.PerformContext)", span="33-33"];
m1_84 [cluster="HangFire.States.FailedState.FailedState(string, System.Exception)", file="BackgroundJobServer.cs", label="Entry HangFire.States.FailedState.FailedState(string, System.Exception)", span="10-10"];
m1_52 [cluster="string.Format(string, params object[])", file="BackgroundJobServer.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m1_14 [cluster="System.Threading.Thread.Start()", file="BackgroundJobServer.cs", label="Entry System.Threading.Thread.Start()", span="0-0"];
m1_78 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", file="BackgroundJobServer.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.States.JobState, params string[])", span="57-57"];
m1_34 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="BackgroundJobServer.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m1_13 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="BackgroundJobServer.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m1_25 [cluster="System.Threading.ManualResetEventSlim.Set()", file="BackgroundJobServer.cs", label="Entry System.Threading.ManualResetEventSlim.Set()", span="0-0"];
m1_48 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85"];
m1_19 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="BackgroundJobServer.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m1_10 [cluster="HangFire.States.StateMachine.StateMachine(IRedisClient)", file="BackgroundJobServer.cs", label="Entry HangFire.States.StateMachine.StateMachine(IRedisClient)", span="31-31"];
m1_0 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
m1_1 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs", label="_redis = redisManager.GetClient()", span="37-37"];
m1_3 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs", label="_manager = manager", span="40-40"];
m1_4 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs", label="_context = context", span="41-41"];
m1_2 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs", label="_stateMachine = new StateMachine(_redis)", span="38-38"];
m1_5 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs", label="Logger = LogManager.GetLogger(String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber))", span="43-43"];
m1_6 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs", label="_thread = new Thread(DoWork)\r\n                {\r\n                    Name = String.Format(''HangFire.Worker.{0}'', _context.WorkerNumber),\r\n                    IsBackground = true\r\n                }", span="45-49"];
m1_7 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs", label="_thread.Start()", span="50-50"];
m1_8 [cluster="HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", file="BackgroundJobServer.cs", label="Exit HangFire.Server.Worker.Worker(IRedisClientsManager, HangFire.Server.JobManager, HangFire.Server.WorkerContext)", span="32-32"];
m1_12 [cluster="Unk.GetLogger", file="BackgroundJobServer.cs", label="Entry Unk.GetLogger", span=""];
m1_49 [cluster="System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", file="BackgroundJobServer.cs", label="Entry System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)", span="0-0"];
m1_36 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.Worker.DoWork()", span="101-101"];
m1_37 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label=true, span="105-105"];
m1_38 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label="_manager.NotifyReady(this)", span="107-107"];
m1_43 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label=OperationCanceledException, span="117-117"];
m1_44 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label=Exception, span="120-120"];
m1_39 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label="_jobIsReady.Wait(_cts.Token)", span="108-108"];
m1_40 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label=_jobLock, span="110-110"];
m1_41 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label="PerformJob(_jobPayload)", span="112-112"];
m1_42 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label="_jobIsReady.Reset()", span="113-113"];
m1_45 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label="Crashed = true", span="122-122"];
m1_46 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label="Logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. The worker will be stopped.''),\r\n                    ex)", span="123-126"];
m1_47 [cluster="HangFire.Server.Worker.DoWork()", file="BackgroundJobServer.cs", label="Exit HangFire.Server.Worker.DoWork()", span="101-101"];
m1_79 [cluster="HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.ServerJobDescriptor.ServerJobDescriptor(IRedisClient, HangFire.JobActivator, HangFire.Server.JobPayload)", span="12-12"];
m1_85 [cluster="HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.JobFetcher.RemoveFromFetchedQueue(IRedisClient, string, string)", span="86-86"];
m1_9 [cluster="Unk.GetClient", file="BackgroundJobServer.cs", label="Entry Unk.GetClient", span=""];
m1_76 [cluster="Unk.Warn", file="BackgroundJobServer.cs", label="Entry Unk.Warn", span=""];
m1_77 [cluster="HangFire.States.ProcessingState.ProcessingState(string, string)", file="BackgroundJobServer.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string, string)", span="10-10"];
m1_75 [cluster="string.IsNullOrEmpty(string)", file="BackgroundJobServer.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_80 [cluster="HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", file="BackgroundJobServer.cs", label="Entry HangFire.Filters.PerformContext.PerformContext(HangFire.Server.WorkerContext, HangFire.Server.ServerJobDescriptor)", span="13-13"];
m1_53 [cluster="Unk.Fatal", file="BackgroundJobServer.cs", label="Entry Unk.Fatal", span=""];
m1_83 [cluster="HangFire.States.SucceededState.SucceededState(string)", file="BackgroundJobServer.cs", label="Entry HangFire.States.SucceededState.SucceededState(string)", span="12-12"];
m1_15 [cluster="HangFire.Server.Worker.SendStop()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.Worker.SendStop()", span="53-53"];
m1_16 [cluster="HangFire.Server.Worker.SendStop()", file="BackgroundJobServer.cs", label="_stopSent = true", span="55-55"];
m1_17 [cluster="HangFire.Server.Worker.SendStop()", file="BackgroundJobServer.cs", label="_cts.Cancel()", span="56-56"];
m1_18 [cluster="HangFire.Server.Worker.SendStop()", file="BackgroundJobServer.cs", label="Exit HangFire.Server.Worker.SendStop()", span="53-53"];
m1_50 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="131-131"];
m1_54 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="String.IsNullOrEmpty(payload.Type)", span="133-133"];
m1_55 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="Logger.Warn(String.Format(\r\n                    ''Could not process the job '{0}': it does not exist in the storage.'',\r\n                    payload.Id))", span="135-137"];
m1_58 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="!_stateMachine.ChangeState(payload.Id, processingState, EnqueuedState.Name)", span="143-143"];
m1_62 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="jobDescriptor = new ServerJobDescriptor(\r\n                    _redis, _context.Activator, payload)", span="158-159"];
m1_67 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="Logger.Error(String.Format(\r\n                    ''Failed to process the job '{0}': unexpected exception caught.'',\r\n                    payload.Id))", span="170-172"];
m1_72 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="_stateMachine.ChangeState(payload.Id, state, ProcessingState.Name)", span="192-192"];
m1_73 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="JobFetcher.RemoveFromFetchedQueue(\r\n                _redis, payload.Id, payload.Queue)", span="199-200"];
m1_57 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="var processingState = new ProcessingState(''Worker has started processing.'', _context.ServerName)", span="142-142"];
m1_56 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="return;", span="139-139"];
m1_59 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="return;", span="145-145"];
m1_60 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="Exception exception = null", span="153-153"];
m1_61 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="ServerJobDescriptor jobDescriptor = null", span="155-155"];
m1_63 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="var performContext = new PerformContext(\r\n                    _context, jobDescriptor)", span="161-162"];
m1_64 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="_context.Performer.PerformJob(performContext)", span="164-164"];
m1_65 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label=Exception, span="166-166"];
m1_68 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="JobState state", span="182-182"];
m1_66 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="exception = ex", span="168-168"];
m1_69 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="exception == null", span="183-183"];
m1_71 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="state = new FailedState(''The job has been failed.'', exception)", span="189-189"];
m1_70 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="state = new SucceededState(''The job has been completed successfully.'')", span="185-185"];
m1_74 [cluster="HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="Exit HangFire.Server.Worker.PerformJob(HangFire.Server.JobPayload)", span="131-131"];
m1_26 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs", label="Entry HangFire.Server.Worker.Dispose()", span="87-87"];
m1_27 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs", label="!_stopSent", span="89-89"];
m1_28 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs", label="SendStop()", span="91-91"];
m1_30 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs", label="_cts.Dispose()", span="96-96"];
m1_31 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs", label="_jobIsReady.Dispose()", span="97-97"];
m1_32 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServer.cs", label="Exit HangFire.Server.Worker.Dispose()", span="87-87"];
m1_82 [cluster="Unk.Error", file="BackgroundJobServer.cs", label="Entry Unk.Error", span=""];
m1_35 [cluster="System.Threading.ManualResetEventSlim.Dispose()", file="BackgroundJobServer.cs", label="Entry System.Threading.ManualResetEventSlim.Dispose()", span="0-0"];
m1_20 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77"];
m1_21 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label=_jobLock, span="79-79"];
m1_22 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="_jobPayload = payload", span="81-81"];
m1_23 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="_jobIsReady.Set()", span="84-84"];
m1_24 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServer.cs", label="Exit HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77"];
m1_86 [file="BackgroundJobServer.cs", label="HangFire.Server.Worker", span=""];
m3_42 [cluster="System.Threading.Thread.Join()", file="BackgroundJobServerOptions.cs", label="Entry System.Threading.Thread.Join()", span="0-0"];
m3_65 [cluster="string.Format(string, params object[])", file="BackgroundJobServerOptions.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m3_22 [cluster="lambda expression", file="BackgroundJobServerOptions.cs", label="Entry lambda expression", span="86-86"];
m3_20 [cluster="Unk.Select", file="BackgroundJobServerOptions.cs", label="Entry Unk.Select", span=""];
m3_62 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Take(System.Threading.CancellationToken)", span="0-0"];
m3_21 [cluster="System.Threading.Thread.Thread(System.Threading.ThreadStart)", file="BackgroundJobServerOptions.cs", label="Entry System.Threading.Thread.Thread(System.Threading.ThreadStart)", span="0-0"];
m3_45 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Dispose()", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Dispose()", span="0-0"];
m3_46 [cluster="System.Threading.CancellationTokenSource.Dispose()", file="BackgroundJobServerOptions.cs", label="Entry System.Threading.CancellationTokenSource.Dispose()", span="0-0"];
m3_29 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="BackgroundJobServerOptions.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m3_47 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85"];
m3_48 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="BackgroundJobServerOptions.cs", label="_freeWorkers.Add(worker)", span="87-87"];
m3_49 [cluster="HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Server.JobManager.NotifyReady(HangFire.Server.Worker)", span="85-85"];
m3_16 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Shutdown timeout: {0}.'', ShutdownTimeout)", span="87-87"];
m3_17 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Schedule polling interval: {0}.'', SchedulePollingInterval)", span="88-88"];
m3_8 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", label="_logger.Info(''Workers were started.'')", span="39-39"];
m3_10 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", label="_managerThread = new Thread(Work)\r\n                {\r\n                    Name = typeof(JobManager).Name,\r\n                    IsBackground = true\r\n                }", span="44-48"];
m3_51 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Server.JobManager.Work()", span="90-90"];
m3_54 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label="worker = _freeWorkers.Take(_cts.Token)", span="99-99"];
m3_56 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label="var jobId = _fetcher.DequeueJob(_cts.Token)", span="103-103"];
m3_60 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label="_logger.Fatal(\r\n                    String.Format(\r\n                        ''Unexpected exception caught. Jobs  will not be processed by this server.''),\r\n                    ex)", span="113-116"];
m3_53 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label="Worker worker", span="96-96"];
m3_55 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label="worker.Crashed", span="101-101"];
m3_57 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label="worker.Process(jobId)", span="104-104"];
m3_59 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label=Exception, span="111-111"];
m3_52 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label=true, span="94-94"];
m3_58 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label=OperationCanceledException, span="107-107"];
m3_61 [cluster="HangFire.Server.JobManager.Work()", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Server.JobManager.Work()", span="90-90"];
m3_63 [cluster="HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Server.IJobFetcher.DequeueJob(System.Threading.CancellationToken)", span="7-7"];
m3_9 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", color=green, community=0, file="BackgroundJobServerOptions.cs", label="_fetcher = new PrioritizedJobFetcher(\r\n                redisManager, queues, workerCount)", prediction=31, span="41-42"];
m3_12 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m3_13 [cluster="System.Collections.Generic.List<T>.List(int)", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m3_14 [cluster="System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.BlockingCollection()", span="0-0"];
m3_15 [cluster="Hangfire.BackgroundJobServerOptions.WriteToLog(Hangfire.Logging.ILog)", file="BackgroundJobServerOptions.cs", label="logger.InfoFormat(''    Listening queues: {0}.'', String.Join('', '', Queues.Select(x => ''''' + x + ''''')))", span="86-86"];
m3_18 [cluster="HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Server.WorkerContext.WorkerContext(HangFire.Server.ServerContext, int)", span="9-9"];
m3_50 [cluster="System.Collections.Concurrent.BlockingCollection<T>.Add(T)", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Concurrent.BlockingCollection<T>.Add(T)", span="0-0"];
m3_19 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundJobServerOptions.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m3_66 [cluster="Unk.Fatal", file="BackgroundJobServerOptions.cs", label="Entry Unk.Fatal", span=""];
m3_0 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m3_1 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", label="_workers = new List<Worker>(workerCount)", span="28-28"];
m3_3 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", label="_logger.Info(String.Format(''Starting {0} workers...'', workerCount))", span="31-31"];
m3_4 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", label="var i = 0", span="33-33"];
m3_5 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", label="i < workerCount", span="33-33"];
m3_6 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", label="_workers.Add(\r\n                    new Worker(redisManager, this, new WorkerContext(context, i)))", span="35-36"];
m3_7 [cluster="HangFire.Server.JobManager.JobManager(IRedisClientsManager, HangFire.Server.ServerContext, int, System.Collections.Generic.IEnumerable<string>)", file="BackgroundJobServerOptions.cs", label="i++", span="33-33"];
m3_23 [cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Server.JobManager.SendStop()", span="52-52"];
m3_24 [cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs", label="_stopSent = true", span="54-54"];
m3_30 [cluster="HangFire.Server.Worker.SendStop()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Server.Worker.SendStop()", span="53-53"];
m3_25 [cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs", label="Hangfire.BackgroundJobServerOptions", span=""];
m3_26 [cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs", label=_workers, span="58-58"];
m3_27 [cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs", label="worker.SendStop()", span="60-60"];
m3_28 [cluster="HangFire.Server.JobManager.SendStop()", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Server.JobManager.SendStop()", span="52-52"];
m3_11 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="BackgroundJobServerOptions.cs", label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22"];
m3_31 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Server.JobManager.Dispose()", span="64-64"];
m3_32 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label="!_stopSent", span="66-66"];
m3_33 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label="SendStop()", span="68-68"];
m3_34 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label="_managerThread.Join()", span="71-71"];
m3_35 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label=_workers, span="73-73"];
m3_37 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label="_logger.Info(''Workers were stopped.'')", span="77-77"];
m3_38 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label="_fetcher.Dispose()", span="79-79"];
m3_39 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label="_freeWorkers.Dispose()", span="81-81"];
m3_40 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label="_cts.Dispose()", span="82-82"];
m3_36 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label="worker.Dispose()", span="75-75"];
m3_41 [cluster="HangFire.Server.JobManager.Dispose()", file="BackgroundJobServerOptions.cs", label="Exit HangFire.Server.JobManager.Dispose()", span="64-64"];
m3_44 [cluster="System.IDisposable.Dispose()", file="BackgroundJobServerOptions.cs", label="Entry System.IDisposable.Dispose()", span="0-0"];
m3_43 [cluster="HangFire.Server.Worker.Dispose()", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Server.Worker.Dispose()", span="87-87"];
m3_64 [cluster="HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", file="BackgroundJobServerOptions.cs", label="Entry HangFire.Server.Worker.Process(HangFire.Server.JobPayload)", span="77-77"];
m3_67 [file="BackgroundJobServerOptions.cs", label="HangFire.Server.JobManager", span=""];
m5_11 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", file="BackgroundProcessContext.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m5_0 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="Entry Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m5_1 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="serverId == null", span="30-30"];
m5_3 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="storage == null", span="31-31"];
m5_6 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="ServerId = serverId", span="35-35"];
m5_7 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="Storage = storage", span="36-36"];
m5_8 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="CancellationToken = cancellationToken", span="37-37"];
m5_2 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="throw new ArgumentNullException(''serverId'');", span="30-30"];
m5_4 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="throw new ArgumentNullException(''storage'');", span="31-31"];
m5_5 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", color=green, community=0, file="BackgroundProcessContext.cs", label="Properties = new Dictionary<string, object>(StringComparer.OrdinalIgnoreCase)", prediction=32, span="33-33"];
m5_9 [cluster="Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", file="BackgroundProcessContext.cs", label="Exit Hangfire.Server.BackgroundProcessContext.BackgroundProcessContext(string, Hangfire.JobStorage, System.Threading.CancellationToken)", span="25-25"];
m5_12 [file="BackgroundProcessContext.cs", label="Hangfire.Server.BackgroundProcessContext", span=""];
m6_16 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="51-51"];
m6_17 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="BackgroundProcessContextFacts.cs", label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue));", span="53-53"];
m6_18 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedCount(string)", span="51-51"];
m6_58 [cluster="System.Collections.Generic.List<T>.List()", file="BackgroundProcessContextFacts.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_190 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287"];
m6_191 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs", label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}'', queue),\r\n                from,\r\n                from + perPage - 1)", span="290-293"];
m6_192 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''EnqueuedAt'', ''State'' },\r\n                (method, job, state) => new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="295-305"];
m6_193 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedJobs(string, int, int)", span="287-287"];
m6_413 [cluster="HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Common.JobMethod.Deserialize(HangFire.Storage.InvocationData)", span="89-89"];
m6_208 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="372-372"];
m6_243 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var endDate = DateTime.UtcNow", span="375-375"];
m6_250 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var keys = dates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))).ToList()", span="383-383"];
m6_251 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="384-384"];
m6_252 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var result = new Dictionary<DateTime, long>()", span="386-386"];
m6_245 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var i = 0", span="377-377"];
m6_254 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="i < dates.Count", span="387-387"];
m6_247 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="dates.Add(endDate)", span="379-379"];
m6_260 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="return result;", span="398-398"];
m6_244 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var dates = new List<DateTime>()", span="376-376"];
m6_248 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="endDate = endDate.AddHours(-1)", span="380-380"];
m6_246 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="i < 24", span="377-377"];
m6_256 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="390-390"];
m6_253 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var i = 0", span="387-387"];
m6_258 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="result.Add(dates[i], value)", span="395-395"];
m6_249 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="i++", span="377-377"];
m6_259 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="i++", span="387-387"];
m6_255 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="long value", span="389-389"];
m6_257 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="value = 0", span="392-392"];
m6_261 [cluster="HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetHourlyTimelineStats(IRedisClient, string)", span="372-372"];
m6_204 [cluster="HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.DequeuedJobDto.DequeuedJobDto()", span="5-5"];
m6_92 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="401-401"];
m6_272 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var endDate = DateTime.UtcNow.Date", span="404-404"];
m6_279 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var keys = stringDates.Select(x => String.Format(''hangfire:stats:{0}:{1}'', type, x)).ToList()", span="415-415"];
m6_280 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var valuesMap = redis.GetValuesMap(keys)", span="417-417"];
m6_281 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var result = new Dictionary<DateTime, long>()", span="419-419"];
m6_278 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var stringDates = dates.Select(x => x.ToString(''yyyy-MM-dd'')).ToList()", span="414-414"];
m6_289 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="return result;", span="430-430"];
m6_273 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var startDate = endDate.AddDays(-7)", span="405-405"];
m6_275 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="startDate <= endDate", span="408-408"];
m6_276 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="dates.Add(endDate)", span="410-410"];
m6_277 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="endDate = endDate.AddDays(-1)", span="411-411"];
m6_285 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="!long.TryParse(valuesMap[valuesMap.Keys.ElementAt(i)], out value)", span="423-423"];
m6_282 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var i = 0", span="420-420"];
m6_287 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="result.Add(dates[i], value)", span="427-427"];
m6_283 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="i < stringDates.Count", span="420-420"];
m6_274 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="var dates = new List<DateTime>()", span="406-406"];
m6_284 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="long value", span="422-422"];
m6_286 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="value = 0", span="425-425"];
m6_288 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="i++", span="420-420"];
m6_290 [cluster="HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetTimelineStats(IRedisClient, string)", span="401-401"];
m6_129 [cluster="HangFire.Common.JobHelper.FromStringTimestamp(string)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Common.JobHelper.FromStringTimestamp(string)", span="51-51"];
m6_265 [cluster="Unk.TryParse", file="BackgroundProcessContextFacts.cs", label="Entry Unk.TryParse", span=""];
m6_37 [cluster="HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.ProcessingJobDto.ProcessingJobDto()", span="7-7"];
m6_85 [cluster="KeyValuePair<string, ScheduleDto>.cstr", file="BackgroundProcessContextFacts.cs", label="Entry KeyValuePair<string, ScheduleDto>.cstr", span=""];
m6_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="BackgroundProcessContextFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m6_38 [cluster="HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Common.JobHelper.FromNullableStringTimestamp(string)", span="56-56"];
m6_128 [cluster="int.Parse(string)", file="BackgroundProcessContextFacts.cs", label="Entry int.Parse(string)", span="0-0"];
m6_209 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="334-334"];
m6_210 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="BackgroundProcessContextFacts.cs", label="return GetHourlyTimelineStats(_redis, ''failed'');", span="336-336"];
m6_211 [cluster="HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlyFailedJobs()", span="334-334"];
m6_346 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="494-494"];
m6_348 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="498-498"];
m6_349 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="var pipeline = _redis.CreatePipeline()", span="500-500"];
m6_347 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="var stats = new StatisticsDto()", span="496-496"];
m6_356 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label=queues, span="526-526"];
m6_350 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:servers''),\r\n                    x => stats.Servers = x)", span="502-504"];
m6_351 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSetCount(''hangfire:queues''),\r\n                    x => stats.Queues = x)", span="506-508"];
m6_352 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:schedule''),\r\n                    x => stats.Scheduled = x)", span="510-512"];
m6_353 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:processing''),\r\n                    x => stats.Processing = x)", span="514-516"];
m6_354 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetValue(''hangfire:stats:succeeded''),\r\n                    x => stats.Succeeded = long.Parse(x ?? ''0''))", span="518-520"];
m6_355 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                    x => x.GetSortedSetCount(''hangfire:failed''),\r\n                    x => stats.Failed = x)", span="522-524"];
m6_358 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName)),\r\n                        x => stats.Enqueued += x)", span="529-531"];
m6_359 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="pipeline.Flush()", span="534-534"];
m6_357 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="var queueName = queue", span="528-528"];
m6_360 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="return stats;", span="537-537"];
m6_361 [cluster="HangFire.Redis.RedisMonitoringApi.GetStatistics()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetStatistics()", span="494-494"];
m6_31 [cluster="Unk.GetJobsWithProperties", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetJobsWithProperties", span=""];
m6_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BackgroundProcessContextFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m6_337 [cluster="KeyValuePair<string, T>.cstr", file="BackgroundProcessContextFacts.cs", label="Entry KeyValuePair<string, T>.cstr", span=""];
m6_60 [cluster="Unk.CreatePipeline", file="BackgroundProcessContextFacts.cs", label="Entry Unk.CreatePipeline", span=""];
m6_78 [cluster="Unk.GetValueFromHash", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetValueFromHash", span=""];
m6_212 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="339-339"];
m6_213 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="var job = _redis.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', jobId))", span="341-341"];
m6_217 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="var historyList = _redis.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', jobId))", span="347-348"];
m6_223 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="return new JobDetailsDto\r\n            {\r\n                Method = TryToGetMethod(job[''Type''], job[''Method''], job[''ParameterTypes'']),\r\n                Arguments = job.ContainsKey(''Arguments'') ? JobHelper.FromJson<string[]>(job[''Arguments'']) : null,\r\n                OldFormatArguments =\r\n                    job.ContainsKey(''Args'') ? JobHelper.FromJson<Dictionary<string, string>>(job[''Args'']) : null,\r\n                State = job.ContainsKey(''State'') ? job[''State''] : null,\r\n                CreatedAt =\r\n                    job.ContainsKey(''CreatedAt'') ? JobHelper.FromStringTimestamp(job[''CreatedAt'']) : (DateTime?) null,\r\n                Properties = job.Where(x => !hiddenProperties.Contains(x.Key)).ToDictionary(x => x.Key, x => x.Value),\r\n                History = history\r\n            };", span="358-369"];
m6_214 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="job.Count == 0", span="342-342"];
m6_219 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="!job.ContainsKey(''Method'')", span="355-355"];
m6_220 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="job.Add(''Method'', null)", span="355-355"];
m6_221 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="!job.ContainsKey(''ParameterTypes'')", span="356-356"];
m6_222 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="job.Add(''ParameterTypes'', null)", span="356-356"];
m6_216 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="var hiddenProperties = new[]\r\n            { ''Type'', ''Method'', ''ParameterTypes'', ''Arguments'', ''Args'', ''State'', ''CreatedAt'' }", span="344-345"];
m6_218 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="var history = historyList\r\n                .Select(JobHelper.FromJson<Dictionary<string, string>>)\r\n                .ToList()", span="350-352"];
m6_215 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="return null;", span="342-342"];
m6_224 [cluster="HangFire.Redis.RedisMonitoringApi.JobDetails(string)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.JobDetails(string)", span="339-339"];
m6_226 [cluster="Unk.ContainsKey", file="BackgroundProcessContextFacts.cs", label="Entry Unk.ContainsKey", span=""];
m6_339 [cluster="Unk.selector", file="BackgroundProcessContextFacts.cs", label="Entry Unk.selector", span=""];
m6_343 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="489-489"];
m6_344 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="BackgroundProcessContextFacts.cs", label="return _redis.GetListCount(''hangfire:succeeded'');", span="491-491"];
m6_345 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededListCount()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededListCount()", span="489-489"];
m6_323 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="BackgroundProcessContextFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m6_362 [cluster="HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.StatisticsDto.StatisticsDto()", span="2-2"];
m6_57 [cluster="Unk.GetRangeWithScoresFromSortedSet", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetRangeWithScoresFromSortedSet", span=""];
m6_127 [cluster="HangFire.Storage.Monitoring.ServerDto.ServerDto()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.ServerDto.ServerDto()", span="5-5"];
m6_231 [cluster="Unk.Where", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Where", span=""];
m6_291 [cluster="System.DateTime.AddDays(double)", file="BackgroundProcessContextFacts.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m6_338 [cluster="Unk.TrueForAll", file="BackgroundProcessContextFacts.cs", label="Entry Unk.TrueForAll", span=""];
m6_88 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="540-540"];
m6_408 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="BackgroundProcessContextFacts.cs", label="return JobMethod.Deserialize(new InvocationData\r\n                {\r\n                    Type = type,\r\n                    Method = method,\r\n                    ParameterTypes = parameterTypes\r\n                });", span="545-550"];
m6_410 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="BackgroundProcessContextFacts.cs", label="return null;", span="554-554"];
m6_409 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="BackgroundProcessContextFacts.cs", label=Exception, span="552-552"];
m6_411 [cluster="HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.TryToGetMethod(string, string, string)", span="540-540"];
m6_6 [cluster="Unk.Dispose", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Dispose", span=""];
m6_227 [cluster="HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.JobDetailsDto.JobDetailsDto()", span="6-6"];
m6_292 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="414-414"];
m6_377 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetSortedSetCount(''hangfire:schedule'')", span="511-511"];
m6_383 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetSortedSetCount(''hangfire:processing'')", span="515-515"];
m6_397 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetSortedSetCount(''hangfire:failed'')", span="523-523"];
m6_325 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties)", span="462-462"];
m6_315 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray())", span="454-456"];
m6_175 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queue))", span="253-253"];
m6_181 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue))", span="257-257"];
m6_403 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetListCount(String.Format(''hangfire:queue:{0}'', queueName))", span="530-530"];
m6_34 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="78-85"];
m6_40 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="85-85"];
m6_135 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="203-211"];
m6_144 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="226-231"];
m6_186 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="268-273"];
m6_194 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="300-305"];
m6_201 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="320-326"];
m6_233 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="367-367"];
m6_237 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="367-367"];
m6_240 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="367-367"];
m6_376 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="511-511"];
m6_378 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="511-511"];
m6_382 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="515-515"];
m6_384 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="515-515"];
m6_396 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="523-523"];
m6_398 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="523-523"];
m6_324 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="462-462"];
m6_326 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="462-462"];
m6_314 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="454-456"];
m6_316 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="454-456"];
m6_174 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="253-253"];
m6_176 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="253-253"];
m6_180 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="257-257"];
m6_182 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="257-257"];
m6_402 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="530-530"];
m6_404 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="530-530"];
m6_36 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="78-85"];
m6_35 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new ProcessingJobDto\r\n                {\r\n                    ServerName = state[1],\r\n                    Method = method,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.Name.Equals(\r\n                        state[2], StringComparison.OrdinalIgnoreCase),\r\n                }", span="78-85"];
m6_42 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="85-85"];
m6_41 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.Value.StartedAt", span="85-85"];
m6_82 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="126-134"];
m6_80 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="states.Add(job.Key, x)", span="119-119"];
m6_83 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new KeyValuePair<string, ScheduleDto>(\r\n                    job.Key,\r\n                    new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="126-134"];
m6_66 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="110-112"];
m6_71 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="113-113"];
m6_75 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="116-118"];
m6_79 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="119-119"];
m6_296 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x)", span="415-415"];
m6_124 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="181-188"];
m6_122 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="queues.Add(name, x)", span="175-175"];
m6_125 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }", span="181-188"];
m6_111 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="167-169"];
m6_114 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="170-170"];
m6_117 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="173-174"];
m6_121 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="175-175"];
m6_137 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="203-211"];
m6_136 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                }", span="203-211"];
m6_169 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1)", span="248-249"];
m6_146 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="226-231"];
m6_145 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="226-231"];
m6_168 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="248-249"];
m6_171 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="250-250"];
m6_177 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="254-254"];
m6_183 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="258-258"];
m6_335 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State))", span="481-485"];
m6_188 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="268-273"];
m6_187 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    }", span="268-273"];
m6_196 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="300-305"];
m6_195 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new EnqueuedJobDto\r\n                {\r\n                    Method = method,\r\n                    EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                }", span="300-305"];
m6_203 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="320-326"];
m6_202 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new DequeuedJobDto\r\n                {\r\n                    Method = method,\r\n                    State = job[0],\r\n                    CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(job[2])\r\n                }", span="320-326"];
m6_268 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="String.Format(''hangfire:stats:{0}:{1}'', type, x.ToString(''yyyy-MM-dd-HH''))", span="383-383"];
m6_234 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="!hiddenProperties.Contains(x.Key)", span="367-367"];
m6_118 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name))", span="173-174"];
m6_235 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="367-367"];
m6_239 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="367-367"];
m6_238 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.Key", span="367-367"];
m6_242 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="367-367"];
m6_241 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.Value", span="367-367"];
m6_368 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="stats.Servers = x", span="504-504"];
m6_374 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="stats.Queues = x", span="508-508"];
m6_380 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="stats.Scheduled = x", span="512-512"];
m6_386 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="stats.Processing = x", span="516-516"];
m6_393 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="stats.Succeeded = long.Parse(x ?? ''0'')", span="520-520"];
m6_400 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="stats.Failed = x", span="524-524"];
m6_406 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="stats.Enqueued += x", span="531-531"];
m6_363 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="503-503"];
m6_367 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="504-504"];
m6_370 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="507-507"];
m6_373 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="508-508"];
m6_379 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="512-512"];
m6_385 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="516-516"];
m6_388 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="519-519"];
m6_392 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="520-520"];
m6_399 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="524-524"];
m6_405 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="531-531"];
m6_320 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="!jobs.ContainsKey(id)", span="457-457"];
m6_321 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="jobs.Add(id, x)", span="457-457"];
m6_328 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="!states.ContainsKey(id)", span="463-463"];
m6_329 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="states.Add(id, x)", span="463-463"];
m6_67 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'' })", span="110-112"];
m6_112 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat'')", span="167-169"];
m6_332 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                }", span="471-480"];
m6_76 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetValueFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            ''State'')", span="116-118"];
m6_72 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="jobs.Add(job.Key, x)", span="113-113"];
m6_84 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="126-134"];
m6_81 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="119-119"];
m6_68 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="110-112"];
m6_73 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="113-113"];
m6_77 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="116-118"];
m6_295 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="415-415"];
m6_297 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="415-415"];
m6_115 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="servers.Add(name, x)", span="170-170"];
m6_126 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="181-188"];
m6_123 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="175-175"];
m6_113 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="167-169"];
m6_116 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="170-170"];
m6_119 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="173-174"];
m6_170 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="248-249"];
m6_173 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="250-250"];
m6_172 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="firstJobIds = x", span="250-250"];
m6_179 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="254-254"];
m6_178 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="length = x", span="254-254"];
m6_185 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="258-258"];
m6_184 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="dequeued = x", span="258-258"];
m6_327 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="463-463"];
m6_331 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="471-480"];
m6_334 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="481-485"];
m6_336 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="481-485"];
m6_340 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="483-483"];
m6_267 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="383-383"];
m6_269 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="383-383"];
m6_369 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="504-504"];
m6_375 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="508-508"];
m6_381 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="512-512"];
m6_387 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="516-516"];
m6_394 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="520-520"];
m6_401 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="524-524"];
m6_407 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="531-531"];
m6_365 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="503-503"];
m6_364 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetSetCount(''hangfire:servers'')", span="503-503"];
m6_372 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="507-507"];
m6_371 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetSetCount(''hangfire:queues'')", span="507-507"];
m6_390 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="519-519"];
m6_389 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.GetValue(''hangfire:stats:succeeded'')", span="519-519"];
m6_319 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Entry lambda expression", span="457-457"];
m6_322 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="457-457"];
m6_330 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="463-463"];
m6_333 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="471-480"];
m6_342 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="483-483"];
m6_341 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="y == null", span="483-483"];
m6_293 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="x.ToString(''yyyy-MM-dd'')", span="414-414"];
m6_294 [cluster="lambda expression", file="BackgroundProcessContextFacts.cs", label="Exit lambda expression", span="414-414"];
m6_29 [cluster="Unk.GetRangeFromSortedSet", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetRangeFromSortedSet", span=""];
m6_166 [cluster="HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.QueueWithTopEnqueuedJobsDto.QueueWithTopEnqueuedJobsDto()", span="4-4"];
m6_167 [cluster="System.Collections.Generic.List<T>.Add(T)", file="BackgroundProcessContextFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m6_65 [cluster="Unk.ToList", file="BackgroundProcessContextFacts.cs", label="Entry Unk.ToList", span=""];
m6_69 [cluster="Unk.Format", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Format", span=""];
m6_61 [cluster="Unk.QueueCommand", file="BackgroundProcessContextFacts.cs", label="Entry Unk.QueueCommand", span=""];
m6_0 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", span="31-31"];
m6_1 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", color=green, community=0, file="BackgroundProcessContextFacts.cs", label="_redis = redis", prediction=33, span="33-33"];
m6_2 [cluster="HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.RedisMonitoringApi(IRedisClient)", span="31-31"];
m6_130 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="191-191"];
m6_131 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="var failedJobIds = _redis.GetRangeFromSortedSetDesc(\r\n                ''hangfire:failed'',\r\n                from,\r\n                from + count - 1)", span="193-196"];
m6_132 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                failedJobIds,\r\n                null,\r\n                new[] { ''FailedAt'', ''ExceptionType'', ''ExceptionMessage'', ''ExceptionDetails'', ''State'' },\r\n                (method, job, state) => new FailedJobDto\r\n                {\r\n                    Method = method,\r\n                    FailedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    ExceptionType = state[1],\r\n                    ExceptionMessage = state[2],\r\n                    ExceptionDetails = state[3],\r\n                    InFailedState = FailedState.Name.Equals(state[4], StringComparison.OrdinalIgnoreCase)\r\n                });", span="198-211"];
m6_133 [cluster="HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedJobs(int, int)", span="191-191"];
m6_270 [cluster="System.DateTime.ToString(string)", file="BackgroundProcessContextFacts.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m6_164 [cluster="List<QueueWithTopEnqueuedJobsDto>.cstr", file="BackgroundProcessContextFacts.cs", label="Entry List<QueueWithTopEnqueuedJobsDto>.cstr", span=""];
m6_86 [cluster="HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.ScheduleDto.ScheduleDto()", span="7-7"];
m6_264 [cluster="Unk.ElementAt", file="BackgroundProcessContextFacts.cs", label="Entry Unk.ElementAt", span=""];
m6_96 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Servers()", span="148-148"];
m6_97 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="var serverNames = _redis.GetAllItemsFromSet(''hangfire:servers'')", span="150-150"];
m6_102 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="var pipeline = _redis.CreatePipeline()", span="160-160"];
m6_98 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="serverNames.Count == 0", span="152-152"];
m6_103 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label=serverNames, span="162-162"];
m6_108 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="return serverNames.Select(x => new ServerDto\r\n            {\r\n                Name = x,\r\n                WorkersCount = int.Parse(servers[x][0]),\r\n                Queues = queues[x],\r\n                StartedAt = JobHelper.FromStringTimestamp(servers[x][1]),\r\n                Heartbeat = JobHelper.FromNullableStringTimestamp(servers[x][2])\r\n            }).ToList();", span="181-188"];
m6_101 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="var queues = new Dictionary<string, List<string>>()", span="158-158"];
m6_105 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:server:{0}'', name),\r\n                            ''WorkerCount'', ''StartedAt'', ''Heartbeat''),\r\n                        x => servers.Add(name, x))", span="166-170"];
m6_106 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetAllItemsFromList(\r\n                            String.Format(''hangfire:server:{0}:queues'', name)),\r\n                        x => queues.Add(name, x))", span="172-175"];
m6_107 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="pipeline.Flush()", span="178-178"];
m6_99 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="return new List<ServerDto>();", span="154-154"];
m6_100 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="var servers = new Dictionary<string, List<string>>()", span="157-157"];
m6_104 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="var name = serverName", span="164-164"];
m6_109 [cluster="HangFire.Redis.RedisMonitoringApi.Servers()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Servers()", span="148-148"];
m6_143 [cluster="Unk.GetRangeFromList", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetRangeFromList", span=""];
m6_139 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="214-214"];
m6_140 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="var succeededJobIds = _redis.GetRangeFromList(\r\n                ''hangfire:succeeded'',\r\n                from,\r\n                from + count - 1)", span="216-219"];
m6_141 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                succeededJobIds,\r\n                null,\r\n                new[] { ''SucceededAt'', ''State'' },\r\n                (method, job, state) => new SucceededJobDto\r\n                {\r\n                    Method = method,\r\n                    SucceededAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InSucceededState = SucceededState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                });", span="221-231"];
m6_142 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededJobs(int, int)", span="214-214"];
m6_89 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="138-138"];
m6_90 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="BackgroundProcessContextFacts.cs", label="return GetTimelineStats(_redis, ''succeeded'');", span="140-140"];
m6_91 [cluster="HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.SucceededByDatesCount()", span="138-138"];
m6_62 [cluster="Unk.Flush", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Flush", span=""];
m6_395 [cluster="Unk.Parse", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Parse", span=""];
m6_74 [cluster="Unk.Add", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Add", span=""];
m6_39 [cluster="string.Equals(string, System.StringComparison)", file="BackgroundProcessContextFacts.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m6_19 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56"];
m6_20 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="BackgroundProcessContextFacts.cs", label="return _redis.GetSortedSetCount(''hangfire:failed'');", span="58-58"];
m6_21 [cluster="HangFire.Redis.RedisMonitoringApi.FailedCount()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedCount()", span="56-56"];
m6_262 [cluster="System.DateTime.AddHours(double)", file="BackgroundProcessContextFacts.cs", label="Entry System.DateTime.AddHours(double)", span="0-0"];
m6_25 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="66-66"];
m6_26 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="var jobIds = _redis.GetRangeFromSortedSet(\r\n                ''hangfire:processing'',\r\n                from,\r\n                from + count - 1)", span="69-72"];
m6_27 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="return new JobList<ProcessingJobDto>(GetJobsWithProperties(_redis,\r\n                jobIds,\r\n                null,\r\n                new[] { ''StartedAt'', ''ServerName'', ''State'' },\r\n                (method, job, state) => new ProcessingJobDto\r\n                {\r\n                    ServerName = state[1],\r\n                    Method = method,\r\n                    StartedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                    InProcessingState = ProcessingState.Name.Equals(\r\n                        state[2], StringComparison.OrdinalIgnoreCase),\r\n                }).OrderBy(x => x.Value.StartedAt).ToList());", span="74-85"];
m6_28 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingJobs(int, int)", span="66-66"];
m6_10 [cluster="Unk.GetSortedSetCount", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetSortedSetCount", span=""];
m6_147 [cluster="HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.SucceededJobDto.SucceededJobDto()", span="7-7"];
m6_22 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61"];
m6_23 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="BackgroundProcessContextFacts.cs", label="return _redis.GetSortedSetCount(''hangfire:processing'');", span="63-63"];
m6_24 [cluster="HangFire.Redis.RedisMonitoringApi.ProcessingCount()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ProcessingCount()", span="61-61"];
m6_317 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="BackgroundProcessContextFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m6_228 [cluster="Unk.TryToGetMethod", file="BackgroundProcessContextFacts.cs", label="Entry Unk.TryToGetMethod", span=""];
m6_313 [cluster="JobList<T>.cstr", file="BackgroundProcessContextFacts.cs", label="Entry JobList<T>.cstr", span=""];
m6_266 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="BackgroundProcessContextFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m6_205 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="329-329"];
m6_206 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="BackgroundProcessContextFacts.cs", label="return GetHourlyTimelineStats(_redis, ''succeeded'');", span="331-331"];
m6_207 [cluster="HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.HourlySucceededJobs()", span="329-329"];
m6_165 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="433-433"];
m6_305 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="var id = jobId", span="451-451"];
m6_302 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="properties = properties ?? new string[0]", span="445-445"];
m6_299 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="return new JobList<T>(new List<KeyValuePair<string, T>>());", span="440-440"];
m6_303 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="var pipeline = redis.CreatePipeline()", span="447-447"];
m6_298 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="jobIds.Count == 0", span="440-440"];
m6_300 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="var jobs = new Dictionary<string, List<string>>(jobIds.Count)", span="442-442"];
m6_301 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="var states = new Dictionary<string, List<string>>(jobIds.Count)", span="443-443"];
m6_304 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label=jobIds, span="449-449"];
m6_307 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="stateProperties != null", span="459-459"];
m6_308 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                            x => x.GetValuesFromHash(String.Format(''hangfire:job:{0}:state'', id), stateProperties),\r\n                            x => { if (!states.ContainsKey(id)) states.Add(id, x); })", span="461-463"];
m6_310 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="return new JobList<T>(jobIds\r\n                .Select(x => new\r\n                {\r\n                    JobId = x,\r\n                    Job = jobs[x],\r\n                    Method = TryToGetMethod(\r\n                        jobs[x][properties.Length],\r\n                        jobs[x][properties.Length + 1],\r\n                        jobs[x][properties.Length + 2]),\r\n                    State = states.ContainsKey(x) ? states[x] : null\r\n                })\r\n                .Select(x => new KeyValuePair<string, T>(\r\n                    x.JobId,\r\n                    x.Job.TrueForAll(y => y == null) \r\n                        ? default(T) \r\n                        : selector(x.Method, x.Job, x.State)))\r\n                .ToList());", span="470-486"];
m6_306 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', id), \r\n                            properties.Union(new [] { ''Type'', ''Method'', ''ParameterTypes'' }).ToArray()),\r\n                        x => { if (!jobs.ContainsKey(id)) jobs.Add(id, x); })", span="453-457"];
m6_309 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="pipeline.Flush()", span="467-467"];
m6_311 [cluster="HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.GetJobsWithProperties<T>(IRedisClient, System.Collections.Generic.IList<string>, string[], string[], System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>)", span="433-433"];
m6_271 [cluster="string.Format(string, object, object)", file="BackgroundProcessContextFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m6_225 [cluster="Unk.GetAllEntriesFromHash", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m6_232 [cluster="Unk.ToDictionary", file="BackgroundProcessContextFacts.cs", label="Entry Unk.ToDictionary", span=""];
m6_230 [cluster="Unk.FromStringTimestamp", file="BackgroundProcessContextFacts.cs", label="Entry Unk.FromStringTimestamp", span=""];
m6_312 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", file="BackgroundProcessContextFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int)", span="0-0"];
m6_366 [cluster="Unk.GetSetCount", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetSetCount", span=""];
m6_87 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41"];
m6_14 [cluster="string.Format(string, object)", file="BackgroundProcessContextFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m6_93 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="143-143"];
m6_94 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="BackgroundProcessContextFacts.cs", label="return GetTimelineStats(_redis, ''failed'');", span="145-145"];
m6_95 [cluster="HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.FailedByDatesCount()", span="143-143"];
m6_189 [cluster="HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.EnqueuedJobDto.EnqueuedJobDto()", span="7-7"];
m6_138 [cluster="HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.FailedJobDto.FailedJobDto()", span="7-7"];
m6_229 [cluster="Unk.>", file="BackgroundProcessContextFacts.cs", label="Entry Unk.>", span=""];
m6_148 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Queues()", span="234-234"];
m6_149 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="var queues = _redis.GetAllItemsFromSet(''hangfire:queues'')", span="236-236"];
m6_155 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="var pipeline = _redis.CreatePipeline()", span="245-245"];
m6_160 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="var jobs = GetJobsWithProperties(\r\n                    _redis,\r\n                    firstJobIds,\r\n                    null,\r\n                    new[] { ''EnqueuedAt'', ''State'' },\r\n                    (method, job, state) => new EnqueuedJobDto\r\n                    {\r\n                        Method = method,\r\n                        EnqueuedAt = JobHelper.FromNullableStringTimestamp(state[0]),\r\n                        InEnqueuedState = EnqueuedState.Name.Equals(state[1], StringComparison.OrdinalIgnoreCase)\r\n                    })", span="263-273"];
m6_150 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="var result = new List<QueueWithTopEnqueuedJobsDto>(queues.Count)", span="237-237"];
m6_151 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label=queues, span="239-239"];
m6_154 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="long dequeued = 0", span="243-243"];
m6_156 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetRangeFromList(\r\n                            String.Format(''hangfire:queue:{0}'', queue), -5, -1),\r\n                        x => firstJobIds = x)", span="247-250"];
m6_157 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}'', queue)),\r\n                        x => length = x)", span="252-254"];
m6_158 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetListCount(String.Format(''hangfire:queue:{0}:dequeued'', queue)),\r\n                        x => dequeued = x)", span="256-258"];
m6_159 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="pipeline.Flush()", span="260-260"];
m6_161 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="result.Add(new QueueWithTopEnqueuedJobsDto\r\n                {\r\n                    Name = queue,\r\n                    FirstJobs = jobs,\r\n                    Length = length,\r\n                    Dequeued = dequeued\r\n                })", span="275-281"];
m6_162 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="return result;", span="284-284"];
m6_152 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="IList<string> firstJobIds = null", span="241-241"];
m6_153 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="long length = 0", span="242-242"];
m6_163 [cluster="HangFire.Redis.RedisMonitoringApi.Queues()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Queues()", span="234-234"];
m6_15 [cluster="Unk.GetListCount", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetListCount", span=""];
m6_63 [cluster="JobList<ScheduleDto>.cstr", file="BackgroundProcessContextFacts.cs", label="Entry JobList<ScheduleDto>.cstr", span=""];
m6_43 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="88-88"];
m6_44 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="var scheduledJobs = _redis.GetRangeWithScoresFromSortedSet(\r\n                ''hangfire:schedule'',\r\n                from,\r\n                from + count - 1)", span="90-93"];
m6_49 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="var pipeline = _redis.CreatePipeline()", span="103-103"];
m6_45 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="scheduledJobs.Count == 0", span="95-95"];
m6_50 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label=scheduledJobs, span="105-105"];
m6_55 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="return new JobList<ScheduleDto>(scheduledJobs\r\n                .Select(job => new KeyValuePair<string, ScheduleDto>(\r\n                    job.Key,\r\n                    new ScheduleDto\r\n                    {\r\n                        ScheduledAt = JobHelper.FromTimestamp((long) job.Value),\r\n                        Method = TryToGetMethod(jobs[job.Key][0], jobs[job.Key][1], jobs[job.Key][2]),\r\n                        InScheduledState =\r\n                            ScheduledState.Name.Equals(states[job.Key], StringComparison.OrdinalIgnoreCase)\r\n                    }))\r\n                .ToList());", span="125-135"];
m6_48 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="var states = new Dictionary<string, string>()", span="101-101"];
m6_52 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValuesFromHash(\r\n                            String.Format(''hangfire:job:{0}'', job.Key),\r\n                            new[] { ''Type'', ''Method'', ''ParameterTypes'' }),\r\n                        x => jobs.Add(job.Key, x))", span="109-113"];
m6_53 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="pipeline.QueueCommand(\r\n                        x => x.GetValueFromHash(\r\n                            String.Format(''hangfire:job:{0}:state'', job.Key),\r\n                            ''State''),\r\n                        x => states.Add(job.Key, x))", span="115-119"];
m6_54 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="pipeline.Flush()", span="122-122"];
m6_46 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="return new JobList<ScheduleDto>(new List<KeyValuePair<string, ScheduleDto>>());", span="97-97"];
m6_47 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="var jobs = new Dictionary<string, List<string>>()", span="100-100"];
m6_51 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="var job = scheduledJob", span="107-107"];
m6_56 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledJobs(int, int)", span="88-88"];
m6_197 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="308-308"];
m6_198 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs", label="var jobIds = _redis.GetRangeFromList(\r\n                String.Format(''hangfire:queue:{0}:dequeued'', queue),\r\n                from, from + perPage - 1)", span="311-313"];
m6_199 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs", label="return GetJobsWithProperties(\r\n                _redis,\r\n                jobIds,\r\n                new[] { ''State'', ''CreatedAt'', ''Fetched'' },\r\n                null,\r\n                (method, job, state) => new DequeuedJobDto\r\n                {\r\n                    Method = method,\r\n                    State = job[0],\r\n                    CreatedAt = JobHelper.FromNullableStringTimestamp(job[1]),\r\n                    FetchedAt = JobHelper.FromNullableStringTimestamp(job[2])\r\n                });", span="315-326"];
m6_200 [cluster="HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.DequeuedJobs(string, int, int)", span="308-308"];
m6_59 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="BackgroundProcessContextFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m6_30 [cluster="HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.Monitoring.JobList<TDto>.JobList(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, TDto>>)", span="6-6"];
m6_11 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46"];
m6_12 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", color=green, community=0, file="BackgroundProcessContextFacts.cs", label="return _redis.GetListCount(String.Format(''hangfire:queue:{0}'', queue));", prediction=34, span="48-48"];
m6_13 [cluster="HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.EnqueuedCount(string)", span="46-46"];
m6_263 [cluster="Unk.GetValuesMap", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetValuesMap", span=""];
m6_7 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41"];
m6_8 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", color=green, community=0, file="BackgroundProcessContextFacts.cs", label="return _redis.GetSortedSetCount(''hangfire:schedule'');", prediction=34, span="43-43"];
m6_9 [cluster="HangFire.Redis.RedisMonitoringApi.ScheduledCount()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.ScheduledCount()", span="41-41"];
m6_120 [cluster="Unk.GetAllItemsFromList", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m6_236 [cluster="Unk.Contains", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Contains", span=""];
m6_64 [cluster="Unk.Select", file="BackgroundProcessContextFacts.cs", label="Entry Unk.Select", span=""];
m6_3 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36"];
m6_4 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", color=green, community=0, file="BackgroundProcessContextFacts.cs", label="_redis.Dispose()", prediction=34, span="38-38"];
m6_5 [cluster="HangFire.Redis.RedisMonitoringApi.Dispose()", file="BackgroundProcessContextFacts.cs", label="Exit HangFire.Redis.RedisMonitoringApi.Dispose()", span="36-36"];
m6_110 [cluster="Unk.GetAllItemsFromSet", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m6_134 [cluster="Unk.GetRangeFromSortedSetDesc", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetRangeFromSortedSetDesc", span=""];
m6_391 [cluster="Unk.GetValue", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetValue", span=""];
m6_70 [cluster="Unk.GetValuesFromHash", file="BackgroundProcessContextFacts.cs", label="Entry Unk.GetValuesFromHash", span=""];
m6_412 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="BackgroundProcessContextFacts.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m6_414 [file="BackgroundProcessContextFacts.cs", label="HangFire.Redis.RedisMonitoringApi", span=""];
m6_426 [file="BackgroundProcessContextFacts.cs", label=id, span=""];
m6_428 [file="BackgroundProcessContextFacts.cs", label="string[]", span=""];
m6_425 [file="BackgroundProcessContextFacts.cs", label="string[]", span=""];
m6_421 [file="BackgroundProcessContextFacts.cs", label=queue, span=""];
m6_432 [file="BackgroundProcessContextFacts.cs", label=queueName, span=""];
m6_415 [file="BackgroundProcessContextFacts.cs", label=job, span=""];
m6_417 [file="BackgroundProcessContextFacts.cs", label=states, span=""];
m6_416 [file="BackgroundProcessContextFacts.cs", label=jobs, span=""];
m6_424 [file="BackgroundProcessContextFacts.cs", label=string, span=""];
m6_418 [file="BackgroundProcessContextFacts.cs", label=name, span=""];
m6_420 [file="BackgroundProcessContextFacts.cs", label=queues, span=""];
m6_419 [file="BackgroundProcessContextFacts.cs", label=servers, span=""];
m6_430 [file="BackgroundProcessContextFacts.cs", label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", span=""];
m6_423 [file="BackgroundProcessContextFacts.cs", label=string, span=""];
m6_422 [file="BackgroundProcessContextFacts.cs", label=hiddenProperties, span=""];
m6_431 [file="BackgroundProcessContextFacts.cs", label=stats, span=""];
m6_427 [file="BackgroundProcessContextFacts.cs", label=jobs, span=""];
m6_429 [file="BackgroundProcessContextFacts.cs", label=states, span=""];
m8_35 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="BackgroundProcessExtensions.cs", label="ThenTheServerShouldBeRemoved(ServerSteps.DefaultServerName)", span="72-72"];
m8_31 [cluster="Unk.SetContainsItem", file="BackgroundProcessExtensions.cs", label="Entry Unk.SetContainsItem", span=""];
m8_4 [cluster="Unk.Parse", file="BackgroundProcessExtensions.cs", label="Entry Unk.Parse", span=""];
m8_5 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenCrontabScheduleIsNull()", file="BackgroundProcessExtensions.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenCrontabScheduleIsNull()", span="19-19"];
m8_6 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenCrontabScheduleIsNull()", file="BackgroundProcessExtensions.cs", label="var factory = CreateFactory()", span="21-21"];
m8_0 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", file="BackgroundProcessExtensions.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", span="12-12"];
m8_1 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", file="BackgroundProcessExtensions.cs", label="_crontabSchedule = CrontabSchedule.Parse(''* * * * *'')", span="14-14"];
m8_2 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.ScheduleInstantFactoryFacts()", file="BackgroundProcessExtensions.cs", label="_timeZone = TimeZoneInfo.Utc", span="15-15"];
m8_32 [cluster="Unk.True", file="BackgroundProcessExtensions.cs", label="Entry Unk.True", span=""];
m8_18 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="BackgroundProcessExtensions.cs", label="var factory = CreateFactory()", span="32-32"];
m8_19 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="BackgroundProcessExtensions.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => factory.GetInstant(_crontabSchedule, null))", span="34-35"];
m8_12 [cluster="Unk.Equal", file="BackgroundProcessExtensions.cs", label="Entry Unk.Equal", span=""];
m8_8 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", color=green, community=0, file="BackgroundProcessExtensions.cs", label="Redis.Client.AddItemToSet(''hangfire:servers'', name)", prediction=37, span="28-28"];
m8_7 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", span="26-26"];
m8_9 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="BackgroundProcessExtensions.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:server:{0}'', name),\r\n                ''StartedAt'',\r\n                JobHelper.ToStringTimestamp(startedAt))", span="29-32"];
m8_14 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="factory.GetInstant(null, _timeZone)", span="24-24"];
m8_11 [cluster="Unk.>", file="BackgroundProcessExtensions.cs", label="Entry Unk.>", span=""];
m8_13 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Entry lambda expression", span="24-24"];
m8_3 [cluster="HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Server.ServerWatchdog.ServerWatchdog(IRedisClientsManager)", span="18-18"];
m8_37 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="BackgroundProcessExtensions.cs", label=factory, span=""];
m8_38 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="BackgroundProcessExtensions.cs", label=factory, span=""];
m8_39 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="BackgroundProcessExtensions.cs", label="Assert.IsFalse(\r\n                Redis.Client.ContainsKey(String.Format(''hangfire:server:{0}'', name)))", span="79-80"];
m8_40 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved(string)", span="76-76"];
m8_41 [cluster="Unk.IsFalse", file="BackgroundProcessExtensions.cs", label="Entry Unk.IsFalse", span=""];
m8_10 [cluster="HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.GivenAServerThatWasStarted(string, System.DateTime)", span="26-26"];
m8_33 [cluster="Unk.ContainsKey", file="BackgroundProcessExtensions.cs", label="Entry Unk.ContainsKey", span=""];
m8_34 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", span="70-70"];
m8_23 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="factory.GetInstant(_crontabSchedule, null)", span="35-35"];
m8_20 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="BackgroundProcessExtensions.cs", label="Assert.Equal(''timeZone'', exception.ParamName)", span="37-37"];
m8_21 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="BackgroundProcessExtensions.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", span="30-30"];
m8_22 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Entry lambda expression", span="35-35"];
m8_16 [cluster="Unk.GetInstant", file="BackgroundProcessExtensions.cs", label="Entry Unk.GetInstant", span=""];
m8_15 [cluster="lambda expression", file="BackgroundProcessExtensions.cs", label="Exit lambda expression", span="24-24"];
m8_17 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", file="BackgroundProcessExtensions.cs", label="Entry Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ThrowsAnException_WhenTimeZoneIsNull()", span="30-30"];
m8_36 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldBeRemoved()", file="BackgroundProcessExtensions.cs", label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", span=""];
m8_27 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="BackgroundProcessExtensions.cs", label="var instant = factory.GetInstant(_crontabSchedule, _timeZone)", span="45-45"];
m8_28 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="BackgroundProcessExtensions.cs", label="Assert.True(DateTime.UtcNow.AddMinutes(-2) < instant.NowInstant)", span="47-47"];
m8_29 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", color=green, community=0, file="BackgroundProcessExtensions.cs", label="Assert.True(instant.NowInstant < DateTime.UtcNow.AddMinutes(2))", prediction=38, span="48-48"];
m8_30 [cluster="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", file="BackgroundProcessExtensions.cs", label="Exit Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts.GetInstant_ReturnsCorrectlyInitializedInstant()", span="41-41"];
m8_24 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="BackgroundProcessExtensions.cs", label="Entry HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", span="56-56"];
m8_25 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="BackgroundProcessExtensions.cs", label="ThenTheServerShouldNotBeRemoved(ServerSteps.DefaultServerName)", span="58-58"];
m8_26 [cluster="HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", file="BackgroundProcessExtensions.cs", label="Exit HangFire.Tests.ServerWatchdogSteps.ThenTheServerShouldNotBeRemoved()", span="56-56"];
m8_42 [file="BackgroundProcessExtensions.cs", label="HangFire.Tests.ServerWatchdogSteps", span=""];
m9_31 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", file="BackgroundProcessExtensionsFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", span="45-45"];
m9_32 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="var state = new FailedState(new Exception())", prediction=39, span="47-47"];
m9_33 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="Assert.False(state.IgnoreJobLoadException)", prediction=40, span="48-48"];
m9_34 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", file="BackgroundProcessExtensionsFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.IgnoreExceptions_ReturnsFalse()", span="45-45"];
m9_7 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="BackgroundProcessExtensionsFacts.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="26-26"];
m9_30 [cluster="Unk.False", file="BackgroundProcessExtensionsFacts.cs", label="Entry Unk.False", span=""];
m9_25 [cluster="System.Exception.ToString()", file="BackgroundProcessExtensionsFacts.cs", label="Entry System.Exception.ToString()", span="0-0"];
m9_23 [cluster="HangFire.States.FailedState.SerializeData()", file="BackgroundProcessExtensionsFacts.cs", label="Entry HangFire.States.FailedState.SerializeData()", span="42-42"];
m9_13 [cluster="Unk.Equal", file="BackgroundProcessExtensionsFacts.cs", label="Entry Unk.Equal", span=""];
m9_12 [cluster="System.Exception.Exception()", file="BackgroundProcessExtensionsFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m9_8 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="BackgroundProcessExtensionsFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m9_9 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="var state = new FailedState(new Exception())", prediction=41, span="19-19"];
m9_10 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="Assert.Equal(FailedState.StateName, state.Name)", prediction=42, span="20-20"];
m9_11 [cluster="HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", file="BackgroundProcessExtensionsFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.StateName_IsCorrect()", span="17-17"];
m9_14 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundProcessExtensionsFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="24-24"];
m9_15 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="var state = new FailedState(new Exception(''Message''))", prediction=43, span="26-26"];
m9_16 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="var serializedData = state.SerializeData()", prediction=43, span="28-28"];
m9_17 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="Assert.Equal(JobHelper.ToStringTimestamp(state.FailedAt), serializedData[''FailedAt''])", prediction=43, span="30-30"];
m9_20 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="Assert.Equal(state.Exception.ToString(), serializedData[''ExceptionDetails''])", prediction=43, span="33-33"];
m9_18 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="Assert.Equal(''System.Exception'', serializedData[''ExceptionType''])", prediction=43, span="31-31"];
m9_19 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="Assert.Equal(''Message'', serializedData[''ExceptionMessage''])", prediction=43, span="32-32"];
m9_21 [cluster="HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", file="BackgroundProcessExtensionsFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.SerializeData_ReturnsCorrectData()", span="24-24"];
m9_26 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundProcessExtensionsFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="37-37"];
m9_27 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="var state = new FailedState(new Exception())", prediction=49, span="39-39"];
m9_28 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="Assert.False(state.IsFinal)", prediction=50, span="41-41"];
m9_29 [cluster="HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", file="BackgroundProcessExtensionsFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.IsFinal_ReturnsFalse()", span="37-37"];
m9_0 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="BackgroundProcessExtensionsFacts.cs", label="Entry HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m9_1 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="Assert.Throws<ArgumentNullException>(\r\n                () => new FailedState(null))", prediction=51, span="12-13"];
m9_2 [cluster="HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", file="BackgroundProcessExtensionsFacts.cs", label="Exit HangFire.Core.Tests.States.FailedStateFacts.Ctor_ThrowsAnException_IfExceptionParameterIsNull()", span="10-10"];
m9_4 [cluster="lambda expression", file="BackgroundProcessExtensionsFacts.cs", label="Entry lambda expression", span="13-13"];
m9_5 [cluster="lambda expression", color=green, community=0, file="BackgroundProcessExtensionsFacts.cs", label="new FailedState(null)", prediction=52, span="13-13"];
m9_6 [cluster="lambda expression", file="BackgroundProcessExtensionsFacts.cs", label="Exit lambda expression", span="13-13"];
m9_22 [cluster="System.Exception.Exception(string)", file="BackgroundProcessExtensionsFacts.cs", label="Entry System.Exception.Exception(string)", span="0-0"];
m9_24 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="BackgroundProcessExtensionsFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m10_0 [cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Entry HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4"];
m10_1 [cluster="HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", file="BootstrapperConfigurationExtensions.cs", label="Exit HangFire.Storage.IWriteOnlyPersistentQueue.Enqueue(string, string)", span="4-4"];
m11_0 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41"];
m11_1 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, DefaultDashboardPath, DefaultAppPath)", span="43-43"];
m11_2 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder)", span="41-41"];
m11_24 [cluster="Unk.>", file="DashboardOwinExtensions.cs", label="Entry Unk.>", span=""];
m11_7 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
m11_10 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, authorizationFilters, JobStorage.Current)", span="94-94"];
m11_11 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
m11_20 [cluster="Unk.Map", file="DashboardOwinExtensions.cs", label="Entry Unk.Map", span=""];
m11_12 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
m11_13 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="app == null", span="115-115"];
m11_15 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="SignatureConversions.AddConversions(app)", span="117-117"];
m11_16 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="app.Map(dashboardPath, subApp => subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters))", span="119-123"];
m11_14 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="throw new ArgumentNullException(''app'');", span="115-115"];
m11_17 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>, Hangfire.JobStorage)", span="108-108"];
m11_4 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
m11_5 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, DefaultAppPath, DefaultAuthorizationFilters)", span="58-58"];
m11_6 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string)", span="54-54"];
m11_3 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="Entry Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70"];
m11_8 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="MapHangfireDashboard(app, dashboardPath, appPath, DefaultAuthorizationFilters)", span="75-75"];
m11_9 [cluster="Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", file="DashboardOwinExtensions.cs", label="Exit Hangfire.Dashboard.DashboardOwinExtensions.MapHangfireDashboard(IAppBuilder, string, string)", span="70-70"];
m11_19 [cluster="Unk.AddConversions", file="DashboardOwinExtensions.cs", label="Entry Unk.AddConversions", span=""];
m11_21 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Entry lambda expression", span="119-123"];
m11_22 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="subApp.Use<DashboardMiddleware>(\r\n                appPath,\r\n                storage,\r\n                DashboardRoutes.Routes,\r\n                authorizationFilters)", span="119-123"];
m11_23 [cluster="lambda expression", file="DashboardOwinExtensions.cs", label="Exit lambda expression", span="119-123"];
m11_25 [file="DashboardOwinExtensions.cs", label=string, span=""];
m11_26 [file="DashboardOwinExtensions.cs", label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", span=""];
m11_27 [file="DashboardOwinExtensions.cs", label="Hangfire.JobStorage", span=""];
m12_0 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs", label="Entry Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
m12_1 [cluster="Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="IBackgroundProcess.cs", label="Exit Hangfire.Server.IBackgroundProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="24-24"];
m13_8 [cluster="Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseStorage(Hangfire.JobStorage)", span="65-65"];
m13_9 [cluster="HangFire.BackgroundJobServer.Start()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.BackgroundJobServer.Start()", span="52-52"];
m13_10 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73"];
m13_12 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81"];
m13_13 [cluster="Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseServer(System.Func<Hangfire.BackgroundJobServer>)", span="81-81"];
m13_11 [cluster="Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseActivator(Hangfire.JobActivator)", span="73-73"];
m13_14 [cluster="HangFire.BackgroundJobServer.Start()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.BackgroundJobServer.Start()", span="52-52"];
m13_15 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="IBootstrapperConfiguration.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m13_0 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35"];
m13_1 [cluster="Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAuthorizationFilters(params Hangfire.Dashboard.IAuthorizationFilter[])", span="35-35"];
m13_16 [cluster="System.Diagnostics.Process.GetCurrentProcess()", file="IBootstrapperConfiguration.cs", label="Entry System.Diagnostics.Process.GetCurrentProcess()", span="0-0"];
m13_17 [cluster="string.Format(string, object, object)", file="IBootstrapperConfiguration.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m13_27 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82"];
m13_28 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="IBootstrapperConfiguration.cs", label="Stop()", span="84-84"];
m13_29 [cluster="HangFire.BackgroundJobServer.System.IDisposable.Dispose()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.BackgroundJobServer.System.IDisposable.Dispose()", span="82-82"];
m13_26 [cluster="HangFire.Server.JobServer.Dispose()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.Server.JobServer.Dispose()", span="70-70"];
m13_4 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="IBootstrapperConfiguration.cs", label="PollInterval = TimeSpan.FromSeconds(15)", span="23-23"];
m13_5 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", color=green, community=0, file="IBootstrapperConfiguration.cs", label="WorkerCount = workerCount", prediction=53, span="25-25"];
m13_2 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="IBootstrapperConfiguration.cs", label="Entry HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", span="20-20"];
m13_3 [cluster="HangFire.BackgroundJobServer.BackgroundJobServer(int, params string[])", file="IBootstrapperConfiguration.cs", label="MachineName = Environment.MachineName", span="22-22"];
m13_6 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="IBootstrapperConfiguration.cs", label="Entry Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57"];
m13_7 [cluster="Hangfire.IBootstrapperConfiguration.UseAppPath(string)", file="IBootstrapperConfiguration.cs", label="Exit Hangfire.IBootstrapperConfiguration.UseAppPath(string)", span="57-57"];
m13_19 [cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs", label="Entry HangFire.BackgroundJobServer.Stop()", span="70-70"];
m13_20 [cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs", label="_server != null", span="72-72"];
m13_21 [cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs", label="_server.Dispose()", span="74-74"];
m13_22 [cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs", label="_server = null", span="75-75"];
m13_24 [cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs", label="return false;", span="79-79"];
m13_23 [cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs", label="return true;", span="77-77"];
m13_25 [cluster="HangFire.BackgroundJobServer.Stop()", file="IBootstrapperConfiguration.cs", label="Exit HangFire.BackgroundJobServer.Stop()", span="70-70"];
m13_18 [cluster="HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", file="IBootstrapperConfiguration.cs", label="Entry HangFire.Server.JobServer.JobServer(IRedisClientsManager, string, int, System.Collections.Generic.IEnumerable<string>, HangFire.JobActivator, System.TimeSpan, System.TimeSpan)", span="33-33"];
m13_30 [file="IBootstrapperConfiguration.cs", label="HangFire.BackgroundJobServer", span=""];
m14_19 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="time = DateTime.UtcNow.AddMilliseconds(-1)", prediction=54, span="28-28"];
m14_74 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.CreateComponent()", span="78-78"];
m14_40 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="38-38"];
m14_20 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", file="InfiniteLoopComponentFacts.cs", label="timeAgo.Equals(''day'')", span="29-29"];
m14_30 [cluster="HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Server.DequeuedJobsWatcher.FindAndRequeueTimedOutJobs()", span="32-32"];
m14_14 [cluster="HangFire.JobHelper.ToStringTimestamp(System.DateTime)", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.JobHelper.ToStringTimestamp(System.DateTime)", span="63-63"];
m14_18 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.GivenItWasFetchedAAgo(string)", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="timeAgo.Equals(''millisecond'')", prediction=55, span="28-28"];
m14_72 [cluster="Unk.Equal", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Equal", span=""];
m14_41 [cluster="System.Threading.Thread.Sleep(int)", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.Thread.Sleep(int)", span="0-0"];
m14_29 [cluster="Unk.Callback", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Callback", span=""];
m14_39 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Thread.Sleep(5)", span="38-38"];
m14_21 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_CallsTheExecuteMethod_UntilCancellationToken_IsCanceled()", span="34-34"];
m14_55 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheFetchedFlagSet()", span="90-90"];
m14_9 [cluster="Unk.>", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.>", span=""];
m14_6 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="throw new InvalidOperationException(String.Format(''Unknown period '{0}'.'', timeAgo));", prediction=56, span="16-16"];
m14_7 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="Redis.Client.SetEntryInHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'',\r\n                JobHelper.ToStringTimestamp(time))", prediction=57, span="18-21"];
m14_8 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ItWasCheckedAAgo(string)", span="11-11"];
m14_27 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.WhenTimedOutJobsHandlerRuns()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="watcher.FindAndRequeueTimedOutJobs()", prediction=58, span="43-43"];
m14_70 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46"];
m14_13 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m14_45 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61"];
m14_0 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
m14_4 [cluster="Mock<IServerComponent>.cstr", file="InfiniteLoopComponentFacts.cs", label="Entry Mock<IServerComponent>.cstr", span=""];
m14_3 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.InfiniteLoopComponentFacts()", span="13-13"];
m14_5 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="InfiniteLoopComponentFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m14_10 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="22-22"];
m14_71 [cluster="Unk.ToString", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.ToString", span=""];
m14_12 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="22-22"];
m14_28 [cluster="Unk.Setup", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Setup", span=""];
m14_11 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="new InfiniteLoopProcess(null)", span="22-22"];
m14_54 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallTheExecuteMethod_WhenCancellationToken_IsAlreadyCanceled()", span="51-51"];
m14_56 [cluster="lambda expression", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", prediction=59, span="58-58"];
m14_58 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="58-58"];
m14_59 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Entry lambda expression", span="61-61"];
m14_34 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="InfiniteLoopComponentFacts.cs", label="var date = JobHelper.FromStringTimestamp(checkedTimestamp)", span="55-55"];
m14_38 [cluster="Unk.IsNotNull", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.IsNotNull", span=""];
m14_43 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", prediction=60, span="63-65"];
m14_42 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", span="61-61"];
m14_46 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71"];
m14_35 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="Assert.IsTrue(date > DateTime.UtcNow.AddMinutes(-1))", prediction=61, span="57-57"];
m14_36 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48"];
m14_44 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobHasTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs", label="Assert.IsNotNull(checkedTimestamp)", span="67-67"];
m14_47 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", prediction=62, span="73-75"];
m14_48 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", color=green, community=0, file="InfiniteLoopComponentFacts.cs", label="Assert.IsNull(checkedTimestamp)", prediction=63, span="77-77"];
m14_61 [cluster="lambda expression", file="InfiniteLoopComponentFacts.cs", label="Exit lambda expression", span="61-61"];
m14_65 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
m14_69 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.ToString_ReturnsTheName_OfInnerComponent()", span="71-71"];
m14_49 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", file="InfiniteLoopComponentFacts.cs", label="Exit HangFire.Tests.DequeuedJobsWatcherSteps.ThenTheJobDoesNotHaveTheCheckedFlagSet()", span="71-71"];
m14_31 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="InfiniteLoopComponentFacts.cs", label="Entry HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", span="48-48"];
m14_32 [cluster="HangFire.Tests.DequeuedJobsWatcherSteps.ThenItMarksTheJobAsChecked()", file="InfiniteLoopComponentFacts.cs", label="var checkedTimestamp = Redis.Client.GetValueFromHash(\r\n                String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                ''Checked'')", span="50-52"];
m14_62 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Entry Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
m14_64 [cluster="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", file="InfiniteLoopComponentFacts.cs", label="Exit Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts.Execute_DoesNotCallExecuteMethod_WhenCancellationToken_IsCanceled()", span="65-65"];
m14_75 [cluster="InfiniteLoopProcess.cstr", file="InfiniteLoopComponentFacts.cs", label="Entry InfiniteLoopProcess.cstr", span=""];
m14_37 [cluster="Unk.Execute", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Execute", span=""];
m14_33 [cluster="Unk.Verify", file="InfiniteLoopComponentFacts.cs", label="Entry Unk.Verify", span=""];
m14_76 [file="InfiniteLoopComponentFacts.cs", label="Hangfire.Core.Tests.Server.InfiniteLoopComponentFacts", span=""];
m14_77 [file="InfiniteLoopComponentFacts.cs", label=component, span=""];
m14_78 [file="InfiniteLoopComponentFacts.cs", label=component, span=""];
m15_15 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46"];
m15_16 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopProcess.cs", label="return InnerProcess.ToString();", span="48-48"];
m15_17 [cluster="Hangfire.Server.InfiniteLoopProcess.ToString()", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.ToString()", span="46-46"];
m15_0 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m15_1 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopProcess.cs", label="innerProcess == null", span="26-26"];
m15_3 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopProcess.cs", label="InnerProcess = innerProcess", span="27-27"];
m15_2 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopProcess.cs", label="throw new ArgumentNullException(''innerProcess'');", span="26-26"];
m15_4 [cluster="Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.InfiniteLoopProcess(Hangfire.Server.ILongRunningProcess)", span="24-24"];
m15_6 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", span="32-32"];
m15_7 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.Execute(System.Threading.CancellationToken)", span="32-32"];
m15_8 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m15_9 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs", label=true, span="39-39"];
m15_10 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs", label="context.CancellationToken.ThrowIfCancellationRequested()", span="41-41"];
m15_11 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs", label="InnerProcess.Execute(context)", span="42-42"];
m15_12 [cluster="Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs", label="Exit Hangfire.Server.InfiniteLoopProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="37-37"];
m15_14 [cluster="Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", file="InfiniteLoopProcess.cs", label="Entry Hangfire.Server.ILongRunningProcess.Execute(Hangfire.Server.BackgroundProcessContext)", span="26-26"];
m15_18 [cluster="object.ToString()", file="InfiniteLoopProcess.cs", label="Entry object.ToString()", span="0-0"];
m15_13 [cluster="System.Threading.CancellationToken.ThrowIfCancellationRequested()", file="InfiniteLoopProcess.cs", label="Entry System.Threading.CancellationToken.ThrowIfCancellationRequested()", span="0-0"];
m15_19 [file="InfiniteLoopProcess.cs", label="Hangfire.Server.InfiniteLoopProcess", span=""];
m16_0 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs", label="Entry Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m16_1 [cluster="Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", file="IServerComponent.cs", label="Exit Hangfire.Server.IServerComponent.Execute(System.Threading.CancellationToken)", span="22-22"];
m17_20 [cluster="Hangfire.Common.GlobalJobFilterCollection.Add(object)", file="OwinBootstrapper.cs", label="Entry Hangfire.Common.GlobalJobFilterCollection.Add(object)", span="56-56"];
m17_23 [cluster="IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", file="OwinBootstrapper.cs", label="Entry IAppBuilder.MapHangfireDashboard(string, string, System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>)", span="88-88"];
m17_18 [cluster="Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", file="OwinBootstrapper.cs", label="Entry Hangfire.BootstrapperConfiguration.BootstrapperConfiguration()", span="24-24"];
m17_0 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="Entry Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", span="34-34"];
m17_1 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="app == null", span="38-38"];
m17_3 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="configurationAction == null", span="39-39"];
m17_6 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="configurationAction(configuration)", span="42-42"];
m17_14 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="app.RunHangfireServer(server())", span="61-61"];
m17_15 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="app.MapHangfireDashboard(configuration.DashboardPath, configuration.AppPath, configuration.AuthorizationFilters)", span="64-64"];
m17_2 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="throw new ArgumentNullException(''app'');", span="38-38"];
m17_4 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="throw new ArgumentNullException(''configurationAction'');", span="39-39"];
m17_5 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="var configuration = new BootstrapperConfiguration()", span="41-41"];
m17_7 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="configuration.Activator != null", span="44-44"];
m17_8 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="JobActivator.Current = configuration.Activator", span="46-46"];
m17_9 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="configuration.Storage != null", span="49-49"];
m17_10 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="JobStorage.Current = configuration.Storage", span="51-51"];
m17_11 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="configuration.Filters", span="54-54"];
m17_13 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="configuration.Servers", span="59-59"];
m17_12 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="GlobalJobFilters.Filters.Add(filter)", span="56-56"];
m17_16 [cluster="Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", file="OwinBootstrapper.cs", label="Exit Hangfire.OwinBootstrapper.UseHangfire(IAppBuilder, System.Action<Hangfire.IBootstrapperConfiguration>)", span="34-34"];
m17_22 [cluster="IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", file="OwinBootstrapper.cs", label="Entry IAppBuilder.RunHangfireServer(Hangfire.BackgroundJobServer)", span="38-38"];
m17_19 [cluster="System.Action<T>.Invoke(T)", file="OwinBootstrapper.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m17_21 [cluster="System.Func<TResult>.Invoke()", file="OwinBootstrapper.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m18_72 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="var currentState = jobData.State", span="131-131"];
m18_161 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="172-172"];
m18_50 [cluster="Unk.GetConnection", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetConnection", span=""];
m18_18 [cluster="Mock<IBackgroundJobClient>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IBackgroundJobClient>.cstr", span=""];
m18_91 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="99-99"];
m18_17 [cluster="Mock<JobStorage>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m18_154 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="var time = DateTime.UtcNow", span="166-166"];
m18_156 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="168-168"];
m18_158 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="_instant.Verify(x => x.GetNextInstants(time))", span="172-172"];
m18_159 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="164-164"];
m18_153 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", span="164-164"];
m18_155 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_TakesIntoConsideration_LastExecutionTime_ConvertedToLocalTimezone()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''LastExecution''] = JobHelper.SerializeDateTime(time)", span="167-167"];
m18_160 [cluster="Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.JobHelper.SerializeDateTime(System.DateTime)", span="68-68"];
m18_105 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="var changedContext = new StateApplyingContext(\r\n                    context,\r\n                    transaction)", span="200-202"];
m18_106 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="ApplyState(changedContext, context.CurrentState, context.CandidateState, stateChangedFilters)", span="204-204"];
m18_108 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="194-194"];
m18_109 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="!String.IsNullOrEmpty(oldState)", span="216-216"];
m18_110 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="_handlers.ContainsKey(oldState)", prediction=64, span="218-218"];
m18_111 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="_handlers[oldState]", span="220-220"];
m18_112 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="handler.Unapply(context)", span="222-222"];
m18_207 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="228-228"];
m18_208 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''TimeZoneId''] = ''Some garbage''", span="230-230"];
m18_209 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="231-231"];
m18_212 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_DoesNotCreateAJob_WhenGivenOneIsNotFound()", span="228-228"];
m18_94 [cluster="string.Format(string, object, object)", file="RecurringJobSchedulerFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m18_95 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m18_98 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RecurringJobSchedulerFacts.cs", label="filter.OnStateChanging(context)", span="185-185"];
m18_129 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.SetRangeInHash(\r\n                jobKey,\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NowInstant)))", span="137-141"];
m18_135 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_instant.Setup(x => x.GetNextInstants(It.IsAny<DateTime?>())).Returns(Enumerable.Empty<DateTime>)", span="147-147"];
m18_136 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="148-148"];
m18_139 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="_connection.Verify(x => x.SetRangeInHash(\r\n                String.Format(''recurring-job:{0}'', RecurringJobId),\r\n                It.Is<Dictionary<string, string>>(rj =>\r\n                    rj.ContainsKey(''NextExecution'') && rj[''NextExecution'']\r\n                        == JobHelper.SerializeDateTime(_instant.Object.NextInstant))))", span="156-160"];
m18_140 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotEnqueueRecurringJob_AndDoesNotUpdateIt_ButNextExecution_WhenItIsNotATimeToRunIt()", span="145-145"];
m18_141 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="147-147"];
m18_142 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(It.IsAny<DateTime?>())", span="147-147"];
m18_143 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="147-147"];
m18_35 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", file="RecurringJobSchedulerFacts.cs", label="var filterInfo = GetFilters(method)", span="86-86"];
m18_54 [cluster="Unk.GetAllItemsFromSet", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetAllItemsFromSet", span=""];
m18_100 [cluster="HangFire.States.StateMachine.InvokeStateChangingFilters(HangFire.Common.States.StateChangingContext, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangingFilter>)", file="RecurringJobSchedulerFacts.cs", label="AppendHistory(context, oldState, false)", span="189-189"];
m18_99 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="238-238"];
m18_101 [cluster="Unk.Verify", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Verify", span=""];
m18_58 [cluster="string.Format(string, object)", file="RecurringJobSchedulerFacts.cs", label="Entry string.Format(string, object)", span="0-0"];
m18_181 [cluster="Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Storage.InvocationData.InvocationData(string, string, string, string)", span="26-26"];
m18_52 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(''recurring-jobs'')", span="55-55"];
m18_120 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label=stateChangedFilters, prediction=64, span="243-243"];
m18_104 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="111-111"];
m18_14 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="_connection.Setup(x => x.GetAllEntriesFromHash(String.Format(''recurring-job:{0}'', RecurringJobId)))\r\n                .Returns(_recurringJob)", span="58-59"];
m18_90 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenThrottlerIsNull()", span="95-95"];
m18_20 [cluster="Mock<IThrottler>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IThrottler>.cstr", span=""];
m18_164 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="HangFire.States.StateMachine", span=""];
m18_165 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="System.Collections.Generic.IEnumerable<object>", span=""];
m18_166 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="180-180"];
m18_168 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_DoesNotFail_WhenRecurringJobDoesNotExist()", span="176-176"];
m18_127 [cluster="Unk.SerializeDateTime", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SerializeDateTime", span=""];
m18_152 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="158-160"];
m18_193 [cluster="System.TimeZoneInfo.FindSystemTimeZoneById(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeZoneInfo.FindSystemTimeZoneById(string)", span="0-0"];
m18_27 [cluster="HangFire.States.StateMachine.CreateInState(HangFire.Common.JobMethod, string[], System.Collections.Generic.IDictionary<string, string>, HangFire.Common.States.JobState)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="method == null", prediction=66, span="69-69"];
m18_0 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.RecurringJobSchedulerFacts()", span="28-28"];
m18_3 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="connection == null", prediction=67, span="46-46"];
m18_4 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="throw new ArgumentNullException(''connection'');", prediction=64, span="46-46"];
m18_6 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RecurringJobSchedulerFacts.cs", label="throw new ArgumentNullException(''stateHandlers'');", span="47-47"];
m18_7 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RecurringJobSchedulerFacts.cs", label="_connection = connection", span="49-49"];
m18_9 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label=handlers, prediction=69, span="52-52"];
m18_11 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RecurringJobSchedulerFacts.cs", label="filters != null", span="57-57"];
m18_13 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m18_16 [cluster="System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m18_26 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m18_28 [cluster="Hangfire.Common.JobHelper.ToJson(object)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Common.JobHelper.ToJson(object)", prediction=70, span="32-32"];
m18_29 [cluster="Mock<IStorageConnection>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m18_33 [cluster="lambda expression", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", prediction=64, span="38-38"];
m18_31 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="38-38"];
m18_34 [cluster="Unk.>", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Entry Unk.>", prediction=64, span=""];
m18_36 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="42-42"];
m18_42 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="43-43"];
m18_44 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Console.WriteLine()", span="48-48"];
m18_30 [cluster="System.Collections.Generic.HashSet<T>.HashSet()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.HashSet<T>.HashSet()", span="0-0"];
m18_32 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetNextInstants(It.IsAny<DateTime?>())", span="38-38"];
m18_38 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="42-42"];
m18_39 [cluster="Unk.GetInstant", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.GetInstant", span=""];
m18_40 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="43-43"];
m18_43 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="48-48"];
m18_45 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="48-48"];
m18_22 [cluster="Mock<IScheduleInstant>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IScheduleInstant>.cstr", span=""];
m18_185 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="199-199"];
m18_187 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''TimeZoneId''] = timeZone.Id", span="205-205"];
m18_188 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="207-207"];
m18_191 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetsInstance_InAGivenTimeZone()", span="199-199"];
m18_213 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="235-235"];
m18_47 [cluster="System.Reflection.MethodBase.GetParameters()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m18_51 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282"];
m18_55 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m18_60 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="61-61"];
m18_49 [cluster="System.TimeSpan.FromHours(double)", file="RecurringJobSchedulerFacts.cs", label="Entry System.TimeSpan.FromHours(double)", span="0-0"];
m18_53 [cluster="HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.States.StateChangingContext.StateChangingContext(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, string, HangFire.Storage.IStorageConnection)", span="25-25"];
m18_56 [cluster="HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.States.StateApplyingContext.StateApplyingContext(HangFire.Common.States.StateContext, HangFire.Storage.IWriteOnlyTransaction)", span="23-23"];
m18_57 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210"];
m18_62 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="61-61"];
m18_69 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="var jobData = _connection.Jobs.GetStateAndInvocationData(jobId)", span="123-123"];
m18_70 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="jobData == null", prediction=73, span="125-125"];
m18_71 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="return false;", span="128-128"];
m18_77 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="var context = new StateContext(jobId, jobMethod)", span="142-142"];
m18_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="InvokeStateChangingFilters(changingContext, filterInfo.StateChangingFilters)", span="145-145"];
m18_84 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label=Exception, span="172-172"];
m18_85 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="throw;", prediction=74, span="174-174"];
m18_86 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m18_93 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m18_102 [cluster="HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.States.IStateChangingFilter.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m18_114 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="filter.OnStateUnapplied(context)", prediction=64, span="228-228"];
m18_122 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", span="210-210"];
m18_113 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label=stateChangedFilters, prediction=64, span="226-226"];
m18_121 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="filter.OnStateApplied(context)", prediction=64, span="245-245"];
m18_128 [cluster="HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.States.JobStateHandler.Apply(HangFire.Common.States.StateApplyingContext, System.Collections.Generic.IDictionary<string, string>)", span="22-22"];
m18_115 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="_handlers.ContainsKey(chosenState.StateName)", span="232-232"];
m18_117 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="_handlers[chosenState.StateName]", span="235-235"];
m18_118 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="handler.Apply(context, stateData)", span="237-237"];
m18_119 [cluster="HangFire.States.StateMachine.ApplyState(HangFire.Common.States.StateApplyingContext, string, HangFire.Common.States.JobState, System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>)", file="RecurringJobSchedulerFacts.cs", label="AppendHistory(context.Transaction, context, chosenState, true)", span="241-241"];
m18_123 [cluster="string.IsNullOrEmpty(string)", file="RecurringJobSchedulerFacts.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m18_124 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m18_125 [cluster="HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.States.JobStateHandler.Unapply(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m18_126 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateUnapplied(HangFire.Common.States.StateApplyingContext)", span="33-33"];
m18_130 [cluster="HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.States.IStateChangedFilter.OnStateApplied(HangFire.Common.States.StateApplyingContext)", span="27-27"];
m18_131 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="var transaction = _connection.CreateWriteTransaction()", prediction=78, span="252-252"];
m18_132 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RecurringJobSchedulerFacts.cs", label="AppendHistory(transaction, context, state, appendToJob)", span="254-254"];
m18_133 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RecurringJobSchedulerFacts.cs", label="transaction.Commit()", span="255-255"];
m18_144 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(System.Collections.Generic.IDictionary<TKey, TValue>)", span="0-0"];
m18_147 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="46-46"];
m18_146 [cluster="HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.SetJobState(string, string, System.Collections.Generic.IDictionary<string, string>)", span="10-10"];
m18_148 [cluster="HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.AppendJobHistory(string, System.Collections.Generic.IDictionary<string, string>)", span="11-11"];
m18_149 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RecurringJobSchedulerFacts.cs", label="return new JobFilterInfo(_getFiltersThunk(method));", span="284-284"];
m18_150 [cluster="HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.States.StateMachine.GetFilters(HangFire.Common.JobMethod)", span="282-282"];
m18_151 [cluster="HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Common.Filters.JobFilterInfo.JobFilterInfo(System.Collections.Generic.IEnumerable<HangFire.Common.Filters.JobFilter>)", span="119-119"];
m18_162 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m18_163 [cluster="System.Collections.Generic.List<T>.Add(T)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m18_170 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="178-178"];
m18_173 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="182-182"];
m18_171 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="x.GetAllItemsFromSet(It.IsAny<string>())", span="178-178"];
m18_172 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="178-178"];
m18_175 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="182-182"];
m18_182 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="195-195"];
m18_184 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="195-195"];
m18_194 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="213-213"];
m18_196 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="213-213"];
m18_204 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Entry lambda expression", span="224-224"];
m18_206 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="224-224"];
m18_19 [cluster="Mock<IScheduleInstantFactory>.cstr", file="RecurringJobSchedulerFacts.cs", label="Entry Mock<IScheduleInstantFactory>.cstr", span=""];
m18_215 [cluster="lambda expression", file="RecurringJobSchedulerFacts.cs", label="Exit lambda expression", span="235-235"];
m18_116 [cluster="Unk.SetRangeInHash", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="Entry Unk.SetRangeInHash", prediction=64, span=""];
m18_24 [cluster="Unk.Returns", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Returns", span=""];
m18_87 [cluster="string.IsNullOrWhiteSpace(string)", file="RecurringJobSchedulerFacts.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m18_89 [cluster="HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Storage.IPersistentJob.GetStateAndInvocationData(string)", span="6-6"];
m18_176 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="186-186"];
m18_177 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob[''Job''] =\r\n                JobHelper.ToJson(new InvocationData(''SomeType'', ''SomeMethod'', ''Parameters'', ''arguments''))", span="189-190"];
m18_178 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="192-192"];
m18_180 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_HandlesJobLoadException()", span="186-186"];
m18_64 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="String.IsNullOrWhiteSpace(jobId)", span="116-116"];
m18_67 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="throw new ArgumentNullException(''state'');", span="117-117"];
m18_68 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="_connection.AcquireJobLock(jobId)", span="119-119"];
m18_134 [cluster="HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", file="RecurringJobSchedulerFacts.cs", label="Exit HangFire.States.StateMachine.AppendHistory(HangFire.Common.States.StateContext, HangFire.Common.States.JobState, bool)", span="249-249"];
m18_197 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="217-217"];
m18_198 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="_recurringJob.Remove(''TimeZoneId'')", span="219-219"];
m18_199 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="var scheduler = CreateScheduler()", span="220-220"];
m18_202 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Execute_GetInstance_UseUtcTimeZone_WhenItIsNotProvided()", span="217-217"];
m18_23 [cluster="Unk.Setup", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Setup", span=""];
m18_203 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)", span="0-0"];
m18_59 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="37-37"];
m18_169 [cluster="Unk.DoesNotThrow", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m18_80 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="return ApplyState(changingContext, filterInfo.StateChangedFilters);", span="147-147"];
m18_82 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", color=green, community=0, file="RecurringJobSchedulerFacts.cs", label="var changingContext = new StateChangingContext(\r\n                            new StateContext(jobId, null),\r\n                            new FailedState(ex)\r\n                            {\r\n                                Reason = String.Format(\r\n                                    ''Could not change the state of the job '{0}' to the '{1}'. See the inner exception for details.'',\r\n                                    state.StateName, jobId)\r\n                            },\r\n                            currentState,\r\n                            _connection)", prediction=80, span="156-165"];
m18_83 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="RecurringJobSchedulerFacts.cs", label="return ApplyState(\r\n                            changingContext,\r\n                            Enumerable.Empty<IStateChangedFilter>());", span="167-169"];
m18_217 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.CreateScheduler()", span="238-238"];
m18_192 [cluster="System.Type.GetType(string)", file="RecurringJobSchedulerFacts.cs", label="Entry System.Type.GetType(string)", span="0-0"];
m18_25 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="RecurringJobSchedulerFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m18_21 [cluster="Unk.Select", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Select", span=""];
m18_63 [cluster="Unk.Create", file="RecurringJobSchedulerFacts.cs", label="Entry Unk.Create", span=""];
m18_76 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", label="Exit Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="75-75"];
m18_73 [cluster="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", file="RecurringJobSchedulerFacts.cs", label="Entry Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts.Ctor_ThrowsAnException_WhenClientIsNull()", span="75-75"];
m18_46 [cluster="HangFire.Storage.InvocationData.InvocationData()", file="RecurringJobSchedulerFacts.cs", label="Entry HangFire.Storage.InvocationData.InvocationData()", span="2-2"];
m18_218 [file="RecurringJobSchedulerFacts.cs", label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", span=""];
m18_219 [file="RecurringJobSchedulerFacts.cs", label=jobKey, span=""];
m18_220 [file="RecurringJobSchedulerFacts.cs", label=time, span=""];
m18_221 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m18_222 [file="RecurringJobSchedulerFacts.cs", label=scheduler, span=""];
m18_223 [file="RecurringJobSchedulerFacts.cs", label=timeZone, span=""];
m21_3 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs", label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m21_4 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs", label="var transaction = context.Connection.CreateWriteTransaction()", span="32-32"];
m21_5 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs", label="context.CandidateState.StateName == SucceededState.Name", span="34-34"];
m21_8 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs", label="context.CandidateState.StateName == FailedState.Name", span="48-48"];
m21_6 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="SchedulePollerFacts.cs", label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:succeeded:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", prediction=81, span="36-40"];
m21_9 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="SchedulePollerFacts.cs", label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'', \r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd'')),\r\n                        DateTime.UtcNow.AddMonths(1) - DateTime.UtcNow)", prediction=81, span="50-54"];
m21_10 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", color=green, community=0, file="SchedulePollerFacts.cs", label="transaction.IncrementCounter(\r\n                        String.Format(\r\n                            ''stats:failed:{0}'',\r\n                            DateTime.UtcNow.ToString(''yyyy-MM-dd-HH'')),\r\n                        TimeSpan.FromDays(1))", prediction=81, span="56-60"];
m21_12 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", file="SchedulePollerFacts.cs", label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.OnStateChanging(HangFire.Common.States.StateChangingContext)", span="30-30"];
m21_14 [cluster="System.DateTime.ToString(string)", file="SchedulePollerFacts.cs", label="Entry System.DateTime.ToString(string)", span="0-0"];
m21_13 [cluster="HangFire.Storage.IStorageConnection.CreateWriteTransaction()", file="SchedulePollerFacts.cs", label="Entry HangFire.Storage.IStorageConnection.CreateWriteTransaction()", span="8-8"];
m21_0 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="SchedulePollerFacts.cs", label="Entry HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25"];
m21_1 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", color=green, community=0, file="SchedulePollerFacts.cs", label="Order = 30", prediction=84, span="27-27"];
m21_2 [cluster="HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", file="SchedulePollerFacts.cs", label="Exit HangFire.Filters.StatisticsHistoryFilterAttribute.StatisticsHistoryFilterAttribute()", span="25-25"];
m21_19 [cluster="HangFire.Storage.IWriteOnlyTransaction.Commit()", file="SchedulePollerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.Commit()", span="37-37"];
m21_18 [cluster="System.TimeSpan.FromDays(double)", file="SchedulePollerFacts.cs", label="Entry System.TimeSpan.FromDays(double)", span="0-0"];
m21_17 [cluster="HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", file="SchedulePollerFacts.cs", label="Entry HangFire.Storage.IWriteOnlyTransaction.IncrementCounter(string, System.TimeSpan)", span="18-18"];
m21_16 [cluster="System.DateTime.AddMonths(int)", file="SchedulePollerFacts.cs", label="Entry System.DateTime.AddMonths(int)", span="0-0"];
m21_20 [file="SchedulePollerFacts.cs", label="HangFire.Filters.StatisticsHistoryFilterAttribute", span=""];
m23_8 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ServerBootstrapperFacts.cs", label="Assert.IsNotNull(filterContext)", span="31-31"];
m23_9 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ServerBootstrapperFacts.cs", label="_results.Add(String.Format(''{0}::{1}'', _name, ''OnCreating''))", span="33-33"];
m23_10 [cluster="HangFire.Tests.TestClientFilter.OnCreating(HangFire.Filters.CreatingContext)", file="ServerBootstrapperFacts.cs", label=_cancelsTheCreation, span="35-35"];
m23_17 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24"];
m23_19 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31"];
m23_24 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.SerializeData_ReturnsCorrectData()", span="31-31"];
m23_31 [cluster="Unk.False", file="ServerBootstrapperFacts.cs", label="Entry Unk.False", span=""];
m23_7 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="26-26"];
m23_13 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="Exit lambda expression", prediction=85, span="20-20"];
m23_12 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="new ProcessingState(String.Empty)", span="20-20"];
m23_11 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Entry lambda expression", span="20-20"];
m23_14 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.StateName_IsCorrect()", span="24-24"];
m23_27 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42"];
m23_30 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.IsFinal_ReturnsFalse()", span="42-42"];
m23_25 [cluster="HangFire.States.ProcessingState.SerializeData()", file="ServerBootstrapperFacts.cs", label="HangFire.Tests.TestClientFilter", span=""];
m23_18 [cluster="System.Exception.Exception()", file="ServerBootstrapperFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m23_0 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", span="10-10"];
m23_2 [cluster="HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", color=green, community=0, file="ServerBootstrapperFacts.cs", label="Exit HangFire.Core.Tests.States.ProcessingStateFacts.Ctor_ThrowsAnException_WhenServerNameIsNull()", prediction=86, span="10-10"];
m23_3 [cluster="HangFire.Tests.TestClientFilter.TestClientFilter(string, System.Collections.Generic.ICollection<string>, bool, bool, bool)", file="ServerBootstrapperFacts.cs", label="_throwException = throwException", span="24-24"];
m23_4 [cluster="lambda expression", color=green, community=0, file="ServerBootstrapperFacts.cs", label="Entry lambda expression", prediction=86, span="13-13"];
m23_6 [cluster="lambda expression", file="ServerBootstrapperFacts.cs", label="Exit lambda expression", span="13-13"];
m23_26 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServerBootstrapperFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m24_0 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="ServerComponentExtensionsFacts.cs", label="Entry HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m24_1 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="ServerComponentExtensionsFacts.cs", label="Exit HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m25_64 [cluster="HangFire.Web.RazorPage.Write(object)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m25_59 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m25_0 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m25_1 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\n'')", span="61-61"];
m25_2 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Layout = new LayoutPage { Title = ''Queues'' }", span="74-74"];
m25_3 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="76-76"];
m25_4 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="IList<QueueWithTopEnqueuedJobsDto> queues = monitor.Queues()", span="77-77"];
m25_5 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\n'')", span="83-83"];
m25_6 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="queues.Count == 0", span="88-88"];
m25_9 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label=queues, span="115-115"];
m25_7 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''    <div class=\''alert alert-warning\''>\n        No queued jobs found. Try to enqueu'' +\r\n''e a job.\n    </div>\n'')", span="94-95"];
m25_8 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''    <table class=\''table table-striped\''>\n        <thead>\n            <tr>\n        '' +\r\n''        <th>Queue</th>\n                <th>Length</th>\n                <th>Fetch'' +\r\n''ed</th>\n                <th>Next jobs</th>\n            </tr>\n        </thead>\n  '' +\r\n''      <tbody>\n'')", span="107-110"];
m25_10 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                <tr>\n                    <td>\n                        <a class=\''l'' +\r\n''abel-queue\'' href=\'''')", span="121-122"];
m25_57 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''        </tbody>\n    </table>\n'')", span="433-433"];
m25_11 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(Request.LinkTo(''/queues/'' + queue.Name))", span="127-127"];
m25_13 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(queue.Name)", span="137-137"];
m25_15 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(queue.Length)", span="147-147"];
m25_17 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="queue.Fetched.HasValue", span="157-157"];
m25_19 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(Request.LinkTo(''/queues/fetched/'' + queue.Name))", span="168-168"];
m25_21 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(queue.Fetched)", span="178-178"];
m25_25 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="queue.FirstJobs.Count == 0", span="210-210"];
m25_28 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="queue.FirstJobs", span="243-243"];
m25_12 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\''>\n                            '')", span="132-132"];
m25_14 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\n                        </a>\n                    </td>\n                    <td>'')", span="142-142"];
m25_16 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''</td>\n                    <td>\n'')", span="152-152"];
m25_18 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                            <a href=\'''')", span="163-163"];
m25_23 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                            <em>N/A</em>\n'')", span="195-195"];
m25_20 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\''>\n                                '')", span="173-173"];
m25_22 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\n                            </a>\n'')", span="183-183"];
m25_24 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                    </td>\n                    <td>\n'')", span="205-205"];
m25_26 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                            <em>No jobs queued.</em>\n'')", span="216-216"];
m25_27 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(@''                            <table class=''''table table-condensed table-bordered table-inner''''>\n                                <thead>\n                                    <tr>\n                                        <th class=''''min-width''''>Id</th>\n                                        <th class=''''min-width''''>State</th>\n                                        <th>Job</th>\n                                        <th class=''''align-right min-width''''>Enqueued</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n'')", span="228-238"];
m25_29 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                                        <tr class=\'''')", span="249-249"];
m25_55 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                                </tbody>\n                            </table>\n'')", span="413-413"];
m25_30 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(!job.Value.InEnqueuedState ? ''obsolete-data'' : null)", span="254-254"];
m25_31 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\''>\n                                            <td class=\''min-width\''>\n           '' +\r\n''                                     <a href=\'''')", span="259-260"];
m25_32 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="265-265"];
m25_33 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\''>'')", span="270-270"];
m25_34 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(HtmlHelper.JobId(job.Key))", span="275-275"];
m25_35 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''</a>\n'')", span="280-280"];
m25_36 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="!job.Value.InEnqueuedState", span="285-285"];
m25_37 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                                                    <span title=\''Job\'s state has '' +\r\n''been changed while fetching data.\'' class=\''glyphicon glyphicon-question-sign\''></s'' +\r\n''pan>\n'')", span="291-293"];
m25_38 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                                            </td>\n                               '' +\r\n''             <td class=\''min-width\''>\n                                            '' +\r\n''    <span class=\''label label-default\'' style=\'''')", span="303-305"];
m25_39 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(JobHistoryRenderer.ForegroundStateColors.ContainsKey(job.Value.State) ? String.Format(''background-color: {0};'', JobHistoryRenderer.ForegroundStateColors[job.Value.State]) : null)", span="310-310"];
m25_40 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\''>\n                                                    '')", span="315-315"];
m25_41 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(job.Value.State)", span="320-320"];
m25_42 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\n                                                </span>\n                        '' +\r\n''                    </td>\n                                            <td>\n     '' +\r\n''                                           <a class=\''job-method\'' href=\'''')", span="325-327"];
m25_43 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="332-332"];
m25_44 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\''>\n                                                    '')", span="337-337"];
m25_45 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="342-342"];
m25_46 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\n                                                </a>\n                           '' +\r\n''                 </td>\n                                            <td class=\''al'' +\r\n''ign-right min-width\''>\n'')", span="347-349"];
m25_47 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="job.Value.EnqueuedAt.HasValue", span="354-354"];
m25_48 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                                                    <span data-moment=\'''')", span="360-360"];
m25_53 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                                                    <em>n/a</em>\n'')", span="392-392"];
m25_49 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(JobHelper.ToStringTimestamp(job.Value.EnqueuedAt.Value))", span="365-365"];
m25_50 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\''>\n                                                        '')", span="370-370"];
m25_51 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Write(job.Value.EnqueuedAt)", span="375-375"];
m25_52 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''\n                                                    </span>\n'')", span="380-380"];
m25_54 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                                            </td>\n                               '' +\r\n''         </tr>\n'')", span="402-403"];
m25_56 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="WriteLiteral(''                </td>\n            </tr>\n'')", span="423-423"];
m25_58 [cluster="HangFire.Web.Pages.QueuesPage.Execute()", file="ServerHeartbeatFacts.cs", label="Exit HangFire.Web.Pages.QueuesPage.Execute()", span="57-57"];
m25_61 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m25_60 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m25_62 [cluster="HangFire.Storage.IMonitoringApi.Queues()", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Storage.IMonitoringApi.Queues()", span="24-24"];
m25_63 [cluster="HttpRequestBase.LinkTo(string)", file="ServerHeartbeatFacts.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m25_69 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m25_67 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", file="ServerHeartbeatFacts.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m25_70 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m25_66 [cluster="Unk.Write", file="ServerHeartbeatFacts.cs", label="Entry Unk.Write", span=""];
m25_65 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerHeartbeatFacts.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m25_71 [file="ServerHeartbeatFacts.cs", label="HangFire.Web.Pages.QueuesPage", span=""];
m26_61 [cluster="HangFire.Web.RazorPage.Write(object)", file="ServerJobCancellationToken.cs", label="Entry HangFire.Web.RazorPage.Write(object)", span="76-76"];
m26_55 [cluster="Unk.TryParse", file="ServerJobCancellationToken.cs", label="Entry Unk.TryParse", span=""];
m26_53 [cluster="HangFire.Web.RazorPage.WriteLiteral(string)", file="ServerJobCancellationToken.cs", label="Entry HangFire.Web.RazorPage.WriteLiteral(string)", span="69-69"];
m26_0 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Entry HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47"];
m26_1 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\n'')", span="51-51"];
m26_2 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Layout = new LayoutPage { Title = ''Processing Jobs'' }", span="62-62"];
m26_3 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="int from, perPage", span="64-64"];
m26_4 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="int.TryParse(Request.QueryString[''from''], out from)", span="66-66"];
m26_5 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="int.TryParse(Request.QueryString[''count''], out perPage)", span="67-67"];
m26_7 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Pager pager = new Pager(from, perPage, monitor.ProcessingCount())\n    {\n        BasePageUrl = Request.LinkTo(''/processing'')\n    }", span="70-73"];
m26_6 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="var monitor = JobStorage.Current.GetMonitoringApi()", span="69-69"];
m26_8 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="JobList<ProcessingJobDto> processingJobs = monitor\n        .ProcessingJobs(pager.FromRecord, pager.RecordsPerPage)", span="75-76"];
m26_10 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="pager.TotalPageCount == 0", span="87-87"];
m26_17 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(RenderPartial(new PerPageSelector(pager)))", span="147-147"];
m26_51 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(RenderPartial(new Paginator(pager)))", span="369-369"];
m26_9 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\n'')", span="82-82"];
m26_19 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label=processingJobs, span="173-173"];
m26_11 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''    <div class=\''alert alert-info\''>\n        No jobs are being processed right now.'' +\r\n''\n    </div>\n'')", span="93-94"];
m26_12 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''    <div class=\''js-jobs-list\''>\n        <div class=\''btn-toolbar btn-toolbar-top\''>\n'' +\r\n''            <button class=\''js-jobs-list-command btn btn-sm btn-primary\''\n        '' +\r\n''            data-url=\'''')", span="106-108"];
m26_13 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(Request.LinkTo(''/processing/requeue''))", span="113-113"];
m26_14 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Enqueueing...''''>\n                <span class=''''glyphicon glyphicon-repeat''''></span>\n                Requeue jobs\n            </button>\n\n            <button class=''''js-jobs-list-command btn btn-sm btn-default''''\n                    data-url='''''')", span="118-125"];
m26_15 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(Request.LinkTo(''/processing/delete''))", span="130-130"];
m26_16 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="135-142"];
m26_18 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(@''\n        </div>\n\n        <table class=''''table''''>\n            <thead>\n                <tr>\n                    <th class=''''min-width''''>\n                        <input type=''''checkbox'''' class=''''js-jobs-list-select-all'''' />\n                    </th>\n                    <th class=''''min-width''''>Id</th>\n                    <th class=''''min-width''''>Server</th>\n                    <th>Job</th>\n                    <th class=''''align-right''''>Started</th>\n                </tr>\n            </thead>\n            <tbody>\n'')", span="152-168"];
m26_20 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''                    <tr class=\''js-jobs-list-row '')", span="179-179"];
m26_50 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''            </tbody>\n        </table>\n    </div>\n'')", span="358-358"];
m26_21 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(!job.Value.InProcessingState ? ''obsolete-data'' : null)", span="184-184"];
m26_22 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral('' '')", span="189-189"];
m26_23 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(job.Value.InProcessingState ? ''hover'' : null)", span="194-194"];
m26_24 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\''>\n                        <td>\n'')", span="199-199"];
m26_25 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="job.Value.InProcessingState", span="204-204"];
m26_26 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''                                <input type=\''checkbox\'' class=\''js-jobs-list-checkb'' +\r\n''ox\'' name=\''jobs[]\'' value=\'''')", span="210-211"];
m26_29 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        <a href=\'''')", span="231-232"];
m26_27 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(job.Key)", span="216-216"];
m26_30 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="237-237"];
m26_28 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\'' />\n'')", span="221-221"];
m26_31 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\''>\n                                '')", span="242-242"];
m26_32 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(HtmlHelper.JobId(job.Key))", span="247-247"];
m26_33 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\n                            </a>\n'')", span="252-252"];
m26_34 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="!job.Value.InProcessingState", span="257-257"];
m26_35 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''                                <span title=\''Job\'s state has been changed while f'' +\r\n''etching data.\'' class=\''glyphicon glyphicon-question-sign\''></span>\n'')", span="263-264"];
m26_36 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''                        </td>\n                        <td class=\''min-width\''>\n    '' +\r\n''                        '')", span="274-275"];
m26_37 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(job.Value.ServerId.ToUpperInvariant())", span="280-280"];
m26_38 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\n                        </td>\n                        <td>\n                     '' +\r\n''       <a class=\''job-method\'' href=\'''')", span="285-286"];
m26_39 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(Request.LinkTo(''/job/'' + job.Key))", span="291-291"];
m26_40 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\''>\n                                '')", span="296-296"];
m26_41 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(HtmlHelper.DisplayMethod(job.Value.Job))", span="301-301"];
m26_42 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\n                            </a>\n                        </td>\n                 '' +\r\n''       <td class=\''align-right\''>\n'')", span="306-307"];
m26_43 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="job.Value.StartedAt.HasValue", span="312-312"];
m26_44 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''                                <span data-moment=\'''')", span="318-318"];
m26_49 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''                        </td>\n                    </tr>\n'')", span="348-348"];
m26_45 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(JobHelper.ToTimestamp(job.Value.StartedAt.Value))", span="323-323"];
m26_46 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\''>\n                                    '')", span="328-328"];
m26_47 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Write(job.Value.StartedAt)", span="333-333"];
m26_48 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="WriteLiteral(''\n                                </span>\n'')", span="338-338"];
m26_52 [cluster="HangFire.Web.Pages.ProcessingJobsPage.Execute()", file="ServerJobCancellationToken.cs", label="Exit HangFire.Web.Pages.ProcessingJobsPage.Execute()", span="47-47"];
m26_56 [cluster="HangFire.JobStorage.GetMonitoringApi()", file="ServerJobCancellationToken.cs", label="Entry HangFire.JobStorage.GetMonitoringApi()", span="54-54"];
m26_68 [cluster="HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", file="ServerJobCancellationToken.cs", label="Entry HangFire.Common.JobHelper.ToTimestamp(System.DateTime)", span="39-39"];
m26_66 [cluster="string.ToUpperInvariant()", file="ServerJobCancellationToken.cs", label="Entry string.ToUpperInvariant()", span="0-0"];
m26_54 [cluster="HangFire.Web.Pages.LayoutPage.LayoutPage()", file="ServerJobCancellationToken.cs", label="Entry HangFire.Web.Pages.LayoutPage.LayoutPage()", span="4-4"];
m26_62 [cluster="HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", file="ServerJobCancellationToken.cs", label="Entry HangFire.Web.Pages.PerPageSelector.PerPageSelector(HangFire.Web.Pager)", span="6-6"];
m26_64 [cluster="Unk.Write", file="ServerJobCancellationToken.cs", label="Entry Unk.Write", span=""];
m26_60 [cluster="HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", file="ServerJobCancellationToken.cs", label="Entry HangFire.Storage.IMonitoringApi.ProcessingJobs(int, int)", span="32-32"];
m26_59 [cluster="HttpRequestBase.LinkTo(string)", file="ServerJobCancellationToken.cs", label="Entry HttpRequestBase.LinkTo(string)", span="24-24"];
m26_58 [cluster="HangFire.Storage.IMonitoringApi.ProcessingCount()", file="ServerJobCancellationToken.cs", label="Entry HangFire.Storage.IMonitoringApi.ProcessingCount()", span="42-42"];
m26_67 [cluster="HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", file="ServerJobCancellationToken.cs", label="Entry HangFire.Web.HtmlHelper.DisplayMethod(HangFire.Common.Job)", span="30-30"];
m26_69 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="ServerJobCancellationToken.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m26_63 [cluster="HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", file="ServerJobCancellationToken.cs", label="Entry HangFire.Web.RazorPage.RenderPartial(HangFire.Web.RazorPage)", span="89-89"];
m26_57 [cluster="HangFire.Web.Pager.Pager(int, int, long)", file="ServerJobCancellationToken.cs", label="Entry HangFire.Web.Pager.Pager(int, int, long)", span="29-29"];
m26_65 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="ServerJobCancellationToken.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m26_70 [file="ServerJobCancellationToken.cs", label="HangFire.Web.Pages.ProcessingJobsPage", span=""];
m27_13 [cluster="Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.WorkerContextMock.WorkerContextMock()", span="9-9"];
m27_74 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="105-105"];
m27_75 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs", label="_stateData.Name = ''NotProcessing''", span="107-107"];
m27_76 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="108-108"];
m27_77 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="110-111"];
m27_78 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfJobIsNotInProcessingState()", span="105-105"];
m27_18 [cluster="Unk.GetStateData", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.GetStateData", span=""];
m27_37 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", span="61-61"];
m27_38 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    JobId, _connection.Object, null, new CancellationToken()))", prediction=88, span="63-65"];
m27_39 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Equal(''workerContext'', exception.ParamName)", span="67-67"];
m27_40 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenWorkerContextIsNull()", span="61-61"];
m27_24 [cluster="Unk.Equal", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.Equal", span=""];
m27_29 [cluster="System.Threading.CancellationToken.CancellationToken()", file="ServerJobCancellationTokenFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken()", span="0-0"];
m27_8 [cluster="Hangfire.Storage.StateData.StateData()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Storage.StateData.StateData()", span="21-21"];
m27_53 [cluster="Unk.DoesNotThrow", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m27_82 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", span="115-115"];
m27_83 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs", label="_stateData.Data[''ServerId''] = ''AnotherServer''", span="117-117"];
m27_84 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="118-118"];
m27_85 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="120-121"];
m27_86 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfStateData_ContainsDifferentServerId()", span="115-115"];
m27_54 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86"];
m27_55 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="_shutdownToken = new CancellationToken(true)", span="88-88"];
m27_56 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="89-89"];
m27_57 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<OperationCanceledException>(\r\n                () => token.ThrowIfCancellationRequested())", span="91-92"];
m27_58 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsOperationCanceled_OnShutdownRequest()", span="86-86"];
m27_30 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51"];
m27_31 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken()))", prediction=89, span="53-55"];
m27_32 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Equal(''connection'', exception.ParamName)", span="57-57"];
m27_33 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenConnectionIsNull()", span="51-51"];
m27_19 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41"];
m27_20 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="var exception = Assert.Throws<ArgumentNullException>(\r\n                () => new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken()))", prediction=90, span="43-45"];
m27_21 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Equal(''jobId'', exception.ParamName)", span="47-47"];
m27_22 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.Ctor_ThrowsAnException_WhenJobIsIsNull()", span="41-41"];
m27_9 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ServerJobCancellationTokenFacts.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m27_63 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96"];
m27_64 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="_connection.Setup(x => x.GetStateData(It.IsAny<string>())).Returns((StateData)null)", prediction=91, span="98-98"];
m27_65 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="99-99"];
m27_66 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<JobAbortedException>(() => token.ThrowIfCancellationRequested())", span="101-101"];
m27_67 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_Throws_IfStateDataDoesNotExist()", span="96-96"];
m27_11 [cluster="Unk.Setup", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.Setup", span=""];
m27_0 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="ServerJobCancellationTokenFacts.cs", label="Entry HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m27_4 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="_workerContextMock = new WorkerContextMock { WorkerNumber = 1 }", prediction=92, span="34-34"];
m27_3 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="_connection.Setup(x => x.GetStateData(JobId)).Returns(_stateData)", span="32-32"];
m27_5 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="_workerContextMock.ServerId = ''Server''", prediction=93, span="35-35"];
m27_6 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="_shutdownToken = new CancellationToken(false)", prediction=94, span="37-37"];
m27_1 [cluster="HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", file="ServerJobCancellationTokenFacts.cs", label="Exit HangFire.Storage.IPersistentSet.GetFirstByLowestScore(string, long, long)", span="4-4"];
m27_2 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="31-31"];
m27_7 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ServerJobCancellationTokenFacts()", span="19-19"];
m27_95 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="131-131"];
m27_25 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="44-45"];
m27_26 [cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="new ServerJobCancellationToken(\r\n                    null, _connection.Object, _workerContextMock.Object, new CancellationToken())", prediction=91, span="44-45"];
m27_27 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="44-45"];
m27_34 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="54-55"];
m27_35 [cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="new ServerJobCancellationToken(\r\n                    JobId, null, _workerContextMock.Object, new CancellationToken())", prediction=91, span="54-55"];
m27_36 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="54-55"];
m27_41 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="64-65"];
m27_42 [cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="new ServerJobCancellationToken(\r\n                    JobId, _connection.Object, null, new CancellationToken())", prediction=91, span="64-65"];
m27_43 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="64-65"];
m27_68 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="98-98"];
m27_69 [cluster="lambda expression", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="x.GetStateData(It.IsAny<string>())", prediction=98, span="98-98"];
m27_70 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="98-98"];
m27_15 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="32-32"];
m27_72 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="101-101"];
m27_16 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="x.GetStateData(JobId)", span="32-32"];
m27_60 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="92-92"];
m27_80 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="111-111"];
m27_88 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="121-121"];
m27_96 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="token.ThrowIfCancellationRequested()", span="131-131"];
m27_17 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="32-32"];
m27_59 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="92-92"];
m27_71 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="101-101"];
m27_79 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="111-111"];
m27_87 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Entry lambda expression", span="121-121"];
m27_73 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="101-101"];
m27_61 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="92-92"];
m27_81 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="111-111"];
m27_89 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="121-121"];
m27_97 [cluster="lambda expression", file="ServerJobCancellationTokenFacts.cs", label="Exit lambda expression", span="131-131"];
m27_90 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125"];
m27_91 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="_stateData.Data[''WorkerNumber''] = ''999''", span="127-127"];
m27_92 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="128-128"];
m27_93 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="Assert.Throws<JobAbortedException>(\r\n                () => token.ThrowIfCancellationRequested())", span="130-131"];
m27_94 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_ThrowsJobAborted_IfWorkerNumberWasChanged()", span="125-125"];
m27_28 [cluster="ServerJobCancellationToken.cstr", file="ServerJobCancellationTokenFacts.cs", label="Entry ServerJobCancellationToken.cstr", span=""];
m27_44 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71"];
m27_45 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", prediction=99, span="73-73"];
m27_46 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", color=green, community=0, file="ServerJobCancellationTokenFacts.cs", label="Assert.Equal(_shutdownToken, token.ShutdownToken)", prediction=91, span="74-74"];
m27_47 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ShutdownTokenProperty_PointsToShutdownTokenValue()", span="71-71"];
m27_14 [cluster="System.Threading.CancellationToken.CancellationToken(bool)", file="ServerJobCancellationTokenFacts.cs", label="Entry System.Threading.CancellationToken.CancellationToken(bool)", span="0-0"];
m27_62 [cluster="Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.IJobCancellationToken.ThrowIfCancellationRequested()", span="24-24"];
m27_48 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134"];
m27_98 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs", label="return new ServerJobCancellationToken(\r\n                JobId, _connection.Object, _workerContextMock.Object, _shutdownToken);", span="136-137"];
m27_99 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.CreateToken()", span="134-134"];
m27_49 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78"];
m27_50 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs", label="var token = CreateToken()", span="80-80"];
m27_51 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs", label="Assert.DoesNotThrow(token.ThrowIfCancellationRequested)", span="82-82"];
m27_52 [cluster="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", file="ServerJobCancellationTokenFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts.ThrowIfCancellationRequested_DoesNotThrowOnProcessingJob_IfNoShutdownRequested()", span="78-78"];
m27_12 [cluster="Unk.Returns", file="ServerJobCancellationTokenFacts.cs", label="Entry Unk.Returns", span=""];
m27_10 [cluster="Mock<IStorageConnection>.cstr", file="ServerJobCancellationTokenFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m27_100 [file="ServerJobCancellationTokenFacts.cs", label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", span=""];
m27_102 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m27_101 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m27_103 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m27_104 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m27_105 [file="ServerJobCancellationTokenFacts.cs", label=token, span=""];
m28_0 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Entry Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="38-38"];
m28_1 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Servers.Add(server)", span="42-42"];
m28_2 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="server.Start()", span="44-44"];
m28_3 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="var context = new OwinContext(app.Properties)", span="46-46"];
m28_6 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="token.Register(server.Dispose)", span="51-51"];
m28_4 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="var token = context.Get<CancellationToken>(''host.OnAppDisposing'')", span="47-47"];
m28_5 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="token != CancellationToken.None", span="49-49"];
m28_7 [cluster="Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", file="ServerOwinExtensions.cs", label="Exit Hangfire.Server.ServerOwinExtensions.RunHangfireServer(IAppBuilder, Hangfire.BackgroundJobServer)", span="38-38"];
m28_12 [cluster="Unk.Register", file="ServerOwinExtensions.cs", label="Entry Unk.Register", span=""];
m28_9 [cluster="Hangfire.BackgroundJobServer.Start()", file="ServerOwinExtensions.cs", label="Entry Hangfire.BackgroundJobServer.Start()", span="123-123"];
m28_8 [cluster="System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", file="ServerOwinExtensions.cs", label="Entry System.Collections.Concurrent.ConcurrentBag<T>.Add(T)", span="0-0"];
m28_10 [cluster="OwinContext.cstr", file="ServerOwinExtensions.cs", label="Entry OwinContext.cstr", span=""];
m29_0 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16"];
m29_3 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs", label="_options = new ServerWatchdogOptions\r\n            {\r\n                CheckInterval = Timeout.InfiniteTimeSpan // To check that it exits by cancellation token\r\n            }", span="20-23"];
m29_7 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", file="ServerWatchdogFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.ServerWatchdogFacts()", span="16-16"];
m29_59 [cluster="Unk.RemoveTimedOutServers", file="ServerWatchdogFacts.cs", label="Entry Unk.RemoveTimedOutServers", span=""];
m29_12 [cluster="System.Threading.CancellationTokenSource.Cancel()", file="ServerWatchdogFacts.cs", label="Entry System.Threading.CancellationTokenSource.Cancel()", span="0-0"];
m29_33 [cluster="ServerWatchdog.cstr", file="ServerWatchdogFacts.cs", label="Entry ServerWatchdog.cstr", span=""];
m29_18 [cluster="Unk.GetConnection", file="ServerWatchdogFacts.cs", label="Entry Unk.GetConnection", span=""];
m29_50 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="55-55"];
m29_51 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs", label="_connection.Setup(x => x.RemoveTimedOutServers(It.IsAny<TimeSpan>())).Returns(1)", span="57-57"];
m29_54 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs", label="_connection.Verify(x => x.RemoveTimedOutServers(_options.ServerTimeout))", span="62-62"];
m29_55 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", file="ServerWatchdogFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_DelegatesRemovalToStorageConnection()", span="55-55"];
m29_13 [cluster="Unk.Setup", file="ServerWatchdogFacts.cs", label="Entry Unk.Setup", span=""];
m29_49 [cluster="Unk.Dispose", file="ServerWatchdogFacts.cs", label="Entry Unk.Dispose", span=""];
m29_19 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="31-31"];
m29_21 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="ServerWatchdogFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="31-31"];
m29_11 [cluster="System.Threading.CancellationTokenSource.CancellationTokenSource()", file="ServerWatchdogFacts.cs", label="Entry System.Threading.CancellationTokenSource.CancellationTokenSource()", span="0-0"];
m29_40 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="65-65"];
m29_64 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", file="ServerWatchdogFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.CreateWatchdog()", span="65-65"];
m29_60 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="62-62"];
m29_15 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="27-27"];
m29_17 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="27-27"];
m29_23 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="33-33"];
m29_25 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="33-33"];
m29_30 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="40-40"];
m29_32 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="40-40"];
m29_43 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="50-50"];
m29_46 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="51-51"];
m29_45 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="50-50"];
m29_48 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="51-51"];
m29_56 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Entry lambda expression", span="57-57"];
m29_57 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.RemoveTimedOutServers(It.IsAny<TimeSpan>())", span="57-57"];
m29_58 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="57-57"];
m29_61 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="x.RemoveTimedOutServers(_options.ServerTimeout)", span="62-62"];
m29_62 [cluster="lambda expression", file="ServerWatchdogFacts.cs", label="Exit lambda expression", span="62-62"];
m29_42 [cluster="Unk.Verify", file="ServerWatchdogFacts.cs", label="Entry Unk.Verify", span=""];
m29_27 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="37-37"];
m29_29 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", file="ServerWatchdogFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.Ctor_ThrowsAnException_WhenOptionsValueIsNull()", span="37-37"];
m29_41 [cluster="Unk.Execute", file="ServerWatchdogFacts.cs", label="Entry Unk.Execute", span=""];
m29_26 [cluster="Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", file="ServerWatchdogFacts.cs", label="Entry Hangfire.Server.ServerWatchdog.ServerWatchdog(Hangfire.Server.ServerWatchdogOptions)", span="27-27"];
m29_14 [cluster="Unk.Returns", file="ServerWatchdogFacts.cs", label="Entry Unk.Returns", span=""];
m29_34 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs", label="Entry Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="44-44"];
m29_39 [cluster="Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", file="ServerWatchdogFacts.cs", label="Exit Hangfire.Core.Tests.Server.ServerWatchdogFacts.Execute_GetsConnectionAndReleasesIt()", span="44-44"];
m29_10 [cluster="Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", file="ServerWatchdogFacts.cs", label="Entry Hangfire.Server.ServerWatchdogOptions.ServerWatchdogOptions()", span="22-22"];
m29_9 [cluster="Mock<IStorageConnection>.cstr", file="ServerWatchdogFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m29_8 [cluster="Mock<JobStorage>.cstr", file="ServerWatchdogFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m29_65 [file="ServerWatchdogFacts.cs", label="Hangfire.Core.Tests.Server.ServerWatchdogFacts", span=""];
m30_239 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="449-449"];
m30_240 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs", label="var serializedHistory = Redis.Client.GetAllItemsFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="451-452"];
m30_243 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs", label="i < table.RowCount", span="455-455"];
m30_244 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs", label="Assert.Equal(table.Rows[i][''State''], history[i][''State''])", span="457-457"];
m30_241 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs", label="var history = serializedHistory.Select(JobHelper.FromJson<Dictionary<string, string>>).ToList()", span="453-453"];
m30_242 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs", label="var i = 0", span="455-455"];
m30_245 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs", label="i++", span="455-455"];
m30_246 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryForFollowingStatesWereAdded(Table)", span="449-449"];
m30_153 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="308-308"];
m30_154 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:processing'', JobSteps.DefaultJobId)", span="310-310"];
m30_155 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs", label="var timestamp = JobHelper.FromTimestamp((long)score)", span="311-311"];
m30_156 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs", label="Assert.True(timestamp > DateTime.UtcNow.AddSeconds(-1))", span="313-313"];
m30_157 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs", label="Assert.True(timestamp < DateTime.UtcNow.AddSeconds(1))", span="314-314"];
m30_158 [cluster="HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenProcessingTimestampIsSetToUtcNow()", span="308-308"];
m30_137 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="283-283"];
m30_138 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StartupConfiguration.cs", label="Assert.Equal(1, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="285-285"];
m30_139 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StartupConfiguration.cs", label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:failed'', JobSteps.DefaultJobId))", span="286-286"];
m30_140 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeAddedToTheFailedSet()", span="283-283"];
m30_90 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="199-199"];
m30_91 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StartupConfiguration.cs", label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="202-203"];
m30_92 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StartupConfiguration.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _stateMocks[state].Object, allowedState)", span="204-204"];
m30_93 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToTheStateAllowedTransitions(string, string)", span="199-199"];
m30_152 [cluster="Unk.False", file="StartupConfiguration.cs", label="Entry Unk.False", span=""];
m30_19 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", span="77-77"];
m30_20 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="StartupConfiguration.cs", label="_state = new EnqueuedState\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="79-82"];
m30_21 [cluster="HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheEnqueuedState()", span="77-77"];
m30_162 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="318-318"];
m30_163 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs", label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="320-320"];
m30_164 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs", label="var score = Redis.Client.GetItemScoreInSortedSet(''hangfire:schedule'', JobSteps.DefaultJobId)", span="321-321"];
m30_165 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs", label="var timestamp = JobHelper.FromTimestamp((long) score)", span="322-322"];
m30_166 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs", label="Assert.True(timestamp >= DateTime.UtcNow.Date.AddDays(1))", span="324-324"];
m30_167 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs", label="Assert.True(timestamp < DateTime.UtcNow.Date.AddDays(2))", span="325-325"];
m30_168 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleContainsTheJobThatWillBeEnqueuedTomorrow()", span="318-318"];
m30_64 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="123-123"];
m30_65 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StartupConfiguration.cs", label="Given(String.Format(''a '{0}' state'', state))", span="125-125"];
m30_66 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StartupConfiguration.cs", label="_filters.Add(\r\n                new TestStateChangingFilter(name, _stateChangingResults, _stateMocks[state].Object))", span="127-128"];
m30_67 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilterThatChangesTheStateToThe(string, string)", span="123-123"];
m30_89 [cluster="Unk.ChangeState", file="StartupConfiguration.cs", label="Entry Unk.ChangeState", span=""];
m30_202 [cluster="Unk.Unapply", file="StartupConfiguration.cs", label="Entry Unk.Unapply", span=""];
m30_102 [cluster="Unk.ForEach", file="StartupConfiguration.cs", label="Entry Unk.ForEach", span=""];
m30_48 [cluster="Unk.Given", file="StartupConfiguration.cs", label="Entry Unk.Given", span=""];
m30_169 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="329-329"];
m30_170 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StartupConfiguration.cs", label="Assert.False(Redis.Client.SortedSetContainsItem(''hangfire:schedule'', JobSteps.DefaultJobId))", span="331-331"];
m30_171 [cluster="HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheScheduleDoesNotContainTheJob()", span="329-329"];
m30_136 [cluster="HangFire.Tests.TableAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.TableAssert.ContainsFollowingItems(Table, System.Collections.Generic.IDictionary<string, string>)", span="8-8"];
m30_228 [cluster="Unk.ContainsKey", file="StartupConfiguration.cs", label="Entry Unk.ContainsKey", span=""];
m30_212 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="402-402"];
m30_213 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="404-405"];
m30_214 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs", label="Assert.NotNull(entry)", span="406-406"];
m30_215 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="408-408"];
m30_216 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs", label="Assert.NotNull(history)", span="409-409"];
m30_218 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs", label="Assert.True(history.ContainsKey(property.Key))", span="413-413"];
m30_219 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs", label="Assert.Equal(property.Value, history[property.Key])", span="414-414"];
m30_217 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs", label=_stateProperties, span="411-411"];
m30_220 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryRecordShouldContainProperties()", span="402-402"];
m30_121 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="250-250"];
m30_122 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StartupConfiguration.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="252-257"];
m30_123 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StartupConfiguration.cs", label="keys.ForEach(x =>\r\n            {\r\n                var ttl = Redis.Client.GetTimeToLive(x);\r\n                Assert.True(\r\n                    ttl.Seconds == -1,\r\n                    String.Format(''TTL for the '{0}' key is '{1}''', x, ttl));\r\n            })", span="259-265"];
m30_124 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldPersistTheJob()", span="250-250"];
m30_120 [cluster="Unk.PopItemFromList", file="StartupConfiguration.cs", label="Entry Unk.PopItemFromList", span=""];
m30_135 [cluster="HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", file="StartupConfiguration.cs", label="Entry HangFire.Common.States.JobState.GetProperties(HangFire.Common.JobMethod)", span="26-26"];
m30_68 [cluster="TestStateChangingFilter.cstr", file="StartupConfiguration.cs", label="Entry TestStateChangingFilter.cstr", span=""];
m30_13 [cluster="HangFire.States.ProcessingState.ProcessingState(string)", file="StartupConfiguration.cs", label="Entry HangFire.States.ProcessingState.ProcessingState(string)", span="28-28"];
m30_29 [cluster="Mock<JobState>.cstr", file="StartupConfiguration.cs", label="Entry Mock<JobState>.cstr", span=""];
m30_22 [cluster="HangFire.States.EnqueuedState.EnqueuedState()", file="StartupConfiguration.cs", label="Entry HangFire.States.EnqueuedState.EnqueuedState()", span="25-25"];
m30_94 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="208-208"];
m30_95 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StartupConfiguration.cs", label="Assert.Equal(name, _state.StateName)", span="210-210"];
m30_96 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateNameIsEqualTo(string)", span="208-208"];
m30_59 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="117-117"];
m30_60 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StartupConfiguration.cs", label="_filters.Add(new TestStateChangingFilter(name, _stateChangingResults))", span="119-119"];
m30_61 [cluster="HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateChangingFilter(string)", span="117-117"];
m30_10 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="59-59"];
m30_11 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StartupConfiguration.cs", label="_state = new ProcessingState(''TestServer'')\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="61-64"];
m30_12 [cluster="HangFire.Tests.States.StateSteps.GivenTheProcessingState()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheProcessingState()", span="59-59"];
m30_18 [cluster="System.DateTime.AddDays(double)", file="StartupConfiguration.cs", label="Entry System.DateTime.AddDays(double)", span="0-0"];
m30_41 [cluster="Unk.GetProperties", file="StartupConfiguration.cs", label="Entry Unk.GetProperties", span=""];
m30_195 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="387-387"];
m30_196 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="StartupConfiguration.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId)))", span="389-390"];
m30_197 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasUnapplied()", span="387-387"];
m30_227 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="419-419"];
m30_222 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", span="419-419"];
m30_223 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="421-422"];
m30_224 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs", label=_stateProperties, span="424-424"];
m30_225 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs", label="Assert.True(stateEntry.ContainsKey(property.Key))", span="426-426"];
m30_226 [cluster="HangFire.Tests.States.StateSteps.ThenTheStateEntryShouldContainAllOfTheAboveProperties()", file="StartupConfiguration.cs", label="Assert.Equal(property.Value, stateEntry[property.Key])", span="427-427"];
m30_229 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="432-432"];
m30_230 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="Assert.Equal(table.RowCount, _stateChangingResults.Count)", span="434-434"];
m30_232 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="i < table.RowCount", span="436-436"];
m30_233 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="Assert.Equal(table.Rows[i][''Filter''], _stateChangingResults[i])", span="438-438"];
m30_231 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="var i = 0", span="436-436"];
m30_234 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="i++", span="436-436"];
m30_235 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereExecutedInTheFollowingOrder(Table)", span="432-432"];
m30_209 [cluster="lambda expression", file="StartupConfiguration.cs", label="Entry lambda expression", span="397-397"];
m30_34 [cluster="lambda expression", file="StartupConfiguration.cs", label="Entry lambda expression", span="89-89"];
m30_37 [cluster="lambda expression", file="StartupConfiguration.cs", label="Entry lambda expression", span="90-90"];
m30_35 [cluster="lambda expression", file="StartupConfiguration.cs", label="x.StateName", span="89-89"];
m30_36 [cluster="lambda expression", file="StartupConfiguration.cs", label="Exit lambda expression", span="89-89"];
m30_38 [cluster="lambda expression", file="StartupConfiguration.cs", label="x.GetProperties(It.IsAny<JobMethod>())", span="90-90"];
m30_39 [cluster="lambda expression", file="StartupConfiguration.cs", label="Exit lambda expression", span="90-90"];
m30_50 [cluster="lambda expression", file="StartupConfiguration.cs", label="Entry lambda expression", span="101-101"];
m30_53 [cluster="lambda expression", file="StartupConfiguration.cs", label="Entry lambda expression", span="101-101"];
m30_56 [cluster="lambda expression", file="StartupConfiguration.cs", label="Entry lambda expression", span="102-102"];
m30_51 [cluster="lambda expression", file="StartupConfiguration.cs", label="x[''Name'']", span="101-101"];
m30_52 [cluster="lambda expression", file="StartupConfiguration.cs", label="Exit lambda expression", span="101-101"];
m30_54 [cluster="lambda expression", file="StartupConfiguration.cs", label="x[''Value'']", span="101-101"];
m30_55 [cluster="lambda expression", file="StartupConfiguration.cs", label="Exit lambda expression", span="101-101"];
m30_57 [cluster="lambda expression", file="StartupConfiguration.cs", label="x.GetProperties(It.IsAny<JobMethod>())", span="102-102"];
m30_58 [cluster="lambda expression", file="StartupConfiguration.cs", label="Exit lambda expression", span="102-102"];
m30_103 [cluster="lambda expression", file="StartupConfiguration.cs", label="Entry lambda expression", span="223-230"];
m30_104 [cluster="lambda expression", file="StartupConfiguration.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="225-225"];
m30_105 [cluster="lambda expression", file="StartupConfiguration.cs", label="Assert.True(\r\n                        ttl.TotalSeconds > 0,\r\n                        String.Format(\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl))", span="226-229"];
m30_106 [cluster="lambda expression", file="StartupConfiguration.cs", label="Exit lambda expression", span="223-230"];
m30_125 [cluster="lambda expression", file="StartupConfiguration.cs", label="Entry lambda expression", span="259-265"];
m30_126 [cluster="lambda expression", file="StartupConfiguration.cs", label="var ttl = Redis.Client.GetTimeToLive(x)", span="261-261"];
m30_127 [cluster="lambda expression", file="StartupConfiguration.cs", label="Assert.True(\r\n                    ttl.Seconds == -1,\r\n                    String.Format(''TTL for the '{0}' key is '{1}''', x, ttl))", span="262-264"];
m30_128 [cluster="lambda expression", file="StartupConfiguration.cs", label="Exit lambda expression", span="259-265"];
m30_199 [cluster="lambda expression", file="StartupConfiguration.cs", label="Entry lambda expression", span="390-390"];
m30_200 [cluster="lambda expression", file="StartupConfiguration.cs", label="x.Unapply(It.Is<StateApplyingContext>(y => y.JobId == JobSteps.DefaultJobId))", span="390-390"];
m30_201 [cluster="lambda expression", file="StartupConfiguration.cs", label="Exit lambda expression", span="390-390"];
m30_203 [cluster="lambda expression", file="StartupConfiguration.cs", label="Entry lambda expression", span="390-390"];
m30_204 [cluster="lambda expression", file="StartupConfiguration.cs", label="y.JobId == JobSteps.DefaultJobId", span="390-390"];
m30_205 [cluster="lambda expression", file="StartupConfiguration.cs", label="Exit lambda expression", span="390-390"];
m30_210 [cluster="lambda expression", file="StartupConfiguration.cs", label="x.Unapply(It.IsAny<StateApplyingContext>())", span="397-397"];
m30_211 [cluster="lambda expression", file="StartupConfiguration.cs", label="Exit lambda expression", span="397-397"];
m30_175 [cluster="Unk.SetContainsItem", file="StartupConfiguration.cs", label="Entry Unk.SetContainsItem", span=""];
m30_62 [cluster="HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.TestStateChangingFilter.TestStateChangingFilter(string, System.Collections.Generic.IList<string>, HangFire.Common.States.JobState)", span="14-14"];
m30_249 [cluster="Unk.ToList", file="StartupConfiguration.cs", label="Entry Unk.ToList", span=""];
m30_108 [cluster="Unk.Format", file="StartupConfiguration.cs", label="Entry Unk.Format", span=""];
m30_149 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="302-302"];
m30_150 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StartupConfiguration.cs", label="Assert.False(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="304-304"];
m30_151 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetDoesNotContainTheJob()", span="302-302"];
m30_31 [cluster="Unk.Returns", file="StartupConfiguration.cs", label="Entry Unk.Returns", span=""];
m30_78 [cluster="HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", file="StartupConfiguration.cs", label="Entry HangFire.Redis.RedisConnection.RedisConnection(HangFire.Redis.RedisStorage, IRedisClient)", span="15-15"];
m30_33 [cluster="System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", file="StartupConfiguration.cs", label="Entry System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m30_77 [cluster="HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", file="StartupConfiguration.cs", label="Entry HangFire.States.StateMachine.StateMachine(HangFire.Storage.IStorageConnection, System.Collections.Generic.IEnumerable<HangFire.Common.States.JobStateHandler>, System.Collections.Generic.IEnumerable<object>)", span="41-41"];
m30_80 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="182-182"];
m30_81 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StartupConfiguration.cs", label="When(String.Format(\r\n                ''I change the state of the '{0}' job to the '{1}''',\r\n                JobSteps.DefaultJobId,\r\n                state))", span="184-187"];
m30_82 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string)", span="182-182"];
m30_107 [cluster="Unk.GetTimeToLive", file="StartupConfiguration.cs", label="Entry Unk.GetTimeToLive", span=""];
m30_63 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="StartupConfiguration.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m30_69 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="132-132"];
m30_70 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StartupConfiguration.cs", label="_filters.Add(new TestStateChangedFilter(name, _stateAppliedResults))", span="134-134"];
m30_71 [cluster="HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateAppliedFilter(string)", span="132-132"];
m30_42 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="97-97"];
m30_43 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StartupConfiguration.cs", label="Given(String.Format(''a '{0}' state'', state))", span="99-99"];
m30_44 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StartupConfiguration.cs", label="_stateProperties = table.Rows.ToDictionary(x => x[''Name''], x => x[''Value''])", span="101-101"];
m30_45 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StartupConfiguration.cs", label="_stateMocks[state].Setup(x => x.GetProperties(It.IsAny<JobMethod>()))\r\n                .Returns(_stateProperties)", span="102-103"];
m30_46 [cluster="HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAStateWithTheFollowingProperties(string, Table)", span="97-97"];
m30_97 [cluster="Unk.Equal", file="StartupConfiguration.cs", label="Entry Unk.Equal", span=""];
m30_206 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="394-394"];
m30_207 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StartupConfiguration.cs", label="_oldStateDescriptorMock.Verify(\r\n                x => x.Unapply(It.IsAny<StateApplyingContext>()),\r\n                Times.Never)", span="396-398"];
m30_208 [cluster="HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheOldStateWasNotUnapplied()", span="394-394"];
m30_193 [cluster="Unk.RemoveStartFromList", file="StartupConfiguration.cs", label="Entry Unk.RemoveStartFromList", span=""];
m30_176 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="341-341"];
m30_177 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StartupConfiguration.cs", label="var job = Redis.Client.GetAllEntriesFromHash(String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId))", span="343-343"];
m30_178 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StartupConfiguration.cs", label="Assert.Equal(state, job[''State''])", span="344-344"];
m30_179 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobStateIsChangedTo(string)", span="341-341"];
m30_110 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="234-234"];
m30_111 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StartupConfiguration.cs", label="Assert.Equal(\r\n                changeType == ''increase'' ? ''1'' : ''0'',\r\n                Redis.Client.GetValue(String.Format(''hangfire:stats:succeeded'')))", span="236-238"];
m30_112 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldIncreaseTheSucceededCounter(string)", span="234-234"];
m30_72 [cluster="HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.TestStateChangedFilter.TestStateChangedFilter(string, System.Collections.Generic.IList<string>)", span="14-14"];
m30_236 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="443-443"];
m30_237 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StartupConfiguration.cs", label="Assert.Equal(0, _stateChangingResults.Count)", span="445-445"];
m30_238 [cluster="HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenChangingFiltersWereNotExecuted()", span="443-443"];
m30_8 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="StartupConfiguration.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m30_23 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.GivenAState(string)", span="86-86"];
m30_24 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs", label="var mock = new Mock<JobState>()", span="88-88"];
m30_25 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs", label="mock.Setup(x => x.StateName).Returns(state)", span="89-89"];
m30_27 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs", label="_stateMocks.Add(state, mock)", span="93-93"];
m30_26 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs", label="mock.Setup(x => x.GetProperties(It.IsAny<JobMethod>()))\r\n                .Returns(new Dictionary<string, string>())", span="90-91"];
m30_28 [cluster="HangFire.Tests.States.StateSteps.GivenAState(string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.GivenAState(string)", span="86-86"];
m30_194 [cluster="Unk.NotNull", file="StartupConfiguration.cs", label="Entry Unk.NotNull", span=""];
m30_30 [cluster="Unk.Setup", file="StartupConfiguration.cs", label="Entry Unk.Setup", span=""];
m30_14 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="68-68"];
m30_15 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StartupConfiguration.cs", label="_state = new ScheduledState(DateTime.UtcNow.AddDays(1))\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="70-73"];
m30_16 [cluster="HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheScheduledStateWithTheDateSetToTomorrow()", span="68-68"];
m30_172 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="335-335"];
m30_173 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StartupConfiguration.cs", label="Assert.True(Redis.Client.SetContainsItem(''hangfire:queues'', queue))", span="337-337"];
m30_174 [cluster="HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheQueueWasAddedToTheQueuesSet(string)", span="335-335"];
m30_17 [cluster="HangFire.States.ScheduledState.ScheduledState(System.DateTime)", file="StartupConfiguration.cs", label="Entry HangFire.States.ScheduledState.ScheduledState(System.DateTime)", span="27-27"];
m30_146 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="296-296"];
m30_147 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StartupConfiguration.cs", label="Assert.True(Redis.Client.SortedSetContainsItem(''hangfire:processing'', JobSteps.DefaultJobId))", span="298-298"];
m30_148 [cluster="HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheProcessingSetContainsTheJob()", span="296-296"];
m30_141 [cluster="Unk.GetSortedSetCount", file="StartupConfiguration.cs", label="Entry Unk.GetSortedSetCount", span=""];
m30_198 [cluster="Unk.Verify", file="StartupConfiguration.cs", label="Entry Unk.Verify", span=""];
m30_115 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="242-242"];
m30_116 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StartupConfiguration.cs", label="Assert.Equal(1, Redis.Client.GetListCount(''hangfire:succeeded''))", span="244-244"];
m30_117 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StartupConfiguration.cs", label="Assert.Equal(JobSteps.DefaultJobId, Redis.Client.PopItemFromList(\r\n                ''hangfire:succeeded''))", span="245-246"];
m30_118 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldBeAddedToTheSucceededList()", span="242-242"];
m30_143 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="290-290"];
m30_144 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StartupConfiguration.cs", label="Assert.Equal(0, Redis.Client.GetSortedSetCount(''hangfire:failed''))", span="292-292"];
m30_145 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheFailedSet()", span="290-290"];
m30_184 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="348-348"];
m30_181 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", span="348-348"];
m30_182 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StartupConfiguration.cs", label="var stateEntry = Redis.Client.GetAllEntriesFromHash(\r\n                String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId))", span="350-351"];
m30_183 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobsStateEntryContainsTheFollowingItems(Table)", file="StartupConfiguration.cs", label="TableAssert.ContainsFollowingItems(table, stateEntry)", span="352-352"];
m30_9 [cluster="HangFire.States.FailedState.FailedState(System.Exception)", file="StartupConfiguration.cs", label="Entry HangFire.States.FailedState.FailedState(System.Exception)", span="28-28"];
m30_142 [cluster="Unk.SortedSetContainsItem", file="StartupConfiguration.cs", label="Entry Unk.SortedSetContainsItem", span=""];
m30_83 [cluster="string.Format(string, object, object)", file="StartupConfiguration.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m30_161 [cluster="System.DateTime.AddSeconds(double)", file="StartupConfiguration.cs", label="Entry System.DateTime.AddSeconds(double)", span="0-0"];
m30_113 [cluster="string.Format(string, params object[])", file="StartupConfiguration.cs", label="Entry string.Format(string, params object[])", span="0-0"];
m30_98 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="214-214"];
m30_99 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StartupConfiguration.cs", label="var keys = new[]\r\n                {\r\n                    String.Format(''hangfire:job:{0}'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:state'', JobSteps.DefaultJobId),\r\n                    String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId)\r\n                }", span="216-221"];
m30_100 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StartupConfiguration.cs", label="keys.ForEach(x =>\r\n                {\r\n                    var ttl = Redis.Client.GetTimeToLive(x);\r\n                    Assert.True(\r\n                        ttl.TotalSeconds > 0,\r\n                        String.Format(\r\n                        ''TTL for the '{0}' key is '{1}''', x, ttl));\r\n                })", span="223-230"];
m30_101 [cluster="HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenItShouldExpireTheJob()", span="214-214"];
m30_49 [cluster="Unk.ToDictionary", file="StartupConfiguration.cs", label="Entry Unk.ToDictionary", span=""];
m30_180 [cluster="Unk.GetAllEntriesFromHash", file="StartupConfiguration.cs", label="Entry Unk.GetAllEntriesFromHash", span=""];
m30_4 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="49-49"];
m30_5 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StartupConfiguration.cs", label="_failedException = new InvalidOperationException(''Hello'')", span="51-51"];
m30_6 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StartupConfiguration.cs", label="_state = new FailedState(_failedException)\r\n            {\r\n                Reason = ''SomeReason''\r\n            }", span="52-55"];
m30_7 [cluster="HangFire.Tests.States.StateSteps.GivenTheFailedState()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheFailedState()", span="49-49"];
m30_160 [cluster="HangFire.Common.JobHelper.FromTimestamp(long)", file="StartupConfiguration.cs", label="Entry HangFire.Common.JobHelper.FromTimestamp(long)", span="41-41"];
m30_47 [cluster="string.Format(string, object)", file="StartupConfiguration.cs", label="Entry string.Format(string, object)", span="0-0"];
m30_192 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="356-356"];
m30_186 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", span="356-356"];
m30_187 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs", label="var entry = Redis.Client.RemoveStartFromList(\r\n                String.Format(''hangfire:job:{0}:history'', JobSteps.DefaultJobId))", span="358-359"];
m30_191 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs", label="TableAssert.ContainsFollowingItems(table, history)", span="365-365"];
m30_188 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs", label="Assert.NotNull(entry)", span="360-360"];
m30_189 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs", label="var history = JobHelper.FromJson<Dictionary<string, string>>(entry)", span="362-362"];
m30_190 [cluster="HangFire.Tests.States.StateSteps.ThenTheHistoryEntryShouldContainTheFollowingItems(Table)", file="StartupConfiguration.cs", label="Assert.NotNull(history)", span="363-363"];
m30_40 [cluster="Unk.>", file="StartupConfiguration.cs", label="Entry Unk.>", span=""];
m30_159 [cluster="Unk.GetItemScoreInSortedSet", file="StartupConfiguration.cs", label="Entry Unk.GetItemScoreInSortedSet", span=""];
m30_119 [cluster="Unk.GetListCount", file="StartupConfiguration.cs", label="Entry Unk.GetListCount", span=""];
m30_3 [cluster="HangFire.States.SucceededState.SucceededState()", file="StartupConfiguration.cs", label="Entry HangFire.States.SucceededState.SucceededState()", span="23-23"];
m30_0 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="43-43"];
m30_1 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StartupConfiguration.cs", label="_state = new SucceededState { Reason = ''SomeReason'' }", span="45-45"];
m30_2 [cluster="HangFire.Tests.States.StateSteps.GivenTheSucceededState()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.GivenTheSucceededState()", span="43-43"];
m30_32 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="StartupConfiguration.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m30_84 [cluster="Unk.When", file="StartupConfiguration.cs", label="Entry Unk.When", span=""];
m30_129 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="269-269"];
m30_130 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StartupConfiguration.cs", label="Assert.Equal(0, Redis.Client.GetListCount(''hangfire:succeeded''))", span="271-271"];
m30_131 [cluster="HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenTheJobShouldBeRemovedFromTheSucceededList()", span="269-269"];
m30_132 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="275-275"];
m30_133 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StartupConfiguration.cs", label="TableAssert.ContainsFollowingItems(\r\n                table,\r\n                _state.GetProperties(_defaultData))", span="277-279"];
m30_134 [cluster="HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenPropertiesTableContainsTheFollowingItems(Table)", span="275-275"];
m30_247 [cluster="Unk.GetAllItemsFromList", file="StartupConfiguration.cs", label="Entry Unk.GetAllItemsFromList", span=""];
m30_85 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="191-191"];
m30_86 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StartupConfiguration.cs", label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="193-194"];
m30_87 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StartupConfiguration.cs", label="stateMachine.ChangeState(jobId, _stateMocks[state].Object)", span="195-195"];
m30_88 [cluster="HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIChangeTheStateOfTheJobToThe(string, string)", span="191-191"];
m30_248 [cluster="Unk.Select", file="StartupConfiguration.cs", label="Entry Unk.Select", span=""];
m30_79 [cluster="HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", file="StartupConfiguration.cs", label="Entry HangFire.States.StateMachine.ChangeState(string, HangFire.Common.States.JobState, params string[])", span="113-113"];
m30_73 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="174-174"];
m30_74 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StartupConfiguration.cs", label="var stateMachine = new StateMachine(\r\n                new RedisConnection(Redis.Storage, Redis.Client), _handlers, _filters)", span="176-177"];
m30_75 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StartupConfiguration.cs", label="stateMachine.ChangeState(JobSteps.DefaultJobId, _state)", span="178-178"];
m30_76 [cluster="HangFire.Tests.States.StateSteps.WhenIApplyTheState()", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.WhenIApplyTheState()", span="174-174"];
m30_114 [cluster="Unk.GetValue", file="StartupConfiguration.cs", label="Entry Unk.GetValue", span=""];
m30_109 [cluster="Unk.True", file="StartupConfiguration.cs", label="Entry Unk.True", span=""];
m30_185 [cluster="Unk.ContainsFollowingItems", file="StartupConfiguration.cs", label="Entry Unk.ContainsFollowingItems", span=""];
m30_250 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="Entry HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="462-462"];
m30_251 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="Assert.Equal(table.RowCount, _stateAppliedResults.Count)", span="464-464"];
m30_253 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="i < table.RowCount", span="466-466"];
m30_254 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="Assert.Equal(table.Rows[i][''Method''], _stateAppliedResults[i])", span="468-468"];
m30_252 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="var i = 0", span="466-466"];
m30_255 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="i++", span="466-466"];
m30_256 [cluster="HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", file="StartupConfiguration.cs", label="Exit HangFire.Tests.States.StateSteps.ThenStateAppliedFilterMethodsWereExecutedInTheFollowingOrder(Table)", span="462-462"];
m30_257 [file="StartupConfiguration.cs", label="HangFire.Tests.States.StateSteps", span=""];
m31_138 [cluster="HangFire.Web.Pages.DeletedJobsPage.DeletedJobsPage()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.DeletedJobsPage.DeletedJobsPage()", span="49-49"];
m31_31 [cluster="Unk.RegisterPathHandlerFactory", file="WorkerContextFacts.cs", label="Entry Unk.RegisterPathHandlerFactory", span=""];
m31_196 [cluster="HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.HttpStatusHandler.Process(HttpContext, System.Net.HttpStatusCode)", span="7-7"];
m31_223 [cluster="string.Format(string, object, object)", file="WorkerContextFacts.cs", label="Entry string.Format(string, object, object)", span="0-0"];
m31_51 [cluster="HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.FetchedJobsPage.FetchedJobsPage(string)", span="4-4"];
m31_47 [cluster="HangFire.Web.Pages.QueuesPage.QueuesPage()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.QueuesPage.QueuesPage()", span="53-53"];
m31_0 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="35-35"];
m31_1 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RazorPage.ExceptionHandler = ex => new ErrorPage(ex)", span="37-37"];
m31_2 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterDefaultPathHandlerFactory(() => new DashboardPage())", span="39-39"];
m31_3 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/job/(?<JobId>.+)'',\r\n                x => new JobDetailsPage(x.Groups[''JobId''].Value))", span="41-43"];
m31_4 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/queues'', x => new QueuesPage())", span="45-45"];
m31_5 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/queues/fetched/(?<Queue>.+)'',\r\n                x => new FetchedJobsPage(x.Groups[''Queue''].Value))", span="46-48"];
m31_6 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/queues/(?<Queue>.+)'',\r\n                x => new EnqueuedJobsPage(x.Groups[''Queue''].Value))", span="49-51"];
m31_8 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/enqueued/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId)))", span="56-57"];
m31_9 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/processing'', x => new ProcessingJobsPage())", span="59-59"];
m31_11 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/processing/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ProcessingState.StateName)))", span="63-64"];
m31_12 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/scheduled'', x => new ScheduledJobsPage())", span="66-66"];
m31_13 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/scheduled/enqueue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ScheduledState.StateName)))", span="68-69"];
m31_14 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/scheduled/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ScheduledState.StateName)))", span="71-72"];
m31_15 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/servers'', x => new ServersPage())", span="74-74"];
m31_16 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/succeeded'', x => new SucceededJobs())", span="75-75"];
m31_17 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/succeeded/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, SucceededState.StateName)))", span="76-77"];
m31_18 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/failed'', x => new FailedJobsPage())", span="79-79"];
m31_19 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/failed/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, FailedState.StateName)))", span="81-82"];
m31_20 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/failed/delete'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, FailedState.StateName)))", span="84-85"];
m31_21 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/deleted'', x => new DeletedJobsPage())", span="87-87"];
m31_22 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/deleted/requeue'', x => new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, DeletedState.StateName)))", span="89-90"];
m31_23 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/actions/requeue/(?<JobId>.+)'',\r\n                x => new CommandHandler(() => BackgroundJob.Requeue(x.Groups[''JobId''].Value)))", span="92-94"];
m31_24 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/actions/delete/(?<JobId>.+)'',\r\n                x => new CommandHandler(() => BackgroundJob.Delete(x.Groups[''JobId''].Value)))", span="96-98"];
m31_25 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/js/scripts.js'',  x => new JavaScriptHandler())", span="100-100"];
m31_26 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(''/css/styles.css'', x => new StyleSheetHandler())", span="101-101"];
m31_27 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/fonts/(?<File>.+)'',\r\n                x => new FontsHandler(x.Groups[''File''].Value))", span="103-105"];
m31_28 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="RegisterPathHandlerFactory(\r\n                ''/stats'',\r\n                x => new JsonStats())", span="107-109"];
m31_29 [cluster="HangFire.Web.HangFirePageFactory.HangFirePageFactory()", file="WorkerContextFacts.cs", label="Exit HangFire.Web.HangFirePageFactory.HangFirePageFactory()", span="35-35"];
m31_43 [cluster="HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.JobDetailsPage.JobDetailsPage(string)", span="6-6"];
m31_112 [cluster="HangFire.Web.Pages.SucceededJobs.SucceededJobs()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.SucceededJobs.SucceededJobs()", span="54-54"];
m31_165 [cluster="HangFire.Web.StyleSheetHandler.StyleSheetHandler()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.StyleSheetHandler.StyleSheetHandler()", span="29-29"];
m31_217 [cluster="string.EndsWith(string, System.StringComparison)", file="WorkerContextFacts.cs", label="Entry string.EndsWith(string, System.StringComparison)", span="0-0"];
m31_74 [cluster="HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.ProcessingJobsPage.ProcessingJobsPage()", span="43-43"];
m31_179 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", span="119-119"];
m31_180 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="WorkerContextFacts.cs", label="_defaultHandlerFactory = handlerFactory", span="121-121"];
m31_181 [cluster="HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", file="WorkerContextFacts.cs", label="Exit HangFire.Web.HangFirePageFactory.RegisterDefaultPathHandlerFactory(System.Func<IHttpHandler>)", span="119-119"];
m31_219 [cluster="System.Func<T, TResult>.Invoke(T)", file="WorkerContextFacts.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m31_220 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", span="179-179"];
m31_221 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="WorkerContextFacts.cs", label="return String.Format(''{0}.Content.{1}'', typeof (HangFirePageFactory).Namespace, contentFolder);", span="181-181"];
m31_222 [cluster="HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", file="WorkerContextFacts.cs", label="Exit HangFire.Web.HangFirePageFactory.GetContentFolderNamespace(string)", span="179-179"];
m31_200 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.HangFirePageFactory.FindHandler(string)", span="149-149"];
m31_201 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="resource.Length == 0 || resource.Equals(''/'', StringComparison.OrdinalIgnoreCase)", span="151-151"];
m31_209 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="var match = Regex.Match(\r\n                    resource,\r\n                    pattern, \r\n                    RegexOptions.CultureInvariant | RegexOptions.IgnoreCase | RegexOptions.Singleline)", span="165-168"];
m31_202 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="return _defaultHandlerFactory();", span="153-153"];
m31_203 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label=PathHandlerFactories, span="156-156"];
m31_204 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="var pattern = pathHandlerFactory.Item1", span="158-158"];
m31_212 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="return null;", span="176-176"];
m31_211 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="return pathHandlerFactory.Item2(match);", span="172-172"];
m31_205 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="!pattern.StartsWith(''^'', StringComparison.OrdinalIgnoreCase)", span="160-160"];
m31_206 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="pattern = ''^'' + pattern", span="161-161"];
m31_207 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="!pattern.EndsWith(''$'', StringComparison.OrdinalIgnoreCase)", span="162-162"];
m31_208 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="pattern += ''$''", span="163-163"];
m31_210 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="match.Success", span="170-170"];
m31_213 [cluster="HangFire.Web.HangFirePageFactory.FindHandler(string)", file="WorkerContextFacts.cs", label="Exit HangFire.Web.HangFirePageFactory.FindHandler(string)", span="149-149"];
m31_92 [cluster="HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.ScheduledJobsPage.ScheduledJobsPage()", span="43-43"];
m31_63 [cluster="HangFire.BackgroundJob.Delete(string)", file="WorkerContextFacts.cs", label="Entry HangFire.BackgroundJob.Delete(string)", span="164-164"];
m31_169 [cluster="HangFire.Web.FontsHandler.FontsHandler(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.FontsHandler.FontsHandler(string)", span="22-22"];
m31_39 [cluster="HangFire.Web.Pages.DashboardPage.DashboardPage()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.DashboardPage.DashboardPage()", span="47-47"];
m31_197 [cluster="Unk.Add", file="WorkerContextFacts.cs", label="Entry Unk.Add", span=""];
m31_148 [cluster="HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.CommandHandler.CommandHandler(System.Func<bool>)", span="26-26"];
m31_216 [cluster="string.StartsWith(string, System.StringComparison)", file="WorkerContextFacts.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m31_215 [cluster="System.Func<TResult>.Invoke()", file="WorkerContextFacts.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m31_177 [cluster="System.Tuple<T1, T2>.Tuple(T1, T2)", file="WorkerContextFacts.cs", label="Entry System.Tuple<T1, T2>.Tuple(T1, T2)", span="0-0"];
m31_59 [cluster="HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.BatchCommandHandler.BatchCommandHandler(System.Action<string>)", span="26-26"];
m31_70 [cluster="HangFire.BackgroundJob.Requeue(string)", file="WorkerContextFacts.cs", label="Entry HangFire.BackgroundJob.Requeue(string)", span="197-197"];
m31_173 [cluster="HangFire.Web.JsonStats.JsonStats()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.JsonStats.JsonStats()", span="22-22"];
m31_218 [cluster="System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", file="WorkerContextFacts.cs", label="Entry System.Text.RegularExpressions.Regex.Match(string, string, System.Text.RegularExpressions.RegexOptions)", span="0-0"];
m31_122 [cluster="HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.FailedJobsPage.FailedJobsPage()", span="48-48"];
m31_155 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="98-98"];
m31_33 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new ErrorPage(ex)", span="37-37"];
m31_36 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="39-39"];
m31_40 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="43-43"];
m31_44 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="45-45"];
m31_48 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="48-48"];
m31_52 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="51-51"];
m31_56 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="53-54"];
m31_64 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="56-57"];
m31_71 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="59-59"];
m31_75 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="60-61"];
m31_82 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="63-64"];
m31_89 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="66-66"];
m31_93 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="68-69"];
m31_99 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="71-72"];
m31_105 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="74-74"];
m31_109 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="75-75"];
m31_113 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="76-77"];
m31_119 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="79-79"];
m31_123 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="81-82"];
m31_129 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="84-85"];
m31_135 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="87-87"];
m31_139 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="89-90"];
m31_145 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="94-94"];
m31_152 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="98-98"];
m31_158 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="100-100"];
m31_162 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="101-101"];
m31_166 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="105-105"];
m31_170 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="109-109"];
m31_32 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="37-37"];
m31_34 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="37-37"];
m31_37 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new DashboardPage()", span="39-39"];
m31_38 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="39-39"];
m31_41 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new JobDetailsPage(x.Groups[''JobId''].Value)", span="43-43"];
m31_42 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="43-43"];
m31_45 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new QueuesPage()", span="45-45"];
m31_46 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="45-45"];
m31_49 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new FetchedJobsPage(x.Groups[''Queue''].Value)", span="48-48"];
m31_50 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="48-48"];
m31_53 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new EnqueuedJobsPage(x.Groups[''Queue''].Value)", span="51-51"];
m31_54 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="51-51"];
m31_58 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="53-54"];
m31_60 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="54-54"];
m31_62 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="54-54"];
m31_65 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId))", span="56-57"];
m31_66 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="56-57"];
m31_68 [cluster="lambda expression", file="WorkerContextFacts.cs", label="BackgroundJob.Requeue(jobId)", span="57-57"];
m31_67 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="57-57"];
m31_69 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="57-57"];
m31_72 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new ProcessingJobsPage()", span="59-59"];
m31_73 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="59-59"];
m31_77 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="60-61"];
m31_78 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="61-61"];
m31_80 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="61-61"];
m31_83 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ProcessingState.StateName))", span="63-64"];
m31_84 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="63-64"];
m31_86 [cluster="lambda expression", file="WorkerContextFacts.cs", label="BackgroundJob.Requeue(jobId, ProcessingState.StateName)", span="64-64"];
m31_85 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="64-64"];
m31_87 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="64-64"];
m31_90 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new ScheduledJobsPage()", span="66-66"];
m31_91 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="66-66"];
m31_94 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, ScheduledState.StateName))", span="68-69"];
m31_95 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="68-69"];
m31_97 [cluster="lambda expression", file="WorkerContextFacts.cs", label="BackgroundJob.Requeue(jobId, ScheduledState.StateName)", span="69-69"];
m31_96 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="69-69"];
m31_98 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="69-69"];
m31_100 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, ScheduledState.StateName))", span="71-72"];
m31_101 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="71-72"];
m31_103 [cluster="lambda expression", file="WorkerContextFacts.cs", label="BackgroundJob.Delete(jobId, ScheduledState.StateName)", span="72-72"];
m31_102 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="72-72"];
m31_104 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="72-72"];
m31_106 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new ServersPage()", span="74-74"];
m31_107 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="74-74"];
m31_110 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new SucceededJobs()", span="75-75"];
m31_111 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="75-75"];
m31_114 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, SucceededState.StateName))", span="76-77"];
m31_115 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="76-77"];
m31_117 [cluster="lambda expression", file="WorkerContextFacts.cs", label="BackgroundJob.Requeue(jobId, SucceededState.StateName)", span="77-77"];
m31_116 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="77-77"];
m31_118 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="77-77"];
m31_120 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new FailedJobsPage()", span="79-79"];
m31_121 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="79-79"];
m31_124 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, FailedState.StateName))", span="81-82"];
m31_125 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="81-82"];
m31_127 [cluster="lambda expression", file="WorkerContextFacts.cs", label="BackgroundJob.Requeue(jobId, FailedState.StateName)", span="82-82"];
m31_126 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="82-82"];
m31_128 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="82-82"];
m31_130 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Delete(jobId, FailedState.StateName))", span="84-85"];
m31_131 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="84-85"];
m31_133 [cluster="lambda expression", file="WorkerContextFacts.cs", label="BackgroundJob.Delete(jobId, FailedState.StateName)", span="85-85"];
m31_132 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="85-85"];
m31_134 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="85-85"];
m31_136 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new DeletedJobsPage()", span="87-87"];
m31_137 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="87-87"];
m31_140 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new BatchCommandHandler(\r\n                jobId => BackgroundJob.Requeue(jobId, DeletedState.StateName))", span="89-90"];
m31_141 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="89-90"];
m31_143 [cluster="lambda expression", file="WorkerContextFacts.cs", label="BackgroundJob.Requeue(jobId, DeletedState.StateName)", span="90-90"];
m31_142 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="90-90"];
m31_144 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="90-90"];
m31_146 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new CommandHandler(() => BackgroundJob.Requeue(x.Groups[''JobId''].Value))", span="94-94"];
m31_150 [cluster="lambda expression", file="WorkerContextFacts.cs", label="BackgroundJob.Requeue(x.Groups[''JobId''].Value)", span="94-94"];
m31_147 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="94-94"];
m31_149 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Entry lambda expression", span="94-94"];
m31_151 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="94-94"];
m31_153 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new CommandHandler(() => BackgroundJob.Delete(x.Groups[''JobId''].Value))", span="98-98"];
m31_156 [cluster="lambda expression", file="WorkerContextFacts.cs", label="BackgroundJob.Delete(x.Groups[''JobId''].Value)", span="98-98"];
m31_154 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="98-98"];
m31_157 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="98-98"];
m31_159 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new JavaScriptHandler()", span="100-100"];
m31_160 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="100-100"];
m31_163 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new StyleSheetHandler()", span="101-101"];
m31_164 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="101-101"];
m31_167 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new FontsHandler(x.Groups[''File''].Value)", span="105-105"];
m31_168 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="105-105"];
m31_171 [cluster="lambda expression", file="WorkerContextFacts.cs", label="new JsonStats()", span="109-109"];
m31_172 [cluster="lambda expression", file="WorkerContextFacts.cs", label="Exit lambda expression", span="109-109"];
m31_161 [cluster="HangFire.Web.JavaScriptHandler.JavaScriptHandler()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.JavaScriptHandler.JavaScriptHandler()", span="33-33"];
m31_214 [cluster="string.Equals(string, System.StringComparison)", file="WorkerContextFacts.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m31_55 [cluster="HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.EnqueuedJobsPage.EnqueuedJobsPage(string)", span="4-4"];
m31_182 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", span="124-124"];
m31_183 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="context == null", span="126-126"];
m31_185 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="!HangFireConfiguration.EnableRemoteMonitorAccess && !context.Request.IsLocal", span="128-128"];
m31_186 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="return HttpStatusHandler.Process(context, HttpStatusCode.Unauthorized);", span="130-130"];
m31_187 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="context.Items.Add(''GenerationStartedAt'', DateTime.UtcNow)", span="133-133"];
m31_188 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="var request = context.Request", span="135-135"];
m31_192 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="return HttpStatusHandler.Process(context, HttpStatusCode.NotFound);", span="143-143"];
m31_184 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="throw new ArgumentNullException(''context'');", span="126-126"];
m31_189 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="var resource = request.PathInfo.Length == 0\r\n                ? String.Empty\r\n                : request.PathInfo.ToLowerInvariant()", span="136-138"];
m31_190 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="var handler = FindHandler(resource)", span="140-140"];
m31_191 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="handler == null", span="141-141"];
m31_193 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="return handler;", span="146-146"];
m31_194 [cluster="HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", file="WorkerContextFacts.cs", label="Exit HangFire.Web.HangFirePageFactory.GetHandler(HttpContext, string, string, string)", span="124-124"];
m31_108 [cluster="HangFire.Web.Pages.ServersPage.ServersPage()", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.ServersPage.ServersPage()", span="53-53"];
m31_178 [cluster="System.Collections.Generic.List<T>.Add(T)", file="WorkerContextFacts.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m31_198 [cluster="Unk.ToLowerInvariant", file="WorkerContextFacts.cs", label="Entry Unk.ToLowerInvariant", span=""];
m31_35 [cluster="HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.Pages.ErrorPage.ErrorPage(System.Exception)", span="6-6"];
m31_81 [cluster="HangFire.BackgroundJob.Delete(string, string)", file="WorkerContextFacts.cs", label="Entry HangFire.BackgroundJob.Delete(string, string)", span="182-182"];
m31_224 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", span="184-184"];
m31_225 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="WorkerContextFacts.cs", label="return String.Format(''{0}.{1}'', GetContentFolderNamespace(contentFolder), resourceName);", span="186-186"];
m31_226 [cluster="HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", file="WorkerContextFacts.cs", label="Exit HangFire.Web.HangFirePageFactory.GetContentResourceName(string, string)", span="184-184"];
m31_199 [cluster="Unk.FindHandler", file="WorkerContextFacts.cs", label="Entry Unk.FindHandler", span=""];
m31_174 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", span="112-112"];
m31_175 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="WorkerContextFacts.cs", label="PathHandlerFactories.Add(new Tuple<string, Func<Match, IHttpHandler>>(\r\n                pathPattern, handlerFactory))", span="115-116"];
m31_176 [cluster="HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", file="WorkerContextFacts.cs", label="Exit HangFire.Web.HangFirePageFactory.RegisterPathHandlerFactory(string, System.Func<System.Text.RegularExpressions.Match, IHttpHandler>)", span="112-112"];
m31_30 [cluster="Unk.RegisterDefaultPathHandlerFactory", file="WorkerContextFacts.cs", label="Entry Unk.RegisterDefaultPathHandlerFactory", span=""];
m31_227 [cluster="HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", file="WorkerContextFacts.cs", label="Entry HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", span="189-189"];
m31_228 [cluster="HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", file="WorkerContextFacts.cs", label="Exit HangFire.Web.HangFirePageFactory.ReleaseHandler(IHttpHandler)", span="189-189"];
m31_88 [cluster="HangFire.BackgroundJob.Requeue(string, string)", file="WorkerContextFacts.cs", label="Entry HangFire.BackgroundJob.Requeue(string, string)", span="215-215"];
m31_229 [file="WorkerContextFacts.cs", label="System.Text.RegularExpressions.Match", span=""];
m31_230 [file="WorkerContextFacts.cs", label="System.Text.RegularExpressions.Match", span=""];
m31_231 [file="WorkerContextFacts.cs", label="HangFire.Web.HangFirePageFactory", span=""];
m32_0 [cluster="HangFire.Tests.TestJob.Perform()", file="WorkerContextMock.cs", label="Entry HangFire.Tests.TestJob.Perform()", span="4-4"];
m32_1 [cluster="HangFire.Tests.TestJob.Perform()", file="WorkerContextMock.cs", label="Exit HangFire.Tests.TestJob.Perform()", span="4-4"];
m33_82 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStateMachineFactory_IsNull()", span="93-93"];
m33_164 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="184-184"];
m33_165 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="186-186"];
m33_167 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>()))", span="190-196"];
m33_168 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ProcessesOnlyJobs_InEnqueuedAndProcessingState()", span="184-184"];
m33_90 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_TakesConnectionAndReleasesIt()", file="WorkerFacts.cs", label="_connection.Verify(x => x.Dispose(), Times.Once)", span="109-109"];
m33_19 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="WorkerFacts.cs", label="var index = 0", prediction=101, span="178-178"];
m33_79 [cluster="HangFire.Storage.IMonitoringApi.FailedCount()", file="WorkerFacts.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedCount()", span="41-41"];
m33_81 [cluster="HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", file="WorkerFacts.cs", label="Entry HangFire.Storage.IMonitoringApi.FailedJobs(int, int)", span="35-35"];
m33_16 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="WorkerFacts.cs", label="WriteLiteral(@''''''\n                    data-loading-text=''''Deleting...''''\n                    data-confirm=''''Do you really want to DELETE ALL selected jobs?''''>\n                <span class=''''glyphicon glyphicon-remove''''></span>\n                Delete selected\n            </button>\n\n            '')", span="141-148"];
m33_60 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="WorkerFacts.cs", label="Write(index++ == 0 ? ''display: block;'' : null)", span="420-420"];
m33_288 [cluster="System.Exception.Exception()", file="WorkerFacts.cs", label="Entry System.Exception.Exception()", span="0-0"];
m33_245 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="284-284"];
m33_246 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="287-287"];
m33_247 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(exception)", span="288-290"];
m33_250 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="298-302"];
m33_248 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="292-292"];
m33_251 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasInternalException()", span="284-284"];
m33_234 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="270-270"];
m33_235 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="272-272"];
m33_237 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>()))", span="276-280"];
m33_238 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToSuccessfulState_OnlyIfItIsInProcessingState()", span="270-270"];
m33_27 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", file="WorkerFacts.cs", label="WriteLiteral(''\''>\n'')", span="222-222"];
m33_0 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="26-26"];
m33_3 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_process = new Mock<IJobPerformanceProcess>()", span="30-30"];
m33_7 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", color=green, community=0, file="WorkerFacts.cs", label="_fetchedJob = new Mock<IFetchedJob>()", prediction=102, span="37-37"];
m33_4 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateMachineFactory = new Mock<IStateMachineFactory>()", span="31-31"];
m33_5 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection = new Mock<IStorageConnection>()", span="33-33"];
m33_8 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_fetchedJob.Setup(x => x.JobId).Returns(JobId)", span="38-38"];
m33_10 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData\r\n                {\r\n                    Job = Job.FromExpression(() => Method()),\r\n                })", span="44-48"];
m33_17 [cluster="Mock<JobStorage>.cstr", file="WorkerFacts.cs", label="Entry Mock<JobStorage>.cstr", span=""];
m33_72 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="84-84"];
m33_13 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateMachine.Setup(x => x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())).Returns(true)", span="56-60"];
m33_15 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", span="26-26"];
m33_18 [cluster="Mock<IJobPerformanceProcess>.cstr", color=green, community=0, file="WorkerFacts.cs", label="Entry Mock<IJobPerformanceProcess>.cstr", prediction=103, span=""];
m33_20 [cluster="Mock<IStorageConnection>.cstr", file="WorkerFacts.cs", label="Entry Mock<IStorageConnection>.cstr", span=""];
m33_26 [cluster="Mock<IStateMachine>.cstr", color=green, community=0, file="WorkerFacts.cs", label="Entry Mock<IStateMachine>.cstr", prediction=103, span=""];
m33_24 [cluster="Hangfire.Storage.JobData.JobData()", file="WorkerFacts.cs", label="Entry Hangfire.Storage.JobData.JobData()", span="21-21"];
m33_25 [cluster="Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", file="WorkerFacts.cs", label="Entry Hangfire.Common.Job.FromExpression(System.Linq.Expressions.Expression<System.Action>)", span="149-149"];
m33_28 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="35-35"];
m33_30 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="35-35"];
m33_38 [cluster="HangFire.Web.Pages.FailedJobsPage.Execute()", color=green, community=0, file="WorkerFacts.cs", label="WriteLiteral(''\n                            </a>\n'')", prediction=103, span="285-285"];
m33_37 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="41-41"];
m33_39 [cluster="Unk.FetchNextJob", file="WorkerFacts.cs", label="Entry Unk.FetchNextJob", span=""];
m33_41 [cluster="lambda expression", color=green, community=0, file="WorkerFacts.cs", label="x.GetJobData(JobId)", prediction=103, span="44-44"];
m33_40 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="44-44"];
m33_42 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="44-44"];
m33_11 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateMachine = new Mock<IStateMachine>()", span="50-50"];
m33_12 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.WorkerFacts()", file="WorkerFacts.cs", label="_stateMachineFactory\r\n                .Setup(x => x.Create(_connection.Object))\r\n                .Returns(_stateMachine.Object)", span="52-54"];
m33_21 [cluster="Unk.Setup", file="WorkerFacts.cs", label="Entry Unk.Setup", span=""];
m33_22 [cluster="Unk.Returns", file="WorkerFacts.cs", label="Entry Unk.Returns", span=""];
m33_23 [cluster="Mock<IFetchedJob>.cstr", file="WorkerFacts.cs", label="Entry Mock<IFetchedJob>.cstr", span=""];
m33_31 [cluster="Unk.GetConnection", file="WorkerFacts.cs", label="Entry Unk.GetConnection", span=""];
m33_32 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="38-38"];
m33_33 [cluster="lambda expression", file="WorkerFacts.cs", label="x.JobId", span="38-38"];
m33_34 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="38-38"];
m33_35 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="41-41"];
m33_43 [cluster="Unk.GetJobData", file="WorkerFacts.cs", label="Entry Unk.GetJobData", span=""];
m33_44 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="47-47"];
m33_45 [cluster="lambda expression", file="WorkerFacts.cs", label="Method()", span="47-47"];
m33_46 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="47-47"];
m33_47 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="352-352"];
m33_48 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="53-53"];
m33_49 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Create(_connection.Object)", span="53-53"];
m33_50 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="53-53"];
m33_51 [cluster="Unk.Create", file="WorkerFacts.cs", label="Entry Unk.Create", span=""];
m33_52 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="56-60"];
m33_54 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="56-60"];
m33_55 [cluster="Unk.ChangeState", file="WorkerFacts.cs", label="Entry Unk.ChangeState", span=""];
m33_56 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="66-66"];
m33_59 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", span="66-66"];
m33_61 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="69-69"];
m33_63 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="69-69"];
m33_64 [cluster="Worker.cstr", file="WorkerFacts.cs", label="Entry Worker.cstr", span=""];
m33_65 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="75-75"];
m33_68 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenStorageIsNull()", span="75-75"];
m33_69 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="78-78"];
m33_71 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="78-78"];
m33_58 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenContextIsNull()", file="WorkerFacts.cs", label="Assert.Equal(''context'', exception.ParamName)", span="71-71"];
m33_53 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<IState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="56-60"];
m33_134 [cluster="Unk.Requeue", file="WorkerFacts.cs", label="Entry Unk.Requeue", span=""];
m33_175 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="200-200"];
m33_176 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<CancellationToken>()))\r\n                .Returns(false)", span="203-209"];
m33_177 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="211-211"];
m33_179 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="_process.Verify(\r\n                x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()),\r\n                Times.Never)", span="217-219"];
m33_180 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotRun_PerformanceProcess_IfTransitionToProcessingStateFailed()", span="200-200"];
m33_187 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="223-223"];
m33_188 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="225-225"];
m33_190 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="_process.Verify(x => x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>()))", span="229-231"];
m33_191 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_Runs_PerformanceProcess()", span="223-223"];
m33_221 [cluster="Unk.DoesNotThrow", file="WorkerFacts.cs", label="Entry Unk.DoesNotThrow", span=""];
m33_149 [cluster="Unk.Run", file="WorkerFacts.cs", label="Entry Unk.Run", span=""];
m33_78 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="87-87"];
m33_252 [cluster="System.InvalidOperationException.InvalidOperationException()", file="WorkerFacts.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m33_76 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="87-87"];
m33_74 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs", label="Assert.Equal(''process'', exception.ParamName)", span="89-89"];
m33_115 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="127-127"];
m33_116 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .Throws<InvalidOperationException>()", span="129-131"];
m33_117 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="133-133"];
m33_119 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue(), Times.Never)", span="138-138"];
m33_120 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="139-139"];
m33_121 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RequeuesAJob_WhenThereWasAnException()", span="127-127"];
m33_214 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="254-254"];
m33_215 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<JobAbortedException>()", span="257-258"];
m33_216 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="260-260"];
m33_218 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="265-265"];
m33_219 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue(), Times.Never)", span="266-266"];
m33_220 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_RemovesJobFromQueue_WhenProcessThrowsJobAbortedException()", span="254-254"];
m33_92 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="HangFire.Web.Pages.FailedJobsPage", span=""];
m33_296 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.CreateWorker()", span="347-347"];
m33_264 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="306-306"];
m33_265 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var exception = new InvalidOperationException()", span="309-309"];
m33_266 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="_process\r\n                .Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws(new JobPerformanceException(''hello'', exception))", span="310-312"];
m33_269 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="320-324"];
m33_267 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="314-314"];
m33_270 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasUserException()", span="306-306"];
m33_142 [cluster="Unk.InSequence", file="WorkerFacts.cs", label="Entry Unk.InSequence", span=""];
m33_101 [cluster="Unk.Dispose", file="WorkerFacts.cs", label="Entry Unk.Dispose", span=""];
m33_253 [cluster="Unk.Throws", file="WorkerFacts.cs", label="Entry Unk.Throws", span=""];
m33_86 [cluster="HangFire.Web.HtmlHelper.JobId(string, bool)", file="WorkerFacts.cs", label="Entry HangFire.Web.HtmlHelper.JobId(string, bool)", span="45-45"];
m33_87 [cluster="HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", file="WorkerFacts.cs", label="Entry HangFire.Common.JobHelper.ToStringTimestamp(System.DateTime)", span="50-50"];
m33_91 [cluster="HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", file="WorkerFacts.cs", label="Entry HangFire.Web.Pages.Paginator.Paginator(HangFire.Web.Pager)", span="6-6"];
m33_281 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="328-328"];
m33_282 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="_connection.Setup(x => x.GetJobData(JobId))\r\n                .Returns(new JobData { LoadException = new JobLoadException(''asd'', new Exception()) })", span="331-332"];
m33_283 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="334-334"];
m33_285 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="_stateMachine.Verify(x => x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>()))", span="340-344"];
m33_286 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_MovesJob_ToFailedState_IfThereWasJobLoadException()", span="328-328"];
m33_83 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="96-96"];
m33_114 [cluster="Unk.RemoveFromQueue", file="WorkerFacts.cs", label="Entry Unk.RemoveFromQueue", span=""];
m33_292 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="340-344"];
m33_85 [cluster="Unk.Write", file="WorkerFacts.cs", label="Entry Unk.Write", span=""];
m33_95 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="108-108"];
m33_98 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="109-109"];
m33_97 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="108-108"];
m33_99 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Dispose()", span="109-109"];
m33_100 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="109-109"];
m33_108 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="120-120"];
m33_111 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="123-123"];
m33_110 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="120-120"];
m33_112 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="123-123"];
m33_113 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="123-123"];
m33_122 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="130-130"];
m33_125 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="136-136"];
m33_128 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="138-138"];
m33_131 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="139-139"];
m33_123 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<IState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="130-130"];
m33_124 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="130-130"];
m33_127 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="136-136"];
m33_129 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="138-138"];
m33_130 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="138-138"];
m33_132 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="139-139"];
m33_133 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="139-139"];
m33_143 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="147-148"];
m33_146 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="152-152"];
m33_150 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="156-157"];
m33_144 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="147-148"];
m33_145 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="147-148"];
m33_147 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="152-152"];
m33_148 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="152-152"];
m33_151 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="156-157"];
m33_152 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="156-157"];
m33_158 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="176-180"];
m33_160 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="176-180"];
m33_161 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="178-178"];
m33_163 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="178-178"];
m33_169 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="190-196"];
m33_170 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<ProcessingState>(),\r\n                It.Is<string[]>(\r\n                    states => states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>())", span="190-196"];
m33_171 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="190-196"];
m33_172 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="194-195"];
m33_173 [cluster="lambda expression", file="WorkerFacts.cs", label="states.Length == 2 &&\r\n                        states[0] == EnqueuedState.StateName && states[1] == ProcessingState.StateName", span="194-195"];
m33_174 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="194-195"];
m33_181 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="204-208"];
m33_184 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="218-218"];
m33_182 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                    It.IsAny<string>(),\r\n                    It.IsAny<ProcessingState>(),\r\n                    It.IsAny<string[]>(),\r\n                    It.IsAny<CancellationToken>())", span="204-208"];
m33_183 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="204-208"];
m33_185 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="218-218"];
m33_186 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="218-218"];
m33_192 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="229-231"];
m33_193 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(\r\n                It.IsNotNull<PerformContext>(),\r\n                It.IsNotNull<IJobPerformer>())", span="229-231"];
m33_194 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="229-231"];
m33_202 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="238-238"];
m33_205 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="244-244"];
m33_208 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="248-248"];
m33_211 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="250-250"];
m33_203 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="238-238"];
m33_204 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="238-238"];
m33_207 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="244-244"];
m33_209 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>())", span="248-248"];
m33_210 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="248-248"];
m33_212 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="250-250"];
m33_213 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="250-250"];
m33_222 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="257-257"];
m33_225 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="263-263"];
m33_228 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="265-265"];
m33_231 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="266-266"];
m33_223 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="257-257"];
m33_224 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="257-257"];
m33_227 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="263-263"];
m33_229 [cluster="lambda expression", file="WorkerFacts.cs", label="x.RemoveFromQueue()", span="265-265"];
m33_230 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="265-265"];
m33_232 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Requeue()", span="266-266"];
m33_233 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="266-266"];
m33_239 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="276-280"];
m33_240 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                It.IsAny<string>(),\r\n                It.IsAny<SucceededState>(),\r\n                It.Is<string[]>(states => states.Length == 1 && states[0] == ProcessingState.StateName),\r\n                It.IsAny<CancellationToken>())", span="276-280"];
m33_241 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="276-280"];
m33_242 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="279-279"];
m33_243 [cluster="lambda expression", file="WorkerFacts.cs", label="states.Length == 1 && states[0] == ProcessingState.StateName", span="279-279"];
m33_244 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="279-279"];
m33_258 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason.Contains(''Internal'')),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="298-302"];
m33_261 [cluster="lambda expression", file="WorkerFacts.cs", label="state.Exception == exception && state.Reason.Contains(''Internal'')", span="300-300"];
m33_254 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="289-289"];
m33_257 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="298-302"];
m33_255 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="289-289"];
m33_256 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="289-289"];
m33_259 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="298-302"];
m33_260 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="300-300"];
m33_262 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="300-300"];
m33_276 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.Is<FailedState>(state => state.Exception == exception && state.Reason == ''hello''),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="320-324"];
m33_279 [cluster="lambda expression", file="WorkerFacts.cs", label="state.Exception == exception && state.Reason == ''hello''", span="322-322"];
m33_272 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="311-311"];
m33_275 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="320-324"];
m33_273 [cluster="lambda expression", file="WorkerFacts.cs", label="x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>())", span="311-311"];
m33_274 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="311-311"];
m33_277 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="320-324"];
m33_278 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="322-322"];
m33_280 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="322-322"];
m33_289 [cluster="lambda expression", file="WorkerFacts.cs", label="Entry lambda expression", span="331-331"];
m33_290 [cluster="lambda expression", file="WorkerFacts.cs", label="x.GetJobData(JobId)", span="331-331"];
m33_291 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="331-331"];
m33_293 [cluster="lambda expression", file="WorkerFacts.cs", label="x.ChangeState(\r\n                JobId,\r\n                It.IsAny<FailedState>(),\r\n                It.IsAny<string[]>(),\r\n                It.IsAny<CancellationToken>())", span="340-344"];
m33_294 [cluster="lambda expression", file="WorkerFacts.cs", label="Exit lambda expression", span="340-344"];
m33_153 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="170-170"];
m33_154 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="172-172"];
m33_157 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_SetsCurrentServer_ToProcessingState()", span="170-170"];
m33_263 [cluster="Unk.Contains", file="WorkerFacts.cs", label="Entry Unk.Contains", span=""];
m33_94 [cluster="Unk.Verify", file="WorkerFacts.cs", label="Entry Unk.Verify", span=""];
m33_135 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="143-143"];
m33_136 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<ProcessingState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .InSequence()\r\n                .Returns(true)", span="146-150"];
m33_137 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .InSequence()", span="152-153"];
m33_138 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="_stateMachine\r\n                .Setup(x => x.ChangeState(\r\n                    JobId, It.IsAny<SucceededState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()))\r\n                .InSequence()\r\n                .Returns(true)", span="155-159"];
m33_139 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="161-161"];
m33_141 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_ExecutesDefaultWorkflow_WhenJobIsCorrect()", span="143-143"];
m33_102 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="113-113"];
m33_103 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="115-115"];
m33_106 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.RemoveFromQueue())", span="123-123"];
m33_107 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_FetchesAJobAndRemovesItFromQueue()", span="113-113"];
m33_287 [cluster="Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", file="WorkerFacts.cs", label="Entry Hangfire.Common.JobLoadException.JobLoadException(string, System.Exception)", span="32-32"];
m33_271 [cluster="Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", file="WorkerFacts.cs", label="Entry Hangfire.Server.JobPerformanceException.JobPerformanceException(string, System.Exception)", span="22-22"];
m33_93 [cluster="Unk.Execute", file="WorkerFacts.cs", label="Entry Unk.Execute", span=""];
m33_195 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Entry Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="235-235"];
m33_196 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="_process.Setup(x => x.Run(It.IsAny<PerformContext>(), It.IsAny<IJobPerformer>()))\r\n                .Throws<OperationCanceledException>()", span="238-239"];
m33_197 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="var worker = CreateWorker()", span="241-241"];
m33_199 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="_stateMachine.Verify(\r\n                x => x.ChangeState(It.IsAny<string>(), It.IsAny<FailedState>(), It.IsAny<string[]>(), It.IsAny<CancellationToken>()),\r\n                Times.Never)", span="247-249"];
m33_200 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="_fetchedJob.Verify(x => x.Requeue())", span="250-250"];
m33_201 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Execute_DoesNotMoveAJob_ToTheFailedState_ButRequeuesIt_WhenProcessThrowsOperationCanceled()", span="235-235"];
m33_75 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Ctor_ThrowsAnException_WhenProcessIsNull()", span="84-84"];
m33_297 [cluster="Hangfire.Core.Tests.Server.WorkerFacts.Method()", file="WorkerFacts.cs", label="Exit Hangfire.Core.Tests.Server.WorkerFacts.Method()", span="352-352"];
m33_298 [file="WorkerFacts.cs", label="Hangfire.Core.Tests.Server.WorkerFacts", span=""];
m33_299 [file="WorkerFacts.cs", label=worker, span=""];
m33_300 [file="WorkerFacts.cs", label=worker, span=""];
m33_301 [file="WorkerFacts.cs", label=worker, span=""];
m33_302 [file="WorkerFacts.cs", label=exception, span=""];
m33_303 [file="WorkerFacts.cs", label=exception, span=""];
n64 -> n13  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
n64 -> n22  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
n64 -> n46  [color=darkseagreen4, key=1, label="HangFire.Server.RecurringJobScheduler", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label="HangFire.IBackgroundJobClient", style=dashed];
n0 -> n5  [color=darkseagreen4, key=1, label="HangFire.Server.IDateTimeProvider", style=dashed];
n12 -> n14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n14 -> n14  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n16 -> n22  [color=darkseagreen4, key=1, label=connection, style=dashed];
n15 -> n15  [color=darkseagreen4, key=1, label="System.Threading.CancellationToken", style=dashed];
n20 -> n22  [color=darkseagreen4, key=1, label=recurringJob, style=dashed];
n19 -> n22  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
n19 -> n24  [color=darkseagreen4, key=1, label=recurringJobId, style=dashed];
n34 -> n41  [color=darkseagreen4, key=1, label="System.Collections.Generic.Dictionary<string, string>", style=dashed];
n34 -> n46  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
n34 -> n48  [color=darkseagreen4, key=1, label="HangFire.Storage.IStorageConnection", style=dashed];
n39 -> n46  [color=darkseagreen4, key=1, label=cronSchedule, style=dashed];
n40 -> n43  [color=darkseagreen4, key=1, label=currentTime, style=dashed];
n40 -> n46  [color=darkseagreen4, key=1, label=currentTime, style=dashed];
d59 -> d9  [color=green, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d59 -> d13  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d59 -> d17  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d59 -> d21  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d59 -> d34  [color=darkseagreen4, key=1, label="HangFire.SqlServer.SqlServerConnection", style=dashed];
d27 -> d35  [color=darkseagreen4, key=1, label=jobId, style=dashed];
d25 -> d28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
d25 -> d31  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
d29 -> d34  [color=darkseagreen4, key=1, label=parameterArray, style=dashed];
m0_87 -> m0_92  [color=green, key=1, label="lambda expression", style=dashed];
m0_88 -> m0_96  [color=green, key=1, label=wrapper, style=dashed];
m0_89 -> m0_95  [color=green, key=1, label="lambda expression", style=dashed];
m0_90 -> m0_98  [color=green, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_30  [color=green, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_3 -> m0_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_3 -> m0_8  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m0_27 -> m0_13  [color=darkseagreen4, key=1, label="HangFire.Server.Performing.PerformContext", style=dashed];
m0_54 -> m0_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_56 -> m0_64  [color=green, key=1, label=wrapper, style=dashed];
m0_57 -> m0_63  [color=green, key=1, label="lambda expression", style=dashed];
m0_58 -> m0_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_33  [color=green, key=1, label="lambda expression", style=dashed];
m0_37 -> m0_44  [color=green, key=1, label="lambda expression", style=dashed];
m0_38 -> m0_48  [color=green, key=1, label=wrapper, style=dashed];
m0_39 -> m0_47  [color=green, key=1, label="lambda expression", style=dashed];
m0_40 -> m0_50  [color=green, key=1, label="lambda expression", style=dashed];
m0_71 -> m0_77  [color=green, key=1, label="lambda expression", style=dashed];
m0_70 -> m0_73  [color=green, key=1, label=wrapper, style=dashed];
m0_70 -> m0_81  [color=green, key=1, label=wrapper, style=dashed];
m0_73 -> m0_80  [color=green, key=1, label="lambda expression", style=dashed];
m0_74 -> m0_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_113 -> m0_19  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_25  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_26  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_31  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_34  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_37  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_39  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_48  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_40  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_57  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_64  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_71  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_73  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_81  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_87  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_89  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_96  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_90  [color=green, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_58  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_72  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_113 -> m0_74  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.AutomaticRetryServerComponentWrapperFacts", style=dashed];
m0_114 -> m0_48  [color=green, key=1, label=wrapper, style=dashed];
m0_115 -> m0_64  [color=green, key=1, label=wrapper, style=dashed];
m0_116 -> m0_81  [color=green, key=1, label=wrapper, style=dashed];
m0_117 -> m0_96  [color=green, key=1, label=wrapper, style=dashed];
m1_50 -> m1_55  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_50 -> m1_58  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_50 -> m1_67  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_50 -> m1_72  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_50 -> m1_73  [color=darkseagreen4, key=1, label="HangFire.Server.JobPayload", style=dashed];
m1_66 -> m1_69  [color=darkseagreen4, key=1, label=exception, style=dashed];
m1_86 -> m1_7  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_17  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_21  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_23  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_27  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_28  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_30  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_31  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_38  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_39  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_40  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_41  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_42  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_46  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_55  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_58  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_64  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_67  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_72  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m1_86 -> m1_73  [color=darkseagreen4, key=1, label="HangFire.Server.Worker", style=dashed];
m3_54 -> m3_57  [color=darkseagreen4, key=1, label=worker, style=dashed];
m3_12 -> m3_14  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m3_12 -> m3_15  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m3_12 -> m3_16  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m3_12 -> m3_17  [color=darkseagreen4, key=1, label="Hangfire.Logging.ILog", style=dashed];
m3_15 -> m3_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label=IRedisClientsManager, style=dashed];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_4 -> m3_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_7 -> m3_7  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_25 -> m3_3  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m3_25 -> m3_5  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m3_25 -> m3_6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m3_25 -> m3_14  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m3_25 -> m3_15  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m3_25 -> m3_16  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m3_25 -> m3_17  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServerOptions", style=dashed];
m3_67 -> m3_3  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_6  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_8  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_11  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_25  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_26  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_32  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_33  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_34  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_35  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_37  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_38  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_39  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_40  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_48  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m3_67 -> m3_60  [color=darkseagreen4, key=1, label="HangFire.Server.JobManager", style=dashed];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m6_192 -> m6_194  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_208 -> m6_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_243 -> m6_247  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_250 -> m6_267  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_251 -> m6_256  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m6_252 -> m6_258  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_252 -> m6_260  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_245 -> m6_249  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_244 -> m6_254  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_244 -> m6_247  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_244 -> m6_258  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_253 -> m6_256  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_253 -> m6_258  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_253 -> m6_259  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_249 -> m6_249  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_259 -> m6_259  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_92 -> m6_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_272 -> m6_275  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_272 -> m6_276  [color=darkseagreen4, key=1, label=endDate, style=dashed];
m6_279 -> m6_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_280 -> m6_285  [color=darkseagreen4, key=1, label=valuesMap, style=dashed];
m6_281 -> m6_287  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_281 -> m6_289  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_278 -> m6_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_278 -> m6_283  [color=darkseagreen4, key=1, label=stringDates, style=dashed];
m6_273 -> m6_275  [color=darkseagreen4, key=1, label=startDate, style=dashed];
m6_282 -> m6_285  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_282 -> m6_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_282 -> m6_288  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_274 -> m6_276  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_274 -> m6_287  [color=darkseagreen4, key=1, label=dates, style=dashed];
m6_288 -> m6_288  [color=darkseagreen4, key=1, label=i, style=dashed];
m6_348 -> m6_356  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_349 -> m6_359  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_347 -> m6_360  [color=darkseagreen4, key=1, label=stats, style=dashed];
m6_350 -> m6_363  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_350 -> m6_367  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_351 -> m6_370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_351 -> m6_373  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_352 -> m6_376  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_352 -> m6_379  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_353 -> m6_382  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_353 -> m6_385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_354 -> m6_388  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_354 -> m6_392  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_355 -> m6_396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_355 -> m6_399  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_358 -> m6_402  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_358 -> m6_405  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_357 -> m6_403  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m6_213 -> m6_219  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_213 -> m6_220  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_213 -> m6_221  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_213 -> m6_222  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_223 -> m6_233  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_223 -> m6_237  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_223 -> m6_240  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_216 -> m6_234  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m6_41 -> m6_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, HangFire.Storage.Monitoring.ProcessingJobDto>", style=dashed];
m6_335 -> m6_340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_327 -> m6_329  [color=darkseagreen4, key=1, label="?", style=dashed];
m6_319 -> m6_321  [color=darkseagreen4, key=1, label="?", style=dashed];
m6_132 -> m6_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_97 -> m6_103  [color=darkseagreen4, key=1, label=serverNames, style=dashed];
m6_102 -> m6_105  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_102 -> m6_106  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_102 -> m6_107  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_108 -> m6_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_101 -> m6_106  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_101 -> m6_122  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_105 -> m6_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_105 -> m6_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_106 -> m6_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_106 -> m6_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_100 -> m6_105  [color=darkseagreen4, key=1, label=servers, style=dashed];
m6_100 -> m6_115  [color=darkseagreen4, key=1, label=servers, style=dashed];
m6_104 -> m6_106  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_104 -> m6_112  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_104 -> m6_115  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_104 -> m6_118  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_104 -> m6_122  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_141 -> m6_144  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_27 -> m6_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_27 -> m6_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_165 -> m6_325  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_165 -> m6_304  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m6_165 -> m6_307  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_165 -> m6_308  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_165 -> m6_335  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m6_305 -> m6_325  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_305 -> m6_315  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_305 -> m6_320  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_305 -> m6_321  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_305 -> m6_308  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_305 -> m6_328  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_305 -> m6_329  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_302 -> m6_315  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_302 -> m6_306  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_303 -> m6_306  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_303 -> m6_308  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_303 -> m6_309  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_300 -> m6_306  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_300 -> m6_320  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_300 -> m6_321  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_301 -> m6_308  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_301 -> m6_328  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_301 -> m6_329  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_308 -> m6_324  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_308 -> m6_327  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_310 -> m6_331  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_310 -> m6_334  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_306 -> m6_314  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_306 -> m6_319  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_149 -> m6_151  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_155 -> m6_159  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_160 -> m6_186  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_150 -> m6_162  [color=darkseagreen4, key=1, label=result, style=dashed];
m6_151 -> m6_175  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_151 -> m6_181  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_151 -> m6_169  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_156 -> m6_168  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_156 -> m6_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_157 -> m6_174  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_157 -> m6_177  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_158 -> m6_180  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_158 -> m6_183  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_44 -> m6_50  [color=darkseagreen4, key=1, label=scheduledJobs, style=dashed];
m6_49 -> m6_52  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_49 -> m6_53  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_49 -> m6_54  [color=darkseagreen4, key=1, label=pipeline, style=dashed];
m6_55 -> m6_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_48 -> m6_53  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_48 -> m6_80  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_52 -> m6_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_52 -> m6_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_53 -> m6_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_53 -> m6_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_47 -> m6_52  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_47 -> m6_72  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_51 -> m6_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_51 -> m6_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_51 -> m6_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_51 -> m6_76  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_51 -> m6_80  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_199 -> m6_201  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_414 -> m6_4  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_414 -> m6_8  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_414 -> m6_12  [color=green, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_414 -> m6_17  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_414 -> m6_20  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_414 -> m6_23  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_414 -> m6_90  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_414 -> m6_94  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_414 -> m6_206  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_414 -> m6_210  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_414 -> m6_344  [color=darkseagreen4, key=1, label="HangFire.Redis.RedisMonitoringApi", style=dashed];
m6_426 -> m6_325  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_426 -> m6_315  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_426 -> m6_320  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_426 -> m6_321  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_426 -> m6_328  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_426 -> m6_329  [color=darkseagreen4, key=1, label=id, style=dashed];
m6_428 -> m6_325  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_425 -> m6_315  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m6_421 -> m6_175  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_421 -> m6_181  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_421 -> m6_169  [color=darkseagreen4, key=1, label=queue, style=dashed];
m6_432 -> m6_403  [color=darkseagreen4, key=1, label=queueName, style=dashed];
m6_415 -> m6_80  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_415 -> m6_67  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_415 -> m6_76  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_415 -> m6_72  [color=darkseagreen4, key=1, label=job, style=dashed];
m6_417 -> m6_80  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_416 -> m6_72  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_424 -> m6_296  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_418 -> m6_122  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_418 -> m6_118  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_418 -> m6_112  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_418 -> m6_115  [color=darkseagreen4, key=1, label=name, style=dashed];
m6_420 -> m6_122  [color=darkseagreen4, key=1, label=queues, style=dashed];
m6_419 -> m6_115  [color=darkseagreen4, key=1, label=servers, style=dashed];
m6_430 -> m6_335  [color=darkseagreen4, key=1, label="System.Func<HangFire.Common.JobMethod, System.Collections.Generic.List<string>, System.Collections.Generic.List<string>, T>", style=dashed];
m6_423 -> m6_268  [color=darkseagreen4, key=1, label=string, style=dashed];
m6_422 -> m6_234  [color=darkseagreen4, key=1, label=hiddenProperties, style=dashed];
m6_427 -> m6_320  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_427 -> m6_321  [color=darkseagreen4, key=1, label=jobs, style=dashed];
m6_429 -> m6_328  [color=darkseagreen4, key=1, label=states, style=dashed];
m6_429 -> m6_329  [color=darkseagreen4, key=1, label=states, style=dashed];
m8_6 -> m8_14  [color=darkseagreen4, key=1, label=factory, style=dashed];
m8_18 -> m8_23  [color=darkseagreen4, key=1, label=factory, style=dashed];
m8_19 -> m8_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_7 -> m8_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_7 -> m8_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_37 -> m8_39  [color=darkseagreen4, key=1, label=string, style=dashed];
m8_37 -> m8_14  [color=darkseagreen4, key=1, label=factory, style=dashed];
m8_38 -> m8_23  [color=darkseagreen4, key=1, label=factory, style=dashed];
m8_36 -> m8_7  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", style=dashed];
m8_36 -> m8_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", style=dashed];
m8_36 -> m8_23  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ScheduleInstantFactoryFacts", style=dashed];
m8_27 -> m8_29  [color=green, key=1, label=instant, style=dashed];
m8_42 -> m8_5  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m8_42 -> m8_21  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m8_42 -> m8_25  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m8_42 -> m8_35  [color=darkseagreen4, key=1, label="HangFire.Tests.ServerWatchdogSteps", style=dashed];
m9_15 -> m9_17  [color=green, key=1, label=state, style=dashed];
m9_15 -> m9_20  [color=green, key=1, label=state, style=dashed];
m9_16 -> m9_18  [color=green, key=1, label=serializedData, style=dashed];
m9_16 -> m9_19  [color=green, key=1, label=serializedData, style=dashed];
m9_16 -> m9_20  [color=green, key=1, label=serializedData, style=dashed];
m9_1 -> m9_4  [color=green, key=1, label="lambda expression", style=dashed];
m11_12 -> m11_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m11_12 -> m11_16  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m11_12 -> m11_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_16 -> m11_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_25 -> m11_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_26 -> m11_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<Hangfire.Dashboard.IAuthorizationFilter>", style=dashed];
m11_27 -> m11_22  [color=darkseagreen4, key=1, label="Hangfire.JobStorage", style=dashed];
m13_2 -> m13_6  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m13_30 -> m13_6  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m13_30 -> m13_10  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m13_30 -> m13_12  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m13_30 -> m13_13  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m13_30 -> m13_20  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m13_30 -> m13_21  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m13_30 -> m13_28  [color=darkseagreen4, key=1, label="HangFire.BackgroundJobServer", style=dashed];
m14_7 -> m14_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_0 -> m14_6  [color=green, key=1, label=string, style=dashed];
m14_0 -> m14_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_8 -> m15_10  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m15_8 -> m15_11  [color=darkseagreen4, key=1, label="Hangfire.Server.BackgroundProcessContext", style=dashed];
m15_19 -> m15_11  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopProcess", style=dashed];
m15_19 -> m15_16  [color=darkseagreen4, key=1, label="Hangfire.Server.InfiniteLoopProcess", style=dashed];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IBootstrapperConfiguration>", style=dashed];
m17_0 -> m17_6  [color=darkseagreen4, key=1, label="System.Action<Hangfire.IBootstrapperConfiguration>", style=dashed];
m17_0 -> m17_14  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m17_0 -> m17_15  [color=darkseagreen4, key=1, label=IAppBuilder, style=dashed];
m17_5 -> m17_7  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m17_5 -> m17_9  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m17_5 -> m17_11  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m17_5 -> m17_13  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m17_5 -> m17_15  [color=darkseagreen4, key=1, label=configuration, style=dashed];
m18_17 -> m18_158  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m18_17 -> m18_159  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobStateHandler", style=dashed];
m18_154 -> m18_158  [color=darkseagreen4, key=1, label=time, style=dashed];
m18_154 -> m18_162  [color=darkseagreen4, key=1, label=time, style=dashed];
m18_108 -> m18_114  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m18_108 -> m18_110  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m18_108 -> m18_122  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m18_108 -> m18_111  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m18_108 -> m18_129  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m18_109 -> m18_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_110 -> m18_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_111 -> m18_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_129 -> m18_139  [color=darkseagreen4, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m18_129 -> m18_140  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m18_129 -> m18_142  [color=darkseagreen4, key=1, label="HangFire.Storage.IWriteOnlyTransaction", style=dashed];
m18_135 -> m18_139  [color=darkseagreen4, key=1, label=properties, style=dashed];
m18_135 -> m18_140  [color=darkseagreen4, key=1, label=properties, style=dashed];
m18_135 -> m18_141  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_135 -> m18_142  [color=darkseagreen4, key=1, label=properties, style=dashed];
m18_136 -> m18_141  [color=darkseagreen4, key=1, label=now, style=dashed];
m18_139 -> m18_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_35 -> m18_38  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m18_54 -> m18_100  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m18_54 -> m18_98  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m18_54 -> m18_99  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m18_14 -> m18_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_164 -> m18_34  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_110  [color=green, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_38  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_39  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_68  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_76  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_79  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_80  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_83  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_100  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_104  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_106  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_111  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_115  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_117  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_119  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_132  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_149  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_158  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_164 -> m18_159  [color=darkseagreen4, key=1, label="HangFire.States.StateMachine", style=dashed];
m18_165 -> m18_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_165 -> m18_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m18_7 -> m18_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_13 -> m18_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_26 -> m18_33  [color=green, key=1, label="HangFire.Common.JobMethod", style=dashed];
m18_26 -> m18_34  [color=green, key=1, label="string[]", style=dashed];
m18_26 -> m18_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, string>", style=dashed];
m18_26 -> m18_31  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m18_26 -> m18_36  [color=darkseagreen4, key=1, label="HangFire.Common.JobMethod", style=dashed];
m18_34 -> m18_36  [color=green, key=1, label=jobId, style=dashed];
m18_34 -> m18_42  [color=green, key=1, label=jobId, style=dashed];
m18_34 -> m18_44  [color=green, key=1, label=jobId, style=dashed];
m18_36 -> m18_40  [color=darkseagreen4, key=1, label=context, style=dashed];
m18_39 -> m18_42  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m18_39 -> m18_43  [color=darkseagreen4, key=1, label=transaction, style=dashed];
m18_57 -> m18_110  [color=green, key=1, label=string, style=dashed];
m18_57 -> m18_113  [color=green, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m18_57 -> m18_114  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m18_57 -> m18_116  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m18_57 -> m18_120  [color=green, key=1, label="System.Collections.Generic.IEnumerable<HangFire.Common.States.IStateChangedFilter>", style=dashed];
m18_57 -> m18_121  [color=green, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m18_57 -> m18_111  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_57 -> m18_112  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m18_57 -> m18_115  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m18_57 -> m18_117  [color=darkseagreen4, key=1, label="HangFire.Common.States.JobState", style=dashed];
m18_57 -> m18_118  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m18_57 -> m18_119  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateApplyingContext", style=dashed];
m18_114 -> m18_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_122 -> m18_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_131 -> m18_133  [color=green, key=1, label=transaction, style=dashed];
m18_148 -> m18_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_19 -> m18_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m18_116 -> m18_118  [color=green, key=1, label=stateData, style=dashed];
m18_63 -> m18_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m18_63 -> m18_73  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m18_76 -> m18_79  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m18_76 -> m18_80  [color=darkseagreen4, key=1, label=filterInfo, style=dashed];
m18_218 -> m18_4  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_6  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_11  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_14  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_95  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_109  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_110  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_122  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_125  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_111  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_129  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_132  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_135  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_139  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_148  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_151  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_158  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_165  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_177  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_218 -> m18_198  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.RecurringJobSchedulerFacts", style=dashed];
m18_219 -> m18_114  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m18_219 -> m18_122  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m18_219 -> m18_129  [color=darkseagreen4, key=1, label=jobKey, style=dashed];
m18_220 -> m18_162  [color=darkseagreen4, key=1, label=time, style=dashed];
m21_3 -> m21_5  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m21_3 -> m21_8  [color=darkseagreen4, key=1, label="HangFire.Common.States.StateChangingContext", style=dashed];
m21_4 -> m21_6  [color=green, key=1, label=transaction, style=dashed];
m21_4 -> m21_9  [color=green, key=1, label=transaction, style=dashed];
m21_4 -> m21_10  [color=green, key=1, label=transaction, style=dashed];
m23_9 -> m23_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m23_7 -> m23_11  [color=darkseagreen4, key=1, label="HangFire.Filters.CreatingContext", style=dashed];
m23_25 -> m23_2  [color=green, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m23_25 -> m23_4  [color=green, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m23_25 -> m23_9  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m23_25 -> m23_10  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m23_25 -> m23_12  [color=darkseagreen4, key=1, label="HangFire.Tests.TestClientFilter", style=dashed];
m23_0 -> m23_2  [color=green, key=1, label="System.Collections.Generic.ICollection<string>", style=dashed];
m23_0 -> m23_4  [color=green, key=1, label=bool, style=dashed];
m25_4 -> m25_6  [color=darkseagreen4, key=1, label=queues, style=dashed];
m25_4 -> m25_9  [color=darkseagreen4, key=1, label=queues, style=dashed];
m25_9 -> m25_11  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_9 -> m25_13  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_9 -> m25_15  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_9 -> m25_17  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_9 -> m25_19  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_9 -> m25_21  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_9 -> m25_25  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_9 -> m25_28  [color=darkseagreen4, key=1, label=queue, style=dashed];
m25_28 -> m25_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_30 -> m25_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_30 -> m25_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_32 -> m25_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_32 -> m25_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_34 -> m25_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_34 -> m25_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_36 -> m25_36  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_36 -> m25_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_39 -> m25_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_39 -> m25_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_41 -> m25_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_41 -> m25_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_43 -> m25_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_43 -> m25_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_45 -> m25_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_45 -> m25_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_47 -> m25_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_47 -> m25_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_49 -> m25_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_49 -> m25_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_51 -> m25_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m25_71 -> m25_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_7  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_8  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_10  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_19  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_53  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m25_71 -> m25_57  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.QueuesPage", style=dashed];
m26_7 -> m26_10  [color=darkseagreen4, key=1, label=pager, style=dashed];
m26_7 -> m26_17  [color=darkseagreen4, key=1, label=pager, style=dashed];
m26_7 -> m26_51  [color=darkseagreen4, key=1, label=pager, style=dashed];
m26_8 -> m26_19  [color=darkseagreen4, key=1, label=processingJobs, style=dashed];
m26_19 -> m26_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_21 -> m26_21  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_21 -> m26_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_23 -> m26_23  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_23 -> m26_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_25 -> m26_25  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_25 -> m26_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_25 -> m26_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_27 -> m26_27  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_27 -> m26_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_30 -> m26_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_30 -> m26_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_32 -> m26_32  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_32 -> m26_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_34 -> m26_34  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_34 -> m26_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_37 -> m26_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_37 -> m26_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_39 -> m26_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_39 -> m26_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_41 -> m26_41  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_41 -> m26_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_43 -> m26_43  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_43 -> m26_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_45 -> m26_45  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_45 -> m26_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_47 -> m26_47  [color=darkseagreen4, key=1, label=job, style=dashed];
m26_70 -> m26_1  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_4  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_5  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_9  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_11  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_14  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_18  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_20  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_26  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_28  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_29  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_36  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_38  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_39  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_41  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_42  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m26_70 -> m26_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.ProcessingJobsPage", style=dashed];
m27_76 -> m27_80  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_77 -> m27_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_38 -> m27_41  [color=green, key=1, label="lambda expression", style=dashed];
m27_84 -> m27_88  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_85 -> m27_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_56 -> m27_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_57 -> m27_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_31 -> m27_34  [color=green, key=1, label="lambda expression", style=dashed];
m27_20 -> m27_25  [color=green, key=1, label="lambda expression", style=dashed];
m27_64 -> m27_68  [color=green, key=1, label="lambda expression", style=dashed];
m27_65 -> m27_72  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_66 -> m27_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_3 -> m27_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_92 -> m27_96  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_93 -> m27_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m27_100 -> m27_26  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m27_100 -> m27_35  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m27_100 -> m27_42  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m27_100 -> m27_46  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m27_100 -> m27_64  [color=green, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m27_100 -> m27_1  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m27_100 -> m27_3  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m27_100 -> m27_98  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerJobCancellationTokenFacts", style=dashed];
m27_102 -> m27_72  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_101 -> m27_60  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_103 -> m27_80  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_104 -> m27_88  [color=darkseagreen4, key=1, label=token, style=dashed];
m27_105 -> m27_96  [color=darkseagreen4, key=1, label=token, style=dashed];
m28_0 -> m28_2  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m28_0 -> m28_6  [color=darkseagreen4, key=1, label="Hangfire.BackgroundJobServer", style=dashed];
m28_4 -> m28_6  [color=darkseagreen4, key=1, label=token, style=dashed];
m29_51 -> m29_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_54 -> m29_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m29_65 -> m29_51  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m29_65 -> m29_54  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m29_65 -> m29_61  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.ServerWatchdogFacts", style=dashed];
m30_239 -> m30_243  [color=darkseagreen4, key=1, label=Table, style=dashed];
m30_239 -> m30_244  [color=darkseagreen4, key=1, label=Table, style=dashed];
m30_241 -> m30_244  [color=darkseagreen4, key=1, label=history, style=dashed];
m30_242 -> m30_244  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_242 -> m30_245  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_245 -> m30_245  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_155 -> m30_157  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m30_90 -> m30_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_165 -> m30_167  [color=darkseagreen4, key=1, label=timestamp, style=dashed];
m30_64 -> m30_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_215 -> m30_218  [color=darkseagreen4, key=1, label=history, style=dashed];
m30_215 -> m30_219  [color=darkseagreen4, key=1, label=history, style=dashed];
m30_218 -> m30_218  [color=darkseagreen4, key=1, label=property, style=dashed];
m30_219 -> m30_219  [color=darkseagreen4, key=1, label=property, style=dashed];
m30_123 -> m30_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_196 -> m30_199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_223 -> m30_225  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m30_223 -> m30_226  [color=darkseagreen4, key=1, label=stateEntry, style=dashed];
m30_225 -> m30_225  [color=darkseagreen4, key=1, label=property, style=dashed];
m30_226 -> m30_226  [color=darkseagreen4, key=1, label=property, style=dashed];
m30_229 -> m30_232  [color=darkseagreen4, key=1, label=Table, style=dashed];
m30_229 -> m30_233  [color=darkseagreen4, key=1, label=Table, style=dashed];
m30_231 -> m30_233  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_231 -> m30_234  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_234 -> m30_234  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_103 -> m30_105  [color=darkseagreen4, key=1, label="?", style=dashed];
m30_125 -> m30_127  [color=darkseagreen4, key=1, label="?", style=dashed];
m30_200 -> m30_203  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_42 -> m30_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_44 -> m30_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_44 -> m30_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_45 -> m30_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_207 -> m30_209  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_176 -> m30_178  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_23 -> m30_25  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_23 -> m30_27  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_24 -> m30_26  [color=darkseagreen4, key=1, label=mock, style=dashed];
m30_24 -> m30_27  [color=darkseagreen4, key=1, label=mock, style=dashed];
m30_25 -> m30_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_26 -> m30_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_181 -> m30_183  [color=darkseagreen4, key=1, label=Table, style=dashed];
m30_100 -> m30_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m30_186 -> m30_191  [color=darkseagreen4, key=1, label=Table, style=dashed];
m30_189 -> m30_191  [color=darkseagreen4, key=1, label=history, style=dashed];
m30_85 -> m30_87  [color=darkseagreen4, key=1, label=string, style=dashed];
m30_250 -> m30_253  [color=darkseagreen4, key=1, label=Table, style=dashed];
m30_250 -> m30_254  [color=darkseagreen4, key=1, label=Table, style=dashed];
m30_252 -> m30_254  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_252 -> m30_255  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_255 -> m30_255  [color=darkseagreen4, key=1, label=i, style=dashed];
m30_257 -> m30_27  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_45  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_60  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_66  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_70  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_75  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_87  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_92  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_95  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_133  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_196  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_207  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_217  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_224  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_230  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_233  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_237  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_251  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m30_257 -> m30_254  [color=darkseagreen4, key=1, label="HangFire.Tests.States.StateSteps", style=dashed];
m31_1 -> m31_33  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m31_2 -> m31_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_3 -> m31_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_4 -> m31_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_5 -> m31_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_6 -> m31_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_8 -> m31_64  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_9 -> m31_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_11 -> m31_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_12 -> m31_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_13 -> m31_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_14 -> m31_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_15 -> m31_105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_16 -> m31_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_17 -> m31_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_18 -> m31_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_19 -> m31_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_20 -> m31_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_21 -> m31_135  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_22 -> m31_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_23 -> m31_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_24 -> m31_152  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_25 -> m31_158  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_26 -> m31_162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_27 -> m31_166  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_28 -> m31_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m31_209 -> m31_211  [color=darkseagreen4, key=1, label=match, style=dashed];
m31_203 -> m31_211  [color=darkseagreen4, key=1, label=pathHandlerFactory, style=dashed];
m31_204 -> m31_207  [color=darkseagreen4, key=1, label=pattern, style=dashed];
m31_145 -> m31_150  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m31_152 -> m31_156  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m31_65 -> m31_68  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_83 -> m31_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_94 -> m31_97  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_100 -> m31_103  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_114 -> m31_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_124 -> m31_127  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_130 -> m31_133  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_140 -> m31_143  [color=darkseagreen4, key=1, label=string, style=dashed];
m31_182 -> m31_185  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m31_182 -> m31_186  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m31_182 -> m31_187  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m31_182 -> m31_192  [color=darkseagreen4, key=1, label=HttpContext, style=dashed];
m31_190 -> m31_193  [color=darkseagreen4, key=1, label=handler, style=dashed];
m31_229 -> m31_150  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m31_230 -> m31_156  [color=darkseagreen4, key=1, label="System.Text.RegularExpressions.Match", style=dashed];
m33_167 -> m33_169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_90 -> m33_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_19 -> m33_60  [color=green, key=1, label=index, style=dashed];
m33_60 -> m33_60  [color=darkseagreen4, key=1, label=index, style=dashed];
m33_246 -> m33_250  [color=darkseagreen4, key=1, label=exception, style=dashed];
m33_246 -> m33_258  [color=darkseagreen4, key=1, label=exception, style=dashed];
m33_246 -> m33_261  [color=darkseagreen4, key=1, label=exception, style=dashed];
m33_247 -> m33_254  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_250 -> m33_257  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_237 -> m33_239  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_7 -> m33_17  [color=green, key=1, label=pager, style=dashed];
m33_7 -> m33_72  [color=green, key=1, label=pager, style=dashed];
m33_8 -> m33_20  [color=darkseagreen4, key=1, label=failedJobs, style=dashed];
m33_8 -> m33_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_10 -> m33_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_10 -> m33_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_13 -> m33_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_20 -> m33_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_26 -> m33_26  [color=green, key=1, label=job, style=dashed];
m33_26 -> m33_28  [color=green, key=1, label=job, style=dashed];
m33_24 -> m33_26  [color=green, key=1, label=job, style=dashed];
m33_24 -> m33_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_28 -> m33_28  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_28 -> m33_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_28 -> m33_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_30 -> m33_30  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_30 -> m33_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_37 -> m33_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_37 -> m33_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_39 -> m33_39  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_39 -> m33_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_42 -> m33_42  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_42 -> m33_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_42 -> m33_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_12 -> m33_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_22 -> m33_24  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_22 -> m33_22  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_33 -> m33_33  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_33 -> m33_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_35 -> m33_37  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_35 -> m33_35  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_44 -> m33_44  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_44 -> m33_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_46 -> m33_46  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_46 -> m33_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_49 -> m33_49  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_49 -> m33_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_51 -> m33_51  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_51 -> m33_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_55 -> m33_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_55 -> m33_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_64 -> m33_64  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_68 -> m33_68  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_58 -> m33_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_53 -> m33_55  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_53 -> m33_58  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_53 -> m33_53  [color=darkseagreen4, key=1, label=job, style=dashed];
m33_176 -> m33_181  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_179 -> m33_184  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_190 -> m33_192  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_116 -> m33_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_119 -> m33_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_120 -> m33_131  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_215 -> m33_222  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_218 -> m33_228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_219 -> m33_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_92 -> m33_18  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_26  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_38  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_41  [color=green, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_12  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_13  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_15  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_16  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_17  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_21  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_22  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_23  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_24  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_25  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_27  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_30  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_31  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_32  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_33  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_34  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_35  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_37  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_40  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_43  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_44  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_45  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_46  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_47  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_48  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_49  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_50  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_51  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_52  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_54  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_55  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_56  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_59  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_60  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_61  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_63  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_64  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_65  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_68  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_69  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_71  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_92 -> m33_72  [color=darkseagreen4, key=1, label="HangFire.Web.Pages.FailedJobsPage", style=dashed];
m33_265 -> m33_269  [color=darkseagreen4, key=1, label=exception, style=dashed];
m33_265 -> m33_276  [color=darkseagreen4, key=1, label=exception, style=dashed];
m33_265 -> m33_279  [color=darkseagreen4, key=1, label=exception, style=dashed];
m33_266 -> m33_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_269 -> m33_275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_282 -> m33_289  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_285 -> m33_292  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_170 -> m33_172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_240 -> m33_242  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_258 -> m33_260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_276 -> m33_278  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_136 -> m33_143  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_137 -> m33_146  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_138 -> m33_150  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_106 -> m33_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_196 -> m33_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_199 -> m33_208  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_200 -> m33_211  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_298 -> m33_8  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_12  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_49  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_13  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_87  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_90  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_106  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_116  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_119  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_120  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_136  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_137  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_138  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_167  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_176  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_179  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_190  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_196  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_199  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_200  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_215  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_218  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_219  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_237  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_247  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_250  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_266  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_269  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_298 -> m33_285  [color=darkseagreen4, key=1, label="Hangfire.Core.Tests.Server.WorkerFacts", style=dashed];
m33_302 -> m33_258  [color=darkseagreen4, key=1, label=exception, style=dashed];
m33_302 -> m33_261  [color=darkseagreen4, key=1, label=exception, style=dashed];
m33_303 -> m33_276  [color=darkseagreen4, key=1, label=exception, style=dashed];
m33_303 -> m33_279  [color=darkseagreen4, key=1, label=exception, style=dashed];
}
